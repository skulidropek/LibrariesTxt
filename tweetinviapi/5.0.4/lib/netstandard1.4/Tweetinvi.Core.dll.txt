public interface Tweetinvi.Auth.IAuthenticationRequestStore {
    public abstract virtual string AppendAuthenticationRequestIdToCallbackUrl(string callbackUrl, string authenticationRequestId);
    public abstract virtual string ExtractAuthenticationRequestIdFromCallbackUrl(string callbackUrl);
    public abstract virtual Task`1<IAuthenticationRequest> GetAuthenticationRequestFromIdAsync(string authenticationRequestTokenId);
    public abstract virtual Task AddAuthenticationTokenAsync(string authenticationRequestId, IAuthenticationRequest authenticationRequest);
    public abstract virtual Task RemoveAuthenticationTokenAsync(string authenticationRequestId);
}
public class Tweetinvi.Auth.LocalAuthenticationRequestStore : object {
    private ConcurrentDictionary`2<string, IAuthenticationRequest> _store;
    [CompilerGeneratedAttribute]
private string <CallbackTokenIdParameterName>k__BackingField;
    private string CallbackTokenIdParameterName { get; }
    [CompilerGeneratedAttribute]
private string get_CallbackTokenIdParameterName();
    public virtual string ExtractAuthenticationRequestIdFromCallbackUrl(string callbackUrl);
    public virtual string AppendAuthenticationRequestIdToCallbackUrl(string callbackUrl, string authenticationRequestId);
    public virtual Task`1<IAuthenticationRequest> GetAuthenticationRequestFromIdAsync(string authenticationRequestTokenId);
    public virtual Task AddAuthenticationTokenAsync(string authenticationRequestId, IAuthenticationRequest authenticationRequest);
    public virtual Task RemoveAuthenticationTokenAsync(string authenticationRequestId);
}
public interface Tweetinvi.Client.IAccountActivityClient {
    public IAccountActivityClientParametersValidator ParametersValidator { get; }
    public abstract virtual IAccountActivityClientParametersValidator get_ParametersValidator();
    public abstract virtual IAccountActivityRequestHandler CreateRequestHandler();
    public abstract virtual Task`1<IWebhook> CreateAccountActivityWebhookAsync(string environment, string webhookUrl);
    public abstract virtual Task`1<IWebhook> CreateAccountActivityWebhookAsync(ICreateAccountActivityWebhookParameters parameters);
    public abstract virtual Task`1<IWebhookEnvironment[]> GetAccountActivityWebhookEnvironmentsAsync();
    public abstract virtual Task`1<IWebhookEnvironment[]> GetAccountActivityWebhookEnvironmentsAsync(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public abstract virtual Task`1<IWebhook[]> GetAccountActivityEnvironmentWebhooksAsync(string environment);
    public abstract virtual Task`1<IWebhook[]> GetAccountActivityEnvironmentWebhooksAsync(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public abstract virtual Task DeleteAccountActivityWebhookAsync(string environment, string webhookId);
    public abstract virtual Task DeleteAccountActivityWebhookAsync(string environment, IWebhook webhook);
    public abstract virtual Task DeleteAccountActivityWebhookAsync(IDeleteAccountActivityWebhookParameters parameters);
    public abstract virtual Task TriggerAccountActivityWebhookCRCAsync(string environment, string webhookId);
    public abstract virtual Task TriggerAccountActivityWebhookCRCAsync(ITriggerAccountActivityWebhookCRCParameters parameters);
    public abstract virtual Task SubscribeToAccountActivityAsync(string environment);
    public abstract virtual Task SubscribeToAccountActivityAsync(ISubscribeToAccountActivityParameters parameters);
    public abstract virtual Task`1<IWebhookSubscriptionsCount> CountAccountActivitySubscriptionsAsync();
    public abstract virtual Task`1<IWebhookSubscriptionsCount> CountAccountActivitySubscriptionsAsync(ICountAccountActivitySubscriptionsParameters parameters);
    public abstract virtual Task`1<bool> IsAccountSubscribedToAccountActivityAsync(string environment);
    public abstract virtual Task`1<bool> IsAccountSubscribedToAccountActivityAsync(IIsAccountSubscribedToAccountActivityParameters parameters);
    public abstract virtual Task`1<IWebhookEnvironmentSubscriptions> GetAccountActivitySubscriptionsAsync(string environment);
    public abstract virtual Task`1<IWebhookEnvironmentSubscriptions> GetAccountActivitySubscriptionsAsync(IGetAccountActivitySubscriptionsParameters parameters);
    public abstract virtual Task UnsubscribeFromAccountActivityAsync(string environment, long userId);
    public abstract virtual Task UnsubscribeFromAccountActivityAsync(IUnsubscribeFromAccountActivityParameters parameters);
}
public interface Tweetinvi.Client.IAccountSettingsClient {
    public IAccountSettingsClientParametersValidator ParametersValidator { get; }
    public abstract virtual IAccountSettingsClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<IAccountSettings> GetAccountSettingsAsync();
    public abstract virtual Task`1<IAccountSettings> GetAccountSettingsAsync(IGetAccountSettingsParameters parameters);
    public abstract virtual Task`1<IAccountSettings> UpdateAccountSettingsAsync(IUpdateAccountSettingsParameters parameters);
    public abstract virtual Task`1<IAuthenticatedUser> UpdateProfileAsync(IUpdateProfileParameters parameters);
    public abstract virtual Task`1<IUser> UpdateProfileImageAsync(Byte[] binary);
    public abstract virtual Task`1<IUser> UpdateProfileImageAsync(IUpdateProfileImageParameters parameters);
    public abstract virtual Task UpdateProfileBannerAsync(Byte[] binary);
    public abstract virtual Task UpdateProfileBannerAsync(IUpdateProfileBannerParameters parameters);
    public abstract virtual Task RemoveProfileBannerAsync();
    public abstract virtual Task RemoveProfileBannerAsync(IRemoveProfileBannerParameters parameters);
}
public interface Tweetinvi.Client.IAuthClient {
    public IAuthClientParametersValidator ParametersValidator { get; }
    public abstract virtual IAuthClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<string> CreateBearerTokenAsync();
    public abstract virtual Task`1<string> CreateBearerTokenAsync(ICreateBearerTokenParameters parameters);
    public abstract virtual Task InitializeClientBearerTokenAsync();
    public abstract virtual Task`1<IAuthenticationRequest> RequestAuthenticationUrlAsync();
    public abstract virtual Task`1<IAuthenticationRequest> RequestAuthenticationUrlAsync(string callbackUrl);
    public abstract virtual Task`1<IAuthenticationRequest> RequestAuthenticationUrlAsync(Uri callbackUri);
    public abstract virtual Task`1<IAuthenticationRequest> RequestAuthenticationUrlAsync(IRequestAuthUrlParameters parameters);
    public abstract virtual Task`1<ITwitterCredentials> RequestCredentialsFromVerifierCodeAsync(string verifierCode, IAuthenticationRequest authenticationRequest);
    public abstract virtual Task`1<ITwitterCredentials> RequestCredentialsAsync(IRequestCredentialsParameters parameters);
    public abstract virtual Task`1<ITwitterCredentials> RequestCredentialsFromCallbackUrlAsync(string callbackUrl, IAuthenticationRequest authenticationRequest);
    public abstract virtual Task`1<ITwitterCredentials> RequestCredentialsFromCallbackUrlAsync(Uri callbackUri, IAuthenticationRequest authenticationRequest);
    public abstract virtual Task`1<InvalidateTokenResponse> InvalidateBearerTokenAsync();
    public abstract virtual Task`1<InvalidateTokenResponse> InvalidateBearerTokenAsync(IInvalidateBearerTokenParameters parameters);
    public abstract virtual Task`1<InvalidateTokenResponse> InvalidateAccessTokenAsync();
    public abstract virtual Task`1<InvalidateTokenResponse> InvalidateAccessTokenAsync(IInvalidateAccessTokenParameters parameters);
}
public interface Tweetinvi.Client.IExecuteClient {
    public abstract virtual Task`1<ITwitterResult`1<T>> AdvanceRequestAsync(Action`1<ITwitterRequest> configureRequest);
    public abstract virtual Task`1<ITwitterResult> AdvanceRequestAsync(Action`1<ITwitterRequest> configureRequest);
    public abstract virtual Task`1<ITwitterResult`1<T>> RequestAsync(Action`1<ITwitterQuery> configureQuery);
    public abstract virtual Task`1<ITwitterResult> RequestAsync(Action`1<ITwitterQuery> configureQuery);
}
public interface Tweetinvi.Client.IHelpClient {
    public IHelpClientParametersValidator ParametersValidator { get; }
    public abstract virtual IHelpClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<ITwitterConfiguration> GetTwitterConfigurationAsync();
    public abstract virtual Task`1<ITwitterConfiguration> GetTwitterConfigurationAsync(IGetTwitterConfigurationParameters parameters);
    public abstract virtual Task`1<SupportedLanguage[]> GetSupportedLanguagesAsync();
    public abstract virtual Task`1<SupportedLanguage[]> GetSupportedLanguagesAsync(IGetSupportedLanguagesParameters parameters);
    public abstract virtual Task`1<IPlace> GetPlaceAsync(string placeId);
    public abstract virtual Task`1<IPlace> GetPlaceAsync(IGetPlaceParameters parameters);
    public abstract virtual Task`1<IPlace[]> SearchGeoAsync(IGeoSearchParameters parameters);
    public abstract virtual Task`1<IPlace[]> SearchGeoReverseAsync(ICoordinates coordinates);
    public abstract virtual Task`1<IPlace[]> SearchGeoReverseAsync(IGeoSearchReverseParameters parameters);
}
public interface Tweetinvi.Client.IJsonClient {
    public abstract virtual string Serialize(TFrom obj);
    public abstract virtual string Serialize(TFrom obj);
    public abstract virtual TTo Deserialize(string json);
}
public interface Tweetinvi.Client.IListsClient {
    public ITwitterListsClientParametersValidator ParametersValidator { get; }
    public abstract virtual ITwitterListsClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<ITwitterList> CreateListAsync(string name);
    public abstract virtual Task`1<ITwitterList> CreateListAsync(string name, PrivacyMode privacyMode);
    public abstract virtual Task`1<ITwitterList> CreateListAsync(ICreateListParameters parameters);
    public abstract virtual Task`1<ITwitterList> GetListAsync(long listId);
    public abstract virtual Task`1<ITwitterList> GetListAsync(string slug, IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList> GetListAsync(ITwitterListIdentifier listId);
    public abstract virtual Task`1<ITwitterList> GetListAsync(IGetListParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByAccountAsync();
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByAccountAsync(IGetListsSubscribedByAccountParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByUserAsync(long userId);
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByUserAsync(string username);
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList[]> GetListsSubscribedByUserAsync(IGetListsSubscribedByUserParameters parameters);
    public abstract virtual Task`1<ITwitterList> UpdateListAsync(IUpdateListParameters parameters);
    public abstract virtual Task`1<ITwitterList> DestroyListAsync(long listId);
    public abstract virtual Task`1<ITwitterList> DestroyListAsync(string slug, IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList> DestroyListAsync(ITwitterListIdentifier listId);
    public abstract virtual Task`1<ITwitterList> DestroyListAsync(IDestroyListParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByAccountAsync();
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByAccountAsync(IGetListsOwnedByAccountParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByAccountIterator();
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByAccountIterator(IGetListsOwnedByAccountParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByUserAsync(long userId);
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByUserAsync(string username);
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList[]> GetListsOwnedByUserAsync(IGetListsOwnedByUserParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByUserIterator(long userId);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByUserIterator(string username);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByUserIterator(IUser user);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetListsOwnedByUserIterator(IGetListsOwnedByUserParameters parameters);
    public abstract virtual Task`1<ITwitterList> AddMemberToListAsync(long listId, long userId);
    public abstract virtual Task`1<ITwitterList> AddMemberToListAsync(ITwitterListIdentifier list, long userId);
    public abstract virtual Task`1<ITwitterList> AddMemberToListAsync(ITwitterListIdentifier list, string username);
    public abstract virtual Task`1<ITwitterList> AddMemberToListAsync(ITwitterListIdentifier list, IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList> AddMemberToListAsync(IAddMemberToListParameters parameters);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(long listId, IEnumerable`1<long> userIds);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(long listId, IEnumerable`1<string> usernames);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(long listId, IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(ITwitterListIdentifier list, IEnumerable`1<long> userIds);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(ITwitterListIdentifier list, IEnumerable`1<string> usernames);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(ITwitterListIdentifier list, IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<ITwitterList> AddMembersToListAsync(IAddMembersToListParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetAccountListMembershipsAsync();
    public abstract virtual Task`1<ITwitterList[]> GetAccountListMembershipsAsync(IGetAccountListMembershipsParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetAccountListMembershipsIterator();
    public abstract virtual ITwitterIterator`1<ITwitterList> GetAccountListMembershipsIterator(IGetAccountListMembershipsParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetUserListMembershipsAsync(long userId);
    public abstract virtual Task`1<ITwitterList[]> GetUserListMembershipsAsync(string username);
    public abstract virtual Task`1<ITwitterList[]> GetUserListMembershipsAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList[]> GetUserListMembershipsAsync(IGetUserListMembershipsParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListMembershipsIterator(long userId);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListMembershipsIterator(string username);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListMembershipsIterator(IUserIdentifier user);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListMembershipsIterator(IGetUserListMembershipsParameters parameters);
    public abstract virtual Task`1<IUser[]> GetMembersOfListAsync(long listId);
    public abstract virtual Task`1<IUser[]> GetMembersOfListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<IUser[]> GetMembersOfListAsync(IGetMembersOfListParameters parameters);
    public abstract virtual ITwitterIterator`1<IUser> GetMembersOfListIterator(long listId);
    public abstract virtual ITwitterIterator`1<IUser> GetMembersOfListIterator(ITwitterListIdentifier list);
    public abstract virtual ITwitterIterator`1<IUser> GetMembersOfListIterator(IGetMembersOfListParameters parameters);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(long listId, long userId);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(long listId, string username);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(long listId, IUserIdentifier user);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(ITwitterListIdentifier list, long userId);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(ITwitterListIdentifier list, string username);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(ITwitterListIdentifier list, IUserIdentifier user);
    public abstract virtual Task`1<bool> CheckIfUserIsMemberOfListAsync(ICheckIfUserIsMemberOfListParameters parameters);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(long listId, long userId);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(long listId, string username);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(long listId, IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(ITwitterListIdentifier list, long userId);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(ITwitterListIdentifier list, string username);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(ITwitterListIdentifier list, IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList> RemoveMemberFromListAsync(IRemoveMemberFromListParameters parameters);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(long listId, IEnumerable`1<long> userIds);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(long listId, IEnumerable`1<string> usernames);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(long listId, IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(ITwitterListIdentifier list, IEnumerable`1<long> userIds);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(ITwitterListIdentifier list, IEnumerable`1<string> usernames);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(ITwitterListIdentifier list, IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<ITwitterList> RemoveMembersFromListAsync(IRemoveMembersFromListParameters parameters);
    public abstract virtual Task`1<ITwitterList> SubscribeToListAsync(long listId);
    public abstract virtual Task`1<ITwitterList> SubscribeToListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<ITwitterList> SubscribeToListAsync(ISubscribeToListParameters parameters);
    public abstract virtual Task`1<ITwitterList> UnsubscribeFromListAsync(long listId);
    public abstract virtual Task`1<ITwitterList> UnsubscribeFromListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<ITwitterList> UnsubscribeFromListAsync(IUnsubscribeFromListParameters parameters);
    public abstract virtual Task`1<IUser[]> GetListSubscribersAsync(long listId);
    public abstract virtual Task`1<IUser[]> GetListSubscribersAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<IUser[]> GetListSubscribersAsync(IGetListSubscribersParameters parameters);
    public abstract virtual ITwitterIterator`1<IUser> GetListSubscribersIterator(long listId);
    public abstract virtual ITwitterIterator`1<IUser> GetListSubscribersIterator(ITwitterListIdentifier list);
    public abstract virtual ITwitterIterator`1<IUser> GetListSubscribersIterator(IGetListSubscribersParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetAccountListSubscriptionsAsync();
    public abstract virtual Task`1<ITwitterList[]> GetAccountListSubscriptionsAsync(IGetAccountListSubscriptionsParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetAccountListSubscriptionsIterator();
    public abstract virtual ITwitterIterator`1<ITwitterList> GetAccountListSubscriptionsIterator(IGetAccountListSubscriptionsParameters parameters);
    public abstract virtual Task`1<ITwitterList[]> GetUserListSubscriptionsAsync(long userId);
    public abstract virtual Task`1<ITwitterList[]> GetUserListSubscriptionsAsync(string username);
    public abstract virtual Task`1<ITwitterList[]> GetUserListSubscriptionsAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITwitterList[]> GetUserListSubscriptionsAsync(IGetUserListSubscriptionsParameters parameters);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListSubscriptionsIterator(long userId);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListSubscriptionsIterator(string username);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListSubscriptionsIterator(IUserIdentifier user);
    public abstract virtual ITwitterIterator`1<ITwitterList> GetUserListSubscriptionsIterator(IGetUserListSubscriptionsParameters parameters);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(long listId, long userId);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(long listId, string username);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(long listId, IUserIdentifier user);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(ITwitterListIdentifier list, long userId);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(ITwitterListIdentifier list, string username);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(ITwitterListIdentifier list, IUserIdentifier user);
    public abstract virtual Task`1<bool> CheckIfUserIsSubscriberOfListAsync(ICheckIfUserIsSubscriberOfListParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetTweetsFromListAsync(long listId);
    public abstract virtual Task`1<ITweet[]> GetTweetsFromListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<ITweet[]> GetTweetsFromListAsync(IGetTweetsFromListParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetTweetsFromListIterator(long listId);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetTweetsFromListIterator(ITwitterListIdentifier list);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetTweetsFromListIterator(IGetTweetsFromListParameters parameters);
}
public interface Tweetinvi.Client.IMessagesClient {
    public IMessagesClientParametersValidator ParametersValidator { get; }
    public abstract virtual IMessagesClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<IMessage> PublishMessageAsync(string text, IUserIdentifier recipient);
    public abstract virtual Task`1<IMessage> PublishMessageAsync(string text, long recipientId);
    public abstract virtual Task`1<IMessage> PublishMessageAsync(IPublishMessageParameters parameters);
    public abstract virtual Task`1<IMessage> GetMessageAsync(long messageId);
    public abstract virtual Task`1<IMessage> GetMessageAsync(IGetMessageParameters parameters);
    public abstract virtual Task`1<IMessage[]> GetMessagesAsync();
    public abstract virtual Task`1<IMessage[]> GetMessagesAsync(IGetMessagesParameters parameters);
    public abstract virtual ITwitterIterator`1<IMessage> GetMessagesIterator();
    public abstract virtual ITwitterIterator`1<IMessage> GetMessagesIterator(IGetMessagesParameters parameters);
    public abstract virtual Task DestroyMessageAsync(long messageId);
    public abstract virtual Task DestroyMessageAsync(IMessage message);
    public abstract virtual Task DestroyMessageAsync(IDeleteMessageParameters parameters);
}
public interface Tweetinvi.Client.IRateLimitsClient {
    public abstract virtual Task InitializeRateLimitsManagerAsync();
    public abstract virtual Task`1<ICredentialsRateLimits> GetRateLimitsAsync();
    public abstract virtual Task`1<ICredentialsRateLimits> GetRateLimitsAsync(RateLimitsSource from);
    public abstract virtual Task`1<ICredentialsRateLimits> GetRateLimitsAsync(IGetRateLimitsParameters parameters);
    public abstract virtual Task`1<IEndpointRateLimit> GetEndpointRateLimitAsync(string url);
    public abstract virtual Task`1<IEndpointRateLimit> GetEndpointRateLimitAsync(string url, RateLimitsSource from);
    public abstract virtual Task`1<IEndpointRateLimit> GetEndpointRateLimitAsync(IGetEndpointRateLimitsParameters parameters);
    public abstract virtual Task WaitForQueryRateLimitAsync(string url);
    public abstract virtual Task WaitForQueryRateLimitAsync(string url, RateLimitsSource from);
    public abstract virtual Task WaitForQueryRateLimitAsync(IEndpointRateLimit endpointRateLimit);
    public abstract virtual Task ClearRateLimitCacheAsync(IReadOnlyTwitterCredentials credentials);
    public abstract virtual Task ClearRateLimitCacheAsync();
    public abstract virtual Task ClearAllRateLimitCacheAsync();
}
public interface Tweetinvi.Client.IRawExecutors {
    public IAccountActivityRequester AccountActivity { get; }
    public IAccountSettingsRequester AccountSettings { get; }
    public IAuthRequester Auth { get; }
    public IHelpRequester Help { get; }
    public ITwitterListsRequester Lists { get; }
    public ISearchRequester Search { get; }
    public ITimelinesRequester Timelines { get; }
    public ITrendsRequester Trends { get; }
    public ITweetsRequester Tweets { get; }
    public IUploadRequester Upload { get; }
    public IUsersRequester Users { get; }
    public ISearchV2Requester SearchV2 { get; }
    public ITweetsV2Requester TweetsV2 { get; }
    public IUsersV2Requester UsersV2 { get; }
    public abstract virtual IAccountActivityRequester get_AccountActivity();
    public abstract virtual IAccountSettingsRequester get_AccountSettings();
    public abstract virtual IAuthRequester get_Auth();
    public abstract virtual IHelpRequester get_Help();
    public abstract virtual ITwitterListsRequester get_Lists();
    public abstract virtual ISearchRequester get_Search();
    public abstract virtual ITimelinesRequester get_Timelines();
    public abstract virtual ITrendsRequester get_Trends();
    public abstract virtual ITweetsRequester get_Tweets();
    public abstract virtual IUploadRequester get_Upload();
    public abstract virtual IUsersRequester get_Users();
    public abstract virtual ISearchV2Requester get_SearchV2();
    public abstract virtual ITweetsV2Requester get_TweetsV2();
    public abstract virtual IUsersV2Requester get_UsersV2();
}
public interface Tweetinvi.Client.ISearchClient {
    public ISearchClientParametersValidator ParametersValidator { get; }
    public abstract virtual ISearchClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<ITweet[]> SearchTweetsAsync(string query);
    public abstract virtual Task`1<ITweet[]> SearchTweetsAsync(IGeoCode geoCode);
    public abstract virtual Task`1<ITweet[]> SearchTweetsAsync(ISearchTweetsParameters parameters);
    public abstract virtual Task`1<ISearchResults> SearchTweetsWithMetadataAsync(string query);
    public abstract virtual Task`1<ISearchResults> SearchTweetsWithMetadataAsync(ISearchTweetsParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetSearchTweetsIterator(string query);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetSearchTweetsIterator(ISearchTweetsParameters parameters);
    public abstract virtual ITweet[] FilterTweets(ITweet[] tweets, Nullable`1<OnlyGetTweetsThatAre> filter, bool tweetsMustContainGeoInformation);
    public abstract virtual Task`1<IUser[]> SearchUsersAsync(string query);
    public abstract virtual Task`1<IUser[]> SearchUsersAsync(ISearchUsersParameters parameters);
    public abstract virtual ITwitterIterator`2<IUser, Nullable`1<int>> GetSearchUsersIterator(string query);
    public abstract virtual ITwitterIterator`2<IUser, Nullable`1<int>> GetSearchUsersIterator(ISearchUsersParameters parameters);
    public abstract virtual Task`1<ISavedSearch> CreateSavedSearchAsync(string query);
    public abstract virtual Task`1<ISavedSearch> CreateSavedSearchAsync(ICreateSavedSearchParameters parameters);
    public abstract virtual Task`1<ISavedSearch> GetSavedSearchAsync(long savedSearchId);
    public abstract virtual Task`1<ISavedSearch> GetSavedSearchAsync(IGetSavedSearchParameters parameters);
    public abstract virtual Task`1<ISavedSearch[]> ListSavedSearchesAsync();
    public abstract virtual Task`1<ISavedSearch[]> ListSavedSearchesAsync(IListSavedSearchesParameters parameters);
    public abstract virtual Task`1<ISavedSearch> DestroySavedSearchAsync(long savedSearchId);
    public abstract virtual Task`1<ISavedSearch> DestroySavedSearchAsync(ISavedSearch savedSearch);
    public abstract virtual Task`1<ISavedSearch> DestroySavedSearchAsync(IDestroySavedSearchParameters parameters);
}
public interface Tweetinvi.Client.IStreamsClient {
    public abstract virtual ISampleStream CreateSampleStream();
    public abstract virtual ISampleStream CreateSampleStream(ICreateSampleStreamParameters parameters);
    public abstract virtual IFilteredStream CreateFilteredStream();
    public abstract virtual IFilteredStream CreateFilteredStream(ICreateFilteredTweetStreamParameters parameters);
    public abstract virtual ITweetStream CreateTweetStream();
    public abstract virtual ITweetStream CreateTweetStream(ICreateTweetStreamParameters parameters);
    public abstract virtual ITrackedStream CreateTrackedTweetStream();
    public abstract virtual ITrackedStream CreateTrackedTweetStream(ICreateTrackedTweetStreamParameters parameters);
}
public interface Tweetinvi.Client.ITimelinesClient {
    public ITimelineClientParametersValidator ParametersValidator { get; }
    public abstract virtual ITimelineClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<ITweet[]> GetHomeTimelineAsync();
    public abstract virtual Task`1<ITweet[]> GetHomeTimelineAsync(IGetHomeTimelineParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetHomeTimelineIterator();
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetHomeTimelineIterator(IGetHomeTimelineParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetMentionsTimelineAsync();
    public abstract virtual Task`1<ITweet[]> GetMentionsTimelineAsync(IGetMentionsTimelineParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetMentionsTimelineIterator();
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetMentionsTimelineIterator(IGetMentionsTimelineParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetUserTimelineAsync(long userId);
    public abstract virtual Task`1<ITweet[]> GetUserTimelineAsync(string username);
    public abstract virtual Task`1<ITweet[]> GetUserTimelineAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITweet[]> GetUserTimelineAsync(IGetUserTimelineParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserTimelineIterator(long userId);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserTimelineIterator(string username);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserTimelineIterator(IUserIdentifier user);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserTimelineIterator(IGetUserTimelineParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetRetweetsOfMeTimelineAsync();
    public abstract virtual Task`1<ITweet[]> GetRetweetsOfMeTimelineAsync(IGetRetweetsOfMeTimelineParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetRetweetsOfMeTimelineIterator();
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetRetweetsOfMeTimelineIterator(IGetRetweetsOfMeTimelineParameters parameters);
}
public interface Tweetinvi.Client.ITrendsClient {
    public ITrendsClientParametersValidator ParametersValidator { get; }
    public abstract virtual ITrendsClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<IGetTrendsAtResult> GetPlaceTrendsAtAsync(long woeid);
    public abstract virtual Task`1<IGetTrendsAtResult> GetPlaceTrendsAtAsync(IGetTrendsAtParameters parameters);
    public abstract virtual Task`1<ITrendLocation[]> GetTrendLocationsAsync();
    public abstract virtual Task`1<ITrendLocation[]> GetTrendLocationsAsync(IGetTrendsLocationParameters parameters);
    public abstract virtual Task`1<ITrendLocation[]> GetTrendsLocationCloseToAsync(double latitude, double longitude);
    public abstract virtual Task`1<ITrendLocation[]> GetTrendsLocationCloseToAsync(ICoordinates coordinates);
    public abstract virtual Task`1<ITrendLocation[]> GetTrendsLocationCloseToAsync(IGetTrendsLocationCloseToParameters parameters);
}
public interface Tweetinvi.Client.ITweetsClient {
    public ITweetsClientParametersValidator ParametersValidator { get; }
    public abstract virtual ITweetsClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<ITweet> GetTweetAsync(long tweetId);
    public abstract virtual Task`1<ITweet> GetTweetAsync(IGetTweetParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetTweetsAsync(Int64[] tweetIds);
    public abstract virtual Task`1<ITweet[]> GetTweetsAsync(ITweetIdentifier[] tweets);
    public abstract virtual Task`1<ITweet[]> GetTweetsAsync(IGetTweetsParameters parameters);
    public abstract virtual Task`1<ITweet> PublishTweetAsync(string text);
    public abstract virtual Task`1<ITweet> PublishTweetAsync(IPublishTweetParameters parameters);
    public abstract virtual Task DestroyTweetAsync(long tweetId);
    public abstract virtual Task DestroyTweetAsync(ITweetIdentifier tweet);
    public abstract virtual Task DestroyTweetAsync(ITweet tweet);
    public abstract virtual Task DestroyTweetAsync(ITweetDTO tweet);
    public abstract virtual Task DestroyTweetAsync(IDestroyTweetParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetRetweetsAsync(long tweetId);
    public abstract virtual Task`1<ITweet[]> GetRetweetsAsync(ITweetIdentifier tweet);
    public abstract virtual Task`1<ITweet[]> GetRetweetsAsync(IGetRetweetsParameters parameters);
    public abstract virtual Task`1<ITweet> PublishRetweetAsync(long tweetId);
    public abstract virtual Task`1<ITweet> PublishRetweetAsync(ITweetIdentifier tweet);
    public abstract virtual Task`1<ITweet> PublishRetweetAsync(IPublishRetweetParameters parameters);
    public abstract virtual Task DestroyRetweetAsync(long retweetId);
    public abstract virtual Task DestroyRetweetAsync(ITweetIdentifier retweet);
    public abstract virtual Task DestroyRetweetAsync(IDestroyRetweetParameters parameters);
    public abstract virtual Task`1<Int64[]> GetRetweeterIdsAsync(long tweetId);
    public abstract virtual Task`1<Int64[]> GetRetweeterIdsAsync(ITweetIdentifier tweet);
    public abstract virtual Task`1<Int64[]> GetRetweeterIdsAsync(IGetRetweeterIdsParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetRetweeterIdsIterator(long tweetId);
    public abstract virtual ITwitterIterator`1<long> GetRetweeterIdsIterator(ITweetIdentifier tweet);
    public abstract virtual ITwitterIterator`1<long> GetRetweeterIdsIterator(IGetRetweeterIdsParameters parameters);
    public abstract virtual Task`1<ITweet[]> GetUserFavoriteTweetsAsync(long userId);
    public abstract virtual Task`1<ITweet[]> GetUserFavoriteTweetsAsync(string username);
    public abstract virtual Task`1<ITweet[]> GetUserFavoriteTweetsAsync(IUserIdentifier user);
    public abstract virtual Task`1<ITweet[]> GetUserFavoriteTweetsAsync(IGetUserFavoriteTweetsParameters parameters);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserFavoriteTweetsIterator(long userId);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserFavoriteTweetsIterator(string username);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserFavoriteTweetsIterator(IUserIdentifier user);
    public abstract virtual ITwitterIterator`2<ITweet, Nullable`1<long>> GetUserFavoriteTweetsIterator(IGetUserFavoriteTweetsParameters parameters);
    public abstract virtual Task FavoriteTweetAsync(long tweetId);
    public abstract virtual Task FavoriteTweetAsync(ITweetIdentifier tweet);
    public abstract virtual Task FavoriteTweetAsync(ITweet tweet);
    public abstract virtual Task FavoriteTweetAsync(ITweetDTO tweet);
    public abstract virtual Task FavoriteTweetAsync(IFavoriteTweetParameters parameters);
    public abstract virtual Task UnfavoriteTweetAsync(long tweetId);
    public abstract virtual Task UnfavoriteTweetAsync(ITweetIdentifier tweet);
    public abstract virtual Task UnfavoriteTweetAsync(ITweet tweet);
    public abstract virtual Task UnfavoriteTweetAsync(ITweetDTO tweet);
    public abstract virtual Task UnfavoriteTweetAsync(IUnfavoriteTweetParameters parameters);
    public abstract virtual Task`1<IOEmbedTweet> GetOEmbedTweetAsync(ITweetIdentifier tweet);
    public abstract virtual Task`1<IOEmbedTweet> GetOEmbedTweetAsync(long tweetId);
    public abstract virtual Task`1<IOEmbedTweet> GetOEmbedTweetAsync(IGetOEmbedTweetParameters parameters);
}
public interface Tweetinvi.Client.IUploadClient {
    public IUploadClientParametersValidator ParametersValidator { get; }
    public abstract virtual IUploadClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<IMedia> UploadBinaryAsync(Byte[] binary);
    public abstract virtual Task`1<IMedia> UploadBinaryAsync(IUploadParameters parameters);
    public abstract virtual Task`1<IMedia> UploadTweetImageAsync(Byte[] binary);
    public abstract virtual Task`1<IMedia> UploadTweetImageAsync(IUploadTweetImageParameters parameters);
    public abstract virtual Task`1<IMedia> UploadMessageImageAsync(Byte[] binary);
    public abstract virtual Task`1<IMedia> UploadMessageImageAsync(IUploadMessageImageParameters parameters);
    public abstract virtual Task`1<IMedia> UploadTweetVideoAsync(Byte[] binary);
    public abstract virtual Task`1<IMedia> UploadTweetVideoAsync(IUploadTweetVideoParameters parameters);
    public abstract virtual Task`1<IMedia> UploadMessageVideoAsync(Byte[] binary);
    public abstract virtual Task`1<IMedia> UploadMessageVideoAsync(IUploadMessageVideoParameters parameters);
    public abstract virtual Task AddMediaMetadataAsync(IMediaMetadata metadata);
    public abstract virtual Task AddMediaMetadataAsync(IAddMediaMetadataParameters parameters);
    public abstract virtual Task`1<IUploadedMediaInfo> GetVideoProcessingStatusAsync(IMedia media);
    public abstract virtual Task WaitForMediaProcessingToGetAllMetadataAsync(IMedia media);
}
public interface Tweetinvi.Client.IUsersClient {
    public IUsersClientParametersValidator ParametersValidator { get; }
    public abstract virtual IUsersClientParametersValidator get_ParametersValidator();
    public abstract virtual Task`1<IAuthenticatedUser> GetAuthenticatedUserAsync();
    public abstract virtual Task`1<IAuthenticatedUser> GetAuthenticatedUserAsync(IGetAuthenticatedUserParameters parameters);
    public abstract virtual Task`1<IUser> GetUserAsync(long userId);
    public abstract virtual Task`1<IUser> GetUserAsync(string username);
    public abstract virtual Task`1<IUser> GetUserAsync(IUserIdentifier userIdentifier);
    public abstract virtual Task`1<IUser> GetUserAsync(IGetUserParameters parameters);
    public abstract virtual Task`1<IUser[]> GetUsersAsync(IEnumerable`1<long> userIds);
    public abstract virtual Task`1<IUser[]> GetUsersAsync(IEnumerable`1<string> usernames);
    public abstract virtual Task`1<IUser[]> GetUsersAsync(IEnumerable`1<IUserIdentifier> userIdentifiers);
    public abstract virtual Task`1<IUser[]> GetUsersAsync(IGetUsersParameters parameters);
    public abstract virtual Task`1<Int64[]> GetFriendIdsAsync(string username);
    public abstract virtual Task`1<Int64[]> GetFriendIdsAsync(long userId);
    public abstract virtual Task`1<Int64[]> GetFriendIdsAsync(IUserIdentifier user);
    public abstract virtual Task`1<Int64[]> GetFriendIdsAsync(IGetFriendIdsParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetFriendIdsIterator(string username);
    public abstract virtual ITwitterIterator`1<long> GetFriendIdsIterator(long userId);
    public abstract virtual ITwitterIterator`1<long> GetFriendIdsIterator(IUserIdentifier userIdentifier);
    public abstract virtual ITwitterIterator`1<long> GetFriendIdsIterator(IGetFriendIdsParameters parameters);
    public abstract virtual Task`1<IUser[]> GetFriendsAsync(long userId);
    public abstract virtual Task`1<IUser[]> GetFriendsAsync(string username);
    public abstract virtual Task`1<IUser[]> GetFriendsAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser[]> GetFriendsAsync(IGetFriendsParameters parameters);
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetFriendsIterator(IGetFriendsParameters parameters);
    public abstract virtual Task`1<Int64[]> GetFollowerIdsAsync(long userId);
    public abstract virtual Task`1<Int64[]> GetFollowerIdsAsync(string username);
    public abstract virtual Task`1<Int64[]> GetFollowerIdsAsync(IUserIdentifier user);
    public abstract virtual Task`1<Int64[]> GetFollowerIdsAsync(IGetFollowerIdsParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetFollowerIdsIterator(long userId);
    public abstract virtual ITwitterIterator`1<long> GetFollowerIdsIterator(string username);
    public abstract virtual ITwitterIterator`1<long> GetFollowerIdsIterator(IUserIdentifier userIdentifier);
    public abstract virtual ITwitterIterator`1<long> GetFollowerIdsIterator(IGetFollowerIdsParameters parameters);
    public abstract virtual Task`1<IUser[]> GetFollowersAsync(long userId);
    public abstract virtual Task`1<IUser[]> GetFollowersAsync(string username);
    public abstract virtual Task`1<IUser[]> GetFollowersAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser[]> GetFollowersAsync(IGetFollowersParameters parameters);
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetFollowersIterator(IGetFollowersParameters parameters);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(long sourceUserId, long targetUserId);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(long sourceUserId, string targetUsername);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(long sourceUserId, IUserIdentifier targetUser);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(string sourceUsername, long targetUserId);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(string sourceUsername, string targetUsername);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(string sourceUsername, IUserIdentifier targetUser);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(IUserIdentifier sourceUser, long targetUserId);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(IUserIdentifier sourceUser, string targetUsername);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(IUserIdentifier sourceUser, IUserIdentifier targetUser);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipBetweenAsync(IGetRelationshipBetweenParameters parameters);
    public abstract virtual Task`1<IUser> BlockUserAsync(long userId);
    public abstract virtual Task`1<IUser> BlockUserAsync(string username);
    public abstract virtual Task`1<IUser> BlockUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> BlockUserAsync(IBlockUserParameters parameters);
    public abstract virtual Task`1<IUser> UnblockUserAsync(long userId);
    public abstract virtual Task`1<IUser> UnblockUserAsync(string username);
    public abstract virtual Task`1<IUser> UnblockUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> UnblockUserAsync(IUnblockUserParameters parameters);
    public abstract virtual Task`1<IUser> ReportUserForSpamAsync(long userId);
    public abstract virtual Task`1<IUser> ReportUserForSpamAsync(string username);
    public abstract virtual Task`1<IUser> ReportUserForSpamAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> ReportUserForSpamAsync(IReportUserForSpamParameters parameters);
    public abstract virtual Task`1<Int64[]> GetBlockedUserIdsAsync();
    public abstract virtual Task`1<Int64[]> GetBlockedUserIdsAsync(IGetBlockedUserIdsParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetBlockedUserIdsIterator();
    public abstract virtual ITwitterIterator`1<long> GetBlockedUserIdsIterator(IGetBlockedUserIdsParameters parameters);
    public abstract virtual Task`1<IUser[]> GetBlockedUsersAsync();
    public abstract virtual Task`1<IUser[]> GetBlockedUsersAsync(IGetBlockedUsersParameters parameters);
    public abstract virtual ITwitterIterator`1<IUser> GetBlockedUsersIterator();
    public abstract virtual ITwitterIterator`1<IUser> GetBlockedUsersIterator(IGetBlockedUsersParameters parameters);
    public abstract virtual Task`1<IUser> FollowUserAsync(long userId);
    public abstract virtual Task`1<IUser> FollowUserAsync(string username);
    public abstract virtual Task`1<IUser> FollowUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> FollowUserAsync(IFollowUserParameters parameters);
    public abstract virtual Task`1<IUser> UnfollowUserAsync(long userId);
    public abstract virtual Task`1<IUser> UnfollowUserAsync(string username);
    public abstract virtual Task`1<IUser> UnfollowUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> UnfollowUserAsync(IUnfollowUserParameters parameters);
    public abstract virtual Task`1<Int64[]> GetUserIdsRequestingFriendshipAsync();
    public abstract virtual Task`1<Int64[]> GetUserIdsRequestingFriendshipAsync(IGetUserIdsRequestingFriendshipParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetUserIdsRequestingFriendshipIterator();
    public abstract virtual ITwitterIterator`1<long> GetUserIdsRequestingFriendshipIterator(IGetUserIdsRequestingFriendshipParameters parameters);
    public abstract virtual Task`1<IUser[]> GetUsersRequestingFriendshipAsync();
    public abstract virtual Task`1<IUser[]> GetUsersRequestingFriendshipAsync(IGetUsersRequestingFriendshipParameters parameters);
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetUsersRequestingFriendshipIterator();
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetUsersRequestingFriendshipIterator(IGetUsersRequestingFriendshipParameters parameters);
    public abstract virtual Task`1<Int64[]> GetUserIdsYouRequestedToFollowAsync();
    public abstract virtual Task`1<Int64[]> GetUserIdsYouRequestedToFollowAsync(IGetUserIdsYouRequestedToFollowParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetUserIdsYouRequestedToFollowIterator();
    public abstract virtual ITwitterIterator`1<long> GetUserIdsYouRequestedToFollowIterator(IGetUserIdsYouRequestedToFollowParameters parameters);
    public abstract virtual Task`1<IUser[]> GetUsersYouRequestedToFollowAsync();
    public abstract virtual Task`1<IUser[]> GetUsersYouRequestedToFollowAsync(IGetUsersYouRequestedToFollowParameters parameters);
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetUsersYouRequestedToFollowIterator();
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetUsersYouRequestedToFollowIterator(IGetUsersYouRequestedToFollowParameters parameters);
    public abstract virtual Task UpdateRelationshipAsync(IUpdateRelationshipParameters parameters);
    public abstract virtual Task`1<IUserDictionary`1<IRelationshipState>> GetRelationshipsWithAsync(Int64[] userIds);
    public abstract virtual Task`1<IUserDictionary`1<IRelationshipState>> GetRelationshipsWithAsync(String[] usernames);
    public abstract virtual Task`1<IUserDictionary`1<IRelationshipState>> GetRelationshipsWithAsync(IUserIdentifier[] users);
    public abstract virtual Task`1<IUserDictionary`1<IRelationshipState>> GetRelationshipsWithAsync(IUser[] users);
    public abstract virtual Task`1<IUserDictionary`1<IRelationshipState>> GetRelationshipsWithAsync(IGetRelationshipsWithParameters parameters);
    public abstract virtual Task`1<Int64[]> GetUserIdsWhoseRetweetsAreMutedAsync();
    public abstract virtual Task`1<Int64[]> GetUserIdsWhoseRetweetsAreMutedAsync(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public abstract virtual Task`1<Int64[]> GetMutedUserIdsAsync();
    public abstract virtual Task`1<Int64[]> GetMutedUserIdsAsync(IGetMutedUserIdsParameters parameters);
    public abstract virtual ITwitterIterator`1<long> GetMutedUserIdsIterator();
    public abstract virtual ITwitterIterator`1<long> GetMutedUserIdsIterator(IGetMutedUserIdsParameters parameters);
    public abstract virtual Task`1<IUser[]> GetMutedUsersAsync();
    public abstract virtual Task`1<IUser[]> GetMutedUsersAsync(IGetMutedUsersParameters parameters);
    public abstract virtual ITwitterIterator`1<IUser> GetMutedUsersIterator();
    public abstract virtual ITwitterIterator`1<IUser> GetMutedUsersIterator(IGetMutedUsersParameters parameters);
    public abstract virtual Task`1<IUser> MuteUserAsync(long userId);
    public abstract virtual Task`1<IUser> MuteUserAsync(string username);
    public abstract virtual Task`1<IUser> MuteUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> MuteUserAsync(IMuteUserParameters parameters);
    public abstract virtual Task`1<IUser> UnmuteUserAsync(long userId);
    public abstract virtual Task`1<IUser> UnmuteUserAsync(string username);
    public abstract virtual Task`1<IUser> UnmuteUserAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser> UnmuteUserAsync(IUnmuteUserParameters parameters);
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(string url);
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(IUser user);
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(IUserDTO user);
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(IGetProfileImageParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IAccountActivityRequester {
    public abstract virtual Task`1<ITwitterResult`1<IWebhookDTO>> CreateAccountActivityWebhookAsync(ICreateAccountActivityWebhookParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IGetAccountActivityWebhookEnvironmentsResultDTO>> GetAccountActivityWebhookEnvironmentsAsync(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookDTO[]>> GetAccountActivityEnvironmentWebhooksAsync(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public abstract virtual Task`1<ITwitterResult> DeleteAccountActivityWebhookAsync(IDeleteAccountActivityWebhookParameters parameters);
    public abstract virtual Task`1<ITwitterResult> TriggerAccountActivityWebhookCRCAsync(ITriggerAccountActivityWebhookCRCParameters parameters);
    public abstract virtual Task`1<ITwitterResult> SubscribeToAccountActivityAsync(ISubscribeToAccountActivityParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookSubscriptionsCount>> CountAccountActivitySubscriptionsAsync(ICountAccountActivitySubscriptionsParameters parameters);
    public abstract virtual Task`1<ITwitterResult> IsAccountSubscribedToAccountActivityAsync(IIsAccountSubscribedToAccountActivityParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookEnvironmentSubscriptionsDTO>> GetAccountActivitySubscriptionsAsync(IGetAccountActivitySubscriptionsParameters parameters);
    public abstract virtual Task`1<ITwitterResult> UnsubscribeFromAccountActivityAsync(IUnsubscribeFromAccountActivityParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IAccountSettingsRequester {
    public abstract virtual Task`1<ITwitterResult`1<IAccountSettingsDTO>> GetAccountSettingsAsync(IGetAccountSettingsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IAccountSettingsDTO>> UpdateAccountSettingsAsync(IUpdateAccountSettingsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UpdateProfileAsync(IUpdateProfileParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UpdateProfileImageAsync(IUpdateProfileImageParameters parameters);
    public abstract virtual Task`1<ITwitterResult> UpdateProfileBannerAsync(IUpdateProfileBannerParameters parameters);
    public abstract virtual Task`1<ITwitterResult> RemoveProfileBannerAsync(IRemoveProfileBannerParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IAuthRequester {
    public abstract virtual Task`1<ITwitterResult`1<CreateTokenResponseDTO>> CreateBearerTokenAsync(ICreateBearerTokenParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IAuthenticationRequest>> RequestAuthUrlAsync(IRequestAuthUrlParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterCredentials>> RequestCredentialsAsync(IRequestCredentialsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<InvalidateTokenResponse>> InvalidateBearerTokenAsync(IInvalidateBearerTokenParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<InvalidateTokenResponse>> InvalidateAccessTokenAsync(IInvalidateAccessTokenParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IExecuteRequester {
    public abstract virtual Task`1<ITwitterResult`1<T>> RequestAsync(Action`1<ITwitterRequest> configureRequest);
    public abstract virtual Task`1<ITwitterResult> RequestAsync(Action`1<ITwitterRequest> configureRequest);
    public abstract virtual Task`1<ITwitterResult`1<T>> RequestAsync(Action`1<ITwitterQuery> configureQuery);
    public abstract virtual Task`1<ITwitterResult> RequestAsync(Action`1<ITwitterQuery> configureQuery);
    public abstract virtual Task`1<ITwitterRequest> PrepareTwitterRequestAsync(Action`1<ITwitterQuery> configureQuery);
    public abstract virtual Task`1<ITwitterRequest> PrepareTwitterRequestAsync(Action`1<ITwitterRequest> configureRequest);
}
public interface Tweetinvi.Client.Requesters.IHelpRequester {
    public abstract virtual Task`1<ITwitterResult`1<CredentialsRateLimitsDTO>> GetRateLimitsAsync(IGetRateLimitsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterConfiguration>> GetTwitterConfigurationAsync(IGetTwitterConfigurationParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SupportedLanguage[]>> GetSupportedLanguagesAsync(IGetSupportedLanguagesParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IPlace>> GetPlaceAsync(IGetPlaceParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SearchGeoSearchResultDTO>> SearchGeoAsync(IGeoSearchParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SearchGeoSearchResultDTO>> SearchGeoReverseAsync(IGeoSearchReverseParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IMessageRequester {
    public abstract virtual Task`1<ITwitterResult`1<ICreateMessageDTO>> PublishMessageAsync(IPublishMessageParameters parameters);
    public abstract virtual Task`1<ITwitterResult> DestroyMessageAsync(IDeleteMessageParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IGetMessageDTO>> GetMessageAsync(IGetMessageParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IMessageCursorQueryResultDTO>> GetMessagesIterator(IGetMessagesParameters parameters);
}
public interface Tweetinvi.Client.Requesters.ISearchRequester {
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ISearchResultsDTO>, Nullable`1<long>> GetSearchTweetsIterator(ISearchTweetsParameters parameters);
    public abstract virtual ITwitterPageIterator`2<IFilteredTwitterResult`1<UserDTO[]>, Nullable`1<int>> GetSearchUsersIterator(ISearchUsersParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SavedSearchDTO>> CreateSavedSearchAsync(ICreateSavedSearchParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SavedSearchDTO>> GetSavedSearchAsync(IGetSavedSearchParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SavedSearchDTO[]>> ListSavedSearchesAsync(IListSavedSearchesParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<SavedSearchDTO>> DestroySavedSearchAsync(IDestroySavedSearchParameters parameters);
}
public interface Tweetinvi.Client.Requesters.ITimelinesRequester {
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetUserTimelineIterator(IGetUserTimelineParameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetHomeTimelineIterator(IGetHomeTimelineParameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetRetweetsOfMeTimelineIterator(IGetRetweetsOfMeTimelineParameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetMentionsTimelineIterator(IGetMentionsTimelineParameters parameters);
}
public interface Tweetinvi.Client.Requesters.ITrendsRequester {
    public abstract virtual Task`1<ITwitterResult`1<IGetTrendsAtResult[]>> GetPlaceTrendsAtAsync(IGetTrendsAtParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITrendLocation[]>> GetTrendLocationsAsync(IGetTrendsLocationParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITrendLocation[]>> GetTrendsLocationCloseToAsync(IGetTrendsLocationCloseToParameters parameters);
}
public interface Tweetinvi.Client.Requesters.ITweetsRequester {
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> GetTweetAsync(IGetTweetParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> PublishTweetAsync(IPublishTweetParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> DestroyTweetAsync(IDestroyTweetParameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetUserFavoriteTweetsIterator(IGetUserFavoriteTweetsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO[]>> GetTweetsAsync(IGetTweetsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO[]>> GetRetweetsAsync(IGetRetweetsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> PublishRetweetAsync(IPublishRetweetParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetRetweeterIdsIterator(IGetRetweeterIdsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> DestroyRetweetAsync(IDestroyRetweetParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> FavoriteTweetAsync(IFavoriteTweetParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> UnfavoriteTweetAsync(IUnfavoriteTweetParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IOEmbedTweetDTO>> GetOEmbedTweetAsync(IGetOEmbedTweetParameters parameters);
}
public interface Tweetinvi.Client.Requesters.ITwitterListsRequester {
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CreateListAsync(ICreateListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> GetListAsync(IGetListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO[]>> GetListsSubscribedByUserAsync(IGetListsSubscribedByUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> UpdateListAsync(IUpdateListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> DestroyListAsync(IDestroyListParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetListsOwnedByAccountIterator(IGetListsOwnedByAccountParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetListsOwnedByUserIterator(IGetListsOwnedByUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`2<ITwitterListDTO, ITwitterList>> AddMemberToListAsync(IAddMemberToListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`2<ITwitterListDTO, ITwitterList>> AddMembersToListAsync(IAddMembersToListParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetAccountListMembershipsIterator(IGetAccountListMembershipsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetUserListMembershipsIterator(IGetUserListMembershipsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetMembersOfListIterator(IGetMembersOfListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CheckIfUserIsAListMemberAsync(ICheckIfUserIsMemberOfListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> RemoveMemberFromListAsync(IRemoveMemberFromListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> RemoveMembersFromListAsync(IRemoveMembersFromListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> SubscribeToListAsync(ISubscribeToListParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> UnsubscribeFromListAsync(IUnsubscribeFromListParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetListSubscribersIterator(IGetListSubscribersParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetAccountListSubscriptionsIterator(IGetAccountListSubscriptionsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetUserListSubscriptionsIterator(IGetUserListSubscriptionsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CheckIfUserIsSubscriberOfListAsync(ICheckIfUserIsSubscriberOfListParameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetTweetsFromListIterator(IGetTweetsFromListParameters parameters);
}
public interface Tweetinvi.Client.Requesters.IUploadRequester {
    public abstract virtual Task`1<IChunkUploadResult> UploadBinaryAsync(IUploadParameters parameters);
    public abstract virtual Task`1<ITwitterResult> AddMediaMetadataAsync(IAddMediaMetadataParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUploadedMediaInfo>> GetVideoProcessingStatusAsync(IMedia media);
    public abstract virtual Task WaitForMediaProcessingToGetAllMetadataAsync(IMedia media);
}
public interface Tweetinvi.Client.Requesters.IUsersRequester {
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> GetAuthenticatedUserAsync(IGetAuthenticatedUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> GetUserAsync(IGetUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO[]>> GetUsersAsync(IGetUsersParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetFriendIdsIterator(IGetFriendIdsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetFollowerIdsIterator(IGetFollowerIdsParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipDetailsDTO>> GetRelationshipBetweenAsync(IGetRelationshipBetweenParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> BlockUserAsync(IBlockUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnblockUserAsync(IUnblockUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> ReportUserForSpamAsync(IReportUserForSpamParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetBlockedUserIdsIterator(IGetBlockedUserIdsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetBlockedUsersIterator(IGetBlockedUsersParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> FollowUserAsync(IFollowUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipDetailsDTO>> UpdateRelationshipAsync(IUpdateRelationshipParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnfollowUserAsync(IUnfollowUserParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetUserIdsRequestingFriendshipIterator(IGetUserIdsRequestingFriendshipParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetUserIdsYouRequestedToFollowIterator(IGetUserIdsYouRequestedToFollowParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipStateDTO[]>> GetRelationshipsWithAsync(IGetRelationshipsWithParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<Int64[]>> GetUserIdsWhoseRetweetsAreMutedAsync(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetMutedUserIdsIterator(IGetMutedUserIdsParameters parameters);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetMutedUsersIterator(IGetMutedUsersParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> MuteUserAsync(IMuteUserParameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnmuteUserAsync(IUnmuteUserParameters parameters);
    public abstract virtual Task`1<Stream> GetProfileImageStream(IGetProfileImageParameters parameters);
}
public interface Tweetinvi.Client.Requesters.V2.ISearchV2Requester {
    public abstract virtual Task`1<ITwitterResult`1<SearchTweetsV2Response>> SearchTweetsAsync(ISearchTweetsV2Parameters parameters);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<SearchTweetsV2Response>, string> GetSearchTweetsV2Iterator(ISearchTweetsV2Parameters parameters);
}
public interface Tweetinvi.Client.Requesters.V2.ITweetsV2Requester {
    public abstract virtual Task`1<ITwitterResult`1<TweetV2Response>> GetTweetAsync(IGetTweetV2Parameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<TweetsV2Response>> GetTweetsAsync(IGetTweetsV2Parameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<TweetHideV2Response>> ChangeTweetReplyVisibilityAsync(IChangeTweetReplyVisibilityV2Parameters parameters);
}
public interface Tweetinvi.Client.Requesters.V2.IUsersV2Requester {
    public abstract virtual Task`1<ITwitterResult`1<UserV2Response>> GetUserAsync(IGetUserByIdV2Parameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<UserV2Response>> GetUserAsync(IGetUserByNameV2Parameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<UsersV2Response>> GetUsersAsync(IGetUsersByIdV2Parameters parameters);
    public abstract virtual Task`1<ITwitterResult`1<UsersV2Response>> GetUsersAsync(IGetUsersByNameV2Parameters parameters);
}
public interface Tweetinvi.Client.Tools.ITwitterClientFactories {
    public abstract virtual IAccountSettings CreateAccountSettings(string json);
    public abstract virtual IAccountSettings CreateAccountSettings(IAccountSettingsDTO dto);
    public abstract virtual ITwitterList CreateTwitterList(string json);
    public abstract virtual ITwitterList CreateTwitterList(ITwitterListDTO twitterListDTO);
    public abstract virtual ITwitterList[] CreateTwitterLists(IEnumerable`1<ITwitterListDTO> listDTOs);
    public abstract virtual IMessage CreateMessageFromMessageEventWithApp(string json);
    public abstract virtual IMessage CreateMessage(string json);
    public abstract virtual IMessage CreateMessage(IMessageEventDTO messageEventDTO);
    public abstract virtual IMessage CreateMessage(IMessageEventDTO messageEventDTO, IApp app);
    public abstract virtual IMessage CreateMessage(IGetMessageDTO getMessageDTO);
    public abstract virtual IMessage CreateMessage(ICreateMessageDTO createMessageDTO);
    public abstract virtual IMessage CreateMessage(IMessageEventWithAppDTO messageEventWithAppDTO);
    public abstract virtual IMessage[] CreateMessages(IEnumerable`1<IMessageEventWithAppDTO> eventWithAppDTOs);
    public abstract virtual IRelationshipState CreateRelationshipState(string json);
    public abstract virtual IRelationshipState CreateRelationshipState(IRelationshipStateDTO relationshipStateDTO);
    public abstract virtual IRelationshipState[] CreateRelationshipStates(IRelationshipStateDTO[] relationshipStateDTOs);
    public abstract virtual IRelationshipDetails CreateRelationshipDetails(string json);
    public abstract virtual IRelationshipDetails CreateRelationshipDetails(IRelationshipDetailsDTO dto);
    public abstract virtual ISavedSearch CreateSavedSearch(string json);
    public abstract virtual ISavedSearch CreateSavedSearch(ISavedSearchDTO savedSearchDTO);
    public abstract virtual ISearchResults CreateSearchResult(ISearchResultsDTO searchResultsDTO);
    public abstract virtual ITweet CreateTweet(string json);
    public abstract virtual ITweet CreateTweet(ITweetDTO tweetDTO);
    public abstract virtual ITweet[] CreateTweets(IEnumerable`1<ITweetDTO> tweetDTOs);
    public abstract virtual ITweetWithSearchMetadata CreateTweetWithSearchMetadata(ITweetWithSearchMetadataDTO tweetWithSearchMetadataDTO);
    public abstract virtual IOEmbedTweet CreateOEmbedTweet(string json);
    public abstract virtual IOEmbedTweet CreateOEmbedTweet(IOEmbedTweetDTO oEmbedTweetDTO);
    public abstract virtual IUser CreateUser(string json);
    public abstract virtual IUser CreateUser(IUserDTO userDTO);
    public abstract virtual IUser[] CreateUsers(IEnumerable`1<IUserDTO> usersDTO);
    public abstract virtual IAuthenticatedUser CreateAuthenticatedUser(string json);
    public abstract virtual IAuthenticatedUser CreateAuthenticatedUser(IUserDTO userDTO);
    public abstract virtual IWebhook CreateWebhook(string json);
    public abstract virtual IWebhook CreateWebhook(IWebhookDTO webhookDTO);
    public abstract virtual IWebhookEnvironment CreateWebhookEnvironment(string json);
    public abstract virtual IWebhookEnvironment CreateWebhookEnvironment(IWebhookEnvironmentDTO webhookEnvironmentDTO);
    public abstract virtual IWebhookEnvironmentSubscriptions CreateWebhookEnvironmentSubscriptions(string json);
    public abstract virtual IWebhookEnvironmentSubscriptions CreateWebhookEnvironmentSubscriptions(IWebhookEnvironmentSubscriptionsDTO webhookEnvironmentSubscriptionsDTO);
    public abstract virtual ITwitterConfiguration CreateTwitterConfiguration(string json);
    public abstract virtual ICredentialsRateLimits CreateRateLimits(string json);
    public abstract virtual ICredentialsRateLimits CreateRateLimits(CredentialsRateLimitsDTO dto);
    public abstract virtual ITwitterCredentials CreateTwitterCredentials(string json);
    public abstract virtual IConsumerOnlyCredentials CreateConsumerCredentials(string json);
    public abstract virtual IMedia CreateMedia(string json);
    public abstract virtual IUploadedMediaInfo CreateUploadedMediaInfo(string json);
    public abstract virtual ISearchResults CreateSearchResult(string json);
}
public interface Tweetinvi.Client.V2.ISearchV2Client {
    public abstract virtual Task`1<SearchTweetsV2Response> SearchTweetsAsync(string query);
    public abstract virtual Task`1<SearchTweetsV2Response> SearchTweetsAsync(ISearchTweetsV2Parameters parameters);
    public abstract virtual ITwitterRequestIterator`2<SearchTweetsV2Response, string> GetSearchTweetsV2Iterator(string query);
    public abstract virtual ITwitterRequestIterator`2<SearchTweetsV2Response, string> GetSearchTweetsV2Iterator(ISearchTweetsV2Parameters parameters);
}
public interface Tweetinvi.Client.V2.IStreamsV2Client {
    public abstract virtual ISampleStreamV2 CreateSampleStream();
    public abstract virtual IFilteredStreamV2 CreateFilteredStream();
    public abstract virtual Task`1<FilteredStreamRulesV2Response> GetRulesForFilteredStreamV2Async();
    public abstract virtual Task`1<FilteredStreamRulesV2Response> GetRulesForFilteredStreamV2Async(String[] ruleIds);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> GetRulesForFilteredStreamV2Async(IGetRulesForFilteredStreamV2Parameters parameters);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> AddRulesToFilteredStreamAsync(FilteredStreamRuleConfig[] rulesToAdd);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> AddRulesToFilteredStreamAsync(IAddRulesToFilteredStreamV2Parameters parameters);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> DeleteRulesFromFilteredStreamAsync(String[] ruleIdsToDelete);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> DeleteRulesFromFilteredStreamAsync(FilteredStreamRuleV2[] rulesToDelete);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> DeleteRulesFromFilteredStreamAsync(IDeleteRulesFromFilteredStreamV2Parameters parameters);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> TestFilteredStreamRulesV2Async(FilteredStreamRuleConfig[] rulesToAdd);
    public abstract virtual Task`1<FilteredStreamRulesV2Response> TestFilteredStreamRulesV2Async(IAddRulesToFilteredStreamV2Parameters parameters);
}
public interface Tweetinvi.Client.V2.ITweetsV2Client {
    public abstract virtual Task`1<TweetV2Response> GetTweetAsync(long tweetId);
    public abstract virtual Task`1<TweetV2Response> GetTweetAsync(string tweetId);
    public abstract virtual Task`1<TweetV2Response> GetTweetAsync(IGetTweetV2Parameters parameters);
    public abstract virtual Task`1<TweetsV2Response> GetTweetsAsync(Int64[] tweetIds);
    public abstract virtual Task`1<TweetsV2Response> GetTweetsAsync(String[] tweetIds);
    public abstract virtual Task`1<TweetsV2Response> GetTweetsAsync(IGetTweetsV2Parameters parameters);
    public abstract virtual Task`1<TweetHideV2Response> ChangeTweetReplyVisibilityAsync(long tweetId, TweetReplyVisibility visibility);
    public abstract virtual Task`1<TweetHideV2Response> ChangeTweetReplyVisibilityAsync(string tweetId, TweetReplyVisibility visibility);
    public abstract virtual Task`1<TweetHideV2Response> ChangeTweetReplyVisibilityAsync(IChangeTweetReplyVisibilityV2Parameters parameters);
}
public interface Tweetinvi.Client.V2.IUsersV2Client {
    public abstract virtual Task`1<UserV2Response> GetUserByIdAsync(long userId);
    public abstract virtual Task`1<UserV2Response> GetUserByIdAsync(string userId);
    public abstract virtual Task`1<UserV2Response> GetUserByIdAsync(IGetUserByIdV2Parameters parameters);
    public abstract virtual Task`1<UserV2Response> GetUserByNameAsync(string username);
    public abstract virtual Task`1<UserV2Response> GetUserByNameAsync(IGetUserByNameV2Parameters parameters);
    public abstract virtual Task`1<UsersV2Response> GetUsersByIdAsync(Int64[] userIds);
    public abstract virtual Task`1<UsersV2Response> GetUsersByIdAsync(String[] userIds);
    public abstract virtual Task`1<UsersV2Response> GetUsersByIdAsync(IGetUsersByIdV2Parameters parameters);
    public abstract virtual Task`1<UsersV2Response> GetUsersByNameAsync(String[] usernames);
    public abstract virtual Task`1<UsersV2Response> GetUsersByNameAsync(IGetUsersByNameV2Parameters parameters);
}
public interface Tweetinvi.Core.Attributes.ITwitterEndpointAttribute {
    public string EndpointURL { get; }
    public bool IsRegex { get; }
    public abstract virtual string get_EndpointURL();
    public abstract virtual bool get_IsRegex();
}
public class Tweetinvi.Core.Attributes.JsonEnumStringAttribute : Attribute {
    public string JsonString;
    public JsonEnumStringAttribute(string jsonString);
}
public class Tweetinvi.Core.Attributes.LanguageAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Names>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Codes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMultipleCodes>k__BackingField;
    public string Name { get; }
    public String[] Names { get; }
    public string Code { get; }
    public String[] Codes { get; }
    public bool HasMultipleCodes { get; }
    public LanguageAttribute(string name, String[] codes);
    public LanguageAttribute(String[] names, String[] codes);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public String[] get_Names();
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public String[] get_Codes();
    [CompilerGeneratedAttribute]
public bool get_HasMultipleCodes();
}
public class Tweetinvi.Core.Attributes.TimeZoneFromTwitterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <TZinfo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayValue>k__BackingField;
    public string TZinfo { get; }
    public string DisplayValue { get; }
    public TimeZoneFromTwitterAttribute(string tzinfo, string displayValue);
    [CompilerGeneratedAttribute]
public string get_TZinfo();
    [CompilerGeneratedAttribute]
public string get_DisplayValue();
}
public class Tweetinvi.Core.Attributes.TweetSearchFilterAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <FilterName>k__BackingField;
    public string FilterName { get; }
    public TweetSearchFilterAttribute(string filterName);
    [CompilerGeneratedAttribute]
public string get_FilterName();
}
[AttributeUsageAttribute("32767")]
public class Tweetinvi.Core.Attributes.TwitterEndpointAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <EndpointURL>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRegex>k__BackingField;
    public string EndpointURL { get; }
    public bool IsRegex { get; }
    public TwitterEndpointAttribute(string endpointURL, bool isRegex);
    [CompilerGeneratedAttribute]
public sealed virtual string get_EndpointURL();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsRegex();
}
public enum Tweetinvi.Core.Attributes.WindowsTimeZone : Enum {
    public int value__;
    [WindowsTimeZoneAttribute("Dateline Standard Time", "Pacific/Midway")]
public static WindowsTimeZone International_Date_Line_West;
    [WindowsTimeZoneAttribute("UTC-11", "")]
public static WindowsTimeZone Coordinated_Universal_Time_11;
    [WindowsTimeZoneAttribute("Hawaiian Standard Time", "Pacific/Honolulu")]
public static WindowsTimeZone Hawaii;
    [WindowsTimeZoneAttribute("Alaskan Standard Time", "America/Juneau")]
public static WindowsTimeZone Alaska;
    [WindowsTimeZoneAttribute("Pacific Standard Time (Mexico)", "")]
public static WindowsTimeZone Baja_California;
    [WindowsTimeZoneAttribute("Pacific Standard Time", "America/Los_Angeles")]
public static WindowsTimeZone Pacific_Time_US_Canada;
    [WindowsTimeZoneAttribute("US Mountain Standard Time", "America/Phoenix")]
public static WindowsTimeZone Arizona;
    [WindowsTimeZoneAttribute("Mountain Standard Time (Mexico)", "America/Chihuahua")]
public static WindowsTimeZone Chihuahua_La_Paz_Mazatlan;
    [WindowsTimeZoneAttribute("Mountain Standard Time", "")]
public static WindowsTimeZone Mountain_Time_US_Canada;
    [WindowsTimeZoneAttribute("Central America Standard Time", "")]
public static WindowsTimeZone Central_America;
    [WindowsTimeZoneAttribute("Central Standard Time", "")]
public static WindowsTimeZone Central_Time_US_Canada;
    [WindowsTimeZoneAttribute("Central Standard Time (Mexico)", "")]
public static WindowsTimeZone Guadalajara_Mexico_City_Monterrey;
    [WindowsTimeZoneAttribute("Canada Central Standard Time", "")]
public static WindowsTimeZone Saskatchewan;
    [WindowsTimeZoneAttribute("SA Pacific Standard Time", "")]
public static WindowsTimeZone Bogota_Lima_Quito_Rio_Branco;
    [WindowsTimeZoneAttribute("Eastern Standard Time", "")]
public static WindowsTimeZone Eastern_Time_US_Canada;
    [WindowsTimeZoneAttribute("US Eastern Standard Time", "")]
public static WindowsTimeZone Indiana_East;
    [WindowsTimeZoneAttribute("Venezuela Standard Time", "")]
public static WindowsTimeZone Caracas;
    [WindowsTimeZoneAttribute("Paraguay Standard Time", "")]
public static WindowsTimeZone Asuncion;
    [WindowsTimeZoneAttribute("Atlantic Standard Time", "")]
public static WindowsTimeZone Atlantic_Time_Canada;
    [WindowsTimeZoneAttribute("Central Brazilian Standard Time", "")]
public static WindowsTimeZone Cuiaba;
    [WindowsTimeZoneAttribute("SA Western Standard Time", "America/La_Paz")]
public static WindowsTimeZone Georgetown_La_Paz_Manaus_San_Juan;
    [WindowsTimeZoneAttribute("Pacific SA Standard Time", "")]
public static WindowsTimeZone Santiago;
    [WindowsTimeZoneAttribute("Newfoundland Standard Time", "")]
public static WindowsTimeZone Newfoundland;
    [WindowsTimeZoneAttribute("E. South America Standard Time", "")]
public static WindowsTimeZone Brasilia;
    [WindowsTimeZoneAttribute("Argentina Standard Time", "")]
public static WindowsTimeZone Buenos_Aires;
    [WindowsTimeZoneAttribute("SA Eastern Standard Time", "")]
public static WindowsTimeZone Cayenne_Fortaleza;
    [WindowsTimeZoneAttribute("Greenland Standard Time", "")]
public static WindowsTimeZone Greenland;
    [WindowsTimeZoneAttribute("Montevideo Standard Time", "")]
public static WindowsTimeZone Montevideo;
    [WindowsTimeZoneAttribute("Bahia Standard Time", "")]
public static WindowsTimeZone Salvador;
    [WindowsTimeZoneAttribute("UTC-02", "")]
public static WindowsTimeZone Coordinated_Universal_Time_02;
    [WindowsTimeZoneAttribute("Mid-Atlantic Standard Time", "")]
public static WindowsTimeZone Mid_Atlantic_Old;
    [WindowsTimeZoneAttribute("Azores Standard Time", "")]
public static WindowsTimeZone Azores;
    [WindowsTimeZoneAttribute("Cape Verde Standard Time", "")]
public static WindowsTimeZone Cape_Verde_Is_;
    [WindowsTimeZoneAttribute("Morocco Standard Time", "")]
public static WindowsTimeZone Casablanca;
    [WindowsTimeZoneAttribute("UTC", "")]
public static WindowsTimeZone Coordinated_Universal_Time;
    [WindowsTimeZoneAttribute("GMT Standard Time", "")]
public static WindowsTimeZone Dublin_Edinburgh_Lisbon_London;
    [WindowsTimeZoneAttribute("Greenwich Standard Time", "")]
public static WindowsTimeZone Monrovia_Reykjavik;
    [WindowsTimeZoneAttribute("W. Europe Standard Time", "")]
public static WindowsTimeZone Amsterdam_Berlin_Bern_Rome_Stockholm_Vienna;
    [WindowsTimeZoneAttribute("Central Europe Standard Time", "")]
public static WindowsTimeZone Belgrade_Bratislava_Budapest_Ljubljana_Prague;
    [WindowsTimeZoneAttribute("Romance Standard Time", "")]
public static WindowsTimeZone Brussels_Copenhagen_Madrid_Paris;
    [WindowsTimeZoneAttribute("Central European Standard Time", "")]
public static WindowsTimeZone Sarajevo_Skopje_Warsaw_Zagreb;
    [WindowsTimeZoneAttribute("W. Central Africa Standard Time", "")]
public static WindowsTimeZone West_Central_Africa;
    [WindowsTimeZoneAttribute("Namibia Standard Time", "")]
public static WindowsTimeZone Windhoek;
    [WindowsTimeZoneAttribute("Jordan Standard Time", "")]
public static WindowsTimeZone Amman;
    [WindowsTimeZoneAttribute("GTB Standard Time", "")]
public static WindowsTimeZone Athens_Bucharest;
    [WindowsTimeZoneAttribute("Middle East Standard Time", "")]
public static WindowsTimeZone Beirut;
    [WindowsTimeZoneAttribute("Egypt Standard Time", "")]
public static WindowsTimeZone Cairo;
    [WindowsTimeZoneAttribute("Syria Standard Time", "")]
public static WindowsTimeZone Damascus;
    [WindowsTimeZoneAttribute("E. Europe Standard Time", "")]
public static WindowsTimeZone E__Europe;
    [WindowsTimeZoneAttribute("South Africa Standard Time", "")]
public static WindowsTimeZone Harare_Pretoria;
    [WindowsTimeZoneAttribute("FLE Standard Time", "")]
public static WindowsTimeZone Helsinki_Kyiv_Riga_Sofia_Tallinn_Vilnius;
    [WindowsTimeZoneAttribute("Turkey Standard Time", "")]
public static WindowsTimeZone Istanbul;
    [WindowsTimeZoneAttribute("Israel Standard Time", "")]
public static WindowsTimeZone Jerusalem;
    [WindowsTimeZoneAttribute("Kaliningrad Standard Time", "")]
public static WindowsTimeZone Kaliningrad_RTZ_1;
    [WindowsTimeZoneAttribute("Libya Standard Time", "")]
public static WindowsTimeZone Tripoli;
    [WindowsTimeZoneAttribute("Arabic Standard Time", "")]
public static WindowsTimeZone Baghdad;
    [WindowsTimeZoneAttribute("Arab Standard Time", "")]
public static WindowsTimeZone Kuwait_Riyadh;
    [WindowsTimeZoneAttribute("Belarus Standard Time", "")]
public static WindowsTimeZone Minsk;
    [WindowsTimeZoneAttribute("Russian Standard Time", "")]
public static WindowsTimeZone Moscow_St__Petersburg_Volgograd_RTZ_2;
    [WindowsTimeZoneAttribute("E. Africa Standard Time", "")]
public static WindowsTimeZone Nairobi;
    [WindowsTimeZoneAttribute("Iran Standard Time", "")]
public static WindowsTimeZone Tehran;
    [WindowsTimeZoneAttribute("Arabian Standard Time", "")]
public static WindowsTimeZone Abu_Dhabi_Muscat;
    [WindowsTimeZoneAttribute("Azerbaijan Standard Time", "")]
public static WindowsTimeZone Baku;
    [WindowsTimeZoneAttribute("Russia Time Zone 3", "")]
public static WindowsTimeZone Izhevsk_Samara_RTZ_3;
    [WindowsTimeZoneAttribute("Mauritius Standard Time", "")]
public static WindowsTimeZone Port_Louis;
    [WindowsTimeZoneAttribute("Georgian Standard Time", "")]
public static WindowsTimeZone Tbilisi;
    [WindowsTimeZoneAttribute("Caucasus Standard Time", "")]
public static WindowsTimeZone Yerevan;
    [WindowsTimeZoneAttribute("Afghanistan Standard Time", "")]
public static WindowsTimeZone Kabul;
    [WindowsTimeZoneAttribute("West Asia Standard Time", "")]
public static WindowsTimeZone Ashgabat_Tashkent;
    [WindowsTimeZoneAttribute("Ekaterinburg Standard Time", "")]
public static WindowsTimeZone Ekaterinburg_RTZ_4;
    [WindowsTimeZoneAttribute("Pakistan Standard Time", "")]
public static WindowsTimeZone Islamabad_Karachi;
    [WindowsTimeZoneAttribute("India Standard Time", "")]
public static WindowsTimeZone Chennai_Kolkata_Mumbai_New_Delhi;
    [WindowsTimeZoneAttribute("Sri Lanka Standard Time", "")]
public static WindowsTimeZone Sri_Jayawardenepura;
    [WindowsTimeZoneAttribute("Nepal Standard Time", "")]
public static WindowsTimeZone Kathmandu;
    [WindowsTimeZoneAttribute("Central Asia Standard Time", "")]
public static WindowsTimeZone Astana;
    [WindowsTimeZoneAttribute("Bangladesh Standard Time", "")]
public static WindowsTimeZone Dhaka;
    [WindowsTimeZoneAttribute("N. Central Asia Standard Time", "")]
public static WindowsTimeZone Novosibirsk_RTZ_5;
    [WindowsTimeZoneAttribute("Myanmar Standard Time", "")]
public static WindowsTimeZone Yangon_Rangoon;
    [WindowsTimeZoneAttribute("SE Asia Standard Time", "")]
public static WindowsTimeZone Bangkok_Hanoi_Jakarta;
    [WindowsTimeZoneAttribute("North Asia Standard Time", "")]
public static WindowsTimeZone Krasnoyarsk_RTZ_6;
    [WindowsTimeZoneAttribute("China Standard Time", "")]
public static WindowsTimeZone Beijing_Chongqing_Hong_Kong_Urumqi;
    [WindowsTimeZoneAttribute("North Asia East Standard Time", "")]
public static WindowsTimeZone Irkutsk_RTZ_7;
    [WindowsTimeZoneAttribute("Singapore Standard Time", "")]
public static WindowsTimeZone Kuala_Lumpur_Singapore;
    [WindowsTimeZoneAttribute("W. Australia Standard Time", "")]
public static WindowsTimeZone Perth;
    [WindowsTimeZoneAttribute("Taipei Standard Time", "")]
public static WindowsTimeZone Taipei;
    [WindowsTimeZoneAttribute("Ulaanbaatar Standard Time", "")]
public static WindowsTimeZone Ulaanbaatar;
    [WindowsTimeZoneAttribute("Tokyo Standard Time", "")]
public static WindowsTimeZone Osaka_Sapporo_Tokyo;
    [WindowsTimeZoneAttribute("Korea Standard Time", "")]
public static WindowsTimeZone Seoul;
    [WindowsTimeZoneAttribute("Yakutsk Standard Time", "")]
public static WindowsTimeZone Yakutsk_RTZ_8;
    [WindowsTimeZoneAttribute("Cen. Australia Standard Time", "")]
public static WindowsTimeZone Adelaide;
    [WindowsTimeZoneAttribute("AUS Central Standard Time", "")]
public static WindowsTimeZone Darwin;
    [WindowsTimeZoneAttribute("E. Australia Standard Time", "")]
public static WindowsTimeZone Brisbane;
    [WindowsTimeZoneAttribute("AUS Eastern Standard Time", "")]
public static WindowsTimeZone Canberra_Melbourne_Sydney;
    [WindowsTimeZoneAttribute("West Pacific Standard Time", "")]
public static WindowsTimeZone Guam_Port_Moresby;
    [WindowsTimeZoneAttribute("Tasmania Standard Time", "")]
public static WindowsTimeZone Hobart;
    [WindowsTimeZoneAttribute("Magadan Standard Time", "")]
public static WindowsTimeZone Magadan;
    [WindowsTimeZoneAttribute("Vladivostok Standard Time", "")]
public static WindowsTimeZone Vladivostok_Magadan_RTZ_9;
    [WindowsTimeZoneAttribute("Russia Time Zone 10", "")]
public static WindowsTimeZone Chokurdakh_RTZ_10;
    [WindowsTimeZoneAttribute("Central Pacific Standard Time", "")]
public static WindowsTimeZone Solomon_Is__New_Caledonia;
    [WindowsTimeZoneAttribute("Russia Time Zone 11", "")]
public static WindowsTimeZone Anadyr_Petropavlovsk_Kamchatsky_RTZ_11;
    [WindowsTimeZoneAttribute("New Zealand Standard Time", "")]
public static WindowsTimeZone Auckland_Wellington;
    [WindowsTimeZoneAttribute("UTC+12", "")]
public static WindowsTimeZone Coordinated_Universal_Time_12;
    [WindowsTimeZoneAttribute("Fiji Standard Time", "")]
public static WindowsTimeZone Fiji;
    [WindowsTimeZoneAttribute("Kamchatka Standard Time", "")]
public static WindowsTimeZone Petropavlovsk_Kamchatsky_Old;
    [WindowsTimeZoneAttribute("Tonga Standard Time", "")]
public static WindowsTimeZone Nuku_alofa;
    [WindowsTimeZoneAttribute("Samoa Standard Time", "Pacific/Pago_Pago")]
public static WindowsTimeZone Samoa;
    [WindowsTimeZoneAttribute("Line Islands Standard Time", "")]
public static WindowsTimeZone Kiritimati_Island;
}
public class Tweetinvi.Core.Attributes.WindowsTimeZoneAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <WindowsId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TZinfo>k__BackingField;
    public string WindowsId { get; }
    public string TZinfo { get; }
    public WindowsTimeZoneAttribute(string windowsId, string tzinfo);
    [CompilerGeneratedAttribute]
public string get_WindowsId();
    [CompilerGeneratedAttribute]
public string get_TZinfo();
}
internal class Tweetinvi.Core.Attributes.WindowsTimeZoneGenerator : object {
    internal void PrintWindowTimeZone();
}
public interface Tweetinvi.Core.Client.ITwitterExecutionContext {
    public Func`1<ITwitterRequest> RequestFactory { get; public set; }
    public ITweetinviContainer Container { get; public set; }
    public ITwitterClientEvents Events { get; }
    public abstract virtual Func`1<ITwitterRequest> get_RequestFactory();
    public abstract virtual void set_RequestFactory(Func`1<ITwitterRequest> value);
    public abstract virtual ITweetinviContainer get_Container();
    public abstract virtual void set_Container(ITweetinviContainer value);
    public abstract virtual ITwitterClientEvents get_Events();
}
public class Tweetinvi.Core.Client.TwitterExecutionContext : TweetinviSettings {
    [CompilerGeneratedAttribute]
private Func`1<ITwitterRequest> <RequestFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetinviContainer <Container>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterClientEvents <Events>k__BackingField;
    public Func`1<ITwitterRequest> RequestFactory { get; public set; }
    public ITweetinviContainer Container { get; public set; }
    public ITwitterClientEvents Events { get; public set; }
    public TwitterExecutionContext(ITwitterExecutionContext context);
    [CompilerGeneratedAttribute]
public sealed virtual Func`1<ITwitterRequest> get_RequestFactory();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestFactory(Func`1<ITwitterRequest> value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetinviContainer get_Container();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Container(ITweetinviContainer value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClientEvents get_Events();
    [CompilerGeneratedAttribute]
public void set_Events(ITwitterClientEvents value);
}
public class Tweetinvi.Core.Client.Validators.AccountActivityClientParametersValidator : object {
    private IAccountActivityClientRequiredParametersValidator _activityClientRequiredParametersValidator;
    public AccountActivityClientParametersValidator(IAccountActivityClientRequiredParametersValidator activityClientRequiredParametersValidator);
    public sealed virtual void Validate(ICreateAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public sealed virtual void Validate(IDeleteAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(ITriggerAccountActivityWebhookCRCParameters parameters);
    public sealed virtual void Validate(ISubscribeToAccountActivityParameters parameters);
    public sealed virtual void Validate(ICountAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IIsAccountSubscribedToAccountActivityParameters parameters);
    public sealed virtual void Validate(IGetAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromAccountActivityParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.AccountActivityClientRequiredParametersValidator : object {
    public sealed virtual void Validate(ICreateAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public sealed virtual void Validate(IDeleteAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(ITriggerAccountActivityWebhookCRCParameters parameters);
    public sealed virtual void Validate(ISubscribeToAccountActivityParameters parameters);
    public sealed virtual void Validate(ICountAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IIsAccountSubscribedToAccountActivityParameters parameters);
    public sealed virtual void Validate(IGetAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromAccountActivityParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.AccountSettingsClientParametersValidator : object {
    private IAccountSettingsClientRequiredParametersValidator _accountSettingsClientRequiredParametersValidator;
    private ITwitterClient _client;
    private TwitterLimits Limits { get; }
    public AccountSettingsClientParametersValidator(ITwitterClient client, IAccountSettingsClientRequiredParametersValidator accountSettingsClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(IGetAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateProfileParameters parameters);
    public sealed virtual void Validate(IUpdateProfileImageParameters parameters);
    public sealed virtual void Validate(IUpdateProfileBannerParameters parameters);
    public sealed virtual void Validate(IRemoveProfileBannerParameters parameters);
    private static void ThrowIfParameterSizeIsInvalid(string value, string parameterName, int maxSize);
}
public class Tweetinvi.Core.Client.Validators.AccountSettingsClientRequiredParametersValidator : object {
    public sealed virtual void Validate(IGetAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateProfileParameters parameters);
    public sealed virtual void Validate(IUpdateProfileImageParameters parameters);
    public sealed virtual void Validate(IUpdateProfileBannerParameters parameters);
    public sealed virtual void Validate(IRemoveProfileBannerParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.AuthClientParametersValidator : object {
    private IAuthClientRequiredParametersValidator _authClientRequiredParametersValidator;
    public AuthClientParametersValidator(IAuthClientRequiredParametersValidator authClientRequiredParametersValidator);
    public sealed virtual void Validate(ICreateBearerTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IRequestAuthUrlParameters parameters);
    public sealed virtual void Validate(IRequestCredentialsParameters parameters);
    public sealed virtual void Validate(IInvalidateBearerTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IInvalidateAccessTokenParameters parameters, ITwitterRequest request);
}
public class Tweetinvi.Core.Client.Validators.AuthClientRequiredParametersValidator : object {
    public sealed virtual void Validate(ICreateBearerTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IRequestAuthUrlParameters parameters);
    public sealed virtual void Validate(IRequestCredentialsParameters parameters);
    public sealed virtual void Validate(IInvalidateAccessTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IInvalidateBearerTokenParameters parameters, ITwitterRequest request);
    public static void ThrowIfInvalidConsumerCredentials(string credentialsParameterName, IReadOnlyConsumerCredentialsWithoutBearer credentials);
    public static void ThrowIfInvalidAccessCredentials(string credentialsParameterName, IReadOnlyTwitterCredentials credentials);
}
public class Tweetinvi.Core.Client.Validators.HelpClientParametersValidator : object {
    private IHelpClientRequiredParametersValidator _helpClientRequiredParametersValidator;
    public HelpClientParametersValidator(IHelpClientRequiredParametersValidator helpClientRequiredParametersValidator);
    public sealed virtual void Validate(IGetRateLimitsParameters parameters);
    public sealed virtual void Validate(IGetTwitterConfigurationParameters parameters);
    public sealed virtual void Validate(IGetSupportedLanguagesParameters parameters);
    public sealed virtual void Validate(IGetPlaceParameters parameters);
    public sealed virtual void Validate(IGeoSearchParameters parameters);
    public sealed virtual void Validate(IGeoSearchReverseParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.HelpClientRequiredParametersValidator : object {
    public sealed virtual void Validate(IGetRateLimitsParameters parameters);
    public sealed virtual void Validate(IGetTwitterConfigurationParameters parameters);
    public sealed virtual void Validate(IGetSupportedLanguagesParameters parameters);
    public sealed virtual void Validate(IGetPlaceParameters parameters);
    public sealed virtual void Validate(IGeoSearchParameters parameters);
    public sealed virtual void Validate(IGeoSearchReverseParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IAccountActivityClientParametersValidator {
    public abstract virtual void Validate(ICreateAccountActivityWebhookParameters parameters);
    public abstract virtual void Validate(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public abstract virtual void Validate(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public abstract virtual void Validate(IDeleteAccountActivityWebhookParameters parameters);
    public abstract virtual void Validate(ITriggerAccountActivityWebhookCRCParameters parameters);
    public abstract virtual void Validate(ISubscribeToAccountActivityParameters parameters);
    public abstract virtual void Validate(ICountAccountActivitySubscriptionsParameters parameters);
    public abstract virtual void Validate(IIsAccountSubscribedToAccountActivityParameters parameters);
    public abstract virtual void Validate(IGetAccountActivitySubscriptionsParameters parameters);
    public abstract virtual void Validate(IUnsubscribeFromAccountActivityParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IAccountActivityClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IAccountSettingsClientParametersValidator {
    public abstract virtual void Validate(IGetAccountSettingsParameters parameters);
    public abstract virtual void Validate(IUpdateAccountSettingsParameters parameters);
    public abstract virtual void Validate(IUpdateProfileParameters parameters);
    public abstract virtual void Validate(IUpdateProfileImageParameters parameters);
    public abstract virtual void Validate(IUpdateProfileBannerParameters parameters);
    public abstract virtual void Validate(IRemoveProfileBannerParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IAccountSettingsClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IAuthClientParametersValidator {
    public abstract virtual void Validate(ICreateBearerTokenParameters parameters, ITwitterRequest request);
    public abstract virtual void Validate(IRequestAuthUrlParameters parameters);
    public abstract virtual void Validate(IRequestCredentialsParameters parameters);
    public abstract virtual void Validate(IInvalidateAccessTokenParameters parameters, ITwitterRequest request);
    public abstract virtual void Validate(IInvalidateBearerTokenParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Client.Validators.IAuthClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IHelpClientParametersValidator {
    public abstract virtual void Validate(IGetRateLimitsParameters parameters);
    public abstract virtual void Validate(IGetTwitterConfigurationParameters parameters);
    public abstract virtual void Validate(IGetSupportedLanguagesParameters parameters);
    public abstract virtual void Validate(IGetPlaceParameters parameters);
    public abstract virtual void Validate(IGeoSearchParameters parameters);
    public abstract virtual void Validate(IGeoSearchReverseParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IHelpClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IMessagesClientParametersValidator {
    public abstract virtual void Validate(IPublishMessageParameters parameters);
    public abstract virtual void Validate(IDeleteMessageParameters parameters);
    public abstract virtual void Validate(IGetMessageParameters parameters);
    public abstract virtual void Validate(IGetMessagesParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IMessagesClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.ISearchClientParametersValidator {
    public abstract virtual void Validate(ISearchTweetsParameters parameters);
    public abstract virtual void Validate(ISearchUsersParameters parameters);
    public abstract virtual void Validate(ICreateSavedSearchParameters parameters);
    public abstract virtual void Validate(IGetSavedSearchParameters parameters);
    public abstract virtual void Validate(IListSavedSearchesParameters parameters);
    public abstract virtual void Validate(IDestroySavedSearchParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.ISearchClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.ITimelineClientParametersValidator {
    public abstract virtual void Validate(IGetHomeTimelineParameters parameters);
    public abstract virtual void Validate(IGetUserTimelineParameters parameters);
    public abstract virtual void Validate(IGetMentionsTimelineParameters parameters);
    public abstract virtual void Validate(IGetRetweetsOfMeTimelineParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.ITimelineClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.ITrendsClientParametersValidator {
    public abstract virtual void Validate(IGetTrendsLocationCloseToParameters parameters);
    public abstract virtual void Validate(IGetTrendsAtParameters parameters);
    public abstract virtual void Validate(IGetTrendsLocationParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.ITrendsClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.ITweetsClientParametersValidator {
    public abstract virtual void Validate(IGetTweetParameters parameters);
    public abstract virtual void Validate(IGetTweetsParameters parameters);
    public abstract virtual void Validate(IPublishTweetParameters parameters);
    public abstract virtual void Validate(IDestroyTweetParameters parameters);
    public abstract virtual void Validate(IGetUserFavoriteTweetsParameters parameters);
    public abstract virtual void Validate(IGetRetweetsParameters parameters);
    public abstract virtual void Validate(IPublishRetweetParameters parameters);
    public abstract virtual void Validate(IDestroyRetweetParameters parameters);
    public abstract virtual void Validate(IGetRetweeterIdsParameters parameters);
    public abstract virtual void Validate(IFavoriteTweetParameters parameters);
    public abstract virtual void Validate(IUnfavoriteTweetParameters parameters);
    public abstract virtual void Validate(IGetOEmbedTweetParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.ITweetsClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.ITwitterListsClientParametersValidator {
    public abstract virtual void Validate(ICreateListParameters parameters);
    public abstract virtual void Validate(IGetListParameters parameters);
    public abstract virtual void Validate(IGetListsSubscribedByUserParameters parameters);
    public abstract virtual void Validate(IUpdateListParameters parameters);
    public abstract virtual void Validate(IDestroyListParameters parameters);
    public abstract virtual void Validate(IGetListsOwnedByAccountParameters parameters);
    public abstract virtual void Validate(IGetListsOwnedByUserParameters parameters);
    public abstract virtual void Validate(IGetTweetsFromListParameters parameters);
    public abstract virtual void Validate(IAddMemberToListParameters parameters);
    public abstract virtual void Validate(IAddMembersToListParameters parameters);
    public abstract virtual void Validate(IGetUserListMembershipsParameters parameters);
    public abstract virtual void Validate(IGetMembersOfListParameters parameters);
    public abstract virtual void Validate(ICheckIfUserIsMemberOfListParameters parameters);
    public abstract virtual void Validate(IRemoveMemberFromListParameters parameters);
    public abstract virtual void Validate(IRemoveMembersFromListParameters parameters);
    public abstract virtual void Validate(IGetAccountListMembershipsParameters parameters);
    public abstract virtual void Validate(ISubscribeToListParameters parameters);
    public abstract virtual void Validate(IUnsubscribeFromListParameters parameters);
    public abstract virtual void Validate(IGetListSubscribersParameters parameters);
    public abstract virtual void Validate(IGetAccountListSubscriptionsParameters parameters);
    public abstract virtual void Validate(IGetUserListSubscriptionsParameters parameters);
    public abstract virtual void Validate(ICheckIfUserIsSubscriberOfListParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.ITwitterListsClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IUploadClientParametersValidator {
    public abstract virtual void Validate(IUploadParameters parameters);
    public abstract virtual void Validate(IAddMediaMetadataParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IUploadClientRequiredParametersValidator {
}
public interface Tweetinvi.Core.Client.Validators.IUserQueryValidator {
    public abstract virtual void ThrowIfUserCannotBeIdentified(IUserIdentifier user);
    public abstract virtual void ThrowIfUserCannotBeIdentified(IUserIdentifier user, string parameterName);
}
public interface Tweetinvi.Core.Client.Validators.IUsersClientParametersValidator {
    public abstract virtual void Validate(IGetAuthenticatedUserParameters parameters);
    public abstract virtual void Validate(IGetUserParameters parameters);
    public abstract virtual void Validate(IGetUsersParameters parameters);
    public abstract virtual void Validate(IGetFollowerIdsParameters parameters);
    public abstract virtual void Validate(IGetFollowersParameters parameters);
    public abstract virtual void Validate(IGetFriendIdsParameters parameters);
    public abstract virtual void Validate(IGetFriendsParameters parameters);
    public abstract virtual void Validate(IGetProfileImageParameters parameters);
    public abstract virtual void Validate(IBlockUserParameters parameters);
    public abstract virtual void Validate(IUnblockUserParameters parameters);
    public abstract virtual void Validate(IReportUserForSpamParameters parameters);
    public abstract virtual void Validate(IGetBlockedUserIdsParameters parameters);
    public abstract virtual void Validate(IGetBlockedUsersParameters parameters);
    public abstract virtual void Validate(IFollowUserParameters parameters);
    public abstract virtual void Validate(IUnfollowUserParameters parameters);
    public abstract virtual void Validate(IGetUserIdsRequestingFriendshipParameters parameters);
    public abstract virtual void Validate(IGetUsersRequestingFriendshipParameters parameters);
    public abstract virtual void Validate(IGetUserIdsYouRequestedToFollowParameters parameters);
    public abstract virtual void Validate(IGetUsersYouRequestedToFollowParameters parameters);
    public abstract virtual void Validate(IUpdateRelationshipParameters parameters);
    public abstract virtual void Validate(IGetRelationshipsWithParameters parameters);
    public abstract virtual void Validate(IGetRelationshipBetweenParameters parameters);
    public abstract virtual void Validate(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public abstract virtual void Validate(IGetMutedUserIdsParameters parameters);
    public abstract virtual void Validate(IGetMutedUsersParameters parameters);
    public abstract virtual void Validate(IMuteUserParameters parameters);
    public abstract virtual void Validate(IUnmuteUserParameters parameters);
}
public interface Tweetinvi.Core.Client.Validators.IUsersClientRequiredParametersValidator {
}
public class Tweetinvi.Core.Client.Validators.MessagesClientParametersValidator : object {
    private ITwitterClient _client;
    private IMessagesClientRequiredParametersValidator _messagesClientRequiredParametersValidator;
    private TwitterLimits Limits { get; }
    public MessagesClientParametersValidator(ITwitterClient client, IMessagesClientRequiredParametersValidator messagesClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(IPublishMessageParameters parameters);
    public sealed virtual void Validate(IDeleteMessageParameters parameters);
    public sealed virtual void Validate(IGetMessageParameters parameters);
    public sealed virtual void Validate(IGetMessagesParameters parameters);
    [CompilerGeneratedAttribute]
private bool <Validate>b__5_1(IQuickReplyOption x);
    [CompilerGeneratedAttribute]
private bool <Validate>b__5_3(IQuickReplyOption x);
    [CompilerGeneratedAttribute]
private bool <Validate>b__5_4(IQuickReplyOption x);
}
public class Tweetinvi.Core.Client.Validators.MessagesClientRequiredParametersValidator : object {
    public sealed virtual void Validate(IPublishMessageParameters parameters);
    public sealed virtual void Validate(IDeleteMessageParameters parameters);
    public sealed virtual void Validate(IGetMessageParameters parameters);
    public sealed virtual void Validate(IGetMessagesParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.ParametersValidator : object {
    private IAccountActivityClientParametersValidator _accountActivityClientParametersValidator;
    private IAccountSettingsClientParametersValidator _accountSettingsClientParametersValidator;
    private IAuthClientParametersValidator _authClientParametersValidator;
    private IHelpClientParametersValidator _helpClientParametersValidator;
    private IMessagesClientParametersValidator _messagesClientParametersValidator;
    private ISearchClientParametersValidator _searchClientParametersValidator;
    private ITwitterListsClientParametersValidator _twitterListsClientParametersValidator;
    private ITrendsClientParametersValidator _trendsClientParametersValidator;
    private ITimelineClientParametersValidator _timelineClientParametersValidator;
    private ITweetsClientParametersValidator _tweetsClientParametersValidator;
    private IUploadClientParametersValidator _uploadClientParametersValidator;
    private IUsersClientParametersValidator _usersClientParametersValidator;
    public ParametersValidator(IAccountActivityClientParametersValidator accountActivityClientParametersValidator, IAccountSettingsClientParametersValidator accountSettingsClientParametersValidator, IAuthClientParametersValidator authClientParametersValidator, IHelpClientParametersValidator helpClientParametersValidator, IMessagesClientParametersValidator messagesClientParametersValidator, ISearchClientParametersValidator searchClientParametersValidator, ITwitterListsClientParametersValidator twitterListsClientParametersValidator, ITrendsClientParametersValidator trendsClientParametersValidator, ITimelineClientParametersValidator timelineClientParametersValidator, ITweetsClientParametersValidator tweetsClientParametersValidator, IUploadClientParametersValidator uploadClientParametersValidator, IUsersClientParametersValidator usersClientParametersValidator);
    public sealed virtual void Validate(ICreateAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityWebhookEnvironmentsParameters parameters);
    public sealed virtual void Validate(IGetAccountActivityEnvironmentWebhooksParameters parameters);
    public sealed virtual void Validate(IDeleteAccountActivityWebhookParameters parameters);
    public sealed virtual void Validate(ITriggerAccountActivityWebhookCRCParameters parameters);
    public sealed virtual void Validate(ISubscribeToAccountActivityParameters parameters);
    public sealed virtual void Validate(ICountAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IIsAccountSubscribedToAccountActivityParameters parameters);
    public sealed virtual void Validate(IGetAccountActivitySubscriptionsParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromAccountActivityParameters parameters);
    public sealed virtual void Validate(IGetAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateAccountSettingsParameters parameters);
    public sealed virtual void Validate(IUpdateProfileParameters parameters);
    public sealed virtual void Validate(IUpdateProfileImageParameters parameters);
    public sealed virtual void Validate(IUpdateProfileBannerParameters parameters);
    public sealed virtual void Validate(IRemoveProfileBannerParameters parameters);
    public sealed virtual void Validate(ICreateBearerTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IRequestAuthUrlParameters parameters);
    public sealed virtual void Validate(IRequestCredentialsParameters parameters);
    public sealed virtual void Validate(IInvalidateAccessTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IInvalidateBearerTokenParameters parameters, ITwitterRequest request);
    public sealed virtual void Validate(IGetRateLimitsParameters parameters);
    public sealed virtual void Validate(IGetTwitterConfigurationParameters parameters);
    public sealed virtual void Validate(IGetSupportedLanguagesParameters parameters);
    public sealed virtual void Validate(IGetPlaceParameters parameters);
    public sealed virtual void Validate(IGeoSearchParameters parameters);
    public sealed virtual void Validate(IGeoSearchReverseParameters parameters);
    public sealed virtual void Validate(IPublishMessageParameters parameters);
    public sealed virtual void Validate(IDeleteMessageParameters parameters);
    public sealed virtual void Validate(IGetMessageParameters parameters);
    public sealed virtual void Validate(IGetMessagesParameters parameters);
    public sealed virtual void Validate(ICreateListParameters parameters);
    public sealed virtual void Validate(IGetListParameters parameters);
    public sealed virtual void Validate(IGetListsSubscribedByUserParameters parameters);
    public sealed virtual void Validate(IUpdateListParameters parameters);
    public sealed virtual void Validate(IDestroyListParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByAccountParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByUserParameters parameters);
    public sealed virtual void Validate(IGetTweetsFromListParameters parameters);
    public sealed virtual void Validate(IAddMemberToListParameters parameters);
    public sealed virtual void Validate(IAddMembersToListParameters parameters);
    public sealed virtual void Validate(IGetUserListMembershipsParameters parameters);
    public sealed virtual void Validate(IGetMembersOfListParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsMemberOfListParameters parameters);
    public sealed virtual void Validate(IRemoveMemberFromListParameters parameters);
    public sealed virtual void Validate(IRemoveMembersFromListParameters parameters);
    public sealed virtual void Validate(IGetAccountListMembershipsParameters parameters);
    public sealed virtual void Validate(ISubscribeToListParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromListParameters parameters);
    public sealed virtual void Validate(IGetListSubscribersParameters parameters);
    public sealed virtual void Validate(IGetAccountListSubscriptionsParameters parameters);
    public sealed virtual void Validate(IGetUserListSubscriptionsParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsSubscriberOfListParameters parameters);
    public sealed virtual void Validate(ISearchTweetsParameters parameters);
    public sealed virtual void Validate(ISearchUsersParameters parameters);
    public sealed virtual void Validate(ICreateSavedSearchParameters parameters);
    public sealed virtual void Validate(IGetSavedSearchParameters parameters);
    public sealed virtual void Validate(IListSavedSearchesParameters parameters);
    public sealed virtual void Validate(IDestroySavedSearchParameters parameters);
    public sealed virtual void Validate(IGetHomeTimelineParameters parameters);
    public sealed virtual void Validate(IGetUserTimelineParameters parameters);
    public sealed virtual void Validate(IGetMentionsTimelineParameters parameters);
    public sealed virtual void Validate(IGetRetweetsOfMeTimelineParameters parameters);
    public sealed virtual void Validate(IGetTrendsLocationCloseToParameters parameters);
    public sealed virtual void Validate(IGetTrendsAtParameters parameters);
    public sealed virtual void Validate(IGetTrendsLocationParameters parameters);
    public sealed virtual void Validate(IGetTweetParameters parameters);
    public sealed virtual void Validate(IGetTweetsParameters parameters);
    public sealed virtual void Validate(IPublishTweetParameters parameters);
    public sealed virtual void Validate(IDestroyTweetParameters parameters);
    public sealed virtual void Validate(IGetUserFavoriteTweetsParameters parameters);
    public sealed virtual void Validate(IGetRetweetsParameters parameters);
    public sealed virtual void Validate(IPublishRetweetParameters parameters);
    public sealed virtual void Validate(IDestroyRetweetParameters parameters);
    public sealed virtual void Validate(IGetRetweeterIdsParameters parameters);
    public sealed virtual void Validate(IFavoriteTweetParameters parameters);
    public sealed virtual void Validate(IUnfavoriteTweetParameters parameters);
    public sealed virtual void Validate(IGetOEmbedTweetParameters parameters);
    public sealed virtual void Validate(IUploadParameters parameters);
    public sealed virtual void Validate(IAddMediaMetadataParameters parameters);
    public sealed virtual void Validate(IGetUserParameters parameters);
    public sealed virtual void Validate(IGetUsersParameters parameters);
    public sealed virtual void Validate(IGetFollowerIdsParameters parameters);
    public sealed virtual void Validate(IGetFollowersParameters parameters);
    public sealed virtual void Validate(IGetFriendIdsParameters parameters);
    public sealed virtual void Validate(IGetFriendsParameters parameters);
    public sealed virtual void Validate(IGetRelationshipBetweenParameters parameters);
    public sealed virtual void Validate(IGetProfileImageParameters parameters);
    public sealed virtual void Validate(IGetAuthenticatedUserParameters parameters);
    public sealed virtual void Validate(IBlockUserParameters parameters);
    public sealed virtual void Validate(IUnblockUserParameters parameters);
    public sealed virtual void Validate(IReportUserForSpamParameters parameters);
    public sealed virtual void Validate(IGetBlockedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetBlockedUsersParameters parameters);
    public sealed virtual void Validate(IFollowUserParameters parameters);
    public sealed virtual void Validate(IUnfollowUserParameters parameters);
    public sealed virtual void Validate(IGetUserIdsRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUsersRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUserIdsYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IGetUsersYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IUpdateRelationshipParameters parameters);
    public sealed virtual void Validate(IGetRelationshipsWithParameters parameters);
    public sealed virtual void Validate(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public sealed virtual void Validate(IGetMutedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetMutedUsersParameters parameters);
    public sealed virtual void Validate(IMuteUserParameters parameters);
    public sealed virtual void Validate(IUnmuteUserParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.SearchClientParametersValidator : object {
    private ITwitterClient _client;
    private ISearchClientRequiredParametersValidator _searchClientRequiredParametersValidator;
    public SearchClientParametersValidator(ITwitterClient client, ISearchClientRequiredParametersValidator searchClientRequiredParametersValidator);
    public sealed virtual void Validate(ISearchTweetsParameters parameters);
    public sealed virtual void Validate(ISearchUsersParameters parameters);
    public sealed virtual void Validate(ICreateSavedSearchParameters parameters);
    public sealed virtual void Validate(IGetSavedSearchParameters parameters);
    public sealed virtual void Validate(IListSavedSearchesParameters parameters);
    public sealed virtual void Validate(IDestroySavedSearchParameters parameters);
    private bool IsSearchQueryValid(string searchQuery);
    private bool IsGeoCodeValid(IGeoCode geoCode);
}
public class Tweetinvi.Core.Client.Validators.SearchClientRequiredParametersValidator : object {
    public sealed virtual void Validate(ISearchTweetsParameters parameters);
    public sealed virtual void Validate(ISearchUsersParameters parameters);
    public sealed virtual void Validate(ICreateSavedSearchParameters parameters);
    public sealed virtual void Validate(IGetSavedSearchParameters parameters);
    public sealed virtual void Validate(IListSavedSearchesParameters parameters);
    public sealed virtual void Validate(IDestroySavedSearchParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TimelineClientParametersValidator : object {
    private ITimelineClientRequiredParametersValidator _timelineClientRequiredParametersValidator;
    private ITwitterClient _client;
    private TwitterLimits Limits { get; }
    public TimelineClientParametersValidator(ITwitterClient client, ITimelineClientRequiredParametersValidator timelineClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(IGetHomeTimelineParameters parameters);
    public sealed virtual void Validate(IGetUserTimelineParameters parameters);
    public sealed virtual void Validate(IGetMentionsTimelineParameters parameters);
    public sealed virtual void Validate(IGetRetweetsOfMeTimelineParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TimelineClientRequiredParametersValidator : object {
    private IUserQueryValidator _userQueryValidator;
    public TimelineClientRequiredParametersValidator(IUserQueryValidator userQueryValidator);
    public sealed virtual void Validate(IGetHomeTimelineParameters parameters);
    public sealed virtual void Validate(IGetUserTimelineParameters parameters);
    public sealed virtual void Validate(IGetMentionsTimelineParameters parameters);
    public sealed virtual void Validate(IGetRetweetsOfMeTimelineParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TrendsClientParametersValidator : object {
    private ITrendsClientRequiredParametersValidator _requiredParametersValidator;
    public TrendsClientParametersValidator(ITrendsClientRequiredParametersValidator requiredParametersValidator);
    public sealed virtual void Validate(IGetTrendsLocationCloseToParameters parameters);
    public sealed virtual void Validate(IGetTrendsAtParameters parameters);
    public sealed virtual void Validate(IGetTrendsLocationParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TrendsClientRequiredParametersValidator : object {
    public sealed virtual void Validate(IGetTrendsLocationCloseToParameters parameters);
    public sealed virtual void Validate(IGetTrendsAtParameters parameters);
    public sealed virtual void Validate(IGetTrendsLocationParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TweetsClientParametersValidator : object {
    private ITweetsClientRequiredParametersValidator _tweetsClientRequiredParametersValidator;
    private ITwitterClient _client;
    private TwitterLimits Limits { get; }
    public TweetsClientParametersValidator(ITwitterClient client, ITweetsClientRequiredParametersValidator tweetsClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(IGetTweetParameters parameters);
    public sealed virtual void Validate(IGetTweetsParameters parameters);
    public sealed virtual void Validate(IPublishTweetParameters parameters);
    public sealed virtual void Validate(IDestroyTweetParameters parameters);
    public sealed virtual void Validate(IGetUserFavoriteTweetsParameters parameters);
    public sealed virtual void Validate(IGetRetweetsParameters parameters);
    public sealed virtual void Validate(IPublishRetweetParameters parameters);
    public sealed virtual void Validate(IDestroyRetweetParameters parameters);
    public sealed virtual void Validate(IGetRetweeterIdsParameters parameters);
    public sealed virtual void Validate(IFavoriteTweetParameters parameters);
    public sealed virtual void Validate(IUnfavoriteTweetParameters parameters);
    public sealed virtual void Validate(IGetOEmbedTweetParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TweetsClientRequiredParametersValidator : object {
    private IUserQueryValidator _userQueryValidator;
    public TweetsClientRequiredParametersValidator(IUserQueryValidator userQueryValidator);
    public sealed virtual void Validate(IGetTweetParameters parameters);
    public sealed virtual void Validate(IGetTweetsParameters parameters);
    public sealed virtual void Validate(IPublishTweetParameters parameters);
    public sealed virtual void Validate(IDestroyTweetParameters parameters);
    public sealed virtual void Validate(IGetUserFavoriteTweetsParameters parameters);
    public sealed virtual void Validate(IGetRetweetsParameters parameters);
    public sealed virtual void Validate(IPublishRetweetParameters parameters);
    public sealed virtual void Validate(IDestroyRetweetParameters parameters);
    public sealed virtual void Validate(IGetRetweeterIdsParameters parameters);
    public sealed virtual void Validate(IFavoriteTweetParameters parameters);
    public sealed virtual void Validate(IUnfavoriteTweetParameters parameters);
    public sealed virtual void Validate(IGetOEmbedTweetParameters parameters);
    public void ThrowIfTweetCannotBeUsed(ITweetIdentifier tweet);
    public void ThrowIfTweetCannotBeUsed(ITweetIdentifier tweet, string parameterName);
    private bool IsValidTweetIdentifier(ITweetIdentifier tweetIdentifier);
}
public class Tweetinvi.Core.Client.Validators.TwitterListsClientParametersValidator : object {
    private ITwitterClient _client;
    private ITwitterListsClientRequiredParametersValidator _twitterListsClientRequiredParametersValidator;
    private TwitterLimits Limits { get; }
    public TwitterListsClientParametersValidator(ITwitterClient client, ITwitterListsClientRequiredParametersValidator twitterListsClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(ICreateListParameters parameters);
    public sealed virtual void Validate(IGetListParameters parameters);
    public sealed virtual void Validate(IGetListsSubscribedByUserParameters parameters);
    public sealed virtual void Validate(IUpdateListParameters parameters);
    public sealed virtual void Validate(IDestroyListParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByAccountParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByUserParameters parameters);
    public sealed virtual void Validate(IGetTweetsFromListParameters parameters);
    public sealed virtual void Validate(IAddMemberToListParameters parameters);
    public sealed virtual void Validate(IAddMembersToListParameters parameters);
    public sealed virtual void Validate(IGetUserListMembershipsParameters parameters);
    public sealed virtual void Validate(IGetMembersOfListParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsMemberOfListParameters parameters);
    public sealed virtual void Validate(IRemoveMemberFromListParameters parameters);
    public sealed virtual void Validate(IRemoveMembersFromListParameters parameters);
    public sealed virtual void Validate(IGetAccountListMembershipsParameters parameters);
    public sealed virtual void Validate(ISubscribeToListParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromListParameters parameters);
    public sealed virtual void Validate(IGetListSubscribersParameters parameters);
    public sealed virtual void Validate(IGetAccountListSubscriptionsParameters parameters);
    public sealed virtual void Validate(IGetUserListSubscriptionsParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsSubscriberOfListParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.TwitterListsClientRequiredParametersValidator : object {
    private IUserQueryValidator _userQueryValidator;
    public TwitterListsClientRequiredParametersValidator(IUserQueryValidator userQueryValidator);
    public sealed virtual void Validate(ICreateListParameters parameters);
    public sealed virtual void Validate(IGetListParameters parameters);
    public sealed virtual void Validate(IGetListsSubscribedByUserParameters parameters);
    public sealed virtual void Validate(IUpdateListParameters parameters);
    public sealed virtual void Validate(IDestroyListParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByAccountParameters parameters);
    public sealed virtual void Validate(IGetListsOwnedByUserParameters parameters);
    public sealed virtual void Validate(IGetTweetsFromListParameters parameters);
    public sealed virtual void Validate(IAddMemberToListParameters parameters);
    public sealed virtual void Validate(IAddMembersToListParameters parameters);
    public sealed virtual void Validate(IGetUserListMembershipsParameters parameters);
    public sealed virtual void Validate(IGetMembersOfListParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsMemberOfListParameters parameters);
    public sealed virtual void Validate(IRemoveMemberFromListParameters parameters);
    public sealed virtual void Validate(IRemoveMembersFromListParameters parameters);
    public sealed virtual void Validate(IGetAccountListMembershipsParameters parameters);
    public sealed virtual void Validate(ISubscribeToListParameters parameters);
    public sealed virtual void Validate(IUnsubscribeFromListParameters parameters);
    public sealed virtual void Validate(IGetListSubscribersParameters parameters);
    public sealed virtual void Validate(IGetAccountListSubscriptionsParameters parameters);
    public sealed virtual void Validate(IGetUserListSubscriptionsParameters parameters);
    public sealed virtual void Validate(ICheckIfUserIsSubscriberOfListParameters parameters);
    public void ThrowIfListIdentifierIsNotValid(ITwitterListIdentifier twitterListIdentifier);
}
public class Tweetinvi.Core.Client.Validators.UploadClientParametersValidator : object {
    private ITwitterClient _client;
    private IUploadClientRequiredParametersValidator _uploadClientRequiredParametersValidator;
    public TwitterLimits Limits { get; }
    public UploadClientParametersValidator(ITwitterClient client, IUploadClientRequiredParametersValidator uploadClientRequiredParametersValidator);
    public TwitterLimits get_Limits();
    public sealed virtual void Validate(IUploadParameters parameters);
    public sealed virtual void Validate(IAddMediaMetadataParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.UploadClientRequiredParametersValidator : object {
    public sealed virtual void Validate(IUploadParameters parameters);
    public sealed virtual void Validate(IAddMediaMetadataParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.UserQueryValidator : object {
    public sealed virtual void ThrowIfUserCannotBeIdentified(IUserIdentifier user);
    public sealed virtual void ThrowIfUserCannotBeIdentified(IUserIdentifier user, string parameterName);
    private bool IsScreenNameValid(string screenName);
    private bool IsUserIdValid(long userId);
}
public class Tweetinvi.Core.Client.Validators.UsersClientParametersValidator : object {
    private IUsersClientRequiredParametersValidator _usersClientRequiredParametersValidator;
    private ITwitterClient _client;
    private TwitterLimits Limits { get; }
    public UsersClientParametersValidator(ITwitterClient client, IUsersClientRequiredParametersValidator usersClientRequiredParametersValidator);
    private TwitterLimits get_Limits();
    public sealed virtual void Validate(IGetUserParameters parameters);
    public sealed virtual void Validate(IGetUsersParameters parameters);
    public sealed virtual void Validate(IGetFollowerIdsParameters parameters);
    public sealed virtual void Validate(IGetFollowersParameters parameters);
    public sealed virtual void Validate(IGetFriendIdsParameters parameters);
    public sealed virtual void Validate(IGetFriendsParameters parameters);
    public sealed virtual void Validate(IGetRelationshipBetweenParameters parameters);
    public sealed virtual void Validate(IGetProfileImageParameters parameters);
    public sealed virtual void Validate(IGetAuthenticatedUserParameters parameters);
    public sealed virtual void Validate(IBlockUserParameters parameters);
    public sealed virtual void Validate(IUnblockUserParameters parameters);
    public sealed virtual void Validate(IReportUserForSpamParameters parameters);
    public sealed virtual void Validate(IGetBlockedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetBlockedUsersParameters parameters);
    public sealed virtual void Validate(IFollowUserParameters parameters);
    public sealed virtual void Validate(IUnfollowUserParameters parameters);
    public sealed virtual void Validate(IGetUserIdsRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUsersRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUserIdsYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IGetUsersYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IUpdateRelationshipParameters parameters);
    public sealed virtual void Validate(IGetRelationshipsWithParameters parameters);
    public sealed virtual void Validate(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public sealed virtual void Validate(IGetMutedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetMutedUsersParameters parameters);
    public sealed virtual void Validate(IMuteUserParameters parameters);
    public sealed virtual void Validate(IUnmuteUserParameters parameters);
}
public class Tweetinvi.Core.Client.Validators.UsersClientRequiredParametersValidator : object {
    private IUserQueryValidator _userQueryValidator;
    public UsersClientRequiredParametersValidator(IUserQueryValidator userQueryValidator);
    public sealed virtual void Validate(IGetUserParameters parameters);
    public sealed virtual void Validate(IGetUsersParameters parameters);
    public sealed virtual void Validate(IGetFollowerIdsParameters parameters);
    public sealed virtual void Validate(IGetFollowersParameters parameters);
    public sealed virtual void Validate(IGetFriendIdsParameters parameters);
    public sealed virtual void Validate(IGetFriendsParameters parameters);
    public sealed virtual void Validate(IGetRelationshipBetweenParameters parameters);
    public sealed virtual void Validate(IGetProfileImageParameters parameters);
    public sealed virtual void Validate(IGetAuthenticatedUserParameters parameters);
    public sealed virtual void Validate(IBlockUserParameters parameters);
    public sealed virtual void Validate(IUnblockUserParameters parameters);
    public sealed virtual void Validate(IReportUserForSpamParameters parameters);
    public sealed virtual void Validate(IGetBlockedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetBlockedUsersParameters parameters);
    public sealed virtual void Validate(IFollowUserParameters parameters);
    public sealed virtual void Validate(IUnfollowUserParameters parameters);
    public sealed virtual void Validate(IGetUserIdsRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUsersRequestingFriendshipParameters parameters);
    public sealed virtual void Validate(IGetUserIdsYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IGetUsersYouRequestedToFollowParameters parameters);
    public sealed virtual void Validate(IUpdateRelationshipParameters parameters);
    public sealed virtual void Validate(IGetRelationshipsWithParameters parameters);
    public sealed virtual void Validate(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public sealed virtual void Validate(IGetMutedUserIdsParameters parameters);
    public sealed virtual void Validate(IGetMutedUsersParameters parameters);
    public sealed virtual void Validate(IMuteUserParameters parameters);
    public sealed virtual void Validate(IUnmuteUserParameters parameters);
}
public interface Tweetinvi.Core.Controllers.IAccountActivityController {
    public abstract virtual Task`1<ITwitterResult`1<IWebhookDTO>> CreateAccountActivityWebhookAsync(ICreateAccountActivityWebhookParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IGetAccountActivityWebhookEnvironmentsResultDTO>> GetAccountActivityWebhookEnvironmentsAsync(IGetAccountActivityWebhookEnvironmentsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookDTO[]>> GetAccountActivityEnvironmentWebhooksAsync(IGetAccountActivityEnvironmentWebhooksParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> DeleteAccountActivityWebhookAsync(IDeleteAccountActivityWebhookParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> TriggerAccountActivityWebhookCRCAsync(ITriggerAccountActivityWebhookCRCParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookEnvironmentSubscriptionsDTO>> GetAccountActivitySubscriptionsAsync(IGetAccountActivitySubscriptionsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IWebhookSubscriptionsCount>> CountAccountActivitySubscriptionsAsync(ICountAccountActivitySubscriptionsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> SubscribeToAccountActivityAsync(ISubscribeToAccountActivityParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> IsAccountSubscribedToAccountActivityAsync(IIsAccountSubscribedToAccountActivityParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> UnsubscribeFromAccountActivityAsync(IUnsubscribeFromAccountActivityParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.IAuthController {
    public abstract virtual Task`1<ITwitterResult`1<CreateTokenResponseDTO>> CreateBearerTokenAsync(ICreateBearerTokenParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IAuthenticationRequest>> RequestAuthUrlAsync(IRequestAuthUrlParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterCredentials>> RequestCredentialsAsync(IRequestCredentialsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<InvalidateTokenResponse>> InvalidateAccessTokenAsync(IInvalidateAccessTokenParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<InvalidateTokenResponse>> InvalidateBearerTokenAsync(IInvalidateBearerTokenParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.IHelpController {
    public abstract virtual Task`1<ITwitterResult`1<CredentialsRateLimitsDTO>> GetRateLimitsAsync(IGetRateLimitsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterConfiguration>> GetTwitterConfigurationAsync(IGetTwitterConfigurationParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<SupportedLanguage[]>> GetSupportedLanguagesAsync(IGetSupportedLanguagesParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IPlace>> GetPlaceAsync(IGetPlaceParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<SearchGeoSearchResultDTO>> SearchGeoAsync(IGeoSearchParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<SearchGeoSearchResultDTO>> SearchGeoReverseAsync(IGeoSearchReverseParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.IMessageController {
    public abstract virtual Task`1<ITwitterResult`1<ICreateMessageDTO>> PublishMessageAsync(IPublishMessageParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult> DestroyMessageAsync(IDeleteMessageParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IGetMessageDTO>> GetMessageAsync(IGetMessageParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IMessageCursorQueryResultDTO>> GetMessagesIterator(IGetMessagesParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.ITimelineController {
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetHomeTimelineIterator(IGetHomeTimelineParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetUserTimelineIterator(IGetUserTimelineParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetMentionsTimelineIterator(IGetMentionsTimelineParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetRetweetsOfMeTimelineIterator(IGetRetweetsOfMeTimelineParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.ITrendsController {
    public abstract virtual Task`1<ITwitterResult`1<IGetTrendsAtResult[]>> GetPlaceTrendsAtAsync(IGetTrendsAtParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITrendLocation[]>> GetTrendLocationsAsync(IGetTrendsLocationParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITrendLocation[]>> GetTrendsLocationCloseToAsync(IGetTrendsLocationCloseToParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.ITweetController {
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> GetTweetAsync(IGetTweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO[]>> GetTweetsAsync(IGetTweetsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> PublishTweetAsync(IPublishTweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> DestroyTweetAsync(IDestroyTweetParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetFavoriteTweetsIterator(IGetUserFavoriteTweetsParameters parameters, ITwitterRequest request);
    public abstract virtual bool CanBePublished(string text);
    public abstract virtual bool CanBePublished(IPublishTweetParameters publishTweetParameters);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> PublishRetweetAsync(IPublishRetweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> DestroyRetweetAsync(IDestroyRetweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO[]>> GetRetweetsAsync(IGetRetweetsParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetRetweeterIdsIterator(IGetRetweeterIdsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> FavoriteTweetAsync(IFavoriteTweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITweetDTO>> UnfavoriteTweetAsync(IUnfavoriteTweetParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IOEmbedTweetDTO>> GetOEmbedTweetAsync(IGetOEmbedTweetParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.ITwitterListController {
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CreateListAsync(ICreateListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> GetListAsync(IGetListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO[]>> GetListsSubscribedByUserAsync(IGetListsSubscribedByUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> UpdateListAsync(IUpdateListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> DestroyListAsync(IDestroyListParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetListsOwnedByUserIterator(IGetListsOwnedByUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> AddMemberToListAsync(IAddMemberToListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> AddMembersToListAsync(IAddMembersToListParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetUserListMembershipsIterator(IGetUserListMembershipsParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetMembersOfListIterator(IGetMembersOfListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CheckIfUserIsAListMemberAsync(ICheckIfUserIsMemberOfListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> RemoveMemberFromListAsync(IRemoveMemberFromListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> RemoveMembersFromListAsync(IRemoveMembersFromListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> SubscribeToListAsync(ISubscribeToListParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> UnsubscribeFromListAsync(IUnsubscribeFromListParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetListSubscribersIterator(IGetListSubscribersParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<ITwitterListCursorQueryResultDTO>> GetUserListSubscriptionsIterator(IGetUserListSubscriptionsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<ITwitterListDTO>> CheckIfUserIsSubscriberOfListAsync(ICheckIfUserIsSubscriberOfListParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<ITweetDTO[]>, Nullable`1<long>> GetTweetsFromListIterator(IGetTweetsFromListParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.IUserController {
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> GetAuthenticatedUserAsync(IGetAuthenticatedUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> GetUserAsync(IGetUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO[]>> GetUsersAsync(IGetUsersParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetUserIdsRequestingFriendshipIterator(IGetUserIdsRequestingFriendshipParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetFriendIdsIterator(IGetFriendIdsParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetFollowerIdsIterator(IGetFollowerIdsParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> FollowUserAsync(IFollowUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnfollowUserAsync(IUnfollowUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> BlockUserAsync(IBlockUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnblockUserAsync(IUnblockUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> ReportUserForSpamAsync(IReportUserForSpamParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetBlockedUserIdsIterator(IGetBlockedUserIdsParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetBlockedUsersIterator(IGetBlockedUsersParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipStateDTO[]>> GetRelationshipsWithAsync(IGetRelationshipsWithParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetUserIdsYouRequestedToFollowIterator(IGetUserIdsYouRequestedToFollowParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipDetailsDTO>> GetRelationshipBetweenAsync(IGetRelationshipBetweenParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IRelationshipDetailsDTO>> UpdateRelationshipAsync(IUpdateRelationshipParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<Int64[]>> GetUserIdsWhoseRetweetsAreMutedAsync(IGetUserIdsWhoseRetweetsAreMutedParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> GetMutedUserIdsIterator(IGetMutedUserIdsParameters parameters, ITwitterRequest request);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<IUserCursorQueryResultDTO>> GetMutedUsersIterator(IGetMutedUsersParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> MuteUserAsync(IMuteUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<IUserDTO>> UnmuteUserAsync(IUnmuteUserParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(IGetProfileImageParameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.V2.ITweetsV2Controller {
    public abstract virtual Task`1<ITwitterResult`1<TweetV2Response>> GetTweetAsync(IGetTweetV2Parameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<TweetsV2Response>> GetTweetsAsync(IGetTweetsV2Parameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<TweetHideV2Response>> ChangeTweetReplyVisibilityAsync(IChangeTweetReplyVisibilityV2Parameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Controllers.V2.IUsersV2Controller {
    public abstract virtual Task`1<ITwitterResult`1<UserV2Response>> GetUserAsync(IGetUserByIdV2Parameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<UserV2Response>> GetUserAsync(IGetUserByNameV2Parameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<UsersV2Response>> GetUsersAsync(IGetUsersByIdV2Parameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<UsersV2Response>> GetUsersAsync(IGetUsersByNameV2Parameters parameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Credentials.ICredentialsAccessor {
    public ITwitterCredentials ApplicationCredentials { get; public set; }
    public ITwitterCredentials CurrentThreadCredentials { get; public set; }
    public abstract virtual ITwitterCredentials get_ApplicationCredentials();
    public abstract virtual void set_ApplicationCredentials(ITwitterCredentials value);
    public abstract virtual ITwitterCredentials get_CurrentThreadCredentials();
    public abstract virtual void set_CurrentThreadCredentials(ITwitterCredentials value);
    public abstract virtual T ExecuteOperationWithCredentials(ITwitterCredentials credentials, Func`1<T> operation);
    public abstract virtual void ExecuteOperationWithCredentials(ITwitterCredentials credentials, Action operation);
}
public class Tweetinvi.Core.DTO.AccountSettingsDTO : object {
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private PrivacyMode <PrivacyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Language <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AlwaysUseHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DiscoverableByEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DiscoverableByMobilePhone>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <GeoEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCookiePersonalization>k__BackingField;
    [CompilerGeneratedAttribute]
private AllowContributorRequestMode <AllowContributorRequest>k__BackingField;
    [CompilerGeneratedAttribute]
private AllowDirectMessagesFrom <AllowDirectMessagesFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private AllowDirectMessagesFrom <AllowGroupDirectMessagesFrom>k__BackingField;
    [CompilerGeneratedAttribute]
private ITimeZone <TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisplaySensitiveMedia>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SmartMute>k__BackingField;
    [CompilerGeneratedAttribute]
private SleepTimeDTO <_sleepTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TranslatorType>k__BackingField;
    [CompilerGeneratedAttribute]
private ITrendLocation[] <TrendLocations>k__BackingField;
    [JsonPropertyAttribute("screen_name")]
public string ScreenName { get; public set; }
    [JsonPropertyAttribute("protected")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public PrivacyMode PrivacyMode { get; public set; }
    [JsonPropertyAttribute("language")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public Language Language { get; public set; }
    [JsonPropertyAttribute("always_use_https")]
public bool AlwaysUseHttps { get; public set; }
    [JsonPropertyAttribute("discoverable_by_email")]
public bool DiscoverableByEmail { get; public set; }
    [JsonPropertyAttribute("discoverable_by_mobile_phone")]
public bool DiscoverableByMobilePhone { get; public set; }
    [JsonPropertyAttribute("geo_enabled")]
public bool GeoEnabled { get; public set; }
    [JsonPropertyAttribute("use_cookie_personalization")]
public bool UseCookiePersonalization { get; public set; }
    [JsonPropertyAttribute("allow_contributor_request")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public AllowContributorRequestMode AllowContributorRequest { get; public set; }
    [JsonPropertyAttribute("allow_dms_from")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public AllowDirectMessagesFrom AllowDirectMessagesFrom { get; public set; }
    [JsonPropertyAttribute("allow_dm_groups_from")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public AllowDirectMessagesFrom AllowGroupDirectMessagesFrom { get; public set; }
    [JsonPropertyAttribute("time_zone")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITimeZone TimeZone { get; public set; }
    [JsonPropertyAttribute("display_sensitive_media")]
public bool DisplaySensitiveMedia { get; public set; }
    [JsonPropertyAttribute("smart_mute")]
public bool SmartMute { get; public set; }
    [JsonPropertyAttribute("sleep_time")]
private SleepTimeDTO _sleepTime { get; private set; }
    public bool SleepTimeEnabled { get; public set; }
    public int SleepTimeStartHour { get; public set; }
    public int SleepTimeEndHour { get; public set; }
    [JsonPropertyAttribute("translator_type")]
public string TranslatorType { get; public set; }
    [JsonPropertyAttribute("trend_location")]
public ITrendLocation[] TrendLocations { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScreenName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual PrivacyMode get_PrivacyMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrivacyMode(PrivacyMode value);
    [CompilerGeneratedAttribute]
public sealed virtual Language get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(Language value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AlwaysUseHttps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AlwaysUseHttps(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DiscoverableByEmail();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscoverableByEmail(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DiscoverableByMobilePhone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DiscoverableByMobilePhone(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_GeoEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoEnabled(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseCookiePersonalization();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseCookiePersonalization(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual AllowContributorRequestMode get_AllowContributorRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowContributorRequest(AllowContributorRequestMode value);
    [CompilerGeneratedAttribute]
public sealed virtual AllowDirectMessagesFrom get_AllowDirectMessagesFrom();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowDirectMessagesFrom(AllowDirectMessagesFrom value);
    [CompilerGeneratedAttribute]
public sealed virtual AllowDirectMessagesFrom get_AllowGroupDirectMessagesFrom();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowGroupDirectMessagesFrom(AllowDirectMessagesFrom value);
    [CompilerGeneratedAttribute]
public sealed virtual ITimeZone get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(ITimeZone value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DisplaySensitiveMedia();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplaySensitiveMedia(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SmartMute();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SmartMute(bool value);
    [CompilerGeneratedAttribute]
private SleepTimeDTO get__sleepTime();
    [CompilerGeneratedAttribute]
private void set__sleepTime(SleepTimeDTO value);
    public sealed virtual bool get_SleepTimeEnabled();
    public sealed virtual void set_SleepTimeEnabled(bool value);
    public sealed virtual int get_SleepTimeStartHour();
    public sealed virtual void set_SleepTimeStartHour(int value);
    public sealed virtual int get_SleepTimeEndHour();
    public sealed virtual void set_SleepTimeEndHour(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TranslatorType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TranslatorType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITrendLocation[] get_TrendLocations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrendLocations(ITrendLocation[] value);
}
public class Tweetinvi.Core.DTO.AttachmentDTO : object {
    [CompilerGeneratedAttribute]
private AttachmentType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private IMediaEntity <Media>k__BackingField;
    [JsonPropertyAttribute("type")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public AttachmentType Type { get; public set; }
    [JsonPropertyAttribute("media")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMediaEntity Media { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual AttachmentType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(AttachmentType value);
    [CompilerGeneratedAttribute]
public sealed virtual IMediaEntity get_Media();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Media(IMediaEntity value);
}
public class Tweetinvi.Core.DTO.CoordinatesDTO : object {
    [CompilerGeneratedAttribute]
private double <Latitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Longitude>k__BackingField;
    public double Latitude { get; public set; }
    public double Longitude { get; public set; }
    [JsonPropertyAttribute("coordinates")]
unknown List`1<double> _coordinatesSetter {private set; }
    public CoordinatesDTO(double longitude, double latitude);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Latitude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Latitude(double value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Longitude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Longitude(double value);
    private void set__coordinatesSetter(List`1<double> value);
}
public class Tweetinvi.Core.DTO.CreateMessageDTO : object {
    [CompilerGeneratedAttribute]
private IMessageEventDTO <MessageEvent>k__BackingField;
    [JsonPropertyAttribute("event")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageEventDTO MessageEvent { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IMessageEventDTO get_MessageEvent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageEvent(IMessageEventDTO value);
}
public class Tweetinvi.Core.DTO.CreateTokenResponseDTO : object {
    [CompilerGeneratedAttribute]
private string <TokenType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [JsonPropertyAttribute("token_type")]
public string TokenType { get; public set; }
    [JsonPropertyAttribute("access_token")]
public string AccessToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_TokenType();
    [CompilerGeneratedAttribute]
public void set_TokenType(string value);
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
}
public class Tweetinvi.Core.DTO.CredentialsRateLimitsDTO : object {
    [CompilerGeneratedAttribute]
private JObject <RateLimitContext>k__BackingField;
    [CompilerGeneratedAttribute]
private RateLimitResources <Resources>k__BackingField;
    [JsonPropertyAttribute("rate_limit_context")]
public JObject RateLimitContext { get; public set; }
    [JsonPropertyAttribute("resources")]
public RateLimitResources Resources { get; public set; }
    [CompilerGeneratedAttribute]
public JObject get_RateLimitContext();
    [CompilerGeneratedAttribute]
public void set_RateLimitContext(JObject value);
    [CompilerGeneratedAttribute]
public RateLimitResources get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(RateLimitResources value);
}
public abstract class Tweetinvi.Core.DTO.Cursor.BaseCursorQueryDTO`1 : object {
    [CompilerGeneratedAttribute]
private long <PreviousCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private long <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviousCursorStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextCursorStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawResult>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<T> <Results>k__BackingField;
    [JsonPropertyAttribute("previous_cursor")]
public long PreviousCursor { get; public set; }
    [JsonPropertyAttribute("next_cursor")]
public long NextCursor { get; public set; }
    [JsonPropertyAttribute("previous_cursor_str")]
public string PreviousCursorStr { get; public set; }
    [JsonPropertyAttribute("next_cursor_str")]
public string NextCursorStr { get; public set; }
    [JsonIgnoreAttribute]
public string RawResult { get; public set; }
    [JsonIgnoreAttribute]
public IEnumerable`1<T> Results { get; public set; }
    [CompilerGeneratedAttribute]
public virtual long get_PreviousCursor();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousCursor(long value);
    [CompilerGeneratedAttribute]
public virtual long get_NextCursor();
    [CompilerGeneratedAttribute]
public virtual void set_NextCursor(long value);
    [CompilerGeneratedAttribute]
public virtual string get_PreviousCursorStr();
    [CompilerGeneratedAttribute]
public virtual void set_PreviousCursorStr(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NextCursorStr();
    [CompilerGeneratedAttribute]
public virtual void set_NextCursorStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RawResult();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RawResult(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<T> get_Results();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Results(IEnumerable`1<T> value);
    public abstract virtual int GetNumberOfObjectRetrieved();
}
public class Tweetinvi.Core.DTO.Cursor.IdsCursorQueryResultDTO : BaseCursorQueryDTO`1<long> {
    private Int64[] _ids;
    [JsonPropertyAttribute("ids")]
public Int64[] Ids { get; public set; }
    public sealed virtual Int64[] get_Ids();
    public sealed virtual void set_Ids(Int64[] value);
    public virtual int GetNumberOfObjectRetrieved();
}
public class Tweetinvi.Core.DTO.Cursor.MessageCursorQueryResultDTO : BaseCursorQueryDTO`1<IMessageEventDTO> {
    private IMessageEventDTO[] _messageEvents;
    [CompilerGeneratedAttribute]
private long <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextCursorStr>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<long, IApp> <Apps>k__BackingField;
    [JsonIgnoreAttribute]
public long NextCursor { get; public set; }
    [JsonPropertyAttribute("next_cursor")]
public string NextCursorStr { get; public set; }
    [JsonPropertyAttribute("events")]
public IMessageEventDTO[] MessageEvents { get; public set; }
    [JsonPropertyAttribute("apps")]
public Dictionary`2<long, IApp> Apps { get; public set; }
    [CompilerGeneratedAttribute]
public virtual long get_NextCursor();
    [CompilerGeneratedAttribute]
public virtual void set_NextCursor(long value);
    [CompilerGeneratedAttribute]
public virtual string get_NextCursorStr();
    [CompilerGeneratedAttribute]
public virtual void set_NextCursorStr(string value);
    public virtual int GetNumberOfObjectRetrieved();
    public sealed virtual IMessageEventDTO[] get_MessageEvents();
    public sealed virtual void set_MessageEvents(IMessageEventDTO[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<long, IApp> get_Apps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Apps(Dictionary`2<long, IApp> value);
}
public class Tweetinvi.Core.DTO.Cursor.TwitterListCursorQueryResultDTO : BaseCursorQueryDTO`1<ITwitterListDTO> {
    private ITwitterListDTO[] _twitterLists;
    [JsonPropertyAttribute("lists")]
public ITwitterListDTO[] TwitterLists { get; public set; }
    public sealed virtual ITwitterListDTO[] get_TwitterLists();
    public sealed virtual void set_TwitterLists(ITwitterListDTO[] value);
    public virtual int GetNumberOfObjectRetrieved();
}
public class Tweetinvi.Core.DTO.Cursor.UserCursorQueryResultDTO : BaseCursorQueryDTO`1<IUserDTO> {
    private IUserDTO[] _users;
    [JsonPropertyAttribute("users")]
public IUserDTO[] Users { get; public set; }
    public sealed virtual IUserDTO[] get_Users();
    public sealed virtual void set_Users(IUserDTO[] value);
    public virtual int GetNumberOfObjectRetrieved();
}
public class Tweetinvi.Core.DTO.EventInitiatedViaDTO : object {
    [CompilerGeneratedAttribute]
private long <TweetId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <WelcomeMessageId>k__BackingField;
    [JsonPropertyAttribute("tweet_id")]
public long TweetId { get; public set; }
    [JsonPropertyAttribute("welcome_message_id")]
public Nullable`1<long> WelcomeMessageId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_TweetId();
    [CompilerGeneratedAttribute]
public void set_TweetId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_WelcomeMessageId();
    [CompilerGeneratedAttribute]
public void set_WelcomeMessageId(Nullable`1<long> value);
}
public class Tweetinvi.Core.DTO.Events.MessageEventDTO : object {
    [CompilerGeneratedAttribute]
private EventType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventInitiatedViaDTO <InitiatedVia>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessageCreateDTO <MessageCreate>k__BackingField;
    [JsonPropertyAttribute("type")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public EventType Type { get; public set; }
    [JsonPropertyAttribute("id")]
public long Id { get; public set; }
    [JsonPropertyAttribute("created_timestamp")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("initiated_via")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IEventInitiatedViaDTO InitiatedVia { get; public set; }
    [JsonPropertyAttribute("message_create")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageCreateDTO MessageCreate { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual EventType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(EventType value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual IEventInitiatedViaDTO get_InitiatedVia();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InitiatedVia(IEventInitiatedViaDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual IMessageCreateDTO get_MessageCreate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageCreate(IMessageCreateDTO value);
}
public class Tweetinvi.Core.DTO.ExtendedTweet : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullText>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <DisplayTextRange>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetEntities <LegacyEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetEntities <ExtendedEntities>k__BackingField;
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("full_text")]
public string FullText { get; public set; }
    [JsonPropertyAttribute("display_text_range")]
public Int32[] DisplayTextRange { get; public set; }
    [JsonPropertyAttribute("entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetEntities LegacyEntities { get; public set; }
    [JsonPropertyAttribute("extended_entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetEntities ExtendedEntities { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FullText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FullText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_DisplayTextRange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayTextRange(Int32[] value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetEntities get_LegacyEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LegacyEntities(ITweetEntities value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetEntities get_ExtendedEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedEntities(ITweetEntities value);
}
public class Tweetinvi.Core.DTO.GetMessageDTO : object {
    [CompilerGeneratedAttribute]
private IMessageEventDTO <MessageEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<long, IApp> <Apps>k__BackingField;
    [JsonPropertyAttribute("event")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageEventDTO MessageEvent { get; public set; }
    [JsonPropertyAttribute("apps")]
public Dictionary`2<long, IApp> Apps { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IMessageEventDTO get_MessageEvent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageEvent(IMessageEventDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<long, IApp> get_Apps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Apps(Dictionary`2<long, IApp> value);
}
public class Tweetinvi.Core.DTO.MessageCreateDTO : object {
    [CompilerGeneratedAttribute]
private IMessageCreateTargetDTO <Target>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SenderId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SourceAppId>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessageDataDTO <MessageData>k__BackingField;
    [JsonPropertyAttribute("target")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageCreateTargetDTO Target { get; public set; }
    [JsonPropertyAttribute("sender_id")]
public long SenderId { get; public set; }
    [JsonPropertyAttribute("source_app_id")]
public Nullable`1<long> SourceAppId { get; public set; }
    [JsonPropertyAttribute("message_data")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageDataDTO MessageData { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IMessageCreateTargetDTO get_Target();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Target(IMessageCreateTargetDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_SenderId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SenderId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_SourceAppId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceAppId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IMessageDataDTO get_MessageData();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageData(IMessageDataDTO value);
}
public class Tweetinvi.Core.DTO.MessageCreateTargetDTO : object {
    [CompilerGeneratedAttribute]
private long <RecipientId>k__BackingField;
    [JsonPropertyAttribute("recipient_id")]
public long RecipientId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_RecipientId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RecipientId(long value);
}
public class Tweetinvi.Core.DTO.MessageDataDTO : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessageEntities <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private IQuickReplyDTO <QuickReply>k__BackingField;
    [CompilerGeneratedAttribute]
private IQuickReplyResponse <QuickReplyResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private IAttachmentDTO <Attachment>k__BackingField;
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageEntities Entities { get; public set; }
    [JsonPropertyAttribute("quick_reply")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IQuickReplyDTO QuickReply { get; public set; }
    [JsonPropertyAttribute("quick_reply_response")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IQuickReplyResponse QuickReplyResponse { get; public set; }
    [JsonPropertyAttribute("attachment")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IAttachmentDTO Attachment { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IMessageEntities get_Entities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Entities(IMessageEntities value);
    [CompilerGeneratedAttribute]
public sealed virtual IQuickReplyDTO get_QuickReply();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuickReply(IQuickReplyDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual IQuickReplyResponse get_QuickReplyResponse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuickReplyResponse(IQuickReplyResponse value);
    [CompilerGeneratedAttribute]
public sealed virtual IAttachmentDTO get_Attachment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attachment(IAttachmentDTO value);
}
public class Tweetinvi.Core.DTO.MessageEntitiesDTO : ObjectEntitiesDTO {
}
public class Tweetinvi.Core.DTO.MessageEventWithAppDTO : object {
    [CompilerGeneratedAttribute]
private IMessageEventDTO <MessageEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private IApp <App>k__BackingField;
    [JsonPropertyAttribute("event")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IMessageEventDTO MessageEvent { get; public set; }
    [JsonPropertyAttribute("app")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IApp App { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IMessageEventDTO get_MessageEvent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageEvent(IMessageEventDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual IApp get_App();
    [CompilerGeneratedAttribute]
public sealed virtual void set_App(IApp value);
}
public class Tweetinvi.Core.DTO.ObjectEntitiesDTO : object {
    [CompilerGeneratedAttribute]
private List`1<IUrlEntity> <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IUserMentionEntity> <UserMentions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IHashtagEntity> <Hashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ISymbolEntity> <Symbols>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IMediaEntity> <Medias>k__BackingField;
    [JsonPropertyAttribute("urls")]
public List`1<IUrlEntity> Urls { get; public set; }
    [JsonPropertyAttribute("user_mentions")]
public List`1<IUserMentionEntity> UserMentions { get; public set; }
    [JsonPropertyAttribute("hashtags")]
public List`1<IHashtagEntity> Hashtags { get; public set; }
    [JsonPropertyAttribute("symbols")]
public List`1<ISymbolEntity> Symbols { get; public set; }
    [JsonPropertyAttribute("media")]
public List`1<IMediaEntity> Medias { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUrlEntity> get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(List`1<IUrlEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUserMentionEntity> get_UserMentions();
    [CompilerGeneratedAttribute]
public void set_UserMentions(List`1<IUserMentionEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IHashtagEntity> get_Hashtags();
    [CompilerGeneratedAttribute]
public void set_Hashtags(List`1<IHashtagEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ISymbolEntity> get_Symbols();
    [CompilerGeneratedAttribute]
public void set_Symbols(List`1<ISymbolEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IMediaEntity> get_Medias();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Medias(List`1<IMediaEntity> value);
}
public class Tweetinvi.Core.DTO.OEmbedTweetDTO : object {
    [CompilerGeneratedAttribute]
private string <AuthorName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HTML>k__BackingField;
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderURL>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CacheAge>k__BackingField;
    [JsonPropertyAttribute("author_name")]
public string AuthorName { get; public set; }
    [JsonPropertyAttribute("author_url")]
public string AuthorURL { get; public set; }
    [JsonPropertyAttribute("html")]
public string HTML { get; public set; }
    [JsonPropertyAttribute("url")]
public string URL { get; public set; }
    [JsonPropertyAttribute("provider_url")]
public string ProviderURL { get; public set; }
    [JsonPropertyAttribute("width")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public double Width { get; public set; }
    [JsonPropertyAttribute("height")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public double Height { get; public set; }
    [JsonPropertyAttribute("version")]
public string Version { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("cache_age")]
public string CacheAge { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthorName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthorURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_HTML();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HTML(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_URL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProviderURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProviderURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(double value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Height();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Height(double value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Version();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Version(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CacheAge();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CacheAge(string value);
}
public class Tweetinvi.Core.DTO.QuickReplyDTO : object {
    [CompilerGeneratedAttribute]
private QuickReplyType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private IQuickReplyOption[] <Options>k__BackingField;
    [JsonPropertyAttribute("type")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public QuickReplyType Type { get; public set; }
    [JsonPropertyAttribute("options")]
public IQuickReplyOption[] Options { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QuickReplyType get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(QuickReplyType value);
    [CompilerGeneratedAttribute]
public sealed virtual IQuickReplyOption[] get_Options();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Options(IQuickReplyOption[] value);
}
public class Tweetinvi.Core.DTO.RelationshipDetailsDTO : object {
    [CompilerGeneratedAttribute]
private TwitterRelationshipDTO <_relationship>k__BackingField;
    [JsonPropertyAttribute("relationship")]
private TwitterRelationshipDTO _relationship { get; private set; }
    private SourceRelationshipDTO _sourceAccessor { get; }
    private TargetRelationshipDTO _targetAccessor { get; }
    public long SourceId { get; }
    public string SourceIdStr { get; }
    public string SourceScreenName { get; }
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetScreenName { get; }
    [JsonIgnoreAttribute]
public bool Following { get; }
    [JsonIgnoreAttribute]
public bool FollowedBy { get; }
    [JsonIgnoreAttribute]
public bool FollowingReceived { get; }
    [JsonIgnoreAttribute]
public bool FollowingRequested { get; }
    [JsonIgnoreAttribute]
public bool NotificationsEnabled { get; }
    [JsonIgnoreAttribute]
public bool CanSendDirectMessage { get; }
    [JsonIgnoreAttribute]
public bool Blocking { get; }
    [JsonIgnoreAttribute]
public bool BlockedBy { get; }
    [JsonIgnoreAttribute]
public bool Muting { get; }
    [JsonIgnoreAttribute]
public bool WantRetweets { get; }
    [JsonIgnoreAttribute]
public bool AllReplies { get; }
    [JsonIgnoreAttribute]
public bool MarkedSpam { get; }
    [CompilerGeneratedAttribute]
private TwitterRelationshipDTO get__relationship();
    [CompilerGeneratedAttribute]
private void set__relationship(TwitterRelationshipDTO value);
    private SourceRelationshipDTO get__sourceAccessor();
    private TargetRelationshipDTO get__targetAccessor();
    public sealed virtual long get_SourceId();
    public sealed virtual string get_SourceIdStr();
    public sealed virtual string get_SourceScreenName();
    public sealed virtual long get_TargetId();
    public sealed virtual string get_TargetIdStr();
    public sealed virtual string get_TargetScreenName();
    public sealed virtual bool get_Following();
    public sealed virtual bool get_FollowedBy();
    public sealed virtual bool get_FollowingReceived();
    public sealed virtual bool get_FollowingRequested();
    public sealed virtual bool get_NotificationsEnabled();
    public sealed virtual bool get_CanSendDirectMessage();
    public sealed virtual bool get_Blocking();
    public sealed virtual bool get_BlockedBy();
    public sealed virtual bool get_Muting();
    public sealed virtual bool get_WantRetweets();
    public sealed virtual bool get_AllReplies();
    public sealed virtual bool get_MarkedSpam();
}
public class Tweetinvi.Core.DTO.RelationshipStateDTO : object {
    private List`1<string> _connections;
    [CompilerGeneratedAttribute]
private long <TargetUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetUserIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetUserScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Following>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowingRequested>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <FollowingRequestReceived>k__BackingField;
    [JsonPropertyAttribute("id")]
public long TargetUserId { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string TargetUserIdStr { get; public set; }
    [JsonPropertyAttribute("name")]
public string TargetUserName { get; public set; }
    [JsonPropertyAttribute("screen_name")]
public string TargetUserScreenName { get; public set; }
    [JsonIgnoreAttribute]
public bool Following { get; public set; }
    [JsonIgnoreAttribute]
public bool FollowedBy { get; public set; }
    [JsonIgnoreAttribute]
public bool FollowingRequested { get; public set; }
    [JsonIgnoreAttribute]
public bool FollowingRequestReceived { get; public set; }
    [JsonPropertyAttribute("connections")]
public List`1<string> Connections { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_TargetUserId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetUserId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TargetUserIdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetUserIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TargetUserName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetUserName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TargetUserScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetUserScreenName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Following();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Following(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FollowedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowedBy(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FollowingRequested();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowingRequested(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_FollowingRequestReceived();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowingRequestReceived(bool value);
    public sealed virtual List`1<string> get_Connections();
    public sealed virtual void set_Connections(List`1<string> value);
    private void UpdateConnectionInfos();
}
public class Tweetinvi.Core.DTO.SavedSearchDTO : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [JsonPropertyAttribute("id")]
public long Id { get; public set; }
    [JsonPropertyAttribute("IdStr")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("query")]
public string Query { get; public set; }
    [JsonPropertyAttribute("created_at")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public DateTimeOffset CreatedAt { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
}
public class Tweetinvi.Core.DTO.SearchMetadata : object {
    [CompilerGeneratedAttribute]
private double <CompletedIn>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MaxId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MaxIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextResults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RefreshURL>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    [CompilerGeneratedAttribute]
private long <SinceId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SinceIdStr>k__BackingField;
    [JsonPropertyAttribute("completed_in")]
public double CompletedIn { get; public set; }
    [JsonPropertyAttribute("max_id")]
public long MaxId { get; private set; }
    [JsonPropertyAttribute("max_id_str")]
public string MaxIdStr { get; private set; }
    [JsonPropertyAttribute("next_results")]
public string NextResults { get; private set; }
    [JsonPropertyAttribute("query")]
public string Query { get; private set; }
    [JsonPropertyAttribute("refresh_url")]
public string RefreshURL { get; private set; }
    [JsonPropertyAttribute("count")]
public int Count { get; private set; }
    [JsonPropertyAttribute("since_id")]
public long SinceId { get; private set; }
    [JsonPropertyAttribute("since_id_str")]
public string SinceIdStr { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual double get_CompletedIn();
    [CompilerGeneratedAttribute]
public void set_CompletedIn(double value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_MaxId();
    [CompilerGeneratedAttribute]
private void set_MaxId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MaxIdStr();
    [CompilerGeneratedAttribute]
private void set_MaxIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextResults();
    [CompilerGeneratedAttribute]
private void set_NextResults(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
private void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RefreshURL();
    [CompilerGeneratedAttribute]
private void set_RefreshURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Count();
    [CompilerGeneratedAttribute]
private void set_Count(int value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_SinceId();
    [CompilerGeneratedAttribute]
private void set_SinceId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SinceIdStr();
    [CompilerGeneratedAttribute]
private void set_SinceIdStr(string value);
}
public class Tweetinvi.Core.DTO.SearchResultsDTO : object {
    [CompilerGeneratedAttribute]
private TweetWithSearchMetadataDTO[] <TweetDTOs>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchMetadata <SearchMetadata>k__BackingField;
    [JsonPropertyAttribute("statuses")]
public TweetWithSearchMetadataDTO[] TweetDTOs { get; public set; }
    [JsonPropertyAttribute("search_metadata")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ISearchMetadata SearchMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TweetWithSearchMetadataDTO[] get_TweetDTOs();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetDTOs(TweetWithSearchMetadataDTO[] value);
    [CompilerGeneratedAttribute]
public sealed virtual ISearchMetadata get_SearchMetadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchMetadata(ISearchMetadata value);
}
public class Tweetinvi.Core.DTO.TweetDTO : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullText>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <DisplayTextRange>k__BackingField;
    [CompilerGeneratedAttribute]
private IExtendedTweet <ExtendedTweet>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Favorited>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FavoriteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserDTO <CreatedBy>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetIdentifier <CurrentUserRetweetIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetEntities <LegacyEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetEntities <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Truncated>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ReplyCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <InReplyToStatusId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InReplyToStatusIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <InReplyToUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InReplyToUserIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InReplyToScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <QuoteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <QuotedStatusId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuotedStatusIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetDTO <QuotedTweetDTO>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetweetCount>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Retweeted>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetDTO <RetweetedTweetDTO>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PossiblySensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Language> <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <ContributorsIds>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<long> <Contributors>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private IPlace <Place>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Scopes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FilterLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithheldCopyright>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <WithheldInCountries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WithheldScope>k__BackingField;
    [JsonPropertyAttribute("id")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public long Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("full_text")]
public string FullText { get; public set; }
    [JsonPropertyAttribute("display_text_range")]
public Int32[] DisplayTextRange { get; public set; }
    [JsonPropertyAttribute("extended_tweet")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IExtendedTweet ExtendedTweet { get; public set; }
    [JsonPropertyAttribute("favorited")]
public bool Favorited { get; public set; }
    [JsonPropertyAttribute("favorite_count")]
public Nullable`1<int> FavoriteCount { get; public set; }
    [JsonPropertyAttribute("user")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IUserDTO CreatedBy { get; public set; }
    [JsonPropertyAttribute("current_user_retweet")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetIdentifier CurrentUserRetweetIdentifier { get; public set; }
    [JsonPropertyAttribute("coordinates")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ICoordinates Coordinates { get; public set; }
    [JsonPropertyAttribute("entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetEntities LegacyEntities { get; public set; }
    [JsonPropertyAttribute("extended_entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetEntities Entities { get; public set; }
    [JsonPropertyAttribute("created_at")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeOffsetConverter")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("truncated")]
public bool Truncated { get; public set; }
    [JsonPropertyAttribute("reply_count")]
public Nullable`1<int> ReplyCount { get; public set; }
    [JsonPropertyAttribute("in_reply_to_status_id")]
public Nullable`1<long> InReplyToStatusId { get; public set; }
    [JsonPropertyAttribute("in_reply_to_status_id_str")]
public string InReplyToStatusIdStr { get; public set; }
    [JsonPropertyAttribute("in_reply_to_user_id")]
public Nullable`1<long> InReplyToUserId { get; public set; }
    [JsonPropertyAttribute("in_reply_to_user_id_str")]
public string InReplyToUserIdStr { get; public set; }
    [JsonPropertyAttribute("in_reply_to_screen_name")]
public string InReplyToScreenName { get; public set; }
    [JsonPropertyAttribute("quote_count")]
public Nullable`1<int> QuoteCount { get; public set; }
    [JsonPropertyAttribute("quoted_status_id")]
public Nullable`1<long> QuotedStatusId { get; public set; }
    [JsonPropertyAttribute("quoted_status_id_str")]
public string QuotedStatusIdStr { get; public set; }
    [JsonPropertyAttribute("quoted_status")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetDTO QuotedTweetDTO { get; public set; }
    [JsonPropertyAttribute("retweet_count")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public int RetweetCount { get; public set; }
    [JsonPropertyAttribute("retweeted")]
public bool Retweeted { get; public set; }
    [JsonPropertyAttribute("retweeted_status")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetDTO RetweetedTweetDTO { get; public set; }
    [JsonPropertyAttribute("possibly_sensitive")]
public bool PossiblySensitive { get; public set; }
    [JsonPropertyAttribute("lang")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public Nullable`1<Language> Language { get; public set; }
    [JsonPropertyAttribute("contributorsIds")]
public Int32[] ContributorsIds { get; public set; }
    [JsonPropertyAttribute("contributors")]
public IEnumerable`1<long> Contributors { get; public set; }
    [JsonPropertyAttribute("source")]
public string Source { get; public set; }
    [JsonPropertyAttribute("place")]
public IPlace Place { get; public set; }
    [JsonPropertyAttribute("scopes")]
public Dictionary`2<string, object> Scopes { get; public set; }
    [JsonPropertyAttribute("filter_level")]
public string FilterLevel { get; public set; }
    [JsonPropertyAttribute("withheld_copyright")]
public bool WithheldCopyright { get; public set; }
    [JsonPropertyAttribute("withheld_in_countries")]
public IEnumerable`1<string> WithheldInCountries { get; public set; }
    [JsonPropertyAttribute("withheld_scope")]
public string WithheldScope { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FullText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FullText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_DisplayTextRange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayTextRange(Int32[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IExtendedTweet get_ExtendedTweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExtendedTweet(IExtendedTweet value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Favorited();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Favorited(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FavoriteCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FavoriteCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual IUserDTO get_CreatedBy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedBy(IUserDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_CurrentUserRetweetIdentifier();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CurrentUserRetweetIdentifier(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetEntities get_LegacyEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LegacyEntities(ITweetEntities value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetEntities get_Entities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Entities(ITweetEntities value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Truncated();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Truncated(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ReplyCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReplyCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_InReplyToStatusId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToStatusId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_InReplyToStatusIdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToStatusIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_InReplyToUserId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToUserId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_InReplyToUserIdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToUserIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_InReplyToScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToScreenName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_QuoteCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuoteCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_QuotedStatusId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuotedStatusId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuotedStatusIdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuotedStatusIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetDTO get_QuotedTweetDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuotedTweetDTO(ITweetDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_RetweetCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetweetCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Retweeted();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Retweeted(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetDTO get_RetweetedTweetDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RetweetedTweetDTO(ITweetDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_PossiblySensitive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PossiblySensitive(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Language> get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(Nullable`1<Language> value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_ContributorsIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContributorsIds(Int32[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<long> get_Contributors();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Contributors(IEnumerable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Source();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Source(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IPlace get_Place();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Place(IPlace value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, object> get_Scopes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Scopes(Dictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FilterLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FilterLevel(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WithheldCopyright();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WithheldCopyright(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_WithheldInCountries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WithheldInCountries(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WithheldScope();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WithheldScope(string value);
}
public class Tweetinvi.Core.DTO.TweetEntitiesDTO : ObjectEntitiesDTO {
}
public class Tweetinvi.Core.DTO.TweetFromSearchMetadata : object {
    [CompilerGeneratedAttribute]
private string <ResultType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IsoLanguageCode>k__BackingField;
    [JsonPropertyAttribute("result_type")]
public string ResultType { get; private set; }
    [JsonPropertyAttribute("iso_language_code")]
public string IsoLanguageCode { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_ResultType();
    [CompilerGeneratedAttribute]
private void set_ResultType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IsoLanguageCode();
    [CompilerGeneratedAttribute]
private void set_IsoLanguageCode(string value);
}
public class Tweetinvi.Core.DTO.TweetIdentifierDTO : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [JsonPropertyAttribute("id")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public long Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
}
public class Tweetinvi.Core.DTO.TweetWithSearchMetadataDTO : TweetDTO {
    [CompilerGeneratedAttribute]
private ITweetFromSearchMetadata <TweetFromSearchMetadata>k__BackingField;
    [JsonPropertyAttribute("metadata")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetFromSearchMetadata TweetFromSearchMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ITweetFromSearchMetadata get_TweetFromSearchMetadata();
    [CompilerGeneratedAttribute]
public void set_TweetFromSearchMetadata(ITweetFromSearchMetadata value);
}
public class Tweetinvi.Core.DTO.TwitterListDTO : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserDTO <Owner>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Uri>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Following>k__BackingField;
    [CompilerGeneratedAttribute]
private PrivacyMode <PrivacyMode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemberCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SubscriberCount>k__BackingField;
    [JsonPropertyAttribute("id")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public long Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("slug")]
public string Slug { get; public set; }
    [JsonIgnoreAttribute]
public long OwnerId { get; }
    [JsonIgnoreAttribute]
public string OwnerScreenName { get; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("full_name")]
public string FullName { get; public set; }
    [JsonPropertyAttribute("user")]
public IUserDTO Owner { get; public set; }
    [JsonPropertyAttribute("created_at")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeOffsetConverter")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("uri")]
public string Uri { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("following")]
public bool Following { get; public set; }
    [JsonPropertyAttribute("mode")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public PrivacyMode PrivacyMode { get; public set; }
    [JsonPropertyAttribute("member_count")]
public int MemberCount { get; public set; }
    [JsonPropertyAttribute("subscriber_count")]
public int SubscriberCount { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
public void set_Slug(string value);
    public sealed virtual long get_OwnerId();
    public sealed virtual string get_OwnerScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FullName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FullName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IUserDTO get_Owner();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Owner(IUserDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Uri(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Following();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Following(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual PrivacyMode get_PrivacyMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrivacyMode(PrivacyMode value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MemberCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MemberCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_SubscriberCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriberCount(int value);
}
public class Tweetinvi.Core.DTO.UploadedImageDetailsDTO : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ImageType>k__BackingField;
    [JsonPropertyAttribute("w")]
public Nullable`1<int> Width { get; public set; }
    [JsonPropertyAttribute("h")]
public Nullable`1<int> Height { get; public set; }
    [JsonPropertyAttribute("image_type")]
public string ImageType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ImageType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImageType(string value);
}
public class Tweetinvi.Core.DTO.UploadedMediaInfo : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private long <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaIdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MediaSize>k__BackingField;
    [CompilerGeneratedAttribute]
private IUploadedImageDetails <ImageDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private IUploadedVideoDetails <VideoDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private IUploadProcessingInfo <ProcessingInfo>k__BackingField;
    [JsonIgnoreAttribute]
public DateTimeOffset CreatedDate { get; }
    [JsonPropertyAttribute("media_id")]
public long MediaId { get; public set; }
    [JsonPropertyAttribute("media_id_string")]
public string MediaIdStr { get; public set; }
    [JsonPropertyAttribute("size")]
public int MediaSize { get; public set; }
    [JsonPropertyAttribute("image")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IUploadedImageDetails ImageDetails { get; public set; }
    [JsonPropertyAttribute("video")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IUploadedVideoDetails VideoDetails { get; public set; }
    [JsonPropertyAttribute("processing_info")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IUploadProcessingInfo ProcessingInfo { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedDate();
    [CompilerGeneratedAttribute]
public sealed virtual long get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaIdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaIdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MediaSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IUploadedImageDetails get_ImageDetails();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImageDetails(IUploadedImageDetails value);
    [CompilerGeneratedAttribute]
public sealed virtual IUploadedVideoDetails get_VideoDetails();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VideoDetails(IUploadedVideoDetails value);
    [CompilerGeneratedAttribute]
public sealed virtual IUploadProcessingInfo get_ProcessingInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProcessingInfo(IUploadProcessingInfo value);
}
public class Tweetinvi.Core.DTO.UploadedVideoDetailsDTO : object {
    [CompilerGeneratedAttribute]
private string <VideoType>k__BackingField;
    [JsonPropertyAttribute("video_type")]
public string VideoType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_VideoType();
    [CompilerGeneratedAttribute]
public void set_VideoType(string value);
}
public class Tweetinvi.Core.DTO.UploadProcessingError : object {
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [JsonPropertyAttribute("code")]
public int Code { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("message")]
public string Message { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Code();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Code(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Message(string value);
}
public class Tweetinvi.Core.DTO.UploadProcessingInfo : object {
    [CompilerGeneratedAttribute]
private string <State>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CheckAfterInSeconds>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ProgressPercentage>k__BackingField;
    [CompilerGeneratedAttribute]
private IUploadProcessingError <Error>k__BackingField;
    [JsonPropertyAttribute("state")]
public string State { get; public set; }
    [JsonIgnoreAttribute]
public ProcessingState ProcessingState { get; public set; }
    [JsonPropertyAttribute("check_after_secs")]
public int CheckAfterInSeconds { get; public set; }
    [JsonIgnoreAttribute]
public int CheckAfterInMilliseconds { get; }
    [JsonPropertyAttribute("progress_percent")]
public int ProgressPercentage { get; public set; }
    [JsonPropertyAttribute("error")]
public IUploadProcessingError Error { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_State();
    [CompilerGeneratedAttribute]
public sealed virtual void set_State(string value);
    public sealed virtual ProcessingState get_ProcessingState();
    public sealed virtual void set_ProcessingState(ProcessingState value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CheckAfterInSeconds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CheckAfterInSeconds(int value);
    public sealed virtual int get_CheckAfterInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual int get_ProgressPercentage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProgressPercentage(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IUploadProcessingError get_Error();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Error(IUploadProcessingError value);
}
public class Tweetinvi.Core.DTO.UserDTO : UserIdentifierDTO {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetDTO <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <GeoEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FollowersCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FriendsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Following>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Protected>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Verified>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserEntities <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Notifications>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileImageUrlHttp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <FollowRequestSent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultProfileImage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FavoritesCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ListedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileSidebarFillColor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileSidebarBorderColor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProfileBackgroundTile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileBackgroundColor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileBackgroundImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileBackgroundImageUrlHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileBannerURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileTextColor>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileLinkColor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProfileUseBackgroundImage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsTranslator>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ContributorsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UtcOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <WithheldInCountries>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WithheldScope>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("status")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public ITweetDTO Status { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("created_at")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeOffsetConverter")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("location")]
public string Location { get; public set; }
    [JsonPropertyAttribute("geo_enabled")]
public Nullable`1<bool> GeoEnabled { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("email")]
public string Email { get; public set; }
    [JsonPropertyAttribute("statuses_count")]
public int StatusesCount { get; public set; }
    [JsonPropertyAttribute("followers_count")]
public int FollowersCount { get; public set; }
    [JsonPropertyAttribute("friends_count")]
public int FriendsCount { get; public set; }
    [JsonPropertyAttribute("following")]
public Nullable`1<bool> Following { get; public set; }
    [JsonPropertyAttribute("protected")]
public bool Protected { get; public set; }
    [JsonPropertyAttribute("verified")]
public bool Verified { get; public set; }
    [JsonPropertyAttribute("entities")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IUserEntities Entities { get; public set; }
    [JsonPropertyAttribute("notifications")]
public Nullable`1<bool> Notifications { get; public set; }
    [JsonPropertyAttribute("profile_image_url")]
public string ProfileImageUrlHttp { get; public set; }
    [JsonPropertyAttribute("profile_image_url_https")]
public string ProfileImageUrl { get; public set; }
    [JsonPropertyAttribute("follow_request_sent")]
public Nullable`1<bool> FollowRequestSent { get; public set; }
    [JsonPropertyAttribute("default_profile")]
public bool DefaultProfile { get; public set; }
    [JsonPropertyAttribute("default_profile_image")]
public bool DefaultProfileImage { get; public set; }
    [JsonPropertyAttribute("favourites_count")]
public Nullable`1<int> FavoritesCount { get; public set; }
    [JsonPropertyAttribute("listed_count")]
public Nullable`1<int> ListedCount { get; public set; }
    [JsonPropertyAttribute("profile_sidebar_fill_color")]
public string ProfileSidebarFillColor { get; public set; }
    [JsonPropertyAttribute("profile_sidebar_border_color")]
public string ProfileSidebarBorderColor { get; public set; }
    [JsonPropertyAttribute("profile_background_tile")]
public bool ProfileBackgroundTile { get; public set; }
    [JsonPropertyAttribute("profile_background_color")]
public string ProfileBackgroundColor { get; public set; }
    [JsonPropertyAttribute("profile_background_image_url")]
public string ProfileBackgroundImageUrl { get; public set; }
    [JsonPropertyAttribute("profile_background_image_url_https")]
public string ProfileBackgroundImageUrlHttps { get; public set; }
    [JsonPropertyAttribute("profile_banner_url")]
public string ProfileBannerURL { get; public set; }
    [JsonPropertyAttribute("profile_text_color")]
public string ProfileTextColor { get; public set; }
    [JsonPropertyAttribute("profile_link_color")]
public string ProfileLinkColor { get; public set; }
    [JsonPropertyAttribute("profile_use_background_image")]
public bool ProfileUseBackgroundImage { get; public set; }
    [JsonPropertyAttribute("is_translator")]
public Nullable`1<bool> IsTranslator { get; public set; }
    [JsonPropertyAttribute("contributors_enabled")]
public Nullable`1<bool> ContributorsEnabled { get; public set; }
    [JsonPropertyAttribute("utc_offset")]
public Nullable`1<int> UtcOffset { get; public set; }
    [JsonPropertyAttribute("time_zone")]
public string TimeZone { get; public set; }
    [JsonPropertyAttribute("withheld_in_countries")]
public IEnumerable`1<string> WithheldInCountries { get; public set; }
    [JsonPropertyAttribute("withheld_scope")]
public string WithheldScope { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetDTO get_Status();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Status(ITweetDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Location(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_GeoEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Email();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Email(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_StatusesCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StatusesCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_FollowersCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowersCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_FriendsCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FriendsCount(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Following();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Following(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Protected();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Protected(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Verified();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Verified(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IUserEntities get_Entities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Entities(IUserEntities value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Notifications();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Notifications(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileImageUrlHttp();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileImageUrlHttp(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileImageUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileImageUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_FollowRequestSent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FollowRequestSent(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DefaultProfile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultProfile(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_DefaultProfileImage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DefaultProfileImage(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_FavoritesCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FavoritesCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ListedCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ListedCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileSidebarFillColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileSidebarFillColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileSidebarBorderColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileSidebarBorderColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ProfileBackgroundTile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileBackgroundTile(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileBackgroundColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileBackgroundColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileBackgroundImageUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileBackgroundImageUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileBackgroundImageUrlHttps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileBackgroundImageUrlHttps(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileBannerURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileBannerURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileTextColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileTextColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileLinkColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileLinkColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ProfileUseBackgroundImage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileUseBackgroundImage(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsTranslator();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsTranslator(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ContributorsEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContributorsEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_UtcOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UtcOffset(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<string> get_WithheldInCountries();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WithheldInCountries(IEnumerable`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WithheldScope();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WithheldScope(string value);
    public virtual string ToString();
}
public class Tweetinvi.Core.DTO.UserIdentifierDTO : object {
    private long _id;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [JsonPropertyAttribute("id")]
public long Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("screen_name")]
public string ScreenName { get; public set; }
    public sealed virtual long get_Id();
    public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public void set_ScreenName(string value);
}
public class Tweetinvi.Core.DTO.Webhooks.GetAccountActivityWebhookEnvironmentsResultDTO : object {
    [CompilerGeneratedAttribute]
private IWebhookEnvironmentDTO[] <Environments>k__BackingField;
    public IWebhookEnvironmentDTO[] Environments { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookEnvironmentDTO[] get_Environments();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environments(IWebhookEnvironmentDTO[] value);
}
public class Tweetinvi.Core.DTO.Webhooks.WebhookDTO : object {
    private Uri _uri;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Valid>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    public string Id { get; public set; }
    public string Url { get; public set; }
    [JsonIgnoreAttribute]
public Uri Uri { get; }
    public bool Valid { get; public set; }
    [JsonPropertyAttribute("created_timestamp")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeOffsetConverter", "Mono.Cecil.CustomAttributeArgument[]")]
public DateTimeOffset CreatedAt { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    public sealed virtual Uri get_Uri();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Valid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Valid(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
}
public class Tweetinvi.Core.DTO.Webhooks.WebhookEnvironmentDTO : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebhookDTO[] <Webhooks>k__BackingField;
    [JsonPropertyAttribute("environment_name")]
public string Name { get; public set; }
    public IWebhookDTO[] Webhooks { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookDTO[] get_Webhooks();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Webhooks(IWebhookDTO[] value);
}
public class Tweetinvi.Core.DTO.Webhooks.WebhookEnvironmentSubscriptionsDTO : object {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationId>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebhookSubscriptionDTO[] <Subscriptions>k__BackingField;
    public string Environment { get; public set; }
    [JsonPropertyAttribute("application_id")]
public string ApplicationId { get; public set; }
    public IWebhookSubscriptionDTO[] Subscriptions { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ApplicationId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookSubscriptionDTO[] get_Subscriptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Subscriptions(IWebhookSubscriptionDTO[] value);
}
public class Tweetinvi.Core.DTO.Webhooks.WebhookSubscriptionDTO : object {
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    [JsonPropertyAttribute("user_id")]
public string UserId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserId(string value);
}
public class Tweetinvi.Core.DTO.Webhooks.WebhookSubscriptionsCountDTO : object {
    [CompilerGeneratedAttribute]
private string <AccountName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SubscriptionsCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProvisionedCount>k__BackingField;
    [JsonPropertyAttribute("account_name")]
public string AccountName { get; public set; }
    [JsonPropertyAttribute("subscriptions_count")]
public string SubscriptionsCount { get; public set; }
    [JsonPropertyAttribute("provisioned_count")]
public string ProvisionedCount { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccountName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccountName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SubscriptionsCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SubscriptionsCount(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProvisionedCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProvisionedCount(string value);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Events.EventHelpers : object {
    [ExtensionAttribute]
public static void Raise(object o, EventHandler handler);
    [ExtensionAttribute]
public static void Raise(object o, EventHandler`1<T> handler, T arg);
    [ExtensionAttribute]
public static void Raise(object o, object sender, EventHandler`1<T> handler, T arg);
    [ExtensionAttribute]
public static void Raise(object o, EventHandler`1<GenericEventArgs`1<T>> handler, T arg);
}
public interface Tweetinvi.Core.Events.IExternalClientEvents {
    [CompilerGeneratedAttribute]
public abstract virtual void add_WaitingForRateLimit(EventHandler`1<WaitingForRateLimitEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WaitingForRateLimit(EventHandler`1<WaitingForRateLimitEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeWaitingForRequestRateLimits(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeWaitingForRequestRateLimits(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeExecutingRequest(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeExecutingRequest(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_AfterExecutingRequest(EventHandler`1<AfterExecutingQueryEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_AfterExecutingRequest(EventHandler`1<AfterExecutingQueryEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_OnTwitterException(EventHandler`1<ITwitterException> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_OnTwitterException(EventHandler`1<ITwitterException> value);
}
public interface Tweetinvi.Core.Events.ITweetinviEvents {
    public abstract virtual void SubscribeToClientEvents(ITwitterClient client);
    public abstract virtual void UnsubscribeFromClientEvents(ITwitterClient client);
}
public interface Tweetinvi.Core.Events.ITwitterClientEvents {
    public abstract virtual void RaiseWaitingForRateLimit(WaitingForRateLimitEventArgs eventArgs);
    public abstract virtual void RaiseBeforeWaitingForQueryRateLimits(BeforeExecutingRequestEventArgs beforeExecutingRequestExecutedEventArgs);
    public abstract virtual void RaiseBeforeExecutingQuery(BeforeExecutingRequestEventArgs beforeExecutingRequestExecutedEventArgs);
    public abstract virtual void RaiseAfterExecutingQuery(AfterExecutingQueryEventArgs afterExecutingQueryEventArgs);
    public abstract virtual void RaiseOnTwitterException(ITwitterException exception);
}
public interface Tweetinvi.Core.Events.IWeakEvent`1 {
    public abstract virtual void AddHandler(TEventHandler handler);
    public abstract virtual void RemoveHandler(TEventHandler handler);
    public abstract virtual void Raise(object sender, EventArgs e);
}
public class Tweetinvi.Core.Events.TweetinviGlobalEvents : TwitterClientEvents {
    public sealed virtual void SubscribeToClientEvents(ITwitterClient client);
    public sealed virtual void UnsubscribeFromClientEvents(ITwitterClient client);
}
public class Tweetinvi.Core.Events.TwitterClientEvents : object {
    [CompilerGeneratedAttribute]
private EventHandler`1<WaitingForRateLimitEventArgs> WaitingForRateLimit;
    [CompilerGeneratedAttribute]
private EventHandler`1<BeforeExecutingRequestEventArgs> BeforeWaitingForRequestRateLimits;
    [CompilerGeneratedAttribute]
private EventHandler`1<BeforeExecutingRequestEventArgs> BeforeExecutingRequest;
    [CompilerGeneratedAttribute]
private EventHandler`1<AfterExecutingQueryEventArgs> AfterExecutingRequest;
    [CompilerGeneratedAttribute]
private EventHandler`1<ITwitterException> OnTwitterException;
    [CompilerGeneratedAttribute]
public sealed virtual void add_WaitingForRateLimit(EventHandler`1<WaitingForRateLimitEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_WaitingForRateLimit(EventHandler`1<WaitingForRateLimitEventArgs> value);
    protected void RaiseWaitingForRateLimit(object sender, WaitingForRateLimitEventArgs eventArgs);
    public sealed virtual void RaiseWaitingForRateLimit(WaitingForRateLimitEventArgs eventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeWaitingForRequestRateLimits(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeWaitingForRequestRateLimits(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    protected void RaiseBeforeWaitingForQueryRateLimits(object sender, BeforeExecutingRequestEventArgs beforeExecutingRequestAfterExecuteEventArgs);
    public sealed virtual void RaiseBeforeWaitingForQueryRateLimits(BeforeExecutingRequestEventArgs beforeExecutingRequestAfterExecuteEventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_BeforeExecutingRequest(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_BeforeExecutingRequest(EventHandler`1<BeforeExecutingRequestEventArgs> value);
    protected void RaiseBeforeExecutingQuery(object sender, BeforeExecutingRequestEventArgs beforeExecutingRequestExecutedEventArgs);
    public sealed virtual void RaiseBeforeExecutingQuery(BeforeExecutingRequestEventArgs beforeExecutingRequestExecutedEventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_AfterExecutingRequest(EventHandler`1<AfterExecutingQueryEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_AfterExecutingRequest(EventHandler`1<AfterExecutingQueryEventArgs> value);
    protected void RaiseAfterExecutingQuery(object sender, AfterExecutingQueryEventArgs afterExecutingQueryEventArgs);
    public sealed virtual void RaiseAfterExecutingQuery(AfterExecutingQueryEventArgs afterExecutingQueryEventArgs);
    [CompilerGeneratedAttribute]
public sealed virtual void add_OnTwitterException(EventHandler`1<ITwitterException> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_OnTwitterException(EventHandler`1<ITwitterException> value);
    protected void RaiseOnTwitterException(object sender, ITwitterException exception);
    public sealed virtual void RaiseOnTwitterException(ITwitterException exception);
}
public class Tweetinvi.Core.Events.WeakDelegate`1 : object {
    private WeakReference _targetReference;
    private MethodInfo _method;
    public bool IsAlive { get; }
    public WeakDelegate`1(Delegate realDelegate);
    public TDelegate GetDelegate();
    private Delegate GetDelegateInternal();
    public bool get_IsAlive();
    public sealed virtual bool Equals(TDelegate other);
    internal void Invoke(Object[] args);
}
public class Tweetinvi.Core.Events.WeakEvent`1 : object {
    private List`1<WeakDelegate`1<TEventHandler>> _handlers;
    private object _syncRoot;
    protected List`1<WeakDelegate`1<TEventHandler>> Handlers { get; }
    public virtual void AddHandler(TEventHandler handler);
    public virtual void RemoveHandler(TEventHandler handler);
    public virtual void Raise(object sender, EventArgs e);
    protected List`1<WeakDelegate`1<TEventHandler>> get_Handlers();
}
public interface Tweetinvi.Core.Exceptions.ISingleAggregateExceptionThrower {
    public abstract virtual void ExecuteActionAndThrowJustOneExceptionIfExist(Action action);
}
public interface Tweetinvi.Core.Exceptions.ITwitterException {
    public WebException WebException { get; }
    public string URL { get; }
    public int StatusCode { get; }
    public string TwitterDescription { get; }
    public DateTimeOffset CreationDate { get; }
    public string Content { get; public set; }
    public ITwitterExceptionInfo[] TwitterExceptionInfos { get; }
    public ITwitterQuery TwitterQuery { get; }
    public abstract virtual WebException get_WebException();
    public abstract virtual string get_URL();
    public abstract virtual int get_StatusCode();
    public abstract virtual string get_TwitterDescription();
    public abstract virtual DateTimeOffset get_CreationDate();
    public abstract virtual string get_Content();
    public abstract virtual void set_Content(string value);
    public abstract virtual ITwitterExceptionInfo[] get_TwitterExceptionInfos();
    public abstract virtual ITwitterQuery get_TwitterQuery();
}
public interface Tweetinvi.Core.Exceptions.ITwitterExceptionInfo {
    public string Message { get; public set; }
    public int Code { get; public set; }
    public string Label { get; public set; }
    public abstract virtual string get_Message();
    public abstract virtual void set_Message(string value);
    public abstract virtual int get_Code();
    public abstract virtual void set_Code(int value);
    public abstract virtual string get_Label();
    public abstract virtual void set_Label(string value);
}
public interface Tweetinvi.Core.Exceptions.IWebExceptionInfoExtractor {
    public abstract virtual int GetWebExceptionStatusNumber(WebException wex);
    public abstract virtual int GetWebExceptionStatusNumber(WebException wex, int defaultStatusCode);
    public abstract virtual string GetStatusCodeDescription(int statusCode);
    public abstract virtual ITwitterExceptionInfo[] GetTwitterExceptionInfos(string content);
    public abstract virtual ITwitterExceptionInfo[] GetTwitterExceptionInfos(WebException wex);
    public abstract virtual ITwitterExceptionInfo[] GetTwitterExceptionInfosFromStream(Stream stream);
}
public class Tweetinvi.Core.Exceptions.SingleAggregateExceptionThrower : object {
    public sealed virtual void ExecuteActionAndThrowJustOneExceptionIfExist(Action action);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.DictionaryExtensions : object {
    [ExtensionAttribute]
public static bool TryAdd(Dictionary`2<T1, T2> dictionary, T1 key, T2 value);
    [ExtensionAttribute]
public static void AddOrUpdate(Dictionary`2<T1, T2> dictionary, KeyValuePair`2<T1, T2> keyValuePair);
    [ExtensionAttribute]
public static void AddOrUpdate(Dictionary`2<T1, T2> dictionary, T1 key, T2 value);
    [ExtensionAttribute]
public static Dictionary`2<T1, T2> MergeWith(Dictionary`2<T1, T2> source, Dictionary`2<T1, T2> other);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.EnumExtensions : object {
    [ExtensionAttribute]
public static T GetAttributeOfType(object enumVal);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.ExceptionExtension : object {
    [ExtensionAttribute]
public static int GetWebExceptionStatusNumber(WebException wex);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.IEnumerableExtension : object {
    [ExtensionAttribute]
public static void ForEach(IEnumerable`1<T> collection, Action`1<T> action);
    [ExtensionAttribute]
public static bool ContainsSameObjectsAs(IEnumerable`1<T> collection, IEnumerable`1<T> collection2);
    [ExtensionAttribute]
public static bool ContainsSameObjectsAs(T[] collection, T[] collection2, bool enforceOrder);
    [ExtensionAttribute]
public static bool ContainsSameObjectsAs(IList`1<T> collection, IList`1<T> collection2, bool enforceOrder);
    [ExtensionAttribute]
public static bool IsNullOrEmpty(IEnumerable`1<T> collection);
    [ExtensionAttribute]
public static bool IsEmpty(IEnumerable`1<T> collection);
    [ExtensionAttribute]
public static TSource JustOneOrDefault(IEnumerable`1<TSource> source, Func`2<TSource, bool> isMatching);
    [ExtensionAttribute]
public static TSource JustOneOrDefault(IEnumerable`1<TSource> source);
    [ExtensionAttribute]
public static IEnumerable`1<TSource> Distinct(IEnumerable`1<TSource> source, Func`3<TSource, TSource, bool> areTheSame);
    [ExtensionAttribute]
public static IEnumerable`1<TSource> SafeConcat(IEnumerable`1<TSource> source, IEnumerable`1<TSource> target, IEnumerable`1[] additionalTargets);
    [ExtensionAttribute]
public static void AddRangeSafely(List`1<TSource> source, IEnumerable`1<TSource> newElements);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.LanguageExtension : object {
    [CompilerGeneratedAttribute]
private static HashSet`1<Language> <ExistingDisplayLanguages>k__BackingField;
    private static object _displayLanguagesLock;
    private static HashSet`1<Language> ExistingDisplayLanguages { get; private set; }
    private static LanguageExtension();
    [ExtensionAttribute]
public static string GetLanguageCode(Language language);
    [ExtensionAttribute]
public static string GetLanguageCode(LanguageFilter language);
    [ExtensionAttribute]
public static string GetLanguageCode(Nullable`1<LanguageFilter> language);
    public static Language GetLangFromDescription(string descriptionValue);
    public static Language GetLangFromDescription(int descriptionIndex);
    private static bool IsValidDescriptionField(string descriptionValue, FieldInfo field);
    [CompilerGeneratedAttribute]
private static HashSet`1<Language> get_ExistingDisplayLanguages();
    [CompilerGeneratedAttribute]
private static void set_ExistingDisplayLanguages(HashSet`1<Language> value);
    [ExtensionAttribute]
public static bool IsADisplayLanguage(Nullable`1<Language> language);
    [ExtensionAttribute]
public static bool IsADisplayLanguage(Language language);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.StringExtension : object {
    private static Regex _linkParser;
    private static HttpUtility _httpUtility;
    private static string TWITTER_URL_REGEX;
    private static Regex LinkParser { get; }
    private static StringExtension();
    private static Regex get_LinkParser();
    [ExtensionAttribute]
public static ITweetTextParts TweetParts(string tweetText);
    [ObsoleteAttribute("The value returned are no longer correct as Twitter changed their counting algorithm. Please use twitter-text official implementations in the meantime (https://github.com/twitter/twitter-text).")]
public static int EstimateTweetLength(string tweet, bool willBePublishedWithMedia);
    [ExtensionAttribute]
public static bool IsMatchingJsonFormat(string json);
    [ExtensionAttribute]
public static string HTMLDecode(string s);
    [ExtensionAttribute]
public static string GetURLParameter(string url, string parameterName);
    [ExtensionAttribute]
public static string ReplaceNonPrintableCharacters(string s, char replaceWith);
    [ExtensionAttribute]
public static string CleanForRegexGroupName(string groupName);
    [ExtensionAttribute]
public static string CleanForRegex(string regexKeyword);
    public static string RegexFiltering(String[] keywords);
    [ExtensionAttribute]
public static char Last(string s);
    [ExtensionAttribute]
public static void AddParameterToQuery(StringBuilder queryBuilder, string parameterName, string parameterValue);
    [ExtensionAttribute]
public static void AddFormattedParameterToQuery(StringBuilder queryBuilder, string parameter);
    [ExtensionAttribute]
public static void AddFormattedParameterToParametersList(StringBuilder queryBuilder, string parameter);
    [ExtensionAttribute]
public static void AddParameterToQuery(StringBuilder queryBuilder, string parameterName, T parameterValue);
    [ExtensionAttribute]
public static string AddParameterToQuery(string query, string parameterName, string parameterValue);
}
public class Tweetinvi.Core.Extensions.StringFormater : object {
    private static string UNRESERVED_CHARS;
    public static string UrlEncode(string str);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.TweetSearchFiltersExtension : object {
    [ExtensionAttribute]
public static string GetQueryFilterName(TweetSearchFilters tweetSearchFilters);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.TwitterTimeZoneExtension : object {
    [ExtensionAttribute]
public static string GetDisplayableValue(TimeZoneFromTwitter timeZoneFromTwitter);
    [ExtensionAttribute]
public static string GetTZinfo(TimeZoneFromTwitter timeZoneFromTwitter);
    private static TimeZoneFromTwitterAttribute GetAttribute(TimeZoneFromTwitter timeZoneFromTwitter);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Extensions.UriExtensions : object {
    [ExtensionAttribute]
public static string GetEndpointURL(Uri uri);
}
public interface Tweetinvi.Core.Factories.ITwitterListIdentifierFactory {
    public abstract virtual ITwitterListIdentifier Create(long listId);
    public abstract virtual ITwitterListIdentifier Create(string slug, IUserIdentifier user);
    public abstract virtual ITwitterListIdentifier Create(string slug, long ownerId);
    public abstract virtual ITwitterListIdentifier Create(string slug, string ownerScreenName);
}
public interface Tweetinvi.Core.Factories.IUserIdentifierFactory {
    public abstract virtual IUserIdentifier Create(long userId);
    public abstract virtual IUserIdentifier Create(string userScreenName);
}
public class Tweetinvi.Core.Helpers.AttributeHelper : object {
    public sealed virtual Dictionary`2<T2, PropertyInfo> GetAllPropertiesAttributes();
    public sealed virtual IEnumerable`1<T1> GetAttributes(MethodInfo method);
    public sealed virtual IEnumerable`1<T1> GetAttributes(MemberInfo property);
    public sealed virtual IEnumerable`1<T1> GetPropertyAttributes(Expression`1<Func`1<T3>> propertyExpression);
}
public static class Tweetinvi.Core.Helpers.CredentialsHashCodeGenerator : object {
    public static string CreateHash(IReadOnlyTwitterCredentials credentials);
    public static string CreateHash(IReadOnlyConsumerCredentials credentials);
}
public static class Tweetinvi.Core.Helpers.EnumHelpers : object {
    public static TEnum GetValueWhereAttribute(Func`2<TAttr, bool> attributePredicate, string exceptionMessage);
    public static bool TryGetValueWhereAttribute(Func`2<TAttr, bool> attributePredicate, TEnum& val);
}
public class Tweetinvi.Core.Helpers.HttpUtility : object {
    private Regex _entityResolver;
    public sealed virtual string HtmlEncode(string unicodeText);
    public sealed virtual string HtmlEncode(string unicodeText, bool encodeTagsToo);
    public sealed virtual string HtmlDecode(string encodedText);
    public sealed virtual string HtmlDecode(string encodedText, bool encodeTagsToo);
    private string ResolveEntityNotAngleAmp(Match matchToProcess);
    private string ResolveEntityAngleAmp(Match matchToProcess);
    private int HexToInt(string hexstr);
    private string EntityLookup(string entity);
}
public interface Tweetinvi.Core.Helpers.IAttributeHelper {
    public abstract virtual IEnumerable`1<T1> GetAttributes(MethodInfo method);
    public abstract virtual IEnumerable`1<T1> GetAttributes(MemberInfo property);
    public abstract virtual Dictionary`2<T2, PropertyInfo> GetAllPropertiesAttributes();
    public abstract virtual IEnumerable`1<T1> GetPropertyAttributes(Expression`1<Func`1<T3>> propertyExpression);
}
public interface Tweetinvi.Core.Helpers.IHttpClientWebHelper {
    public abstract virtual Task`1<HttpResponseMessage> GetHttpResponseAsync(ITwitterQuery twitterQuery, ITwitterClientHandler handler);
    public abstract virtual HttpClient GetHttpClient(ITwitterQuery twitterQuery, ITwitterClientHandler handler);
}
public interface Tweetinvi.Core.Helpers.IHttpUtility {
    public abstract virtual string HtmlEncode(string unicodeText);
    public abstract virtual string HtmlEncode(string unicodeText, bool encodeTagsToo);
    public abstract virtual string HtmlDecode(string unicodeText);
    public abstract virtual string HtmlDecode(string unicodeText, bool encodeTagsToo);
}
public interface Tweetinvi.Core.Helpers.IJsonObjectConverter {
    public abstract virtual string Serialize(object o, JsonConverter[] converters);
    public abstract virtual T Deserialize(string json, JsonConverter[] converters);
}
public interface Tweetinvi.Core.Helpers.IJsonPropertyConverterRepository {
    public abstract virtual JsonConverter GetObjectConverter(object objectToConvert);
    public abstract virtual JsonConverter GetTypeConverter(Type objectType);
    public abstract virtual bool CanConvert(Type objectType);
    public abstract virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public abstract virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public interface Tweetinvi.Core.Helpers.IPagedOperationsHelper {
    public abstract virtual Task`1<TResult[]> IterateOverWithLimit(TInput[] input, Func`2<TInput[], Task`1<TResult[]>> transform, int maxItemsPerRequest);
}
public interface Tweetinvi.Core.Helpers.ITaskDelayer {
    public abstract virtual Task Delay(TimeSpan timeSpan);
}
public interface Tweetinvi.Core.Helpers.ITwitterStringFormatter {
    public abstract virtual string TwitterEncode(string source);
    public abstract virtual string TwitterDecode(string source);
}
public interface Tweetinvi.Core.Helpers.IWebHelper {
    public abstract virtual Task`1<Stream> GetResponseStreamAsync(ITwitterRequest request);
    public abstract virtual Dictionary`2<string, string> GetUriParameters(Uri uri);
    public abstract virtual Dictionary`2<string, string> GetURLParameters(string url);
    public abstract virtual Dictionary`2<string, string> GetQueryParameters(string queryUrl);
    public abstract virtual string GetBaseURL(string url);
    public abstract virtual string GetBaseURL(Uri uri);
}
public class Tweetinvi.Core.Helpers.PagedOperationsHelper : object {
    [AsyncStateMachineAttribute("Tweetinvi.Core.Helpers.PagedOperationsHelper/<GetPageResultIterator>d__0`2")]
public Task`1<TResult[]> GetPageResultIterator(TInput[] input, Func`2<TInput[], Task`1<TResult[]>> transform, int maxItemsPerRequest);
    [AsyncStateMachineAttribute("Tweetinvi.Core.Helpers.PagedOperationsHelper/<IterateOverWithLimit>d__1`2")]
public sealed virtual Task`1<TResult[]> IterateOverWithLimit(TInput[] input, Func`2<TInput[], Task`1<TResult[]>> transform, int maxItemsPerRequest);
}
public static class Tweetinvi.Core.Helpers.ResourcesHelper : object {
    public static string GetResourceByName(object source, string resourceName);
    public static string GetResourceByType(Type type, string resourceName, object source);
}
public class Tweetinvi.Core.Helpers.TaskDelayer : object {
    public sealed virtual Task Delay(TimeSpan timeSpan);
}
public class Tweetinvi.Core.Helpers.TweetTextParts : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Mentions>k__BackingField;
    public string Content { get; }
    public string Prefix { get; }
    public String[] Mentions { get; }
    public TweetTextParts(string text);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Content();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Prefix();
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Mentions();
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Helpers.UnicodeHelper : object {
    public static string SubstringByTextElements(string str, int startingTextElement);
    public static string SubstringByTextElements(string str, int startingTextElement, int lengthInTextElements);
    public static bool AnyUnicode(string str);
    [ExtensionAttribute]
public static int UTF32Length(string str);
}
public class Tweetinvi.Core.Injectinvi.ConstructorNamedParameter : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Name { get; }
    public object Value { get; }
    public ConstructorNamedParameter(string name, object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
}
public class Tweetinvi.Core.Injectinvi.Factory`1 : object {
    private ITweetinviContainer _container;
    public Factory`1(ITweetinviContainer container);
    public sealed virtual T Create(IConstructorNamedParameter[] parameters);
    public sealed virtual IConstructorNamedParameter GenerateParameterOverrideWrapper(string parameterName, object parameterValue);
}
public interface Tweetinvi.Core.Injectinvi.IConstructorNamedParameter {
    public string Name { get; }
    public object Value { get; }
    public abstract virtual string get_Name();
    public abstract virtual object get_Value();
}
public interface Tweetinvi.Core.Injectinvi.IFactory`1 {
    public abstract virtual T Create(IConstructorNamedParameter[] parameters);
    public abstract virtual IConstructorNamedParameter GenerateParameterOverrideWrapper(string parameterName, object parameterValue);
}
public interface Tweetinvi.Core.Injectinvi.ITweetinviContainer {
    public bool IsInitialized { get; }
    public List`1<Action`1<ContainerBuilder>> RegistrationActions { get; }
    public ITwitterClient AssociatedClient { get; public set; }
    public abstract virtual bool get_IsInitialized();
    public abstract virtual List`1<Action`1<ContainerBuilder>> get_RegistrationActions();
    public abstract virtual ITwitterClient get_AssociatedClient();
    public abstract virtual void set_AssociatedClient(ITwitterClient value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_BeforeRegistrationCompletes(EventHandler`1<TweetinviContainerEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_BeforeRegistrationCompletes(EventHandler`1<TweetinviContainerEventArgs> value);
    public abstract virtual void Initialize();
    public abstract virtual void RegisterType(RegistrationLifetime registrationLifetime);
    public abstract virtual void RegisterGeneric(Type sourceType, Type targetType, RegistrationLifetime registrationLifetime);
    public abstract virtual void RegisterInstance(Type targetType, object value);
    public abstract virtual void RegisterDecorator();
    public abstract virtual T Resolve(IConstructorNamedParameter[] parameters);
}
public interface Tweetinvi.Core.Injectinvi.ITweetinviModule {
    public abstract virtual void Initialize(ITweetinviContainer container);
}
public enum Tweetinvi.Core.Injectinvi.RegistrationLifetime : Enum {
    public int value__;
    public static RegistrationLifetime InstancePerResolve;
    public static RegistrationLifetime InstancePerApplication;
}
public class Tweetinvi.Core.Injectinvi.TweetinviCoreModule : object {
    private static ITweetinviContainer _container;
    public static ITweetinviContainer TweetinviContainer { get; }
    public TweetinviCoreModule(ITweetinviContainer container);
    public static ITweetinviContainer get_TweetinviContainer();
    public sealed virtual void Initialize(ITweetinviContainer container);
    private void InitializeParameters(ITweetinviContainer container);
    private static void InitializeParametersValidators(ITweetinviContainer container);
}
public enum Tweetinvi.Core.Interfaces.Streaminvi.RepliesFilterType : Enum {
    public int value__;
    public static RepliesFilterType AllReplies;
    public static RepliesFilterType RepliesToKnownUsers;
}
public class Tweetinvi.Core.Iterators.CursorPageResult`2 : PageResult`1<TItem> {
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    public TCursor NextCursor { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NextCursor(TCursor value);
}
public interface Tweetinvi.Core.Iterators.ICursorPageResult`2 {
    public TCursor NextCursor { get; public set; }
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual void set_NextCursor(TCursor value);
}
public interface Tweetinvi.Core.Iterators.IIteratorPageResult`2 {
    public TPageContent Content { get; }
    public TCursor NextCursor { get; }
    public bool IsLastPage { get; }
    public abstract virtual TPageContent get_Content();
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual bool get_IsLastPage();
}
public interface Tweetinvi.Core.Iterators.IMultiLevelCursorIteratorFactory {
    public abstract virtual IMultiLevelCursorIterator`2<TInput, TOutput> Create(ITwitterPageIterator`1<ITwitterResult`1<TDTO>> pageIterator, Func`2<TDTO, TInput[]> transform, Func`2<TInput[], Task`1<TOutput[]>> getChildItems, int maxPageSize);
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> CreateUserMultiLevelIterator(ITwitterClient client, ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> iterator, int maxPageSize);
}
public interface Tweetinvi.Core.Iterators.IPageCursorIteratorFactories {
    public abstract virtual ITwitterPageIterator`2<ITwitterResult`1<T[]>, Nullable`1<long>> Create(IMinMaxQueryParameters parameters, Func`2<Nullable`1<long>, Task`1<ITwitterResult`1<T[]>>> getNext);
    public abstract virtual ITwitterPageIterator`1<ITwitterResult`1<T>> Create(ICursorQueryParameters parameters, Func`2<string, Task`1<ITwitterResult`1<T>>> getNext);
}
public interface Tweetinvi.Core.Iterators.IPageProcessingResult`2 {
    public TItem[] Items { get; public set; }
    public TParent[] AssociatedParentItems { get; public set; }
    public abstract virtual TItem[] get_Items();
    public abstract virtual void set_Items(TItem[] value);
    public abstract virtual TParent[] get_AssociatedParentItems();
    public abstract virtual void set_AssociatedParentItems(TParent[] value);
}
public interface Tweetinvi.Core.Iterators.IPageResult`1 {
    public TItem[] Items { get; public set; }
    public bool IsLastPage { get; }
    public abstract virtual TItem[] get_Items();
    public abstract virtual void set_Items(TItem[] value);
    public abstract virtual bool get_IsLastPage();
}
public class Tweetinvi.Core.Iterators.IteratorPageProxy`3 : object {
    private ITwitterPageIterator`2<TInput, TCursor> _source;
    private Func`2<TInput, TOutput> _transform;
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Completed>k__BackingField;
    public TCursor NextCursor { get; private set; }
    public bool Completed { get; private set; }
    public IteratorPageProxy`3(ITwitterPageIterator`2<TInput, TCursor> source, Func`2<TInput, TOutput> transform);
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
private void set_NextCursor(TCursor value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Completed();
    [CompilerGeneratedAttribute]
private void set_Completed(bool value);
    [AsyncStateMachineAttribute("Tweetinvi.Core.Iterators.IteratorPageProxy`3/<NextPageAsync>d__11")]
public sealed virtual Task`1<IIteratorPageResult`2<TOutput, TCursor>> NextPageAsync();
}
public class Tweetinvi.Core.Iterators.IteratorPageResult`2 : object {
    [CompilerGeneratedAttribute]
private TPageContent <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLastPage>k__BackingField;
    public TPageContent Content { get; }
    public TCursor NextCursor { get; }
    public bool IsLastPage { get; }
    public IteratorPageResult`2(TPageContent content, TCursor nextCursor, bool isLastPage);
    [CompilerGeneratedAttribute]
public sealed virtual TPageContent get_Content();
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsLastPage();
}
public interface Tweetinvi.Core.Iterators.ITwitterIteratorPageResult`2 {
    public string RawResult { get; }
    public abstract virtual string get_RawResult();
}
public interface Tweetinvi.Core.Iterators.ITwitterPageIterator`1 {
}
public interface Tweetinvi.Core.Iterators.ITwitterPageIterator`2 {
    public TCursor NextCursor { get; }
    public bool Completed { get; }
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual bool get_Completed();
    public abstract virtual Task`1<ITwitterIteratorPageResult`2<TPage, TCursor>> NextPageAsync();
}
public class Tweetinvi.Core.Iterators.MultiLevelCursorIterator`2 : MultiLevelCursorIterator`3<TParent, TItem, string> {
    public MultiLevelCursorIterator`2(Func`1<Task`1<ICursorPageResult`2<TParent, string>>> iterateSubLevel, Func`2<TParent[], Task`1<IPageProcessingResult`2<TParent, TItem>>> getChildItemsPageFromParent);
}
public class Tweetinvi.Core.Iterators.MultiLevelCursorIterator`3 : object {
    private Func`1<Task`1<ICursorPageResult`2<TParent, TCursor>>> _iterateSubLevel;
    private Func`2<TParent[], Task`1<IPageProcessingResult`2<TParent, TItem>>> _getChildItemsPageFromParent;
    private HashSet`1<TParent> _itemsLeftToProcess;
    private ICursorPageResult`2<TParent, TCursor> _lastParentPageResult;
    public bool Completed { get; }
    public MultiLevelCursorIterator`3(Func`1<Task`1<ICursorPageResult`2<TParent, TCursor>>> iterateSubLevel, Func`2<TParent[], Task`1<IPageProcessingResult`2<TParent, TItem>>> getChildItemsPageFromParent);
    public sealed virtual bool get_Completed();
    [AsyncStateMachineAttribute("Tweetinvi.Core.Iterators.MultiLevelCursorIterator`3/<NextPageAsync>d__7")]
public sealed virtual Task`1<IMultiLevelCursorIteratorPage`3<TParent, TItem, TCursor>> NextPageAsync();
    [CompilerGeneratedAttribute]
private void <NextPageAsync>b__7_0(TParent item);
}
public class Tweetinvi.Core.Iterators.MultiLevelCursorIteratorFactory : object {
    public sealed virtual IMultiLevelCursorIterator`2<TInput, TOutput> Create(ITwitterPageIterator`1<ITwitterResult`1<TDTO>> pageIterator, Func`2<TDTO, TInput[]> transform, Func`2<TInput[], Task`1<TOutput[]>> getChildItems, int maxPageSize);
    public sealed virtual IMultiLevelCursorIterator`2<long, IUser> CreateUserMultiLevelIterator(ITwitterClient client, ITwitterPageIterator`1<ITwitterResult`1<IIdsCursorQueryResultDTO>> iterator, int maxPageSize);
}
public class Tweetinvi.Core.Iterators.MultiLevelCursorIteratorPage`3 : CursorPageResult`2<TItem, TCursor> {
    [CompilerGeneratedAttribute]
private TParent[] <AssociatedParentItems>k__BackingField;
    public TParent[] AssociatedParentItems { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TParent[] get_AssociatedParentItems();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AssociatedParentItems(TParent[] value);
}
public class Tweetinvi.Core.Iterators.MultiLevelPageProcessingResult`2 : object {
    [CompilerGeneratedAttribute]
private TItem[] <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private TParent[] <AssociatedParentItems>k__BackingField;
    public TItem[] Items { get; public set; }
    public TParent[] AssociatedParentItems { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TItem[] get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(TItem[] value);
    [CompilerGeneratedAttribute]
public sealed virtual TParent[] get_AssociatedParentItems();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AssociatedParentItems(TParent[] value);
}
public class Tweetinvi.Core.Iterators.PageCursorIteratorFactories : object {
    public sealed virtual ITwitterPageIterator`2<ITwitterResult`1<T[]>, Nullable`1<long>> Create(IMinMaxQueryParameters parameters, Func`2<Nullable`1<long>, Task`1<ITwitterResult`1<T[]>>> getNext);
    public sealed virtual ITwitterPageIterator`1<ITwitterResult`1<T>> Create(ICursorQueryParameters parameters, Func`2<string, Task`1<ITwitterResult`1<T>>> getNext);
}
public class Tweetinvi.Core.Iterators.PageResult`1 : object {
    [CompilerGeneratedAttribute]
private TItem[] <Items>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLastPage>k__BackingField;
    public TItem[] Items { get; public set; }
    public bool IsLastPage { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual TItem[] get_Items();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Items(TItem[] value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsLastPage();
    [CompilerGeneratedAttribute]
public void set_IsLastPage(bool value);
    public sealed virtual IEnumerator`1<TItem> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Tweetinvi.Core.Iterators.TwitterIteratorPage`3 : object {
    private TItemCollection _items;
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLastPage>k__BackingField;
    public TCursor NextCursor { get; }
    public bool IsLastPage { get; }
    public TwitterIteratorPage`3(TItemCollection items, TCursor nextCursor, bool isLastPage);
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsLastPage();
    public sealed virtual IEnumerator`1<TItem> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public class Tweetinvi.Core.Iterators.TwitterIteratorPageResult`2 : IteratorPageResult`2<TPageContent, TCursor> {
    [CompilerGeneratedAttribute]
private string <RawResult>k__BackingField;
    public string RawResult { get; }
    public TwitterIteratorPageResult`2(TPageContent content, TCursor nextCursor, bool isLastPage);
    [CompilerGeneratedAttribute]
public sealed virtual string get_RawResult();
}
public class Tweetinvi.Core.Iterators.TwitterIteratorProxy`2 : TwitterIteratorProxy`3<TInput, TOutput, string> {
    public TwitterIteratorProxy`2(ITwitterPageIterator`2<TInput, string> source, Func`2<TInput, TOutput[]> transform);
}
public class Tweetinvi.Core.Iterators.TwitterIteratorProxy`3 : object {
    private ITwitterPageIterator`2<TInput, TCursor> _source;
    private Func`2<TInput, TOutput[]> _transform;
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Completed>k__BackingField;
    public TCursor NextCursor { get; private set; }
    public bool Completed { get; private set; }
    public TwitterIteratorProxy`3(ITwitterPageIterator`2<TInput, TCursor> source, Func`2<TInput, TOutput[]> transform);
    public TwitterIteratorProxy`3(ITwitterPageIterator`2<TInput, TCursor> source, Func`2<TInput, IEnumerable`1<TOutput>> transform);
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
private void set_NextCursor(TCursor value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Completed();
    [CompilerGeneratedAttribute]
private void set_Completed(bool value);
    [AsyncStateMachineAttribute("Tweetinvi.Core.Iterators.TwitterIteratorProxy`3/<NextPageAsync>d__12")]
public sealed virtual Task`1<ITwitterIteratorPage`2<TOutput, TCursor>> NextPageAsync();
}
public class Tweetinvi.Core.Iterators.TwitterPageIterator`1 : TwitterPageIterator`2<TPage, string> {
    public TwitterPageIterator`1(string initialCursor, Func`2<string, Task`1<TPage>> getNextPage, Func`2<TPage, string> extractNextCursor, Func`2<TPage, bool> isCompleted);
}
public class Tweetinvi.Core.Iterators.TwitterPageIterator`2 : object {
    private Func`2<TCursor, Task`1<TPage>> _getNextPage;
    private Func`2<TPage, TCursor> _extractNextCursor;
    private Func`2<TPage, bool> _isCompleted;
    [CompilerGeneratedAttribute]
private TCursor <NextCursor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Completed>k__BackingField;
    public TCursor NextCursor { get; private set; }
    public bool Completed { get; private set; }
    public TwitterPageIterator`2(TCursor initialCursor, Func`2<TCursor, Task`1<TPage>> getNextPage, Func`2<TPage, TCursor> extractNextCursor, Func`2<TPage, bool> isCompleted);
    [CompilerGeneratedAttribute]
public sealed virtual TCursor get_NextCursor();
    [CompilerGeneratedAttribute]
private void set_NextCursor(TCursor value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Completed();
    [CompilerGeneratedAttribute]
private void set_Completed(bool value);
    [AsyncStateMachineAttribute("Tweetinvi.Core.Iterators.TwitterPageIterator`2/<NextPageAsync>d__12")]
public sealed virtual Task`1<ITwitterIteratorPageResult`2<TPage, TCursor>> NextPageAsync();
}
public interface Tweetinvi.Core.Json.IJsonConverter {
    public abstract virtual object GetObjectToSerialize(object source);
    public abstract virtual object Deserialize(string json);
}
public interface Tweetinvi.Core.Json.ITweetinviJsonConverter {
    public abstract virtual string ToJson(TFrom obj);
    public abstract virtual string ToJson(TFrom obj);
    public abstract virtual TTo ConvertJsonTo(string json);
}
public class Tweetinvi.Core.Json.JsonTypeConverter`2 : object {
    private Func`2<T1, T2> _getDto;
    private Func`2<string, T1> _deserializer;
    public JsonTypeConverter`2(Func`2<T1, T2> getDto, Func`2<string, T1> deserializer);
    public sealed virtual object GetObjectToSerialize(object source);
    public sealed virtual object Deserialize(string json);
}
public class Tweetinvi.Core.Json.TweetinviJsonConverter : object {
    private IJsonObjectConverter _jsonObjectConverter;
    private Dictionary`2<Type, IJsonConverter> _defaultSerializers;
    private Dictionary`2<Type, Dictionary`2<Type, IJsonConverter>> _serializers;
    public TweetinviJsonConverter(ITwitterClient client, IJsonObjectConverter jsonObjectConverter);
    public sealed virtual string ToJson(T obj);
    public sealed virtual string ToJson(T1 obj);
    private string ToJson(T obj, IJsonConverter converter);
    public sealed virtual T ConvertJsonTo(string json);
    public TTo ConvertJsonTo(string json);
    private T ConvertJsonTo(string json, IJsonConverter converter);
    private IJsonConverter GetSerializerFromNonCollectionType(Type type);
    private void Map(Func`2<T1, T2> getDto, Func`2<string, T1> deserialize);
    [CompilerGeneratedAttribute]
private SearchResultsDTO <.ctor>b__3_13(ISearchResults result);
    [CompilerGeneratedAttribute]
private TweetWithSearchMetadataDTO <.ctor>b__3_23(ITweetWithSearchMetadata tweetWithSearchMetadata);
}
public class Tweetinvi.Core.JsonConverters.DecimalConverter : JsonConverter {
    public static DecimalConverter Instance;
    private static DecimalConverter();
    public virtual bool CanConvert(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public interface Tweetinvi.Core.JsonConverters.IJsonInterfaceToObjectConverter {
    public Type InterfaceType { get; }
    public abstract virtual Type get_InterfaceType();
}
public class Tweetinvi.Core.JsonConverters.JsonAllowContributorRequestConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonAllowDirectMessagesConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonCoordinatesConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonEnumStringConverter`1 : JsonConverter {
    private Dictionary`2<string, List`1<T>> _readCache;
    private Dictionary`2<T, string> _writeCache;
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonInterfaceToObjectConverter`2 : JsonConverter {
    public Type InterfaceType { get; }
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    public sealed virtual Type get_InterfaceType();
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class Tweetinvi.Core.JsonConverters.JsonLanguageConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonObjectConverter : object {
    private IJsonConvertWrapper _jsonConvertWrapper;
    public JsonObjectConverter(IJsonConvertWrapper jsonConvertWrapper);
    public sealed virtual string Serialize(object o, JsonConverter[] converters);
    public sealed virtual T Deserialize(string json, JsonConverter[] converters);
}
public class Tweetinvi.Core.JsonConverters.JsonPrivacyModeConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonPropertiesConverterRepository : object {
    [CompilerGeneratedAttribute]
private static JsonConverter[] <Converters>k__BackingField;
    public static JsonConverter[] Converters { get; private set; }
    private static JsonPropertiesConverterRepository();
    [CompilerGeneratedAttribute]
public static JsonConverter[] get_Converters();
    [CompilerGeneratedAttribute]
private static void set_Converters(JsonConverter[] value);
    private static void Initialize();
    public static void TryOverride();
}
public class Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository : JsonConverter {
    public static Dictionary`2<Type, JsonConverter> JsonConverters;
    private static object _convertersLocker;
    private static JsonPropertyConverterRepository();
    private static void IntializeClassicalTypesConverters();
    private static void InitializeTweetinviObjectConverters();
    private static void InitializeTweetinviInterfacesConverters();
    private static void InitializeEntitiesConverters();
    private static void InitializeWebhookConverters();
    public static void TryOverride();
    public sealed virtual JsonConverter GetObjectConverter(object objectToConvert);
    public sealed virtual JsonConverter GetTypeConverter(Type objectType);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public static class Tweetinvi.Core.JsonConverters.JsonQueryConverterRepository : object {
    [CompilerGeneratedAttribute]
private static JsonConverter[] <Converters>k__BackingField;
    public static JsonConverter[] Converters { get; private set; }
    private static JsonQueryConverterRepository();
    [CompilerGeneratedAttribute]
public static JsonConverter[] get_Converters();
    [CompilerGeneratedAttribute]
private static void set_Converters(JsonConverter[] value);
    private static void Initialize();
}
public class Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeConverter : DateTimeConverterBase {
    private string _format;
    public JsonTwitterDateTimeConverter(string format);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
}
public class Tweetinvi.Core.JsonConverters.JsonTwitterDateTimeOffsetConverter : DateTimeConverterBase {
    private string _format;
    public JsonTwitterDateTimeOffsetConverter(string format);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.JsonConverters.JsonTwitterNullableConverter`1 : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
}
public class Tweetinvi.Core.JsonConverters.JsonUploadMetadataAltTextConverter : JsonConverter {
    public virtual object ReadJson(JsonReader reader, Type objectType, object existingValue, JsonSerializer serializer);
    public virtual void WriteJson(JsonWriter writer, object value, JsonSerializer serializer);
    public virtual bool CanConvert(Type objectType);
}
public class Tweetinvi.Core.Models.AccountSettings : object {
    private IAccountSettingsDTO _accountSettingsDTO;
    public IAccountSettingsDTO AccountSettingsDTO { get; public set; }
    public string ScreenName { get; }
    public PrivacyMode PrivacyMode { get; }
    public Language Language { get; }
    public bool AlwaysUseHttps { get; }
    public bool DiscoverableByEmail { get; }
    public bool DiscoverableByMobilePhone { get; }
    public bool GeoEnabled { get; }
    public bool UseCookiePersonalization { get; }
    public AllowDirectMessagesFrom AllowDirectMessagesFrom { get; }
    public AllowDirectMessagesFrom AllowGroupDirectMessagesFrom { get; }
    public AllowContributorRequestMode AllowContributorRequest { get; }
    public bool DisplaySensitiveMedia { get; }
    public bool SmartMute { get; }
    public ITimeZone TimeZone { get; }
    public bool SleepTimeEnabled { get; }
    public int StartSleepHour { get; }
    public int EndSleepHour { get; }
    public string TranslatorType { get; }
    public ITrendLocation[] TrendLocations { get; }
    public AccountSettings(IAccountSettingsDTO accountSettingsDTO);
    public sealed virtual IAccountSettingsDTO get_AccountSettingsDTO();
    public sealed virtual void set_AccountSettingsDTO(IAccountSettingsDTO value);
    public sealed virtual string get_ScreenName();
    public sealed virtual PrivacyMode get_PrivacyMode();
    public sealed virtual Language get_Language();
    public sealed virtual bool get_AlwaysUseHttps();
    public sealed virtual bool get_DiscoverableByEmail();
    public sealed virtual bool get_DiscoverableByMobilePhone();
    public sealed virtual bool get_GeoEnabled();
    public sealed virtual bool get_UseCookiePersonalization();
    public sealed virtual AllowDirectMessagesFrom get_AllowDirectMessagesFrom();
    public sealed virtual AllowDirectMessagesFrom get_AllowGroupDirectMessagesFrom();
    public sealed virtual AllowContributorRequestMode get_AllowContributorRequest();
    public sealed virtual bool get_DisplaySensitiveMedia();
    public sealed virtual bool get_SmartMute();
    public sealed virtual ITimeZone get_TimeZone();
    public sealed virtual bool get_SleepTimeEnabled();
    public sealed virtual int get_StartSleepHour();
    public sealed virtual int get_EndSleepHour();
    public sealed virtual string get_TranslatorType();
    public sealed virtual ITrendLocation[] get_TrendLocations();
}
public class Tweetinvi.Core.Models.AuthenticatedUser : User {
    public string Email { get; }
    public IReadOnlyTwitterCredentials Credentials { get; }
    public AuthenticatedUser(IUserDTO userDTO, ITwitterClient client);
    public sealed virtual string get_Email();
    public sealed virtual IReadOnlyTwitterCredentials get_Credentials();
    public sealed virtual Task`1<ITweet[]> GetHomeTimelineAsync();
    public sealed virtual Task`1<ITweet[]> GetMentionsTimelineAsync();
    public sealed virtual Task UpdateRelationshipAsync(IUpdateRelationshipParameters parameters);
    public sealed virtual Task`1<Int64[]> GetUserIdsRequestingFriendshipAsync();
    public sealed virtual Task`1<IUser[]> GetUsersRequestingFriendshipAsync();
    public sealed virtual Task`1<Int64[]> GetUserIdsYouRequestedToFollowAsync();
    public sealed virtual Task`1<IUser[]> GetUsersYouRequestedToFollowAsync();
    public sealed virtual Task FollowUserAsync(IUserIdentifier user);
    public sealed virtual Task FollowUserAsync(long userId);
    public sealed virtual Task FollowUserAsync(string username);
    public sealed virtual Task UnfollowUserAsync(IUserIdentifier user);
    public sealed virtual Task UnfollowUserAsync(long userId);
    public sealed virtual Task UnfollowUserAsync(string username);
    public sealed virtual Task`1<ISavedSearch[]> ListSavedSearchesAsync();
    public virtual Task BlockUserAsync();
    public sealed virtual Task BlockUserAsync(IUserIdentifier user);
    public sealed virtual Task BlockUserAsync(long userId);
    public sealed virtual Task BlockUserAsync(string username);
    public virtual Task UnblockUserAsync();
    public sealed virtual Task UnblockUserAsync(IUserIdentifier user);
    public sealed virtual Task UnblockUserAsync(long userId);
    public sealed virtual Task UnblockUserAsync(string username);
    public sealed virtual Task`1<Int64[]> GetBlockedUserIdsAsync();
    public sealed virtual Task`1<IUser[]> GetBlockedUsersAsync();
    public virtual Task ReportUserForSpamAsync();
    public sealed virtual Task ReportUserForSpamAsync(IUserIdentifier user);
    public sealed virtual Task ReportUserForSpamAsync(string username);
    public sealed virtual Task ReportUserForSpamAsync(long userId);
    public sealed virtual Task`1<IMessage[]> GetLatestMessagesAsync();
    public sealed virtual Task`1<IMessage> PublishMessageAsync(IPublishMessageParameters publishMessageParameters);
    public sealed virtual Task`1<ITweet> PublishTweetAsync(IPublishTweetParameters parameters);
    public sealed virtual Task`1<ITweet> PublishTweetAsync(string text);
    public sealed virtual Task`1<IAccountSettings> UpdateAccountSettingsAsync(IUpdateAccountSettingsParameters parameters);
    public sealed virtual Task`1<ITwitterList> SubscribeToListAsync(ITwitterListIdentifier list);
    public sealed virtual Task`1<ITwitterList> SubscribeToListAsync(long listId);
    public sealed virtual Task`1<ITwitterList> UnsubscribeFromListAsync(ITwitterListIdentifier list);
    public sealed virtual Task`1<ITwitterList> UnsubscribeFromListAsync(long listId);
    public sealed virtual Task`1<Int64[]> GetMutedUserIdsAsync();
    public sealed virtual Task`1<IUser[]> GetMutedUsersAsync();
    public sealed virtual Task MuteUserAsync(IUserIdentifier user);
    public sealed virtual Task MuteUserAsync(long userId);
    public sealed virtual Task MuteUserAsync(string username);
    public sealed virtual Task UnmuteUserAsync(IUserIdentifier user);
    public sealed virtual Task UnmuteUserAsync(long userId);
    public sealed virtual Task UnmuteUserAsync(string username);
}
public class Tweetinvi.Core.Models.CredentialsRateLimits : object {
    [CompilerGeneratedAttribute]
private CredentialsRateLimitsDTO <CredentialsRateLimitsDTO>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<TwitterEndpointAttribute, IEndpointRateLimit> <OtherEndpointRateLimits>k__BackingField;
    public CredentialsRateLimitsDTO CredentialsRateLimitsDTO { get; }
    public DateTimeOffset CreatedAt { get; }
    public string RateLimitContext { get; }
    public bool IsApplicationOnlyCredentials { get; }
    public Dictionary`2<TwitterEndpointAttribute, IEndpointRateLimit> OtherEndpointRateLimits { get; }
    public IEndpointRateLimit AccountLoginVerificationEnrollmentLimit { get; }
    public IEndpointRateLimit AccountSettingsLimit { get; }
    public IEndpointRateLimit AccountUpdateProfileLimit { get; }
    public IEndpointRateLimit AccountVerifyCredentialsLimit { get; }
    public IEndpointRateLimit ApplicationRateLimitStatusLimit { get; }
    public IEndpointRateLimit AuthCrossSiteRequestForgeryLimit { get; }
    public IEndpointRateLimit BlocksIdsLimit { get; }
    public IEndpointRateLimit BlocksListLimit { get; }
    public IEndpointRateLimit BusinessExperienceKeywordLimit { get; }
    public IEndpointRateLimit CollectionsListLimit { get; }
    public IEndpointRateLimit CollectionsEntriesLimit { get; }
    public IEndpointRateLimit CollectionsShowLimit { get; }
    public IEndpointRateLimit ContactsUpdatedByLimit { get; }
    public IEndpointRateLimit ContactsUsersLimit { get; }
    public IEndpointRateLimit ContactsAddressBookLimit { get; }
    public IEndpointRateLimit ContactsUsersAndUploadedByLimit { get; }
    public IEndpointRateLimit ContactsDeleteStatusLimit { get; }
    public IEndpointRateLimit DeviceTokenLimit { get; }
    public IEndpointRateLimit DirectMessagesShowLimit { get; }
    public IEndpointRateLimit DirectMessagesListLimit { get; }
    public IEndpointRateLimit FavoritesListLimit { get; }
    public IEndpointRateLimit FeedbackShowLimit { get; }
    public IEndpointRateLimit FeedbackEventsLimit { get; }
    public IEndpointRateLimit FollowersIdsLimit { get; }
    public IEndpointRateLimit FollowersListLimit { get; }
    public IEndpointRateLimit FriendsIdsLimit { get; }
    public IEndpointRateLimit FriendsListLimit { get; }
    public IEndpointRateLimit FriendsFollowingIdsLimit { get; }
    public IEndpointRateLimit FriendsFollowingListLimit { get; }
    public IEndpointRateLimit FriendshipsIncomingLimit { get; }
    public IEndpointRateLimit FriendshipsLookupLimit { get; }
    public IEndpointRateLimit FriendshipsNoRetweetsIdsLimit { get; }
    public IEndpointRateLimit FriendshipsOutgoingLimit { get; }
    public IEndpointRateLimit FriendshipsShowLimit { get; }
    public IEndpointRateLimit FriendshipsListLimit { get; }
    public IEndpointRateLimit GeoGetPlaceFromIdLimit { get; }
    public IEndpointRateLimit GeoReverseGeoCodeLimit { get; }
    public IEndpointRateLimit GeoSearchLimit { get; }
    public IEndpointRateLimit GeoSimilarPlacesLimit { get; }
    public IEndpointRateLimit HelpConfigurationLimit { get; }
    public IEndpointRateLimit HelpLanguagesLimit { get; }
    public IEndpointRateLimit HelpPrivacyLimit { get; }
    public IEndpointRateLimit HelpSettingsLimit { get; }
    public IEndpointRateLimit HelpTosLimit { get; }
    public IEndpointRateLimit ListsListLimit { get; }
    public IEndpointRateLimit ListsMembersLimit { get; }
    public IEndpointRateLimit ListsMembersShowLimit { get; }
    public IEndpointRateLimit ListsMembershipsLimit { get; }
    public IEndpointRateLimit ListsOwnershipsLimit { get; }
    public IEndpointRateLimit ListsShowLimit { get; }
    public IEndpointRateLimit ListsStatusesLimit { get; }
    public IEndpointRateLimit ListsSubscribersLimit { get; }
    public IEndpointRateLimit ListsSubscribersShowLimit { get; }
    public IEndpointRateLimit ListsSubscriptionsLimit { get; }
    public IEndpointRateLimit MediaUploadLimit { get; }
    public IEndpointRateLimit MomentsPermissions { get; }
    public IEndpointRateLimit MutesUserList { get; }
    public IEndpointRateLimit MutesUserIds { get; }
    public IEndpointRateLimit SavedSearchDestroyLimit { get; }
    public IEndpointRateLimit SavedSearchesListLimit { get; }
    public IEndpointRateLimit SavedSearchesShowIdLimit { get; }
    public IEndpointRateLimit SearchTweetsLimit { get; }
    public IEndpointRateLimit StatusesFriendsLimit { get; }
    public IEndpointRateLimit StatusesHomeTimelineLimit { get; }
    public IEndpointRateLimit StatusesLookupLimit { get; }
    public IEndpointRateLimit StatusesMentionsTimelineLimit { get; }
    public IEndpointRateLimit StatusesOembedLimit { get; }
    public IEndpointRateLimit StatusesRetweetersIdsLimit { get; }
    public IEndpointRateLimit StatusesRetweetsIdLimit { get; }
    public IEndpointRateLimit StatusesRetweetsOfMeLimit { get; }
    public IEndpointRateLimit StatusesShowIdLimit { get; }
    public IEndpointRateLimit StatusesUserTimelineLimit { get; }
    public IEndpointRateLimit TrendsAvailableLimit { get; }
    public IEndpointRateLimit TrendsClosestLimit { get; }
    public IEndpointRateLimit TrendsPlaceLimit { get; }
    public IEndpointRateLimit TweetPromptsReportInteractionLimit { get; }
    public IEndpointRateLimit TweetPromptsShowLimit { get; }
    public IEndpointRateLimit UsersDerivedInfoLimit { get; }
    public IEndpointRateLimit UsersLookupLimit { get; }
    public IEndpointRateLimit UsersProfileBannerLimit { get; }
    public IEndpointRateLimit UsersReportSpamLimit { get; }
    public IEndpointRateLimit UsersSearchLimit { get; }
    public IEndpointRateLimit UsersShowIdLimit { get; }
    public CredentialsRateLimits(CredentialsRateLimitsDTO credentialsRateLimitsDTO);
    [CompilerGeneratedAttribute]
public sealed virtual CredentialsRateLimitsDTO get_CredentialsRateLimitsDTO();
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual string get_RateLimitContext();
    public sealed virtual bool get_IsApplicationOnlyCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<TwitterEndpointAttribute, IEndpointRateLimit> get_OtherEndpointRateLimits();
    public sealed virtual IEndpointRateLimit get_AccountLoginVerificationEnrollmentLimit();
    public sealed virtual IEndpointRateLimit get_AccountSettingsLimit();
    public sealed virtual IEndpointRateLimit get_AccountUpdateProfileLimit();
    public sealed virtual IEndpointRateLimit get_AccountVerifyCredentialsLimit();
    public sealed virtual IEndpointRateLimit get_ApplicationRateLimitStatusLimit();
    public sealed virtual IEndpointRateLimit get_AuthCrossSiteRequestForgeryLimit();
    public sealed virtual IEndpointRateLimit get_BlocksIdsLimit();
    public sealed virtual IEndpointRateLimit get_BlocksListLimit();
    public sealed virtual IEndpointRateLimit get_BusinessExperienceKeywordLimit();
    public sealed virtual IEndpointRateLimit get_CollectionsListLimit();
    public sealed virtual IEndpointRateLimit get_CollectionsEntriesLimit();
    public sealed virtual IEndpointRateLimit get_CollectionsShowLimit();
    public sealed virtual IEndpointRateLimit get_ContactsUpdatedByLimit();
    public sealed virtual IEndpointRateLimit get_ContactsUsersLimit();
    public sealed virtual IEndpointRateLimit get_ContactsAddressBookLimit();
    public sealed virtual IEndpointRateLimit get_ContactsUsersAndUploadedByLimit();
    public sealed virtual IEndpointRateLimit get_ContactsDeleteStatusLimit();
    public sealed virtual IEndpointRateLimit get_DeviceTokenLimit();
    public sealed virtual IEndpointRateLimit get_DirectMessagesShowLimit();
    public sealed virtual IEndpointRateLimit get_DirectMessagesListLimit();
    public sealed virtual IEndpointRateLimit get_FavoritesListLimit();
    public sealed virtual IEndpointRateLimit get_FeedbackShowLimit();
    public sealed virtual IEndpointRateLimit get_FeedbackEventsLimit();
    public sealed virtual IEndpointRateLimit get_FollowersIdsLimit();
    public sealed virtual IEndpointRateLimit get_FollowersListLimit();
    public sealed virtual IEndpointRateLimit get_FriendsIdsLimit();
    public sealed virtual IEndpointRateLimit get_FriendsListLimit();
    public sealed virtual IEndpointRateLimit get_FriendsFollowingIdsLimit();
    public sealed virtual IEndpointRateLimit get_FriendsFollowingListLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsIncomingLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsLookupLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsNoRetweetsIdsLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsOutgoingLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsShowLimit();
    public sealed virtual IEndpointRateLimit get_FriendshipsListLimit();
    public sealed virtual IEndpointRateLimit get_GeoGetPlaceFromIdLimit();
    public sealed virtual IEndpointRateLimit get_GeoReverseGeoCodeLimit();
    public sealed virtual IEndpointRateLimit get_GeoSearchLimit();
    public sealed virtual IEndpointRateLimit get_GeoSimilarPlacesLimit();
    public sealed virtual IEndpointRateLimit get_HelpConfigurationLimit();
    public sealed virtual IEndpointRateLimit get_HelpLanguagesLimit();
    public sealed virtual IEndpointRateLimit get_HelpPrivacyLimit();
    public sealed virtual IEndpointRateLimit get_HelpSettingsLimit();
    public sealed virtual IEndpointRateLimit get_HelpTosLimit();
    public sealed virtual IEndpointRateLimit get_ListsListLimit();
    public sealed virtual IEndpointRateLimit get_ListsMembersLimit();
    public sealed virtual IEndpointRateLimit get_ListsMembersShowLimit();
    public sealed virtual IEndpointRateLimit get_ListsMembershipsLimit();
    public sealed virtual IEndpointRateLimit get_ListsOwnershipsLimit();
    public sealed virtual IEndpointRateLimit get_ListsShowLimit();
    public sealed virtual IEndpointRateLimit get_ListsStatusesLimit();
    public sealed virtual IEndpointRateLimit get_ListsSubscribersLimit();
    public sealed virtual IEndpointRateLimit get_ListsSubscribersShowLimit();
    public sealed virtual IEndpointRateLimit get_ListsSubscriptionsLimit();
    public sealed virtual IEndpointRateLimit get_MediaUploadLimit();
    public sealed virtual IEndpointRateLimit get_MomentsPermissions();
    public sealed virtual IEndpointRateLimit get_MutesUserList();
    public sealed virtual IEndpointRateLimit get_MutesUserIds();
    public sealed virtual IEndpointRateLimit get_SavedSearchDestroyLimit();
    public sealed virtual IEndpointRateLimit get_SavedSearchesListLimit();
    public sealed virtual IEndpointRateLimit get_SavedSearchesShowIdLimit();
    public sealed virtual IEndpointRateLimit get_SearchTweetsLimit();
    public sealed virtual IEndpointRateLimit get_StatusesFriendsLimit();
    public sealed virtual IEndpointRateLimit get_StatusesHomeTimelineLimit();
    public sealed virtual IEndpointRateLimit get_StatusesLookupLimit();
    public sealed virtual IEndpointRateLimit get_StatusesMentionsTimelineLimit();
    public sealed virtual IEndpointRateLimit get_StatusesOembedLimit();
    public sealed virtual IEndpointRateLimit get_StatusesRetweetersIdsLimit();
    public sealed virtual IEndpointRateLimit get_StatusesRetweetsIdLimit();
    public sealed virtual IEndpointRateLimit get_StatusesRetweetsOfMeLimit();
    public sealed virtual IEndpointRateLimit get_StatusesShowIdLimit();
    public sealed virtual IEndpointRateLimit get_StatusesUserTimelineLimit();
    public sealed virtual IEndpointRateLimit get_TrendsAvailableLimit();
    public sealed virtual IEndpointRateLimit get_TrendsClosestLimit();
    public sealed virtual IEndpointRateLimit get_TrendsPlaceLimit();
    public sealed virtual IEndpointRateLimit get_TweetPromptsReportInteractionLimit();
    public sealed virtual IEndpointRateLimit get_TweetPromptsShowLimit();
    public sealed virtual IEndpointRateLimit get_UsersDerivedInfoLimit();
    public sealed virtual IEndpointRateLimit get_UsersLookupLimit();
    public sealed virtual IEndpointRateLimit get_UsersProfileBannerLimit();
    public sealed virtual IEndpointRateLimit get_UsersReportSpamLimit();
    public sealed virtual IEndpointRateLimit get_UsersSearchLimit();
    public sealed virtual IEndpointRateLimit get_UsersShowIdLimit();
    private IEndpointRateLimit GetRateLimits(Func`2<RateLimitResources, Dictionary`2<string, IEndpointRateLimit>> getResources, string key);
}
public class Tweetinvi.Core.Models.EndpointRateLimit : object {
    [CompilerGeneratedAttribute]
private int <Remaining>k__BackingField;
    private long _reset;
    [CompilerGeneratedAttribute]
private int <Limit>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <ResetDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCustomHeaderRateLimit>k__BackingField;
    [JsonPropertyAttribute("remaining")]
public int Remaining { get; public set; }
    [JsonPropertyAttribute("reset")]
public long Reset { get; public set; }
    [JsonPropertyAttribute("limit")]
public int Limit { get; public set; }
    [JsonIgnoreAttribute]
public double ResetDateTimeInSeconds { get; }
    [JsonIgnoreAttribute]
public double ResetDateTimeInMilliseconds { get; }
    [JsonIgnoreAttribute]
public DateTime ResetDateTime { get; private set; }
    public bool IsCustomHeaderRateLimit { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Remaining();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Remaining(int value);
    public sealed virtual long get_Reset();
    public sealed virtual void set_Reset(long value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Limit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Limit(int value);
    public sealed virtual double get_ResetDateTimeInSeconds();
    public sealed virtual double get_ResetDateTimeInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_ResetDateTime();
    [CompilerGeneratedAttribute]
private void set_ResetDateTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCustomHeaderRateLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsCustomHeaderRateLimit(bool value);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.GetTrendsAtResult : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <AsOf>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private IWoeIdLocation[] <WoeIdLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private ITrend[] <Trends>k__BackingField;
    [JsonPropertyAttribute("as_of")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public DateTimeOffset AsOf { get; public set; }
    [JsonPropertyAttribute("created_at")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("locations")]
public IWoeIdLocation[] WoeIdLocations { get; public set; }
    [JsonPropertyAttribute("trends")]
public ITrend[] Trends { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_AsOf();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AsOf(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public sealed virtual IWoeIdLocation[] get_WoeIdLocations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WoeIdLocations(IWoeIdLocation[] value);
    [CompilerGeneratedAttribute]
public sealed virtual ITrend[] get_Trends();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Trends(ITrend[] value);
}
public class Tweetinvi.Core.Models.Media : object {
    private Nullable`1<long> _existingMediaId;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private IUploadedMediaInfo <UploadedMediaInfo>k__BackingField;
    public string Name { get; public set; }
    [JsonIgnoreAttribute]
public Byte[] Data { get; public set; }
    public string ContentType { get; public set; }
    public Nullable`1<long> Id { get; public set; }
    public bool HasBeenUploaded { get; }
    public bool IsReadyToBeUsed { get; }
    public IUploadedMediaInfo UploadedMediaInfo { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Data();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Data(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    public sealed virtual Nullable`1<long> get_Id();
    public sealed virtual void set_Id(Nullable`1<long> value);
    public sealed virtual bool get_HasBeenUploaded();
    public sealed virtual bool get_IsReadyToBeUsed();
    [CompilerGeneratedAttribute]
public sealed virtual IUploadedMediaInfo get_UploadedMediaInfo();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadedMediaInfo(IUploadedMediaInfo value);
    public sealed virtual IMedia CloneWithoutMediaInfo(IMedia source);
    public sealed virtual IMedia CloneWithoutUploadInfo();
}
public class Tweetinvi.Core.Models.Mention : Tweet {
    [CompilerGeneratedAttribute]
private string <Annotations>k__BackingField;
    public string Annotations { get; public set; }
    public Mention(ITweetDTO tweetDTO, Nullable`1<TweetMode> tweetMode, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Annotations();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Annotations(string value);
}
public class Tweetinvi.Core.Models.Message : object {
    private IApp _app;
    private bool _mergedMediaIntoEntities;
    [CompilerGeneratedAttribute]
private IMessageEventDTO <MessageEventDTO>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterClient <Client>k__BackingField;
    public IMessageEventDTO MessageEventDTO { get; }
    public ITwitterClient Client { get; }
    public IApp App { get; public set; }
    public long Id { get; }
    public DateTimeOffset CreatedAt { get; }
    public long SenderId { get; }
    public long RecipientId { get; }
    public IMessageEntities Entities { get; }
    public string Text { get; }
    public Nullable`1<long> InitiatedViaTweetId { get; }
    public Nullable`1<long> InitiatedViaWelcomeMessageId { get; }
    public IQuickReplyOption[] QuickReplyOptions { get; }
    public IQuickReplyResponse QuickReplyResponse { get; }
    public IMediaEntity AttachedMedia { get; }
    public Message(IMessageEventDTO messageEventDTO, IApp app, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual IMessageEventDTO get_MessageEventDTO();
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClient get_Client();
    public sealed virtual IApp get_App();
    public sealed virtual void set_App(IApp value);
    public sealed virtual long get_Id();
    public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual long get_SenderId();
    public sealed virtual long get_RecipientId();
    public sealed virtual IMessageEntities get_Entities();
    public sealed virtual string get_Text();
    public sealed virtual Nullable`1<long> get_InitiatedViaTweetId();
    public sealed virtual Nullable`1<long> get_InitiatedViaWelcomeMessageId();
    public sealed virtual IQuickReplyOption[] get_QuickReplyOptions();
    public sealed virtual IQuickReplyResponse get_QuickReplyResponse();
    public sealed virtual IMediaEntity get_AttachedMedia();
    public sealed virtual Task DestroyAsync();
    public sealed virtual bool Equals(IMessage other);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.OEmbedTweet : object {
    [CompilerGeneratedAttribute]
private IOEmbedTweetDTO <OembedTweetDTO>k__BackingField;
    public IOEmbedTweetDTO OembedTweetDTO { get; public set; }
    public string AuthorName { get; }
    public string AuthorURL { get; }
    public string HTML { get; }
    public string URL { get; }
    public string ProviderURL { get; }
    public double Width { get; }
    public double Height { get; }
    public string Version { get; }
    public string Type { get; }
    public string CacheAge { get; }
    public OEmbedTweet(IOEmbedTweetDTO oEmbedTweetDTO);
    [CompilerGeneratedAttribute]
public sealed virtual IOEmbedTweetDTO get_OembedTweetDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OembedTweetDTO(IOEmbedTweetDTO value);
    public sealed virtual string get_AuthorName();
    public sealed virtual string get_AuthorURL();
    public sealed virtual string get_HTML();
    public sealed virtual string get_URL();
    public sealed virtual string get_ProviderURL();
    public sealed virtual double get_Width();
    public sealed virtual double get_Height();
    public sealed virtual string get_Version();
    public sealed virtual string get_Type();
    public sealed virtual string get_CacheAge();
}
public class Tweetinvi.Core.Models.Properties.App : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [JsonPropertyAttribute("id")]
public long Id { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
public class Tweetinvi.Core.Models.Properties.AsyncOperation`1 : object {
    [CompilerGeneratedAttribute]
private bool <Success>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Result>k__BackingField;
    public bool Success { get; public set; }
    public T Result { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Success();
    [CompilerGeneratedAttribute]
public void set_Success(bool value);
    [CompilerGeneratedAttribute]
public T get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(T value);
}
public class Tweetinvi.Core.Models.Properties.CategorySuggestion : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Size>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; private set; }
    [JsonPropertyAttribute("slug")]
public string Slug { get; private set; }
    [JsonPropertyAttribute("size")]
public int Size { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    [CompilerGeneratedAttribute]
private void set_Slug(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Size();
    [CompilerGeneratedAttribute]
private void set_Size(int value);
}
public class Tweetinvi.Core.Models.Properties.FailedAsyncOperation`1 : AsyncOperation`1<T> {
}
public class Tweetinvi.Core.Models.Properties.Geo : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ICoordinates> <Coordinates>k__BackingField;
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("coordinates")]
unknown List`1<Double[][]> _storedCoordinates {private set; }
    [JsonIgnoreAttribute]
public List`1<ICoordinates> Coordinates { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Type();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Type(string value);
    private void set__storedCoordinates(List`1<Double[][]> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ICoordinates> get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(List`1<ICoordinates> value);
}
public class Tweetinvi.Core.Models.Properties.Place : object {
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private PlaceType <PlaceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CountryCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IPlace> <ContainedWithin>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeo <BoundingBox>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeo <Geometry>k__BackingField;
    [JsonPropertyAttribute("id")]
public string IdStr { get; private set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("full_name")]
public string FullName { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("place_type")]
public PlaceType PlaceType { get; public set; }
    [JsonPropertyAttribute("country")]
public string Country { get; public set; }
    [JsonPropertyAttribute("country_code")]
public string CountryCode { get; public set; }
    [JsonPropertyAttribute("attributes")]
public Dictionary`2<string, string> Attributes { get; public set; }
    [JsonPropertyAttribute("contained_within")]
public List`1<IPlace> ContainedWithin { get; public set; }
    [JsonPropertyAttribute("bounding_box")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IGeo BoundingBox { get; public set; }
    [JsonPropertyAttribute("geometry")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IGeo Geometry { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
private void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FullName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FullName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual PlaceType get_PlaceType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlaceType(PlaceType value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Country();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Country(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CountryCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CountryCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Attributes(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IPlace> get_ContainedWithin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContainedWithin(List`1<IPlace> value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeo get_BoundingBox();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BoundingBox(IGeo value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeo get_Geometry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Geometry(IGeo value);
}
public class Tweetinvi.Core.Models.Properties.QuickReplyOption : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Metadata>k__BackingField;
    [JsonPropertyAttribute("label")]
public string Label { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("metadata")]
public string Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(string value);
}
public class Tweetinvi.Core.Models.Properties.QuickReplyResponse : object {
    [CompilerGeneratedAttribute]
private QuickReplyType <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Metadata>k__BackingField;
    [JsonPropertyAttribute("type")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public QuickReplyType Type { get; public set; }
    [JsonPropertyAttribute("metadata")]
public string Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual QuickReplyType get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(QuickReplyType value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(string value);
}
public class Tweetinvi.Core.Models.Properties.SearchResults : object {
    [CompilerGeneratedAttribute]
private ITweetWithSearchMetadata[] <Tweets>k__BackingField;
    [CompilerGeneratedAttribute]
private ISearchMetadata <SearchMetadata>k__BackingField;
    public ITweetWithSearchMetadata[] Tweets { get; }
    public ISearchMetadata SearchMetadata { get; }
    public SearchResults(IEnumerable`1<ITweetWithSearchMetadata> tweets, ISearchMetadata searchMetadata);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetWithSearchMetadata[] get_Tweets();
    [CompilerGeneratedAttribute]
public sealed virtual ISearchMetadata get_SearchMetadata();
}
public class Tweetinvi.Core.Models.Properties.TimeZone : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TzinfoName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UtcOffset>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("tzinfo_name")]
public string TzinfoName { get; public set; }
    [JsonPropertyAttribute("utc_offset")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public int UtcOffset { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TzinfoName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TzinfoName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_UtcOffset();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UtcOffset(int value);
}
public class Tweetinvi.Core.Models.Properties.Trend : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PromotedContent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TweetVolume>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("url")]
public string URL { get; public set; }
    [JsonPropertyAttribute("query")]
public string Query { get; public set; }
    [JsonPropertyAttribute("promoted_content")]
public string PromotedContent { get; public set; }
    [JsonPropertyAttribute("tweet_volume")]
public Nullable`1<long> TweetVolume { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_URL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PromotedContent();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PromotedContent(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_TweetVolume();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetVolume(Nullable`1<long> value);
}
public class Tweetinvi.Core.Models.Properties.TwitterExceptionInfo : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [JsonPropertyAttribute("message")]
public string Message { get; public set; }
    [JsonPropertyAttribute("code")]
public int Code { get; public set; }
    [JsonPropertyAttribute("label")]
public string Label { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Message();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Message(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Code();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Code(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Label();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Label(string value);
}
public class Tweetinvi.Core.Models.Properties.WoeIdLocation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private long <WoeId>k__BackingField;
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("woeid")]
public long WoeId { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_WoeId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WoeId(long value);
}
public class Tweetinvi.Core.Models.SavedSearch : object {
    private ISavedSearchDTO _savedSearchDTO;
    public ISavedSearchDTO SavedSearchDTO { get; public set; }
    public long Id { get; }
    public string IdStr { get; }
    public string Name { get; public set; }
    public string Query { get; public set; }
    public DateTimeOffset CreatedAt { get; }
    public SavedSearch(ISavedSearchDTO savedSearchDTO);
    public sealed virtual ISavedSearchDTO get_SavedSearchDTO();
    public sealed virtual void set_SavedSearchDTO(ISavedSearchDTO value);
    public sealed virtual long get_Id();
    public sealed virtual string get_IdStr();
    public sealed virtual string get_Name();
    public sealed virtual void set_Name(string value);
    public sealed virtual string get_Query();
    public sealed virtual void set_Query(string value);
    public sealed virtual DateTimeOffset get_CreatedAt();
}
public class Tweetinvi.Core.Models.SupportedLanguage : object {
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Status>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("code")]
public string Code { get; public set; }
    [JsonPropertyAttribute("status")]
public string Status { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Code();
    [CompilerGeneratedAttribute]
public void set_Code(string value);
    [CompilerGeneratedAttribute]
public string get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Tweetinvi.Core.Models.TrendLocation : object {
    [CompilerGeneratedAttribute]
private long <WoeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CountryCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private PlaceTypeDTO <_placeTypeDTO>k__BackingField;
    [JsonPropertyAttribute("woeid")]
public long WoeId { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("country")]
public string Country { get; public set; }
    [JsonPropertyAttribute("countryCode")]
public string CountryCode { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("parentid")]
public long ParentId { get; public set; }
    [JsonPropertyAttribute]
public PlaceType PlaceType { get; public set; }
    [JsonPropertyAttribute("placeType")]
private PlaceTypeDTO _placeTypeDTO { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_WoeId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WoeId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Country();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Country(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CountryCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CountryCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_ParentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ParentId(long value);
    public sealed virtual PlaceType get_PlaceType();
    public sealed virtual void set_PlaceType(PlaceType value);
    [CompilerGeneratedAttribute]
private PlaceTypeDTO get__placeTypeDTO();
    [CompilerGeneratedAttribute]
private void set__placeTypeDTO(PlaceTypeDTO value);
}
public class Tweetinvi.Core.Models.Tweet : object {
    private ITweetDTO _tweetDTO;
    [CompilerGeneratedAttribute]
private ITwitterClient <Client>k__BackingField;
    private IUser _createdBy;
    private ITweetEntities _entities;
    private ITweet _retweetedTweet;
    private ITweet _quotedTweet;
    [CompilerGeneratedAttribute]
private TweetMode <TweetMode>k__BackingField;
    public ITwitterClient Client { get; public set; }
    public ITweetDTO TweetDTO { get; public set; }
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public string Text { get; public set; }
    public string Prefix { get; }
    public string Suffix { get; }
    public string FullText { get; public set; }
    public Int32[] DisplayTextRange { get; }
    public Int32[] SafeDisplayTextRange { get; }
    public IExtendedTweet ExtendedTweet { get; public set; }
    public bool Favorited { get; }
    public int FavoriteCount { get; }
    public ICoordinates Coordinates { get; public set; }
    public ITweetEntities Entities { get; }
    public IUser CreatedBy { get; }
    public ITweetIdentifier CurrentUserRetweetIdentifier { get; }
    public DateTimeOffset CreatedAt { get; }
    public string Source { get; public set; }
    public bool Truncated { get; }
    public Nullable`1<int> ReplyCount { get; public set; }
    public Nullable`1<long> InReplyToStatusId { get; public set; }
    public string InReplyToStatusIdStr { get; public set; }
    public Nullable`1<long> InReplyToUserId { get; public set; }
    public string InReplyToUserIdStr { get; public set; }
    public string InReplyToScreenName { get; public set; }
    public Int32[] ContributorsIds { get; }
    public IEnumerable`1<long> Contributors { get; }
    public int RetweetCount { get; }
    public bool Retweeted { get; }
    public bool IsRetweet { get; }
    public ITweet RetweetedTweet { get; }
    public Nullable`1<int> QuoteCount { get; public set; }
    public Nullable`1<long> QuotedStatusId { get; }
    public string QuotedStatusIdStr { get; }
    public ITweet QuotedTweet { get; }
    public bool PossiblySensitive { get; }
    public Nullable`1<Language> Language { get; }
    public IPlace Place { get; }
    public Dictionary`2<string, object> Scopes { get; }
    public string FilterLevel { get; }
    public bool WithheldCopyright { get; }
    public IEnumerable`1<string> WithheldInCountries { get; }
    public string WithheldScope { get; }
    public List`1<IHashtagEntity> Hashtags { get; }
    public List`1<IUrlEntity> Urls { get; }
    public List`1<IMediaEntity> Media { get; }
    public List`1<IUserMentionEntity> UserMentions { get; }
    public string Url { get; }
    public TweetMode TweetMode { get; }
    public Tweet(ITweetDTO tweetDTO, Nullable`1<TweetMode> tweetMode, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Client(ITwitterClient value);
    private void DTOUpdated();
    public sealed virtual ITweetDTO get_TweetDTO();
    public void set_TweetDTO(ITweetDTO value);
    public sealed virtual long get_Id();
    public sealed virtual void set_Id(long value);
    public sealed virtual string get_IdStr();
    public sealed virtual void set_IdStr(string value);
    public sealed virtual string get_Text();
    public void set_Text(string value);
    public sealed virtual string get_Prefix();
    public sealed virtual string get_Suffix();
    public sealed virtual string get_FullText();
    public void set_FullText(string value);
    public sealed virtual Int32[] get_DisplayTextRange();
    public sealed virtual Int32[] get_SafeDisplayTextRange();
    public sealed virtual IExtendedTweet get_ExtendedTweet();
    public void set_ExtendedTweet(IExtendedTweet value);
    public sealed virtual bool get_Favorited();
    public sealed virtual int get_FavoriteCount();
    public sealed virtual ICoordinates get_Coordinates();
    public void set_Coordinates(ICoordinates value);
    public sealed virtual ITweetEntities get_Entities();
    public sealed virtual IUser get_CreatedBy();
    public sealed virtual ITweetIdentifier get_CurrentUserRetweetIdentifier();
    public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual string get_Source();
    public void set_Source(string value);
    public sealed virtual bool get_Truncated();
    public sealed virtual Nullable`1<int> get_ReplyCount();
    public void set_ReplyCount(Nullable`1<int> value);
    public sealed virtual Nullable`1<long> get_InReplyToStatusId();
    public void set_InReplyToStatusId(Nullable`1<long> value);
    public sealed virtual string get_InReplyToStatusIdStr();
    public void set_InReplyToStatusIdStr(string value);
    public sealed virtual Nullable`1<long> get_InReplyToUserId();
    public void set_InReplyToUserId(Nullable`1<long> value);
    public sealed virtual string get_InReplyToUserIdStr();
    public void set_InReplyToUserIdStr(string value);
    public sealed virtual string get_InReplyToScreenName();
    public void set_InReplyToScreenName(string value);
    public sealed virtual Int32[] get_ContributorsIds();
    public sealed virtual IEnumerable`1<long> get_Contributors();
    public sealed virtual int get_RetweetCount();
    public sealed virtual bool get_Retweeted();
    public sealed virtual bool get_IsRetweet();
    public sealed virtual ITweet get_RetweetedTweet();
    public sealed virtual Nullable`1<int> get_QuoteCount();
    public void set_QuoteCount(Nullable`1<int> value);
    public sealed virtual Nullable`1<long> get_QuotedStatusId();
    public sealed virtual string get_QuotedStatusIdStr();
    public sealed virtual ITweet get_QuotedTweet();
    public sealed virtual bool get_PossiblySensitive();
    public sealed virtual Nullable`1<Language> get_Language();
    public sealed virtual IPlace get_Place();
    public sealed virtual Dictionary`2<string, object> get_Scopes();
    public sealed virtual string get_FilterLevel();
    public sealed virtual bool get_WithheldCopyright();
    public sealed virtual IEnumerable`1<string> get_WithheldInCountries();
    public sealed virtual string get_WithheldScope();
    public sealed virtual List`1<IHashtagEntity> get_Hashtags();
    public sealed virtual List`1<IUrlEntity> get_Urls();
    public sealed virtual List`1<IMediaEntity> get_Media();
    public sealed virtual List`1<IUserMentionEntity> get_UserMentions();
    public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual TweetMode get_TweetMode();
    public sealed virtual Task`1<ITweet> PublishRetweetAsync();
    public sealed virtual Task`1<ITweet[]> GetRetweetsAsync();
    public sealed virtual Task DestroyRetweetAsync();
    public sealed virtual Task`1<IOEmbedTweet> GenerateOEmbedTweetAsync();
    public sealed virtual Task DestroyAsync();
    public sealed virtual Task FavoriteAsync();
    public sealed virtual Task UnfavoriteAsync();
    public virtual string ToString();
    public sealed virtual bool Equals(ITweet other);
}
public class Tweetinvi.Core.Models.TwitterConfiguration : object {
    [CompilerGeneratedAttribute]
private int <CharactersReservedPerMedia>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MessageTextCharacterLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxMediaPerUpload>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <NonUsernamePaths>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PhotoSizeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IMediaEntitySize> <PhotoSizes>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ShortURLLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ShortURLLengthHttps>k__BackingField;
    [JsonPropertyAttribute("characters_reserved_per_media")]
public int CharactersReservedPerMedia { get; private set; }
    [JsonPropertyAttribute("dm_text_character_limit")]
public int MessageTextCharacterLimit { get; private set; }
    [JsonPropertyAttribute("max_media_per_upload")]
public int MaxMediaPerUpload { get; private set; }
    [JsonPropertyAttribute("non_username_paths")]
public String[] NonUsernamePaths { get; private set; }
    [JsonPropertyAttribute("photo_size_limit")]
public int PhotoSizeLimit { get; private set; }
    [JsonPropertyAttribute("photo_sizes")]
public Dictionary`2<string, IMediaEntitySize> PhotoSizes { get; private set; }
    [JsonPropertyAttribute("short_url_length")]
public int ShortURLLength { get; private set; }
    [JsonPropertyAttribute("short_url_length_https")]
public int ShortURLLengthHttps { get; private set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_CharactersReservedPerMedia();
    [CompilerGeneratedAttribute]
private void set_CharactersReservedPerMedia(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MessageTextCharacterLimit();
    [CompilerGeneratedAttribute]
private void set_MessageTextCharacterLimit(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxMediaPerUpload();
    [CompilerGeneratedAttribute]
private void set_MaxMediaPerUpload(int value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_NonUsernamePaths();
    [CompilerGeneratedAttribute]
private void set_NonUsernamePaths(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PhotoSizeLimit();
    [CompilerGeneratedAttribute]
private void set_PhotoSizeLimit(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, IMediaEntitySize> get_PhotoSizes();
    [CompilerGeneratedAttribute]
private void set_PhotoSizes(Dictionary`2<string, IMediaEntitySize> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ShortURLLength();
    [CompilerGeneratedAttribute]
private void set_ShortURLLength(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ShortURLLengthHttps();
    [CompilerGeneratedAttribute]
private void set_ShortURLLengthHttps(int value);
}
public class Tweetinvi.Core.Models.TwitterEntities.DescriptionEntity : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IUrlEntity> <Urls>k__BackingField;
    [JsonPropertyAttribute("urls")]
public IEnumerable`1<IUrlEntity> Urls { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IUrlEntity> get_Urls();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Urls(IEnumerable`1<IUrlEntity> value);
}
public class Tweetinvi.Core.Models.TwitterEntities.ExtendedEntities.VideoEntityVariant : object {
    [CompilerGeneratedAttribute]
private int <Bitrate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [JsonPropertyAttribute("bitrate")]
public int Bitrate { get; public set; }
    [JsonPropertyAttribute("content_type")]
public string ContentType { get; public set; }
    [JsonPropertyAttribute("url")]
public string URL { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Bitrate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Bitrate(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_URL(string value);
}
public class Tweetinvi.Core.Models.TwitterEntities.ExtendedEntities.VideoInformationEntity : object {
    [CompilerGeneratedAttribute]
private Int32[] <AspectRatio>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DurationInMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private IVideoEntityVariant[] <Variants>k__BackingField;
    [JsonPropertyAttribute("aspect_ratio")]
public Int32[] AspectRatio { get; public set; }
    [JsonPropertyAttribute("duration_millis")]
public int DurationInMilliseconds { get; public set; }
    [JsonPropertyAttribute("variants")]
public IVideoEntityVariant[] Variants { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_AspectRatio();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AspectRatio(Int32[] value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_DurationInMilliseconds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DurationInMilliseconds(int value);
    [CompilerGeneratedAttribute]
public sealed virtual IVideoEntityVariant[] get_Variants();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Variants(IVideoEntityVariant[] value);
}
public class Tweetinvi.Core.Models.TwitterEntities.HashtagEntity : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Indices>k__BackingField;
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("indices")]
public Int32[] Indices { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Int32[] value);
    public sealed virtual bool Equals(IHashtagEntity other);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.TwitterEntities.MediaEntity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpandedURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaURLHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Indices>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IMediaEntitySize> <Sizes>k__BackingField;
    [CompilerGeneratedAttribute]
private IVideoInformationEntity <VideoDetails>k__BackingField;
    [JsonPropertyAttribute("id")]
public Nullable`1<long> Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("url")]
public string URL { get; public set; }
    [JsonPropertyAttribute("display_url")]
public string DisplayURL { get; public set; }
    [JsonPropertyAttribute("expanded_url")]
public string ExpandedURL { get; public set; }
    [JsonPropertyAttribute("media_url")]
public string MediaURL { get; public set; }
    [JsonPropertyAttribute("media_url_https")]
public string MediaURLHttps { get; public set; }
    [JsonPropertyAttribute("type")]
public string MediaType { get; public set; }
    [JsonPropertyAttribute("indices")]
public Int32[] Indices { get; public set; }
    [JsonPropertyAttribute("sizes")]
public Dictionary`2<string, IMediaEntitySize> Sizes { get; public set; }
    [JsonPropertyAttribute("video_info")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IVideoInformationEntity VideoDetails { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_URL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ExpandedURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpandedURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaURLHttps();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaURLHttps(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Int32[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, IMediaEntitySize> get_Sizes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Sizes(Dictionary`2<string, IMediaEntitySize> value);
    [CompilerGeneratedAttribute]
public sealed virtual IVideoInformationEntity get_VideoDetails();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VideoDetails(IVideoInformationEntity value);
    public sealed virtual bool Equals(IMediaEntity other);
}
public class Tweetinvi.Core.Models.TwitterEntities.MediaEntitySize : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Resize>k__BackingField;
    [JsonPropertyAttribute("w")]
public Nullable`1<int> Width { get; public set; }
    [JsonPropertyAttribute("h")]
public Nullable`1<int> Height { get; public set; }
    [JsonPropertyAttribute("resize")]
public string Resize { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Resize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Resize(string value);
}
public class Tweetinvi.Core.Models.TwitterEntities.RelationshipDetails : object {
    [CompilerGeneratedAttribute]
private IRelationshipDetailsDTO <RelationshipDetailsDTO>k__BackingField;
    public IRelationshipDetailsDTO RelationshipDetailsDTO { get; public set; }
    public long SourceId { get; }
    public string SourceIdStr { get; }
    public string SourceScreenName { get; }
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetScreenName { get; }
    public bool Following { get; }
    public bool FollowedBy { get; }
    public bool FollowingRequestReceived { get; }
    public bool FollowingRequested { get; }
    public bool NotificationsEnabled { get; }
    public bool CanSendDirectMessage { get; }
    public bool Blocking { get; }
    public bool BlockedBy { get; }
    public bool Muting { get; }
    public bool WantRetweets { get; }
    public bool AllReplies { get; }
    public bool MarkedSpam { get; }
    public RelationshipDetails(IRelationshipDetailsDTO relationshipDetailsDTO);
    [CompilerGeneratedAttribute]
public sealed virtual IRelationshipDetailsDTO get_RelationshipDetailsDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RelationshipDetailsDTO(IRelationshipDetailsDTO value);
    public sealed virtual long get_SourceId();
    public sealed virtual string get_SourceIdStr();
    public sealed virtual string get_SourceScreenName();
    public sealed virtual long get_TargetId();
    public sealed virtual string get_TargetIdStr();
    public sealed virtual string get_TargetScreenName();
    public sealed virtual bool get_Following();
    public sealed virtual bool get_FollowedBy();
    public sealed virtual bool get_FollowingRequestReceived();
    public sealed virtual bool get_FollowingRequested();
    public sealed virtual bool get_NotificationsEnabled();
    public sealed virtual bool get_CanSendDirectMessage();
    public sealed virtual bool get_Blocking();
    public sealed virtual bool get_BlockedBy();
    public sealed virtual bool get_Muting();
    public sealed virtual bool get_WantRetweets();
    public sealed virtual bool get_AllReplies();
    public sealed virtual bool get_MarkedSpam();
}
public class Tweetinvi.Core.Models.TwitterEntities.RelationshipState : object {
    [CompilerGeneratedAttribute]
private IRelationshipStateDTO <RelationshipStateDTO>k__BackingField;
    public IRelationshipStateDTO RelationshipStateDTO { get; public set; }
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetName { get; }
    public string TargetScreenName { get; }
    public bool Following { get; }
    public bool FollowedBy { get; }
    public bool FollowingRequested { get; }
    public bool FollowingRequestReceived { get; }
    public RelationshipState(IRelationshipStateDTO relationshipStateDTO);
    [CompilerGeneratedAttribute]
public sealed virtual IRelationshipStateDTO get_RelationshipStateDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RelationshipStateDTO(IRelationshipStateDTO value);
    public sealed virtual long get_TargetId();
    public sealed virtual string get_TargetIdStr();
    public sealed virtual string get_TargetName();
    public sealed virtual string get_TargetScreenName();
    public sealed virtual bool get_Following();
    public sealed virtual bool get_FollowedBy();
    public sealed virtual bool get_FollowingRequested();
    public sealed virtual bool get_FollowingRequestReceived();
}
public class Tweetinvi.Core.Models.TwitterEntities.SymbolEntity : object {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Indices>k__BackingField;
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("indices")]
public Int32[] Indices { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Int32[] value);
    public sealed virtual bool Equals(ISymbolEntity other);
    public virtual string ToString();
}
internal class Tweetinvi.Core.Models.TwitterEntities.TweetEntities : object {
    private ITweetDTO _tweetDTO;
    [CompilerGeneratedAttribute]
private List`1<IUrlEntity> <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IUserMentionEntity> <UserMentions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IHashtagEntity> <Hashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ISymbolEntity> <Symbols>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IMediaEntity> <Medias>k__BackingField;
    public List`1<IUrlEntity> Urls { get; private set; }
    public List`1<IUserMentionEntity> UserMentions { get; private set; }
    public List`1<IHashtagEntity> Hashtags { get; private set; }
    public List`1<ISymbolEntity> Symbols { get; private set; }
    public List`1<IMediaEntity> Medias { get; private set; }
    public TweetEntities(ITweetDTO tweetDTO, TweetMode tweetMode);
    private void InitializeEntities(TweetMode tweetMode);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUrlEntity> get_Urls();
    [CompilerGeneratedAttribute]
private void set_Urls(List`1<IUrlEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUserMentionEntity> get_UserMentions();
    [CompilerGeneratedAttribute]
private void set_UserMentions(List`1<IUserMentionEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IHashtagEntity> get_Hashtags();
    [CompilerGeneratedAttribute]
private void set_Hashtags(List`1<IHashtagEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<ISymbolEntity> get_Symbols();
    [CompilerGeneratedAttribute]
private void set_Symbols(List`1<ISymbolEntity> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IMediaEntity> get_Medias();
    [CompilerGeneratedAttribute]
private void set_Medias(List`1<IMediaEntity> value);
}
public class Tweetinvi.Core.Models.TwitterEntities.UrlEntity : object {
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DisplayedURL>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpandedURL>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <Indices>k__BackingField;
    [JsonPropertyAttribute("url")]
public string URL { get; public set; }
    [JsonPropertyAttribute("display_url")]
public string DisplayedURL { get; public set; }
    [JsonPropertyAttribute("expanded_url")]
public string ExpandedURL { get; public set; }
    [JsonPropertyAttribute("indices")]
public Int32[] Indices { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_URL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DisplayedURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayedURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ExpandedURL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpandedURL(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Int32[] get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(Int32[] value);
    public sealed virtual bool Equals(IUrlEntity other);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.TwitterEntities.UserEntities : object {
    [CompilerGeneratedAttribute]
private IWebsiteEntity <Website>k__BackingField;
    [CompilerGeneratedAttribute]
private IDescriptionEntity <Description>k__BackingField;
    [JsonPropertyAttribute("url")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IWebsiteEntity Website { get; public set; }
    [JsonPropertyAttribute("description")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonPropertyConverterRepository")]
public IDescriptionEntity Description { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IWebsiteEntity get_Website();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Website(IWebsiteEntity value);
    [CompilerGeneratedAttribute]
public sealed virtual IDescriptionEntity get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(IDescriptionEntity value);
}
public class Tweetinvi.Core.Models.TwitterEntities.UserMentionEntity : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<int> <Indices>k__BackingField;
    [JsonPropertyAttribute("id")]
public Nullable`1<long> Id { get; public set; }
    [JsonPropertyAttribute("id_str")]
public string IdStr { get; public set; }
    [JsonPropertyAttribute("screen_name")]
public string ScreenName { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("indices")]
public IList`1<int> Indices { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScreenName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<int> get_Indices();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Indices(IList`1<int> value);
    public sealed virtual bool Equals(IUserMentionEntity other);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.TwitterEntities.WebsiteEntity : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IUrlEntity> <Urls>k__BackingField;
    [JsonPropertyAttribute("urls")]
public IEnumerable`1<IUrlEntity> Urls { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<IUrlEntity> get_Urls();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Urls(IEnumerable`1<IUrlEntity> value);
}
public class Tweetinvi.Core.Models.TwitterList : object {
    private ITwitterListDTO _twitterListDTO;
    private IUser _owner;
    [CompilerGeneratedAttribute]
private ITwitterClient <Client>k__BackingField;
    public ITwitterListDTO TwitterListDTO { get; public set; }
    public ITwitterClient Client { get; }
    public long Id { get; }
    public string IdStr { get; }
    public string Slug { get; }
    public long OwnerId { get; }
    public string OwnerScreenName { get; }
    public string Name { get; }
    public string FullName { get; }
    public IUser Owner { get; }
    public DateTimeOffset CreatedAt { get; }
    public string Uri { get; }
    public string Description { get; }
    public bool Following { get; }
    public PrivacyMode PrivacyMode { get; }
    public int MemberCount { get; }
    public int SubscriberCount { get; }
    public TwitterList(ITwitterListDTO twitterListDTO, ITwitterClient client);
    public sealed virtual ITwitterListDTO get_TwitterListDTO();
    public sealed virtual void set_TwitterListDTO(ITwitterListDTO value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClient get_Client();
    public sealed virtual long get_Id();
    public sealed virtual string get_IdStr();
    public sealed virtual string get_Slug();
    public sealed virtual long get_OwnerId();
    public sealed virtual string get_OwnerScreenName();
    public sealed virtual string get_Name();
    public sealed virtual string get_FullName();
    public sealed virtual IUser get_Owner();
    public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual string get_Uri();
    public sealed virtual string get_Description();
    public sealed virtual bool get_Following();
    public sealed virtual PrivacyMode get_PrivacyMode();
    public sealed virtual int get_MemberCount();
    public sealed virtual int get_SubscriberCount();
    public sealed virtual Task`1<ITweet[]> GetTweetsAsync();
    public sealed virtual Task`1<IUser[]> GetMembersAsync();
    public sealed virtual Task AddMemberAsync(long userId);
    public sealed virtual Task AddMemberAsync(string username);
    public sealed virtual Task AddMemberAsync(IUserIdentifier user);
    public sealed virtual Task AddMembersAsync(IEnumerable`1<long> userIds);
    public sealed virtual Task AddMembersAsync(IEnumerable`1<string> usernames);
    public sealed virtual Task AddMembersAsync(IEnumerable`1<IUserIdentifier> users);
    public sealed virtual Task`1<bool> RemoveMemberAsync(long userId);
    public sealed virtual Task`1<bool> RemoveMemberAsync(string username);
    public sealed virtual Task`1<bool> RemoveMemberAsync(IUserIdentifier user);
    public sealed virtual Task RemoveMembersAsync(IEnumerable`1<long> userIds);
    public sealed virtual Task RemoveMembersAsync(IEnumerable`1<string> usernames);
    public sealed virtual Task RemoveMembersAsync(IEnumerable`1<IUserIdentifier> users);
    public sealed virtual Task`1<bool> CheckUserMembershipAsync(long userId);
    public sealed virtual Task`1<bool> CheckUserMembershipAsync(string userScreenName);
    public sealed virtual Task`1<bool> CheckUserMembershipAsync(IUserIdentifier user);
    public sealed virtual Task`1<IUser[]> GetSubscribersAsync();
    public sealed virtual Task`1<ITwitterList> SubscribeAsync();
    public sealed virtual Task`1<ITwitterList> UnsubscribeAsync();
    public sealed virtual Task`1<bool> CheckUserSubscriptionAsync(long userId);
    public sealed virtual Task`1<bool> CheckUserSubscriptionAsync(string username);
    public sealed virtual Task`1<bool> CheckUserSubscriptionAsync(IUserIdentifier user);
    [AsyncStateMachineAttribute("Tweetinvi.Core.Models.TwitterList/<UpdateAsync>d__62")]
public sealed virtual Task UpdateAsync(IListMetadataParameters parameters);
    public sealed virtual Task DestroyAsync();
    private void UpdateOwner();
}
public class Tweetinvi.Core.Models.User : object {
    private static string REGEX_PROFILE_IMAGE_SIZE;
    [CompilerGeneratedAttribute]
private ITwitterClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserDTO <UserDTO>k__BackingField;
    public ITwitterClient Client { get; public set; }
    public IUserDTO UserDTO { get; public set; }
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public string ScreenName { get; public set; }
    public string Name { get; }
    public string Description { get; }
    public ITweetDTO Status { get; }
    public DateTimeOffset CreatedAt { get; }
    public string Location { get; }
    public Nullable`1<bool> GeoEnabled { get; }
    public string Url { get; }
    public int StatusesCount { get; }
    public int FollowersCount { get; }
    public int FriendsCount { get; }
    public Nullable`1<bool> Following { get; }
    public bool Protected { get; }
    public bool Verified { get; }
    public IUserEntities Entities { get; }
    public string ProfileImageUrl { get; }
    public string ProfileImageUrlFullSize { get; }
    public string ProfileImageUrl400x400 { get; }
    public Nullable`1<bool> FollowRequestSent { get; }
    public bool DefaultProfile { get; }
    public bool DefaultProfileImage { get; }
    public int FavoritesCount { get; }
    public int ListedCount { get; }
    public string ProfileSidebarFillColor { get; }
    public string ProfileSidebarBorderColor { get; }
    public bool ProfileBackgroundTile { get; }
    public string ProfileBackgroundColor { get; }
    public string ProfileBackgroundImageUrl { get; }
    public string ProfileBackgroundImageUrlHttps { get; }
    public string ProfileBannerURL { get; }
    public string ProfileTextColor { get; }
    public string ProfileLinkColor { get; }
    public bool ProfileUseBackgroundImage { get; }
    public Nullable`1<bool> IsTranslator { get; }
    public Nullable`1<bool> ContributorsEnabled { get; }
    public Nullable`1<int> UtcOffset { get; }
    public string TimeZone { get; }
    public IEnumerable`1<string> WithheldInCountries { get; }
    public string WithheldScope { get; }
    public Nullable`1<bool> Notifications { get; }
    public User(IUserDTO userDTO, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Client(ITwitterClient value);
    [CompilerGeneratedAttribute]
public sealed virtual IUserDTO get_UserDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserDTO(IUserDTO value);
    public sealed virtual long get_Id();
    public sealed virtual void set_Id(long value);
    public sealed virtual string get_IdStr();
    public sealed virtual void set_IdStr(string value);
    public sealed virtual string get_ScreenName();
    public void set_ScreenName(string value);
    public sealed virtual string get_Name();
    public sealed virtual string get_Description();
    public sealed virtual ITweetDTO get_Status();
    public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual string get_Location();
    public sealed virtual Nullable`1<bool> get_GeoEnabled();
    public sealed virtual string get_Url();
    public sealed virtual int get_StatusesCount();
    public sealed virtual int get_FollowersCount();
    public sealed virtual int get_FriendsCount();
    public sealed virtual Nullable`1<bool> get_Following();
    public sealed virtual bool get_Protected();
    public sealed virtual bool get_Verified();
    public sealed virtual IUserEntities get_Entities();
    public sealed virtual string get_ProfileImageUrl();
    public sealed virtual string get_ProfileImageUrlFullSize();
    public sealed virtual string get_ProfileImageUrl400x400();
    public sealed virtual Nullable`1<bool> get_FollowRequestSent();
    public sealed virtual bool get_DefaultProfile();
    public sealed virtual bool get_DefaultProfileImage();
    public sealed virtual int get_FavoritesCount();
    public sealed virtual int get_ListedCount();
    public sealed virtual string get_ProfileSidebarFillColor();
    public sealed virtual string get_ProfileSidebarBorderColor();
    public sealed virtual bool get_ProfileBackgroundTile();
    public sealed virtual string get_ProfileBackgroundColor();
    public sealed virtual string get_ProfileBackgroundImageUrl();
    public sealed virtual string get_ProfileBackgroundImageUrlHttps();
    public sealed virtual string get_ProfileBannerURL();
    public sealed virtual string get_ProfileTextColor();
    public sealed virtual string get_ProfileLinkColor();
    public sealed virtual bool get_ProfileUseBackgroundImage();
    public sealed virtual Nullable`1<bool> get_IsTranslator();
    public sealed virtual Nullable`1<bool> get_ContributorsEnabled();
    public sealed virtual Nullable`1<int> get_UtcOffset();
    public sealed virtual string get_TimeZone();
    public sealed virtual IEnumerable`1<string> get_WithheldInCountries();
    public sealed virtual string get_WithheldScope();
    public sealed virtual Nullable`1<bool> get_Notifications();
    public virtual ITwitterIterator`1<long> GetFriendIds();
    public virtual IMultiLevelCursorIterator`2<long, IUser> GetFriends();
    public virtual ITwitterIterator`1<long> GetFollowerIds();
    public virtual IMultiLevelCursorIterator`2<long, IUser> GetFollowers();
    public sealed virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(IUserIdentifier user);
    public sealed virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(long userId);
    public sealed virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(string username);
    public sealed virtual Task`1<ITweet[]> GetUserTimelineAsync();
    public virtual Task`1<ITweet[]> GetFavoriteTweetsAsync();
    public sealed virtual Task`1<ITwitterList[]> GetListSubscriptionsAsync();
    public sealed virtual Task`1<ITwitterList[]> GetOwnedListsAsync();
    public virtual Task BlockUserAsync();
    public virtual Task UnblockUserAsync();
    public virtual Task ReportUserForSpamAsync();
    public sealed virtual Task`1<Stream> GetProfileImageStreamAsync();
    public sealed virtual Task`1<Stream> GetProfileImageStreamAsync(ImageSize imageSize);
    public sealed virtual bool Equals(IUser other);
    public virtual string ToString();
}
public class Tweetinvi.Core.Models.Webhook : object {
    [CompilerGeneratedAttribute]
private IWebhookDTO <WebhookDTO>k__BackingField;
    [JsonIgnoreAttribute]
public IWebhookDTO WebhookDTO { get; }
    public string Id { get; }
    public string Url { get; }
    public bool Valid { get; }
    public DateTimeOffset CreatedAt { get; }
    public Uri Uri { get; }
    public Webhook(IWebhookDTO dto);
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookDTO get_WebhookDTO();
    public sealed virtual string get_Id();
    public sealed virtual string get_Url();
    public sealed virtual bool get_Valid();
    public sealed virtual DateTimeOffset get_CreatedAt();
    public sealed virtual Uri get_Uri();
}
public class Tweetinvi.Core.Models.WebhookEnvironment : object {
    private ITwitterClient _client;
    [CompilerGeneratedAttribute]
private IWebhookEnvironmentDTO <WebhookEnvironmentDTO>k__BackingField;
    [JsonIgnoreAttribute]
public IWebhookEnvironmentDTO WebhookEnvironmentDTO { get; }
    public string Name { get; }
    public IWebhook[] Webhooks { get; }
    public WebhookEnvironment(IWebhookEnvironmentDTO webhookEnvironmentDTO, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookEnvironmentDTO get_WebhookEnvironmentDTO();
    public sealed virtual string get_Name();
    public sealed virtual IWebhook[] get_Webhooks();
    [CompilerGeneratedAttribute]
private IWebhook <get_Webhooks>b__8_0(IWebhookDTO x);
}
public class Tweetinvi.Core.Models.WebhookEnvironmentSubscriptions : object {
    [CompilerGeneratedAttribute]
private ITwitterClient <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebhookEnvironmentSubscriptionsDTO <WebhookEnvironmentSubscriptionsDTO>k__BackingField;
    public ITwitterClient Client { get; public set; }
    public IWebhookEnvironmentSubscriptionsDTO WebhookEnvironmentSubscriptionsDTO { get; }
    public string EnvironmentName { get; }
    public string ApplicationId { get; }
    public IWebhookSubscription[] Subscriptions { get; }
    public WebhookEnvironmentSubscriptions(IWebhookEnvironmentSubscriptionsDTO webhookEnvironmentSubscriptionsDTO, ITwitterClient client);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClient get_Client();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Client(ITwitterClient value);
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookEnvironmentSubscriptionsDTO get_WebhookEnvironmentSubscriptionsDTO();
    public sealed virtual string get_EnvironmentName();
    public sealed virtual string get_ApplicationId();
    public sealed virtual IWebhookSubscription[] get_Subscriptions();
}
public class Tweetinvi.Core.Models.WebhookSubscription : object {
    private IWebhookSubscriptionDTO _subscriptionDTO;
    public string UserId { get; }
    public WebhookSubscription(IWebhookSubscriptionDTO subscriptionDTO);
    public sealed virtual string get_UserId();
}
public abstract class Tweetinvi.Core.Parameters.BaseGetUsersOfListParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private ITwitterListIdentifier <List>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public ITwitterListIdentifier List { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    protected BaseGetUsersOfListParameters(ITwitterListIdentifier list);
    protected BaseGetUsersOfListParameters(IBaseGetUsersOfListParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterListIdentifier get_List();
    [CompilerGeneratedAttribute]
public sealed virtual void set_List(ITwitterListIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public class Tweetinvi.Core.Parameters.BaseTweetsV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Expansions>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <MediaFields>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <PlaceFields>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <PollFields>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <TweetFields>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <UserFields>k__BackingField;
    public HashSet`1<string> Expansions { get; public set; }
    public HashSet`1<string> MediaFields { get; public set; }
    public HashSet`1<string> PlaceFields { get; public set; }
    public HashSet`1<string> PollFields { get; public set; }
    public HashSet`1<string> TweetFields { get; public set; }
    public HashSet`1<string> UserFields { get; public set; }
    public virtual void ClearAllFields();
    private void InitializeAllFields();
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_Expansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expansions(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_MediaFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaFields(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_PlaceFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlaceFields(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_PollFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PollFields(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_TweetFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetFields(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_UserFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserFields(HashSet`1<string> value);
}
public class Tweetinvi.Core.Parameters.BaseUsersV2GetByParameters : BaseUsersV2Parameters {
    [CompilerGeneratedAttribute]
private string <By>k__BackingField;
    public string By { get; }
    public BaseUsersV2GetByParameters(string by);
    [CompilerGeneratedAttribute]
public sealed virtual string get_By();
}
public class Tweetinvi.Core.Parameters.BaseUsersV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private HashSet`1<string> <Expansions>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <TweetFields>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <UserFields>k__BackingField;
    public HashSet`1<string> Expansions { get; public set; }
    public HashSet`1<string> TweetFields { get; public set; }
    public HashSet`1<string> UserFields { get; public set; }
    public virtual void ClearAllFields();
    private void InitializeAllFields();
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_Expansions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Expansions(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_TweetFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetFields(HashSet`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual HashSet`1<string> get_UserFields();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserFields(HashSet`1<string> value);
}
public interface Tweetinvi.Core.Parameters.IBaseGetUsersOfListParameters {
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
}
public interface Tweetinvi.Core.Parameters.IBaseTweetsV2Parameters {
    public HashSet`1<string> Expansions { get; public set; }
    public HashSet`1<string> MediaFields { get; public set; }
    public HashSet`1<string> PlaceFields { get; public set; }
    public HashSet`1<string> PollFields { get; public set; }
    public HashSet`1<string> TweetFields { get; public set; }
    public HashSet`1<string> UserFields { get; public set; }
    public abstract virtual HashSet`1<string> get_Expansions();
    public abstract virtual void set_Expansions(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_MediaFields();
    public abstract virtual void set_MediaFields(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_PlaceFields();
    public abstract virtual void set_PlaceFields(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_PollFields();
    public abstract virtual void set_PollFields(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_TweetFields();
    public abstract virtual void set_TweetFields(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_UserFields();
    public abstract virtual void set_UserFields(HashSet`1<string> value);
}
public interface Tweetinvi.Core.Parameters.IBaseUsersV2GetByParameters {
    public string By { get; }
    public abstract virtual string get_By();
}
public interface Tweetinvi.Core.Parameters.IBaseUsersV2Parameters {
    public HashSet`1<string> Expansions { get; public set; }
    public HashSet`1<string> TweetFields { get; public set; }
    public HashSet`1<string> UserFields { get; public set; }
    public abstract virtual HashSet`1<string> get_Expansions();
    public abstract virtual void set_Expansions(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_TweetFields();
    public abstract virtual void set_TweetFields(HashSet`1<string> value);
    public abstract virtual HashSet`1<string> get_UserFields();
    public abstract virtual void set_UserFields(HashSet`1<string> value);
}
public class Tweetinvi.Core.Parameters.TweetFields : object {
    public string Attachments;
    public string AuthorId;
    public string ContextAnnotations;
    public string ConversationId;
    public string CreatedAt;
    public string Entities;
    public string Geo;
    public string Id;
    public string InReplyToUserId;
    public string Lang;
    public string NonPublicMetrics;
    public string PublicMetrics;
    public string OrganicMetrics;
    public string PromotedMetrics;
    public string PossiblySensitive;
    public string ReferencedTweets;
    public string Source;
    public string Text;
    public string Withheld;
    public HashSet`1<string> ALL { get; }
    public HashSet`1<string> get_ALL();
}
public class Tweetinvi.Core.Parameters.UserFields : object {
    public string CreatedAt;
    public string Description;
    public string Entities;
    public string Id;
    public string Location;
    public string Name;
    public string PinnedTweetId;
    public string ProfileImageUrl;
    public string Protected;
    public string PublicMetrics;
    public string Url;
    public string Username;
    public string Verified;
    public string Withheld;
    public HashSet`1<string> ALL { get; }
    public HashSet`1<string> get_ALL();
}
public class Tweetinvi.Core.QueryGenerators.ComputedTweetMode : object {
    private Nullable`1<TweetMode> _tweetMode;
    public static ComputedTweetMode Extended { get; }
    public ComputedTweetMode(ITweetModeParameter parameter, ITwitterRequest request);
    private ComputedTweetMode(TweetMode tweetMode);
    public static Nullable`1<TweetMode> op_Implicit(ComputedTweetMode computedTweetMode);
    public virtual string ToString();
    public static ComputedTweetMode get_Extended();
}
public interface Tweetinvi.Core.QueryGenerators.IHelpQueryGenerator {
    public abstract virtual string GetRateLimitsQuery(IGetRateLimitsParameters parameters);
    public abstract virtual string GetTwitterConfigurationQuery(IGetTwitterConfigurationParameters parameters);
    public abstract virtual string GetSupportedLanguagesQuery(IGetSupportedLanguagesParameters parameters);
    public abstract virtual string GetPlaceQuery(IGetPlaceParameters parameters);
    public abstract virtual string GetSearchGeoQuery(IGeoSearchParameters parameters);
    public abstract virtual string GetSearchGeoReverseQuery(IGeoSearchReverseParameters parameters);
}
public interface Tweetinvi.Core.QueryGenerators.ITweetQueryGenerator {
    public abstract virtual string GetTweetQuery(IGetTweetParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetTweetsQuery(IGetTweetsParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetPublishTweetQuery(IPublishTweetParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetDestroyTweetQuery(IDestroyTweetParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetFavoriteTweetsQuery(IGetUserFavoriteTweetsParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetRetweetsQuery(IGetRetweetsParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetPublishRetweetQuery(IPublishRetweetParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetDestroyRetweetQuery(IDestroyRetweetParameters parameters, ComputedTweetMode tweetMode);
    public abstract virtual string GetRetweeterIdsQuery(IGetRetweeterIdsParameters parameters);
    public abstract virtual string GetCreateFavoriteTweetQuery(IFavoriteTweetParameters parameters);
    public abstract virtual string GetUnfavoriteTweetQuery(IUnfavoriteTweetParameters parameters);
    public abstract virtual string GetOEmbedTweetQuery(IGetOEmbedTweetParameters parameters);
}
public interface Tweetinvi.Core.QueryGenerators.ITwitterListQueryParameterGenerator {
    public abstract virtual string GenerateIdentifierParameter(ITwitterListIdentifier twitterListIdentifier);
    public abstract virtual IGetTweetsFromListParameters CreateTweetsFromListParameters();
    public abstract virtual void AppendListIdentifierParameter(StringBuilder query, ITwitterListIdentifier listIdentifier);
    public abstract virtual void AppendListIdentifierParameter(StringBuilder query, IListParameters parameters);
}
public interface Tweetinvi.Core.QueryGenerators.IUploadQueryGenerator {
    public abstract virtual string GetChunkedUploadInitQuery(IChunkUploadInitParameters chunkUploadInitParameters);
    public abstract virtual string GetChunkedUploadAppendQuery(IChunkUploadAppendParameters parameters);
    public abstract virtual string GetChunkedUploadFinalizeQuery(long mediaId, ICustomRequestParameters customRequestParameters);
}
public interface Tweetinvi.Core.QueryGenerators.IUserQueryGenerator {
    public abstract virtual string GetAuthenticatedUserQuery(IGetAuthenticatedUserParameters parameters);
    public abstract virtual string GetUserQuery(IGetUserParameters parameters);
    public abstract virtual string GetUsersQuery(IGetUsersParameters parameters);
    public abstract virtual string GetFriendIdsQuery(IGetFriendIdsParameters parameters);
    public abstract virtual string GetFollowerIdsQuery(IGetFollowerIdsParameters parameters);
    public abstract virtual string GetRelationshipBetweenQuery(IGetRelationshipBetweenParameters parameters);
    public abstract virtual string DownloadProfileImageURL(IGetProfileImageParameters parameters);
    public abstract virtual string GetBlockUserQuery(IBlockUserParameters parameters);
    public abstract virtual string GetUnblockUserQuery(IUnblockUserParameters parameters);
    public abstract virtual string GetReportUserForSpamQuery(IReportUserForSpamParameters parameters);
    public abstract virtual string GetBlockedUserIdsQuery(IGetBlockedUserIdsParameters parameters);
    public abstract virtual string GetBlockedUsersQuery(IGetBlockedUsersParameters parameters);
    public abstract virtual string GetFollowUserQuery(IFollowUserParameters parameters);
    public abstract virtual string GetUnfollowUserQuery(IUnfollowUserParameters parameters);
    public abstract virtual string GetUpdateRelationshipQuery(IUpdateRelationshipParameters parameters);
    public abstract virtual string GetUserIdsRequestingFriendshipQuery(IGetUserIdsRequestingFriendshipParameters parameters);
    public abstract virtual string GetUserIdsYouRequestedToFollowQuery(IGetUserIdsYouRequestedToFollowParameters parameters);
    public abstract virtual string GetRelationshipsWithQuery(IGetRelationshipsWithParameters parameters);
    public abstract virtual string GetUserIdsWhoseRetweetsAreMutedQuery(IGetUserIdsWhoseRetweetsAreMutedParameters parameters);
    public abstract virtual string GetMutedUserIdsQuery(IGetMutedUserIdsParameters parameters);
    public abstract virtual string GetMutedUsersQuery(IGetMutedUsersParameters parameters);
    public abstract virtual string GetMuteUserQuery(IMuteUserParameters parameters);
    public abstract virtual string GetUnmuteUserQuery(IUnmuteUserParameters parameters);
}
public interface Tweetinvi.Core.QueryGenerators.IUserQueryParameterGenerator {
    public abstract virtual string GenerateIdOrScreenNameParameter(IUserIdentifier user, string idParameterName, string screenNameParameterName);
    public abstract virtual string GenerateListOfUserIdentifiersParameter(IEnumerable`1<IUserIdentifier> usersIdentifiers);
    public abstract virtual void AppendUser(StringBuilder query, IUserIdentifier user);
    public abstract virtual void AppendUsers(StringBuilder query, IEnumerable`1<IUserIdentifier> users);
}
public interface Tweetinvi.Core.QueryGenerators.V2.ITweetsV2QueryGenerator {
    public abstract virtual string GetTweetQuery(IGetTweetV2Parameters parameters);
    public abstract virtual string GetTweetsQuery(IGetTweetsV2Parameters parameters);
    public abstract virtual string GetChangeTweetReplyVisibilityQuery(IChangeTweetReplyVisibilityV2Parameters parameters);
    public abstract virtual void AddTweetFieldsParameters(IBaseTweetsV2Parameters parameters, StringBuilder query);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitAwaiter {
    public abstract virtual Task WaitForCredentialsRateLimitAsync(ITwitterRequest request);
    public abstract virtual Task WaitForCredentialsRateLimitAsync(IWaitForCredentialsRateLimitParameters parameters);
    public abstract virtual Task WaitForCredentialsRateLimitAsync(IEndpointRateLimit queryRateLimit, IReadOnlyTwitterCredentials credentials, ITwitterExecutionContext executionContext);
    public abstract virtual Task`1<TimeSpan> TimeToWaitBeforeTwitterRequestAsync(string query, IReadOnlyTwitterCredentials credentials, ITwitterExecutionContext twitterExecutionContext);
    public abstract virtual TimeSpan GetTimeToWaitFromQueryRateLimit(IEndpointRateLimit queryRateLimit, ITwitterExecutionContext executionContext);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitCache {
    public abstract virtual Task ClearAsync(IReadOnlyTwitterCredentials credentials);
    public abstract virtual Task ClearAllAsync();
    public abstract virtual Task RefreshEntryAsync(IReadOnlyTwitterCredentials credentials, ICredentialsRateLimits newCredentialsRateLimits);
    public abstract virtual Task`1<ICredentialsRateLimits> GetCredentialsRateLimitsAsync(IReadOnlyTwitterCredentials credentials);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitCacheManager {
    public IRateLimitCache RateLimitCache { get; }
    public IRateLimitsClient RateLimitsClient { get; public set; }
    public abstract virtual IRateLimitCache get_RateLimitCache();
    public abstract virtual IRateLimitsClient get_RateLimitsClient();
    public abstract virtual void set_RateLimitsClient(IRateLimitsClient value);
    public abstract virtual Task`1<IEndpointRateLimit> GetQueryRateLimitAsync(IGetEndpointRateLimitsParameters parameters, IReadOnlyTwitterCredentials credentials);
    public abstract virtual Task`1<ICredentialsRateLimits> GetCredentialsRateLimitsAsync(IReadOnlyTwitterCredentials credentials);
    public abstract virtual Task UpdateCredentialsRateLimitsAsync(IReadOnlyTwitterCredentials credentials, ICredentialsRateLimits credentialsRateLimits);
    public abstract virtual Task`1<ICredentialsRateLimits> RefreshCredentialsRateLimitsAsync(IReadOnlyTwitterCredentials credentials);
    public abstract virtual bool ShouldEndpointCacheBeUpdated(IEndpointRateLimit rateLimit);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitHelper {
    public abstract virtual IEndpointRateLimit GetEndpointRateLimitFromQuery(string query, ICredentialsRateLimits rateLimits, bool createIfNotExist);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitUpdater {
    public abstract virtual Task QueryExecutedAsync(string query, ITwitterCredentials credentials, int numberOfRequests);
    public abstract virtual Task QueryExecutedAsync(string query, ITwitterCredentials credentials, Dictionary`2<string, IEnumerable`1<string>> rateLimitHeaders);
    public abstract virtual Task ClearRateLimitsForQueryAsync(string query, IReadOnlyTwitterCredentials credentials);
}
public interface Tweetinvi.Core.RateLimit.IRateLimitUpdaterFactory {
    public abstract virtual IRateLimitUpdater Create(IRateLimitCacheManager rateLimitCacheManager);
}
public interface Tweetinvi.Core.Streaming.IStreamResultGenerator {
    public StreamState StreamState { get; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamStarted(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamStarted(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamResumed(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamResumed(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamPaused(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamPaused(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamStopped(EventHandler`1<StreamStoppedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamStopped(EventHandler`1<StreamStoppedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_KeepAliveReceived(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_KeepAliveReceived(EventHandler value);
    public abstract virtual StreamState get_StreamState();
    public abstract virtual Task StartAsync(Action`1<string> onJsonReceivedCallback, Func`1<ITwitterRequest> createTwitterRequest);
    public abstract virtual Task StartAsync(Func`2<string, bool> onJsonReceivedCallback, Func`1<ITwitterRequest> createTwitterRequest);
    public abstract virtual void ResumeStream();
    public abstract virtual void PauseStream();
    public abstract virtual void StopStream();
    public abstract virtual void StopStream(Exception exception, IDisconnectMessage disconnectMessage);
}
public interface Tweetinvi.Core.Streaming.IStreamTrackManager`1 {
    public abstract virtual List`1<Tuple`2<string, Action`1<T>>> GetMatchingTracksAndActions(string inputs);
}
public interface Tweetinvi.Core.Streaming.ITrackableStream`1 {
    public int TracksCount { get; }
    public int MaxTracks { get; }
    public Dictionary`2<string, Action`1<T>> Tracks { get; }
    public abstract virtual int get_TracksCount();
    public abstract virtual int get_MaxTracks();
    public abstract virtual Dictionary`2<string, Action`1<T>> get_Tracks();
    public abstract virtual void AddTrack(string track, Action`1<T> trackReceived);
    public abstract virtual void RemoveTrack(string track);
    public abstract virtual bool ContainsTrack(string track);
    public abstract virtual void ClearTracks();
}
public interface Tweetinvi.Core.Streaming.ITrackedStream {
    [CompilerGeneratedAttribute]
public abstract virtual void add_MatchingTweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_MatchingTweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NonMatchingTweetReceived(EventHandler`1<TweetEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NonMatchingTweetReceived(EventHandler`1<TweetEventArgs> value);
    public abstract virtual Task StartAsync(string url);
}
public interface Tweetinvi.Core.Streaming.ITrackManager`1 {
    public int TracksCount { get; }
    public int MaxTracks { get; }
    public Dictionary`2<string, Action`1<T>> Tracks { get; }
    public abstract virtual int get_TracksCount();
    public abstract virtual int get_MaxTracks();
    public abstract virtual Dictionary`2<string, Action`1<T>> get_Tracks();
    public abstract virtual void AddTrack(string track, Action`1<T> trackReceived);
    public abstract virtual void RemoveTrack(string track);
    public abstract virtual bool ContainsTrack(string track);
    public abstract virtual void ClearTracks();
}
public interface Tweetinvi.Core.Streaming.ITrackStringAnalyzer {
    public abstract virtual bool Matches(string input);
    public abstract virtual bool MatchesAll(string input);
    public abstract virtual List`1<string> GetMatchingCharacters(string input);
    public abstract virtual List`1<string> GetMatchingTracks(string input);
}
public interface Tweetinvi.Core.Streaming.ITweetStream {
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetReceived(EventHandler`1<TweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetReceived(EventHandler`1<TweetReceivedEventArgs> value);
    public abstract virtual Task StartAsync(string url);
}
public interface Tweetinvi.Core.Streaming.ITwitterStream {
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public StreamState StreamState { get; }
    public String[] LanguageFilters { get; }
    public Nullable`1<bool> StallWarnings { get; public set; }
    public Nullable`1<StreamFilterLevel> FilterLevel { get; public set; }
    public List`1<Tuple`2<string, string>> CustomQueryParameters { get; }
    public string FormattedCustomQueryParameters { get; }
    public ITwitterExecutionContext ExecutionContext { get; public set; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamStarted(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamStarted(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamResumed(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamResumed(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamPaused(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamPaused(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_StreamStopped(EventHandler`1<StreamStoppedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_StreamStopped(EventHandler`1<StreamStoppedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_KeepAliveReceived(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_KeepAliveReceived(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetDeleted(EventHandler`1<TweetDeletedEvent> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetDeleted(EventHandler`1<TweetDeletedEvent> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetLocationInfoRemoved(EventHandler`1<TweetLocationDeletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetLocationInfoRemoved(EventHandler`1<TweetLocationDeletedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_DisconnectMessageReceived(EventHandler`1<DisconnectedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_DisconnectMessageReceived(EventHandler`1<DisconnectedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetWitheld(EventHandler`1<TweetWitheldEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetWitheld(EventHandler`1<TweetWitheldEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_UserWitheld(EventHandler`1<UserWitheldEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_UserWitheld(EventHandler`1<UserWitheldEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_LimitReached(EventHandler`1<LimitReachedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_LimitReached(EventHandler`1<LimitReachedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_WarningFallingBehindDetected(EventHandler`1<WarningFallingBehindEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_WarningFallingBehindDetected(EventHandler`1<WarningFallingBehindEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_UnmanagedEventReceived(EventHandler`1<UnsupportedMessageReceivedEvent> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_UnmanagedEventReceived(EventHandler`1<UnsupportedMessageReceivedEvent> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_EventReceived(EventHandler`1<StreamEventReceivedArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_EventReceived(EventHandler`1<StreamEventReceivedArgs> value);
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
    public abstract virtual StreamState get_StreamState();
    public abstract virtual void Resume();
    public abstract virtual void Pause();
    public abstract virtual void Stop();
    public abstract virtual String[] get_LanguageFilters();
    public abstract virtual void AddLanguageFilter(string language);
    public abstract virtual void AddLanguageFilter(LanguageFilter language);
    public abstract virtual void RemoveLanguageFilter(string language);
    public abstract virtual void RemoveLanguageFilter(LanguageFilter language);
    public abstract virtual void ClearLanguageFilters();
    public abstract virtual Nullable`1<bool> get_StallWarnings();
    public abstract virtual void set_StallWarnings(Nullable`1<bool> value);
    public abstract virtual Nullable`1<StreamFilterLevel> get_FilterLevel();
    public abstract virtual void set_FilterLevel(Nullable`1<StreamFilterLevel> value);
    public abstract virtual List`1<Tuple`2<string, string>> get_CustomQueryParameters();
    public abstract virtual string get_FormattedCustomQueryParameters();
    public abstract virtual ITwitterExecutionContext get_ExecutionContext();
    public abstract virtual void set_ExecutionContext(ITwitterExecutionContext value);
    public abstract virtual void AddCustomQueryParameter(string name, string value);
    public abstract virtual void ClearCustomQueryParameters();
}
public interface Tweetinvi.Core.Streaming.V2.ITweetStreamV2`1 {
    [CompilerGeneratedAttribute]
public abstract virtual void add_EventReceived(EventHandler`1<StreamEventReceivedArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_EventReceived(EventHandler`1<StreamEventReceivedArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetReceived(EventHandler`1<T> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetReceived(EventHandler`1<T> value);
    public abstract virtual void StopStream();
}
public class Tweetinvi.Core.Upload.ChunkUploadAppendParameters : object {
    [CompilerGeneratedAttribute]
private Byte[] <Binary>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <SegmentIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IMediaUploadProgressChangedEventArgs> <UploadProgressChanged>k__BackingField;
    [CompilerGeneratedAttribute]
private ICustomRequestParameters <CustomRequestParameters>k__BackingField;
    public Byte[] Binary { get; }
    public string MediaType { get; }
    public Nullable`1<TimeSpan> Timeout { get; }
    public Nullable`1<int> SegmentIndex { get; public set; }
    public Nullable`1<long> MediaId { get; public set; }
    public Action`1<IMediaUploadProgressChangedEventArgs> UploadProgressChanged { get; public set; }
    public ICustomRequestParameters CustomRequestParameters { get; public set; }
    public ChunkUploadAppendParameters(Byte[] binary, string mediaType, Nullable`1<TimeSpan> timeout);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_SegmentIndex();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SegmentIndex(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IMediaUploadProgressChangedEventArgs> get_UploadProgressChanged();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadProgressChanged(Action`1<IMediaUploadProgressChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual ICustomRequestParameters get_CustomRequestParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomRequestParameters(ICustomRequestParameters value);
}
public class Tweetinvi.Core.Upload.ChunkUploadInitParameters : object {
    [CompilerGeneratedAttribute]
private string <MediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TotalBinaryLength>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<long> <AdditionalOwnerIds>k__BackingField;
    [CompilerGeneratedAttribute]
private ICustomRequestParameters <CustomRequestParameters>k__BackingField;
    public string MediaType { get; public set; }
    public string MediaCategory { get; public set; }
    public int TotalBinaryLength { get; public set; }
    public List`1<long> AdditionalOwnerIds { get; public set; }
    public ICustomRequestParameters CustomRequestParameters { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaType(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_MediaCategory();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaCategory(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_TotalBinaryLength();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TotalBinaryLength(int value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<long> get_AdditionalOwnerIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalOwnerIds(List`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual ICustomRequestParameters get_CustomRequestParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomRequestParameters(ICustomRequestParameters value);
}
public class Tweetinvi.Core.Upload.ChunkUploadResult : object {
    [CompilerGeneratedAttribute]
private List`1<ITwitterResult> <AppendsList>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterResult`1<IUploadInitModel> <Init>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterResult`1<IUploadedMediaInfo> <Finalize>k__BackingField;
    [CompilerGeneratedAttribute]
private IMedia <Media>k__BackingField;
    public List`1<ITwitterResult> AppendsList { get; }
    public ITwitterResult`1<IUploadInitModel> Init { get; public set; }
    public ITwitterResult[] Appends { get; }
    public ITwitterResult`1<IUploadedMediaInfo> Finalize { get; public set; }
    public bool SuccessfullyUploaded { get; }
    public IMedia Media { get; public set; }
    [CompilerGeneratedAttribute]
public List`1<ITwitterResult> get_AppendsList();
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterResult`1<IUploadInitModel> get_Init();
    [CompilerGeneratedAttribute]
public void set_Init(ITwitterResult`1<IUploadInitModel> value);
    public sealed virtual ITwitterResult[] get_Appends();
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterResult`1<IUploadedMediaInfo> get_Finalize();
    [CompilerGeneratedAttribute]
public void set_Finalize(ITwitterResult`1<IUploadedMediaInfo> value);
    public sealed virtual bool get_SuccessfullyUploaded();
    [CompilerGeneratedAttribute]
public sealed virtual IMedia get_Media();
    [CompilerGeneratedAttribute]
public void set_Media(IMedia value);
}
public interface Tweetinvi.Core.Upload.IChunkedUploader {
    public Nullable`1<long> MediaId { get; public set; }
    public int NextSegmentIndex { get; public set; }
    public Dictionary`2<long, Byte[]> UploadedSegments { get; }
    public IChunkUploadResult Result { get; }
    public abstract virtual Nullable`1<long> get_MediaId();
    public abstract virtual void set_MediaId(Nullable`1<long> value);
    public abstract virtual int get_NextSegmentIndex();
    public abstract virtual void set_NextSegmentIndex(int value);
    public abstract virtual Dictionary`2<long, Byte[]> get_UploadedSegments();
    public abstract virtual IChunkUploadResult get_Result();
    public abstract virtual Task`1<bool> InitAsync(IChunkUploadInitParameters initParameters, ITwitterRequest request);
    public abstract virtual Task`1<bool> AppendAsync(IChunkUploadAppendParameters parameters, ITwitterRequest request);
    public abstract virtual Task`1<bool> FinalizeAsync(ICustomRequestParameters customRequestParameters, ITwitterRequest request);
}
public interface Tweetinvi.Core.Upload.IChunkUploadAppendParameters {
    public Byte[] Binary { get; }
    public string MediaType { get; }
    public Nullable`1<TimeSpan> Timeout { get; }
    public Nullable`1<int> SegmentIndex { get; public set; }
    public Nullable`1<long> MediaId { get; public set; }
    public Action`1<IMediaUploadProgressChangedEventArgs> UploadProgressChanged { get; public set; }
    public ICustomRequestParameters CustomRequestParameters { get; public set; }
    public abstract virtual Byte[] get_Binary();
    public abstract virtual string get_MediaType();
    public abstract virtual Nullable`1<TimeSpan> get_Timeout();
    public abstract virtual Nullable`1<int> get_SegmentIndex();
    public abstract virtual void set_SegmentIndex(Nullable`1<int> value);
    public abstract virtual Nullable`1<long> get_MediaId();
    public abstract virtual void set_MediaId(Nullable`1<long> value);
    public abstract virtual Action`1<IMediaUploadProgressChangedEventArgs> get_UploadProgressChanged();
    public abstract virtual void set_UploadProgressChanged(Action`1<IMediaUploadProgressChangedEventArgs> value);
    public abstract virtual ICustomRequestParameters get_CustomRequestParameters();
    public abstract virtual void set_CustomRequestParameters(ICustomRequestParameters value);
}
public interface Tweetinvi.Core.Upload.IChunkUploadInitParameters {
    public string MediaType { get; public set; }
    public string MediaCategory { get; public set; }
    public int TotalBinaryLength { get; public set; }
    public List`1<long> AdditionalOwnerIds { get; public set; }
    public ICustomRequestParameters CustomRequestParameters { get; public set; }
    public abstract virtual string get_MediaType();
    public abstract virtual void set_MediaType(string value);
    public abstract virtual string get_MediaCategory();
    public abstract virtual void set_MediaCategory(string value);
    public abstract virtual int get_TotalBinaryLength();
    public abstract virtual void set_TotalBinaryLength(int value);
    public abstract virtual List`1<long> get_AdditionalOwnerIds();
    public abstract virtual void set_AdditionalOwnerIds(List`1<long> value);
    public abstract virtual ICustomRequestParameters get_CustomRequestParameters();
    public abstract virtual void set_CustomRequestParameters(ICustomRequestParameters value);
}
public interface Tweetinvi.Core.Upload.IChunkUploadResult {
    public ITwitterResult`1<IUploadInitModel> Init { get; }
    public ITwitterResult[] Appends { get; }
    public ITwitterResult`1<IUploadedMediaInfo> Finalize { get; }
    public IMedia Media { get; }
    public bool SuccessfullyUploaded { get; }
    public abstract virtual ITwitterResult`1<IUploadInitModel> get_Init();
    public abstract virtual ITwitterResult[] get_Appends();
    public abstract virtual ITwitterResult`1<IUploadedMediaInfo> get_Finalize();
    public abstract virtual IMedia get_Media();
    public abstract virtual bool get_SuccessfullyUploaded();
}
public interface Tweetinvi.Core.Upload.IUploadInitModel {
    public long MediaId { get; public set; }
    public long ExpiresAfterInSeconds { get; public set; }
    public abstract virtual long get_MediaId();
    public abstract virtual void set_MediaId(long value);
    public abstract virtual long get_ExpiresAfterInSeconds();
    public abstract virtual void set_ExpiresAfterInSeconds(long value);
}
public class Tweetinvi.Core.Upload.ProgressableStreamContent : HttpContent {
    private static int DEFAULT_BUFFER_SIZE;
    private HttpContent _content;
    private int _bufferSize;
    private Action`1<IUploadProgressChanged> _progressChanged;
    public ProgressableStreamContent(HttpContent content, Action`1<IUploadProgressChanged> progress);
    public ProgressableStreamContent(HttpContent content, int bufferSize, Action`1<IUploadProgressChanged> progressChanged);
    protected virtual Task SerializeToStreamAsync(Stream stream, TransportContext context);
    public long GetLength();
    protected virtual bool TryComputeLength(Int64& length);
    protected virtual void Dispose(bool disposing);
}
public class Tweetinvi.Core.Upload.UploadInitModel : object {
    [CompilerGeneratedAttribute]
private long <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <ExpiresAfterInSeconds>k__BackingField;
    [JsonPropertyAttribute("media_id")]
public long MediaId { get; public set; }
    [JsonPropertyAttribute("expires_after_secs")]
public long ExpiresAfterInSeconds { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual long get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(long value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_ExpiresAfterInSeconds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExpiresAfterInSeconds(long value);
}
public class Tweetinvi.Core.Web.FilteredTwitterResult`1 : TwitterResult`1<TDTO> {
    [CompilerGeneratedAttribute]
private TDTO <FilteredDTO>k__BackingField;
    public TDTO FilteredDTO { get; public set; }
    public FilteredTwitterResult`1(ITwitterResult`1<TDTO> source);
    [CompilerGeneratedAttribute]
public sealed virtual TDTO get_FilteredDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FilteredDTO(TDTO value);
}
public class Tweetinvi.Core.Web.FilteredTwitterResult`2 : TwitterResult`1<TDTO> {
    [CompilerGeneratedAttribute]
private TFilteredResultDTO <FilteredResultsDTO>k__BackingField;
    public TFilteredResultDTO FilteredResultsDTO { get; public set; }
    public FilteredTwitterResult`2(ITwitterResult`1<TDTO> source, TFilteredResultDTO filteredResultsResultDTO);
    [CompilerGeneratedAttribute]
public sealed virtual TFilteredResultDTO get_FilteredResultsDTO();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FilteredResultsDTO(TFilteredResultDTO value);
}
public interface Tweetinvi.Core.Web.IFilteredTwitterResult`1 {
    public TDTO FilteredDTO { get; public set; }
    public abstract virtual TDTO get_FilteredDTO();
    public abstract virtual void set_FilteredDTO(TDTO value);
}
public interface Tweetinvi.Core.Web.IFilteredTwitterResult`2 {
    public TFilterResultDTO FilteredResultsDTO { get; public set; }
    public abstract virtual TFilterResultDTO get_FilteredResultsDTO();
    public abstract virtual void set_FilteredResultsDTO(TFilterResultDTO value);
}
public interface Tweetinvi.Core.Web.IOAuthQueryParameter {
    public string Key { get; public set; }
    public string Value { get; public set; }
    public bool RequiredForSignature { get; public set; }
    public bool RequiredForHeader { get; public set; }
    public bool IsPartOfOAuthSecretKey { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual void set_Key(string value);
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
    public abstract virtual bool get_RequiredForSignature();
    public abstract virtual void set_RequiredForSignature(bool value);
    public abstract virtual bool get_RequiredForHeader();
    public abstract virtual void set_RequiredForHeader(bool value);
    public abstract virtual bool get_IsPartOfOAuthSecretKey();
    public abstract virtual void set_IsPartOfOAuthSecretKey(bool value);
}
public interface Tweetinvi.Core.Web.IOAuthWebRequestGenerator {
    public abstract virtual IOAuthQueryParameter GenerateParameter(string key, string value, bool requiredForSignature, bool requiredForHeader, bool isPartOfOAuthSecretKey);
    public abstract virtual IEnumerable`1<IOAuthQueryParameter> GenerateApplicationParameters(IReadOnlyConsumerCredentials temporaryCredentials, IAuthenticationRequest authRequest, IEnumerable`1<IOAuthQueryParameter> additionalParameters);
    public abstract virtual IEnumerable`1<IOAuthQueryParameter> GenerateParameters(IReadOnlyTwitterCredentials credentials, IEnumerable`1<IOAuthQueryParameter> additionalParameters);
    public abstract virtual string GenerateAuthorizationHeader(Uri uri, HttpMethod httpMethod, IEnumerable`1<IOAuthQueryParameter> parameters);
    public abstract virtual Task`1<string> SetTwitterQueryAuthorizationHeaderAsync(ITwitterQuery twitterQuery);
    public abstract virtual Task`1<string> GenerateAuthorizationHeaderAsync(Uri uri, HttpContent queryContent, HttpMethod httpMethod, IEnumerable`1<IOAuthQueryParameter> parameters);
}
public interface Tweetinvi.Core.Web.ITwitterAccessor {
    public abstract virtual Task`1<ITwitterResult> ExecuteRequestAsync(ITwitterRequest request);
    public abstract virtual Task`1<ITwitterResult`1<T>> ExecuteRequestAsync(ITwitterRequest request);
    public abstract virtual Task PrepareTwitterRequestAsync(ITwitterRequest request);
}
public interface Tweetinvi.Core.Web.ITwitterClientHandler {
    public ITwitterQuery TwitterQuery { get; public set; }
    public abstract virtual ITwitterQuery get_TwitterQuery();
    public abstract virtual void set_TwitterQuery(ITwitterQuery value);
}
public interface Tweetinvi.Core.Web.ITwitterResponse {
    public string URL { get; public set; }
    public Stream ResultStream { get; public set; }
    public int StatusCode { get; public set; }
    public bool IsSuccessStatusCode { get; public set; }
    public Dictionary`2<string, IEnumerable`1<string>> Headers { get; public set; }
    public string ReasonPhrase { get; public set; }
    public Byte[] Binary { get; public set; }
    public string Content { get; public set; }
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
    public abstract virtual Stream get_ResultStream();
    public abstract virtual void set_ResultStream(Stream value);
    public abstract virtual int get_StatusCode();
    public abstract virtual void set_StatusCode(int value);
    public abstract virtual bool get_IsSuccessStatusCode();
    public abstract virtual void set_IsSuccessStatusCode(bool value);
    public abstract virtual Dictionary`2<string, IEnumerable`1<string>> get_Headers();
    public abstract virtual void set_Headers(Dictionary`2<string, IEnumerable`1<string>> value);
    public abstract virtual string get_ReasonPhrase();
    public abstract virtual void set_ReasonPhrase(string value);
    public abstract virtual Byte[] get_Binary();
    public abstract virtual void set_Binary(Byte[] value);
    public abstract virtual string get_Content();
    public abstract virtual void set_Content(string value);
}
public interface Tweetinvi.Core.Web.ITwitterResult {
    public ITwitterResponse Response { get; public set; }
    public ITwitterRequest Request { get; public set; }
    public string Content { get; }
    public abstract virtual ITwitterResponse get_Response();
    public abstract virtual void set_Response(ITwitterResponse value);
    public abstract virtual ITwitterRequest get_Request();
    public abstract virtual void set_Request(ITwitterRequest value);
    public abstract virtual string get_Content();
}
public interface Tweetinvi.Core.Web.ITwitterResult`1 {
    public TModel Model { get; }
    public abstract virtual TModel get_Model();
}
public interface Tweetinvi.Core.Web.ITwitterResult`2 {
    public TModel Result { get; }
    public abstract virtual TModel get_Result();
}
public interface Tweetinvi.Core.Web.ITwitterResultFactory {
    public abstract virtual ITwitterResult Create(ITwitterRequest request, ITwitterResponse response);
    public abstract virtual ITwitterResult`1<TDTO> Create(ITwitterRequest request, ITwitterResponse response);
    public abstract virtual ITwitterResult`2<TDTO, TModel> Create(ITwitterRequest request, ITwitterResponse response, Func`2<TDTO, TModel> convert);
    public abstract virtual ITwitterResult`2<TDTO, TModel> Create(ITwitterResult`1<TDTO> result, Func`2<TDTO, TModel> convert);
}
public interface Tweetinvi.Core.Web.IWebRequestExecutor {
    public abstract virtual Task`1<ITwitterResponse> ExecuteQueryAsync(ITwitterRequest request, ITwitterClientHandler handler);
}
public class Tweetinvi.Core.Web.JsonContentFactory : object {
    private IJsonObjectConverter _jsonObjectConverter;
    public JsonContentFactory(IJsonObjectConverter jsonObjectConverter);
    public StringContent Create(T content);
    public StringContent Create(T content, JsonConverter[] converters);
}
public class Tweetinvi.Core.Web.TwitterResult : object {
    [CompilerGeneratedAttribute]
private ITwitterResponse <Response>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterRequest <Request>k__BackingField;
    public ITwitterResponse Response { get; public set; }
    public ITwitterRequest Request { get; public set; }
    public string Content { get; }
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterResponse get_Response();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Response(ITwitterResponse value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterRequest get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(ITwitterRequest value);
    public sealed virtual string get_Content();
}
public class Tweetinvi.Core.Web.TwitterResult`1 : TwitterResult {
    private IJsonObjectConverter _jsonObjectConverter;
    private bool _initialized;
    private TDTO _result;
    public TDTO Model { get; public set; }
    public TwitterResult`1(IJsonObjectConverter jsonObjectConverter);
    public sealed virtual TDTO get_Model();
    public void set_Model(TDTO value);
}
public class Tweetinvi.Core.Web.TwitterResult`2 : TwitterResult`1<TDTO> {
    private Func`2<TDTO, TModel> _convert;
    private TModel _result;
    public TModel Result { get; }
    public TwitterResult`2(IJsonObjectConverter jsonObjectConverter, Func`2<TDTO, TModel> convert);
    public sealed virtual TModel get_Result();
}
public class Tweetinvi.Core.Web.TwitterResultFactory : object {
    private IJsonObjectConverter _jsonObjectConverter;
    public TwitterResultFactory(IJsonObjectConverter jsonObjectConverter);
    public sealed virtual ITwitterResult Create(ITwitterRequest request, ITwitterResponse response);
    public sealed virtual ITwitterResult`1<T> Create(ITwitterRequest request, ITwitterResponse response);
    public sealed virtual ITwitterResult`2<TDTO, TModel> Create(ITwitterRequest request, ITwitterResponse response, Func`2<TDTO, TModel> convert);
    public sealed virtual ITwitterResult`2<TDTO, TModel> Create(ITwitterResult`1<TDTO> result, Func`2<TDTO, TModel> convert);
}
[ExtensionAttribute]
public static class Tweetinvi.Core.Web.WebRequestResultExtension : object {
    [ExtensionAttribute]
public static string ToJson(ITwitterResponse twitterResponse);
    [ExtensionAttribute]
public static Byte[] ToBinary(ITwitterResponse twitterResponse);
}
public interface Tweetinvi.Core.Wrappers.IJObjectStaticWrapper {
    public abstract virtual JObject GetJobjectFromJson(string json);
    public abstract virtual T ToObject(JObject jObject);
    public abstract virtual T ToObject(JToken jToken);
    public abstract virtual string GetNodeRootName(JToken jToken);
}
public interface Tweetinvi.Core.Wrappers.IJsonConvertWrapper {
    public abstract virtual string SerializeObject(object o);
    public abstract virtual string SerializeObject(object o, JsonConverter[] converters);
    public abstract virtual T DeserializeObject(string json);
    public abstract virtual T DeserializeObject(string json, JsonConverter[] converters);
}
public interface Tweetinvi.Core.Wrappers.IParameterOverrideWrapper {
    public string ParameterName { get; public set; }
    public object ParameterValue { get; public set; }
    public abstract virtual string get_ParameterName();
    public abstract virtual void set_ParameterName(string value);
    public abstract virtual object get_ParameterValue();
    public abstract virtual void set_ParameterValue(object value);
}
public interface Tweetinvi.Core.Wrappers.IResolverOverrideWrapper {
    public object ResolverOverride { get; }
    public abstract virtual object get_ResolverOverride();
}
public class Tweetinvi.Events.AccountActivityEvent : object {
    [CompilerGeneratedAttribute]
private long <AccountUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <EventDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public long AccountUserId { get; public set; }
    public DateTimeOffset EventDate { get; public set; }
    public string Json { get; public set; }
    [CompilerGeneratedAttribute]
public long get_AccountUserId();
    [CompilerGeneratedAttribute]
public void set_AccountUserId(long value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_EventDate();
    [CompilerGeneratedAttribute]
public void set_EventDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Json();
    [CompilerGeneratedAttribute]
public void set_Json(string value);
}
public class Tweetinvi.Events.AccountActivityEvent`1 : AccountActivityEvent {
    [CompilerGeneratedAttribute]
private T <Args>k__BackingField;
    public T Args { get; public set; }
    public AccountActivityEvent`1(T args);
    [CompilerGeneratedAttribute]
public T get_Args();
    [CompilerGeneratedAttribute]
public void set_Args(T value);
}
public class Tweetinvi.Events.AfterExecutingQueryEventArgs : QueryExecutionEventArgs {
    [CompilerGeneratedAttribute]
private string <HttpContent>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, IEnumerable`1<string>> <HttpHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CompletedDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TwitterException <Exception>k__BackingField;
    public string HttpContent { get; }
    public Dictionary`2<string, IEnumerable`1<string>> HttpHeaders { get; }
    public DateTimeOffset CompletedDateTime { get; public set; }
    public bool Success { get; }
    public TwitterException Exception { get; protected set; }
    public AfterExecutingQueryEventArgs(ITwitterQuery twitterQuery, string httpContent, Dictionary`2<string, IEnumerable`1<string>> httpHeaders);
    [CompilerGeneratedAttribute]
public string get_HttpContent();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, IEnumerable`1<string>> get_HttpHeaders();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CompletedDateTime();
    [CompilerGeneratedAttribute]
public void set_CompletedDateTime(DateTimeOffset value);
    public bool get_Success();
    [CompilerGeneratedAttribute]
public TwitterException get_Exception();
    [CompilerGeneratedAttribute]
protected void set_Exception(TwitterException value);
}
public class Tweetinvi.Events.AfterExecutingQueryExceptionEventArgs : AfterExecutingQueryEventArgs {
    public AfterExecutingQueryExceptionEventArgs(ITwitterQuery twitterQuery, TwitterException exception);
}
public abstract class Tweetinvi.Events.BaseAccountActivityEventArgs : object {
    [CompilerGeneratedAttribute]
private long <AccountUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <EventDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public long AccountUserId { get; }
    public DateTimeOffset EventDate { get; }
    public string Json { get; }
    protected BaseAccountActivityEventArgs(AccountActivityEvent activityEvent);
    [CompilerGeneratedAttribute]
public long get_AccountUserId();
    [CompilerGeneratedAttribute]
public DateTimeOffset get_EventDate();
    [CompilerGeneratedAttribute]
public string get_Json();
}
public abstract class Tweetinvi.Events.BaseAccountActivityEventArgs`1 : BaseAccountActivityEventArgs {
    [CompilerGeneratedAttribute]
private T <InResultOf>k__BackingField;
    public T InResultOf { get; protected set; }
    protected BaseAccountActivityEventArgs`1(AccountActivityEvent activityEvent);
    [CompilerGeneratedAttribute]
public T get_InResultOf();
    [CompilerGeneratedAttribute]
protected void set_InResultOf(T value);
}
public class Tweetinvi.Events.BaseAccountActivityMessageEventArgs`1 : BaseAccountActivityEventArgs`1<T> {
    [CompilerGeneratedAttribute]
private IMessage <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <Sender>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <Recipient>k__BackingField;
    [CompilerGeneratedAttribute]
private IApp <App>k__BackingField;
    public IMessage Message { get; }
    public IUser Sender { get; }
    public IUser Recipient { get; }
    public IApp App { get; }
    protected BaseAccountActivityMessageEventArgs`1(AccountActivityEvent activityEvent, IMessage message, IUser sender, IUser recipient, IApp app);
    [CompilerGeneratedAttribute]
public IMessage get_Message();
    [CompilerGeneratedAttribute]
public IUser get_Sender();
    [CompilerGeneratedAttribute]
public IUser get_Recipient();
    [CompilerGeneratedAttribute]
public IApp get_App();
}
public class Tweetinvi.Events.BeforeExecutingRequestEventArgs : QueryExecutionEventArgs {
    [CompilerGeneratedAttribute]
private DateTime <BeforeExecutingDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Cancel>k__BackingField;
    public DateTime BeforeExecutingDateTime { get; public set; }
    public bool Cancel { get; public set; }
    public BeforeExecutingRequestEventArgs(ITwitterQuery twitterQuery);
    [CompilerGeneratedAttribute]
public DateTime get_BeforeExecutingDateTime();
    [CompilerGeneratedAttribute]
public void set_BeforeExecutingDateTime(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(bool value);
}
public class Tweetinvi.Events.DisconnectedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IDisconnectMessage <DisconnectMessage>k__BackingField;
    public IDisconnectMessage DisconnectMessage { get; }
    public DisconnectedEventArgs(IDisconnectMessage disconnectMessage);
    [CompilerGeneratedAttribute]
public IDisconnectMessage get_DisconnectMessage();
}
public class Tweetinvi.Events.EventKnownButNotSupported : object {
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    [CompilerGeneratedAttribute]
private BaseAccountActivityEventArgs <EventArgs>k__BackingField;
    public string Json { get; }
    public BaseAccountActivityEventArgs EventArgs { get; }
    public EventKnownButNotSupported(string json, BaseAccountActivityEventArgs accountActivityEventArgs);
    [CompilerGeneratedAttribute]
public string get_Json();
    [CompilerGeneratedAttribute]
public BaseAccountActivityEventArgs get_EventArgs();
}
public class Tweetinvi.Events.GenericEventArgs`1 : EventArgs {
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public T Value { get; }
    public GenericEventArgs`1(T value);
    [CompilerGeneratedAttribute]
public T get_Value();
}
public interface Tweetinvi.Events.IMediaUploadProgressChangedEventArgs {
    public UploadProgressState State { get; }
    public abstract virtual UploadProgressState get_State();
}
public interface Tweetinvi.Events.IUploadProgressChanged {
    public long NumberOfBytesUploaded { get; }
    public long TotalOfBytesToUpload { get; }
    public int Percentage { get; }
    public abstract virtual long get_NumberOfBytesUploaded();
    public abstract virtual long get_TotalOfBytesToUpload();
    public abstract virtual int get_Percentage();
}
public class Tweetinvi.Events.LimitReachedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private int <NumberOfTweetsNotReceived>k__BackingField;
    public int NumberOfTweetsNotReceived { get; }
    public LimitReachedEventArgs(int numberOfTweetsNotReceived);
    [CompilerGeneratedAttribute]
public int get_NumberOfTweetsNotReceived();
}
public class Tweetinvi.Events.MatchedTweetReceivedEventArgs : TweetEventArgs {
    [CompilerGeneratedAttribute]
private String[] <MatchingTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocation[] <MatchingLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private Int64[] <MatchingFollowers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOn <MatchOn>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <RetweetMatchingTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocation[] <RetweetMatchingLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private Int64[] <RetweetMatchingFollowers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOn <RetweetMatchOn>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <QuotedTweetMatchingTracks>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocation[] <QuotedTweetMatchingLocations>k__BackingField;
    [CompilerGeneratedAttribute]
private Int64[] <QuotedTweetMatchingFollowers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOn <QuotedTweetMatchOn>k__BackingField;
    public String[] MatchingTracks { get; public set; }
    public ILocation[] MatchingLocations { get; public set; }
    public Int64[] MatchingFollowers { get; public set; }
    public MatchOn MatchOn { get; public set; }
    public String[] RetweetMatchingTracks { get; public set; }
    public ILocation[] RetweetMatchingLocations { get; public set; }
    public Int64[] RetweetMatchingFollowers { get; public set; }
    public MatchOn RetweetMatchOn { get; public set; }
    public String[] QuotedTweetMatchingTracks { get; public set; }
    public ILocation[] QuotedTweetMatchingLocations { get; public set; }
    public Int64[] QuotedTweetMatchingFollowers { get; public set; }
    public MatchOn QuotedTweetMatchOn { get; public set; }
    public MatchedTweetReceivedEventArgs(ITweet tweet, string json);
    [CompilerGeneratedAttribute]
public String[] get_MatchingTracks();
    [CompilerGeneratedAttribute]
public void set_MatchingTracks(String[] value);
    [CompilerGeneratedAttribute]
public ILocation[] get_MatchingLocations();
    [CompilerGeneratedAttribute]
public void set_MatchingLocations(ILocation[] value);
    [CompilerGeneratedAttribute]
public Int64[] get_MatchingFollowers();
    [CompilerGeneratedAttribute]
public void set_MatchingFollowers(Int64[] value);
    [CompilerGeneratedAttribute]
public MatchOn get_MatchOn();
    [CompilerGeneratedAttribute]
public void set_MatchOn(MatchOn value);
    [CompilerGeneratedAttribute]
public String[] get_RetweetMatchingTracks();
    [CompilerGeneratedAttribute]
public void set_RetweetMatchingTracks(String[] value);
    [CompilerGeneratedAttribute]
public ILocation[] get_RetweetMatchingLocations();
    [CompilerGeneratedAttribute]
public void set_RetweetMatchingLocations(ILocation[] value);
    [CompilerGeneratedAttribute]
public Int64[] get_RetweetMatchingFollowers();
    [CompilerGeneratedAttribute]
public void set_RetweetMatchingFollowers(Int64[] value);
    [CompilerGeneratedAttribute]
public MatchOn get_RetweetMatchOn();
    [CompilerGeneratedAttribute]
public void set_RetweetMatchOn(MatchOn value);
    [CompilerGeneratedAttribute]
public String[] get_QuotedTweetMatchingTracks();
    [CompilerGeneratedAttribute]
public void set_QuotedTweetMatchingTracks(String[] value);
    [CompilerGeneratedAttribute]
public ILocation[] get_QuotedTweetMatchingLocations();
    [CompilerGeneratedAttribute]
public void set_QuotedTweetMatchingLocations(ILocation[] value);
    [CompilerGeneratedAttribute]
public Int64[] get_QuotedTweetMatchingFollowers();
    [CompilerGeneratedAttribute]
public void set_QuotedTweetMatchingFollowers(Int64[] value);
    [CompilerGeneratedAttribute]
public MatchOn get_QuotedTweetMatchOn();
    [CompilerGeneratedAttribute]
public void set_QuotedTweetMatchOn(MatchOn value);
}
public class Tweetinvi.Events.MediaUploadProgressChangedEventArgs : UploadProgressChangedEventArgs {
    [CompilerGeneratedAttribute]
private UploadProgressState <State>k__BackingField;
    public UploadProgressState State { get; }
    public MediaUploadProgressChangedEventArgs(UploadProgressState state, long numberOfBytesUploaded, long totalOfBytesToUpload);
    [CompilerGeneratedAttribute]
public sealed virtual UploadProgressState get_State();
}
public class Tweetinvi.Events.MessageReceivedEvent : BaseAccountActivityMessageEventArgs`1<MessageReceivedInResultOf> {
    public MessageReceivedEvent(AccountActivityEvent activityEvent, IMessage message, IUser sender, IUser recipient, IApp app);
    private MessageReceivedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.MessageReceivedInResultOf : Enum {
    public int value__;
    public static MessageReceivedInResultOf Unknown;
    public static MessageReceivedInResultOf AccountUserReceivingAMessage;
}
public class Tweetinvi.Events.MessageSentEvent : BaseAccountActivityMessageEventArgs`1<MessageSentInResultOf> {
    public MessageSentEvent(AccountActivityEvent activityEvent, IMessage message, IUser sender, IUser recipient, IApp app);
    private MessageSentInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.MessageSentInResultOf : Enum {
    public int value__;
    public static MessageSentInResultOf Unknown;
    public static MessageSentInResultOf AccountUserSendingAMessage;
}
public class Tweetinvi.Events.QueryExecutionEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ITwitterQuery <TwitterQuery>k__BackingField;
    public ITwitterQuery TwitterQuery { get; }
    public string Url { get; }
    public ITwitterCredentials Credentials { get; }
    public IEndpointRateLimit QueryRateLimit { get; }
    public Nullable`1<DateTime> DateOfQueryExecution { get; }
    public Nullable`1<TimeSpan> TimeToWaitBeforeExecutingTheQuery { get; }
    public QueryExecutionEventArgs(ITwitterQuery twitterQuery);
    [CompilerGeneratedAttribute]
public ITwitterQuery get_TwitterQuery();
    public string get_Url();
    public ITwitterCredentials get_Credentials();
    public IEndpointRateLimit get_QueryRateLimit();
    public Nullable`1<DateTime> get_DateOfQueryExecution();
    public Nullable`1<TimeSpan> get_TimeToWaitBeforeExecutingTheQuery();
}
public class Tweetinvi.Events.StreamEventReceivedArgs : object {
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public string Json { get; }
    public StreamEventReceivedArgs(string json);
    [CompilerGeneratedAttribute]
public string get_Json();
}
public class Tweetinvi.Events.StreamStoppedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private IDisconnectMessage <DisconnectMessage>k__BackingField;
    public Exception Exception { get; }
    public IDisconnectMessage DisconnectMessage { get; }
    public StreamStoppedEventArgs(Exception ex, IDisconnectMessage disconnectMessage);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public IDisconnectMessage get_DisconnectMessage();
}
public class Tweetinvi.Events.TweetCreatedEvent : BaseAccountActivityEventArgs`1<TweetCreatedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private ITweet <Tweet>k__BackingField;
    public ITweet Tweet { get; }
    public TweetCreatedEvent(AccountActivityEvent`1<ITweet> eventInfo);
    [CompilerGeneratedAttribute]
public ITweet get_Tweet();
    private TweetCreatedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.TweetCreatedRaisedInResultOf : Enum {
    public int value__;
    public static TweetCreatedRaisedInResultOf Unknown;
    public static TweetCreatedRaisedInResultOf AccountUserCreatingATweet;
    public static TweetCreatedRaisedInResultOf AnotherUserReplyingToAccountUser;
    public static TweetCreatedRaisedInResultOf AnotherUserMentioningTheAccountUser;
}
public class Tweetinvi.Events.TweetDeletedEvent : BaseAccountActivityEventArgs`1<TweetDeletedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private long <TweetId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UserId>k__BackingField;
    public long TweetId { get; }
    public long UserId { get; }
    public TweetDeletedEvent(AccountActivityEvent`1<long> activityEvent, long userId);
    [CompilerGeneratedAttribute]
public long get_TweetId();
    [CompilerGeneratedAttribute]
public long get_UserId();
    private TweetDeletedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.TweetDeletedRaisedInResultOf : Enum {
    public int value__;
    public static TweetDeletedRaisedInResultOf AnotherUserDeletedATweet;
    public static TweetDeletedRaisedInResultOf AccountUserDeletingOneOfHisTweets;
}
public class Tweetinvi.Events.TweetEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ITweet <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public ITweet Tweet { get; }
    public string Json { get; }
    public TweetEventArgs(ITweet tweet, string json);
    [CompilerGeneratedAttribute]
public ITweet get_Tweet();
    [CompilerGeneratedAttribute]
public string get_Json();
}
public class Tweetinvi.Events.TweetFavoritedEvent : BaseAccountActivityEventArgs`1<TweetFavoritedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private ITweet <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <FavoritedBy>k__BackingField;
    public ITweet Tweet { get; }
    public IUser FavoritedBy { get; }
    public TweetFavoritedEvent(AccountActivityEvent`1<Tuple`2<ITweet, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public ITweet get_Tweet();
    [CompilerGeneratedAttribute]
public IUser get_FavoritedBy();
    private TweetFavoritedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.TweetFavoritedRaisedInResultOf : Enum {
    public int value__;
    public static TweetFavoritedRaisedInResultOf Unknown;
    public static TweetFavoritedRaisedInResultOf AccountUserFavoritingHisOwnTweet;
    public static TweetFavoritedRaisedInResultOf AccountUserFavoritingATweetOfAnotherUser;
    public static TweetFavoritedRaisedInResultOf AnotherUserFavoritingATweetOfTheAccountUser;
}
public class Tweetinvi.Events.TweetinviContainerEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ITweetinviContainer <TweetinviContainer>k__BackingField;
    public ITweetinviContainer TweetinviContainer { get; }
    public TweetinviContainerEventArgs(ITweetinviContainer tweetinviContainer);
    [CompilerGeneratedAttribute]
public ITweetinviContainer get_TweetinviContainer();
}
public class Tweetinvi.Events.TweetLocationDeletedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ITweetLocationRemovedInfo <TweetLocationRemovedInfo>k__BackingField;
    public ITweetLocationRemovedInfo TweetLocationRemovedInfo { get; }
    public TweetLocationDeletedEventArgs(ITweetLocationRemovedInfo tweetLocationRemovedInfo);
    [CompilerGeneratedAttribute]
public ITweetLocationRemovedInfo get_TweetLocationRemovedInfo();
}
public class Tweetinvi.Events.TweetReceivedEventArgs : TweetEventArgs {
    public TweetReceivedEventArgs(ITweet tweet, string json);
}
public class Tweetinvi.Events.TweetWitheldEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private ITweetWitheldInfo <TweetWitheldInfo>k__BackingField;
    public ITweetWitheldInfo TweetWitheldInfo { get; }
    public TweetWitheldEventArgs(ITweetWitheldInfo tweetWitheldInfo);
    [CompilerGeneratedAttribute]
public ITweetWitheldInfo get_TweetWitheldInfo();
}
public class Tweetinvi.Events.UnexpectedExceptionThrownEvent : object {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public Exception Exception { get; }
    public UnexpectedExceptionThrownEvent(Exception exception);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
}
public class Tweetinvi.Events.UnsupportedMessageReceivedEvent : object {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    public string Message { get; }
    public UnsupportedMessageReceivedEvent(string message);
    [CompilerGeneratedAttribute]
public string get_Message();
}
public class Tweetinvi.Events.UploadProgressChangedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private long <NumberOfBytesUploaded>k__BackingField;
    [CompilerGeneratedAttribute]
private long <TotalOfBytesToUpload>k__BackingField;
    public long NumberOfBytesUploaded { get; protected set; }
    public long TotalOfBytesToUpload { get; protected set; }
    public int Percentage { get; }
    public UploadProgressChangedEventArgs(long numberOfBytesUploaded, long totalOfBytesToUpload);
    [CompilerGeneratedAttribute]
public sealed virtual long get_NumberOfBytesUploaded();
    [CompilerGeneratedAttribute]
protected void set_NumberOfBytesUploaded(long value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_TotalOfBytesToUpload();
    [CompilerGeneratedAttribute]
protected void set_TotalOfBytesToUpload(long value);
    public sealed virtual int get_Percentage();
}
public class Tweetinvi.Events.UserBlockedEvent : BaseAccountActivityEventArgs`1<UserBlockedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <BlockedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <BlockedBy>k__BackingField;
    public IUser BlockedUser { get; }
    public IUser BlockedBy { get; }
    public UserBlockedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_BlockedUser();
    [CompilerGeneratedAttribute]
public IUser get_BlockedBy();
    private UserBlockedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserBlockedRaisedInResultOf : Enum {
    public int value__;
    public static UserBlockedRaisedInResultOf Unknown;
    public static UserBlockedRaisedInResultOf AccountUserBlockingAnotherUser;
}
public class Tweetinvi.Events.UserFollowedEvent : BaseAccountActivityEventArgs`1<UserFollowedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <FollowedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <FollowedBy>k__BackingField;
    public IUser FollowedUser { get; }
    public IUser FollowedBy { get; }
    public UserFollowedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_FollowedUser();
    [CompilerGeneratedAttribute]
public IUser get_FollowedBy();
    private UserFollowedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserFollowedRaisedInResultOf : Enum {
    public int value__;
    public static UserFollowedRaisedInResultOf Unknown;
    public static UserFollowedRaisedInResultOf AccountUserFollowingAnotherUser;
    public static UserFollowedRaisedInResultOf AnotherUserFollowingAccountUser;
}
public class Tweetinvi.Events.UserIsTypingMessageEvent : BaseAccountActivityEventArgs`1<UserIsTypingMessageInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <TypingUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <TypingTo>k__BackingField;
    public IUser TypingUser { get; }
    public IUser TypingTo { get; }
    public UserIsTypingMessageEvent(AccountActivityEvent activityEvent, IUser typingUser, IUser typingTo);
    [CompilerGeneratedAttribute]
public IUser get_TypingUser();
    [CompilerGeneratedAttribute]
public IUser get_TypingTo();
    private UserIsTypingMessageInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserIsTypingMessageInResultOf : Enum {
    public int value__;
    public static UserIsTypingMessageInResultOf Unknown;
    public static UserIsTypingMessageInResultOf AnotherUserTypingAMessageToAccountUser;
}
public class Tweetinvi.Events.UserMutedEvent : BaseAccountActivityEventArgs`1<UserMutedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <MutedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <MutedBy>k__BackingField;
    public IUser MutedUser { get; }
    public IUser MutedBy { get; }
    public UserMutedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_MutedUser();
    [CompilerGeneratedAttribute]
public IUser get_MutedBy();
    private UserMutedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserMutedRaisedInResultOf : Enum {
    public int value__;
    public static UserMutedRaisedInResultOf Unknown;
    public static UserMutedRaisedInResultOf AccountUserMutingAnotherUser;
}
public class Tweetinvi.Events.UserReadMessageConversationEvent : BaseAccountActivityEventArgs`1<UserReadMessageConversationInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <UserWhoReadTheMessageConversation>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <UserWhoWroteTheMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LastReadEventId>k__BackingField;
    public IUser UserWhoReadTheMessageConversation { get; }
    public IUser UserWhoWroteTheMessage { get; }
    public string LastReadEventId { get; }
    public UserReadMessageConversationEvent(AccountActivityEvent activityEvent, IUser userWhoReadTheMessageConversation, IUser userWhoWroteTheMessage, string lastReadEventId);
    [CompilerGeneratedAttribute]
public IUser get_UserWhoReadTheMessageConversation();
    [CompilerGeneratedAttribute]
public IUser get_UserWhoWroteTheMessage();
    [CompilerGeneratedAttribute]
public string get_LastReadEventId();
    private UserReadMessageConversationInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserReadMessageConversationInResultOf : Enum {
    public int value__;
    public static UserReadMessageConversationInResultOf Unknown;
    public static UserReadMessageConversationInResultOf AnotherUserReadingConversation;
}
public class Tweetinvi.Events.UserRevokedAppPermissionsEvent : BaseAccountActivityEventArgs`1<UserRevokedAppPermissionsInResultOf> {
    [CompilerGeneratedAttribute]
private long <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private long <AppId>k__BackingField;
    public long UserId { get; }
    public long AppId { get; }
    public UserRevokedAppPermissionsEvent(AccountActivityEvent activityEvent, long userId, long appId);
    [CompilerGeneratedAttribute]
public long get_UserId();
    [CompilerGeneratedAttribute]
public long get_AppId();
    private UserRevokedAppPermissionsInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserRevokedAppPermissionsInResultOf : Enum {
    public int value__;
    public static UserRevokedAppPermissionsInResultOf Unknown;
    public static UserRevokedAppPermissionsInResultOf AccountUserRemovingAppPermissions;
}
public class Tweetinvi.Events.UserUnblockedEvent : BaseAccountActivityEventArgs`1<UserUnblockedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <UnblockedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <UnblockedBy>k__BackingField;
    public IUser UnblockedUser { get; }
    public IUser UnblockedBy { get; }
    public UserUnblockedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_UnblockedUser();
    [CompilerGeneratedAttribute]
public IUser get_UnblockedBy();
    private UserUnblockedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserUnblockedRaisedInResultOf : Enum {
    public int value__;
    public static UserUnblockedRaisedInResultOf Unknown;
    public static UserUnblockedRaisedInResultOf AccountUserUnblockingAnotherUser;
}
public class Tweetinvi.Events.UserUnfollowedEvent : BaseAccountActivityEventArgs`1<UserUnfollowedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <UnfollowedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <UnfollowedBy>k__BackingField;
    public IUser UnfollowedUser { get; }
    public IUser UnfollowedBy { get; }
    public UserUnfollowedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_UnfollowedUser();
    [CompilerGeneratedAttribute]
public IUser get_UnfollowedBy();
    private UserUnfollowedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserUnfollowedRaisedInResultOf : Enum {
    public int value__;
    public static UserUnfollowedRaisedInResultOf Unknown;
    public static UserUnfollowedRaisedInResultOf AccountUserUnfollowingAnotherUser;
}
public class Tweetinvi.Events.UserUnmutedEvent : BaseAccountActivityEventArgs`1<UserUnmutedRaisedInResultOf> {
    [CompilerGeneratedAttribute]
private IUser <UnmutedUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUser <UnmutedBy>k__BackingField;
    public IUser UnmutedUser { get; }
    public IUser UnmutedBy { get; }
    public UserUnmutedEvent(AccountActivityEvent`1<Tuple`2<IUser, IUser>> eventInfo);
    [CompilerGeneratedAttribute]
public IUser get_UnmutedUser();
    [CompilerGeneratedAttribute]
public IUser get_UnmutedBy();
    private UserUnmutedRaisedInResultOf GetInResultOf();
}
public enum Tweetinvi.Events.UserUnmutedRaisedInResultOf : Enum {
    public int value__;
    public static UserUnmutedRaisedInResultOf Unknown;
    public static UserUnmutedRaisedInResultOf AccountUserUnmutingAnotherUser;
}
public class Tweetinvi.Events.UserWitheldEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IUserWitheldInfo <UserWitheldInfo>k__BackingField;
    public IUserWitheldInfo UserWitheldInfo { get; }
    public UserWitheldEventArgs(IUserWitheldInfo userWitheldInfo);
    [CompilerGeneratedAttribute]
public IUserWitheldInfo get_UserWitheldInfo();
}
public class Tweetinvi.Events.V2.FilteredStreamTweetV2EventArgs : TweetV2EventArgs {
    [CompilerGeneratedAttribute]
private FilteredStreamMatchingRuleV2[] <MatchingRules>k__BackingField;
    public FilteredStreamMatchingRuleV2[] MatchingRules { get; }
    public FilteredStreamTweetV2EventArgs(FilteredStreamTweetV2Response response, string json);
    public FilteredStreamTweetV2EventArgs(TweetV2 tweet, TweetIncludesV2 includes, FilteredStreamMatchingRuleV2[] matchingRules, string json);
    [CompilerGeneratedAttribute]
public FilteredStreamMatchingRuleV2[] get_MatchingRules();
}
public class Tweetinvi.Events.V2.TweetV2EventArgs : object {
    [CompilerGeneratedAttribute]
private TweetV2 <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetIncludesV2 <Includes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public TweetV2 Tweet { get; }
    public TweetIncludesV2 Includes { get; }
    public string Json { get; }
    public TweetV2EventArgs(TweetV2Response response, string json);
    public TweetV2EventArgs(TweetV2 tweet, TweetIncludesV2 includes, string json);
    [CompilerGeneratedAttribute]
public TweetV2 get_Tweet();
    [CompilerGeneratedAttribute]
public TweetIncludesV2 get_Includes();
    [CompilerGeneratedAttribute]
public string get_Json();
}
public class Tweetinvi.Events.V2.TweetV2ReceivedEventArgs : TweetV2EventArgs {
    public TweetV2ReceivedEventArgs(TweetV2Response response, string json);
}
public class Tweetinvi.Events.WaitingForRateLimitEventArgs : EventArgs {
    private string _url;
    private IEndpointRateLimit _queryRateLimit;
    private IReadOnlyTwitterCredentials _twitterCredentials;
    [CompilerGeneratedAttribute]
private ITwitterRequest <Request>k__BackingField;
    public string Url { get; }
    public IReadOnlyTwitterCredentials Credentials { get; }
    public IEndpointRateLimit QueryRateLimit { get; }
    public ITwitterRequest Request { get; }
    public DateTime ResetDateTime { get; }
    public int ResetInMilliseconds { get; }
    public WaitingForRateLimitEventArgs(string url, IEndpointRateLimit queryRateLimit, IReadOnlyTwitterCredentials twitterCredentials);
    public WaitingForRateLimitEventArgs(ITwitterRequest request, IEndpointRateLimit queryRateLimit);
    public string get_Url();
    public IReadOnlyTwitterCredentials get_Credentials();
    public IEndpointRateLimit get_QueryRateLimit();
    [CompilerGeneratedAttribute]
public ITwitterRequest get_Request();
    public DateTime get_ResetDateTime();
    public int get_ResetInMilliseconds();
}
public class Tweetinvi.Events.WarningFallingBehindEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private IWarningMessageFallingBehind <WarningMessage>k__BackingField;
    public IWarningMessageFallingBehind WarningMessage { get; }
    public WarningFallingBehindEventArgs(IWarningMessageFallingBehind warningMessage);
    [CompilerGeneratedAttribute]
public IWarningMessageFallingBehind get_WarningMessage();
}
public interface Tweetinvi.Exceptions.ITwitterExceptionFactory {
    public abstract virtual TwitterException Create(ITwitterResponse twitterResponse, ITwitterRequest request);
    public abstract virtual TwitterException Create(Exception exception, ITwitterRequest request);
    public abstract virtual TwitterException Create(WebException webException, ITwitterRequest request);
}
public interface Tweetinvi.Exceptions.ITwitterTimeoutException {
}
public class Tweetinvi.Exceptions.TwitterArgumentLimitException : ArgumentException {
    [CompilerGeneratedAttribute]
private string <Message>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ParamName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LimitType>k__BackingField;
    public string Message { get; }
    public string ParamName { get; }
    public string LimitType { get; }
    public string Note { get; }
    public TwitterArgumentLimitException(string argument, int limit, string limitType);
    public TwitterArgumentLimitException(string argument, int limit, string limitType, string limitValueType);
    public TwitterArgumentLimitException(string argument, string message, string limitType);
    [CompilerGeneratedAttribute]
public virtual string get_Message();
    [CompilerGeneratedAttribute]
public virtual string get_ParamName();
    [CompilerGeneratedAttribute]
public string get_LimitType();
    public string get_Note();
}
public class Tweetinvi.Exceptions.TwitterAuthAbortedException : TwitterAuthException {
    public TwitterAuthAbortedException(ITwitterResult twitterResult);
}
public class Tweetinvi.Exceptions.TwitterAuthException : TwitterResponseException {
    public TwitterAuthException(ITwitterResult twitterResult, string message);
}
public class Tweetinvi.Exceptions.TwitterException : WebException {
    [CompilerGeneratedAttribute]
private WebException <WebException>k__BackingField;
    [CompilerGeneratedAttribute]
private string <URL>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TwitterDescription>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreationDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterExceptionInfo[] <TwitterExceptionInfos>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterQuery <TwitterQuery>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private string <_message>k__BackingField;
    public WebException WebException { get; protected set; }
    public string URL { get; }
    public int StatusCode { get; protected set; }
    public string TwitterDescription { get; protected set; }
    public DateTimeOffset CreationDate { get; }
    public string Content { get; public set; }
    public ITwitterExceptionInfo[] TwitterExceptionInfos { get; protected set; }
    public ITwitterQuery TwitterQuery { get; }
    public ITwitterRequest Request { get; }
    private string _message { get; }
    public string Message { get; }
    public TwitterException(ITwitterRequest request, string message, Exception innerException);
    protected TwitterException(ITwitterRequest request, string message);
    public TwitterException(ITwitterRequest request, Exception innerException);
    public TwitterException(IWebExceptionInfoExtractor webExceptionInfoExtractor, ITwitterResponse twitterResponse, ITwitterRequest request);
    public TwitterException(IWebExceptionInfoExtractor webExceptionInfoExtractor, WebException webException, ITwitterRequest request);
    [CompilerGeneratedAttribute]
public sealed virtual WebException get_WebException();
    [CompilerGeneratedAttribute]
protected void set_WebException(WebException value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_URL();
    [CompilerGeneratedAttribute]
public sealed virtual int get_StatusCode();
    [CompilerGeneratedAttribute]
protected void set_StatusCode(int value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TwitterDescription();
    [CompilerGeneratedAttribute]
protected void set_TwitterDescription(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTimeOffset get_CreationDate();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Content();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Content(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterExceptionInfo[] get_TwitterExceptionInfos();
    [CompilerGeneratedAttribute]
protected void set_TwitterExceptionInfos(ITwitterExceptionInfo[] value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterQuery get_TwitterQuery();
    [CompilerGeneratedAttribute]
public ITwitterRequest get_Request();
    [CompilerGeneratedAttribute]
private string get__message();
    public virtual string get_Message();
    public virtual string ToString();
}
public class Tweetinvi.Exceptions.TwitterExceptionFactory : object {
    private IWebExceptionInfoExtractor _webExceptionInfoExtractor;
    public TwitterExceptionFactory(IWebExceptionInfoExtractor webExceptionInfoExtractor);
    public sealed virtual TwitterException Create(ITwitterResponse twitterResponse, ITwitterRequest request);
    public sealed virtual TwitterException Create(Exception exception, ITwitterRequest request);
    public sealed virtual TwitterException Create(WebException webException, ITwitterRequest request);
}
public class Tweetinvi.Exceptions.TwitterInvalidCredentialsException : Exception {
    [CompilerGeneratedAttribute]
private IReadOnlyConsumerCredentials <Credentials>k__BackingField;
    public IReadOnlyConsumerCredentials Credentials { get; }
    public TwitterInvalidCredentialsException(string message);
    public TwitterInvalidCredentialsException(IReadOnlyConsumerCredentials credentials);
    [CompilerGeneratedAttribute]
public IReadOnlyConsumerCredentials get_Credentials();
}
public class Tweetinvi.Exceptions.TwitterIteratorAlreadyCompletedException : Exception {
    public TwitterIteratorAlreadyCompletedException(string message);
}
public class Tweetinvi.Exceptions.TwitterNullCredentialsException : TwitterInvalidCredentialsException {
    public string Description { get; }
    public TwitterNullCredentialsException(string message);
    public string get_Description();
}
public class Tweetinvi.Exceptions.TwitterResponseException : Exception {
    [CompilerGeneratedAttribute]
private ITwitterResult <TwitterResult>k__BackingField;
    public ITwitterResult TwitterResult { get; }
    public TwitterResponseException(ITwitterResult twitterResult);
    public TwitterResponseException(ITwitterResult twitterResult, string message);
    [CompilerGeneratedAttribute]
public ITwitterResult get_TwitterResult();
}
public class Tweetinvi.Exceptions.TwitterTimeoutException : TwitterException {
    public TwitterTimeoutException(ITwitterRequest request, Exception e);
}
public class Tweetinvi.Exceptions.UserDeniedAuthenticationException : Exception {
}
public interface Tweetinvi.IMultipartTwitterQuery {
    public Byte[][] Binaries { get; public set; }
    public string ContentId { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public abstract virtual Byte[][] get_Binaries();
    public abstract virtual void set_Binaries(Byte[][] value);
    public abstract virtual string get_ContentId();
    public abstract virtual void set_ContentId(string value);
    public abstract virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    public abstract virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
}
public interface Tweetinvi.IProxyConfig {
    public Uri Address { get; }
    public abstract virtual Uri get_Address();
}
public interface Tweetinvi.Iterators.IMultiLevelCursorIterator`2 {
}
public interface Tweetinvi.Iterators.IMultiLevelCursorIterator`3 {
    public bool Completed { get; }
    public abstract virtual bool get_Completed();
    public abstract virtual Task`1<IMultiLevelCursorIteratorPage`3<TParent, TItem, TCursor>> NextPageAsync();
}
public interface Tweetinvi.Iterators.IMultiLevelCursorIteratorPage`3 {
    public TParent[] AssociatedParentItems { get; public set; }
    public abstract virtual TParent[] get_AssociatedParentItems();
    public abstract virtual void set_AssociatedParentItems(TParent[] value);
}
public interface Tweetinvi.Iterators.ITwitterIterator`1 {
}
public interface Tweetinvi.Iterators.ITwitterIterator`2 {
    public TCursor NextCursor { get; }
    public bool Completed { get; }
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual bool get_Completed();
    public abstract virtual Task`1<ITwitterIteratorPage`2<TItem, TCursor>> NextPageAsync();
}
public interface Tweetinvi.Iterators.ITwitterIteratorPage`2 {
    public TCursor NextCursor { get; }
    public bool IsLastPage { get; }
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual bool get_IsLastPage();
}
public interface Tweetinvi.Iterators.ITwitterRequestIterator`2 {
    public TCursor NextCursor { get; }
    public bool Completed { get; }
    public abstract virtual TCursor get_NextCursor();
    public abstract virtual bool get_Completed();
    public abstract virtual Task`1<IIteratorPageResult`2<TPage, TCursor>> NextPageAsync();
}
public interface Tweetinvi.ITweetinviSettings {
    public IProxyConfig ProxyConfig { get; public set; }
    public TimeSpan HttpRequestTimeout { get; public set; }
    public RateLimitTrackerMode RateLimitTrackerMode { get; public set; }
    public TimeSpan RateLimitWaitFudge { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public Func`1<DateTime> GetUtcDateTime { get; public set; }
    public JsonConverter[] Converters { get; public set; }
    public TwitterLimits Limits { get; public set; }
    public abstract virtual IProxyConfig get_ProxyConfig();
    public abstract virtual void set_ProxyConfig(IProxyConfig value);
    public abstract virtual TimeSpan get_HttpRequestTimeout();
    public abstract virtual void set_HttpRequestTimeout(TimeSpan value);
    public abstract virtual RateLimitTrackerMode get_RateLimitTrackerMode();
    public abstract virtual void set_RateLimitTrackerMode(RateLimitTrackerMode value);
    public abstract virtual TimeSpan get_RateLimitWaitFudge();
    public abstract virtual void set_RateLimitWaitFudge(TimeSpan value);
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
    public abstract virtual Func`1<DateTime> get_GetUtcDateTime();
    public abstract virtual void set_GetUtcDateTime(Func`1<DateTime> value);
    public abstract virtual JsonConverter[] get_Converters();
    public abstract virtual void set_Converters(JsonConverter[] value);
    public abstract virtual TwitterLimits get_Limits();
    public abstract virtual void set_Limits(TwitterLimits value);
    public abstract virtual void Initialize(ITweetinviSettings other);
}
public interface Tweetinvi.ITwitterClient {
    public IAccountSettingsClient AccountSettings { get; }
    public IAuthClient Auth { get; }
    public IHelpClient Help { get; }
    public IExecuteClient Execute { get; }
    public IListsClient Lists { get; }
    public IMessagesClient Messages { get; }
    public IRateLimitsClient RateLimits { get; }
    public ISearchClient Search { get; }
    public IStreamsClient Streams { get; }
    public ITimelinesClient Timelines { get; }
    public ITrendsClient Trends { get; }
    public ITweetsClient Tweets { get; }
    public IUsersClient Users { get; }
    public IUploadClient Upload { get; }
    public IAccountActivityClient AccountActivity { get; }
    public ISearchV2Client SearchV2 { get; }
    public ITweetsV2Client TweetsV2 { get; }
    public IUsersV2Client UsersV2 { get; }
    public IStreamsV2Client StreamsV2 { get; }
    public IRawExecutors Raw { get; }
    public ITweetinviSettings Config { get; }
    public IReadOnlyTwitterCredentials Credentials { get; }
    public IExternalClientEvents Events { get; }
    public ITwitterClientFactories Factories { get; }
    public IJsonClient Json { get; }
    public IParametersValidator ParametersValidator { get; }
    public abstract virtual IAccountSettingsClient get_AccountSettings();
    public abstract virtual IAuthClient get_Auth();
    public abstract virtual IHelpClient get_Help();
    public abstract virtual IExecuteClient get_Execute();
    public abstract virtual IListsClient get_Lists();
    public abstract virtual IMessagesClient get_Messages();
    public abstract virtual IRateLimitsClient get_RateLimits();
    public abstract virtual ISearchClient get_Search();
    public abstract virtual IStreamsClient get_Streams();
    public abstract virtual ITimelinesClient get_Timelines();
    public abstract virtual ITrendsClient get_Trends();
    public abstract virtual ITweetsClient get_Tweets();
    public abstract virtual IUsersClient get_Users();
    public abstract virtual IUploadClient get_Upload();
    public abstract virtual IAccountActivityClient get_AccountActivity();
    public abstract virtual ISearchV2Client get_SearchV2();
    public abstract virtual ITweetsV2Client get_TweetsV2();
    public abstract virtual IUsersV2Client get_UsersV2();
    public abstract virtual IStreamsV2Client get_StreamsV2();
    public abstract virtual IRawExecutors get_Raw();
    public abstract virtual ITweetinviSettings get_Config();
    public abstract virtual IReadOnlyTwitterCredentials get_Credentials();
    public abstract virtual IExternalClientEvents get_Events();
    public abstract virtual ITwitterClientFactories get_Factories();
    public abstract virtual IJsonClient get_Json();
    public abstract virtual IParametersValidator get_ParametersValidator();
    public abstract virtual ITwitterRequest CreateRequest();
    public abstract virtual ITwitterExecutionContext CreateTwitterExecutionContext();
}
public enum Tweetinvi.Models.AllowContributorRequestMode : Enum {
    public int value__;
    public static AllowContributorRequestMode None;
    public static AllowContributorRequestMode Followers;
    public static AllowContributorRequestMode All;
}
public enum Tweetinvi.Models.AllowDirectMessagesFrom : Enum {
    public int value__;
    public static AllowDirectMessagesFrom Following;
    public static AllowDirectMessagesFrom All;
}
public enum Tweetinvi.Models.AttachmentType : Enum {
    public int value__;
    public static AttachmentType UnrecognisedValue;
    [JsonEnumStringAttribute("media")]
public static AttachmentType Media;
}
public class Tweetinvi.Models.ConsumerOnlyCredentials : object {
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BearerToken>k__BackingField;
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string BearerToken { get; public set; }
    public ConsumerOnlyCredentials(string consumerKey, string consumerSecret);
    public ConsumerOnlyCredentials(string consumerKey, string consumerSecret, string bearerToken);
    public ConsumerOnlyCredentials(IReadOnlyConsumerCredentials creds);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BearerToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BearerToken(string value);
}
public class Tweetinvi.Models.Coordinates : object {
    [CompilerGeneratedAttribute]
private double <Longitude>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Latitude>k__BackingField;
    public double Longitude { get; public set; }
    public double Latitude { get; public set; }
    public Coordinates(double latitude, double longitude);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Longitude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Longitude(double value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Latitude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Latitude(double value);
}
public class Tweetinvi.Models.CustomHeader : object {
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Values>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomHeaderWill <Behaviour>k__BackingField;
    public string Key { get; }
    public List`1<string> Values { get; }
    public CustomHeaderWill Behaviour { get; public set; }
    public CustomHeader(string key);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public List`1<string> get_Values();
    [CompilerGeneratedAttribute]
public CustomHeaderWill get_Behaviour();
    [CompilerGeneratedAttribute]
public void set_Behaviour(CustomHeaderWill value);
}
public enum Tweetinvi.Models.CustomHeaderWill : Enum {
    public int value__;
    public static CustomHeaderWill OverrideGeneratedHeaders;
    public static CustomHeaderWill BeAddedToGeneratedHeaders;
    public static CustomHeaderWill RemoveGeneratedHeaders;
}
[DefaultMemberAttribute("Item")]
public class Tweetinvi.Models.CustomRequestHeaders : object {
    private Dictionary`2<string, CustomHeader> _customHeaders;
    public CustomHeader Item { get; }
    public void Add(string key, string value);
    public void Add(string key, List`1<string> values);
    public void Add(string key, string value, CustomHeaderWill behaviour);
    public void Add(string key, IEnumerable`1<string> values, CustomHeaderWill behaviour);
    public void Add(CustomHeader customHeader);
    public CustomHeader Get(string key);
    public void Remove(string key);
    public CustomHeader get_Item(string key);
    public sealed virtual IEnumerator`1<CustomHeader> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
public static class Tweetinvi.Models.DisplayLanguages : object {
    public static Language Undefined { get; }
    public static Language Arabic { get; }
    public static Language Basque { get; }
    public static Language Bengali { get; }
    public static Language British { get; }
    public static Language Bulgarian { get; }
    public static Language Catalan { get; }
    public static Language ChineseSimplified { get; }
    public static Language ChineseTraditional { get; }
    public static Language Croatian { get; }
    public static Language Czech { get; }
    public static Language Danish { get; }
    public static Language Dutch { get; }
    public static Language English { get; }
    public static Language Filipino { get; }
    public static Language Finnish { get; }
    public static Language French { get; }
    public static Language Galician { get; }
    public static Language German { get; }
    public static Language Greek { get; }
    public static Language Gujarati { get; }
    public static Language Hebrew { get; }
    public static Language Hindi { get; }
    public static Language Hungarian { get; }
    public static Language Indonesian { get; }
    public static Language Irish { get; }
    public static Language Italian { get; }
    public static Language Japanese { get; }
    public static Language Kannada { get; }
    public static Language Korean { get; }
    public static Language Malay { get; }
    public static Language Marathi { get; }
    public static Language Norwegian { get; }
    public static Language Persian { get; }
    public static Language Polish { get; }
    public static Language Portuguese { get; }
    public static Language Romanian { get; }
    public static Language Russian { get; }
    public static Language Serbian { get; }
    public static Language Slovak { get; }
    public static Language Spanish { get; }
    public static Language Swedish { get; }
    public static Language Tamil { get; }
    public static Language Thai { get; }
    public static Language Turkish { get; }
    public static Language Ukrainian { get; }
    public static Language Urdu { get; }
    public static Language Vietnamese { get; }
    public static Language get_Undefined();
    public static Language get_Arabic();
    public static Language get_Basque();
    public static Language get_Bengali();
    public static Language get_British();
    public static Language get_Bulgarian();
    public static Language get_Catalan();
    public static Language get_ChineseSimplified();
    public static Language get_ChineseTraditional();
    public static Language get_Croatian();
    public static Language get_Czech();
    public static Language get_Danish();
    public static Language get_Dutch();
    public static Language get_English();
    public static Language get_Filipino();
    public static Language get_Finnish();
    public static Language get_French();
    public static Language get_Galician();
    public static Language get_German();
    public static Language get_Greek();
    public static Language get_Gujarati();
    public static Language get_Hebrew();
    public static Language get_Hindi();
    public static Language get_Hungarian();
    public static Language get_Indonesian();
    public static Language get_Irish();
    public static Language get_Italian();
    public static Language get_Japanese();
    public static Language get_Kannada();
    public static Language get_Korean();
    public static Language get_Malay();
    public static Language get_Marathi();
    public static Language get_Norwegian();
    public static Language get_Persian();
    public static Language get_Polish();
    public static Language get_Portuguese();
    public static Language get_Romanian();
    public static Language get_Russian();
    public static Language get_Serbian();
    public static Language get_Slovak();
    public static Language get_Spanish();
    public static Language get_Swedish();
    public static Language get_Tamil();
    public static Language get_Thai();
    public static Language get_Turkish();
    public static Language get_Ukrainian();
    public static Language get_Urdu();
    public static Language get_Vietnamese();
}
public enum Tweetinvi.Models.DistanceMeasure : Enum {
    public int value__;
    public static DistanceMeasure Kilometers;
    public static DistanceMeasure Miles;
}
public interface Tweetinvi.Models.DTO.Events.IMessageEventDTO {
    public EventType Type { get; public set; }
    public long Id { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public IEventInitiatedViaDTO InitiatedVia { get; public set; }
    public IMessageCreateDTO MessageCreate { get; public set; }
    public abstract virtual EventType get_Type();
    public abstract virtual void set_Type(EventType value);
    public abstract virtual long get_Id();
    public abstract virtual void set_Id(long value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual IEventInitiatedViaDTO get_InitiatedVia();
    public abstract virtual void set_InitiatedVia(IEventInitiatedViaDTO value);
    public abstract virtual IMessageCreateDTO get_MessageCreate();
    public abstract virtual void set_MessageCreate(IMessageCreateDTO value);
}
public interface Tweetinvi.Models.DTO.IAccountSettingsDTO {
    public string ScreenName { get; public set; }
    public PrivacyMode PrivacyMode { get; public set; }
    public Language Language { get; public set; }
    public bool AlwaysUseHttps { get; public set; }
    public bool DiscoverableByEmail { get; public set; }
    public bool DiscoverableByMobilePhone { get; public set; }
    public bool DisplaySensitiveMedia { get; public set; }
    public bool SmartMute { get; public set; }
    public bool GeoEnabled { get; public set; }
    public bool UseCookiePersonalization { get; public set; }
    public AllowDirectMessagesFrom AllowDirectMessagesFrom { get; public set; }
    public AllowDirectMessagesFrom AllowGroupDirectMessagesFrom { get; public set; }
    public AllowContributorRequestMode AllowContributorRequest { get; public set; }
    public ITimeZone TimeZone { get; public set; }
    public bool SleepTimeEnabled { get; public set; }
    public int SleepTimeStartHour { get; public set; }
    public int SleepTimeEndHour { get; public set; }
    public string TranslatorType { get; public set; }
    public ITrendLocation[] TrendLocations { get; public set; }
    public abstract virtual string get_ScreenName();
    public abstract virtual void set_ScreenName(string value);
    public abstract virtual PrivacyMode get_PrivacyMode();
    public abstract virtual void set_PrivacyMode(PrivacyMode value);
    public abstract virtual Language get_Language();
    public abstract virtual void set_Language(Language value);
    public abstract virtual bool get_AlwaysUseHttps();
    public abstract virtual void set_AlwaysUseHttps(bool value);
    public abstract virtual bool get_DiscoverableByEmail();
    public abstract virtual void set_DiscoverableByEmail(bool value);
    public abstract virtual bool get_DiscoverableByMobilePhone();
    public abstract virtual void set_DiscoverableByMobilePhone(bool value);
    public abstract virtual bool get_DisplaySensitiveMedia();
    public abstract virtual void set_DisplaySensitiveMedia(bool value);
    public abstract virtual bool get_SmartMute();
    public abstract virtual void set_SmartMute(bool value);
    public abstract virtual bool get_GeoEnabled();
    public abstract virtual void set_GeoEnabled(bool value);
    public abstract virtual bool get_UseCookiePersonalization();
    public abstract virtual void set_UseCookiePersonalization(bool value);
    public abstract virtual AllowDirectMessagesFrom get_AllowDirectMessagesFrom();
    public abstract virtual void set_AllowDirectMessagesFrom(AllowDirectMessagesFrom value);
    public abstract virtual AllowDirectMessagesFrom get_AllowGroupDirectMessagesFrom();
    public abstract virtual void set_AllowGroupDirectMessagesFrom(AllowDirectMessagesFrom value);
    public abstract virtual AllowContributorRequestMode get_AllowContributorRequest();
    public abstract virtual void set_AllowContributorRequest(AllowContributorRequestMode value);
    public abstract virtual ITimeZone get_TimeZone();
    public abstract virtual void set_TimeZone(ITimeZone value);
    public abstract virtual bool get_SleepTimeEnabled();
    public abstract virtual void set_SleepTimeEnabled(bool value);
    public abstract virtual int get_SleepTimeStartHour();
    public abstract virtual void set_SleepTimeStartHour(int value);
    public abstract virtual int get_SleepTimeEndHour();
    public abstract virtual void set_SleepTimeEndHour(int value);
    public abstract virtual string get_TranslatorType();
    public abstract virtual void set_TranslatorType(string value);
    public abstract virtual ITrendLocation[] get_TrendLocations();
    public abstract virtual void set_TrendLocations(ITrendLocation[] value);
}
public interface Tweetinvi.Models.DTO.IAttachmentDTO {
    public AttachmentType Type { get; public set; }
    public IMediaEntity Media { get; public set; }
    public abstract virtual AttachmentType get_Type();
    public abstract virtual void set_Type(AttachmentType value);
    public abstract virtual IMediaEntity get_Media();
    public abstract virtual void set_Media(IMediaEntity value);
}
public interface Tweetinvi.Models.DTO.ICreateMessageDTO {
    public IMessageEventDTO MessageEvent { get; public set; }
    public abstract virtual IMessageEventDTO get_MessageEvent();
    public abstract virtual void set_MessageEvent(IMessageEventDTO value);
}
public interface Tweetinvi.Models.DTO.IEventInitiatedViaDTO {
    public long TweetId { get; }
    public Nullable`1<long> WelcomeMessageId { get; }
    public abstract virtual long get_TweetId();
    public abstract virtual Nullable`1<long> get_WelcomeMessageId();
}
public interface Tweetinvi.Models.DTO.IExtendedTweet {
    public string Text { get; public set; }
    public string FullText { get; public set; }
    public Int32[] DisplayTextRange { get; public set; }
    public ITweetEntities LegacyEntities { get; public set; }
    public ITweetEntities ExtendedEntities { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual string get_FullText();
    public abstract virtual void set_FullText(string value);
    public abstract virtual Int32[] get_DisplayTextRange();
    public abstract virtual void set_DisplayTextRange(Int32[] value);
    public abstract virtual ITweetEntities get_LegacyEntities();
    public abstract virtual void set_LegacyEntities(ITweetEntities value);
    public abstract virtual ITweetEntities get_ExtendedEntities();
    public abstract virtual void set_ExtendedEntities(ITweetEntities value);
}
public interface Tweetinvi.Models.DTO.IGetMessageDTO {
    public IMessageEventDTO MessageEvent { get; public set; }
    public Dictionary`2<long, IApp> Apps { get; public set; }
    public abstract virtual IMessageEventDTO get_MessageEvent();
    public abstract virtual void set_MessageEvent(IMessageEventDTO value);
    public abstract virtual Dictionary`2<long, IApp> get_Apps();
    public abstract virtual void set_Apps(Dictionary`2<long, IApp> value);
}
public interface Tweetinvi.Models.DTO.IMediaMetadata {
    public Nullable`1<long> MediaId { get; public set; }
    public string AltText { get; public set; }
    public abstract virtual Nullable`1<long> get_MediaId();
    public abstract virtual void set_MediaId(Nullable`1<long> value);
    public abstract virtual string get_AltText();
    public abstract virtual void set_AltText(string value);
}
public interface Tweetinvi.Models.DTO.IMessageCreateDTO {
    public IMessageCreateTargetDTO Target { get; public set; }
    public long SenderId { get; public set; }
    public Nullable`1<long> SourceAppId { get; public set; }
    public IMessageDataDTO MessageData { get; public set; }
    public abstract virtual IMessageCreateTargetDTO get_Target();
    public abstract virtual void set_Target(IMessageCreateTargetDTO value);
    public abstract virtual long get_SenderId();
    public abstract virtual void set_SenderId(long value);
    public abstract virtual Nullable`1<long> get_SourceAppId();
    public abstract virtual void set_SourceAppId(Nullable`1<long> value);
    public abstract virtual IMessageDataDTO get_MessageData();
    public abstract virtual void set_MessageData(IMessageDataDTO value);
}
public interface Tweetinvi.Models.DTO.IMessageCreateTargetDTO {
    public long RecipientId { get; public set; }
    public abstract virtual long get_RecipientId();
    public abstract virtual void set_RecipientId(long value);
}
public interface Tweetinvi.Models.DTO.IMessageDataDTO {
    public string Text { get; public set; }
    public IMessageEntities Entities { get; public set; }
    public IQuickReplyDTO QuickReply { get; public set; }
    public IQuickReplyResponse QuickReplyResponse { get; public set; }
    public IAttachmentDTO Attachment { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual IMessageEntities get_Entities();
    public abstract virtual void set_Entities(IMessageEntities value);
    public abstract virtual IQuickReplyDTO get_QuickReply();
    public abstract virtual void set_QuickReply(IQuickReplyDTO value);
    public abstract virtual IQuickReplyResponse get_QuickReplyResponse();
    public abstract virtual void set_QuickReplyResponse(IQuickReplyResponse value);
    public abstract virtual IAttachmentDTO get_Attachment();
    public abstract virtual void set_Attachment(IAttachmentDTO value);
}
public interface Tweetinvi.Models.DTO.IMessageEventWithAppDTO {
    public IMessageEventDTO MessageEvent { get; public set; }
    public IApp App { get; public set; }
    public abstract virtual IMessageEventDTO get_MessageEvent();
    public abstract virtual void set_MessageEvent(IMessageEventDTO value);
    public abstract virtual IApp get_App();
    public abstract virtual void set_App(IApp value);
}
public interface Tweetinvi.Models.DTO.IOEmbedTweetDTO {
    public string AuthorName { get; public set; }
    public string AuthorURL { get; public set; }
    public string HTML { get; public set; }
    public string URL { get; public set; }
    public string ProviderURL { get; public set; }
    public double Width { get; public set; }
    public double Height { get; public set; }
    public string Version { get; public set; }
    public string Type { get; public set; }
    public string CacheAge { get; public set; }
    public abstract virtual string get_AuthorName();
    public abstract virtual void set_AuthorName(string value);
    public abstract virtual string get_AuthorURL();
    public abstract virtual void set_AuthorURL(string value);
    public abstract virtual string get_HTML();
    public abstract virtual void set_HTML(string value);
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
    public abstract virtual string get_ProviderURL();
    public abstract virtual void set_ProviderURL(string value);
    public abstract virtual double get_Width();
    public abstract virtual void set_Width(double value);
    public abstract virtual double get_Height();
    public abstract virtual void set_Height(double value);
    public abstract virtual string get_Version();
    public abstract virtual void set_Version(string value);
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
    public abstract virtual string get_CacheAge();
    public abstract virtual void set_CacheAge(string value);
}
public interface Tweetinvi.Models.DTO.IQuickReplyDTO {
    public QuickReplyType Type { get; public set; }
    public IQuickReplyOption[] Options { get; public set; }
    public abstract virtual QuickReplyType get_Type();
    public abstract virtual void set_Type(QuickReplyType value);
    public abstract virtual IQuickReplyOption[] get_Options();
    public abstract virtual void set_Options(IQuickReplyOption[] value);
}
public interface Tweetinvi.Models.DTO.IRelationshipDetailsDTO {
    public long SourceId { get; }
    public string SourceIdStr { get; }
    public string SourceScreenName { get; }
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetScreenName { get; }
    public bool Following { get; }
    public bool FollowedBy { get; }
    public bool FollowingReceived { get; }
    public bool FollowingRequested { get; }
    public bool NotificationsEnabled { get; }
    public bool CanSendDirectMessage { get; }
    public bool Blocking { get; }
    public bool BlockedBy { get; }
    public bool Muting { get; }
    public bool WantRetweets { get; }
    public bool AllReplies { get; }
    public bool MarkedSpam { get; }
    public abstract virtual long get_SourceId();
    public abstract virtual string get_SourceIdStr();
    public abstract virtual string get_SourceScreenName();
    public abstract virtual long get_TargetId();
    public abstract virtual string get_TargetIdStr();
    public abstract virtual string get_TargetScreenName();
    public abstract virtual bool get_Following();
    public abstract virtual bool get_FollowedBy();
    public abstract virtual bool get_FollowingReceived();
    public abstract virtual bool get_FollowingRequested();
    public abstract virtual bool get_NotificationsEnabled();
    public abstract virtual bool get_CanSendDirectMessage();
    public abstract virtual bool get_Blocking();
    public abstract virtual bool get_BlockedBy();
    public abstract virtual bool get_Muting();
    public abstract virtual bool get_WantRetweets();
    public abstract virtual bool get_AllReplies();
    public abstract virtual bool get_MarkedSpam();
}
public interface Tweetinvi.Models.DTO.IRelationshipStateDTO {
    public long TargetUserId { get; public set; }
    public string TargetUserIdStr { get; public set; }
    public string TargetUserName { get; public set; }
    public string TargetUserScreenName { get; public set; }
    public List`1<string> Connections { get; public set; }
    public bool Following { get; public set; }
    public bool FollowedBy { get; public set; }
    public bool FollowingRequested { get; public set; }
    public bool FollowingRequestReceived { get; public set; }
    public abstract virtual long get_TargetUserId();
    public abstract virtual void set_TargetUserId(long value);
    public abstract virtual string get_TargetUserIdStr();
    public abstract virtual void set_TargetUserIdStr(string value);
    public abstract virtual string get_TargetUserName();
    public abstract virtual void set_TargetUserName(string value);
    public abstract virtual string get_TargetUserScreenName();
    public abstract virtual void set_TargetUserScreenName(string value);
    public abstract virtual List`1<string> get_Connections();
    public abstract virtual void set_Connections(List`1<string> value);
    public abstract virtual bool get_Following();
    public abstract virtual void set_Following(bool value);
    public abstract virtual bool get_FollowedBy();
    public abstract virtual void set_FollowedBy(bool value);
    public abstract virtual bool get_FollowingRequested();
    public abstract virtual void set_FollowingRequested(bool value);
    public abstract virtual bool get_FollowingRequestReceived();
    public abstract virtual void set_FollowingRequestReceived(bool value);
}
public interface Tweetinvi.Models.DTO.ISavedSearchDTO {
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public string Name { get; public set; }
    public string Query { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public abstract virtual long get_Id();
    public abstract virtual void set_Id(long value);
    public abstract virtual string get_IdStr();
    public abstract virtual void set_IdStr(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
}
public interface Tweetinvi.Models.DTO.ISearchMetadata {
    public double CompletedIn { get; }
    public long MaxId { get; }
    public string MaxIdStr { get; }
    public string NextResults { get; }
    public string Query { get; }
    public string RefreshURL { get; }
    public int Count { get; }
    public long SinceId { get; }
    public string SinceIdStr { get; }
    public abstract virtual double get_CompletedIn();
    public abstract virtual long get_MaxId();
    public abstract virtual string get_MaxIdStr();
    public abstract virtual string get_NextResults();
    public abstract virtual string get_Query();
    public abstract virtual string get_RefreshURL();
    public abstract virtual int get_Count();
    public abstract virtual long get_SinceId();
    public abstract virtual string get_SinceIdStr();
}
public interface Tweetinvi.Models.DTO.ISearchResultsDTO {
    public TweetWithSearchMetadataDTO[] TweetDTOs { get; public set; }
    public ISearchMetadata SearchMetadata { get; public set; }
    public abstract virtual TweetWithSearchMetadataDTO[] get_TweetDTOs();
    public abstract virtual void set_TweetDTOs(TweetWithSearchMetadataDTO[] value);
    public abstract virtual ISearchMetadata get_SearchMetadata();
    public abstract virtual void set_SearchMetadata(ISearchMetadata value);
}
public interface Tweetinvi.Models.DTO.ITweetDTO {
    public string Text { get; public set; }
    public string FullText { get; public set; }
    public Int32[] DisplayTextRange { get; public set; }
    public IExtendedTweet ExtendedTweet { get; public set; }
    public bool Favorited { get; public set; }
    public Nullable`1<int> FavoriteCount { get; public set; }
    public IUserDTO CreatedBy { get; public set; }
    public ITweetIdentifier CurrentUserRetweetIdentifier { get; public set; }
    public ICoordinates Coordinates { get; public set; }
    public ITweetEntities Entities { get; public set; }
    public ITweetEntities LegacyEntities { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public bool Truncated { get; public set; }
    public Nullable`1<int> ReplyCount { get; public set; }
    public Nullable`1<long> InReplyToStatusId { get; public set; }
    public string InReplyToStatusIdStr { get; public set; }
    public Nullable`1<long> InReplyToUserId { get; public set; }
    public string InReplyToUserIdStr { get; public set; }
    public string InReplyToScreenName { get; public set; }
    public int RetweetCount { get; public set; }
    public bool Retweeted { get; public set; }
    public ITweetDTO RetweetedTweetDTO { get; public set; }
    public Nullable`1<int> QuoteCount { get; public set; }
    public Nullable`1<long> QuotedStatusId { get; public set; }
    public string QuotedStatusIdStr { get; public set; }
    public ITweetDTO QuotedTweetDTO { get; public set; }
    public Nullable`1<Language> Language { get; public set; }
    public bool PossiblySensitive { get; public set; }
    public Int32[] ContributorsIds { get; public set; }
    public IEnumerable`1<long> Contributors { get; public set; }
    public string Source { get; public set; }
    public Dictionary`2<string, object> Scopes { get; public set; }
    public string FilterLevel { get; public set; }
    public bool WithheldCopyright { get; public set; }
    public IEnumerable`1<string> WithheldInCountries { get; public set; }
    public string WithheldScope { get; public set; }
    public IPlace Place { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual string get_FullText();
    public abstract virtual void set_FullText(string value);
    public abstract virtual Int32[] get_DisplayTextRange();
    public abstract virtual void set_DisplayTextRange(Int32[] value);
    public abstract virtual IExtendedTweet get_ExtendedTweet();
    public abstract virtual void set_ExtendedTweet(IExtendedTweet value);
    public abstract virtual bool get_Favorited();
    public abstract virtual void set_Favorited(bool value);
    public abstract virtual Nullable`1<int> get_FavoriteCount();
    public abstract virtual void set_FavoriteCount(Nullable`1<int> value);
    public abstract virtual IUserDTO get_CreatedBy();
    public abstract virtual void set_CreatedBy(IUserDTO value);
    public abstract virtual ITweetIdentifier get_CurrentUserRetweetIdentifier();
    public abstract virtual void set_CurrentUserRetweetIdentifier(ITweetIdentifier value);
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
    public abstract virtual ITweetEntities get_Entities();
    public abstract virtual void set_Entities(ITweetEntities value);
    public abstract virtual ITweetEntities get_LegacyEntities();
    public abstract virtual void set_LegacyEntities(ITweetEntities value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual bool get_Truncated();
    public abstract virtual void set_Truncated(bool value);
    public abstract virtual Nullable`1<int> get_ReplyCount();
    public abstract virtual void set_ReplyCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<long> get_InReplyToStatusId();
    public abstract virtual void set_InReplyToStatusId(Nullable`1<long> value);
    public abstract virtual string get_InReplyToStatusIdStr();
    public abstract virtual void set_InReplyToStatusIdStr(string value);
    public abstract virtual Nullable`1<long> get_InReplyToUserId();
    public abstract virtual void set_InReplyToUserId(Nullable`1<long> value);
    public abstract virtual string get_InReplyToUserIdStr();
    public abstract virtual void set_InReplyToUserIdStr(string value);
    public abstract virtual string get_InReplyToScreenName();
    public abstract virtual void set_InReplyToScreenName(string value);
    public abstract virtual int get_RetweetCount();
    public abstract virtual void set_RetweetCount(int value);
    public abstract virtual bool get_Retweeted();
    public abstract virtual void set_Retweeted(bool value);
    public abstract virtual ITweetDTO get_RetweetedTweetDTO();
    public abstract virtual void set_RetweetedTweetDTO(ITweetDTO value);
    public abstract virtual Nullable`1<int> get_QuoteCount();
    public abstract virtual void set_QuoteCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<long> get_QuotedStatusId();
    public abstract virtual void set_QuotedStatusId(Nullable`1<long> value);
    public abstract virtual string get_QuotedStatusIdStr();
    public abstract virtual void set_QuotedStatusIdStr(string value);
    public abstract virtual ITweetDTO get_QuotedTweetDTO();
    public abstract virtual void set_QuotedTweetDTO(ITweetDTO value);
    public abstract virtual Nullable`1<Language> get_Language();
    public abstract virtual void set_Language(Nullable`1<Language> value);
    public abstract virtual bool get_PossiblySensitive();
    public abstract virtual void set_PossiblySensitive(bool value);
    public abstract virtual Int32[] get_ContributorsIds();
    public abstract virtual void set_ContributorsIds(Int32[] value);
    public abstract virtual IEnumerable`1<long> get_Contributors();
    public abstract virtual void set_Contributors(IEnumerable`1<long> value);
    public abstract virtual string get_Source();
    public abstract virtual void set_Source(string value);
    public abstract virtual Dictionary`2<string, object> get_Scopes();
    public abstract virtual void set_Scopes(Dictionary`2<string, object> value);
    public abstract virtual string get_FilterLevel();
    public abstract virtual void set_FilterLevel(string value);
    public abstract virtual bool get_WithheldCopyright();
    public abstract virtual void set_WithheldCopyright(bool value);
    public abstract virtual IEnumerable`1<string> get_WithheldInCountries();
    public abstract virtual void set_WithheldInCountries(IEnumerable`1<string> value);
    public abstract virtual string get_WithheldScope();
    public abstract virtual void set_WithheldScope(string value);
    public abstract virtual IPlace get_Place();
    public abstract virtual void set_Place(IPlace value);
}
public interface Tweetinvi.Models.DTO.ITweetFromSearchMetadata {
    public string ResultType { get; }
    public string IsoLanguageCode { get; }
    public abstract virtual string get_ResultType();
    public abstract virtual string get_IsoLanguageCode();
}
public interface Tweetinvi.Models.DTO.ITweetWithSearchMetadataDTO {
    public ITweetFromSearchMetadata TweetFromSearchMetadata { get; }
    public abstract virtual ITweetFromSearchMetadata get_TweetFromSearchMetadata();
}
public interface Tweetinvi.Models.DTO.ITwitterConfiguration {
    public int CharactersReservedPerMedia { get; }
    public int MessageTextCharacterLimit { get; }
    public int MaxMediaPerUpload { get; }
    public String[] NonUsernamePaths { get; }
    public int PhotoSizeLimit { get; }
    public Dictionary`2<string, IMediaEntitySize> PhotoSizes { get; }
    public int ShortURLLength { get; }
    public int ShortURLLengthHttps { get; }
    public abstract virtual int get_CharactersReservedPerMedia();
    public abstract virtual int get_MessageTextCharacterLimit();
    public abstract virtual int get_MaxMediaPerUpload();
    public abstract virtual String[] get_NonUsernamePaths();
    public abstract virtual int get_PhotoSizeLimit();
    public abstract virtual Dictionary`2<string, IMediaEntitySize> get_PhotoSizes();
    public abstract virtual int get_ShortURLLength();
    public abstract virtual int get_ShortURLLengthHttps();
}
public interface Tweetinvi.Models.DTO.ITwitterListDTO {
    public string IdStr { get; public set; }
    public string Name { get; public set; }
    public string FullName { get; public set; }
    public IUserDTO Owner { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public string Uri { get; public set; }
    public string Description { get; public set; }
    public bool Following { get; public set; }
    public PrivacyMode PrivacyMode { get; public set; }
    public int MemberCount { get; public set; }
    public int SubscriberCount { get; public set; }
    public abstract virtual string get_IdStr();
    public abstract virtual void set_IdStr(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_FullName();
    public abstract virtual void set_FullName(string value);
    public abstract virtual IUserDTO get_Owner();
    public abstract virtual void set_Owner(IUserDTO value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual string get_Uri();
    public abstract virtual void set_Uri(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual bool get_Following();
    public abstract virtual void set_Following(bool value);
    public abstract virtual PrivacyMode get_PrivacyMode();
    public abstract virtual void set_PrivacyMode(PrivacyMode value);
    public abstract virtual int get_MemberCount();
    public abstract virtual void set_MemberCount(int value);
    public abstract virtual int get_SubscriberCount();
    public abstract virtual void set_SubscriberCount(int value);
}
public interface Tweetinvi.Models.DTO.IUploadedImageDetails {
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public string ImageType { get; public set; }
    public abstract virtual Nullable`1<int> get_Width();
    public abstract virtual void set_Width(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Height();
    public abstract virtual void set_Height(Nullable`1<int> value);
    public abstract virtual string get_ImageType();
    public abstract virtual void set_ImageType(string value);
}
public interface Tweetinvi.Models.DTO.IUploadedMediaInfo {
    public DateTimeOffset CreatedDate { get; }
    public long MediaId { get; public set; }
    public string MediaIdStr { get; public set; }
    public int MediaSize { get; public set; }
    public IUploadedImageDetails ImageDetails { get; public set; }
    public IUploadedVideoDetails VideoDetails { get; public set; }
    public IUploadProcessingInfo ProcessingInfo { get; public set; }
    public abstract virtual DateTimeOffset get_CreatedDate();
    public abstract virtual long get_MediaId();
    public abstract virtual void set_MediaId(long value);
    public abstract virtual string get_MediaIdStr();
    public abstract virtual void set_MediaIdStr(string value);
    public abstract virtual int get_MediaSize();
    public abstract virtual void set_MediaSize(int value);
    public abstract virtual IUploadedImageDetails get_ImageDetails();
    public abstract virtual void set_ImageDetails(IUploadedImageDetails value);
    public abstract virtual IUploadedVideoDetails get_VideoDetails();
    public abstract virtual void set_VideoDetails(IUploadedVideoDetails value);
    public abstract virtual IUploadProcessingInfo get_ProcessingInfo();
    public abstract virtual void set_ProcessingInfo(IUploadProcessingInfo value);
}
public interface Tweetinvi.Models.DTO.IUploadedVideoDetails {
    public string VideoType { get; }
    public abstract virtual string get_VideoType();
}
public interface Tweetinvi.Models.DTO.IUploadProcessingError {
    public int Code { get; public set; }
    public string Name { get; public set; }
    public string Message { get; public set; }
    public abstract virtual int get_Code();
    public abstract virtual void set_Code(int value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Message();
    public abstract virtual void set_Message(string value);
}
public interface Tweetinvi.Models.DTO.IUploadProcessingInfo {
    public string State { get; public set; }
    public ProcessingState ProcessingState { get; public set; }
    public int CheckAfterInSeconds { get; public set; }
    public int CheckAfterInMilliseconds { get; }
    public int ProgressPercentage { get; public set; }
    public IUploadProcessingError Error { get; public set; }
    public abstract virtual string get_State();
    public abstract virtual void set_State(string value);
    public abstract virtual ProcessingState get_ProcessingState();
    public abstract virtual void set_ProcessingState(ProcessingState value);
    public abstract virtual int get_CheckAfterInSeconds();
    public abstract virtual void set_CheckAfterInSeconds(int value);
    public abstract virtual int get_CheckAfterInMilliseconds();
    public abstract virtual int get_ProgressPercentage();
    public abstract virtual void set_ProgressPercentage(int value);
    public abstract virtual IUploadProcessingError get_Error();
    public abstract virtual void set_Error(IUploadProcessingError value);
}
public interface Tweetinvi.Models.DTO.IUserDTO {
    public string Name { get; public set; }
    public ITweetDTO Status { get; public set; }
    public string Description { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public string Location { get; public set; }
    public Nullable`1<bool> GeoEnabled { get; public set; }
    public string Url { get; public set; }
    public string Email { get; public set; }
    public int StatusesCount { get; public set; }
    public int FollowersCount { get; public set; }
    public int FriendsCount { get; public set; }
    public Nullable`1<bool> Following { get; public set; }
    public bool Protected { get; public set; }
    public bool Verified { get; public set; }
    public IUserEntities Entities { get; public set; }
    public Nullable`1<bool> Notifications { get; public set; }
    public string ProfileImageUrlHttp { get; public set; }
    public string ProfileImageUrl { get; public set; }
    public Nullable`1<bool> FollowRequestSent { get; public set; }
    public bool DefaultProfile { get; public set; }
    public bool DefaultProfileImage { get; public set; }
    public Nullable`1<int> FavoritesCount { get; public set; }
    public Nullable`1<int> ListedCount { get; public set; }
    public string ProfileSidebarFillColor { get; public set; }
    public string ProfileSidebarBorderColor { get; public set; }
    public bool ProfileBackgroundTile { get; public set; }
    public string ProfileBackgroundColor { get; public set; }
    public string ProfileBackgroundImageUrl { get; public set; }
    public string ProfileBackgroundImageUrlHttps { get; public set; }
    public string ProfileBannerURL { get; public set; }
    public string ProfileTextColor { get; public set; }
    public string ProfileLinkColor { get; public set; }
    public bool ProfileUseBackgroundImage { get; public set; }
    public Nullable`1<bool> IsTranslator { get; public set; }
    public Nullable`1<int> UtcOffset { get; public set; }
    public Nullable`1<bool> ContributorsEnabled { get; public set; }
    public string TimeZone { get; public set; }
    public IEnumerable`1<string> WithheldInCountries { get; public set; }
    public string WithheldScope { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual ITweetDTO get_Status();
    public abstract virtual void set_Status(ITweetDTO value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual string get_Location();
    public abstract virtual void set_Location(string value);
    public abstract virtual Nullable`1<bool> get_GeoEnabled();
    public abstract virtual void set_GeoEnabled(Nullable`1<bool> value);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual string get_Email();
    public abstract virtual void set_Email(string value);
    public abstract virtual int get_StatusesCount();
    public abstract virtual void set_StatusesCount(int value);
    public abstract virtual int get_FollowersCount();
    public abstract virtual void set_FollowersCount(int value);
    public abstract virtual int get_FriendsCount();
    public abstract virtual void set_FriendsCount(int value);
    public abstract virtual Nullable`1<bool> get_Following();
    public abstract virtual void set_Following(Nullable`1<bool> value);
    public abstract virtual bool get_Protected();
    public abstract virtual void set_Protected(bool value);
    public abstract virtual bool get_Verified();
    public abstract virtual void set_Verified(bool value);
    public abstract virtual IUserEntities get_Entities();
    public abstract virtual void set_Entities(IUserEntities value);
    public abstract virtual Nullable`1<bool> get_Notifications();
    public abstract virtual void set_Notifications(Nullable`1<bool> value);
    public abstract virtual string get_ProfileImageUrlHttp();
    public abstract virtual void set_ProfileImageUrlHttp(string value);
    public abstract virtual string get_ProfileImageUrl();
    public abstract virtual void set_ProfileImageUrl(string value);
    public abstract virtual Nullable`1<bool> get_FollowRequestSent();
    public abstract virtual void set_FollowRequestSent(Nullable`1<bool> value);
    public abstract virtual bool get_DefaultProfile();
    public abstract virtual void set_DefaultProfile(bool value);
    public abstract virtual bool get_DefaultProfileImage();
    public abstract virtual void set_DefaultProfileImage(bool value);
    public abstract virtual Nullable`1<int> get_FavoritesCount();
    public abstract virtual void set_FavoritesCount(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_ListedCount();
    public abstract virtual void set_ListedCount(Nullable`1<int> value);
    public abstract virtual string get_ProfileSidebarFillColor();
    public abstract virtual void set_ProfileSidebarFillColor(string value);
    public abstract virtual string get_ProfileSidebarBorderColor();
    public abstract virtual void set_ProfileSidebarBorderColor(string value);
    public abstract virtual bool get_ProfileBackgroundTile();
    public abstract virtual void set_ProfileBackgroundTile(bool value);
    public abstract virtual string get_ProfileBackgroundColor();
    public abstract virtual void set_ProfileBackgroundColor(string value);
    public abstract virtual string get_ProfileBackgroundImageUrl();
    public abstract virtual void set_ProfileBackgroundImageUrl(string value);
    public abstract virtual string get_ProfileBackgroundImageUrlHttps();
    public abstract virtual void set_ProfileBackgroundImageUrlHttps(string value);
    public abstract virtual string get_ProfileBannerURL();
    public abstract virtual void set_ProfileBannerURL(string value);
    public abstract virtual string get_ProfileTextColor();
    public abstract virtual void set_ProfileTextColor(string value);
    public abstract virtual string get_ProfileLinkColor();
    public abstract virtual void set_ProfileLinkColor(string value);
    public abstract virtual bool get_ProfileUseBackgroundImage();
    public abstract virtual void set_ProfileUseBackgroundImage(bool value);
    public abstract virtual Nullable`1<bool> get_IsTranslator();
    public abstract virtual void set_IsTranslator(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_UtcOffset();
    public abstract virtual void set_UtcOffset(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_ContributorsEnabled();
    public abstract virtual void set_ContributorsEnabled(Nullable`1<bool> value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
    public abstract virtual IEnumerable`1<string> get_WithheldInCountries();
    public abstract virtual void set_WithheldInCountries(IEnumerable`1<string> value);
    public abstract virtual string get_WithheldScope();
    public abstract virtual void set_WithheldScope(string value);
}
public interface Tweetinvi.Models.DTO.QueryDTO.IBaseCursorQueryDTO {
    public long PreviousCursor { get; public set; }
    public long NextCursor { get; public set; }
    public string PreviousCursorStr { get; public set; }
    public string NextCursorStr { get; public set; }
    public string RawResult { get; public set; }
    public abstract virtual long get_PreviousCursor();
    public abstract virtual void set_PreviousCursor(long value);
    public abstract virtual long get_NextCursor();
    public abstract virtual void set_NextCursor(long value);
    public abstract virtual string get_PreviousCursorStr();
    public abstract virtual void set_PreviousCursorStr(string value);
    public abstract virtual string get_NextCursorStr();
    public abstract virtual void set_NextCursorStr(string value);
    public abstract virtual string get_RawResult();
    public abstract virtual void set_RawResult(string value);
    public abstract virtual int GetNumberOfObjectRetrieved();
}
public interface Tweetinvi.Models.DTO.QueryDTO.IBaseCursorQueryDTO`1 {
    public IEnumerable`1<T> Results { get; public set; }
    public abstract virtual IEnumerable`1<T> get_Results();
    public abstract virtual void set_Results(IEnumerable`1<T> value);
}
public interface Tweetinvi.Models.DTO.QueryDTO.IIdsCursorQueryResultDTO {
    public Int64[] Ids { get; public set; }
    public abstract virtual Int64[] get_Ids();
    public abstract virtual void set_Ids(Int64[] value);
}
public interface Tweetinvi.Models.DTO.QueryDTO.IMessageCursorQueryResultDTO {
    public IMessageEventDTO[] MessageEvents { get; public set; }
    public Dictionary`2<long, IApp> Apps { get; public set; }
    public abstract virtual IMessageEventDTO[] get_MessageEvents();
    public abstract virtual void set_MessageEvents(IMessageEventDTO[] value);
    public abstract virtual Dictionary`2<long, IApp> get_Apps();
    public abstract virtual void set_Apps(Dictionary`2<long, IApp> value);
}
public interface Tweetinvi.Models.DTO.QueryDTO.ITwitterListCursorQueryResultDTO {
    public ITwitterListDTO[] TwitterLists { get; public set; }
    public abstract virtual ITwitterListDTO[] get_TwitterLists();
    public abstract virtual void set_TwitterLists(ITwitterListDTO[] value);
}
public interface Tweetinvi.Models.DTO.QueryDTO.IUserCursorQueryResultDTO {
    public IUserDTO[] Users { get; public set; }
    public abstract virtual IUserDTO[] get_Users();
    public abstract virtual void set_Users(IUserDTO[] value);
}
public class Tweetinvi.Models.DTO.SearchGeoSearchResultDTO : object {
    [CompilerGeneratedAttribute]
private GeoSearchResultDTO <Result>k__BackingField;
    [JsonPropertyAttribute("result")]
public GeoSearchResultDTO Result { get; public set; }
    [CompilerGeneratedAttribute]
public GeoSearchResultDTO get_Result();
    [CompilerGeneratedAttribute]
public void set_Result(GeoSearchResultDTO value);
}
public interface Tweetinvi.Models.DTO.Webhooks.IGetAccountActivityWebhookEnvironmentsResultDTO {
    public IWebhookEnvironmentDTO[] Environments { get; public set; }
    public abstract virtual IWebhookEnvironmentDTO[] get_Environments();
    public abstract virtual void set_Environments(IWebhookEnvironmentDTO[] value);
}
public interface Tweetinvi.Models.DTO.Webhooks.IWebhookDTO {
    public string Id { get; public set; }
    public string Url { get; public set; }
    public bool Valid { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public Uri Uri { get; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual bool get_Valid();
    public abstract virtual void set_Valid(bool value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual Uri get_Uri();
}
public interface Tweetinvi.Models.DTO.Webhooks.IWebhookEnvironmentDTO {
    public string Name { get; public set; }
    public IWebhookDTO[] Webhooks { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual IWebhookDTO[] get_Webhooks();
    public abstract virtual void set_Webhooks(IWebhookDTO[] value);
}
public interface Tweetinvi.Models.DTO.Webhooks.IWebhookEnvironmentSubscriptionsDTO {
    public string Environment { get; public set; }
    public string ApplicationId { get; public set; }
    public IWebhookSubscriptionDTO[] Subscriptions { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual string get_ApplicationId();
    public abstract virtual void set_ApplicationId(string value);
    public abstract virtual IWebhookSubscriptionDTO[] get_Subscriptions();
    public abstract virtual void set_Subscriptions(IWebhookSubscriptionDTO[] value);
}
public interface Tweetinvi.Models.DTO.Webhooks.IWebhookSubscriptionDTO {
    public string UserId { get; public set; }
    public abstract virtual string get_UserId();
    public abstract virtual void set_UserId(string value);
}
public interface Tweetinvi.Models.Entities.ExtendedEntities.IVideoEntityVariant {
    public int Bitrate { get; public set; }
    public string ContentType { get; public set; }
    public string URL { get; public set; }
    public abstract virtual int get_Bitrate();
    public abstract virtual void set_Bitrate(int value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
}
public interface Tweetinvi.Models.Entities.ExtendedEntities.IVideoInformationEntity {
    public Int32[] AspectRatio { get; public set; }
    public int DurationInMilliseconds { get; public set; }
    public IVideoEntityVariant[] Variants { get; public set; }
    public abstract virtual Int32[] get_AspectRatio();
    public abstract virtual void set_AspectRatio(Int32[] value);
    public abstract virtual int get_DurationInMilliseconds();
    public abstract virtual void set_DurationInMilliseconds(int value);
    public abstract virtual IVideoEntityVariant[] get_Variants();
    public abstract virtual void set_Variants(IVideoEntityVariant[] value);
}
public interface Tweetinvi.Models.Entities.IDescriptionEntity {
    public IEnumerable`1<IUrlEntity> Urls { get; public set; }
    public abstract virtual IEnumerable`1<IUrlEntity> get_Urls();
    public abstract virtual void set_Urls(IEnumerable`1<IUrlEntity> value);
}
public interface Tweetinvi.Models.Entities.IHashtagEntity {
    public string Text { get; public set; }
    public Int32[] Indices { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual Int32[] get_Indices();
    public abstract virtual void set_Indices(Int32[] value);
}
public interface Tweetinvi.Models.Entities.IMediaEntity {
    public Nullable`1<long> Id { get; public set; }
    public string IdStr { get; public set; }
    public string MediaURL { get; public set; }
    public string MediaURLHttps { get; public set; }
    public string URL { get; public set; }
    public string DisplayURL { get; public set; }
    public string ExpandedURL { get; public set; }
    public string MediaType { get; public set; }
    public Int32[] Indices { get; public set; }
    public Dictionary`2<string, IMediaEntitySize> Sizes { get; public set; }
    public IVideoInformationEntity VideoDetails { get; public set; }
    public abstract virtual Nullable`1<long> get_Id();
    public abstract virtual void set_Id(Nullable`1<long> value);
    public abstract virtual string get_IdStr();
    public abstract virtual void set_IdStr(string value);
    public abstract virtual string get_MediaURL();
    public abstract virtual void set_MediaURL(string value);
    public abstract virtual string get_MediaURLHttps();
    public abstract virtual void set_MediaURLHttps(string value);
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
    public abstract virtual string get_DisplayURL();
    public abstract virtual void set_DisplayURL(string value);
    public abstract virtual string get_ExpandedURL();
    public abstract virtual void set_ExpandedURL(string value);
    public abstract virtual string get_MediaType();
    public abstract virtual void set_MediaType(string value);
    public abstract virtual Int32[] get_Indices();
    public abstract virtual void set_Indices(Int32[] value);
    public abstract virtual Dictionary`2<string, IMediaEntitySize> get_Sizes();
    public abstract virtual void set_Sizes(Dictionary`2<string, IMediaEntitySize> value);
    public abstract virtual IVideoInformationEntity get_VideoDetails();
    public abstract virtual void set_VideoDetails(IVideoInformationEntity value);
}
public interface Tweetinvi.Models.Entities.IMediaEntitySize {
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public string Resize { get; public set; }
    public abstract virtual Nullable`1<int> get_Width();
    public abstract virtual void set_Width(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Height();
    public abstract virtual void set_Height(Nullable`1<int> value);
    public abstract virtual string get_Resize();
    public abstract virtual void set_Resize(string value);
}
public interface Tweetinvi.Models.Entities.IMessageEntities {
    public List`1<IMediaEntity> Medias { get; public set; }
    public abstract virtual List`1<IMediaEntity> get_Medias();
    public abstract virtual void set_Medias(List`1<IMediaEntity> value);
}
public interface Tweetinvi.Models.Entities.IObjectEntities {
    public List`1<IUrlEntity> Urls { get; }
    public List`1<IUserMentionEntity> UserMentions { get; }
    public List`1<IHashtagEntity> Hashtags { get; }
    public List`1<ISymbolEntity> Symbols { get; }
    public List`1<IMediaEntity> Medias { get; }
    public abstract virtual List`1<IUrlEntity> get_Urls();
    public abstract virtual List`1<IUserMentionEntity> get_UserMentions();
    public abstract virtual List`1<IHashtagEntity> get_Hashtags();
    public abstract virtual List`1<ISymbolEntity> get_Symbols();
    public abstract virtual List`1<IMediaEntity> get_Medias();
}
public interface Tweetinvi.Models.Entities.ISymbolEntity {
    public string Text { get; public set; }
    public Int32[] Indices { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual Int32[] get_Indices();
    public abstract virtual void set_Indices(Int32[] value);
}
public interface Tweetinvi.Models.Entities.ITweetEntities {
}
public interface Tweetinvi.Models.Entities.IUrlEntity {
    public string URL { get; public set; }
    public string DisplayedURL { get; public set; }
    public string ExpandedURL { get; public set; }
    public Int32[] Indices { get; public set; }
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
    public abstract virtual string get_DisplayedURL();
    public abstract virtual void set_DisplayedURL(string value);
    public abstract virtual string get_ExpandedURL();
    public abstract virtual void set_ExpandedURL(string value);
    public abstract virtual Int32[] get_Indices();
    public abstract virtual void set_Indices(Int32[] value);
}
public interface Tweetinvi.Models.Entities.IUserEntities {
    public IWebsiteEntity Website { get; public set; }
    public IDescriptionEntity Description { get; public set; }
    public abstract virtual IWebsiteEntity get_Website();
    public abstract virtual void set_Website(IWebsiteEntity value);
    public abstract virtual IDescriptionEntity get_Description();
    public abstract virtual void set_Description(IDescriptionEntity value);
}
public interface Tweetinvi.Models.Entities.IUserMentionEntity {
    public Nullable`1<long> Id { get; public set; }
    public string IdStr { get; public set; }
    public string ScreenName { get; public set; }
    public string Name { get; public set; }
    public IList`1<int> Indices { get; public set; }
    public abstract virtual Nullable`1<long> get_Id();
    public abstract virtual void set_Id(Nullable`1<long> value);
    public abstract virtual string get_IdStr();
    public abstract virtual void set_IdStr(string value);
    public abstract virtual string get_ScreenName();
    public abstract virtual void set_ScreenName(string value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual IList`1<int> get_Indices();
    public abstract virtual void set_Indices(IList`1<int> value);
}
public interface Tweetinvi.Models.Entities.IWebsiteEntity {
    public IEnumerable`1<IUrlEntity> Urls { get; public set; }
    public abstract virtual IEnumerable`1<IUrlEntity> get_Urls();
    public abstract virtual void set_Urls(IEnumerable`1<IUrlEntity> value);
}
public enum Tweetinvi.Models.EventType : Enum {
    public int value__;
    public static EventType UnrecognisedValue;
    [JsonEnumStringAttribute("message_create")]
public static EventType MessageCreate;
}
public class Tweetinvi.Models.GeoCode : object {
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Radius>k__BackingField;
    [CompilerGeneratedAttribute]
private DistanceMeasure <DistanceMeasure>k__BackingField;
    public ICoordinates Coordinates { get; public set; }
    public double Radius { get; public set; }
    public DistanceMeasure DistanceMeasure { get; public set; }
    public GeoCode(ICoordinates coordinates, double radius, DistanceMeasure distanceMeasure);
    public GeoCode(double latitude, double longitude, double radius, DistanceMeasure distanceMeasure);
    public GeoCode(IGeoCode source);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual double get_Radius();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Radius(double value);
    [CompilerGeneratedAttribute]
public sealed virtual DistanceMeasure get_DistanceMeasure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DistanceMeasure(DistanceMeasure value);
}
public enum Tweetinvi.Models.HttpMethod : Enum {
    public int value__;
    public static HttpMethod GET;
    public static HttpMethod POST;
    public static HttpMethod PUT;
    public static HttpMethod DELETE;
}
public interface Tweetinvi.Models.IAccountActivityRequestHandler {
    public abstract virtual Task`1<bool> IsRequestManagedByTweetinviAsync(IWebhooksRequest request);
    public abstract virtual Task`1<bool> TryRouteRequestAsync(IWebhooksRequest request);
    public abstract virtual IAccountActivityStream GetAccountActivityStream(long userId, string environment);
}
public interface Tweetinvi.Models.IAccountSettings {
    public IAccountSettingsDTO AccountSettingsDTO { get; public set; }
    public string ScreenName { get; }
    public PrivacyMode PrivacyMode { get; }
    public Language Language { get; }
    public bool AlwaysUseHttps { get; }
    public bool DiscoverableByEmail { get; }
    public bool DiscoverableByMobilePhone { get; }
    public bool GeoEnabled { get; }
    public bool UseCookiePersonalization { get; }
    public AllowDirectMessagesFrom AllowDirectMessagesFrom { get; }
    public AllowDirectMessagesFrom AllowGroupDirectMessagesFrom { get; }
    public AllowContributorRequestMode AllowContributorRequest { get; }
    public bool DisplaySensitiveMedia { get; }
    public bool SmartMute { get; }
    public ITimeZone TimeZone { get; }
    public bool SleepTimeEnabled { get; }
    public int StartSleepHour { get; }
    public int EndSleepHour { get; }
    public string TranslatorType { get; }
    public ITrendLocation[] TrendLocations { get; }
    public abstract virtual IAccountSettingsDTO get_AccountSettingsDTO();
    public abstract virtual void set_AccountSettingsDTO(IAccountSettingsDTO value);
    public abstract virtual string get_ScreenName();
    public abstract virtual PrivacyMode get_PrivacyMode();
    public abstract virtual Language get_Language();
    public abstract virtual bool get_AlwaysUseHttps();
    public abstract virtual bool get_DiscoverableByEmail();
    public abstract virtual bool get_DiscoverableByMobilePhone();
    public abstract virtual bool get_GeoEnabled();
    public abstract virtual bool get_UseCookiePersonalization();
    public abstract virtual AllowDirectMessagesFrom get_AllowDirectMessagesFrom();
    public abstract virtual AllowDirectMessagesFrom get_AllowGroupDirectMessagesFrom();
    public abstract virtual AllowContributorRequestMode get_AllowContributorRequest();
    public abstract virtual bool get_DisplaySensitiveMedia();
    public abstract virtual bool get_SmartMute();
    public abstract virtual ITimeZone get_TimeZone();
    public abstract virtual bool get_SleepTimeEnabled();
    public abstract virtual int get_StartSleepHour();
    public abstract virtual int get_EndSleepHour();
    public abstract virtual string get_TranslatorType();
    public abstract virtual ITrendLocation[] get_TrendLocations();
}
public interface Tweetinvi.Models.IApp {
    public long Id { get; }
    public string Name { get; }
    public string Url { get; }
    public abstract virtual long get_Id();
    public abstract virtual string get_Name();
    public abstract virtual string get_Url();
}
public interface Tweetinvi.Models.IAuthenticatedUser {
    public string Email { get; }
    public IReadOnlyTwitterCredentials Credentials { get; }
    public abstract virtual string get_Email();
    public abstract virtual IReadOnlyTwitterCredentials get_Credentials();
    public abstract virtual Task`1<ITweet> PublishTweetAsync(string text);
    public abstract virtual Task`1<ITweet> PublishTweetAsync(IPublishTweetParameters parameters);
    public abstract virtual Task`1<IMessage[]> GetLatestMessagesAsync();
    public abstract virtual Task`1<IMessage> PublishMessageAsync(IPublishMessageParameters publishMessageParameters);
    public abstract virtual Task`1<ITweet[]> GetHomeTimelineAsync();
    public abstract virtual Task`1<ITweet[]> GetMentionsTimelineAsync();
    public abstract virtual Task UpdateRelationshipAsync(IUpdateRelationshipParameters parameters);
    public abstract virtual Task`1<Int64[]> GetUserIdsRequestingFriendshipAsync();
    public abstract virtual Task`1<IUser[]> GetUsersRequestingFriendshipAsync();
    public abstract virtual Task`1<Int64[]> GetUserIdsYouRequestedToFollowAsync();
    public abstract virtual Task`1<IUser[]> GetUsersYouRequestedToFollowAsync();
    public abstract virtual Task FollowUserAsync(IUserIdentifier user);
    public abstract virtual Task FollowUserAsync(long userId);
    public abstract virtual Task FollowUserAsync(string screenName);
    public abstract virtual Task UnfollowUserAsync(IUserIdentifier user);
    public abstract virtual Task UnfollowUserAsync(long userId);
    public abstract virtual Task UnfollowUserAsync(string username);
    public abstract virtual Task`1<ISavedSearch[]> ListSavedSearchesAsync();
    public abstract virtual Task BlockUserAsync(IUserIdentifier user);
    public abstract virtual Task BlockUserAsync(long userId);
    public abstract virtual Task BlockUserAsync(string username);
    public abstract virtual Task UnblockUserAsync(IUserIdentifier user);
    public abstract virtual Task UnblockUserAsync(long userId);
    public abstract virtual Task UnblockUserAsync(string username);
    public abstract virtual Task`1<Int64[]> GetBlockedUserIdsAsync();
    public abstract virtual Task`1<IUser[]> GetBlockedUsersAsync();
    public abstract virtual Task ReportUserForSpamAsync(IUserIdentifier user);
    public abstract virtual Task ReportUserForSpamAsync(long userId);
    public abstract virtual Task ReportUserForSpamAsync(string userName);
    public abstract virtual Task`1<Int64[]> GetMutedUserIdsAsync();
    public abstract virtual Task`1<IUser[]> GetMutedUsersAsync();
    public abstract virtual Task MuteUserAsync(IUserIdentifier user);
    public abstract virtual Task MuteUserAsync(long userId);
    public abstract virtual Task MuteUserAsync(string username);
    public abstract virtual Task UnmuteUserAsync(IUserIdentifier user);
    public abstract virtual Task UnmuteUserAsync(long userId);
    public abstract virtual Task UnmuteUserAsync(string username);
    public abstract virtual Task`1<ITwitterList> SubscribeToListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<ITwitterList> SubscribeToListAsync(long listId);
    public abstract virtual Task`1<ITwitterList> UnsubscribeFromListAsync(ITwitterListIdentifier list);
    public abstract virtual Task`1<ITwitterList> UnsubscribeFromListAsync(long listId);
    public abstract virtual Task`1<IAccountSettings> UpdateAccountSettingsAsync(IUpdateAccountSettingsParameters parameters);
}
public interface Tweetinvi.Models.IAuthenticationRequest {
    public string AuthorizationKey { get; public set; }
    public string AuthorizationSecret { get; public set; }
    public string VerifierCode { get; public set; }
    public string AuthorizationURL { get; public set; }
    public abstract virtual string get_AuthorizationKey();
    public abstract virtual void set_AuthorizationKey(string value);
    public abstract virtual string get_AuthorizationSecret();
    public abstract virtual void set_AuthorizationSecret(string value);
    public abstract virtual string get_VerifierCode();
    public abstract virtual void set_VerifierCode(string value);
    public abstract virtual string get_AuthorizationURL();
    public abstract virtual void set_AuthorizationURL(string value);
}
public interface Tweetinvi.Models.ICategorySuggestion {
    public string Name { get; }
    public string Slug { get; }
    public int Size { get; }
    public abstract virtual string get_Name();
    public abstract virtual string get_Slug();
    public abstract virtual int get_Size();
}
public interface Tweetinvi.Models.IConsumerOnlyCredentials {
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string BearerToken { get; public set; }
    public abstract virtual string get_ConsumerKey();
    public abstract virtual void set_ConsumerKey(string value);
    public abstract virtual string get_ConsumerSecret();
    public abstract virtual void set_ConsumerSecret(string value);
    public abstract virtual string get_BearerToken();
    public abstract virtual void set_BearerToken(string value);
}
public interface Tweetinvi.Models.ICoordinates {
    public double Longitude { get; public set; }
    public double Latitude { get; public set; }
    public abstract virtual double get_Longitude();
    public abstract virtual void set_Longitude(double value);
    public abstract virtual double get_Latitude();
    public abstract virtual void set_Latitude(double value);
}
public interface Tweetinvi.Models.ICredentialsRateLimits {
    public DateTimeOffset CreatedAt { get; }
    public string RateLimitContext { get; }
    public bool IsApplicationOnlyCredentials { get; }
    public CredentialsRateLimitsDTO CredentialsRateLimitsDTO { get; }
    public Dictionary`2<TwitterEndpointAttribute, IEndpointRateLimit> OtherEndpointRateLimits { get; }
    public IEndpointRateLimit AccountLoginVerificationEnrollmentLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/account/settings.json", "False")]
public IEndpointRateLimit AccountSettingsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/account/update_profile.json", "False")]
public IEndpointRateLimit AccountUpdateProfileLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/account/verify_credentials.json", "False")]
public IEndpointRateLimit AccountVerifyCredentialsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/application/rate_limit_status.json", "False")]
public IEndpointRateLimit ApplicationRateLimitStatusLimit { get; }
    public IEndpointRateLimit AuthCrossSiteRequestForgeryLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/blocks/ids.json", "False")]
public IEndpointRateLimit BlocksIdsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/blocks/list.json", "False")]
public IEndpointRateLimit BlocksListLimit { get; }
    public IEndpointRateLimit BusinessExperienceKeywordLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/collections/list.json", "False")]
public IEndpointRateLimit CollectionsListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/collections/entries.json", "False")]
public IEndpointRateLimit CollectionsEntriesLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/collections/show.json", "False")]
public IEndpointRateLimit CollectionsShowLimit { get; }
    public IEndpointRateLimit ContactsUpdatedByLimit { get; }
    public IEndpointRateLimit ContactsUsersLimit { get; }
    public IEndpointRateLimit ContactsAddressBookLimit { get; }
    public IEndpointRateLimit ContactsUsersAndUploadedByLimit { get; }
    public IEndpointRateLimit ContactsDeleteStatusLimit { get; }
    public IEndpointRateLimit DeviceTokenLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/direct_messages/events/show.json", "False")]
public IEndpointRateLimit DirectMessagesShowLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/direct_messages/events/list.json", "False")]
public IEndpointRateLimit DirectMessagesListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/favorites/list.json", "False")]
public IEndpointRateLimit FavoritesListLimit { get; }
    public IEndpointRateLimit FeedbackShowLimit { get; }
    public IEndpointRateLimit FeedbackEventsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/followers/ids.json", "False")]
public IEndpointRateLimit FollowersIdsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/followers/list.json", "False")]
public IEndpointRateLimit FollowersListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friends/ids.json", "False")]
public IEndpointRateLimit FriendsIdsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friends/list.json", "False")]
public IEndpointRateLimit FriendsListLimit { get; }
    public IEndpointRateLimit FriendsFollowingIdsLimit { get; }
    public IEndpointRateLimit FriendsFollowingListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friendships/incoming.json", "False")]
public IEndpointRateLimit FriendshipsIncomingLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friendships/lookup.json", "False")]
public IEndpointRateLimit FriendshipsLookupLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friendships/no_retweets/ids.json", "False")]
public IEndpointRateLimit FriendshipsNoRetweetsIdsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friendships/outgoing.json", "False")]
public IEndpointRateLimit FriendshipsOutgoingLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/friendships/show.json", "False")]
public IEndpointRateLimit FriendshipsShowLimit { get; }
    public IEndpointRateLimit FriendshipsListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/geo/id/[a-zA-Z0-9]+\.json", "True")]
public IEndpointRateLimit GeoGetPlaceFromIdLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/geo/reverse_geocode.json", "False")]
public IEndpointRateLimit GeoReverseGeoCodeLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/geo/search.json", "False")]
public IEndpointRateLimit GeoSearchLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/geo/similar_places.json", "False")]
public IEndpointRateLimit GeoSimilarPlacesLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/help/configuration.json", "False")]
public IEndpointRateLimit HelpConfigurationLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/help/languages.json", "False")]
public IEndpointRateLimit HelpLanguagesLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/help/privacy.json", "False")]
public IEndpointRateLimit HelpPrivacyLimit { get; }
    public IEndpointRateLimit HelpSettingsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/help/tos.json", "False")]
public IEndpointRateLimit HelpTosLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/list.json", "False")]
public IEndpointRateLimit ListsListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/members.json", "False")]
public IEndpointRateLimit ListsMembersLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/members/show.json", "False")]
public IEndpointRateLimit ListsMembersShowLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/memberships.json", "False")]
public IEndpointRateLimit ListsMembershipsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/ownerships.json", "False")]
public IEndpointRateLimit ListsOwnershipsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/show.json", "False")]
public IEndpointRateLimit ListsShowLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/statuses.json", "False")]
public IEndpointRateLimit ListsStatusesLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/subscribers.json", "False")]
public IEndpointRateLimit ListsSubscribersLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/subscribers/show.json", "False")]
public IEndpointRateLimit ListsSubscribersShowLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/lists/subscriptions.json", "False")]
public IEndpointRateLimit ListsSubscriptionsLimit { get; }
    public IEndpointRateLimit MediaUploadLimit { get; }
    public IEndpointRateLimit MomentsPermissions { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/mutes/users/list.json", "False")]
public IEndpointRateLimit MutesUserList { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/mutes/users/ids.json", "False")]
public IEndpointRateLimit MutesUserIds { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/saved_searches/destroy/[a-zA-Z0-9]+\.json", "True")]
public IEndpointRateLimit SavedSearchDestroyLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/saved_searches/list.json", "False")]
public IEndpointRateLimit SavedSearchesListLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/saved_searches/show/[a-zA-Z0-9]+\.json", "True")]
public IEndpointRateLimit SavedSearchesShowIdLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/search/tweets.json", "False")]
public IEndpointRateLimit SearchTweetsLimit { get; }
    public IEndpointRateLimit StatusesFriendsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/home_timeline.json", "False")]
public IEndpointRateLimit StatusesHomeTimelineLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/lookup.json", "False")]
public IEndpointRateLimit StatusesLookupLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/mentions_timeline.json", "False")]
public IEndpointRateLimit StatusesMentionsTimelineLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/oembed.json", "False")]
public IEndpointRateLimit StatusesOembedLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/retweeters/ids.json", "False")]
public IEndpointRateLimit StatusesRetweetersIdsLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/retweets/[0-9]+\.json", "True")]
public IEndpointRateLimit StatusesRetweetsIdLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/retweets_of_me.json", "False")]
public IEndpointRateLimit StatusesRetweetsOfMeLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/show.json", "False")]
public IEndpointRateLimit StatusesShowIdLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/statuses/user_timeline.json", "False")]
public IEndpointRateLimit StatusesUserTimelineLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/trends/available.json", "False")]
public IEndpointRateLimit TrendsAvailableLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/trends/closest.json", "False")]
public IEndpointRateLimit TrendsClosestLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/trends/place.json", "False")]
public IEndpointRateLimit TrendsPlaceLimit { get; }
    public IEndpointRateLimit TweetPromptsReportInteractionLimit { get; }
    public IEndpointRateLimit TweetPromptsShowLimit { get; }
    public IEndpointRateLimit UsersDerivedInfoLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/users/lookup.json", "False")]
public IEndpointRateLimit UsersLookupLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/users/profile_banner.json", "False")]
public IEndpointRateLimit UsersProfileBannerLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/users/report_spam.json", "False")]
public IEndpointRateLimit UsersReportSpamLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/users/search.json", "False")]
public IEndpointRateLimit UsersSearchLimit { get; }
    [TwitterEndpointAttribute("https://api.twitter.com/1.1/users/show.json", "False")]
public IEndpointRateLimit UsersShowIdLimit { get; }
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual string get_RateLimitContext();
    public abstract virtual bool get_IsApplicationOnlyCredentials();
    public abstract virtual CredentialsRateLimitsDTO get_CredentialsRateLimitsDTO();
    public abstract virtual Dictionary`2<TwitterEndpointAttribute, IEndpointRateLimit> get_OtherEndpointRateLimits();
    public abstract virtual IEndpointRateLimit get_AccountLoginVerificationEnrollmentLimit();
    public abstract virtual IEndpointRateLimit get_AccountSettingsLimit();
    public abstract virtual IEndpointRateLimit get_AccountUpdateProfileLimit();
    public abstract virtual IEndpointRateLimit get_AccountVerifyCredentialsLimit();
    public abstract virtual IEndpointRateLimit get_ApplicationRateLimitStatusLimit();
    public abstract virtual IEndpointRateLimit get_AuthCrossSiteRequestForgeryLimit();
    public abstract virtual IEndpointRateLimit get_BlocksIdsLimit();
    public abstract virtual IEndpointRateLimit get_BlocksListLimit();
    public abstract virtual IEndpointRateLimit get_BusinessExperienceKeywordLimit();
    public abstract virtual IEndpointRateLimit get_CollectionsListLimit();
    public abstract virtual IEndpointRateLimit get_CollectionsEntriesLimit();
    public abstract virtual IEndpointRateLimit get_CollectionsShowLimit();
    public abstract virtual IEndpointRateLimit get_ContactsUpdatedByLimit();
    public abstract virtual IEndpointRateLimit get_ContactsUsersLimit();
    public abstract virtual IEndpointRateLimit get_ContactsAddressBookLimit();
    public abstract virtual IEndpointRateLimit get_ContactsUsersAndUploadedByLimit();
    public abstract virtual IEndpointRateLimit get_ContactsDeleteStatusLimit();
    public abstract virtual IEndpointRateLimit get_DeviceTokenLimit();
    public abstract virtual IEndpointRateLimit get_DirectMessagesShowLimit();
    public abstract virtual IEndpointRateLimit get_DirectMessagesListLimit();
    public abstract virtual IEndpointRateLimit get_FavoritesListLimit();
    public abstract virtual IEndpointRateLimit get_FeedbackShowLimit();
    public abstract virtual IEndpointRateLimit get_FeedbackEventsLimit();
    public abstract virtual IEndpointRateLimit get_FollowersIdsLimit();
    public abstract virtual IEndpointRateLimit get_FollowersListLimit();
    public abstract virtual IEndpointRateLimit get_FriendsIdsLimit();
    public abstract virtual IEndpointRateLimit get_FriendsListLimit();
    public abstract virtual IEndpointRateLimit get_FriendsFollowingIdsLimit();
    public abstract virtual IEndpointRateLimit get_FriendsFollowingListLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsIncomingLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsLookupLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsNoRetweetsIdsLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsOutgoingLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsShowLimit();
    public abstract virtual IEndpointRateLimit get_FriendshipsListLimit();
    public abstract virtual IEndpointRateLimit get_GeoGetPlaceFromIdLimit();
    public abstract virtual IEndpointRateLimit get_GeoReverseGeoCodeLimit();
    public abstract virtual IEndpointRateLimit get_GeoSearchLimit();
    public abstract virtual IEndpointRateLimit get_GeoSimilarPlacesLimit();
    public abstract virtual IEndpointRateLimit get_HelpConfigurationLimit();
    public abstract virtual IEndpointRateLimit get_HelpLanguagesLimit();
    public abstract virtual IEndpointRateLimit get_HelpPrivacyLimit();
    public abstract virtual IEndpointRateLimit get_HelpSettingsLimit();
    public abstract virtual IEndpointRateLimit get_HelpTosLimit();
    public abstract virtual IEndpointRateLimit get_ListsListLimit();
    public abstract virtual IEndpointRateLimit get_ListsMembersLimit();
    public abstract virtual IEndpointRateLimit get_ListsMembersShowLimit();
    public abstract virtual IEndpointRateLimit get_ListsMembershipsLimit();
    public abstract virtual IEndpointRateLimit get_ListsOwnershipsLimit();
    public abstract virtual IEndpointRateLimit get_ListsShowLimit();
    public abstract virtual IEndpointRateLimit get_ListsStatusesLimit();
    public abstract virtual IEndpointRateLimit get_ListsSubscribersLimit();
    public abstract virtual IEndpointRateLimit get_ListsSubscribersShowLimit();
    public abstract virtual IEndpointRateLimit get_ListsSubscriptionsLimit();
    public abstract virtual IEndpointRateLimit get_MediaUploadLimit();
    public abstract virtual IEndpointRateLimit get_MomentsPermissions();
    public abstract virtual IEndpointRateLimit get_MutesUserList();
    public abstract virtual IEndpointRateLimit get_MutesUserIds();
    public abstract virtual IEndpointRateLimit get_SavedSearchDestroyLimit();
    public abstract virtual IEndpointRateLimit get_SavedSearchesListLimit();
    public abstract virtual IEndpointRateLimit get_SavedSearchesShowIdLimit();
    public abstract virtual IEndpointRateLimit get_SearchTweetsLimit();
    public abstract virtual IEndpointRateLimit get_StatusesFriendsLimit();
    public abstract virtual IEndpointRateLimit get_StatusesHomeTimelineLimit();
    public abstract virtual IEndpointRateLimit get_StatusesLookupLimit();
    public abstract virtual IEndpointRateLimit get_StatusesMentionsTimelineLimit();
    public abstract virtual IEndpointRateLimit get_StatusesOembedLimit();
    public abstract virtual IEndpointRateLimit get_StatusesRetweetersIdsLimit();
    public abstract virtual IEndpointRateLimit get_StatusesRetweetsIdLimit();
    public abstract virtual IEndpointRateLimit get_StatusesRetweetsOfMeLimit();
    public abstract virtual IEndpointRateLimit get_StatusesShowIdLimit();
    public abstract virtual IEndpointRateLimit get_StatusesUserTimelineLimit();
    public abstract virtual IEndpointRateLimit get_TrendsAvailableLimit();
    public abstract virtual IEndpointRateLimit get_TrendsClosestLimit();
    public abstract virtual IEndpointRateLimit get_TrendsPlaceLimit();
    public abstract virtual IEndpointRateLimit get_TweetPromptsReportInteractionLimit();
    public abstract virtual IEndpointRateLimit get_TweetPromptsShowLimit();
    public abstract virtual IEndpointRateLimit get_UsersDerivedInfoLimit();
    public abstract virtual IEndpointRateLimit get_UsersLookupLimit();
    public abstract virtual IEndpointRateLimit get_UsersProfileBannerLimit();
    public abstract virtual IEndpointRateLimit get_UsersReportSpamLimit();
    public abstract virtual IEndpointRateLimit get_UsersSearchLimit();
    public abstract virtual IEndpointRateLimit get_UsersShowIdLimit();
}
public interface Tweetinvi.Models.IEndpointRateLimit {
    public int Remaining { get; public set; }
    public long Reset { get; public set; }
    public int Limit { get; public set; }
    public double ResetDateTimeInSeconds { get; }
    public double ResetDateTimeInMilliseconds { get; }
    public DateTime ResetDateTime { get; }
    public bool IsCustomHeaderRateLimit { get; public set; }
    public abstract virtual int get_Remaining();
    public abstract virtual void set_Remaining(int value);
    public abstract virtual long get_Reset();
    public abstract virtual void set_Reset(long value);
    public abstract virtual int get_Limit();
    public abstract virtual void set_Limit(int value);
    public abstract virtual double get_ResetDateTimeInSeconds();
    public abstract virtual double get_ResetDateTimeInMilliseconds();
    public abstract virtual DateTime get_ResetDateTime();
    public abstract virtual bool get_IsCustomHeaderRateLimit();
    public abstract virtual void set_IsCustomHeaderRateLimit(bool value);
}
public interface Tweetinvi.Models.IGeo {
    public string Type { get; public set; }
    public List`1<ICoordinates> Coordinates { get; public set; }
    public abstract virtual string get_Type();
    public abstract virtual void set_Type(string value);
    public abstract virtual List`1<ICoordinates> get_Coordinates();
    public abstract virtual void set_Coordinates(List`1<ICoordinates> value);
}
public interface Tweetinvi.Models.IGeoCode {
    public ICoordinates Coordinates { get; public set; }
    public double Radius { get; public set; }
    public DistanceMeasure DistanceMeasure { get; public set; }
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
    public abstract virtual double get_Radius();
    public abstract virtual void set_Radius(double value);
    public abstract virtual DistanceMeasure get_DistanceMeasure();
    public abstract virtual void set_DistanceMeasure(DistanceMeasure value);
}
public interface Tweetinvi.Models.IGetTrendsAtResult {
    public DateTimeOffset AsOf { get; public set; }
    public DateTimeOffset CreatedAt { get; public set; }
    public IWoeIdLocation[] WoeIdLocations { get; public set; }
    public ITrend[] Trends { get; public set; }
    public abstract virtual DateTimeOffset get_AsOf();
    public abstract virtual void set_AsOf(DateTimeOffset value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual void set_CreatedAt(DateTimeOffset value);
    public abstract virtual IWoeIdLocation[] get_WoeIdLocations();
    public abstract virtual void set_WoeIdLocations(IWoeIdLocation[] value);
    public abstract virtual ITrend[] get_Trends();
    public abstract virtual void set_Trends(ITrend[] value);
}
public interface Tweetinvi.Models.ILocation {
    public ICoordinates Coordinate1 { get; public set; }
    public ICoordinates Coordinate2 { get; public set; }
    public abstract virtual ICoordinates get_Coordinate1();
    public abstract virtual void set_Coordinate1(ICoordinates value);
    public abstract virtual ICoordinates get_Coordinate2();
    public abstract virtual void set_Coordinate2(ICoordinates value);
}
public enum Tweetinvi.Models.ImageSize : Enum {
    public int value__;
    public static ImageSize Normal;
    public static ImageSize Bigger;
    public static ImageSize Mini;
}
public interface Tweetinvi.Models.IMedia {
    public string Name { get; public set; }
    public Byte[] Data { get; public set; }
    public Nullable`1<long> Id { get; public set; }
    public string ContentType { get; public set; }
    public bool HasBeenUploaded { get; }
    public bool IsReadyToBeUsed { get; }
    public IUploadedMediaInfo UploadedMediaInfo { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual Byte[] get_Data();
    public abstract virtual void set_Data(Byte[] value);
    public abstract virtual Nullable`1<long> get_Id();
    public abstract virtual void set_Id(Nullable`1<long> value);
    public abstract virtual string get_ContentType();
    public abstract virtual void set_ContentType(string value);
    public abstract virtual bool get_HasBeenUploaded();
    public abstract virtual bool get_IsReadyToBeUsed();
    public abstract virtual IUploadedMediaInfo get_UploadedMediaInfo();
    public abstract virtual void set_UploadedMediaInfo(IUploadedMediaInfo value);
    public abstract virtual IMedia CloneWithoutMediaInfo(IMedia source);
    public abstract virtual IMedia CloneWithoutUploadInfo();
}
public interface Tweetinvi.Models.IMention {
    public string Annotations { get; public set; }
    public abstract virtual string get_Annotations();
    public abstract virtual void set_Annotations(string value);
}
public interface Tweetinvi.Models.IMessage {
    public ITwitterClient Client { get; }
    public IMessageEventDTO MessageEventDTO { get; }
    public IApp App { get; public set; }
    public long Id { get; }
    public string Text { get; }
    public DateTimeOffset CreatedAt { get; }
    public long SenderId { get; }
    public long RecipientId { get; }
    public IMessageEntities Entities { get; }
    public Nullable`1<long> InitiatedViaTweetId { get; }
    public Nullable`1<long> InitiatedViaWelcomeMessageId { get; }
    public IQuickReplyOption[] QuickReplyOptions { get; }
    public IQuickReplyResponse QuickReplyResponse { get; }
    public IMediaEntity AttachedMedia { get; }
    public abstract virtual ITwitterClient get_Client();
    public abstract virtual IMessageEventDTO get_MessageEventDTO();
    public abstract virtual IApp get_App();
    public abstract virtual void set_App(IApp value);
    public abstract virtual long get_Id();
    public abstract virtual string get_Text();
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual long get_SenderId();
    public abstract virtual long get_RecipientId();
    public abstract virtual IMessageEntities get_Entities();
    public abstract virtual Nullable`1<long> get_InitiatedViaTweetId();
    public abstract virtual Nullable`1<long> get_InitiatedViaWelcomeMessageId();
    public abstract virtual IQuickReplyOption[] get_QuickReplyOptions();
    public abstract virtual IQuickReplyResponse get_QuickReplyResponse();
    public abstract virtual IMediaEntity get_AttachedMedia();
    public abstract virtual Task DestroyAsync();
}
public class Tweetinvi.Models.InvalidateTokenResponse : object {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [JsonPropertyAttribute("access_token")]
public string AccessToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccessToken();
    [CompilerGeneratedAttribute]
public void set_AccessToken(string value);
}
public interface Tweetinvi.Models.IOEmbedTweet {
    public string AuthorName { get; }
    public string AuthorURL { get; }
    public string HTML { get; }
    public string URL { get; }
    public string ProviderURL { get; }
    public double Width { get; }
    public double Height { get; }
    public string Version { get; }
    public string Type { get; }
    public string CacheAge { get; }
    public IOEmbedTweetDTO OembedTweetDTO { get; public set; }
    public abstract virtual string get_AuthorName();
    public abstract virtual string get_AuthorURL();
    public abstract virtual string get_HTML();
    public abstract virtual string get_URL();
    public abstract virtual string get_ProviderURL();
    public abstract virtual double get_Width();
    public abstract virtual double get_Height();
    public abstract virtual string get_Version();
    public abstract virtual string get_Type();
    public abstract virtual string get_CacheAge();
    public abstract virtual IOEmbedTweetDTO get_OembedTweetDTO();
    public abstract virtual void set_OembedTweetDTO(IOEmbedTweetDTO value);
}
public interface Tweetinvi.Models.IPlace {
    public string IdStr { get; }
    public string Name { get; public set; }
    public string FullName { get; public set; }
    public string Url { get; public set; }
    public PlaceType PlaceType { get; public set; }
    public string Country { get; public set; }
    public string CountryCode { get; public set; }
    public Dictionary`2<string, string> Attributes { get; public set; }
    public List`1<IPlace> ContainedWithin { get; public set; }
    public IGeo BoundingBox { get; public set; }
    public IGeo Geometry { get; public set; }
    public abstract virtual string get_IdStr();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_FullName();
    public abstract virtual void set_FullName(string value);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual PlaceType get_PlaceType();
    public abstract virtual void set_PlaceType(PlaceType value);
    public abstract virtual string get_Country();
    public abstract virtual void set_Country(string value);
    public abstract virtual string get_CountryCode();
    public abstract virtual void set_CountryCode(string value);
    public abstract virtual Dictionary`2<string, string> get_Attributes();
    public abstract virtual void set_Attributes(Dictionary`2<string, string> value);
    public abstract virtual List`1<IPlace> get_ContainedWithin();
    public abstract virtual void set_ContainedWithin(List`1<IPlace> value);
    public abstract virtual IGeo get_BoundingBox();
    public abstract virtual void set_BoundingBox(IGeo value);
    public abstract virtual IGeo get_Geometry();
    public abstract virtual void set_Geometry(IGeo value);
}
public interface Tweetinvi.Models.IQuickReplyOption {
    public string Label { get; }
    public string Description { get; }
    public string Metadata { get; }
    public abstract virtual string get_Label();
    public abstract virtual string get_Description();
    public abstract virtual string get_Metadata();
}
public interface Tweetinvi.Models.IQuickReplyResponse {
    public QuickReplyType Type { get; }
    public string Metadata { get; }
    public abstract virtual QuickReplyType get_Type();
    public abstract virtual string get_Metadata();
}
public interface Tweetinvi.Models.IReadOnlyConsumerCredentials {
    public string BearerToken { get; }
    public abstract virtual string get_BearerToken();
}
public interface Tweetinvi.Models.IReadOnlyConsumerCredentialsWithoutBearer {
    public string ConsumerKey { get; }
    public string ConsumerSecret { get; }
    public abstract virtual string get_ConsumerKey();
    public abstract virtual string get_ConsumerSecret();
}
public interface Tweetinvi.Models.IReadOnlyTwitterCredentials {
    public string AccessToken { get; }
    public string AccessTokenSecret { get; }
    public abstract virtual string get_AccessToken();
    public abstract virtual string get_AccessTokenSecret();
}
public interface Tweetinvi.Models.IRelationshipDetails {
    public long SourceId { get; }
    public string SourceIdStr { get; }
    public string SourceScreenName { get; }
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetScreenName { get; }
    public bool Following { get; }
    public bool FollowedBy { get; }
    public bool FollowingRequestReceived { get; }
    public bool FollowingRequested { get; }
    public bool NotificationsEnabled { get; }
    public bool CanSendDirectMessage { get; }
    public bool Blocking { get; }
    public bool BlockedBy { get; }
    public bool Muting { get; }
    public bool WantRetweets { get; }
    public bool AllReplies { get; }
    public bool MarkedSpam { get; }
    public IRelationshipDetailsDTO RelationshipDetailsDTO { get; public set; }
    public abstract virtual long get_SourceId();
    public abstract virtual string get_SourceIdStr();
    public abstract virtual string get_SourceScreenName();
    public abstract virtual long get_TargetId();
    public abstract virtual string get_TargetIdStr();
    public abstract virtual string get_TargetScreenName();
    public abstract virtual bool get_Following();
    public abstract virtual bool get_FollowedBy();
    public abstract virtual bool get_FollowingRequestReceived();
    public abstract virtual bool get_FollowingRequested();
    public abstract virtual bool get_NotificationsEnabled();
    public abstract virtual bool get_CanSendDirectMessage();
    public abstract virtual bool get_Blocking();
    public abstract virtual bool get_BlockedBy();
    public abstract virtual bool get_Muting();
    public abstract virtual bool get_WantRetweets();
    public abstract virtual bool get_AllReplies();
    public abstract virtual bool get_MarkedSpam();
    public abstract virtual IRelationshipDetailsDTO get_RelationshipDetailsDTO();
    public abstract virtual void set_RelationshipDetailsDTO(IRelationshipDetailsDTO value);
}
public interface Tweetinvi.Models.IRelationshipState {
    public long TargetId { get; }
    public string TargetIdStr { get; }
    public string TargetName { get; }
    public string TargetScreenName { get; }
    public bool Following { get; }
    public bool FollowedBy { get; }
    public bool FollowingRequested { get; }
    public bool FollowingRequestReceived { get; }
    public IRelationshipStateDTO RelationshipStateDTO { get; public set; }
    public abstract virtual long get_TargetId();
    public abstract virtual string get_TargetIdStr();
    public abstract virtual string get_TargetName();
    public abstract virtual string get_TargetScreenName();
    public abstract virtual bool get_Following();
    public abstract virtual bool get_FollowedBy();
    public abstract virtual bool get_FollowingRequested();
    public abstract virtual bool get_FollowingRequestReceived();
    public abstract virtual IRelationshipStateDTO get_RelationshipStateDTO();
    public abstract virtual void set_RelationshipStateDTO(IRelationshipStateDTO value);
}
public interface Tweetinvi.Models.ISavedSearch {
    public ISavedSearchDTO SavedSearchDTO { get; public set; }
    public long Id { get; }
    public string IdStr { get; }
    public string Name { get; public set; }
    public string Query { get; public set; }
    public DateTimeOffset CreatedAt { get; }
    public abstract virtual ISavedSearchDTO get_SavedSearchDTO();
    public abstract virtual void set_SavedSearchDTO(ISavedSearchDTO value);
    public abstract virtual long get_Id();
    public abstract virtual string get_IdStr();
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual DateTimeOffset get_CreatedAt();
}
public interface Tweetinvi.Models.ISearchResults {
    public ITweetWithSearchMetadata[] Tweets { get; }
    public ISearchMetadata SearchMetadata { get; }
    public abstract virtual ITweetWithSearchMetadata[] get_Tweets();
    public abstract virtual ISearchMetadata get_SearchMetadata();
}
public interface Tweetinvi.Models.ISuggestedUserList {
    public string Name { get; public set; }
    public string Slug { get; public set; }
    public int Size { get; public set; }
    public List`1<IUser> Members { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Slug();
    public abstract virtual void set_Slug(string value);
    public abstract virtual int get_Size();
    public abstract virtual void set_Size(int value);
    public abstract virtual List`1<IUser> get_Members();
    public abstract virtual void set_Members(List`1<IUser> value);
}
public interface Tweetinvi.Models.ITimeZone {
    public string Name { get; public set; }
    public string TzinfoName { get; public set; }
    public int UtcOffset { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_TzinfoName();
    public abstract virtual void set_TzinfoName(string value);
    public abstract virtual int get_UtcOffset();
    public abstract virtual void set_UtcOffset(int value);
}
public interface Tweetinvi.Models.ITrend {
    public string Name { get; public set; }
    public string URL { get; public set; }
    public string Query { get; public set; }
    public string PromotedContent { get; public set; }
    public Nullable`1<long> TweetVolume { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_URL();
    public abstract virtual void set_URL(string value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual string get_PromotedContent();
    public abstract virtual void set_PromotedContent(string value);
    public abstract virtual Nullable`1<long> get_TweetVolume();
    public abstract virtual void set_TweetVolume(Nullable`1<long> value);
}
public interface Tweetinvi.Models.ITrendLocation {
    public long WoeId { get; public set; }
    public string Name { get; public set; }
    public string Country { get; public set; }
    public string CountryCode { get; public set; }
    public string Url { get; public set; }
    public long ParentId { get; public set; }
    public PlaceType PlaceType { get; public set; }
    public abstract virtual long get_WoeId();
    public abstract virtual void set_WoeId(long value);
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Country();
    public abstract virtual void set_Country(string value);
    public abstract virtual string get_CountryCode();
    public abstract virtual void set_CountryCode(string value);
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual long get_ParentId();
    public abstract virtual void set_ParentId(long value);
    public abstract virtual PlaceType get_PlaceType();
    public abstract virtual void set_PlaceType(PlaceType value);
}
public interface Tweetinvi.Models.ITweet {
    public ITwitterClient Client { get; public set; }
    public DateTimeOffset CreatedAt { get; }
    public string Text { get; }
    public string Prefix { get; }
    public string Suffix { get; }
    public string FullText { get; }
    public Int32[] DisplayTextRange { get; }
    public Int32[] SafeDisplayTextRange { get; }
    public IExtendedTweet ExtendedTweet { get; }
    public ICoordinates Coordinates { get; }
    public string Source { get; }
    public bool Truncated { get; }
    public Nullable`1<int> ReplyCount { get; }
    public Nullable`1<long> InReplyToStatusId { get; }
    public string InReplyToStatusIdStr { get; }
    public Nullable`1<long> InReplyToUserId { get; }
    public string InReplyToUserIdStr { get; }
    public string InReplyToScreenName { get; }
    public IUser CreatedBy { get; }
    public ITweetIdentifier CurrentUserRetweetIdentifier { get; }
    public Int32[] ContributorsIds { get; }
    public IEnumerable`1<long> Contributors { get; }
    public int RetweetCount { get; }
    public ITweetEntities Entities { get; }
    public bool Favorited { get; }
    public int FavoriteCount { get; }
    public bool Retweeted { get; }
    public bool PossiblySensitive { get; }
    public Nullable`1<Language> Language { get; }
    public IPlace Place { get; }
    public Dictionary`2<string, object> Scopes { get; }
    public string FilterLevel { get; }
    public bool WithheldCopyright { get; }
    public IEnumerable`1<string> WithheldInCountries { get; }
    public string WithheldScope { get; }
    public ITweetDTO TweetDTO { get; }
    public List`1<IHashtagEntity> Hashtags { get; }
    public List`1<IUrlEntity> Urls { get; }
    public List`1<IMediaEntity> Media { get; }
    public List`1<IUserMentionEntity> UserMentions { get; }
    public bool IsRetweet { get; }
    public ITweet RetweetedTweet { get; }
    public Nullable`1<int> QuoteCount { get; }
    public Nullable`1<long> QuotedStatusId { get; }
    public string QuotedStatusIdStr { get; }
    public ITweet QuotedTweet { get; }
    public string Url { get; }
    public TweetMode TweetMode { get; }
    public abstract virtual ITwitterClient get_Client();
    public abstract virtual void set_Client(ITwitterClient value);
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual string get_Text();
    public abstract virtual string get_Prefix();
    public abstract virtual string get_Suffix();
    public abstract virtual string get_FullText();
    public abstract virtual Int32[] get_DisplayTextRange();
    public abstract virtual Int32[] get_SafeDisplayTextRange();
    public abstract virtual IExtendedTweet get_ExtendedTweet();
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual string get_Source();
    public abstract virtual bool get_Truncated();
    public abstract virtual Nullable`1<int> get_ReplyCount();
    public abstract virtual Nullable`1<long> get_InReplyToStatusId();
    public abstract virtual string get_InReplyToStatusIdStr();
    public abstract virtual Nullable`1<long> get_InReplyToUserId();
    public abstract virtual string get_InReplyToUserIdStr();
    public abstract virtual string get_InReplyToScreenName();
    public abstract virtual IUser get_CreatedBy();
    public abstract virtual ITweetIdentifier get_CurrentUserRetweetIdentifier();
    public abstract virtual Int32[] get_ContributorsIds();
    public abstract virtual IEnumerable`1<long> get_Contributors();
    public abstract virtual int get_RetweetCount();
    public abstract virtual ITweetEntities get_Entities();
    public abstract virtual bool get_Favorited();
    public abstract virtual int get_FavoriteCount();
    public abstract virtual bool get_Retweeted();
    public abstract virtual bool get_PossiblySensitive();
    public abstract virtual Nullable`1<Language> get_Language();
    public abstract virtual IPlace get_Place();
    public abstract virtual Dictionary`2<string, object> get_Scopes();
    public abstract virtual string get_FilterLevel();
    public abstract virtual bool get_WithheldCopyright();
    public abstract virtual IEnumerable`1<string> get_WithheldInCountries();
    public abstract virtual string get_WithheldScope();
    public abstract virtual ITweetDTO get_TweetDTO();
    public abstract virtual List`1<IHashtagEntity> get_Hashtags();
    public abstract virtual List`1<IUrlEntity> get_Urls();
    public abstract virtual List`1<IMediaEntity> get_Media();
    public abstract virtual List`1<IUserMentionEntity> get_UserMentions();
    public abstract virtual bool get_IsRetweet();
    public abstract virtual ITweet get_RetweetedTweet();
    public abstract virtual Nullable`1<int> get_QuoteCount();
    public abstract virtual Nullable`1<long> get_QuotedStatusId();
    public abstract virtual string get_QuotedStatusIdStr();
    public abstract virtual ITweet get_QuotedTweet();
    public abstract virtual string get_Url();
    public abstract virtual TweetMode get_TweetMode();
    public abstract virtual Task FavoriteAsync();
    public abstract virtual Task UnfavoriteAsync();
    public abstract virtual Task`1<ITweet> PublishRetweetAsync();
    public abstract virtual Task`1<ITweet[]> GetRetweetsAsync();
    public abstract virtual Task DestroyRetweetAsync();
    public abstract virtual Task DestroyAsync();
    public abstract virtual Task`1<IOEmbedTweet> GenerateOEmbedTweetAsync();
}
public interface Tweetinvi.Models.ITweetIdentifier {
}
public interface Tweetinvi.Models.ITweetTextParts {
    public string Content { get; }
    public string Prefix { get; }
    public String[] Mentions { get; }
    public abstract virtual string get_Content();
    public abstract virtual string get_Prefix();
    public abstract virtual String[] get_Mentions();
}
public interface Tweetinvi.Models.ITweetWithSearchMetadata {
    public ITweetFromSearchMetadata SearchMetadata { get; }
    public abstract virtual ITweetFromSearchMetadata get_SearchMetadata();
}
public interface Tweetinvi.Models.ITwitterCredentials {
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string BearerToken { get; public set; }
    public string AccessToken { get; public set; }
    public string AccessTokenSecret { get; public set; }
    public abstract virtual string get_ConsumerKey();
    public abstract virtual void set_ConsumerKey(string value);
    public abstract virtual string get_ConsumerSecret();
    public abstract virtual void set_ConsumerSecret(string value);
    public abstract virtual string get_BearerToken();
    public abstract virtual void set_BearerToken(string value);
    public abstract virtual string get_AccessToken();
    public abstract virtual void set_AccessToken(string value);
    public abstract virtual string get_AccessTokenSecret();
    public abstract virtual void set_AccessTokenSecret(string value);
}
public interface Tweetinvi.Models.ITwitterIdentifier {
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public abstract virtual long get_Id();
    public abstract virtual void set_Id(long value);
    public abstract virtual string get_IdStr();
    public abstract virtual void set_IdStr(string value);
}
public interface Tweetinvi.Models.ITwitterList {
    public ITwitterListDTO TwitterListDTO { get; public set; }
    public string IdStr { get; }
    public string Name { get; }
    public string FullName { get; }
    public IUser Owner { get; }
    public DateTimeOffset CreatedAt { get; }
    public string Uri { get; }
    public string Description { get; }
    public bool Following { get; }
    public PrivacyMode PrivacyMode { get; }
    public int MemberCount { get; }
    public int SubscriberCount { get; }
    public ITwitterClient Client { get; }
    public abstract virtual ITwitterListDTO get_TwitterListDTO();
    public abstract virtual void set_TwitterListDTO(ITwitterListDTO value);
    public abstract virtual string get_IdStr();
    public abstract virtual string get_Name();
    public abstract virtual string get_FullName();
    public abstract virtual IUser get_Owner();
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual string get_Uri();
    public abstract virtual string get_Description();
    public abstract virtual bool get_Following();
    public abstract virtual PrivacyMode get_PrivacyMode();
    public abstract virtual int get_MemberCount();
    public abstract virtual int get_SubscriberCount();
    public abstract virtual ITwitterClient get_Client();
    public abstract virtual Task`1<ITweet[]> GetTweetsAsync();
    public abstract virtual Task`1<IUser[]> GetMembersAsync();
    public abstract virtual Task AddMemberAsync(long userId);
    public abstract virtual Task AddMemberAsync(string username);
    public abstract virtual Task AddMemberAsync(IUserIdentifier user);
    public abstract virtual Task AddMembersAsync(IEnumerable`1<long> userIds);
    public abstract virtual Task AddMembersAsync(IEnumerable`1<string> userScreenNames);
    public abstract virtual Task AddMembersAsync(IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<bool> RemoveMemberAsync(long userId);
    public abstract virtual Task`1<bool> RemoveMemberAsync(string username);
    public abstract virtual Task`1<bool> RemoveMemberAsync(IUserIdentifier user);
    public abstract virtual Task RemoveMembersAsync(IEnumerable`1<long> userIds);
    public abstract virtual Task RemoveMembersAsync(IEnumerable`1<string> usernames);
    public abstract virtual Task RemoveMembersAsync(IEnumerable`1<IUserIdentifier> users);
    public abstract virtual Task`1<bool> CheckUserMembershipAsync(long userId);
    public abstract virtual Task`1<bool> CheckUserMembershipAsync(string userScreenName);
    public abstract virtual Task`1<bool> CheckUserMembershipAsync(IUserIdentifier user);
    public abstract virtual Task`1<IUser[]> GetSubscribersAsync();
    public abstract virtual Task`1<ITwitterList> SubscribeAsync();
    public abstract virtual Task`1<ITwitterList> UnsubscribeAsync();
    public abstract virtual Task`1<bool> CheckUserSubscriptionAsync(long userId);
    public abstract virtual Task`1<bool> CheckUserSubscriptionAsync(string username);
    public abstract virtual Task`1<bool> CheckUserSubscriptionAsync(IUserIdentifier user);
    public abstract virtual Task UpdateAsync(IListMetadataParameters parameters);
    public abstract virtual Task DestroyAsync();
}
public interface Tweetinvi.Models.ITwitterListIdentifier {
    public long Id { get; }
    public string Slug { get; }
    public long OwnerId { get; }
    public string OwnerScreenName { get; }
    public abstract virtual long get_Id();
    public abstract virtual string get_Slug();
    public abstract virtual long get_OwnerId();
    public abstract virtual string get_OwnerScreenName();
}
public interface Tweetinvi.Models.ITwitterQuery {
    public IProxyConfig ProxyConfig { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public ITwitterCredentials TwitterCredentials { get; public set; }
    public IOAuthQueryParameter[] QueryParameters { get; public set; }
    public IEndpointRateLimit QueryRateLimit { get; public set; }
    public ICredentialsRateLimits CredentialsRateLimits { get; public set; }
    public Nullable`1<DateTime> DateWhenCredentialsWillHaveTheRequiredRateLimits { get; public set; }
    public Nullable`1<TimeSpan> TimeToWaitBeforeExecutingTheQuery { get; }
    public abstract virtual IProxyConfig get_ProxyConfig();
    public abstract virtual void set_ProxyConfig(IProxyConfig value);
    public abstract virtual TimeSpan get_Timeout();
    public abstract virtual void set_Timeout(TimeSpan value);
    public abstract virtual ITwitterCredentials get_TwitterCredentials();
    public abstract virtual void set_TwitterCredentials(ITwitterCredentials value);
    public abstract virtual IOAuthQueryParameter[] get_QueryParameters();
    public abstract virtual void set_QueryParameters(IOAuthQueryParameter[] value);
    public abstract virtual IEndpointRateLimit get_QueryRateLimit();
    public abstract virtual void set_QueryRateLimit(IEndpointRateLimit value);
    public abstract virtual ICredentialsRateLimits get_CredentialsRateLimits();
    public abstract virtual void set_CredentialsRateLimits(ICredentialsRateLimits value);
    public abstract virtual Nullable`1<DateTime> get_DateWhenCredentialsWillHaveTheRequiredRateLimits();
    public abstract virtual void set_DateWhenCredentialsWillHaveTheRequiredRateLimits(Nullable`1<DateTime> value);
    public abstract virtual Nullable`1<TimeSpan> get_TimeToWaitBeforeExecutingTheQuery();
    public abstract virtual void Initialize(ITweetinviSettings settings);
}
public interface Tweetinvi.Models.ITwitterRequest {
    public ITwitterQuery Query { get; public set; }
    public ITwitterClientHandler TwitterClientHandler { get; public set; }
    public ITwitterExecutionContext ExecutionContext { get; public set; }
    public abstract virtual ITwitterQuery get_Query();
    public abstract virtual void set_Query(ITwitterQuery value);
    public abstract virtual ITwitterClientHandler get_TwitterClientHandler();
    public abstract virtual void set_TwitterClientHandler(ITwitterClientHandler value);
    public abstract virtual ITwitterExecutionContext get_ExecutionContext();
    public abstract virtual void set_ExecutionContext(ITwitterExecutionContext value);
}
public interface Tweetinvi.Models.ITwitterRequestParameters {
    public string Url { get; public set; }
    public HttpMethod HttpMethod { get; public set; }
    public HttpContent HttpContent { get; public set; }
    public bool IsHttpContentPartOfQueryParams { get; public set; }
    public List`1<string> AcceptHeaders { get; }
    public string AuthorizationHeader { get; public set; }
    public CustomRequestHeaders CustomHeaders { get; public set; }
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual HttpMethod get_HttpMethod();
    public abstract virtual void set_HttpMethod(HttpMethod value);
    public abstract virtual HttpContent get_HttpContent();
    public abstract virtual void set_HttpContent(HttpContent value);
    public abstract virtual bool get_IsHttpContentPartOfQueryParams();
    public abstract virtual void set_IsHttpContentPartOfQueryParams(bool value);
    public abstract virtual List`1<string> get_AcceptHeaders();
    public abstract virtual string get_AuthorizationHeader();
    public abstract virtual void set_AuthorizationHeader(string value);
    public abstract virtual CustomRequestHeaders get_CustomHeaders();
    public abstract virtual void set_CustomHeaders(CustomRequestHeaders value);
}
public interface Tweetinvi.Models.IUser {
    public ITwitterClient Client { get; public set; }
    public IUserDTO UserDTO { get; public set; }
    public string Name { get; }
    public string Description { get; }
    public ITweetDTO Status { get; }
    public DateTimeOffset CreatedAt { get; }
    public string Location { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> GeoEnabled { get; }
    public string Url { get; }
    public int StatusesCount { get; }
    public int FollowersCount { get; }
    public int FriendsCount { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> Following { get; }
    public bool Protected { get; }
    public bool Verified { get; }
    public IUserEntities Entities { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> Notifications { get; }
    public string ProfileImageUrl { get; }
    public string ProfileImageUrlFullSize { get; }
    public string ProfileImageUrl400x400 { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> FollowRequestSent { get; }
    public bool DefaultProfile { get; }
    public bool DefaultProfileImage { get; }
    public int FavoritesCount { get; }
    public int ListedCount { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileSidebarFillColor { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileSidebarBorderColor { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public bool ProfileBackgroundTile { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileBackgroundColor { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileBackgroundImageUrl { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileBackgroundImageUrlHttps { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileBannerURL { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileTextColor { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string ProfileLinkColor { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public bool ProfileUseBackgroundImage { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> IsTranslator { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<bool> ContributorsEnabled { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public Nullable`1<int> UtcOffset { get; }
    [ObsoleteAttribute("Twitter documentation states that this property is deprecated but they currently keep returning data.")]
public string TimeZone { get; }
    public IEnumerable`1<string> WithheldInCountries { get; }
    public string WithheldScope { get; }
    public abstract virtual ITwitterClient get_Client();
    public abstract virtual void set_Client(ITwitterClient value);
    public abstract virtual IUserDTO get_UserDTO();
    public abstract virtual void set_UserDTO(IUserDTO value);
    public abstract virtual string get_Name();
    public abstract virtual string get_Description();
    public abstract virtual ITweetDTO get_Status();
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual string get_Location();
    public abstract virtual Nullable`1<bool> get_GeoEnabled();
    public abstract virtual string get_Url();
    public abstract virtual int get_StatusesCount();
    public abstract virtual int get_FollowersCount();
    public abstract virtual int get_FriendsCount();
    public abstract virtual Nullable`1<bool> get_Following();
    public abstract virtual bool get_Protected();
    public abstract virtual bool get_Verified();
    public abstract virtual IUserEntities get_Entities();
    public abstract virtual Nullable`1<bool> get_Notifications();
    public abstract virtual string get_ProfileImageUrl();
    public abstract virtual string get_ProfileImageUrlFullSize();
    public abstract virtual string get_ProfileImageUrl400x400();
    public abstract virtual Nullable`1<bool> get_FollowRequestSent();
    public abstract virtual bool get_DefaultProfile();
    public abstract virtual bool get_DefaultProfileImage();
    public abstract virtual int get_FavoritesCount();
    public abstract virtual int get_ListedCount();
    public abstract virtual string get_ProfileSidebarFillColor();
    public abstract virtual string get_ProfileSidebarBorderColor();
    public abstract virtual bool get_ProfileBackgroundTile();
    public abstract virtual string get_ProfileBackgroundColor();
    public abstract virtual string get_ProfileBackgroundImageUrl();
    public abstract virtual string get_ProfileBackgroundImageUrlHttps();
    public abstract virtual string get_ProfileBannerURL();
    public abstract virtual string get_ProfileTextColor();
    public abstract virtual string get_ProfileLinkColor();
    public abstract virtual bool get_ProfileUseBackgroundImage();
    public abstract virtual Nullable`1<bool> get_IsTranslator();
    public abstract virtual Nullable`1<bool> get_ContributorsEnabled();
    public abstract virtual Nullable`1<int> get_UtcOffset();
    public abstract virtual string get_TimeZone();
    public abstract virtual IEnumerable`1<string> get_WithheldInCountries();
    public abstract virtual string get_WithheldScope();
    public abstract virtual ITwitterIterator`1<long> GetFriendIds();
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetFriends();
    public abstract virtual ITwitterIterator`1<long> GetFollowerIds();
    public abstract virtual IMultiLevelCursorIterator`2<long, IUser> GetFollowers();
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(IUserIdentifier user);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(long userId);
    public abstract virtual Task`1<IRelationshipDetails> GetRelationshipWithAsync(string username);
    public abstract virtual Task`1<ITweet[]> GetUserTimelineAsync();
    public abstract virtual Task`1<ITweet[]> GetFavoriteTweetsAsync();
    public abstract virtual Task`1<ITwitterList[]> GetOwnedListsAsync();
    public abstract virtual Task`1<ITwitterList[]> GetListSubscriptionsAsync();
    public abstract virtual Task BlockUserAsync();
    public abstract virtual Task UnblockUserAsync();
    public abstract virtual Task ReportUserForSpamAsync();
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync();
    public abstract virtual Task`1<Stream> GetProfileImageStreamAsync(ImageSize imageSize);
}
[DefaultMemberAttribute("Item")]
public interface Tweetinvi.Models.IUserDictionary`1 {
    public T Item { get; }
    public T Item { get; }
    public T Item { get; }
    public abstract virtual T get_Item(long userId);
    public abstract virtual T get_Item(string username);
    public abstract virtual T get_Item(IUserIdentifier index);
}
public interface Tweetinvi.Models.IUserIdentifier {
    public string ScreenName { get; }
    public abstract virtual string get_ScreenName();
}
public interface Tweetinvi.Models.IWebhook {
    public IWebhookDTO WebhookDTO { get; }
    public string Id { get; }
    public string Url { get; }
    public bool Valid { get; }
    public DateTimeOffset CreatedAt { get; }
    public Uri Uri { get; }
    public abstract virtual IWebhookDTO get_WebhookDTO();
    public abstract virtual string get_Id();
    public abstract virtual string get_Url();
    public abstract virtual bool get_Valid();
    public abstract virtual DateTimeOffset get_CreatedAt();
    public abstract virtual Uri get_Uri();
}
public interface Tweetinvi.Models.IWebhookEnvironment {
    [JsonIgnoreAttribute]
public IWebhookEnvironmentDTO WebhookEnvironmentDTO { get; }
    public string Name { get; }
    public IWebhook[] Webhooks { get; }
    public abstract virtual IWebhookEnvironmentDTO get_WebhookEnvironmentDTO();
    public abstract virtual string get_Name();
    public abstract virtual IWebhook[] get_Webhooks();
}
public interface Tweetinvi.Models.IWebhookEnvironmentSubscriptions {
    public ITwitterClient Client { get; public set; }
    public IWebhookEnvironmentSubscriptionsDTO WebhookEnvironmentSubscriptionsDTO { get; }
    public string EnvironmentName { get; }
    public string ApplicationId { get; }
    public IWebhookSubscription[] Subscriptions { get; }
    public abstract virtual ITwitterClient get_Client();
    public abstract virtual void set_Client(ITwitterClient value);
    public abstract virtual IWebhookEnvironmentSubscriptionsDTO get_WebhookEnvironmentSubscriptionsDTO();
    public abstract virtual string get_EnvironmentName();
    public abstract virtual string get_ApplicationId();
    public abstract virtual IWebhookSubscription[] get_Subscriptions();
}
public interface Tweetinvi.Models.IWebhookMessage {
    public string Json { get; }
    public abstract virtual string get_Json();
}
public interface Tweetinvi.Models.IWebhooksRequest {
    public abstract virtual Task`1<string> GetJsonFromBodyAsync();
    public abstract virtual void SetResponseStatusCode(int statusCode);
    public abstract virtual Task WriteInResponseAsync(string content, string contentType);
}
public interface Tweetinvi.Models.IWebhooksRequestInfoRetriever {
    public abstract virtual string GetPath();
    public abstract virtual IDictionary`2<string, String[]> GetQuery();
    public abstract virtual IDictionary`2<string, String[]> GetHeaders();
}
public interface Tweetinvi.Models.IWebhookSubscription {
    public string UserId { get; }
    public abstract virtual string get_UserId();
}
public interface Tweetinvi.Models.IWebhookSubscriptionsCount {
    public string AccountName { get; public set; }
    public string SubscriptionsCount { get; public set; }
    public string ProvisionedCount { get; public set; }
    public abstract virtual string get_AccountName();
    public abstract virtual void set_AccountName(string value);
    public abstract virtual string get_SubscriptionsCount();
    public abstract virtual void set_SubscriptionsCount(string value);
    public abstract virtual string get_ProvisionedCount();
    public abstract virtual void set_ProvisionedCount(string value);
}
public interface Tweetinvi.Models.IWoeIdLocation {
    public string Name { get; public set; }
    public long WoeId { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual long get_WoeId();
    public abstract virtual void set_WoeId(long value);
}
public enum Tweetinvi.Models.Language : Enum {
    public int value__;
    [LanguageAttribute("Undefined", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Undefined;
    [LanguageAttribute("Highland Popoluca", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language HighlandPopoluca;
    [LanguageAttribute("Abkhaz", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Abkhaz;
    [LanguageAttribute("Afar", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Afar;
    [LanguageAttribute("Afrikaans", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Afrikaans;
    [LanguageAttribute("Akan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Akan;
    [LanguageAttribute("Albanian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Albanian;
    [LanguageAttribute("Amharic", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Amharic;
    [LanguageAttribute("Arabic", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Arabic;
    [LanguageAttribute("Aragonese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Aragonese;
    [LanguageAttribute("Armenian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Armenian;
    [LanguageAttribute("Assamese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Assamese;
    [LanguageAttribute("Avar", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Avaric;
    [LanguageAttribute("Avestan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Avestan;
    [LanguageAttribute("Aymara", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Aymara;
    [LanguageAttribute("Azerbaijani", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Azerbaijani;
    [LanguageAttribute("Bambara", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bambara;
    [LanguageAttribute("Bashkir", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bashkir;
    [LanguageAttribute("Basque", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Basque;
    [LanguageAttribute("Belarusian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Belarusian;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bengali;
    [LanguageAttribute("Bihari", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bihari;
    [LanguageAttribute("Bislama", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bislama;
    [LanguageAttribute("Bosnian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bosnian;
    [LanguageAttribute("Breton", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Breton;
    [LanguageAttribute("British", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language British;
    [LanguageAttribute("Bulgarian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Bulgarian;
    [LanguageAttribute("Burmese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Burmese;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Catalan;
    [LanguageAttribute("Central Kurdish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language CentralKurdish;
    [LanguageAttribute("Chamorro", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Chamorro;
    [LanguageAttribute("Chechen", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Chechen;
    [LanguageAttribute("Chinese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Chinese;
    [LanguageAttribute("Chinese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language ChineseTraditional;
    [LanguageAttribute("Chinese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language ChineseSimplified;
    [LanguageAttribute("Chuvash", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Chuvash;
    [LanguageAttribute("Cornish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Cornish;
    [LanguageAttribute("Corsican", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Corsican;
    [LanguageAttribute("Cree", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Cree;
    [LanguageAttribute("Croatian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Croatian;
    [LanguageAttribute("Czech", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Czech;
    [LanguageAttribute("Danish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Danish;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Divehi;
    [LanguageAttribute("Dutch", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Dutch;
    [LanguageAttribute("Dzongkha", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Dzongkha;
    [LanguageAttribute("English", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language English;
    [LanguageAttribute("Esperanto", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Esperanto;
    [LanguageAttribute("Estonian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Estonian;
    [LanguageAttribute("Ewe", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ewe;
    [LanguageAttribute("Faroese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Faroese;
    [LanguageAttribute("Fijian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Fijian;
    [LanguageAttribute("Filipino", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Filipino;
    [LanguageAttribute("Finnish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Finnish;
    [LanguageAttribute("French", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language French;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Fula;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language ScottishGaelic;
    [LanguageAttribute("Galician", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Galician;
    [LanguageAttribute("Georgian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Georgian;
    [LanguageAttribute("German", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language German;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Greek;
    [LanguageAttribute("Guarani", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Guarani;
    [LanguageAttribute("Gujarati", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Gujarati;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Haitian;
    [LanguageAttribute("Hausa", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Hausa;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Hebrew;
    [LanguageAttribute("Herero", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Herero;
    [LanguageAttribute("Hindi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Hindi;
    [LanguageAttribute("Hiri Motu", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language HiriMotu;
    [LanguageAttribute("Hungarian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Hungarian;
    [LanguageAttribute("Interlingua", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Interlingua;
    [LanguageAttribute("Indonesian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Indonesian;
    [LanguageAttribute("Interlingue", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Interlingue;
    [LanguageAttribute("Irish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Irish;
    [LanguageAttribute("Igbo", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Igbo;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Inupiat;
    [LanguageAttribute("Ido", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ido;
    [LanguageAttribute("Icelandic", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Icelandic;
    [LanguageAttribute("Italian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Italian;
    [LanguageAttribute("Inuktitut", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Inuktitut;
    [LanguageAttribute("Japanese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Japanese;
    [LanguageAttribute("Javanese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Javanese;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Greenlandic;
    [LanguageAttribute("Kannada", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kannada;
    [LanguageAttribute("Kanuri", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kanuri;
    [LanguageAttribute("Kashmiri", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kashmiri;
    [LanguageAttribute("Kazakh", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kazakh;
    [LanguageAttribute("Khmer", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Khmer;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kikuyu;
    [LanguageAttribute("Kinyarwanda", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kinyarwanda;
    [LanguageAttribute("Kyrgyz", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kyrgyz;
    [LanguageAttribute("Komi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Komi;
    [LanguageAttribute("Kongo", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kongo;
    [LanguageAttribute("Korean", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Korean;
    [LanguageAttribute("Kurdish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kurdish;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kwanyama;
    [LanguageAttribute("Latin", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Latin;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Luxembourgish;
    [LanguageAttribute("Luganda", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Luganda;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Limburgish;
    [LanguageAttribute("Lingala", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Lingala;
    [LanguageAttribute("Lao", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Lao;
    [LanguageAttribute("Latvian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Latvian;
    [LanguageAttribute("Lithuanian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Lithuanian;
    [LanguageAttribute("Luba-Katanga", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language LubaKatanga;
    [LanguageAttribute("Manx", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Manx;
    [LanguageAttribute("Macedonian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Macedonian;
    [LanguageAttribute("Malagasy", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Malagasy;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Malay;
    [LanguageAttribute("Malayalam", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Malayalam;
    [LanguageAttribute("Maltese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Maltese;
    [LanguageAttribute("Māori", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Maori;
    [LanguageAttribute("Marathi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Marathi;
    [LanguageAttribute("Marshallese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Marshallese;
    [LanguageAttribute("Mongolian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Mongolian;
    [LanguageAttribute("Nauruan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Nauruan;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Navajo;
    [LanguageAttribute("Norwegian Bokmål", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language NorwegianBokmal;
    [LanguageAttribute("Zimbabwean Ndebele", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language ZimbabweanNdebele;
    [LanguageAttribute("Nepali", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Nepali;
    [LanguageAttribute("Ndonga", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ndonga;
    [LanguageAttribute("Norwegian Nynorsk", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language NorwegianNynorsk;
    [LanguageAttribute("Norwegian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Norwegian;
    [LanguageAttribute("Nuosu", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Nuosu;
    [LanguageAttribute("Southern Ndebele", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language SouthernNdebele;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Nyanja;
    [LanguageAttribute("Occitan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Occitan;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ojibwe;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language ChurchSlavonic;
    [LanguageAttribute("Oromo", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Oromo;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Oriya;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ossetian;
    [LanguageAttribute("Pali", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Pali;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Pashto;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Persian;
    [LanguageAttribute("Polish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Polish;
    [LanguageAttribute("Portuguese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Portuguese;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Punjabi;
    [LanguageAttribute("Quechua", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Quechua;
    [LanguageAttribute("Romansh", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Romansh;
    [LanguageAttribute("Kirundi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Kirundi;
    [LanguageAttribute("Romanian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Romanian;
    [LanguageAttribute("Russian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Russian;
    [LanguageAttribute("Sanskrit", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sanskrit;
    [LanguageAttribute("Sardinian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sardinian;
    [LanguageAttribute("Sindhi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sindhi;
    [LanguageAttribute("Northern Sami", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language NorthernSami;
    [LanguageAttribute("Samoan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Samoan;
    [LanguageAttribute("Sango", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sango;
    [LanguageAttribute("Serbian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Serbian;
    [LanguageAttribute("Shona", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Shona;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sinhala;
    [LanguageAttribute("Slovak", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Slovak;
    [LanguageAttribute("Slovenian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Slovenian;
    [LanguageAttribute("Somali", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Somali;
    [LanguageAttribute("Sotho", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sotho;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Spanish;
    [LanguageAttribute("Sundanese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Sundanese;
    [LanguageAttribute("Swahili", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Swahili;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Swazi;
    [LanguageAttribute("Swedish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Swedish;
    [LanguageAttribute("Tagalog", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tagalog;
    [LanguageAttribute("Tahitian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tahitian;
    [LanguageAttribute("Tajik", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tajik;
    [LanguageAttribute("Tamil", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tamil;
    [LanguageAttribute("Tatar", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tatar;
    [LanguageAttribute("Telugu", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Telugu;
    [LanguageAttribute("Thai", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Thai;
    [LanguageAttribute("Tigrinya", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tigrinya;
    [LanguageAttribute("Tibetan", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tibetan;
    [LanguageAttribute("Tonga", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tonga;
    [LanguageAttribute("Tswana", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tswana;
    [LanguageAttribute("Turkish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Turkish;
    [LanguageAttribute("Turkmen", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Turkmen;
    [LanguageAttribute("Tsonga", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Tsonga;
    [LanguageAttribute("Twi", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Twi;
    [LanguageAttribute("Ukrainian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Ukrainian;
    [LanguageAttribute("Urdu", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Urdu;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Uyghur;
    [LanguageAttribute("Uzbek", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Uzbek;
    [LanguageAttribute("Venda", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Venda;
    [LanguageAttribute("Vietnamese", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Vietnamese;
    [LanguageAttribute("Volapük", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Volapuk;
    [LanguageAttribute("Walloon", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Walloon;
    [LanguageAttribute("Welsh", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Welsh;
    [LanguageAttribute("Wolof", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Wolof;
    [LanguageAttribute("Western Frisian", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language WesternFrisian;
    [LanguageAttribute("Xhosa", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Xhosa;
    [LanguageAttribute("Yiddish", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Yiddish;
    [LanguageAttribute("Yoruba", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Yoruba;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Zhuang;
    [LanguageAttribute("Zulu", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language Zulu;
    [LanguageAttribute("Not Referenced", "Mono.Cecil.CustomAttributeArgument[]")]
public static Language UN_NotReferenced;
}
public enum Tweetinvi.Models.LanguageFilter : Enum {
    public int value__;
    [LanguageAttribute("Amharic", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Amharic;
    [LanguageAttribute("Arabic", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Arabic;
    [LanguageAttribute("Armenian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Armenian;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Bengali;
    [LanguageAttribute("Bosnian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Bosnian;
    [LanguageAttribute("Bulgarian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Bulgarian;
    [LanguageAttribute("Burmese", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Burmese;
    [LanguageAttribute("Central Kurdish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter CentralKurdish;
    [LanguageAttribute("Chinese", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Chinese;
    [LanguageAttribute("Croatian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Croatian;
    [LanguageAttribute("Danish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Danish;
    [LanguageAttribute("Dutch", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Dutch;
    [LanguageAttribute("English", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter English;
    [LanguageAttribute("Estonian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Estonian;
    [LanguageAttribute("Finnish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Finnish;
    [LanguageAttribute("French", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter French;
    [LanguageAttribute("Georgian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Georgian;
    [LanguageAttribute("German", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter German;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Greek;
    [LanguageAttribute("Gujarati", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Gujarati;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Hebrew;
    [LanguageAttribute("Hindi", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Hindi;
    [LanguageAttribute("Hungarian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Hungarian;
    [LanguageAttribute("Icelandic", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Icelandic;
    [LanguageAttribute("Indonesian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Indonesian;
    [LanguageAttribute("Italian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Italian;
    [LanguageAttribute("Japanese", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Japanese;
    [LanguageAttribute("Kannada", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Kannada;
    [LanguageAttribute("Khmer", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Khmer;
    [LanguageAttribute("Korean", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Korean;
    [LanguageAttribute("Lao", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Lao;
    [LanguageAttribute("Latvian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Latvian;
    [LanguageAttribute("Lithuanian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Lithuanian;
    [LanguageAttribute("Malayalam", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Malayalam;
    [LanguageAttribute("Marathi", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Marathi;
    [LanguageAttribute("Nepali", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Nepali;
    [LanguageAttribute("Norwegian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Norwegian;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Oriya;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Pashto;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Persian;
    [LanguageAttribute("Polish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Polish;
    [LanguageAttribute("Portuguese", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Portuguese;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Punjabi;
    [LanguageAttribute("Romanian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Romanian;
    [LanguageAttribute("Russian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Russian;
    [LanguageAttribute("Sindhi", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Sindhi;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Sinhala;
    [LanguageAttribute("Slovak", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Slovak;
    [LanguageAttribute("Slovenian", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Slovenian;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Spanish;
    [LanguageAttribute("Swedish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Swedish;
    [LanguageAttribute("Tagalog", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Tagalog;
    [LanguageAttribute("Tamil", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Tamil;
    [LanguageAttribute("Telugu", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Telugu;
    [LanguageAttribute("Thai", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Thai;
    [LanguageAttribute("Turkish", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Turkish;
    [LanguageAttribute("Urdu", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Urdu;
    [LanguageAttribute("Mono.Cecil.CustomAttributeArgument[]", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Uyghur;
    [LanguageAttribute("Vietnamese", "Mono.Cecil.CustomAttributeArgument[]")]
public static LanguageFilter Vietnamese;
}
public class Tweetinvi.Models.Location : object {
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinate1>k__BackingField;
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinate2>k__BackingField;
    public ICoordinates Coordinate1 { get; public set; }
    public ICoordinates Coordinate2 { get; public set; }
    public Location(ICoordinates coordinates1, ICoordinates coordinates2);
    public Location(double latitude1, double longitude1, double latitude2, double longitude2);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinate1();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinate1(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinate2();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinate2(ICoordinates value);
    public static bool CoordinatesLocatedIn(ICoordinates coordinates, ILocation location);
    public static bool CoordinatesLocatedIn(ICoordinates coordinates, ICoordinates boxCoordinates1, ICoordinates boxCoordinates2);
}
public enum Tweetinvi.Models.MediaCategory : Enum {
    public int value__;
    public static MediaCategory Image;
    public static MediaCategory Gif;
    public static MediaCategory Video;
    public static MediaCategory DmImage;
    public static MediaCategory DmGif;
    public static MediaCategory DmVideo;
}
public enum Tweetinvi.Models.MediaType : Enum {
    public int value__;
    public static MediaType Media;
    public static MediaType VideoMp4;
}
public enum Tweetinvi.Models.PlaceType : Enum {
    public int value__;
    public static PlaceType Undefined;
    public static PlaceType Admin;
    public static PlaceType Poi;
    public static PlaceType Neighborhood;
    public static PlaceType City;
    public static PlaceType Town;
    public static PlaceType AdministrativeArea1;
    public static PlaceType AdministrativeArea2;
    public static PlaceType AdministrativeArea3;
    public static PlaceType PostalCode;
    public static PlaceType Country;
    public static PlaceType SuperName;
    public static PlaceType Suburb;
    public static PlaceType Colloquial;
    public static PlaceType Continent;
    public static PlaceType TimeZone;
}
public enum Tweetinvi.Models.PrivacyMode : Enum {
    public int value__;
    public static PrivacyMode Private;
    public static PrivacyMode Public;
}
public enum Tweetinvi.Models.ProcessingState : Enum {
    public int value__;
    public static ProcessingState Undefined;
    public static ProcessingState Pending;
    public static ProcessingState InProgress;
    public static ProcessingState Succeeded;
    public static ProcessingState Failed;
}
public enum Tweetinvi.Models.QuickReplyType : Enum {
    public int value__;
    public static QuickReplyType UnrecognisedValue;
    [JsonEnumStringAttribute("options")]
public static QuickReplyType Options;
}
public class Tweetinvi.Models.ReadOnlyConsumerCredentials : object {
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BearerToken>k__BackingField;
    public string ConsumerKey { get; }
    public string ConsumerSecret { get; }
    public string BearerToken { get; }
    public ReadOnlyConsumerCredentials(string consumerKey, string consumerSecret);
    public ReadOnlyConsumerCredentials(string consumerKey, string consumerSecret, string bearerToken);
    public ReadOnlyConsumerCredentials(IReadOnlyConsumerCredentials source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public sealed virtual string get_BearerToken();
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Tweetinvi.Models.ReadOnlyTwitterCredentials : ReadOnlyConsumerCredentials {
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenSecret>k__BackingField;
    public string AccessToken { get; }
    public string AccessTokenSecret { get; }
    public ReadOnlyTwitterCredentials(string consumerKey, string consumerSecret);
    public ReadOnlyTwitterCredentials(string consumerKey, string consumerSecret, string bearerToken);
    public ReadOnlyTwitterCredentials(string consumerKey, string consumerSecret, string accessToken, string accessTokenSecret);
    public ReadOnlyTwitterCredentials(IReadOnlyConsumerCredentials consumerCredentials, string accessToken, string accessTokenSecret);
    public ReadOnlyTwitterCredentials(IReadOnlyConsumerCredentials source);
    public ReadOnlyTwitterCredentials(IReadOnlyTwitterCredentials source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccessToken();
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccessTokenSecret();
}
public enum Tweetinvi.Models.SearchResultType : Enum {
    public int value__;
    public static SearchResultType Mixed;
    public static SearchResultType Recent;
    public static SearchResultType Popular;
}
public enum Tweetinvi.Models.TimeZoneFromTwitter : Enum {
    public int value__;
    [TimeZoneFromTwitterAttribute("Pacific/Midway", "International Date Line West")]
public static TimeZoneFromTwitter International_Date_Line_West;
    [TimeZoneFromTwitterAttribute("Pacific/Midway", "Midway Island")]
public static TimeZoneFromTwitter Midway_Island;
    [TimeZoneFromTwitterAttribute("Pacific/Pago_Pago", "American Samoa")]
public static TimeZoneFromTwitter American_Samoa;
    [TimeZoneFromTwitterAttribute("Pacific/Honolulu", "Hawaii")]
public static TimeZoneFromTwitter Hawaii;
    [TimeZoneFromTwitterAttribute("America/Juneau", "Alaska")]
public static TimeZoneFromTwitter Alaska;
    [TimeZoneFromTwitterAttribute("America/Tijuana", "Tijuana")]
public static TimeZoneFromTwitter Tijuana;
    [TimeZoneFromTwitterAttribute("America/Phoenix", "Arizona")]
public static TimeZoneFromTwitter Arizona;
    [TimeZoneFromTwitterAttribute("America/Chihuahua", "Chihuahua")]
public static TimeZoneFromTwitter Chihuahua;
    [TimeZoneFromTwitterAttribute("America/Mazatlan", "Mazatlan")]
public static TimeZoneFromTwitter Mazatlan;
    [TimeZoneFromTwitterAttribute("America/Regina", "Saskatchewan")]
public static TimeZoneFromTwitter Saskatchewan;
    [TimeZoneFromTwitterAttribute("America/Mexico_City", "Guadalajara")]
public static TimeZoneFromTwitter Guadalajara;
    [TimeZoneFromTwitterAttribute("America/Mexico_City", "Mexico City")]
public static TimeZoneFromTwitter Mexico_City;
    [TimeZoneFromTwitterAttribute("America/Monterrey", "Monterrey")]
public static TimeZoneFromTwitter Monterrey;
    [TimeZoneFromTwitterAttribute("America/Guatemala", "Central America")]
public static TimeZoneFromTwitter Central_America;
    [TimeZoneFromTwitterAttribute("America/Bogota", "Bogota")]
public static TimeZoneFromTwitter Bogota;
    [TimeZoneFromTwitterAttribute("America/Lima", "Lima")]
public static TimeZoneFromTwitter Lima;
    [TimeZoneFromTwitterAttribute("America/Lima", "Quito")]
public static TimeZoneFromTwitter Quito;
    [TimeZoneFromTwitterAttribute("America/Caracas", "Caracas")]
public static TimeZoneFromTwitter Caracas;
    [TimeZoneFromTwitterAttribute("America/La_Paz", "La Paz")]
public static TimeZoneFromTwitter La_Paz;
    [TimeZoneFromTwitterAttribute("America/Santiago", "Santiago")]
public static TimeZoneFromTwitter Santiago;
    [TimeZoneFromTwitterAttribute("America/St_Johns", "Newfoundland")]
public static TimeZoneFromTwitter Newfoundland;
    [TimeZoneFromTwitterAttribute("America/Sao_Paulo", "Brasilia")]
public static TimeZoneFromTwitter Brasilia;
    [TimeZoneFromTwitterAttribute("America/Argentina/Buenos_Aires", "Buenos Aires")]
public static TimeZoneFromTwitter Buenos_Aires;
    [TimeZoneFromTwitterAttribute("America/Montevideo", "Montevideo")]
public static TimeZoneFromTwitter Montevideo;
    [TimeZoneFromTwitterAttribute("America/Guyana", "Georgetown")]
public static TimeZoneFromTwitter Georgetown;
    [TimeZoneFromTwitterAttribute("America/Godthab", "Greenland")]
public static TimeZoneFromTwitter Greenland;
    [TimeZoneFromTwitterAttribute("Atlantic/South_Georgia", "Mid-Atlantic")]
public static TimeZoneFromTwitter Mid_Atlantic;
    [TimeZoneFromTwitterAttribute("Atlantic/Azores", "Azores")]
public static TimeZoneFromTwitter Azores;
    [TimeZoneFromTwitterAttribute("Atlantic/Cape_Verde", "Cape Verde Is.")]
public static TimeZoneFromTwitter Cape_Verde_Island;
    [TimeZoneFromTwitterAttribute("Europe/Dublin", "Dublin")]
public static TimeZoneFromTwitter Dublin;
    [TimeZoneFromTwitterAttribute("Europe/London", "Edinburgh")]
public static TimeZoneFromTwitter Edinburgh;
    [TimeZoneFromTwitterAttribute("Europe/Lisbon", "Lisbon")]
public static TimeZoneFromTwitter Lisbon;
    [TimeZoneFromTwitterAttribute("Europe/London", "London")]
public static TimeZoneFromTwitter London;
    [TimeZoneFromTwitterAttribute("Africa/Casablanca", "Casablanca")]
public static TimeZoneFromTwitter Casablanca;
    [TimeZoneFromTwitterAttribute("Africa/Monrovia", "Monrovia")]
public static TimeZoneFromTwitter Monrovia;
    [TimeZoneFromTwitterAttribute("Etc/UTC", "UTC")]
public static TimeZoneFromTwitter UTC;
    [TimeZoneFromTwitterAttribute("Europe/Belgrade", "Belgrade")]
public static TimeZoneFromTwitter Belgrade;
    [TimeZoneFromTwitterAttribute("Europe/Bratislava", "Bratislava")]
public static TimeZoneFromTwitter Bratislava;
    [TimeZoneFromTwitterAttribute("Europe/Budapest", "Budapest")]
public static TimeZoneFromTwitter Budapest;
    [TimeZoneFromTwitterAttribute("Europe/Ljubljana", "Ljubljana")]
public static TimeZoneFromTwitter Ljubljana;
    [TimeZoneFromTwitterAttribute("Europe/Prague", "Prague")]
public static TimeZoneFromTwitter Prague;
    [TimeZoneFromTwitterAttribute("Europe/Sarajevo", "Sarajevo")]
public static TimeZoneFromTwitter Sarajevo;
    [TimeZoneFromTwitterAttribute("Europe/Skopje", "Skopje")]
public static TimeZoneFromTwitter Skopje;
    [TimeZoneFromTwitterAttribute("Europe/Warsaw", "Warsaw")]
public static TimeZoneFromTwitter Warsaw;
    [TimeZoneFromTwitterAttribute("Europe/Zagreb", "Zagreb")]
public static TimeZoneFromTwitter Zagreb;
    [TimeZoneFromTwitterAttribute("Europe/Brussels", "Brussels")]
public static TimeZoneFromTwitter Brussels;
    [TimeZoneFromTwitterAttribute("Europe/Copenhagen", "Copenhagen")]
public static TimeZoneFromTwitter Copenhagen;
    [TimeZoneFromTwitterAttribute("Europe/Madrid", "Madrid")]
public static TimeZoneFromTwitter Madrid;
    [TimeZoneFromTwitterAttribute("Europe/Paris", "Paris")]
public static TimeZoneFromTwitter Paris;
    [TimeZoneFromTwitterAttribute("Europe/Amsterdam", "Amsterdam")]
public static TimeZoneFromTwitter Amsterdam;
    [TimeZoneFromTwitterAttribute("Europe/Berlin", "Berlin")]
public static TimeZoneFromTwitter Berlin;
    [TimeZoneFromTwitterAttribute("Europe/Berlin", "Bern")]
public static TimeZoneFromTwitter Bern;
    [TimeZoneFromTwitterAttribute("Europe/Rome", "Rome")]
public static TimeZoneFromTwitter Rome;
    [TimeZoneFromTwitterAttribute("Europe/Stockholm", "Stockholm")]
public static TimeZoneFromTwitter Stockholm;
    [TimeZoneFromTwitterAttribute("Europe/Vienna", "Vienna")]
public static TimeZoneFromTwitter Vienna;
    [TimeZoneFromTwitterAttribute("Africa/Algiers", "West Central Africa")]
public static TimeZoneFromTwitter West_Central_Africa;
    [TimeZoneFromTwitterAttribute("Europe/Bucharest", "Bucharest")]
public static TimeZoneFromTwitter Bucharest;
    [TimeZoneFromTwitterAttribute("Africa/Cairo", "Cairo")]
public static TimeZoneFromTwitter Cairo;
    [TimeZoneFromTwitterAttribute("Europe/Helsinki", "Helsinki")]
public static TimeZoneFromTwitter Helsinki;
    [TimeZoneFromTwitterAttribute("Europe/Kiev", "Kyiv")]
public static TimeZoneFromTwitter Kyiv;
    [TimeZoneFromTwitterAttribute("Europe/Riga", "Riga")]
public static TimeZoneFromTwitter Riga;
    [TimeZoneFromTwitterAttribute("Europe/Sofia", "Sofia")]
public static TimeZoneFromTwitter Sofia;
    [TimeZoneFromTwitterAttribute("Europe/Tallinn", "Tallinn")]
public static TimeZoneFromTwitter Tallinn;
    [TimeZoneFromTwitterAttribute("Europe/Vilnius", "Vilnius")]
public static TimeZoneFromTwitter Vilnius;
    [TimeZoneFromTwitterAttribute("Europe/Athens", "Athens")]
public static TimeZoneFromTwitter Athens;
    [TimeZoneFromTwitterAttribute("Europe/Istanbul", "Istanbul")]
public static TimeZoneFromTwitter Istanbul;
    [TimeZoneFromTwitterAttribute("Europe/Minsk", "Minsk")]
public static TimeZoneFromTwitter Minsk;
    [TimeZoneFromTwitterAttribute("Asia/Jerusalem", "Jerusalem")]
public static TimeZoneFromTwitter Jerusalem;
    [TimeZoneFromTwitterAttribute("Africa/Harare", "Harare")]
public static TimeZoneFromTwitter Harare;
    [TimeZoneFromTwitterAttribute("Africa/Johannesburg", "Pretoria")]
public static TimeZoneFromTwitter Pretoria;
    [TimeZoneFromTwitterAttribute("Europe/Kaliningrad", "Kaliningrad")]
public static TimeZoneFromTwitter Kaliningrad;
    [TimeZoneFromTwitterAttribute("Europe/Moscow", "Moscow")]
public static TimeZoneFromTwitter Moscow;
    [TimeZoneFromTwitterAttribute("Europe/Moscow", "St. Petersburg")]
public static TimeZoneFromTwitter St_Petersburg;
    [TimeZoneFromTwitterAttribute("Europe/Volgograd", "Volgograd")]
public static TimeZoneFromTwitter Volgograd;
    [TimeZoneFromTwitterAttribute("Europe/Samara", "Samara")]
public static TimeZoneFromTwitter Samara;
    [TimeZoneFromTwitterAttribute("Asia/Kuwait", "Kuwait")]
public static TimeZoneFromTwitter Kuwait;
    [TimeZoneFromTwitterAttribute("Asia/Riyadh", "Riyadh")]
public static TimeZoneFromTwitter Riyadh;
    [TimeZoneFromTwitterAttribute("Africa/Nairobi", "Nairobi")]
public static TimeZoneFromTwitter Nairobi;
    [TimeZoneFromTwitterAttribute("Asia/Baghdad", "Baghdad")]
public static TimeZoneFromTwitter Baghdad;
    [TimeZoneFromTwitterAttribute("Asia/Tehran", "Tehran")]
public static TimeZoneFromTwitter Tehran;
    [TimeZoneFromTwitterAttribute("Asia/Muscat", "Abu Dhabi")]
public static TimeZoneFromTwitter Abu_Dhabi;
    [TimeZoneFromTwitterAttribute("Asia/Muscat", "Muscat")]
public static TimeZoneFromTwitter Muscat;
    [TimeZoneFromTwitterAttribute("Asia/Baku", "Baku")]
public static TimeZoneFromTwitter Baku;
    [TimeZoneFromTwitterAttribute("Asia/Tbilisi", "Tbilisi")]
public static TimeZoneFromTwitter Tbilisi;
    [TimeZoneFromTwitterAttribute("Asia/Yerevan", "Yerevan")]
public static TimeZoneFromTwitter Yerevan;
    [TimeZoneFromTwitterAttribute("Asia/Kabul", "Kabul")]
public static TimeZoneFromTwitter Kabul;
    [TimeZoneFromTwitterAttribute("Asia/Yekaterinburg", "Ekaterinburg")]
public static TimeZoneFromTwitter Ekaterinburg;
    [TimeZoneFromTwitterAttribute("Asia/Karachi", "Islamabad")]
public static TimeZoneFromTwitter Islamabad;
    [TimeZoneFromTwitterAttribute("Asia/Karachi", "Karachi")]
public static TimeZoneFromTwitter Karachi;
    [TimeZoneFromTwitterAttribute("Asia/Tashkent", "Tashkent")]
public static TimeZoneFromTwitter Tashkent;
    [TimeZoneFromTwitterAttribute("Asia/Kolkata", "Chennai")]
public static TimeZoneFromTwitter Chennai;
    [TimeZoneFromTwitterAttribute("Asia/Kolkata", "Kolkata")]
public static TimeZoneFromTwitter Kolkata;
    [TimeZoneFromTwitterAttribute("Asia/Kolkata", "Mumbai")]
public static TimeZoneFromTwitter Mumbai;
    [TimeZoneFromTwitterAttribute("Asia/Kolkata", "New Delhi")]
public static TimeZoneFromTwitter New_Delhi;
    [TimeZoneFromTwitterAttribute("Asia/Kathmandu", "Kathmandu")]
public static TimeZoneFromTwitter Kathmandu;
    [TimeZoneFromTwitterAttribute("Asia/Dhaka", "Astana")]
public static TimeZoneFromTwitter Astana;
    [TimeZoneFromTwitterAttribute("Asia/Dhaka", "Dhaka")]
public static TimeZoneFromTwitter Dhaka;
    [TimeZoneFromTwitterAttribute("Asia/Colombo", "Sri Jayawardenepura")]
public static TimeZoneFromTwitter Sri_Jayawardenepura;
    [TimeZoneFromTwitterAttribute("Asia/Almaty", "Almaty")]
public static TimeZoneFromTwitter Almaty;
    [TimeZoneFromTwitterAttribute("Asia/Novosibirsk", "Novosibirsk")]
public static TimeZoneFromTwitter Novosibirsk;
    [TimeZoneFromTwitterAttribute("Asia/Rangoon", "Rangoon")]
public static TimeZoneFromTwitter Rangoon;
    [TimeZoneFromTwitterAttribute("Asia/Bangkok", "Bangkok")]
public static TimeZoneFromTwitter Bangkok;
    [TimeZoneFromTwitterAttribute("Asia/Bangkok", "Hanoi")]
public static TimeZoneFromTwitter Hanoi;
    [TimeZoneFromTwitterAttribute("Asia/Jakarta", "Jakarta")]
public static TimeZoneFromTwitter Jakarta;
    [TimeZoneFromTwitterAttribute("Asia/Krasnoyarsk", "Krasnoyarsk")]
public static TimeZoneFromTwitter Krasnoyarsk;
    [TimeZoneFromTwitterAttribute("Asia/Shanghai", "Beijing")]
public static TimeZoneFromTwitter Beijing;
    [TimeZoneFromTwitterAttribute("Asia/Chongqing", "Chongqing")]
public static TimeZoneFromTwitter Chongqing;
    [TimeZoneFromTwitterAttribute("Asia/Hong_Kong", "Hong Kong")]
public static TimeZoneFromTwitter Hong_Kong;
    [TimeZoneFromTwitterAttribute("Asia/Urumqi", "Urumqi")]
public static TimeZoneFromTwitter Urumqi;
    [TimeZoneFromTwitterAttribute("Asia/Kuala_Lumpur", "Kuala Lumpur")]
public static TimeZoneFromTwitter Kuala_Lumpur;
    [TimeZoneFromTwitterAttribute("Asia/Singapore", "Singapore")]
public static TimeZoneFromTwitter Singapore;
    [TimeZoneFromTwitterAttribute("Asia/Taipei", "Taipei")]
public static TimeZoneFromTwitter Taipei;
    [TimeZoneFromTwitterAttribute("Australia/Perth", "Perth")]
public static TimeZoneFromTwitter Perth;
    [TimeZoneFromTwitterAttribute("Asia/Irkutsk", "Irkutsk")]
public static TimeZoneFromTwitter Irkutsk;
    [TimeZoneFromTwitterAttribute("Asia/Ulaanbaatar", "Ulaanbaatar")]
public static TimeZoneFromTwitter Ulaanbaatar;
    [TimeZoneFromTwitterAttribute("Asia/Seoul", "Seoul")]
public static TimeZoneFromTwitter Seoul;
    [TimeZoneFromTwitterAttribute("Asia/Tokyo", "Osaka")]
public static TimeZoneFromTwitter Osaka;
    [TimeZoneFromTwitterAttribute("Asia/Tokyo", "Sapporo")]
public static TimeZoneFromTwitter Sapporo;
    [TimeZoneFromTwitterAttribute("Asia/Tokyo", "Tokyo")]
public static TimeZoneFromTwitter Tokyo;
    [TimeZoneFromTwitterAttribute("Asia/Yakutsk", "Yakutsk")]
public static TimeZoneFromTwitter Yakutsk;
    [TimeZoneFromTwitterAttribute("Australia/Darwin", "Darwin")]
public static TimeZoneFromTwitter Darwin;
    [TimeZoneFromTwitterAttribute("Australia/Adelaide", "Adelaide")]
public static TimeZoneFromTwitter Adelaide;
    [TimeZoneFromTwitterAttribute("Australia/Melbourne", "Canberra")]
public static TimeZoneFromTwitter Canberra;
    [TimeZoneFromTwitterAttribute("Australia/Melbourne", "Melbourne")]
public static TimeZoneFromTwitter Melbourne;
    [TimeZoneFromTwitterAttribute("Australia/Sydney", "Sydney")]
public static TimeZoneFromTwitter Sydney;
    [TimeZoneFromTwitterAttribute("Australia/Brisbane", "Brisbane")]
public static TimeZoneFromTwitter Brisbane;
    [TimeZoneFromTwitterAttribute("Australia/Hobart", "Hobart")]
public static TimeZoneFromTwitter Hobart;
    [TimeZoneFromTwitterAttribute("Asia/Vladivostok", "Vladivostok")]
public static TimeZoneFromTwitter Vladivostok;
    [TimeZoneFromTwitterAttribute("Pacific/Guam", "Guam")]
public static TimeZoneFromTwitter Guam;
    [TimeZoneFromTwitterAttribute("Pacific/Port_Moresby", "Port Moresby")]
public static TimeZoneFromTwitter Port_Moresby;
    [TimeZoneFromTwitterAttribute("Asia/Magadan", "Magadan")]
public static TimeZoneFromTwitter Magadan;
    [TimeZoneFromTwitterAttribute("Asia/Srednekolymsk", "Srednekolymsk")]
public static TimeZoneFromTwitter Srednekolymsk;
    [TimeZoneFromTwitterAttribute("Pacific/Guadalcanal", "Solomon Is.")]
public static TimeZoneFromTwitter Solomon_Island;
    [TimeZoneFromTwitterAttribute("Pacific/Noumea", "New Caledonia")]
public static TimeZoneFromTwitter New_Caledonia;
    [TimeZoneFromTwitterAttribute("Pacific/Fiji", "Fiji")]
public static TimeZoneFromTwitter Fiji;
    [TimeZoneFromTwitterAttribute("Asia/Kamchatka", "Kamchatka")]
public static TimeZoneFromTwitter Kamchatka;
    [TimeZoneFromTwitterAttribute("Pacific/Majuro", "Marshall Is.")]
public static TimeZoneFromTwitter Marshall_Island;
    [TimeZoneFromTwitterAttribute("Pacific/Auckland", "Auckland")]
public static TimeZoneFromTwitter Auckland;
    [TimeZoneFromTwitterAttribute("Pacific/Auckland", "Wellington")]
public static TimeZoneFromTwitter Wellington;
    [TimeZoneFromTwitterAttribute("Pacific/Tongatapu", "Nuku'alofa")]
public static TimeZoneFromTwitter Nuku_alofa;
    [TimeZoneFromTwitterAttribute("Pacific/Fakaofo", "Tokelau Is.")]
public static TimeZoneFromTwitter Tokelau_Island;
    [TimeZoneFromTwitterAttribute("Pacific/Chatham", "Chatham Is.")]
public static TimeZoneFromTwitter Chatham_Island;
    [TimeZoneFromTwitterAttribute("Pacific/Apia", "Samoa")]
public static TimeZoneFromTwitter Samoa;
}
[ExtensionAttribute]
public static class Tweetinvi.Models.TimeZoneFromTwitterExtension : object {
    [ExtensionAttribute]
public static string ToTZinfo(TimeZoneFromTwitter language);
}
internal class Tweetinvi.Models.TimeZoneFromTwitterGenerator : object {
    internal static void PrintTwitterTimeZone();
}
public class Tweetinvi.Models.TweetIdentifier : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public TweetIdentifier(long tweetId);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    public virtual string ToString();
}
public class Tweetinvi.Models.TwitterCredentials : object {
    [CompilerGeneratedAttribute]
private string <ConsumerKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConsumerSecret>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BearerToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AccessTokenSecret>k__BackingField;
    public string ConsumerKey { get; public set; }
    public string ConsumerSecret { get; public set; }
    public string BearerToken { get; public set; }
    public string AccessToken { get; public set; }
    public string AccessTokenSecret { get; public set; }
    public TwitterCredentials(string consumerKey, string consumerSecret);
    public TwitterCredentials(string consumerKey, string consumerSecret, string bearerToken);
    public TwitterCredentials(string consumerKey, string consumerSecret, string accessToken, string accessTokenSecret);
    public TwitterCredentials(IReadOnlyTwitterCredentials source);
    public TwitterCredentials(IReadOnlyConsumerCredentials source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerKey();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsumerKey(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ConsumerSecret();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsumerSecret(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BearerToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BearerToken(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccessToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccessToken(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AccessTokenSecret();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccessTokenSecret(string value);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
public class Tweetinvi.Models.TwitterListIdentifier : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Slug>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserIdentifier <Owner>k__BackingField;
    public long Id { get; }
    public string Slug { get; }
    public long OwnerId { get; }
    public string OwnerScreenName { get; }
    public IUserIdentifier Owner { get; }
    public TwitterListIdentifier(long listId);
    public TwitterListIdentifier(string slug, long ownerId);
    public TwitterListIdentifier(string slug, string ownerScreenName);
    public TwitterListIdentifier(string slug, IUserIdentifier owner);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Slug();
    public sealed virtual long get_OwnerId();
    public sealed virtual string get_OwnerScreenName();
    [CompilerGeneratedAttribute]
public IUserIdentifier get_Owner();
}
[DefaultMemberAttribute("Item")]
public class Tweetinvi.Models.UserDictionary`1 : object {
    private Dictionary`2<string, T> _userIdDictionary;
    private Dictionary`2<string, T> _usernameDictionary;
    private Dictionary`2<IUserIdentifier, T> _userIdentifierDictionary;
    public T Item { get; }
    public T Item { get; }
    public T Item { get; }
    public sealed virtual T get_Item(long userId);
    public sealed virtual T get_Item(string username);
    public sealed virtual T get_Item(IUserIdentifier index);
    public void AddOrUpdate(IUserIdentifier user, T element);
}
public class Tweetinvi.Models.UserIdentifier : object {
    [CompilerGeneratedAttribute]
private long <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IdStr>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    public long Id { get; public set; }
    public string IdStr { get; public set; }
    public string ScreenName { get; public set; }
    public UserIdentifier(long userId);
    public UserIdentifier(string userScreenName);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(long value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IdStr();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IdStr(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public void set_ScreenName(string value);
    public virtual string ToString();
    public static UserIdentifier op_Implicit(long userId);
    public static UserIdentifier op_Implicit(string username);
}
public class Tweetinvi.Models.V2.CashtagV2 : object {
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [JsonPropertyAttribute("start")]
public int Start { get; public set; }
    [JsonPropertyAttribute("end")]
public int End { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [JsonPropertyAttribute("cashtag")]
unknown string Cashtag {private set; }
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    private void set_Cashtag(string value);
}
public class Tweetinvi.Models.V2.CoordinatesV2 : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Double[] <Coordinates>k__BackingField;
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("coordinates")]
public Double[] Coordinates { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Double[] get_Coordinates();
    [CompilerGeneratedAttribute]
public void set_Coordinates(Double[] value);
}
public class Tweetinvi.Models.V2.ErrorV2 : object {
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequiredEnrollment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RegistrationUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Detail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResourceType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameter>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [JsonPropertyAttribute("client_id")]
public string ClientId { get; public set; }
    [JsonPropertyAttribute("required_enrollment")]
public string RequiredEnrollment { get; public set; }
    [JsonPropertyAttribute("registration_url")]
public string RegistrationUrl { get; public set; }
    [JsonPropertyAttribute("title")]
public string Title { get; public set; }
    [JsonPropertyAttribute("detail")]
public string Detail { get; public set; }
    [JsonPropertyAttribute("reason")]
public string Reason { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("resource_type")]
public string ResourceType { get; public set; }
    [JsonPropertyAttribute("parameter")]
public string Parameter { get; public set; }
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_RequiredEnrollment();
    [CompilerGeneratedAttribute]
public void set_RequiredEnrollment(string value);
    [CompilerGeneratedAttribute]
public string get_RegistrationUrl();
    [CompilerGeneratedAttribute]
public void set_RegistrationUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Title();
    [CompilerGeneratedAttribute]
public void set_Title(string value);
    [CompilerGeneratedAttribute]
public string get_Detail();
    [CompilerGeneratedAttribute]
public void set_Detail(string value);
    [CompilerGeneratedAttribute]
public string get_Reason();
    [CompilerGeneratedAttribute]
public void set_Reason(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_ResourceType();
    [CompilerGeneratedAttribute]
public void set_ResourceType(string value);
    [CompilerGeneratedAttribute]
public string get_Parameter();
    [CompilerGeneratedAttribute]
public void set_Parameter(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
public class Tweetinvi.Models.V2.FilteredStreamMatchingRuleV2 : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
}
public class Tweetinvi.Models.V2.FilteredStreamRuleMetadataV2 : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <SentDate>k__BackingField;
    [JsonPropertyAttribute("sent")]
public DateTimeOffset SentDate { get; public set; }
    [CompilerGeneratedAttribute]
public DateTimeOffset get_SentDate();
    [CompilerGeneratedAttribute]
public void set_SentDate(DateTimeOffset value);
}
public class Tweetinvi.Models.V2.FilteredStreamRulesV2Response : object {
    [CompilerGeneratedAttribute]
private FilteredStreamRuleV2[] <Rules>k__BackingField;
    [CompilerGeneratedAttribute]
private FilteredStreamRuleMetadataV2 <Meta>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorV2[] <Errors>k__BackingField;
    [JsonPropertyAttribute("data")]
public FilteredStreamRuleV2[] Rules { get; public set; }
    [JsonPropertyAttribute("meta")]
public FilteredStreamRuleMetadataV2 Meta { get; public set; }
    [JsonPropertyAttribute("errors")]
public ErrorV2[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public FilteredStreamRuleV2[] get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(FilteredStreamRuleV2[] value);
    [CompilerGeneratedAttribute]
public FilteredStreamRuleMetadataV2 get_Meta();
    [CompilerGeneratedAttribute]
public void set_Meta(FilteredStreamRuleMetadataV2 value);
    [CompilerGeneratedAttribute]
public ErrorV2[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ErrorV2[] value);
}
public class Tweetinvi.Models.V2.FilteredStreamRuleV2 : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
}
public class Tweetinvi.Models.V2.FilteredStreamTweetV2Response : TweetV2Response {
    [CompilerGeneratedAttribute]
private FilteredStreamMatchingRuleV2[] <MatchingRules>k__BackingField;
    [JsonPropertyAttribute("matching_rules")]
public FilteredStreamMatchingRuleV2[] MatchingRules { get; public set; }
    [CompilerGeneratedAttribute]
public FilteredStreamMatchingRuleV2[] get_MatchingRules();
    [CompilerGeneratedAttribute]
public void set_MatchingRules(FilteredStreamMatchingRuleV2[] value);
}
public class Tweetinvi.Models.V2.GeoV2 : object {
    [CompilerGeneratedAttribute]
private CoordinatesV2 <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlaceId>k__BackingField;
    [JsonPropertyAttribute("coordinates")]
public CoordinatesV2 Coordinates { get; public set; }
    [JsonPropertyAttribute("place_id")]
public string PlaceId { get; public set; }
    [CompilerGeneratedAttribute]
public CoordinatesV2 get_Coordinates();
    [CompilerGeneratedAttribute]
public void set_Coordinates(CoordinatesV2 value);
    [CompilerGeneratedAttribute]
public string get_PlaceId();
    [CompilerGeneratedAttribute]
public void set_PlaceId(string value);
}
public class Tweetinvi.Models.V2.HashtagV2 : object {
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [JsonPropertyAttribute("start")]
public int Start { get; public set; }
    [JsonPropertyAttribute("end")]
public int End { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    [JsonPropertyAttribute("hashtag")]
unknown string Hashtag {public set; }
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
    public void set_Hashtag(string value);
}
public class Tweetinvi.Models.V2.MediaMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <Playback0Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Playback25Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Playback50Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Playback75Count>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Playback100Count>k__BackingField;
    [JsonPropertyAttribute("playback_0_count")]
public int Playback0Count { get; public set; }
    [JsonPropertyAttribute("playback_25_count")]
public int Playback25Count { get; public set; }
    [JsonPropertyAttribute("playback_50_count")]
public int Playback50Count { get; public set; }
    [JsonPropertyAttribute("playback_75_count")]
public int Playback75Count { get; public set; }
    [JsonPropertyAttribute("playback_100_count")]
public int Playback100Count { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Playback0Count();
    [CompilerGeneratedAttribute]
public void set_Playback0Count(int value);
    [CompilerGeneratedAttribute]
public int get_Playback25Count();
    [CompilerGeneratedAttribute]
public void set_Playback25Count(int value);
    [CompilerGeneratedAttribute]
public int get_Playback50Count();
    [CompilerGeneratedAttribute]
public void set_Playback50Count(int value);
    [CompilerGeneratedAttribute]
public int get_Playback75Count();
    [CompilerGeneratedAttribute]
public void set_Playback75Count(int value);
    [CompilerGeneratedAttribute]
public int get_Playback100Count();
    [CompilerGeneratedAttribute]
public void set_Playback100Count(int value);
}
public class Tweetinvi.Models.V2.MediaNonPublicMetricsV2 : MediaMetricsV2 {
}
public class Tweetinvi.Models.V2.MediaOrganicMetricsV2 : MediaMetricsV2 {
    [CompilerGeneratedAttribute]
private int <ViewCount>k__BackingField;
    [JsonPropertyAttribute("view_count")]
public int ViewCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ViewCount();
    [CompilerGeneratedAttribute]
public void set_ViewCount(int value);
}
public class Tweetinvi.Models.V2.MediaPromotedMetricsV2 : MediaMetricsV2 {
    [CompilerGeneratedAttribute]
private int <ViewCount>k__BackingField;
    [JsonPropertyAttribute("view_count")]
public int ViewCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ViewCount();
    [CompilerGeneratedAttribute]
public void set_ViewCount(int value);
}
public class Tweetinvi.Models.V2.MediaPublicMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <ViewCount>k__BackingField;
    [JsonPropertyAttribute("view_count")]
public int ViewCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ViewCount();
    [CompilerGeneratedAttribute]
public void set_ViewCount(int value);
}
public class Tweetinvi.Models.V2.MediaV2 : object {
    [CompilerGeneratedAttribute]
private int <DurationMs>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MediaKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PreviewImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaNonPublicMetricsV2 <NonPublicMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaOrganicMetricsV2 <OrganicMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaPromotedMetricsV2 <PromotedMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaPublicMetricsV2 <PublicMetrics>k__BackingField;
    [JsonPropertyAttribute("duration_ms")]
public int DurationMs { get; public set; }
    [JsonPropertyAttribute("height")]
public int Height { get; public set; }
    [JsonPropertyAttribute("media_key")]
public string MediaKey { get; public set; }
    [JsonPropertyAttribute("preview_image_url")]
public string PreviewImageUrl { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("width")]
public int Width { get; public set; }
    [JsonPropertyAttribute("non_public_metrics")]
public MediaNonPublicMetricsV2 NonPublicMetrics { get; public set; }
    [JsonPropertyAttribute("organic_metrics")]
public MediaOrganicMetricsV2 OrganicMetrics { get; public set; }
    [JsonPropertyAttribute("promoted_metrics")]
public MediaPromotedMetricsV2 PromotedMetrics { get; public set; }
    [JsonPropertyAttribute("public_metrics")]
public MediaPublicMetricsV2 PublicMetrics { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DurationMs();
    [CompilerGeneratedAttribute]
public void set_DurationMs(int value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
    [CompilerGeneratedAttribute]
public string get_MediaKey();
    [CompilerGeneratedAttribute]
public void set_MediaKey(string value);
    [CompilerGeneratedAttribute]
public string get_PreviewImageUrl();
    [CompilerGeneratedAttribute]
public void set_PreviewImageUrl(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
    [CompilerGeneratedAttribute]
public MediaNonPublicMetricsV2 get_NonPublicMetrics();
    [CompilerGeneratedAttribute]
public void set_NonPublicMetrics(MediaNonPublicMetricsV2 value);
    [CompilerGeneratedAttribute]
public MediaOrganicMetricsV2 get_OrganicMetrics();
    [CompilerGeneratedAttribute]
public void set_OrganicMetrics(MediaOrganicMetricsV2 value);
    [CompilerGeneratedAttribute]
public MediaPromotedMetricsV2 get_PromotedMetrics();
    [CompilerGeneratedAttribute]
public void set_PromotedMetrics(MediaPromotedMetricsV2 value);
    [CompilerGeneratedAttribute]
public MediaPublicMetricsV2 get_PublicMetrics();
    [CompilerGeneratedAttribute]
public void set_PublicMetrics(MediaPublicMetricsV2 value);
}
public class Tweetinvi.Models.V2.PlaceGeoV2 : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private Double[] <Bbox>k__BackingField;
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [JsonPropertyAttribute("bbox")]
public Double[] Bbox { get; public set; }
    [DynamicAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonPropertyAttribute("properties")]
public Dictionary`2<string, object> Properties { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public Double[] get_Bbox();
    [CompilerGeneratedAttribute]
public void set_Bbox(Double[] value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(Dictionary`2<string, object> value);
}
public class Tweetinvi.Models.V2.PlaceV2 : object {
    [CompilerGeneratedAttribute]
private String[] <ContainedWithin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Country>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CountryCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FullName>k__BackingField;
    [CompilerGeneratedAttribute]
private PlaceGeoV2 <PlaceGeo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlaceType>k__BackingField;
    [JsonPropertyAttribute("contained_within")]
public String[] ContainedWithin { get; public set; }
    [JsonPropertyAttribute("country")]
public string Country { get; public set; }
    [JsonPropertyAttribute("country_code")]
public string CountryCode { get; public set; }
    [JsonPropertyAttribute("full_name")]
public string FullName { get; public set; }
    [JsonPropertyAttribute("geo")]
public PlaceGeoV2 PlaceGeo { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("place_type")]
public string PlaceType { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_ContainedWithin();
    [CompilerGeneratedAttribute]
public void set_ContainedWithin(String[] value);
    [CompilerGeneratedAttribute]
public string get_Country();
    [CompilerGeneratedAttribute]
public void set_Country(string value);
    [CompilerGeneratedAttribute]
public string get_CountryCode();
    [CompilerGeneratedAttribute]
public void set_CountryCode(string value);
    [CompilerGeneratedAttribute]
public string get_FullName();
    [CompilerGeneratedAttribute]
public void set_FullName(string value);
    [CompilerGeneratedAttribute]
public PlaceGeoV2 get_PlaceGeo();
    [CompilerGeneratedAttribute]
public void set_PlaceGeo(PlaceGeoV2 value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_PlaceType();
    [CompilerGeneratedAttribute]
public void set_PlaceType(string value);
}
public class Tweetinvi.Models.V2.PollOptionV2 : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Position>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Votes>k__BackingField;
    [JsonPropertyAttribute("label")]
public string Label { get; public set; }
    [JsonPropertyAttribute("position")]
public int Position { get; public set; }
    [JsonPropertyAttribute("votes")]
public int Votes { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public int get_Position();
    [CompilerGeneratedAttribute]
public void set_Position(int value);
    [CompilerGeneratedAttribute]
public int get_Votes();
    [CompilerGeneratedAttribute]
public void set_Votes(int value);
}
public class Tweetinvi.Models.V2.PollV2 : object {
    [CompilerGeneratedAttribute]
private int <DurationMinutes>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <EndDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private PollOptionV2[] <PollOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VotingStatus>k__BackingField;
    [JsonPropertyAttribute("duration_minutes")]
public int DurationMinutes { get; public set; }
    [JsonPropertyAttribute("end_datetime")]
public DateTimeOffset EndDate { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("options")]
public PollOptionV2[] PollOptions { get; public set; }
    [JsonPropertyAttribute("voting_status")]
public string VotingStatus { get; public set; }
    [CompilerGeneratedAttribute]
public int get_DurationMinutes();
    [CompilerGeneratedAttribute]
public void set_DurationMinutes(int value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_EndDate();
    [CompilerGeneratedAttribute]
public void set_EndDate(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public PollOptionV2[] get_PollOptions();
    [CompilerGeneratedAttribute]
public void set_PollOptions(PollOptionV2[] value);
    [CompilerGeneratedAttribute]
public string get_VotingStatus();
    [CompilerGeneratedAttribute]
public void set_VotingStatus(string value);
}
public class Tweetinvi.Models.V2.ReferencedTweetV2 : object {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Tweetinvi.Models.V2.SearchTweetsMetadataV2 : object {
    [CompilerGeneratedAttribute]
private string <NewestId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OldestId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ResultCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextToken>k__BackingField;
    [JsonPropertyAttribute("newest_id")]
public string NewestId { get; public set; }
    [JsonPropertyAttribute("oldest_id")]
public string OldestId { get; public set; }
    [JsonPropertyAttribute("result_count")]
public int ResultCount { get; public set; }
    [JsonPropertyAttribute("next_token")]
public string NextToken { get; public set; }
    [CompilerGeneratedAttribute]
public string get_NewestId();
    [CompilerGeneratedAttribute]
public void set_NewestId(string value);
    [CompilerGeneratedAttribute]
public string get_OldestId();
    [CompilerGeneratedAttribute]
public void set_OldestId(string value);
    [CompilerGeneratedAttribute]
public int get_ResultCount();
    [CompilerGeneratedAttribute]
public void set_ResultCount(int value);
    [CompilerGeneratedAttribute]
public string get_NextToken();
    [CompilerGeneratedAttribute]
public void set_NextToken(string value);
}
public class Tweetinvi.Models.V2.SearchTweetsV2Response : TweetsV2Response {
    [CompilerGeneratedAttribute]
private SearchTweetsMetadataV2 <SearchMetadata>k__BackingField;
    [JsonPropertyAttribute("meta")]
public SearchTweetsMetadataV2 SearchMetadata { get; public set; }
    [CompilerGeneratedAttribute]
public SearchTweetsMetadataV2 get_SearchMetadata();
    [CompilerGeneratedAttribute]
public void set_SearchMetadata(SearchTweetsMetadataV2 value);
}
public class Tweetinvi.Models.V2.TweetAnnotationV2 : object {
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NormalizedText>k__BackingField;
    [CompilerGeneratedAttribute]
private double <Probability>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [JsonPropertyAttribute("end")]
public int End { get; public set; }
    [JsonPropertyAttribute("normalized_text")]
public string NormalizedText { get; public set; }
    [JsonPropertyAttribute("probability")]
public double Probability { get; public set; }
    [JsonPropertyAttribute("start")]
public int Start { get; public set; }
    [JsonPropertyAttribute("type")]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_NormalizedText();
    [CompilerGeneratedAttribute]
public void set_NormalizedText(string value);
    [CompilerGeneratedAttribute]
public double get_Probability();
    [CompilerGeneratedAttribute]
public void set_Probability(double value);
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public class Tweetinvi.Models.V2.TweetAttachmentsV2 : object {
    [CompilerGeneratedAttribute]
private String[] <MediaKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <PollIds>k__BackingField;
    [JsonPropertyAttribute("media_keys")]
public String[] MediaKeys { get; public set; }
    [JsonPropertyAttribute("poll_ids")]
public String[] PollIds { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_MediaKeys();
    [CompilerGeneratedAttribute]
public void set_MediaKeys(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_PollIds();
    [CompilerGeneratedAttribute]
public void set_PollIds(String[] value);
}
public class Tweetinvi.Models.V2.TweetContextAnnotationDomainV2 : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Tweetinvi.Models.V2.TweetContextAnnotationEntityV2 : object {
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
public class Tweetinvi.Models.V2.TweetContextAnnotationV2 : object {
    [CompilerGeneratedAttribute]
private TweetContextAnnotationDomainV2 <Domain>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetContextAnnotationEntityV2 <Entity>k__BackingField;
    [JsonPropertyAttribute("domain")]
public TweetContextAnnotationDomainV2 Domain { get; public set; }
    [JsonPropertyAttribute("entity")]
public TweetContextAnnotationEntityV2 Entity { get; public set; }
    [CompilerGeneratedAttribute]
public TweetContextAnnotationDomainV2 get_Domain();
    [CompilerGeneratedAttribute]
public void set_Domain(TweetContextAnnotationDomainV2 value);
    [CompilerGeneratedAttribute]
public TweetContextAnnotationEntityV2 get_Entity();
    [CompilerGeneratedAttribute]
public void set_Entity(TweetContextAnnotationEntityV2 value);
}
public class Tweetinvi.Models.V2.TweetEntitiesV2 : object {
    [CompilerGeneratedAttribute]
private TweetAnnotationV2[] <Annotations>k__BackingField;
    [CompilerGeneratedAttribute]
private CashtagV2[] <Cashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private HashtagV2[] <Hashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private UserMentionV2[] <Mentions>k__BackingField;
    [CompilerGeneratedAttribute]
private UrlV2[] <Urls>k__BackingField;
    [JsonPropertyAttribute("annotations")]
public TweetAnnotationV2[] Annotations { get; public set; }
    [JsonPropertyAttribute("cashtags")]
public CashtagV2[] Cashtags { get; public set; }
    [JsonPropertyAttribute("hashtags")]
public HashtagV2[] Hashtags { get; public set; }
    [JsonPropertyAttribute("mentions")]
public UserMentionV2[] Mentions { get; public set; }
    [JsonPropertyAttribute("urls")]
public UrlV2[] Urls { get; public set; }
    [CompilerGeneratedAttribute]
public TweetAnnotationV2[] get_Annotations();
    [CompilerGeneratedAttribute]
public void set_Annotations(TweetAnnotationV2[] value);
    [CompilerGeneratedAttribute]
public CashtagV2[] get_Cashtags();
    [CompilerGeneratedAttribute]
public void set_Cashtags(CashtagV2[] value);
    [CompilerGeneratedAttribute]
public HashtagV2[] get_Hashtags();
    [CompilerGeneratedAttribute]
public void set_Hashtags(HashtagV2[] value);
    [CompilerGeneratedAttribute]
public UserMentionV2[] get_Mentions();
    [CompilerGeneratedAttribute]
public void set_Mentions(UserMentionV2[] value);
    [CompilerGeneratedAttribute]
public UrlV2[] get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(UrlV2[] value);
}
public class Tweetinvi.Models.V2.TweetHideStateV2 : object {
    [CompilerGeneratedAttribute]
private bool <Hidden>k__BackingField;
    [JsonPropertyAttribute("hidden")]
public bool Hidden { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Hidden();
    [CompilerGeneratedAttribute]
public void set_Hidden(bool value);
}
public class Tweetinvi.Models.V2.TweetHideV2Response : object {
    [CompilerGeneratedAttribute]
private TweetHideStateV2 <TweetHideState>k__BackingField;
    [JsonPropertyAttribute("data")]
public TweetHideStateV2 TweetHideState { get; public set; }
    [CompilerGeneratedAttribute]
public TweetHideStateV2 get_TweetHideState();
    [CompilerGeneratedAttribute]
public void set_TweetHideState(TweetHideStateV2 value);
}
public class Tweetinvi.Models.V2.TweetIncludesV2 : object {
    [CompilerGeneratedAttribute]
private MediaV2[] <Media>k__BackingField;
    [CompilerGeneratedAttribute]
private PlaceV2[] <Places>k__BackingField;
    [CompilerGeneratedAttribute]
private PollV2[] <Polls>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetV2[] <Tweets>k__BackingField;
    [CompilerGeneratedAttribute]
private UserV2[] <Users>k__BackingField;
    [JsonPropertyAttribute("media")]
public MediaV2[] Media { get; public set; }
    [JsonPropertyAttribute("places")]
public PlaceV2[] Places { get; public set; }
    [JsonPropertyAttribute("polls")]
public PollV2[] Polls { get; public set; }
    [JsonPropertyAttribute("tweets")]
public TweetV2[] Tweets { get; public set; }
    [JsonPropertyAttribute("users")]
public UserV2[] Users { get; public set; }
    [CompilerGeneratedAttribute]
public MediaV2[] get_Media();
    [CompilerGeneratedAttribute]
public void set_Media(MediaV2[] value);
    [CompilerGeneratedAttribute]
public PlaceV2[] get_Places();
    [CompilerGeneratedAttribute]
public void set_Places(PlaceV2[] value);
    [CompilerGeneratedAttribute]
public PollV2[] get_Polls();
    [CompilerGeneratedAttribute]
public void set_Polls(PollV2[] value);
    [CompilerGeneratedAttribute]
public TweetV2[] get_Tweets();
    [CompilerGeneratedAttribute]
public void set_Tweets(TweetV2[] value);
    [CompilerGeneratedAttribute]
public UserV2[] get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(UserV2[] value);
}
public class Tweetinvi.Models.V2.TweetMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <ImpressionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LikeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReplyCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetweetCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UrlLinkClicks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserProfileClicks>k__BackingField;
    [JsonPropertyAttribute("impression_count")]
public int ImpressionCount { get; public set; }
    [JsonPropertyAttribute("like_count")]
public int LikeCount { get; public set; }
    [JsonPropertyAttribute("reply_count")]
public int ReplyCount { get; public set; }
    [JsonPropertyAttribute("retweet_count")]
public int RetweetCount { get; public set; }
    [JsonPropertyAttribute("url_link_clicks")]
public int UrlLinkClicks { get; public set; }
    [JsonPropertyAttribute("user_profile_clicks")]
public int UserProfileClicks { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ImpressionCount();
    [CompilerGeneratedAttribute]
public void set_ImpressionCount(int value);
    [CompilerGeneratedAttribute]
public int get_LikeCount();
    [CompilerGeneratedAttribute]
public void set_LikeCount(int value);
    [CompilerGeneratedAttribute]
public int get_ReplyCount();
    [CompilerGeneratedAttribute]
public void set_ReplyCount(int value);
    [CompilerGeneratedAttribute]
public int get_RetweetCount();
    [CompilerGeneratedAttribute]
public void set_RetweetCount(int value);
    [CompilerGeneratedAttribute]
public int get_UrlLinkClicks();
    [CompilerGeneratedAttribute]
public void set_UrlLinkClicks(int value);
    [CompilerGeneratedAttribute]
public int get_UserProfileClicks();
    [CompilerGeneratedAttribute]
public void set_UserProfileClicks(int value);
}
public class Tweetinvi.Models.V2.TweetNonPublicMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <ImpressionCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UrlLinkClicks>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserProfileClicks>k__BackingField;
    [JsonPropertyAttribute("impression_count")]
public int ImpressionCount { get; public set; }
    [JsonPropertyAttribute("url_link_clicks")]
public int UrlLinkClicks { get; public set; }
    [JsonPropertyAttribute("user_profile_clicks")]
public int UserProfileClicks { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ImpressionCount();
    [CompilerGeneratedAttribute]
public void set_ImpressionCount(int value);
    [CompilerGeneratedAttribute]
public int get_UrlLinkClicks();
    [CompilerGeneratedAttribute]
public void set_UrlLinkClicks(int value);
    [CompilerGeneratedAttribute]
public int get_UserProfileClicks();
    [CompilerGeneratedAttribute]
public void set_UserProfileClicks(int value);
}
public class Tweetinvi.Models.V2.TweetOrganicMetricsV2 : TweetMetricsV2 {
}
public class Tweetinvi.Models.V2.TweetPromotedMetricsV2 : TweetMetricsV2 {
}
public class Tweetinvi.Models.V2.TweetPublicMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <LikeCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <QuoteCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ReplyCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetweetCount>k__BackingField;
    [JsonPropertyAttribute("like_count")]
public int LikeCount { get; public set; }
    [JsonPropertyAttribute("quote_count")]
public int QuoteCount { get; public set; }
    [JsonPropertyAttribute("reply_count")]
public int ReplyCount { get; public set; }
    [JsonPropertyAttribute("retweet_count")]
public int RetweetCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_LikeCount();
    [CompilerGeneratedAttribute]
public void set_LikeCount(int value);
    [CompilerGeneratedAttribute]
public int get_QuoteCount();
    [CompilerGeneratedAttribute]
public void set_QuoteCount(int value);
    [CompilerGeneratedAttribute]
public int get_ReplyCount();
    [CompilerGeneratedAttribute]
public void set_ReplyCount(int value);
    [CompilerGeneratedAttribute]
public int get_RetweetCount();
    [CompilerGeneratedAttribute]
public void set_RetweetCount(int value);
}
public class Tweetinvi.Models.V2.TweetsV2Response : object {
    [CompilerGeneratedAttribute]
private TweetV2[] <Tweets>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetIncludesV2 <Includes>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorV2[] <Errors>k__BackingField;
    [JsonPropertyAttribute("data")]
public TweetV2[] Tweets { get; public set; }
    [JsonPropertyAttribute("includes")]
public TweetIncludesV2 Includes { get; public set; }
    [JsonPropertyAttribute("errors")]
public ErrorV2[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public TweetV2[] get_Tweets();
    [CompilerGeneratedAttribute]
public void set_Tweets(TweetV2[] value);
    [CompilerGeneratedAttribute]
public TweetIncludesV2 get_Includes();
    [CompilerGeneratedAttribute]
public void set_Includes(TweetIncludesV2 value);
    [CompilerGeneratedAttribute]
public ErrorV2[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ErrorV2[] value);
}
public class Tweetinvi.Models.V2.TweetV2 : object {
    [CompilerGeneratedAttribute]
private TweetAttachmentsV2 <Attachments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorId>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetContextAnnotationV2[] <ContextAnnotations>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConversationId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetEntitiesV2 <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private GeoV2 <Geo>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InReplyToUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PossiblySensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private ReferencedTweetV2[] <ReferencedTweets>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetWithheldInfoV2 <Withheld>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetNonPublicMetricsV2 <NonPublicMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetOrganicMetricsV2 <OrganicMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetPromotedMetricsV2 <PromotedMetrics>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetPublicMetricsV2 <PublicMetrics>k__BackingField;
    [JsonPropertyAttribute("attachments")]
public TweetAttachmentsV2 Attachments { get; public set; }
    [JsonPropertyAttribute("author_id")]
public string AuthorId { get; public set; }
    [JsonPropertyAttribute("context_annotations")]
public TweetContextAnnotationV2[] ContextAnnotations { get; public set; }
    [JsonPropertyAttribute("conversation_id")]
public string ConversationId { get; public set; }
    [JsonPropertyAttribute("created_at")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("entities")]
public TweetEntitiesV2 Entities { get; public set; }
    [JsonPropertyAttribute("geo")]
public GeoV2 Geo { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("in_reply_to_user_id")]
public string InReplyToUserId { get; public set; }
    [JsonPropertyAttribute("lang")]
public string Lang { get; public set; }
    [JsonPropertyAttribute("possibly_sensitive")]
public bool PossiblySensitive { get; public set; }
    [JsonPropertyAttribute("referenced_tweets")]
public ReferencedTweetV2[] ReferencedTweets { get; public set; }
    [JsonPropertyAttribute("source")]
public string Source { get; public set; }
    [JsonPropertyAttribute("text")]
public string Text { get; public set; }
    [JsonPropertyAttribute("withheld")]
public TweetWithheldInfoV2 Withheld { get; public set; }
    [JsonPropertyAttribute("non_public_metrics")]
public TweetNonPublicMetricsV2 NonPublicMetrics { get; public set; }
    [JsonPropertyAttribute("organic_metrics")]
public TweetOrganicMetricsV2 OrganicMetrics { get; public set; }
    [JsonPropertyAttribute("promoted_metrics")]
public TweetPromotedMetricsV2 PromotedMetrics { get; public set; }
    [JsonPropertyAttribute("public_metrics")]
public TweetPublicMetricsV2 PublicMetrics { get; public set; }
    [CompilerGeneratedAttribute]
public TweetAttachmentsV2 get_Attachments();
    [CompilerGeneratedAttribute]
public void set_Attachments(TweetAttachmentsV2 value);
    [CompilerGeneratedAttribute]
public string get_AuthorId();
    [CompilerGeneratedAttribute]
public void set_AuthorId(string value);
    [CompilerGeneratedAttribute]
public TweetContextAnnotationV2[] get_ContextAnnotations();
    [CompilerGeneratedAttribute]
public void set_ContextAnnotations(TweetContextAnnotationV2[] value);
    [CompilerGeneratedAttribute]
public string get_ConversationId();
    [CompilerGeneratedAttribute]
public void set_ConversationId(string value);
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public TweetEntitiesV2 get_Entities();
    [CompilerGeneratedAttribute]
public void set_Entities(TweetEntitiesV2 value);
    [CompilerGeneratedAttribute]
public GeoV2 get_Geo();
    [CompilerGeneratedAttribute]
public void set_Geo(GeoV2 value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_InReplyToUserId();
    [CompilerGeneratedAttribute]
public void set_InReplyToUserId(string value);
    [CompilerGeneratedAttribute]
public string get_Lang();
    [CompilerGeneratedAttribute]
public void set_Lang(string value);
    [CompilerGeneratedAttribute]
public bool get_PossiblySensitive();
    [CompilerGeneratedAttribute]
public void set_PossiblySensitive(bool value);
    [CompilerGeneratedAttribute]
public ReferencedTweetV2[] get_ReferencedTweets();
    [CompilerGeneratedAttribute]
public void set_ReferencedTweets(ReferencedTweetV2[] value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public TweetWithheldInfoV2 get_Withheld();
    [CompilerGeneratedAttribute]
public void set_Withheld(TweetWithheldInfoV2 value);
    [CompilerGeneratedAttribute]
public TweetNonPublicMetricsV2 get_NonPublicMetrics();
    [CompilerGeneratedAttribute]
public void set_NonPublicMetrics(TweetNonPublicMetricsV2 value);
    [CompilerGeneratedAttribute]
public TweetOrganicMetricsV2 get_OrganicMetrics();
    [CompilerGeneratedAttribute]
public void set_OrganicMetrics(TweetOrganicMetricsV2 value);
    [CompilerGeneratedAttribute]
public TweetPromotedMetricsV2 get_PromotedMetrics();
    [CompilerGeneratedAttribute]
public void set_PromotedMetrics(TweetPromotedMetricsV2 value);
    [CompilerGeneratedAttribute]
public TweetPublicMetricsV2 get_PublicMetrics();
    [CompilerGeneratedAttribute]
public void set_PublicMetrics(TweetPublicMetricsV2 value);
}
public class Tweetinvi.Models.V2.TweetV2Response : object {
    [CompilerGeneratedAttribute]
private TweetV2 <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetIncludesV2 <Includes>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorV2[] <Errors>k__BackingField;
    [JsonPropertyAttribute("data")]
public TweetV2 Tweet { get; public set; }
    [JsonPropertyAttribute("includes")]
public TweetIncludesV2 Includes { get; public set; }
    [JsonPropertyAttribute("errors")]
public ErrorV2[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public TweetV2 get_Tweet();
    [CompilerGeneratedAttribute]
public void set_Tweet(TweetV2 value);
    [CompilerGeneratedAttribute]
public TweetIncludesV2 get_Includes();
    [CompilerGeneratedAttribute]
public void set_Includes(TweetIncludesV2 value);
    [CompilerGeneratedAttribute]
public ErrorV2[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ErrorV2[] value);
}
public class Tweetinvi.Models.V2.TweetWithheldInfoV2 : WithheldInfoV2 {
    [CompilerGeneratedAttribute]
private bool <Copyright>k__BackingField;
    [JsonPropertyAttribute("copyright")]
public bool Copyright { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Copyright();
    [CompilerGeneratedAttribute]
public void set_Copyright(bool value);
}
public class Tweetinvi.Models.V2.UrlsV2 : object {
    [CompilerGeneratedAttribute]
private UrlV2[] <Urls>k__BackingField;
    [JsonPropertyAttribute("urls")]
public UrlV2[] Urls { get; public set; }
    [CompilerGeneratedAttribute]
public UrlV2[] get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(UrlV2[] value);
}
public class Tweetinvi.Models.V2.UrlV2 : object {
    [CompilerGeneratedAttribute]
private string <DisplayUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExpandedUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnwoundUrl>k__BackingField;
    [JsonPropertyAttribute("display_url")]
public string DisplayUrl { get; public set; }
    [JsonPropertyAttribute("end")]
public int End { get; public set; }
    [JsonPropertyAttribute("expanded_url")]
public string ExpandedUrl { get; public set; }
    [JsonPropertyAttribute("start")]
public int Start { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("unwound_url")]
public string UnwoundUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DisplayUrl();
    [CompilerGeneratedAttribute]
public void set_DisplayUrl(string value);
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public string get_ExpandedUrl();
    [CompilerGeneratedAttribute]
public void set_ExpandedUrl(string value);
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_UnwoundUrl();
    [CompilerGeneratedAttribute]
public void set_UnwoundUrl(string value);
}
public class Tweetinvi.Models.V2.UserDescriptionEntitiesV2 : object {
    [CompilerGeneratedAttribute]
private CashtagV2[] <Cashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private HashtagV2[] <Hashtags>k__BackingField;
    [CompilerGeneratedAttribute]
private UserMentionV2[] <Mentions>k__BackingField;
    [CompilerGeneratedAttribute]
private UrlV2[] <Urls>k__BackingField;
    [JsonPropertyAttribute("cashtags")]
public CashtagV2[] Cashtags { get; public set; }
    [JsonPropertyAttribute("hashtags")]
public HashtagV2[] Hashtags { get; public set; }
    [JsonPropertyAttribute("mentions")]
public UserMentionV2[] Mentions { get; public set; }
    [JsonPropertyAttribute("urls")]
public UrlV2[] Urls { get; public set; }
    [CompilerGeneratedAttribute]
public CashtagV2[] get_Cashtags();
    [CompilerGeneratedAttribute]
public void set_Cashtags(CashtagV2[] value);
    [CompilerGeneratedAttribute]
public HashtagV2[] get_Hashtags();
    [CompilerGeneratedAttribute]
public void set_Hashtags(HashtagV2[] value);
    [CompilerGeneratedAttribute]
public UserMentionV2[] get_Mentions();
    [CompilerGeneratedAttribute]
public void set_Mentions(UserMentionV2[] value);
    [CompilerGeneratedAttribute]
public UrlV2[] get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(UrlV2[] value);
}
public class Tweetinvi.Models.V2.UserEntitiesV2 : object {
    [CompilerGeneratedAttribute]
private UserDescriptionEntitiesV2 <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private UrlsV2 <Url>k__BackingField;
    [JsonPropertyAttribute("description")]
public UserDescriptionEntitiesV2 Description { get; public set; }
    [JsonPropertyAttribute("url")]
public UrlsV2 Url { get; public set; }
    [CompilerGeneratedAttribute]
public UserDescriptionEntitiesV2 get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(UserDescriptionEntitiesV2 value);
    [CompilerGeneratedAttribute]
public UrlsV2 get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(UrlsV2 value);
}
public class Tweetinvi.Models.V2.UserIncludesV2 : object {
    [CompilerGeneratedAttribute]
private TweetV2[] <Tweets>k__BackingField;
    [JsonPropertyAttribute("tweets")]
public TweetV2[] Tweets { get; public set; }
    [CompilerGeneratedAttribute]
public TweetV2[] get_Tweets();
    [CompilerGeneratedAttribute]
public void set_Tweets(TweetV2[] value);
}
public class Tweetinvi.Models.V2.UserMentionV2 : object {
    [CompilerGeneratedAttribute]
private int <End>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [JsonPropertyAttribute("end")]
public int End { get; public set; }
    [JsonPropertyAttribute("start")]
public int Start { get; public set; }
    [JsonPropertyAttribute("username")]
public string Username { get; public set; }
    [CompilerGeneratedAttribute]
public int get_End();
    [CompilerGeneratedAttribute]
public void set_End(int value);
    [CompilerGeneratedAttribute]
public int get_Start();
    [CompilerGeneratedAttribute]
public void set_Start(int value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
}
public class Tweetinvi.Models.V2.UserPublicMetricsV2 : object {
    [CompilerGeneratedAttribute]
private int <FollowersCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <FollowingCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ListedCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TweetCount>k__BackingField;
    [JsonPropertyAttribute("followers_count")]
public int FollowersCount { get; public set; }
    [JsonPropertyAttribute("following_count")]
public int FollowingCount { get; public set; }
    [JsonPropertyAttribute("listed_count")]
public int ListedCount { get; public set; }
    [JsonPropertyAttribute("tweet_count")]
public int TweetCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_FollowersCount();
    [CompilerGeneratedAttribute]
public void set_FollowersCount(int value);
    [CompilerGeneratedAttribute]
public int get_FollowingCount();
    [CompilerGeneratedAttribute]
public void set_FollowingCount(int value);
    [CompilerGeneratedAttribute]
public int get_ListedCount();
    [CompilerGeneratedAttribute]
public void set_ListedCount(int value);
    [CompilerGeneratedAttribute]
public int get_TweetCount();
    [CompilerGeneratedAttribute]
public void set_TweetCount(int value);
}
public class Tweetinvi.Models.V2.UsersV2Response : object {
    [CompilerGeneratedAttribute]
private UserV2[] <Users>k__BackingField;
    [CompilerGeneratedAttribute]
private UserIncludesV2 <Includes>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorV2[] <Errors>k__BackingField;
    [JsonPropertyAttribute("data")]
public UserV2[] Users { get; public set; }
    [JsonPropertyAttribute("includes")]
public UserIncludesV2 Includes { get; public set; }
    [JsonPropertyAttribute("errors")]
public ErrorV2[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public UserV2[] get_Users();
    [CompilerGeneratedAttribute]
public void set_Users(UserV2[] value);
    [CompilerGeneratedAttribute]
public UserIncludesV2 get_Includes();
    [CompilerGeneratedAttribute]
public void set_Includes(UserIncludesV2 value);
    [CompilerGeneratedAttribute]
public ErrorV2[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ErrorV2[] value);
}
public class Tweetinvi.Models.V2.UserV2 : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <CreatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private UserEntitiesV2 <Entities>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PinnedTweetId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsProtected>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Verified>k__BackingField;
    [CompilerGeneratedAttribute]
private WithheldInfoV2 <Withheld>k__BackingField;
    [CompilerGeneratedAttribute]
private UserPublicMetricsV2 <PublicMetrics>k__BackingField;
    [JsonPropertyAttribute("created_at")]
public DateTimeOffset CreatedAt { get; public set; }
    [JsonPropertyAttribute("description")]
public string Description { get; public set; }
    [JsonPropertyAttribute("entities")]
public UserEntitiesV2 Entities { get; public set; }
    [JsonPropertyAttribute("id")]
public string Id { get; public set; }
    [JsonPropertyAttribute("location")]
public string Location { get; public set; }
    [JsonPropertyAttribute("name")]
public string Name { get; public set; }
    [JsonPropertyAttribute("pinned_tweet_id")]
public string PinnedTweetId { get; public set; }
    [JsonPropertyAttribute("profile_image_url")]
public string ProfileImageUrl { get; public set; }
    [JsonPropertyAttribute("protected")]
public bool IsProtected { get; public set; }
    [JsonPropertyAttribute("url")]
public string Url { get; public set; }
    [JsonPropertyAttribute("username")]
public string Username { get; public set; }
    [JsonPropertyAttribute("verified")]
public bool Verified { get; public set; }
    [JsonPropertyAttribute("withheld")]
public WithheldInfoV2 Withheld { get; public set; }
    [JsonPropertyAttribute("public_metrics")]
public UserPublicMetricsV2 PublicMetrics { get; public set; }
    [CompilerGeneratedAttribute]
public DateTimeOffset get_CreatedAt();
    [CompilerGeneratedAttribute]
public void set_CreatedAt(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public UserEntitiesV2 get_Entities();
    [CompilerGeneratedAttribute]
public void set_Entities(UserEntitiesV2 value);
    [CompilerGeneratedAttribute]
public string get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(string value);
    [CompilerGeneratedAttribute]
public string get_Location();
    [CompilerGeneratedAttribute]
public void set_Location(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_PinnedTweetId();
    [CompilerGeneratedAttribute]
public void set_PinnedTweetId(string value);
    [CompilerGeneratedAttribute]
public string get_ProfileImageUrl();
    [CompilerGeneratedAttribute]
public void set_ProfileImageUrl(string value);
    [CompilerGeneratedAttribute]
public bool get_IsProtected();
    [CompilerGeneratedAttribute]
public void set_IsProtected(bool value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public bool get_Verified();
    [CompilerGeneratedAttribute]
public void set_Verified(bool value);
    [CompilerGeneratedAttribute]
public WithheldInfoV2 get_Withheld();
    [CompilerGeneratedAttribute]
public void set_Withheld(WithheldInfoV2 value);
    [CompilerGeneratedAttribute]
public UserPublicMetricsV2 get_PublicMetrics();
    [CompilerGeneratedAttribute]
public void set_PublicMetrics(UserPublicMetricsV2 value);
}
public class Tweetinvi.Models.V2.UserV2Response : object {
    [CompilerGeneratedAttribute]
private UserV2 <User>k__BackingField;
    [CompilerGeneratedAttribute]
private UserIncludesV2 <Includes>k__BackingField;
    [CompilerGeneratedAttribute]
private ErrorV2[] <Errors>k__BackingField;
    [JsonPropertyAttribute("data")]
public UserV2 User { get; public set; }
    [JsonPropertyAttribute("includes")]
public UserIncludesV2 Includes { get; public set; }
    [JsonPropertyAttribute("errors")]
public ErrorV2[] Errors { get; public set; }
    [CompilerGeneratedAttribute]
public UserV2 get_User();
    [CompilerGeneratedAttribute]
public void set_User(UserV2 value);
    [CompilerGeneratedAttribute]
public UserIncludesV2 get_Includes();
    [CompilerGeneratedAttribute]
public void set_Includes(UserIncludesV2 value);
    [CompilerGeneratedAttribute]
public ErrorV2[] get_Errors();
    [CompilerGeneratedAttribute]
public void set_Errors(ErrorV2[] value);
}
public class Tweetinvi.Models.V2.WithheldInfoV2 : object {
    [CompilerGeneratedAttribute]
private String[] <CountryCodes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scope>k__BackingField;
    [JsonPropertyAttribute("country_codes")]
public String[] CountryCodes { get; public set; }
    [JsonPropertyAttribute("scope")]
public string Scope { get; public set; }
    [CompilerGeneratedAttribute]
public String[] get_CountryCodes();
    [CompilerGeneratedAttribute]
public void set_CountryCodes(String[] value);
    [CompilerGeneratedAttribute]
public string get_Scope();
    [CompilerGeneratedAttribute]
public void set_Scope(string value);
}
public class Tweetinvi.Models.WebhookMessage : object {
    [CompilerGeneratedAttribute]
private string <Json>k__BackingField;
    public string Json { get; public set; }
    public WebhookMessage(string json);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Json();
    [CompilerGeneratedAttribute]
public void set_Json(string value);
}
public class Tweetinvi.MultipartTwitterQuery : TwitterQuery {
    private Byte[][] _binaries;
    [CompilerGeneratedAttribute]
private string <ContentId>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IUploadProgressChanged> <UploadProgressChanged>k__BackingField;
    public Byte[][] Binaries { get; public set; }
    public string ContentId { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public HttpContent HttpContent { get; public set; }
    public MultipartTwitterQuery(ITwitterQuery source);
    public MultipartTwitterQuery(IMultipartTwitterQuery source);
    public sealed virtual Byte[][] get_Binaries();
    public sealed virtual void set_Binaries(Byte[][] value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContentId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContentId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
    public virtual HttpContent get_HttpContent();
    public virtual void set_HttpContent(HttpContent value);
    private ProgressableStreamContent GetMultipartFormDataContent(string contentId, Byte[][] binaries);
    public static MultipartFormDataContent CreateHttpContent(string contentId, Byte[][] binaries);
    [CompilerGeneratedAttribute]
private void <GetMultipartFormDataContent>b__18_0(IUploadProgressChanged args);
}
public enum Tweetinvi.Parameters.AccuracyMeasure : Enum {
    public int value__;
    public static AccuracyMeasure Meters;
    public static AccuracyMeasure Feets;
}
public class Tweetinvi.Parameters.AddMediaMetadataParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AltText>k__BackingField;
    [JsonPropertyAttribute("media_id")]
public Nullable`1<long> MediaId { get; public set; }
    [JsonPropertyAttribute("alt_text")]
[JsonConverterAttribute("Tweetinvi.Core.JsonConverters.JsonUploadMetadataAltTextConverter")]
public string AltText { get; public set; }
    public AddMediaMetadataParameters(Nullable`1<long> mediaId);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AltText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AltText(string value);
}
public class Tweetinvi.Parameters.AddMembersToListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private List`1<IUserIdentifier> <Users>k__BackingField;
    public List`1<IUserIdentifier> Users { get; public set; }
    public AddMembersToListParameters(long listId, IEnumerable`1<long> userIds);
    public AddMembersToListParameters(long listId, IEnumerable`1<string> usernames);
    public AddMembersToListParameters(long listId, IEnumerable`1<IUserIdentifier> users);
    public AddMembersToListParameters(ITwitterListIdentifier list, IEnumerable`1<long> userIds);
    public AddMembersToListParameters(ITwitterListIdentifier list, IEnumerable`1<string> usernames);
    public AddMembersToListParameters(ITwitterListIdentifier list, IEnumerable`1<IUserIdentifier> users);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUserIdentifier> get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Users(List`1<IUserIdentifier> value);
}
public class Tweetinvi.Parameters.AddMemberToListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public AddMemberToListParameters(ITwitterListIdentifier list, long userId);
    public AddMemberToListParameters(ITwitterListIdentifier list, string username);
    public AddMemberToListParameters(ITwitterListIdentifier list, IUserIdentifier user);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public enum Tweetinvi.Parameters.AuthAccessType : Enum {
    public int value__;
    public static AuthAccessType ReadWrite;
    public static AuthAccessType Read;
}
public class Tweetinvi.Parameters.BlockUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public BlockUserParameters(string username);
    public BlockUserParameters(long userId);
    public BlockUserParameters(IUserIdentifier user);
    public BlockUserParameters(IBlockUserParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.CheckIfUserIsMemberOfListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public CheckIfUserIsMemberOfListParameters(long listId, long userId);
    public CheckIfUserIsMemberOfListParameters(long listId, string username);
    public CheckIfUserIsMemberOfListParameters(long listId, IUserIdentifier user);
    public CheckIfUserIsMemberOfListParameters(ITwitterListIdentifier list, long userId);
    public CheckIfUserIsMemberOfListParameters(ITwitterListIdentifier list, string username);
    public CheckIfUserIsMemberOfListParameters(ITwitterListIdentifier list, IUserIdentifier user);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.CheckIfUserIsSubscriberOfListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public CheckIfUserIsSubscriberOfListParameters(long listId, long userId);
    public CheckIfUserIsSubscriberOfListParameters(long listId, string username);
    public CheckIfUserIsSubscriberOfListParameters(long listId, IUserIdentifier user);
    public CheckIfUserIsSubscriberOfListParameters(ITwitterListIdentifier list, long userId);
    public CheckIfUserIsSubscriberOfListParameters(ITwitterListIdentifier list, string username);
    public CheckIfUserIsSubscriberOfListParameters(ITwitterListIdentifier list, IUserIdentifier user);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public enum Tweetinvi.Parameters.ContinueMinMaxCursor : Enum {
    public int value__;
    public static ContinueMinMaxCursor UntilNoItemsReturned;
    public static ContinueMinMaxCursor UntilPageSizeIsDifferentFromRequested;
}
public class Tweetinvi.Parameters.CountAccountActivitySubscriptionsParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.CreateAccountActivityWebhookParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookUrl>k__BackingField;
    public string Environment { get; public set; }
    public string WebhookUrl { get; public set; }
    public CreateAccountActivityWebhookParameters(string environment, string callbackUrl);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebhookUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebhookUrl(string value);
}
public class Tweetinvi.Parameters.CreateBearerTokenParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.CreateFilteredTweetStreamParameters : CreateTrackedTweetStreamParameters {
}
public class Tweetinvi.Parameters.CreateListParameters : ListMetadataParameters {
    public CreateListParameters(string name);
    public CreateListParameters(IListMetadataParameters parameters);
}
public class Tweetinvi.Parameters.CreateSampleStreamParameters : CreateTweetStreamParameters {
}
public class Tweetinvi.Parameters.CreateSavedSearchParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    public string Query { get; public set; }
    public CreateSavedSearchParameters(string query);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
}
public class Tweetinvi.Parameters.CreateTrackedTweetStreamParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.CreateTweetStreamParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.CursorQueryParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Cursor>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    public string Cursor { get; public set; }
    public int PageSize { get; public set; }
    public CursorQueryParameters(ICursorQueryParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Cursor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Cursor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PageSize(int value);
}
public class Tweetinvi.Parameters.CustomRequestParameters : object {
    private List`1<Tuple`2<string, string>> _customQueryParameters;
    public List`1<Tuple`2<string, string>> CustomQueryParameters { get; }
    public string FormattedCustomQueryParameters { get; }
    public CustomRequestParameters(ICustomRequestParameters parameters);
    public sealed virtual void AddCustomQueryParameter(string name, string value);
    public sealed virtual void ClearCustomQueryParameters();
    public sealed virtual List`1<Tuple`2<string, string>> get_CustomQueryParameters();
    public sealed virtual string get_FormattedCustomQueryParameters();
}
public class Tweetinvi.Parameters.DeleteAccountActivityWebhookParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookId>k__BackingField;
    public string Environment { get; public set; }
    public string WebhookId { get; public set; }
    public DeleteAccountActivityWebhookParameters(string environment, string webhookId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebhookId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebhookId(string value);
}
public class Tweetinvi.Parameters.DestroyListParameters : TwitterListParameters {
    public DestroyListParameters(long listId);
    public DestroyListParameters(string slug, IUserIdentifier userId);
    public DestroyListParameters(ITwitterListIdentifier list);
}
public class Tweetinvi.Parameters.DestroyMessageParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private long <MessageId>k__BackingField;
    public long MessageId { get; public set; }
    public DestroyMessageParameters(long messageId);
    public DestroyMessageParameters(IMessageEventDTO messageEvent);
    public DestroyMessageParameters(IMessage message);
    [CompilerGeneratedAttribute]
public sealed virtual long get_MessageId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageId(long value);
}
public class Tweetinvi.Parameters.DestroyRetweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public DestroyRetweetParameters(long tweetId);
    public DestroyRetweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.DestroySavedSearchParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private long <SavedSearchId>k__BackingField;
    public long SavedSearchId { get; public set; }
    public DestroySavedSearchParameters(long savedSearchId);
    public DestroySavedSearchParameters(ISavedSearch savedSearch);
    [CompilerGeneratedAttribute]
public sealed virtual long get_SavedSearchId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SavedSearchId(long value);
}
public class Tweetinvi.Parameters.DestroyTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public DestroyTweetParameters(long tweetId);
    public DestroyTweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public enum Tweetinvi.Parameters.Enum.OnlyGetTweetsThatAre : Enum {
    public int value__;
    public static OnlyGetTweetsThatAre OriginalTweets;
    public static OnlyGetTweetsThatAre Retweets;
}
[FlagsAttribute]
public enum Tweetinvi.Parameters.Enum.TweetSearchFilters : Enum {
    public int value__;
    public static TweetSearchFilters None;
    public static TweetSearchFilters Hashtags;
    public static TweetSearchFilters Links;
    public static TweetSearchFilters Images;
    [TweetSearchFilterAttribute("native_video")]
public static TweetSearchFilters NativeVideo;
    public static TweetSearchFilters News;
    public static TweetSearchFilters Periscope;
    public static TweetSearchFilters Replies;
    public static TweetSearchFilters Safe;
    public static TweetSearchFilters Twimg;
    public static TweetSearchFilters Verified;
    public static TweetSearchFilters Videos;
    public static TweetSearchFilters Vine;
}
public enum Tweetinvi.Parameters.Enum.UploadProgressState : Enum {
    public int value__;
    public static UploadProgressState INITIALIZED;
    public static UploadProgressState PROGRESS_CHANGED;
    public static UploadProgressState FAILED;
    public static UploadProgressState COMPLETED;
}
public class Tweetinvi.Parameters.FavoriteTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public FavoriteTweetParameters(long tweetId);
    public FavoriteTweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.FollowUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableNotifications>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> EnableNotifications { get; public set; }
    public FollowUserParameters(string username);
    public FollowUserParameters(long userId);
    public FollowUserParameters(IUserIdentifier user);
    public FollowUserParameters(IFollowUserParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableNotifications();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableNotifications(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GeoSearchParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Ip>k__BackingField;
    [CompilerGeneratedAttribute]
private Granularity <Granularity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Accuracy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumNumberOfResults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContainedWithin>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <Attributes>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Callback>k__BackingField;
    [CompilerGeneratedAttribute]
private AccuracyMeasure <AccuracyMeasure>k__BackingField;
    public ICoordinates Coordinates { get; public set; }
    public string Query { get; public set; }
    public string Ip { get; public set; }
    public Granularity Granularity { get; public set; }
    public Nullable`1<int> Accuracy { get; public set; }
    public Nullable`1<int> MaximumNumberOfResults { get; public set; }
    public string ContainedWithin { get; public set; }
    public Dictionary`2<string, string> Attributes { get; }
    public string Callback { get; public set; }
    public AccuracyMeasure AccuracyMeasure { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Ip();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Ip(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Granularity get_Granularity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Granularity(Granularity value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Accuracy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Accuracy(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumNumberOfResults();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumNumberOfResults(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ContainedWithin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContainedWithin(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Dictionary`2<string, string> get_Attributes();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Callback();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Callback(string value);
    [CompilerGeneratedAttribute]
public sealed virtual AccuracyMeasure get_AccuracyMeasure();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AccuracyMeasure(AccuracyMeasure value);
}
public class Tweetinvi.Parameters.GeoSearchReverseParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private Granularity <Granularity>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Accuracy>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumNumberOfResults>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Callback>k__BackingField;
    public ICoordinates Coordinates { get; public set; }
    public Granularity Granularity { get; public set; }
    public Nullable`1<int> Accuracy { get; public set; }
    public Nullable`1<int> MaximumNumberOfResults { get; public set; }
    public string Callback { get; public set; }
    public GeoSearchReverseParameters(ICoordinates coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual Granularity get_Granularity();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Granularity(Granularity value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Accuracy();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Accuracy(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumNumberOfResults();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumNumberOfResults(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Callback();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Callback(string value);
}
public class Tweetinvi.Parameters.GetAccountActivityEnvironmentWebhooksParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    public string Environment { get; public set; }
    public GetAccountActivityEnvironmentWebhooksParameters(string environment);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
}
public class Tweetinvi.Parameters.GetAccountActivitySubscriptionsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    public string Environment { get; public set; }
    public GetAccountActivitySubscriptionsParameters(string environment);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
}
public class Tweetinvi.Parameters.GetAccountActivityWebhookEnvironmentsParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.GetAccountListMembershipsParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OnlyRetrieveAccountLists>k__BackingField;
    public Nullable`1<bool> OnlyRetrieveAccountLists { get; public set; }
    public GetAccountListMembershipsParameters(IGetAccountListMembershipsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OnlyRetrieveAccountLists();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnlyRetrieveAccountLists(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GetAccountListSubscriptionsParameters : CursorQueryParameters {
    public GetAccountListSubscriptionsParameters(IGetAccountListSubscriptionsParameters parameters);
}
public class Tweetinvi.Parameters.GetAccountSettingsParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.GetAuthenticatedUserParameters : GetUsersOptionalParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEmail>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public Nullable`1<bool> IncludeEmail { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public GetAuthenticatedUserParameters(IGetAuthenticatedUserParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEmail();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEmail(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.GetBlockedUserIdsParameters : CursorQueryParameters {
    public GetBlockedUserIdsParameters(IGetBlockedUserIdsParameters source);
}
public class Tweetinvi.Parameters.GetBlockedUsersParameters : GetCursorUsersOptionalParameters {
    public GetBlockedUsersParameters(IGetBlockedUsersParameters source);
}
public class Tweetinvi.Parameters.GetEndpointRateLimitsParameters : GetRateLimitsParameters {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    public string Url { get; public set; }
    public GetEndpointRateLimitsParameters(string url);
    public GetEndpointRateLimitsParameters(string url, RateLimitsSource from);
    public GetEndpointRateLimitsParameters(IGetEndpointRateLimitsParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
}
public class Tweetinvi.Parameters.GetFollowerIdsParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; }
    public GetFollowerIdsParameters(string username);
    public GetFollowerIdsParameters(long userId);
    public GetFollowerIdsParameters(IUserIdentifier user);
    public GetFollowerIdsParameters(IGetFollowerIdsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
}
public class Tweetinvi.Parameters.GetFollowersParameters : GetFollowerIdsParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GetUsersPageSize>k__BackingField;
    public Nullable`1<bool> SkipStatus { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public int GetUsersPageSize { get; public set; }
    public GetFollowersParameters(IUserIdentifier user);
    public GetFollowersParameters(string username);
    public GetFollowersParameters(long userId);
    public GetFollowersParameters(IGetFollowersParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_GetUsersPageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GetUsersPageSize(int value);
}
public class Tweetinvi.Parameters.GetFriendIdsParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; }
    public GetFriendIdsParameters(IUserIdentifier userIdentifier);
    public GetFriendIdsParameters(string username);
    public GetFriendIdsParameters(long userId);
    public GetFriendIdsParameters(IGetFriendIdsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
}
public class Tweetinvi.Parameters.GetFriendsParameters : GetFriendIdsParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private int <GetUsersPageSize>k__BackingField;
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public int GetUsersPageSize { get; public set; }
    public GetFriendsParameters(IUserIdentifier userIdentifier);
    public GetFriendsParameters(string username);
    public GetFriendsParameters(long userId);
    public GetFriendsParameters(IGetFriendsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_GetUsersPageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GetUsersPageSize(int value);
}
public class Tweetinvi.Parameters.GetHomeTimelineParameters : TimelineRequestParameters {
    [CompilerGeneratedAttribute]
private bool <ExcludeReplies>k__BackingField;
    public bool ExcludeReplies { get; public set; }
    public GetHomeTimelineParameters(IGetHomeTimelineParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ExcludeReplies();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludeReplies(bool value);
}
public class Tweetinvi.Parameters.GetListParameters : TwitterListParameters {
    public GetListParameters(long listId);
    public GetListParameters(string slug, IUserIdentifier userId);
    public GetListParameters(ITwitterListIdentifier list);
}
public class Tweetinvi.Parameters.GetListsOwnedByAccountByUserParameters : GetListsOwnedByAccountParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public GetListsOwnedByAccountByUserParameters(long userId);
    public GetListsOwnedByAccountByUserParameters(string username);
    public GetListsOwnedByAccountByUserParameters(IUserIdentifier user);
    public GetListsOwnedByAccountByUserParameters(IGetListsOwnedByAccountParameters parameters);
    public GetListsOwnedByAccountByUserParameters(IGetListsOwnedByUserParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetListsOwnedByAccountParameters : CursorQueryParameters {
    public GetListsOwnedByAccountParameters(IGetListsOwnedByAccountParameters parameters);
}
public class Tweetinvi.Parameters.GetListsSubscribedByAccountParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <Reverse>k__BackingField;
    public Nullable`1<bool> Reverse { get; public set; }
    public GetListsSubscribedByAccountParameters(IGetListsSubscribedByAccountParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_Reverse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Reverse(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GetListsSubscribedByUserParameters : GetListsSubscribedByAccountParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public GetListsSubscribedByUserParameters(long userId);
    public GetListsSubscribedByUserParameters(string username);
    public GetListsSubscribedByUserParameters(IUserIdentifier user);
    public GetListsSubscribedByUserParameters(IGetListsSubscribedByUserParameters parameters);
    public GetListsSubscribedByUserParameters(IGetListsSubscribedByAccountParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetListSubscribersParameters : BaseGetUsersOfListParameters {
    public GetListSubscribersParameters(long listId);
    public GetListSubscribersParameters(ITwitterListIdentifier list);
    public GetListSubscribersParameters(IGetListSubscribersParameters parameters);
}
public class Tweetinvi.Parameters.GetMembersOfListParameters : BaseGetUsersOfListParameters {
    public GetMembersOfListParameters(long listId);
    public GetMembersOfListParameters(ITwitterListIdentifier list);
    public GetMembersOfListParameters(IGetMembersOfListParameters parameters);
}
public class Tweetinvi.Parameters.GetMentionsTimelineParameters : TimelineRequestParameters {
    [CompilerGeneratedAttribute]
private bool <IncludeContributorDetails>k__BackingField;
    public bool IncludeContributorDetails { get; public set; }
    public GetMentionsTimelineParameters(IGetMentionsTimelineParameters source);
    [CompilerGeneratedAttribute]
public bool get_IncludeContributorDetails();
    [CompilerGeneratedAttribute]
public void set_IncludeContributorDetails(bool value);
}
public class Tweetinvi.Parameters.GetMessageParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private long <MessageId>k__BackingField;
    public long MessageId { get; public set; }
    public GetMessageParameters(long messageId);
    [CompilerGeneratedAttribute]
public sealed virtual long get_MessageId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MessageId(long value);
}
public class Tweetinvi.Parameters.GetMessagesParameters : CursorQueryParameters {
    public GetMessagesParameters(IGetMessagesParameters parameters);
}
public class Tweetinvi.Parameters.GetMutedUserIdsParameters : CursorQueryParameters {
    public GetMutedUserIdsParameters(IGetMutedUserIdsParameters source);
}
public class Tweetinvi.Parameters.GetMutedUsersParameters : GetCursorUsersOptionalParameters {
    public GetMutedUsersParameters(IGetMutedUsersParameters source);
}
public class Tweetinvi.Parameters.GetOEmbedTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxWidth>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HideMedia>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HideThread>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <OmitScript>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<OEmbedTweetAlignment> <Alignment>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <RelatedUsernames>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Language> <Language>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<OEmbedTweetTheme> <Theme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LinkColor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<OEmbedTweetWidgetType> <WidgetType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnablePersonalisationAndSuggestions>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<int> MaxWidth { get; public set; }
    public Nullable`1<bool> HideMedia { get; public set; }
    public Nullable`1<bool> HideThread { get; public set; }
    public Nullable`1<bool> OmitScript { get; public set; }
    public Nullable`1<OEmbedTweetAlignment> Alignment { get; public set; }
    public String[] RelatedUsernames { get; public set; }
    public Nullable`1<Language> Language { get; public set; }
    public Nullable`1<OEmbedTweetTheme> Theme { get; public set; }
    public string LinkColor { get; public set; }
    public Nullable`1<OEmbedTweetWidgetType> WidgetType { get; public set; }
    public Nullable`1<bool> EnablePersonalisationAndSuggestions { get; public set; }
    public GetOEmbedTweetParameters(long tweetId);
    public GetOEmbedTweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxWidth();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxWidth(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_HideMedia();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HideMedia(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_HideThread();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HideThread(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_OmitScript();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OmitScript(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<OEmbedTweetAlignment> get_Alignment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Alignment(Nullable`1<OEmbedTweetAlignment> value);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_RelatedUsernames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RelatedUsernames(String[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Language> get_Language();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Language(Nullable`1<Language> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<OEmbedTweetTheme> get_Theme();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Theme(Nullable`1<OEmbedTweetTheme> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_LinkColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LinkColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<OEmbedTweetWidgetType> get_WidgetType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WidgetType(Nullable`1<OEmbedTweetWidgetType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnablePersonalisationAndSuggestions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnablePersonalisationAndSuggestions(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GetPlaceParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <PlaceId>k__BackingField;
    public string PlaceId { get; public set; }
    public GetPlaceParameters(string placeId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_PlaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlaceId(string value);
}
public class Tweetinvi.Parameters.GetProfileImageParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <ImageUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ImageSize <ImageSize>k__BackingField;
    public string ImageUrl { get; public set; }
    public ImageSize ImageSize { get; public set; }
    public GetProfileImageParameters(string imageUrl);
    public GetProfileImageParameters(IUserDTO user);
    public GetProfileImageParameters(IUser user);
    public GetProfileImageParameters(IGetProfileImageParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ImageUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImageUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ImageSize get_ImageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ImageSize(ImageSize value);
}
public class Tweetinvi.Parameters.GetRateLimitsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private RateLimitsSource <From>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<RateLimitTrackerMode> <TrackerMode>k__BackingField;
    public RateLimitsSource From { get; public set; }
    public Nullable`1<RateLimitTrackerMode> TrackerMode { get; public set; }
    public GetRateLimitsParameters(IGetRateLimitsParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual RateLimitsSource get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(RateLimitsSource value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<RateLimitTrackerMode> get_TrackerMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrackerMode(Nullable`1<RateLimitTrackerMode> value);
}
public class Tweetinvi.Parameters.GetRelationshipBetweenParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <SourceUser>k__BackingField;
    [CompilerGeneratedAttribute]
private IUserIdentifier <TargetUser>k__BackingField;
    public IUserIdentifier SourceUser { get; public set; }
    public IUserIdentifier TargetUser { get; public set; }
    public GetRelationshipBetweenParameters(long sourceUserId, long targetUser);
    public GetRelationshipBetweenParameters(long sourceUserId, string targetUser);
    public GetRelationshipBetweenParameters(long sourceUserId, IUserIdentifier targetUser);
    public GetRelationshipBetweenParameters(string sourceUser, long targetUser);
    public GetRelationshipBetweenParameters(string sourceUser, string targetUser);
    public GetRelationshipBetweenParameters(string sourceUser, IUserIdentifier targetUser);
    public GetRelationshipBetweenParameters(IUserIdentifier sourceUser, long targetUser);
    public GetRelationshipBetweenParameters(IUserIdentifier sourceUser, string targetUser);
    public GetRelationshipBetweenParameters(IUserIdentifier sourceUser, IUserIdentifier targetUser);
    public GetRelationshipBetweenParameters(IGetRelationshipBetweenParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_SourceUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SourceUser(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_TargetUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TargetUser(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetRelationshipsWithParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier[] <Users>k__BackingField;
    public IUserIdentifier[] Users { get; public set; }
    public GetRelationshipsWithParameters(Int64[] userIds);
    public GetRelationshipsWithParameters(String[] usernames);
    public GetRelationshipsWithParameters(IUserIdentifier[] users);
    public GetRelationshipsWithParameters(IUser[] users);
    public GetRelationshipsWithParameters(IGetRelationshipsWithParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier[] get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Users(IUserIdentifier[] value);
}
public class Tweetinvi.Parameters.GetRetweeterIdsParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public GetRetweeterIdsParameters(long tweetId);
    public GetRetweeterIdsParameters(ITweetIdentifier tweet);
    public GetRetweeterIdsParameters(IGetRetweeterIdsParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
}
public class Tweetinvi.Parameters.GetRetweetsOfMeTimelineParameters : TimelineRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeUserEntities>k__BackingField;
    public Nullable`1<bool> IncludeUserEntities { get; public set; }
    public GetRetweetsOfMeTimelineParameters(IGetRetweetsOfMeTimelineParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeUserEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeUserEntities(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GetRetweetsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public int PageSize { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public GetRetweetsParameters(long tweetId);
    public GetRetweetsParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.GetSavedSearchParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private long <SavedSearchId>k__BackingField;
    public long SavedSearchId { get; public set; }
    public GetSavedSearchParameters(long savedSearchId);
    [CompilerGeneratedAttribute]
public sealed virtual long get_SavedSearchId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SavedSearchId(long value);
}
public class Tweetinvi.Parameters.GetSupportedLanguagesParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.GetTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeMyRetweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeExtAltText>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeCardUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeMyRetweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> IncludeExtAltText { get; public set; }
    public Nullable`1<bool> IncludeCardUri { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public GetTweetParameters(long tweetId);
    public GetTweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeMyRetweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeMyRetweet(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeExtAltText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeExtAltText(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeCardUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeCardUri(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.GetTweetsFromListParameters : TimelineRequestParameters {
    [CompilerGeneratedAttribute]
private ITwitterListIdentifier <List>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeRetweets>k__BackingField;
    public ITwitterListIdentifier List { get; public set; }
    public Nullable`1<bool> IncludeRetweets { get; public set; }
    public GetTweetsFromListParameters(long listId);
    public GetTweetsFromListParameters(ITwitterListIdentifier list);
    public GetTweetsFromListParameters(IGetTweetsFromListParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterListIdentifier get_List();
    [CompilerGeneratedAttribute]
public sealed virtual void set_List(ITwitterListIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeRetweets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeRetweets(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.GetTweetsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier[] <Tweets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeExtAltText>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeCardUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier[] Tweets { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> IncludeExtAltText { get; public set; }
    public Nullable`1<bool> IncludeCardUri { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public GetTweetsParameters(Int64[] tweetIds);
    public GetTweetsParameters(ITweetIdentifier[] tweetIdentifiers);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier[] get_Tweets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweets(ITweetIdentifier[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeExtAltText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeExtAltText(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeCardUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeCardUri(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.GetTwitterConfigurationParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.GetUserFavoriteTweetsParameters : MinMaxQueryParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public GetUserFavoriteTweetsParameters(string username);
    public GetUserFavoriteTweetsParameters(long userId);
    public GetUserFavoriteTweetsParameters(IUserIdentifier user);
    public GetUserFavoriteTweetsParameters(IGetUserFavoriteTweetsParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.GetUserIdsRequestingFriendshipParameters : CursorQueryParameters {
    public GetUserIdsRequestingFriendshipParameters(IGetUserIdsRequestingFriendshipParameters parameters);
}
public class Tweetinvi.Parameters.GetUserIdsWhoseRetweetsAreMutedParameters : CustomRequestParameters {
    public GetUserIdsWhoseRetweetsAreMutedParameters(IGetUserIdsWhoseRetweetsAreMutedParameters source);
}
public class Tweetinvi.Parameters.GetUserIdsYouRequestedToFollowParameters : CursorQueryParameters {
    public GetUserIdsYouRequestedToFollowParameters(IGetUserIdsYouRequestedToFollowParameters source);
}
public class Tweetinvi.Parameters.GetUserListMembershipsParameters : GetAccountListMembershipsParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public GetUserListMembershipsParameters(long userId);
    public GetUserListMembershipsParameters(string username);
    public GetUserListMembershipsParameters(IUserIdentifier user);
    public GetUserListMembershipsParameters(IGetAccountListMembershipsParameters parameters);
    public GetUserListMembershipsParameters(IGetUserListMembershipsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetUserListSubscriptionsParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public GetUserListSubscriptionsParameters(long userId);
    public GetUserListSubscriptionsParameters(string username);
    public GetUserListSubscriptionsParameters(IUserIdentifier user);
    public GetUserListSubscriptionsParameters(IGetUserListSubscriptionsParameters parameters);
    public GetUserListSubscriptionsParameters(IGetAccountListSubscriptionsParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetUserParameters : GetUsersOptionalParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public GetUserParameters(long userId);
    public GetUserParameters(string username);
    public GetUserParameters(IUserIdentifier user);
    public GetUserParameters(IGetUserParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.GetUsersParameters : GetUsersOptionalParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier[] <Users>k__BackingField;
    public IUserIdentifier[] Users { get; public set; }
    public GetUsersParameters(Int64[] userIds);
    public GetUsersParameters(String[] usernames);
    public GetUsersParameters(IUserIdentifier[] userIdentifiers);
    public GetUsersParameters(IGetUsersParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier[] get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Users(IUserIdentifier[] value);
}
public class Tweetinvi.Parameters.GetUsersRequestingFriendshipParameters : GetCursorUsersOptionalParameters {
    [CompilerGeneratedAttribute]
private int <GetUsersPageSize>k__BackingField;
    public int GetUsersPageSize { get; public set; }
    public GetUsersRequestingFriendshipParameters(IGetUsersRequestingFriendshipParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual int get_GetUsersPageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GetUsersPageSize(int value);
}
public class Tweetinvi.Parameters.GetUsersYouRequestedToFollowParameters : GetCursorUsersOptionalParameters {
    [CompilerGeneratedAttribute]
private int <GetUsersPageSize>k__BackingField;
    public int GetUsersPageSize { get; public set; }
    public GetUsersYouRequestedToFollowParameters(IGetUsersYouRequestedToFollowParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual int get_GetUsersPageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GetUsersPageSize(int value);
}
public class Tweetinvi.Parameters.GetUserTimelineParameters : TimelineRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeRetweets>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeContributorDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExcludeReplies>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public bool IncludeRetweets { get; public set; }
    public bool IncludeContributorDetails { get; public set; }
    public bool ExcludeReplies { get; public set; }
    public GetUserTimelineParameters(string username);
    public GetUserTimelineParameters(long userId);
    public GetUserTimelineParameters(IUserIdentifier user);
    public GetUserTimelineParameters(IGetUserTimelineParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IncludeRetweets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeRetweets(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeContributorDetails();
    [CompilerGeneratedAttribute]
public void set_IncludeContributorDetails(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ExcludeReplies();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludeReplies(bool value);
}
public enum Tweetinvi.Parameters.Granularity : Enum {
    public int value__;
    public static Granularity Undefined;
    public static Granularity POI;
    public static Granularity Neighborhood;
    public static Granularity City;
    public static Granularity Admin;
    public static Granularity Country;
}
public interface Tweetinvi.Parameters.IAddMediaMetadataParameters {
}
public interface Tweetinvi.Parameters.IAddMembersToListParameters {
    public List`1<IUserIdentifier> Users { get; public set; }
    public abstract virtual List`1<IUserIdentifier> get_Users();
    public abstract virtual void set_Users(List`1<IUserIdentifier> value);
}
public interface Tweetinvi.Parameters.IAddMemberToListParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IBlockUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.ICheckIfUserIsMemberOfListParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.ICheckIfUserIsSubscriberOfListParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.ICountAccountActivitySubscriptionsParameters {
}
public interface Tweetinvi.Parameters.ICreateAccountActivityWebhookParameters {
    public string Environment { get; public set; }
    public string WebhookUrl { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual string get_WebhookUrl();
    public abstract virtual void set_WebhookUrl(string value);
}
public interface Tweetinvi.Parameters.ICreateBearerTokenParameters {
}
public interface Tweetinvi.Parameters.ICreateFilteredTweetStreamParameters {
}
public interface Tweetinvi.Parameters.ICreateListParameters {
}
public interface Tweetinvi.Parameters.ICreateSampleStreamParameters {
}
public interface Tweetinvi.Parameters.ICreateSavedSearchParameters {
    public string Query { get; public set; }
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
}
public interface Tweetinvi.Parameters.ICreateTrackedTweetStreamParameters {
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public interface Tweetinvi.Parameters.ICreateTweetStreamParameters {
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public interface Tweetinvi.Parameters.ICursorQueryParameters {
    public string Cursor { get; public set; }
    public int PageSize { get; public set; }
    public abstract virtual string get_Cursor();
    public abstract virtual void set_Cursor(string value);
    public abstract virtual int get_PageSize();
    public abstract virtual void set_PageSize(int value);
}
public interface Tweetinvi.Parameters.ICustomRequestParameters {
    public List`1<Tuple`2<string, string>> CustomQueryParameters { get; }
    public string FormattedCustomQueryParameters { get; }
    public abstract virtual List`1<Tuple`2<string, string>> get_CustomQueryParameters();
    public abstract virtual string get_FormattedCustomQueryParameters();
    public abstract virtual void AddCustomQueryParameter(string name, string value);
    public abstract virtual void ClearCustomQueryParameters();
}
public interface Tweetinvi.Parameters.IDeleteAccountActivityWebhookParameters {
    public string Environment { get; public set; }
    public string WebhookId { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual string get_WebhookId();
    public abstract virtual void set_WebhookId(string value);
}
public interface Tweetinvi.Parameters.IDeleteMessageParameters {
    public long MessageId { get; public set; }
    public abstract virtual long get_MessageId();
    public abstract virtual void set_MessageId(long value);
}
public interface Tweetinvi.Parameters.IDestroyListParameters {
}
public interface Tweetinvi.Parameters.IDestroyRetweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IDestroySavedSearchParameters {
    public long SavedSearchId { get; public set; }
    public abstract virtual long get_SavedSearchId();
    public abstract virtual void set_SavedSearchId(long value);
}
public interface Tweetinvi.Parameters.IDestroyTweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IFavoriteTweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IFollowUserParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> EnableNotifications { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_EnableNotifications();
    public abstract virtual void set_EnableNotifications(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGeoSearchParameters {
    public ICoordinates Coordinates { get; public set; }
    public string Query { get; public set; }
    public string Ip { get; public set; }
    public Granularity Granularity { get; public set; }
    public Nullable`1<int> Accuracy { get; public set; }
    public Nullable`1<int> MaximumNumberOfResults { get; public set; }
    public string ContainedWithin { get; public set; }
    public Dictionary`2<string, string> Attributes { get; }
    public string Callback { get; public set; }
    public AccuracyMeasure AccuracyMeasure { get; public set; }
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual string get_Ip();
    public abstract virtual void set_Ip(string value);
    public abstract virtual Granularity get_Granularity();
    public abstract virtual void set_Granularity(Granularity value);
    public abstract virtual Nullable`1<int> get_Accuracy();
    public abstract virtual void set_Accuracy(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaximumNumberOfResults();
    public abstract virtual void set_MaximumNumberOfResults(Nullable`1<int> value);
    public abstract virtual string get_ContainedWithin();
    public abstract virtual void set_ContainedWithin(string value);
    public abstract virtual Dictionary`2<string, string> get_Attributes();
    public abstract virtual string get_Callback();
    public abstract virtual void set_Callback(string value);
    public abstract virtual AccuracyMeasure get_AccuracyMeasure();
    public abstract virtual void set_AccuracyMeasure(AccuracyMeasure value);
}
public interface Tweetinvi.Parameters.IGeoSearchReverseParameters {
    public ICoordinates Coordinates { get; public set; }
    public Granularity Granularity { get; public set; }
    public Nullable`1<int> Accuracy { get; public set; }
    public Nullable`1<int> MaximumNumberOfResults { get; public set; }
    public string Callback { get; public set; }
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
    public abstract virtual Granularity get_Granularity();
    public abstract virtual void set_Granularity(Granularity value);
    public abstract virtual Nullable`1<int> get_Accuracy();
    public abstract virtual void set_Accuracy(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaximumNumberOfResults();
    public abstract virtual void set_MaximumNumberOfResults(Nullable`1<int> value);
    public abstract virtual string get_Callback();
    public abstract virtual void set_Callback(string value);
}
public interface Tweetinvi.Parameters.IGetAccountActivityEnvironmentWebhooksParameters {
    public string Environment { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
}
public interface Tweetinvi.Parameters.IGetAccountActivitySubscriptionsParameters {
    public string Environment { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
}
public interface Tweetinvi.Parameters.IGetAccountActivityWebhookEnvironmentsParameters {
}
public interface Tweetinvi.Parameters.IGetAccountListMembershipsParameters {
    public Nullable`1<bool> OnlyRetrieveAccountLists { get; public set; }
    public abstract virtual Nullable`1<bool> get_OnlyRetrieveAccountLists();
    public abstract virtual void set_OnlyRetrieveAccountLists(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetAccountListSubscriptionsParameters {
}
public interface Tweetinvi.Parameters.IGetAccountSettingsParameters {
}
public interface Tweetinvi.Parameters.IGetAuthenticatedUserParameters {
    public Nullable`1<bool> IncludeEmail { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public abstract virtual Nullable`1<bool> get_IncludeEmail();
    public abstract virtual void set_IncludeEmail(Nullable`1<bool> value);
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public interface Tweetinvi.Parameters.IGetBlockedUserIdsParameters {
}
public interface Tweetinvi.Parameters.IGetBlockedUsersParameters {
}
public interface Tweetinvi.Parameters.IGetEndpointRateLimitsParameters {
    public string Url { get; public set; }
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
}
public interface Tweetinvi.Parameters.IGetFollowerIdsParameters {
    public IUserIdentifier User { get; }
    public abstract virtual IUserIdentifier get_User();
}
public interface Tweetinvi.Parameters.IGetFollowersParameters {
    public int GetUsersPageSize { get; public set; }
    public abstract virtual int get_GetUsersPageSize();
    public abstract virtual void set_GetUsersPageSize(int value);
}
public interface Tweetinvi.Parameters.IGetFriendIdsParameters {
    public IUserIdentifier User { get; }
    public abstract virtual IUserIdentifier get_User();
}
public interface Tweetinvi.Parameters.IGetFriendsParameters {
    public int GetUsersPageSize { get; public set; }
    public abstract virtual int get_GetUsersPageSize();
    public abstract virtual void set_GetUsersPageSize(int value);
}
public interface Tweetinvi.Parameters.IGetHomeTimelineParameters {
    public bool ExcludeReplies { get; public set; }
    public abstract virtual bool get_ExcludeReplies();
    public abstract virtual void set_ExcludeReplies(bool value);
}
public interface Tweetinvi.Parameters.IGetListParameters {
}
public interface Tweetinvi.Parameters.IGetListsOwnedByAccountParameters {
}
public interface Tweetinvi.Parameters.IGetListsOwnedByUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetListsSubscribedByAccountParameters {
    public Nullable`1<bool> Reverse { get; public set; }
    public abstract virtual Nullable`1<bool> get_Reverse();
    public abstract virtual void set_Reverse(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetListsSubscribedByUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetListSubscribersParameters {
}
public interface Tweetinvi.Parameters.IGetMembersOfListParameters {
}
public interface Tweetinvi.Parameters.IGetMentionsTimelineParameters {
}
public interface Tweetinvi.Parameters.IGetMessageParameters {
    public long MessageId { get; public set; }
    public abstract virtual long get_MessageId();
    public abstract virtual void set_MessageId(long value);
}
public interface Tweetinvi.Parameters.IGetMessagesParameters {
}
public interface Tweetinvi.Parameters.IGetMutedUserIdsParameters {
}
public interface Tweetinvi.Parameters.IGetMutedUsersParameters {
}
public interface Tweetinvi.Parameters.IGetOEmbedTweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<int> MaxWidth { get; public set; }
    public Nullable`1<bool> HideMedia { get; public set; }
    public Nullable`1<bool> HideThread { get; public set; }
    public Nullable`1<bool> OmitScript { get; public set; }
    public Nullable`1<OEmbedTweetAlignment> Alignment { get; public set; }
    public String[] RelatedUsernames { get; public set; }
    public Nullable`1<Language> Language { get; public set; }
    public Nullable`1<OEmbedTweetTheme> Theme { get; public set; }
    public string LinkColor { get; public set; }
    public Nullable`1<OEmbedTweetWidgetType> WidgetType { get; public set; }
    public Nullable`1<bool> EnablePersonalisationAndSuggestions { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<int> get_MaxWidth();
    public abstract virtual void set_MaxWidth(Nullable`1<int> value);
    public abstract virtual Nullable`1<bool> get_HideMedia();
    public abstract virtual void set_HideMedia(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_HideThread();
    public abstract virtual void set_HideThread(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_OmitScript();
    public abstract virtual void set_OmitScript(Nullable`1<bool> value);
    public abstract virtual Nullable`1<OEmbedTweetAlignment> get_Alignment();
    public abstract virtual void set_Alignment(Nullable`1<OEmbedTweetAlignment> value);
    public abstract virtual String[] get_RelatedUsernames();
    public abstract virtual void set_RelatedUsernames(String[] value);
    public abstract virtual Nullable`1<Language> get_Language();
    public abstract virtual void set_Language(Nullable`1<Language> value);
    public abstract virtual Nullable`1<OEmbedTweetTheme> get_Theme();
    public abstract virtual void set_Theme(Nullable`1<OEmbedTweetTheme> value);
    public abstract virtual string get_LinkColor();
    public abstract virtual void set_LinkColor(string value);
    public abstract virtual Nullable`1<OEmbedTweetWidgetType> get_WidgetType();
    public abstract virtual void set_WidgetType(Nullable`1<OEmbedTweetWidgetType> value);
    public abstract virtual Nullable`1<bool> get_EnablePersonalisationAndSuggestions();
    public abstract virtual void set_EnablePersonalisationAndSuggestions(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetPlaceParameters {
    public string PlaceId { get; public set; }
    public abstract virtual string get_PlaceId();
    public abstract virtual void set_PlaceId(string value);
}
public interface Tweetinvi.Parameters.IGetProfileImageParameters {
    public string ImageUrl { get; public set; }
    public ImageSize ImageSize { get; public set; }
    public abstract virtual string get_ImageUrl();
    public abstract virtual void set_ImageUrl(string value);
    public abstract virtual ImageSize get_ImageSize();
    public abstract virtual void set_ImageSize(ImageSize value);
}
public interface Tweetinvi.Parameters.IGetRateLimitsParameters {
    public RateLimitsSource From { get; public set; }
    public Nullable`1<RateLimitTrackerMode> TrackerMode { get; public set; }
    public abstract virtual RateLimitsSource get_From();
    public abstract virtual void set_From(RateLimitsSource value);
    public abstract virtual Nullable`1<RateLimitTrackerMode> get_TrackerMode();
    public abstract virtual void set_TrackerMode(Nullable`1<RateLimitTrackerMode> value);
}
public interface Tweetinvi.Parameters.IGetRelationshipBetweenParameters {
    public IUserIdentifier SourceUser { get; public set; }
    public IUserIdentifier TargetUser { get; public set; }
    public abstract virtual IUserIdentifier get_SourceUser();
    public abstract virtual void set_SourceUser(IUserIdentifier value);
    public abstract virtual IUserIdentifier get_TargetUser();
    public abstract virtual void set_TargetUser(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetRelationshipsWithParameters {
    public IUserIdentifier[] Users { get; public set; }
    public abstract virtual IUserIdentifier[] get_Users();
    public abstract virtual void set_Users(IUserIdentifier[] value);
}
public interface Tweetinvi.Parameters.IGetRetweeterIdsParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
}
public interface Tweetinvi.Parameters.IGetRetweetsOfMeTimelineParameters {
    public Nullable`1<bool> IncludeUserEntities { get; public set; }
    public abstract virtual Nullable`1<bool> get_IncludeUserEntities();
    public abstract virtual void set_IncludeUserEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetRetweetsParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public int PageSize { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
    public abstract virtual int get_PageSize();
    public abstract virtual void set_PageSize(int value);
}
public interface Tweetinvi.Parameters.IGetSavedSearchParameters {
    public long SavedSearchId { get; public set; }
    public abstract virtual long get_SavedSearchId();
    public abstract virtual void set_SavedSearchId(long value);
}
public interface Tweetinvi.Parameters.IGetSupportedLanguagesParameters {
}
public interface Tweetinvi.Parameters.IGetTweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeMyRetweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> IncludeExtAltText { get; public set; }
    public Nullable`1<bool> IncludeCardUri { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeMyRetweet();
    public abstract virtual void set_IncludeMyRetweet(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeExtAltText();
    public abstract virtual void set_IncludeExtAltText(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeCardUri();
    public abstract virtual void set_IncludeCardUri(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetTweetsFromListParameters {
    public Nullable`1<bool> IncludeRetweets { get; public set; }
    public abstract virtual Nullable`1<bool> get_IncludeRetweets();
    public abstract virtual void set_IncludeRetweets(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetTweetsParameters {
    public ITweetIdentifier[] Tweets { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> IncludeExtAltText { get; public set; }
    public Nullable`1<bool> IncludeCardUri { get; public set; }
    public abstract virtual ITweetIdentifier[] get_Tweets();
    public abstract virtual void set_Tweets(ITweetIdentifier[] value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeExtAltText();
    public abstract virtual void set_IncludeExtAltText(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeCardUri();
    public abstract virtual void set_IncludeCardUri(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetTwitterConfigurationParameters {
}
public interface Tweetinvi.Parameters.IGetUserFavoriteTweetsParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IGetUserIdsRequestingFriendshipParameters {
}
public interface Tweetinvi.Parameters.IGetUserIdsWhoseRetweetsAreMutedParameters {
}
public interface Tweetinvi.Parameters.IGetUserIdsYouRequestedToFollowParameters {
}
public interface Tweetinvi.Parameters.IGetUserListMembershipsParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetUserListSubscriptionsParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IGetUsersParameters {
    public IUserIdentifier[] Users { get; public set; }
    public abstract virtual IUserIdentifier[] get_Users();
    public abstract virtual void set_Users(IUserIdentifier[] value);
}
public interface Tweetinvi.Parameters.IGetUsersRequestingFriendshipParameters {
    public int GetUsersPageSize { get; public set; }
    public abstract virtual int get_GetUsersPageSize();
    public abstract virtual void set_GetUsersPageSize(int value);
}
public interface Tweetinvi.Parameters.IGetUsersYouRequestedToFollowParameters {
    public int GetUsersPageSize { get; public set; }
    public abstract virtual int get_GetUsersPageSize();
    public abstract virtual void set_GetUsersPageSize(int value);
}
public interface Tweetinvi.Parameters.IGetUserTimelineParameters {
    public IUserIdentifier User { get; public set; }
    public bool IncludeRetweets { get; public set; }
    public bool ExcludeReplies { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual bool get_IncludeRetweets();
    public abstract virtual void set_IncludeRetweets(bool value);
    public abstract virtual bool get_ExcludeReplies();
    public abstract virtual void set_ExcludeReplies(bool value);
}
public interface Tweetinvi.Parameters.IInvalidateAccessTokenParameters {
}
public interface Tweetinvi.Parameters.IInvalidateBearerTokenParameters {
}
public interface Tweetinvi.Parameters.IIsAccountSubscribedToAccountActivityParameters {
    public string Environment { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
}
public interface Tweetinvi.Parameters.IListMetadataParameters {
    public string Name { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<PrivacyMode> PrivacyMode { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual Nullable`1<PrivacyMode> get_PrivacyMode();
    public abstract virtual void set_PrivacyMode(Nullable`1<PrivacyMode> value);
}
public interface Tweetinvi.Parameters.IListParameters {
    public ITwitterListIdentifier List { get; public set; }
    public abstract virtual ITwitterListIdentifier get_List();
    public abstract virtual void set_List(ITwitterListIdentifier value);
}
public interface Tweetinvi.Parameters.IListSavedSearchesParameters {
}
public interface Tweetinvi.Parameters.IMessagesRetrieveRequestParametersBase {
    public int MaximumNumberOfMessagesToRetrieve { get; public set; }
    public Nullable`1<long> SinceId { get; public set; }
    public Nullable`1<long> MaxId { get; public set; }
    public bool IncludeEntities { get; public set; }
    public bool FullText { get; public set; }
    public abstract virtual int get_MaximumNumberOfMessagesToRetrieve();
    public abstract virtual void set_MaximumNumberOfMessagesToRetrieve(int value);
    public abstract virtual Nullable`1<long> get_SinceId();
    public abstract virtual void set_SinceId(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_MaxId();
    public abstract virtual void set_MaxId(Nullable`1<long> value);
    public abstract virtual bool get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(bool value);
    public abstract virtual bool get_FullText();
    public abstract virtual void set_FullText(bool value);
}
public interface Tweetinvi.Parameters.IMinMaxQueryParameters {
    public int PageSize { get; public set; }
    public Nullable`1<long> SinceId { get; public set; }
    public Nullable`1<long> MaxId { get; public set; }
    public ContinueMinMaxCursor ContinueMinMaxCursor { get; public set; }
    public abstract virtual int get_PageSize();
    public abstract virtual void set_PageSize(int value);
    public abstract virtual Nullable`1<long> get_SinceId();
    public abstract virtual void set_SinceId(Nullable`1<long> value);
    public abstract virtual Nullable`1<long> get_MaxId();
    public abstract virtual void set_MaxId(Nullable`1<long> value);
    public abstract virtual ContinueMinMaxCursor get_ContinueMinMaxCursor();
    public abstract virtual void set_ContinueMinMaxCursor(ContinueMinMaxCursor value);
}
public interface Tweetinvi.Parameters.IMuteUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.InvalidateAccessTokenParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.InvalidateBearerTokenParameters : CustomRequestParameters {
}
public interface Tweetinvi.Parameters.IPublishMessageParameters {
    public string Text { get; }
    public long RecipientId { get; }
    public Nullable`1<long> MediaId { get; public set; }
    public IQuickReplyOption[] QuickReplyOptions { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual long get_RecipientId();
    public abstract virtual Nullable`1<long> get_MediaId();
    public abstract virtual void set_MediaId(Nullable`1<long> value);
    public abstract virtual IQuickReplyOption[] get_QuickReplyOptions();
    public abstract virtual void set_QuickReplyOptions(IQuickReplyOption[] value);
}
public interface Tweetinvi.Parameters.IPublishRetweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IPublishTweetParameters {
    public string Text { get; public set; }
    public Nullable`1<long> InReplyToTweetId { get; public set; }
    public ITweet QuotedTweet { get; public set; }
    public ITweetIdentifier InReplyToTweet { get; public set; }
    public string QuotedTweetUrl { get; public set; }
    public string PlaceId { get; public set; }
    public ICoordinates Coordinates { get; public set; }
    public Nullable`1<bool> DisplayExactCoordinates { get; public set; }
    public List`1<long> MediaIds { get; public set; }
    public List`1<IMedia> Medias { get; public set; }
    public bool HasMedia { get; }
    public Nullable`1<bool> PossiblySensitive { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> AutoPopulateReplyMetadata { get; public set; }
    public IEnumerable`1<long> ExcludeReplyUserIds { get; public set; }
    public string CardUri { get; public set; }
    public abstract virtual string get_Text();
    public abstract virtual void set_Text(string value);
    public abstract virtual Nullable`1<long> get_InReplyToTweetId();
    public abstract virtual void set_InReplyToTweetId(Nullable`1<long> value);
    public abstract virtual ITweet get_QuotedTweet();
    public abstract virtual void set_QuotedTweet(ITweet value);
    public abstract virtual ITweetIdentifier get_InReplyToTweet();
    public abstract virtual void set_InReplyToTweet(ITweetIdentifier value);
    public abstract virtual string get_QuotedTweetUrl();
    public abstract virtual void set_QuotedTweetUrl(string value);
    public abstract virtual string get_PlaceId();
    public abstract virtual void set_PlaceId(string value);
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
    public abstract virtual Nullable`1<bool> get_DisplayExactCoordinates();
    public abstract virtual void set_DisplayExactCoordinates(Nullable`1<bool> value);
    public abstract virtual List`1<long> get_MediaIds();
    public abstract virtual void set_MediaIds(List`1<long> value);
    public abstract virtual List`1<IMedia> get_Medias();
    public abstract virtual void set_Medias(List`1<IMedia> value);
    public abstract virtual bool get_HasMedia();
    public abstract virtual Nullable`1<bool> get_PossiblySensitive();
    public abstract virtual void set_PossiblySensitive(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_AutoPopulateReplyMetadata();
    public abstract virtual void set_AutoPopulateReplyMetadata(Nullable`1<bool> value);
    public abstract virtual IEnumerable`1<long> get_ExcludeReplyUserIds();
    public abstract virtual void set_ExcludeReplyUserIds(IEnumerable`1<long> value);
    public abstract virtual string get_CardUri();
    public abstract virtual void set_CardUri(string value);
}
public interface Tweetinvi.Parameters.IRemoveMemberFromListParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IRemoveMembersFromListParameters {
    public List`1<IUserIdentifier> Users { get; public set; }
    public abstract virtual List`1<IUserIdentifier> get_Users();
    public abstract virtual void set_Users(List`1<IUserIdentifier> value);
}
public interface Tweetinvi.Parameters.IRemoveProfileBannerParameters {
}
public interface Tweetinvi.Parameters.IReportUserForSpamParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> PerformBlock { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_PerformBlock();
    public abstract virtual void set_PerformBlock(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IRequestAuthUrlParameters {
    public string CallbackUrl { get; public set; }
    public Nullable`1<bool> ForceLogin { get; public set; }
    public string ScreenName { get; public set; }
    public Nullable`1<AuthAccessType> AuthAccessType { get; public set; }
    public abstract virtual string get_CallbackUrl();
    public abstract virtual void set_CallbackUrl(string value);
    public abstract virtual Nullable`1<bool> get_ForceLogin();
    public abstract virtual void set_ForceLogin(Nullable`1<bool> value);
    public abstract virtual string get_ScreenName();
    public abstract virtual void set_ScreenName(string value);
    public abstract virtual Nullable`1<AuthAccessType> get_AuthAccessType();
    public abstract virtual void set_AuthAccessType(Nullable`1<AuthAccessType> value);
}
public interface Tweetinvi.Parameters.IRequestCredentialsFromCallbackUrlParameters {
    public string CallbackUrl { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    public abstract virtual string get_CallbackUrl();
    public abstract virtual void set_CallbackUrl(string value);
    public abstract virtual IAuthenticationRequest get_AuthRequest();
    public abstract virtual void set_AuthRequest(IAuthenticationRequest value);
}
public interface Tweetinvi.Parameters.IRequestCredentialsFromPinCodeParameters {
    public string PinCode { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    public abstract virtual string get_PinCode();
    public abstract virtual void set_PinCode(string value);
    public abstract virtual IAuthenticationRequest get_AuthRequest();
    public abstract virtual void set_AuthRequest(IAuthenticationRequest value);
}
public interface Tweetinvi.Parameters.IRequestCredentialsParameters {
    public string VerifierCode { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    public abstract virtual string get_VerifierCode();
    public abstract virtual void set_VerifierCode(string value);
    public abstract virtual IAuthenticationRequest get_AuthRequest();
    public abstract virtual void set_AuthRequest(IAuthenticationRequest value);
}
public class Tweetinvi.Parameters.IsAccountSubscribedToAccountActivityParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    public string Environment { get; public set; }
    public IsAccountSubscribedToAccountActivityParameters(string environment);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
}
public interface Tweetinvi.Parameters.ISearchTweetsParameters {
    public string Query { get; public set; }
    public string Locale { get; public set; }
    public Nullable`1<LanguageFilter> Lang { get; public set; }
    public IGeoCode GeoCode { get; public set; }
    public Nullable`1<SearchResultType> SearchType { get; public set; }
    public Nullable`1<DateTime> Since { get; public set; }
    public Nullable`1<DateTime> Until { get; public set; }
    public TweetSearchFilters Filters { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual string get_Locale();
    public abstract virtual void set_Locale(string value);
    public abstract virtual Nullable`1<LanguageFilter> get_Lang();
    public abstract virtual void set_Lang(Nullable`1<LanguageFilter> value);
    public abstract virtual IGeoCode get_GeoCode();
    public abstract virtual void set_GeoCode(IGeoCode value);
    public abstract virtual Nullable`1<SearchResultType> get_SearchType();
    public abstract virtual void set_SearchType(Nullable`1<SearchResultType> value);
    public abstract virtual Nullable`1<DateTime> get_Since();
    public abstract virtual void set_Since(Nullable`1<DateTime> value);
    public abstract virtual Nullable`1<DateTime> get_Until();
    public abstract virtual void set_Until(Nullable`1<DateTime> value);
    public abstract virtual TweetSearchFilters get_Filters();
    public abstract virtual void set_Filters(TweetSearchFilters value);
    public abstract virtual void SetGeoCode(ICoordinates coordinates, double radius, DistanceMeasure measure);
    public abstract virtual void SetGeoCode(double latitude, double longitude, double radius, DistanceMeasure measure);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.ISearchUsersParameters {
    public string Query { get; public set; }
    public Nullable`1<int> Page { get; public set; }
    public int PageSize { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<int> get_Page();
    public abstract virtual void set_Page(Nullable`1<int> value);
    public abstract virtual int get_PageSize();
    public abstract virtual void set_PageSize(int value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.ISubscribeToAccountActivityParameters {
    public string Environment { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
}
public interface Tweetinvi.Parameters.ISubscribeToListParameters {
}
public interface Tweetinvi.Parameters.ITimelineRequestParameters {
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual Nullable`1<bool> get_TrimUser();
    public abstract virtual void set_TrimUser(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.ITriggerAccountActivityWebhookCRCParameters {
    public string Environment { get; public set; }
    public string WebhookId { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual string get_WebhookId();
    public abstract virtual void set_WebhookId(string value);
}
public interface Tweetinvi.Parameters.ITweetModeParameter {
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public abstract virtual Nullable`1<TweetMode> get_TweetMode();
    public abstract virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public interface Tweetinvi.Parameters.IUnblockUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IUnfavoriteTweetParameters {
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual ITweetIdentifier get_Tweet();
    public abstract virtual void set_Tweet(ITweetIdentifier value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IUnfollowUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IUnmuteUserParameters {
    public IUserIdentifier User { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
}
public interface Tweetinvi.Parameters.IUnsubscribeFromAccountActivityParameters {
    public string Environment { get; public set; }
    public long UserId { get; public set; }
    public abstract virtual string get_Environment();
    public abstract virtual void set_Environment(string value);
    public abstract virtual long get_UserId();
    public abstract virtual void set_UserId(long value);
}
public interface Tweetinvi.Parameters.IUnsubscribeFromListParameters {
}
public interface Tweetinvi.Parameters.IUpdateAccountSettingsParameters {
    public Nullable`1<Language> DisplayLanguage { get; public set; }
    public string TimeZone { get; public set; }
    public Nullable`1<long> TrendLocationWoeid { get; public set; }
    public Nullable`1<bool> SleepTimeEnabled { get; public set; }
    public Nullable`1<int> StartSleepHour { get; public set; }
    public Nullable`1<int> EndSleepHour { get; public set; }
    public abstract virtual Nullable`1<Language> get_DisplayLanguage();
    public abstract virtual void set_DisplayLanguage(Nullable`1<Language> value);
    public abstract virtual string get_TimeZone();
    public abstract virtual void set_TimeZone(string value);
    public abstract virtual Nullable`1<long> get_TrendLocationWoeid();
    public abstract virtual void set_TrendLocationWoeid(Nullable`1<long> value);
    public abstract virtual Nullable`1<bool> get_SleepTimeEnabled();
    public abstract virtual void set_SleepTimeEnabled(Nullable`1<bool> value);
    public abstract virtual Nullable`1<int> get_StartSleepHour();
    public abstract virtual void set_StartSleepHour(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_EndSleepHour();
    public abstract virtual void set_EndSleepHour(Nullable`1<int> value);
    public abstract virtual void SetTimeZone(TimeZoneFromTwitter timeZoneFromTwitter);
}
public interface Tweetinvi.Parameters.IUpdateListParameters {
}
public interface Tweetinvi.Parameters.IUpdateProfileBannerParameters {
    public Byte[] Binary { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public Nullable`1<int> OffsetLeft { get; public set; }
    public Nullable`1<int> OffsetTop { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public abstract virtual Byte[] get_Binary();
    public abstract virtual void set_Binary(Byte[] value);
    public abstract virtual Nullable`1<int> get_Width();
    public abstract virtual void set_Width(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_Height();
    public abstract virtual void set_Height(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_OffsetLeft();
    public abstract virtual void set_OffsetLeft(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_OffsetTop();
    public abstract virtual void set_OffsetTop(Nullable`1<int> value);
    public abstract virtual Nullable`1<TimeSpan> get_Timeout();
    public abstract virtual void set_Timeout(Nullable`1<TimeSpan> value);
    public abstract virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    public abstract virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
}
public interface Tweetinvi.Parameters.IUpdateProfileImageParameters {
    public Byte[] Binary { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public abstract virtual Byte[] get_Binary();
    public abstract virtual void set_Binary(Byte[] value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
    public abstract virtual Nullable`1<TimeSpan> get_Timeout();
    public abstract virtual void set_Timeout(Nullable`1<TimeSpan> value);
    public abstract virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    public abstract virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
}
public interface Tweetinvi.Parameters.IUpdateProfileParameters {
    public string Name { get; public set; }
    public string WebsiteUrl { get; public set; }
    public string Location { get; public set; }
    public string Description { get; public set; }
    public string ProfileLinkColor { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public abstract virtual string get_Name();
    public abstract virtual void set_Name(string value);
    public abstract virtual string get_WebsiteUrl();
    public abstract virtual void set_WebsiteUrl(string value);
    public abstract virtual string get_Location();
    public abstract virtual void set_Location(string value);
    public abstract virtual string get_Description();
    public abstract virtual void set_Description(string value);
    public abstract virtual string get_ProfileLinkColor();
    public abstract virtual void set_ProfileLinkColor(string value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IUpdateRelationshipParameters {
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> EnableRetweets { get; public set; }
    public Nullable`1<bool> EnableDeviceNotifications { get; public set; }
    public abstract virtual IUserIdentifier get_User();
    public abstract virtual void set_User(IUserIdentifier value);
    public abstract virtual Nullable`1<bool> get_EnableRetweets();
    public abstract virtual void set_EnableRetweets(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_EnableDeviceNotifications();
    public abstract virtual void set_EnableDeviceNotifications(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.IUploadMessageImageParameters {
}
public interface Tweetinvi.Parameters.IUploadMessageVideoParameters {
}
public interface Tweetinvi.Parameters.IUploadOptionalParameters {
    public Nullable`1<MediaType> MediaType { get; public set; }
    public string QueryMediaType { get; public set; }
    public Nullable`1<MediaCategory> MediaCategory { get; public set; }
    public string QueryMediaCategory { get; public set; }
    public int MaxChunkSize { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public List`1<long> AdditionalOwnerIds { get; public set; }
    public bool WaitForTwitterProcessing { get; public set; }
    public ICustomRequestParameters InitCustomRequestParameters { get; public set; }
    public ICustomRequestParameters AppendCustomRequestParameters { get; public set; }
    public ICustomRequestParameters FinalizeCustomRequestParameters { get; public set; }
    public Action`1<IMediaUploadProgressChangedEventArgs> UploadStateChanged { get; public set; }
    public abstract virtual Nullable`1<MediaType> get_MediaType();
    public abstract virtual void set_MediaType(Nullable`1<MediaType> value);
    public abstract virtual string get_QueryMediaType();
    public abstract virtual void set_QueryMediaType(string value);
    public abstract virtual Nullable`1<MediaCategory> get_MediaCategory();
    public abstract virtual void set_MediaCategory(Nullable`1<MediaCategory> value);
    public abstract virtual string get_QueryMediaCategory();
    public abstract virtual void set_QueryMediaCategory(string value);
    public abstract virtual int get_MaxChunkSize();
    public abstract virtual void set_MaxChunkSize(int value);
    public abstract virtual Nullable`1<TimeSpan> get_Timeout();
    public abstract virtual void set_Timeout(Nullable`1<TimeSpan> value);
    public abstract virtual List`1<long> get_AdditionalOwnerIds();
    public abstract virtual void set_AdditionalOwnerIds(List`1<long> value);
    public abstract virtual bool get_WaitForTwitterProcessing();
    public abstract virtual void set_WaitForTwitterProcessing(bool value);
    public abstract virtual ICustomRequestParameters get_InitCustomRequestParameters();
    public abstract virtual void set_InitCustomRequestParameters(ICustomRequestParameters value);
    public abstract virtual ICustomRequestParameters get_AppendCustomRequestParameters();
    public abstract virtual void set_AppendCustomRequestParameters(ICustomRequestParameters value);
    public abstract virtual ICustomRequestParameters get_FinalizeCustomRequestParameters();
    public abstract virtual void set_FinalizeCustomRequestParameters(ICustomRequestParameters value);
    public abstract virtual Action`1<IMediaUploadProgressChangedEventArgs> get_UploadStateChanged();
    public abstract virtual void set_UploadStateChanged(Action`1<IMediaUploadProgressChangedEventArgs> value);
}
public interface Tweetinvi.Parameters.IUploadParameters {
    public Byte[] Binary { get; public set; }
    public abstract virtual Byte[] get_Binary();
    public abstract virtual void set_Binary(Byte[] value);
}
public interface Tweetinvi.Parameters.IUploadTweetImageParameters {
}
public interface Tweetinvi.Parameters.IUploadTweetVideoParameters {
}
public class Tweetinvi.Parameters.ListMetadataParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<PrivacyMode> <PrivacyMode>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public Nullable`1<PrivacyMode> PrivacyMode { get; public set; }
    public ListMetadataParameters(IListMetadataParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<PrivacyMode> get_PrivacyMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PrivacyMode(Nullable`1<PrivacyMode> value);
}
public class Tweetinvi.Parameters.ListSavedSearchesParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.MinMaxQueryParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <SinceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MaxId>k__BackingField;
    [CompilerGeneratedAttribute]
private ContinueMinMaxCursor <ContinueMinMaxCursor>k__BackingField;
    public int PageSize { get; public set; }
    public Nullable`1<long> SinceId { get; public set; }
    public Nullable`1<long> MaxId { get; public set; }
    public ContinueMinMaxCursor ContinueMinMaxCursor { get; public set; }
    protected MinMaxQueryParameters(IMinMaxQueryParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_SinceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SinceId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MaxId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual ContinueMinMaxCursor get_ContinueMinMaxCursor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ContinueMinMaxCursor(ContinueMinMaxCursor value);
}
public class Tweetinvi.Parameters.MuteUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public MuteUserParameters(long userId);
    public MuteUserParameters(string username);
    public MuteUserParameters(IUserIdentifier user);
    public MuteUserParameters(IMuteUserParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public enum Tweetinvi.Parameters.OEmbedTweetAlignment : Enum {
    public int value__;
    public static OEmbedTweetAlignment None;
    public static OEmbedTweetAlignment Left;
    public static OEmbedTweetAlignment Center;
    public static OEmbedTweetAlignment Right;
}
public enum Tweetinvi.Parameters.OEmbedTweetTheme : Enum {
    public int value__;
    public static OEmbedTweetTheme Light;
    public static OEmbedTweetTheme Dark;
}
public enum Tweetinvi.Parameters.OEmbedTweetWidgetType : Enum {
    public int value__;
    public static OEmbedTweetWidgetType Default;
    public static OEmbedTweetWidgetType Video;
}
public class Tweetinvi.Parameters.Optionals.GetCursorUsersOptionalParameters : CursorQueryParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public GetCursorUsersOptionalParameters(IGetCursorUsersOptionalParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.Optionals.GetUsersOptionalParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public GetUsersOptionalParameters(IGetUsersOptionalParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public interface Tweetinvi.Parameters.Optionals.IGetCursorUsersOptionalParameters {
}
public interface Tweetinvi.Parameters.Optionals.IGetUsersOptionalParameters {
    public Nullable`1<bool> SkipStatus { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public abstract virtual Nullable`1<bool> get_SkipStatus();
    public abstract virtual void set_SkipStatus(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_IncludeEntities();
    public abstract virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.PublishMessageParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private long <RecipientId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private IQuickReplyOption[] <QuickReplyOptions>k__BackingField;
    public string Text { get; }
    public long RecipientId { get; }
    public Nullable`1<long> MediaId { get; public set; }
    public IQuickReplyOption[] QuickReplyOptions { get; public set; }
    public PublishMessageParameters(string text, long recipientId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual long get_RecipientId();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual IQuickReplyOption[] get_QuickReplyOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuickReplyOptions(IQuickReplyOption[] value);
}
public class Tweetinvi.Parameters.PublishRetweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public PublishRetweetParameters(long tweetId);
    public PublishRetweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.PublishTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweetIdentifier <InReplyToTweet>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QuotedTweetUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private ITweet <QuotedTweet>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<long> <MediaIds>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IMedia> <Medias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PlaceId>k__BackingField;
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisplayExactCoordinates>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PossiblySensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoPopulateReplyMetadata>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<long> <ExcludeReplyUserIds>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CardUri>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public string Text { get; public set; }
    public ITweetIdentifier InReplyToTweet { get; public set; }
    public string QuotedTweetUrl { get; public set; }
    public ITweet QuotedTweet { get; public set; }
    public Nullable`1<long> InReplyToTweetId { get; public set; }
    public List`1<long> MediaIds { get; public set; }
    public List`1<IMedia> Medias { get; public set; }
    public bool HasMedia { get; }
    public string PlaceId { get; public set; }
    public ICoordinates Coordinates { get; public set; }
    public Nullable`1<bool> DisplayExactCoordinates { get; public set; }
    public Nullable`1<bool> PossiblySensitive { get; public set; }
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> AutoPopulateReplyMetadata { get; public set; }
    public IEnumerable`1<long> ExcludeReplyUserIds { get; public set; }
    public string CardUri { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public PublishTweetParameters(string text);
    public PublishTweetParameters(IPublishTweetParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Text();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Text(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_InReplyToTweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InReplyToTweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QuotedTweetUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuotedTweetUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITweet get_QuotedTweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QuotedTweet(ITweet value);
    public sealed virtual Nullable`1<long> get_InReplyToTweetId();
    public sealed virtual void set_InReplyToTweetId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<long> get_MediaIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaIds(List`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IMedia> get_Medias();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Medias(List`1<IMedia> value);
    public sealed virtual bool get_HasMedia();
    [CompilerGeneratedAttribute]
public sealed virtual string get_PlaceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PlaceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisplayExactCoordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayExactCoordinates(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PossiblySensitive();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PossiblySensitive(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AutoPopulateReplyMetadata();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AutoPopulateReplyMetadata(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<long> get_ExcludeReplyUserIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExcludeReplyUserIds(IEnumerable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CardUri();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CardUri(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public interface Tweetinvi.Parameters.RateLimitsClient.IWaitForCredentialsRateLimitParameters {
    public string Url { get; public set; }
    public ITwitterRequest Request { get; public set; }
    public IReadOnlyTwitterCredentials Credentials { get; public set; }
    public ITwitterExecutionContext ExecutionContext { get; public set; }
    public RateLimitsSource From { get; public set; }
    public abstract virtual string get_Url();
    public abstract virtual void set_Url(string value);
    public abstract virtual ITwitterRequest get_Request();
    public abstract virtual void set_Request(ITwitterRequest value);
    public abstract virtual IReadOnlyTwitterCredentials get_Credentials();
    public abstract virtual void set_Credentials(IReadOnlyTwitterCredentials value);
    public abstract virtual ITwitterExecutionContext get_ExecutionContext();
    public abstract virtual void set_ExecutionContext(ITwitterExecutionContext value);
    public abstract virtual RateLimitsSource get_From();
    public abstract virtual void set_From(RateLimitsSource value);
}
public class Tweetinvi.Parameters.RateLimitsClient.WaitForCredentialsRateLimitParameters : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyTwitterCredentials <Credentials>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterExecutionContext <ExecutionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private RateLimitsSource <From>k__BackingField;
    public string Url { get; public set; }
    public ITwitterRequest Request { get; public set; }
    public IReadOnlyTwitterCredentials Credentials { get; public set; }
    public ITwitterExecutionContext ExecutionContext { get; public set; }
    public RateLimitsSource From { get; public set; }
    public WaitForCredentialsRateLimitParameters(string url);
    public WaitForCredentialsRateLimitParameters(ITwitterRequest request);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterRequest get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(ITwitterRequest value);
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyTwitterCredentials get_Credentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Credentials(IReadOnlyTwitterCredentials value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterExecutionContext get_ExecutionContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionContext(ITwitterExecutionContext value);
    [CompilerGeneratedAttribute]
public sealed virtual RateLimitsSource get_From();
    [CompilerGeneratedAttribute]
public sealed virtual void set_From(RateLimitsSource value);
}
public enum Tweetinvi.Parameters.RateLimitsSource : Enum {
    public int value__;
    public static RateLimitsSource CacheOrTwitterApi;
    public static RateLimitsSource CacheOnly;
    public static RateLimitsSource TwitterApiOnly;
}
public class Tweetinvi.Parameters.RemoveMemberFromListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public RemoveMemberFromListParameters(long listId, long userId);
    public RemoveMemberFromListParameters(long listId, string username);
    public RemoveMemberFromListParameters(long listId, IUserIdentifier user);
    public RemoveMemberFromListParameters(ITwitterListIdentifier list, long userId);
    public RemoveMemberFromListParameters(ITwitterListIdentifier list, string username);
    public RemoveMemberFromListParameters(ITwitterListIdentifier list, IUserIdentifier user);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.RemoveMembersFromListParameters : TwitterListParameters {
    [CompilerGeneratedAttribute]
private List`1<IUserIdentifier> <Users>k__BackingField;
    public List`1<IUserIdentifier> Users { get; public set; }
    public RemoveMembersFromListParameters(long listId, IEnumerable`1<long> userIds);
    public RemoveMembersFromListParameters(long listId, IEnumerable`1<string> usernames);
    public RemoveMembersFromListParameters(long listId, IEnumerable`1<IUserIdentifier> users);
    public RemoveMembersFromListParameters(ITwitterListIdentifier list, IEnumerable`1<long> userIds);
    public RemoveMembersFromListParameters(ITwitterListIdentifier list, IEnumerable`1<string> usernames);
    public RemoveMembersFromListParameters(ITwitterListIdentifier list, IEnumerable`1<IUserIdentifier> users);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<IUserIdentifier> get_Users();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Users(List`1<IUserIdentifier> value);
}
public class Tweetinvi.Parameters.RemoveProfileBannerParameters : CustomRequestParameters {
}
public class Tweetinvi.Parameters.ReportUserForSpamParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PerformBlock>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> PerformBlock { get; public set; }
    public ReportUserForSpamParameters(IUserIdentifier user);
    public ReportUserForSpamParameters(string username);
    public ReportUserForSpamParameters(long userId);
    public ReportUserForSpamParameters(IReportUserForSpamParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_PerformBlock();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PerformBlock(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.RequestCredentialsFromCallbackUrlParameters : object {
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticationRequest <AuthRequest>k__BackingField;
    public string CallbackUrl { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IAuthenticationRequest get_AuthRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthRequest(IAuthenticationRequest value);
}
public class Tweetinvi.Parameters.RequestCredentialsFromPinCodeParameters : object {
    [CompilerGeneratedAttribute]
private string <PinCode>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticationRequest <AuthRequest>k__BackingField;
    public string PinCode { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_PinCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PinCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IAuthenticationRequest get_AuthRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthRequest(IAuthenticationRequest value);
}
public class Tweetinvi.Parameters.RequestCredentialsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <VerifierCode>k__BackingField;
    [CompilerGeneratedAttribute]
private IAuthenticationRequest <AuthRequest>k__BackingField;
    public string VerifierCode { get; public set; }
    public IAuthenticationRequest AuthRequest { get; public set; }
    public RequestCredentialsParameters(string verifierCode, IAuthenticationRequest authenticationRequest);
    public static IRequestCredentialsParameters FromPinCode(string pinCode, IAuthenticationRequest authRequest);
    public static IRequestCredentialsParameters FromCallbackUrl(Uri callbackUri, IAuthenticationRequest authenticationRequestStore);
    public static IRequestCredentialsParameters FromCallbackUrl(string callbackUrl, IAuthenticationRequest authRequest);
    [AsyncStateMachineAttribute("Tweetinvi.Parameters.RequestCredentialsParameters/<FromCallbackUrlAsync>d__3")]
public static Task`1<IRequestCredentialsParameters> FromCallbackUrlAsync(string callbackUrl, IAuthenticationRequestStore authenticationRequestStore);
    [CompilerGeneratedAttribute]
public sealed virtual string get_VerifierCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_VerifierCode(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IAuthenticationRequest get_AuthRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthRequest(IAuthenticationRequest value);
}
public class Tweetinvi.Parameters.RequestPinAuthUrlParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AuthAccessType> <AuthAccessType>k__BackingField;
    public string CallbackUrl { get; public set; }
    public Nullable`1<bool> ForceLogin { get; public set; }
    public string ScreenName { get; public set; }
    public string RequestId { get; public set; }
    public Nullable`1<AuthAccessType> AuthAccessType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ForceLogin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForceLogin(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScreenName(string value);
    [CompilerGeneratedAttribute]
public string get_RequestId();
    [CompilerGeneratedAttribute]
public void set_RequestId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AuthAccessType> get_AuthAccessType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthAccessType(Nullable`1<AuthAccessType> value);
}
public class Tweetinvi.Parameters.RequestUrlAuthUrlParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <CallbackUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ForceLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ScreenName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<AuthAccessType> <AuthAccessType>k__BackingField;
    public string CallbackUrl { get; public set; }
    public Nullable`1<bool> ForceLogin { get; public set; }
    public string ScreenName { get; public set; }
    public Nullable`1<AuthAccessType> AuthAccessType { get; public set; }
    public RequestUrlAuthUrlParameters(string url);
    public RequestUrlAuthUrlParameters(Uri uri);
    public RequestUrlAuthUrlParameters(IRequestAuthUrlParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CallbackUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CallbackUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_ForceLogin();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ForceLogin(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ScreenName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ScreenName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<AuthAccessType> get_AuthAccessType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthAccessType(Nullable`1<AuthAccessType> value);
}
public class Tweetinvi.Parameters.SearchTweetsParameters : MinMaxQueryParameters {
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Locale>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<LanguageFilter> <Lang>k__BackingField;
    [CompilerGeneratedAttribute]
private IGeoCode <GeoCode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SearchResultType> <SearchType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Since>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Until>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetSearchFilters <Filters>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public string Query { get; public set; }
    public string Locale { get; public set; }
    public Nullable`1<LanguageFilter> Lang { get; public set; }
    public IGeoCode GeoCode { get; public set; }
    public Nullable`1<SearchResultType> SearchType { get; public set; }
    public Nullable`1<DateTime> Since { get; public set; }
    public Nullable`1<DateTime> Until { get; public set; }
    public TweetSearchFilters Filters { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public SearchTweetsParameters(string searchQuery);
    public SearchTweetsParameters(IGeoCode geoCode);
    public SearchTweetsParameters(ICoordinates coordinates, int radius, DistanceMeasure measure);
    public SearchTweetsParameters(double latitude, double longitude, int radius, DistanceMeasure measure);
    public SearchTweetsParameters(ISearchTweetsParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Locale();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Locale(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<LanguageFilter> get_Lang();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Lang(Nullable`1<LanguageFilter> value);
    [CompilerGeneratedAttribute]
public sealed virtual IGeoCode get_GeoCode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GeoCode(IGeoCode value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<SearchResultType> get_SearchType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SearchType(Nullable`1<SearchResultType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_Since();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Since(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_Until();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Until(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual TweetSearchFilters get_Filters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Filters(TweetSearchFilters value);
    public sealed virtual void SetGeoCode(ICoordinates coordinates, double radius, DistanceMeasure measure);
    public sealed virtual void SetGeoCode(double latitude, double longitude, double radius, DistanceMeasure measure);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.SearchUsersParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    private Nullable`1<int> _page;
    [CompilerGeneratedAttribute]
private int <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    public string Query { get; public set; }
    public Nullable`1<int> Page { get; public set; }
    public int PageSize { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public SearchUsersParameters(string query);
    public SearchUsersParameters(ISearchUsersParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    public sealed virtual Nullable`1<int> get_Page();
    public sealed virtual void set_Page(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_PageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PageSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.SubscribeToAccountActivityParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    public string Environment { get; public set; }
    public SubscribeToAccountActivityParameters(string environment);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
}
public class Tweetinvi.Parameters.SubscribeToListParameters : TwitterListParameters {
    public SubscribeToListParameters(long listId);
    public SubscribeToListParameters(ITwitterListIdentifier list);
}
public abstract class Tweetinvi.Parameters.TimelineRequestParameters : MinMaxQueryParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TrimUser>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    public Nullable`1<bool> TrimUser { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    protected TimelineRequestParameters(ITimelineRequestParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_TrimUser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrimUser(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
}
public class Tweetinvi.Parameters.TrendsClient.GetTrendsAtParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private long <Woeid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<GetTrendsExclude> <Exclude>k__BackingField;
    public long Woeid { get; public set; }
    public Nullable`1<GetTrendsExclude> Exclude { get; public set; }
    public GetTrendsAtParameters(long woeid);
    [CompilerGeneratedAttribute]
public sealed virtual long get_Woeid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Woeid(long value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<GetTrendsExclude> get_Exclude();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Exclude(Nullable`1<GetTrendsExclude> value);
}
public enum Tweetinvi.Parameters.TrendsClient.GetTrendsExclude : Enum {
    public int value__;
    public static GetTrendsExclude Nothing;
    public static GetTrendsExclude Hashtags;
}
public class Tweetinvi.Parameters.TrendsClient.GetTrendsLocationCloseToParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ICoordinates <Coordinates>k__BackingField;
    public ICoordinates Coordinates { get; public set; }
    public GetTrendsLocationCloseToParameters(double latitude, double longitude);
    public GetTrendsLocationCloseToParameters(ICoordinates coordinates);
    [CompilerGeneratedAttribute]
public sealed virtual ICoordinates get_Coordinates();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Coordinates(ICoordinates value);
}
public class Tweetinvi.Parameters.TrendsClient.GetTrendsLocationParameters : CustomRequestParameters {
}
public interface Tweetinvi.Parameters.TrendsClient.IGetTrendsAtParameters {
    public long Woeid { get; public set; }
    public Nullable`1<GetTrendsExclude> Exclude { get; public set; }
    public abstract virtual long get_Woeid();
    public abstract virtual void set_Woeid(long value);
    public abstract virtual Nullable`1<GetTrendsExclude> get_Exclude();
    public abstract virtual void set_Exclude(Nullable`1<GetTrendsExclude> value);
}
public interface Tweetinvi.Parameters.TrendsClient.IGetTrendsLocationCloseToParameters {
    public ICoordinates Coordinates { get; public set; }
    public abstract virtual ICoordinates get_Coordinates();
    public abstract virtual void set_Coordinates(ICoordinates value);
}
public interface Tweetinvi.Parameters.TrendsClient.IGetTrendsLocationParameters {
}
public class Tweetinvi.Parameters.TriggerAccountActivityWebhookCRCParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebhookId>k__BackingField;
    public string Environment { get; public set; }
    public string WebhookId { get; public set; }
    public TriggerAccountActivityWebhookCRCParameters(string environment, string webhookId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebhookId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebhookId(string value);
}
public class Tweetinvi.Parameters.TwitterListParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITwitterListIdentifier <List>k__BackingField;
    public ITwitterListIdentifier List { get; public set; }
    public TwitterListParameters(long listId);
    public TwitterListParameters(ITwitterListIdentifier list);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterListIdentifier get_List();
    [CompilerGeneratedAttribute]
public sealed virtual void set_List(ITwitterListIdentifier value);
}
public class Tweetinvi.Parameters.UnblockUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public UnblockUserParameters(string username);
    public UnblockUserParameters(long userId);
    public UnblockUserParameters(IUserIdentifier user);
    public UnblockUserParameters(IUnblockUserParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.UnfavoriteTweetParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private ITweetIdentifier <Tweet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    public ITweetIdentifier Tweet { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public UnfavoriteTweetParameters(long tweetId);
    public UnfavoriteTweetParameters(ITweetIdentifier tweet);
    [CompilerGeneratedAttribute]
public sealed virtual ITweetIdentifier get_Tweet();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Tweet(ITweetIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.UnfollowUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public UnfollowUserParameters(string username);
    public UnfollowUserParameters(long userId);
    public UnfollowUserParameters(IUserIdentifier user);
    public UnfollowUserParameters(IUnfollowUserParameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.UnmuteUserParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public UnmuteUserParameters(long userId);
    public UnmuteUserParameters(string username);
    public UnmuteUserParameters(IUserIdentifier user);
    public UnmuteUserParameters(IMuteUserParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
}
public class Tweetinvi.Parameters.UnsubscribeFromAccountActivityParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Environment>k__BackingField;
    [CompilerGeneratedAttribute]
private long <UserId>k__BackingField;
    public string Environment { get; public set; }
    public long UserId { get; public set; }
    public UnsubscribeFromAccountActivityParameters(string environment, long userId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Environment();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Environment(string value);
    [CompilerGeneratedAttribute]
public sealed virtual long get_UserId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserId(long value);
}
public class Tweetinvi.Parameters.UnsubscribeFromListParameters : TwitterListParameters {
    public UnsubscribeFromListParameters(long listId);
    public UnsubscribeFromListParameters(ITwitterListIdentifier list);
}
public class Tweetinvi.Parameters.UpdateAccountSettingsParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Nullable`1<Language> <DisplayLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeZone>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<long> <TrendLocationWoeid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SleepTimeEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StartSleepHour>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <EndSleepHour>k__BackingField;
    public Nullable`1<Language> DisplayLanguage { get; public set; }
    public string TimeZone { get; public set; }
    public Nullable`1<long> TrendLocationWoeid { get; public set; }
    public Nullable`1<bool> SleepTimeEnabled { get; public set; }
    public Nullable`1<int> StartSleepHour { get; public set; }
    public Nullable`1<int> EndSleepHour { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Language> get_DisplayLanguage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisplayLanguage(Nullable`1<Language> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TimeZone();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TimeZone(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_TrendLocationWoeid();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TrendLocationWoeid(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SleepTimeEnabled();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SleepTimeEnabled(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_StartSleepHour();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StartSleepHour(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_EndSleepHour();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndSleepHour(Nullable`1<int> value);
    public sealed virtual void SetTimeZone(TimeZoneFromTwitter timeZoneFromTwitter);
}
public class Tweetinvi.Parameters.UpdateListParameters : ListMetadataParameters {
    [CompilerGeneratedAttribute]
private ITwitterListIdentifier <List>k__BackingField;
    public ITwitterListIdentifier List { get; public set; }
    public UpdateListParameters(IUpdateListParameters parameters);
    public UpdateListParameters(long listId);
    public UpdateListParameters(string slug, IUserIdentifier userId);
    public UpdateListParameters(ITwitterListIdentifier listId);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterListIdentifier get_List();
    [CompilerGeneratedAttribute]
public sealed virtual void set_List(ITwitterListIdentifier value);
}
public class Tweetinvi.Parameters.UpdateProfileBannerParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Byte[] <Binary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Height>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OffsetLeft>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <OffsetTop>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IUploadProgressChanged> <UploadProgressChanged>k__BackingField;
    public Byte[] Binary { get; public set; }
    public Nullable`1<int> Width { get; public set; }
    public Nullable`1<int> Height { get; public set; }
    public Nullable`1<int> OffsetLeft { get; public set; }
    public Nullable`1<int> OffsetTop { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public UpdateProfileBannerParameters(Byte[] image);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Binary(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Width();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Width(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Height();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Height(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_OffsetLeft();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OffsetLeft(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_OffsetTop();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OffsetTop(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
}
public class Tweetinvi.Parameters.UpdateProfileImageParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private Byte[] <Binary>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IUploadProgressChanged> <UploadProgressChanged>k__BackingField;
    public Byte[] Binary { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public Action`1<IUploadProgressChanged> UploadProgressChanged { get; public set; }
    public UpdateProfileImageParameters(Byte[] image);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Binary(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IUploadProgressChanged> get_UploadProgressChanged();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadProgressChanged(Action`1<IUploadProgressChanged> value);
}
public class Tweetinvi.Parameters.UpdateProfileParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Location>k__BackingField;
    [CompilerGeneratedAttribute]
private string <WebsiteUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProfileLinkColor>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IncludeEntities>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SkipStatus>k__BackingField;
    public string Name { get; public set; }
    public string Description { get; public set; }
    public string Location { get; public set; }
    public string WebsiteUrl { get; public set; }
    public string ProfileLinkColor { get; public set; }
    public Nullable`1<bool> IncludeEntities { get; public set; }
    public Nullable`1<bool> SkipStatus { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Description(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Location();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Location(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_WebsiteUrl();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WebsiteUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProfileLinkColor();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProfileLinkColor(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IncludeEntities();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IncludeEntities(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SkipStatus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SkipStatus(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.UpdateRelationshipParameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private IUserIdentifier <User>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableRetweets>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <EnableDeviceNotifications>k__BackingField;
    public IUserIdentifier User { get; public set; }
    public Nullable`1<bool> EnableRetweets { get; public set; }
    public Nullable`1<bool> EnableDeviceNotifications { get; public set; }
    public UpdateRelationshipParameters(long userId);
    public UpdateRelationshipParameters(string username);
    public UpdateRelationshipParameters(IUserIdentifier user);
    public UpdateRelationshipParameters(IUpdateRelationshipParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual IUserIdentifier get_User();
    [CompilerGeneratedAttribute]
public sealed virtual void set_User(IUserIdentifier value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableRetweets();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableRetweets(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_EnableDeviceNotifications();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EnableDeviceNotifications(Nullable`1<bool> value);
}
public class Tweetinvi.Parameters.UploadBinaryParameters : UploadOptionalParameters {
    [CompilerGeneratedAttribute]
private Byte[] <Binary>k__BackingField;
    public Byte[] Binary { get; public set; }
    public UploadBinaryParameters(Byte[] binary);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_Binary();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Binary(Byte[] value);
}
public class Tweetinvi.Parameters.UploadMessageImageParameters : UploadBinaryParameters {
    public UploadMessageImageParameters(Byte[] binary);
}
public class Tweetinvi.Parameters.UploadMessageVideoParameters : UploadBinaryParameters {
    public UploadMessageVideoParameters(Byte[] binary);
}
public class Tweetinvi.Parameters.UploadOptionalParameters : object {
    [CompilerGeneratedAttribute]
private string <QueryMediaType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QueryMediaCategory>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MaxChunkSize>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <Timeout>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<long> <AdditionalOwnerIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WaitForTwitterProcessing>k__BackingField;
    [CompilerGeneratedAttribute]
private ICustomRequestParameters <InitCustomRequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ICustomRequestParameters <AppendCustomRequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private ICustomRequestParameters <FinalizeCustomRequestParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private Action`1<IMediaUploadProgressChangedEventArgs> <UploadStateChanged>k__BackingField;
    public Nullable`1<MediaType> MediaType { get; public set; }
    public string QueryMediaType { get; public set; }
    public Nullable`1<MediaCategory> MediaCategory { get; public set; }
    public string QueryMediaCategory { get; public set; }
    public int MaxChunkSize { get; public set; }
    public Nullable`1<TimeSpan> Timeout { get; public set; }
    public List`1<long> AdditionalOwnerIds { get; public set; }
    public bool WaitForTwitterProcessing { get; public set; }
    public ICustomRequestParameters InitCustomRequestParameters { get; public set; }
    public ICustomRequestParameters AppendCustomRequestParameters { get; public set; }
    public ICustomRequestParameters FinalizeCustomRequestParameters { get; public set; }
    public Action`1<IMediaUploadProgressChangedEventArgs> UploadStateChanged { get; public set; }
    public sealed virtual Nullable`1<MediaType> get_MediaType();
    public sealed virtual void set_MediaType(Nullable`1<MediaType> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QueryMediaType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryMediaType(string value);
    public sealed virtual Nullable`1<MediaCategory> get_MediaCategory();
    public sealed virtual void set_MediaCategory(Nullable`1<MediaCategory> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_QueryMediaCategory();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryMediaCategory(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_MaxChunkSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxChunkSize(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_Timeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Timeout(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<long> get_AdditionalOwnerIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalOwnerIds(List`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_WaitForTwitterProcessing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_WaitForTwitterProcessing(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual ICustomRequestParameters get_InitCustomRequestParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_InitCustomRequestParameters(ICustomRequestParameters value);
    [CompilerGeneratedAttribute]
public sealed virtual ICustomRequestParameters get_AppendCustomRequestParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AppendCustomRequestParameters(ICustomRequestParameters value);
    [CompilerGeneratedAttribute]
public sealed virtual ICustomRequestParameters get_FinalizeCustomRequestParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FinalizeCustomRequestParameters(ICustomRequestParameters value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IMediaUploadProgressChangedEventArgs> get_UploadStateChanged();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UploadStateChanged(Action`1<IMediaUploadProgressChangedEventArgs> value);
}
public class Tweetinvi.Parameters.UploadTweetImageParameters : UploadBinaryParameters {
    public UploadTweetImageParameters(Byte[] binary);
}
public class Tweetinvi.Parameters.UploadTweetVideoParameters : UploadBinaryParameters {
    public UploadTweetVideoParameters(Byte[] binary);
}
public class Tweetinvi.Parameters.V2.AddRulesToFilteredStreamV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private FilteredStreamRuleConfig[] <Rules>k__BackingField;
    public FilteredStreamRuleConfig[] Rules { get; public set; }
    public AddRulesToFilteredStreamV2Parameters(FilteredStreamRuleConfig[] rules);
    [CompilerGeneratedAttribute]
public sealed virtual FilteredStreamRuleConfig[] get_Rules();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Rules(FilteredStreamRuleConfig[] value);
}
[ExtensionAttribute]
public static class Tweetinvi.Parameters.V2.BaseTweetsV2ParametersExtensions : object {
    [ExtensionAttribute]
public static T WithAllFields(T parameters);
    [ExtensionAttribute]
public static T WithNoFields(T parameters);
}
[ExtensionAttribute]
public static class Tweetinvi.Parameters.V2.BaseUsersV2ParametersExtensions : object {
    [ExtensionAttribute]
public static T WithAllFields(T parameters);
    [ExtensionAttribute]
public static T WithNoFields(T parameters);
}
public class Tweetinvi.Parameters.V2.ChangeTweetReplyVisibilityV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private string <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private TweetReplyVisibility <Visibility>k__BackingField;
    public string Id { get; public set; }
    public TweetReplyVisibility Visibility { get; public set; }
    public ChangeTweetReplyVisibilityV2Parameters(long tweetId, TweetReplyVisibility visibility);
    public ChangeTweetReplyVisibilityV2Parameters(string tweetId, TweetReplyVisibility visibility);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Id();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public sealed virtual TweetReplyVisibility get_Visibility();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Visibility(TweetReplyVisibility value);
}
public class Tweetinvi.Parameters.V2.DeleteRulesFromFilteredStreamV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private String[] <RuleIds>k__BackingField;
    public String[] RuleIds { get; public set; }
    public DeleteRulesFromFilteredStreamV2Parameters(String[] ruleIds);
    public DeleteRulesFromFilteredStreamV2Parameters(FilteredStreamRuleV2[] rules);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_RuleIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuleIds(String[] value);
}
public class Tweetinvi.Parameters.V2.FilteredStreamRuleConfig : object {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Tag>k__BackingField;
    [JsonPropertyAttribute("value")]
public string Value { get; public set; }
    [JsonPropertyAttribute("tag")]
public string Tag { get; public set; }
    public FilteredStreamRuleConfig(string value);
    public FilteredStreamRuleConfig(string value, string tag);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public string get_Tag();
    [CompilerGeneratedAttribute]
public void set_Tag(string value);
}
public class Tweetinvi.Parameters.V2.GetRulesForFilteredStreamV2Parameters : CustomRequestParameters {
    [CompilerGeneratedAttribute]
private String[] <RuleIds>k__BackingField;
    public String[] RuleIds { get; public set; }
    public GetRulesForFilteredStreamV2Parameters(String[] ruleIds);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_RuleIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RuleIds(String[] value);
}
public class Tweetinvi.Parameters.V2.GetTweetsV2Parameters : BaseTweetsV2Parameters {
    [CompilerGeneratedAttribute]
private String[] <TweetIds>k__BackingField;
    public String[] TweetIds { get; public set; }
    public GetTweetsV2Parameters(Int64[] tweetIds);
    public GetTweetsV2Parameters(String[] tweetIds);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_TweetIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetIds(String[] value);
}
public class Tweetinvi.Parameters.V2.GetTweetV2Parameters : BaseTweetsV2Parameters {
    [CompilerGeneratedAttribute]
private string <TweetId>k__BackingField;
    public string TweetId { get; public set; }
    public GetTweetV2Parameters(long tweetId);
    public GetTweetV2Parameters(string tweetId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TweetId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetId(string value);
}
public class Tweetinvi.Parameters.V2.GetUserByIdV2Parameters : BaseUsersV2Parameters {
    [CompilerGeneratedAttribute]
private string <UserId>k__BackingField;
    public string UserId { get; public set; }
    public GetUserByIdV2Parameters(long userId);
    public GetUserByIdV2Parameters(string userId);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UserId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserId(string value);
}
public class Tweetinvi.Parameters.V2.GetUserByNameV2Parameters : BaseUsersV2GetByParameters {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    public string Username { get; public set; }
    public GetUserByNameV2Parameters(string username);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Username();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Username(string value);
}
public class Tweetinvi.Parameters.V2.GetUsersByIdV2Parameters : BaseUsersV2Parameters {
    [CompilerGeneratedAttribute]
private String[] <UserIds>k__BackingField;
    public String[] UserIds { get; public set; }
    public GetUsersByIdV2Parameters(Int64[] userIds);
    public GetUsersByIdV2Parameters(String[] userIds);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_UserIds();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserIds(String[] value);
}
public class Tweetinvi.Parameters.V2.GetUsersByNameV2Parameters : BaseUsersV2GetByParameters {
    [CompilerGeneratedAttribute]
private String[] <Usernames>k__BackingField;
    public String[] Usernames { get; public set; }
    public GetUsersByNameV2Parameters(String[] usernames);
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Usernames();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Usernames(String[] value);
}
public interface Tweetinvi.Parameters.V2.IAddRulesToFilteredStreamV2Parameters {
    public FilteredStreamRuleConfig[] Rules { get; public set; }
    public abstract virtual FilteredStreamRuleConfig[] get_Rules();
    public abstract virtual void set_Rules(FilteredStreamRuleConfig[] value);
}
public interface Tweetinvi.Parameters.V2.IChangeTweetReplyVisibilityV2Parameters {
    public string Id { get; public set; }
    public TweetReplyVisibility Visibility { get; public set; }
    public abstract virtual string get_Id();
    public abstract virtual void set_Id(string value);
    public abstract virtual TweetReplyVisibility get_Visibility();
    public abstract virtual void set_Visibility(TweetReplyVisibility value);
}
public interface Tweetinvi.Parameters.V2.IDeleteRulesFromFilteredStreamV2Parameters {
    public String[] RuleIds { get; public set; }
    public abstract virtual String[] get_RuleIds();
    public abstract virtual void set_RuleIds(String[] value);
}
public interface Tweetinvi.Parameters.V2.IGetRulesForFilteredStreamV2Parameters {
    public String[] RuleIds { get; public set; }
    public abstract virtual String[] get_RuleIds();
    public abstract virtual void set_RuleIds(String[] value);
}
public interface Tweetinvi.Parameters.V2.IGetTweetsV2Parameters {
    public String[] TweetIds { get; public set; }
    public abstract virtual String[] get_TweetIds();
    public abstract virtual void set_TweetIds(String[] value);
}
public interface Tweetinvi.Parameters.V2.IGetTweetV2Parameters {
    public string TweetId { get; public set; }
    public abstract virtual string get_TweetId();
    public abstract virtual void set_TweetId(string value);
}
public interface Tweetinvi.Parameters.V2.IGetUserByIdV2Parameters {
    public string UserId { get; public set; }
    public abstract virtual string get_UserId();
    public abstract virtual void set_UserId(string value);
}
public interface Tweetinvi.Parameters.V2.IGetUserByNameV2Parameters {
    public string Username { get; public set; }
    public abstract virtual string get_Username();
    public abstract virtual void set_Username(string value);
}
public interface Tweetinvi.Parameters.V2.IGetUsersByIdV2Parameters {
    public String[] UserIds { get; public set; }
    public abstract virtual String[] get_UserIds();
    public abstract virtual void set_UserIds(String[] value);
}
public interface Tweetinvi.Parameters.V2.IGetUsersByNameV2Parameters {
    public String[] Usernames { get; public set; }
    public abstract virtual String[] get_Usernames();
    public abstract virtual void set_Usernames(String[] value);
}
public interface Tweetinvi.Parameters.V2.ISearchTweetsV2Parameters {
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<int> PageSize { get; public set; }
    public string NextToken { get; public set; }
    public string SinceId { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string UntilId { get; public set; }
    public abstract virtual Nullable`1<DateTime> get_EndTime();
    public abstract virtual void set_EndTime(Nullable`1<DateTime> value);
    public abstract virtual string get_Query();
    public abstract virtual void set_Query(string value);
    public abstract virtual Nullable`1<int> get_PageSize();
    public abstract virtual void set_PageSize(Nullable`1<int> value);
    public abstract virtual string get_NextToken();
    public abstract virtual void set_NextToken(string value);
    public abstract virtual string get_SinceId();
    public abstract virtual void set_SinceId(string value);
    public abstract virtual Nullable`1<DateTime> get_StartTime();
    public abstract virtual void set_StartTime(Nullable`1<DateTime> value);
    public abstract virtual string get_UntilId();
    public abstract virtual void set_UntilId(string value);
}
public interface Tweetinvi.Parameters.V2.IStartFilteredStreamV2Parameters {
}
public interface Tweetinvi.Parameters.V2.IStartSampleStreamV2Parameters {
}
public class Tweetinvi.Parameters.V2.SearchTweetsV2Parameters : BaseTweetsV2Parameters {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EndTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PageSize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SinceId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <StartTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UntilId>k__BackingField;
    public Nullable`1<DateTime> EndTime { get; public set; }
    public string Query { get; public set; }
    public Nullable`1<int> PageSize { get; public set; }
    public string NextToken { get; public set; }
    public string SinceId { get; public set; }
    public Nullable`1<DateTime> StartTime { get; public set; }
    public string UntilId { get; public set; }
    public SearchTweetsV2Parameters(string query);
    public SearchTweetsV2Parameters(ISearchTweetsV2Parameters parameters);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_EndTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_EndTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Query(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_PageSize();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PageSize(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextToken();
    [CompilerGeneratedAttribute]
public sealed virtual void set_NextToken(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_SinceId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SinceId(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_StartTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_StartTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_UntilId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UntilId(string value);
}
public class Tweetinvi.Parameters.V2.StartFilteredStreamV2Parameters : BaseTweetsV2Parameters {
}
public class Tweetinvi.Parameters.V2.StartSampleStreamV2Parameters : BaseTweetsV2Parameters {
}
public enum Tweetinvi.Parameters.V2.TweetReplyVisibility : Enum {
    public int value__;
    public static TweetReplyVisibility Hidden;
    public static TweetReplyVisibility Visible;
}
public static class Tweetinvi.Parameters.V2.TweetResponseFields : object {
    public static TweetFields Tweet;
    public static UserFields User;
    private static TweetResponseFields();
}
public static class Tweetinvi.Parameters.V2.UserResponseFields : object {
    public static TweetFields Tweet;
    public static UserFields User;
    private static UserResponseFields();
}
public class Tweetinvi.ProxyConfig : object {
    private Uri _proxyAddress;
    private NetworkCredential _networkCredentials;
    public ICredentials Credentials { get; public set; }
    public Uri Address { get; }
    public ProxyConfig(Uri proxyAddress, NetworkCredential credentials);
    public ProxyConfig(string url, NetworkCredential credentials);
    public ProxyConfig(IProxyConfig proxyConfig);
    public sealed virtual ICredentials get_Credentials();
    public sealed virtual void set_Credentials(ICredentials value);
    public sealed virtual Uri get_Address();
    public sealed virtual Uri GetProxy(Uri destination);
    public sealed virtual bool IsBypassed(Uri host);
}
public enum Tweetinvi.RateLimitTrackerMode : Enum {
    public int value__;
    public static RateLimitTrackerMode None;
    public static RateLimitTrackerMode TrackAndAwait;
    public static RateLimitTrackerMode TrackOnly;
}
public interface Tweetinvi.Streaming.Events.IAccessRevokedInfo {
    public string Token { get; }
    public long ApplicationId { get; }
    public string ApplicationURL { get; }
    public string ApplicationConsumerKey { get; }
    public string ApplicationName { get; }
    public abstract virtual string get_Token();
    public abstract virtual long get_ApplicationId();
    public abstract virtual string get_ApplicationURL();
    public abstract virtual string get_ApplicationConsumerKey();
    public abstract virtual string get_ApplicationName();
}
public interface Tweetinvi.Streaming.Events.IDisconnectMessage {
    public int Code { get; public set; }
    public string StreamName { get; public set; }
    public string Reason { get; public set; }
    public abstract virtual int get_Code();
    public abstract virtual void set_Code(int value);
    public abstract virtual string get_StreamName();
    public abstract virtual void set_StreamName(string value);
    public abstract virtual string get_Reason();
    public abstract virtual void set_Reason(string value);
}
public interface Tweetinvi.Streaming.Events.ITweetLocationDeletedInfo {
    public long UserId { get; }
    public string UserIdStr { get; }
    public long UpToStatusId { get; }
    public string UpToStatusIdStr { get; }
    public abstract virtual long get_UserId();
    public abstract virtual string get_UserIdStr();
    public abstract virtual long get_UpToStatusId();
    public abstract virtual string get_UpToStatusIdStr();
}
public interface Tweetinvi.Streaming.Events.ITweetLocationRemovedInfo {
    public long UserId { get; }
    public string UserIdStr { get; }
    public long UpToStatusId { get; }
    public string UpToStatusIdStr { get; }
    public abstract virtual long get_UserId();
    public abstract virtual string get_UserIdStr();
    public abstract virtual long get_UpToStatusId();
    public abstract virtual string get_UpToStatusIdStr();
}
public interface Tweetinvi.Streaming.Events.ITweetWitheldInfo {
    public long Id { get; }
    public long UserId { get; }
    public IEnumerable`1<string> WitheldInCountries { get; }
    public abstract virtual long get_Id();
    public abstract virtual long get_UserId();
    public abstract virtual IEnumerable`1<string> get_WitheldInCountries();
}
public interface Tweetinvi.Streaming.Events.IUserWitheldInfo {
    public long Id { get; }
    public IEnumerable`1<string> WitheldInCountries { get; }
    public abstract virtual long get_Id();
    public abstract virtual IEnumerable`1<string> get_WitheldInCountries();
}
public interface Tweetinvi.Streaming.Events.IWarningMessage {
    public string Code { get; }
    public string Message { get; }
    public abstract virtual string get_Code();
    public abstract virtual string get_Message();
}
public interface Tweetinvi.Streaming.Events.IWarningMessageFallingBehind {
    public int PercentFull { get; }
    public abstract virtual int get_PercentFull();
}
public interface Tweetinvi.Streaming.Events.IWarningMessageTooManyFollowers {
    public long UserId { get; }
    public string TimestampInMs { get; public set; }
    public abstract virtual long get_UserId();
    public abstract virtual string get_TimestampInMs();
    public abstract virtual void set_TimestampInMs(string value);
}
public interface Tweetinvi.Streaming.IAccountActivityStream {
    public long AccountUserId { get; public set; }
    public EventHandler`1<TweetCreatedEvent> TweetCreated { get; public set; }
    public EventHandler`1<TweetDeletedEvent> TweetDeleted { get; public set; }
    public EventHandler`1<TweetFavoritedEvent> TweetFavorited { get; public set; }
    public EventHandler`1<UserFollowedEvent> UserFollowed { get; public set; }
    public EventHandler`1<UserUnfollowedEvent> UserUnfollowed { get; public set; }
    public EventHandler`1<UserBlockedEvent> UserBlocked { get; public set; }
    public EventHandler`1<UserUnblockedEvent> UserUnblocked { get; public set; }
    public EventHandler`1<UserMutedEvent> UserMuted { get; public set; }
    public EventHandler`1<UserUnmutedEvent> UserUnmuted { get; public set; }
    public EventHandler`1<MessageReceivedEvent> MessageReceived { get; public set; }
    public EventHandler`1<MessageSentEvent> MessageSent { get; public set; }
    public EventHandler`1<UserIsTypingMessageEvent> UserIsTypingMessage { get; public set; }
    public EventHandler`1<UserReadMessageConversationEvent> UserReadMessageConversation { get; public set; }
    public EventHandler`1<UserRevokedAppPermissionsEvent> UserRevokedAppPermissions { get; public set; }
    public EventHandler`1<AccountActivityEvent> EventReceived { get; public set; }
    public EventHandler`1<UnsupportedMessageReceivedEvent> UnsupportedEventReceived { get; public set; }
    public EventHandler`1<EventKnownButNotSupported> EventKnownButNotFullySupportedReceived { get; public set; }
    public EventHandler`1<UnexpectedExceptionThrownEvent> UnexpectedExceptionThrown { get; public set; }
    public abstract virtual long get_AccountUserId();
    public abstract virtual void set_AccountUserId(long value);
    public abstract virtual EventHandler`1<TweetCreatedEvent> get_TweetCreated();
    public abstract virtual void set_TweetCreated(EventHandler`1<TweetCreatedEvent> value);
    public abstract virtual EventHandler`1<TweetDeletedEvent> get_TweetDeleted();
    public abstract virtual void set_TweetDeleted(EventHandler`1<TweetDeletedEvent> value);
    public abstract virtual EventHandler`1<TweetFavoritedEvent> get_TweetFavorited();
    public abstract virtual void set_TweetFavorited(EventHandler`1<TweetFavoritedEvent> value);
    public abstract virtual EventHandler`1<UserFollowedEvent> get_UserFollowed();
    public abstract virtual void set_UserFollowed(EventHandler`1<UserFollowedEvent> value);
    public abstract virtual EventHandler`1<UserUnfollowedEvent> get_UserUnfollowed();
    public abstract virtual void set_UserUnfollowed(EventHandler`1<UserUnfollowedEvent> value);
    public abstract virtual EventHandler`1<UserBlockedEvent> get_UserBlocked();
    public abstract virtual void set_UserBlocked(EventHandler`1<UserBlockedEvent> value);
    public abstract virtual EventHandler`1<UserUnblockedEvent> get_UserUnblocked();
    public abstract virtual void set_UserUnblocked(EventHandler`1<UserUnblockedEvent> value);
    public abstract virtual EventHandler`1<UserMutedEvent> get_UserMuted();
    public abstract virtual void set_UserMuted(EventHandler`1<UserMutedEvent> value);
    public abstract virtual EventHandler`1<UserUnmutedEvent> get_UserUnmuted();
    public abstract virtual void set_UserUnmuted(EventHandler`1<UserUnmutedEvent> value);
    public abstract virtual EventHandler`1<MessageReceivedEvent> get_MessageReceived();
    public abstract virtual void set_MessageReceived(EventHandler`1<MessageReceivedEvent> value);
    public abstract virtual EventHandler`1<MessageSentEvent> get_MessageSent();
    public abstract virtual void set_MessageSent(EventHandler`1<MessageSentEvent> value);
    public abstract virtual EventHandler`1<UserIsTypingMessageEvent> get_UserIsTypingMessage();
    public abstract virtual void set_UserIsTypingMessage(EventHandler`1<UserIsTypingMessageEvent> value);
    public abstract virtual EventHandler`1<UserReadMessageConversationEvent> get_UserReadMessageConversation();
    public abstract virtual void set_UserReadMessageConversation(EventHandler`1<UserReadMessageConversationEvent> value);
    public abstract virtual EventHandler`1<UserRevokedAppPermissionsEvent> get_UserRevokedAppPermissions();
    public abstract virtual void set_UserRevokedAppPermissions(EventHandler`1<UserRevokedAppPermissionsEvent> value);
    public abstract virtual EventHandler`1<AccountActivityEvent> get_EventReceived();
    public abstract virtual void set_EventReceived(EventHandler`1<AccountActivityEvent> value);
    public abstract virtual EventHandler`1<UnsupportedMessageReceivedEvent> get_UnsupportedEventReceived();
    public abstract virtual void set_UnsupportedEventReceived(EventHandler`1<UnsupportedMessageReceivedEvent> value);
    public abstract virtual EventHandler`1<EventKnownButNotSupported> get_EventKnownButNotFullySupportedReceived();
    public abstract virtual void set_EventKnownButNotFullySupportedReceived(EventHandler`1<EventKnownButNotSupported> value);
    public abstract virtual EventHandler`1<UnexpectedExceptionThrownEvent> get_UnexpectedExceptionThrown();
    public abstract virtual void set_UnexpectedExceptionThrown(EventHandler`1<UnexpectedExceptionThrownEvent> value);
    public abstract virtual void WebhookMessageReceived(IWebhookMessage message);
}
public interface Tweetinvi.Streaming.IFilteredStream {
    public MatchOn MatchOn { get; public set; }
    public Dictionary`2<Nullable`1<long>, Action`1<ITweet>> FollowingUserIds { get; }
    public Dictionary`2<ILocation, Action`1<ITweet>> Locations { get; }
    [CompilerGeneratedAttribute]
public abstract virtual void add_MatchingTweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_MatchingTweetReceived(EventHandler`1<MatchedTweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void add_NonMatchingTweetReceived(EventHandler`1<TweetEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_NonMatchingTweetReceived(EventHandler`1<TweetEventArgs> value);
    public abstract virtual MatchOn get_MatchOn();
    public abstract virtual void set_MatchOn(MatchOn value);
    public abstract virtual Task StartMatchingAnyConditionAsync();
    public abstract virtual Task StartMatchingAllConditionsAsync();
    public abstract virtual Dictionary`2<Nullable`1<long>, Action`1<ITweet>> get_FollowingUserIds();
    public abstract virtual void AddFollow(long userId, Action`1<ITweet> userPublishedTweet);
    public abstract virtual void AddFollow(IUserIdentifier user, Action`1<ITweet> userPublishedTweet);
    public abstract virtual void RemoveFollow(long userId);
    public abstract virtual void RemoveFollow(IUserIdentifier user);
    public abstract virtual bool ContainsFollow(long userId);
    public abstract virtual bool ContainsFollow(IUserIdentifier user);
    public abstract virtual void ClearFollows();
    public abstract virtual Dictionary`2<ILocation, Action`1<ITweet>> get_Locations();
    public abstract virtual void AddLocation(ILocation location, Action`1<ITweet> locationDetected);
    public abstract virtual ILocation AddLocation(ICoordinates coordinate1, ICoordinates coordinate2, Action`1<ITweet> locationDetected);
    public abstract virtual void RemoveLocation(ILocation location);
    public abstract virtual void RemoveLocation(ICoordinates coordinate1, ICoordinates coordinate2);
    public abstract virtual bool ContainsLocation(ILocation location);
    public abstract virtual bool ContainsLocation(ICoordinates coordinate1, ICoordinates coordinate2);
    public abstract virtual void ClearLocations();
    public abstract virtual MatchOn CheckIfTweetMatchesStreamFilters(ITweet tweet);
}
public interface Tweetinvi.Streaming.ISampleStream {
    [CompilerGeneratedAttribute]
public abstract virtual void add_TweetReceived(EventHandler`1<TweetReceivedEventArgs> value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_TweetReceived(EventHandler`1<TweetReceivedEventArgs> value);
    public abstract virtual Task StartAsync();
}
[FlagsAttribute]
public enum Tweetinvi.Streaming.MatchOn : Enum {
    public int value__;
    public static MatchOn None;
    public static MatchOn Everything;
    public static MatchOn TweetText;
    public static MatchOn Follower;
    public static MatchOn TweetLocation;
    public static MatchOn FollowerInReplyTo;
    public static MatchOn AllEntities;
    public static MatchOn URLEntities;
    public static MatchOn HashTagEntities;
    public static MatchOn UserMentionEntities;
    public static MatchOn SymbolEntities;
}
public enum Tweetinvi.Streaming.Parameters.StreamFilterLevel : Enum {
    public int value__;
    public static StreamFilterLevel None;
    public static StreamFilterLevel Low;
    public static StreamFilterLevel Medium;
}
public enum Tweetinvi.Streaming.Parameters.WithFilterType : Enum {
    public int value__;
    public static WithFilterType Followings;
    public static WithFilterType User;
}
public enum Tweetinvi.Streaming.StreamState : Enum {
    public int value__;
    public static StreamState Stop;
    public static StreamState Running;
    public static StreamState Pause;
}
public interface Tweetinvi.Streaming.V2.IFilteredStreamV2 {
    public abstract virtual Task StartAsync();
    public abstract virtual Task StartAsync(IStartFilteredStreamV2Parameters parameters);
}
public interface Tweetinvi.Streaming.V2.ISampleStreamV2 {
    public abstract virtual Task StartAsync();
    public abstract virtual Task StartAsync(IStartSampleStreamV2Parameters parameters);
}
public interface Tweetinvi.Streaming.Webhooks.IWebhookDispatcher {
    public IAccountActivityStream[] SubscribedAccountActivityStreams { get; }
    public abstract virtual IAccountActivityStream[] get_SubscribedAccountActivityStreams();
    public abstract virtual void WebhookMessageReceived(IWebhookMessage message);
    public abstract virtual void SubscribeAccountActivityStream(IAccountActivityStream accountActivityStream);
    public abstract virtual void UnsubscribeAccountActivityStream(IAccountActivityStream accountActivityStream);
}
public static class Tweetinvi.TweetinviConsts : object {
    public static int MEDIA_CONTENT_SIZE;
    public static int HTTP_LINK_SIZE;
    public static int HTTPS_LINK_SIZE;
    private static TweetinviConsts();
}
public class Tweetinvi.TweetinviSettings : object {
    [CompilerGeneratedAttribute]
private IProxyConfig <ProxyConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <HttpRequestTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private RateLimitTrackerMode <RateLimitTrackerMode>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <RateLimitWaitFudge>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TweetMode> <TweetMode>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<DateTime> <GetUtcDateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private TwitterLimits <Limits>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonConverter[] <Converters>k__BackingField;
    public IProxyConfig ProxyConfig { get; public set; }
    public TimeSpan HttpRequestTimeout { get; public set; }
    public RateLimitTrackerMode RateLimitTrackerMode { get; public set; }
    public TimeSpan RateLimitWaitFudge { get; public set; }
    public Nullable`1<TweetMode> TweetMode { get; public set; }
    public Func`1<DateTime> GetUtcDateTime { get; public set; }
    public TwitterLimits Limits { get; public set; }
    public JsonConverter[] Converters { get; public set; }
    public TweetinviSettings(ITweetinviSettings source);
    [CompilerGeneratedAttribute]
public sealed virtual IProxyConfig get_ProxyConfig();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyConfig(IProxyConfig value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_HttpRequestTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HttpRequestTimeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual RateLimitTrackerMode get_RateLimitTrackerMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RateLimitTrackerMode(RateLimitTrackerMode value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_RateLimitWaitFudge();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RateLimitWaitFudge(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TweetMode> get_TweetMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TweetMode(Nullable`1<TweetMode> value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`1<DateTime> get_GetUtcDateTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_GetUtcDateTime(Func`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual TwitterLimits get_Limits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Limits(TwitterLimits value);
    [CompilerGeneratedAttribute]
public sealed virtual JsonConverter[] get_Converters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Converters(JsonConverter[] value);
    public sealed virtual void Initialize(ITweetinviSettings other);
}
public enum Tweetinvi.TweetMode : Enum {
    public int value__;
    public static TweetMode Extended;
    public static TweetMode Compat;
    public static TweetMode None;
}
public class Tweetinvi.TwitterLimits : object {
    [CompilerGeneratedAttribute]
private static TwitterLimits <DEFAULTS>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_RELATIONSHIPS_WITH_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_USER_IDS_REQUESTING_FRIENDSHIP_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_REQUESTED_USER_IDS_TO_FOLLOW_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_BLOCKED_USER_IDS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_MUTED_USER_IDS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_MUTED_USERS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_SETTINGS_PROFILE_NAME_MAX_LENGTH>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_SETTINGS_PROFILE_DESCRIPTION_MAX_LENGTH>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_SETTINGS_PROFILE_LOCATION_MAX_LENGTH>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_SETTINGS_PROFILE_WEBSITE_URL_MAX_LENGTH>k__BackingField;
    [CompilerGeneratedAttribute]
private short <ACCOUNT_GET_BLOCKED_USER_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_CREATE_NAME_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_USER_OWNED_LISTS_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_TWEETS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_USER_MEMBERSHIPS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_ADD_MEMBERS_MAX_USERS>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_REMOVE_MEMBERS_MAX_USERS>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_MEMBERS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_SUBSCRIBERS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <LISTS_GET_USER_SUBSCRIPTIONS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <MESSAGES_GET_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <MESSAGE_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <MESSAGE_QUICK_REPLY_MAX_OPTIONS>k__BackingField;
    public int MESSAGE_QUICK_REPLY_LABEL_MAX_LENGTH;
    public int MESSAGE_QUICK_REPLY_DESCRIPTION_MAX_LENGTH;
    public int MESSAGE_QUICK_REPLY_METADATA_MAX_LENGTH;
    public int SEARCH_TWEETS_MAX_PAGE_SIZE;
    public int SEARCH_USERS_MAX_PAGE_SIZE;
    [CompilerGeneratedAttribute]
private short <TIMELINE_HOME_PAGE_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TIMELINE_MENTIONS_PAGE_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TIMELINE_RETWEETS_OF_ME_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TIMELINE_USER_PAGE_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TWEETS_GET_FAVORITE_TWEETS_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TWEETS_GET_RETWEETS_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TWEETS_GET_RETWEETER_IDS_MAX_PAGE_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <TWEETS_GET_TWEETS_REQUEST_MAX_SIZE>k__BackingField;
    public int UPLOAD_MAX_IMAGE_SIZE;
    public int UPLOAD_MAX_VIDEO_SIZE;
    public int UPLOAD_MAX_CHUNK_SIZE;
    [CompilerGeneratedAttribute]
private short <USERS_GET_USERS_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <USERS_GET_FOLLOWER_IDS_PAGE_MAX_SIZE>k__BackingField;
    [CompilerGeneratedAttribute]
private short <USERS_GET_FRIEND_IDS_PAGE_MAX_SIZE>k__BackingField;
    public static TwitterLimits DEFAULTS { get; }
    public short ACCOUNT_GET_RELATIONSHIPS_WITH_MAX_SIZE { get; public set; }
    public short ACCOUNT_GET_USER_IDS_REQUESTING_FRIENDSHIP_MAX_PAGE_SIZE { get; public set; }
    public short ACCOUNT_GET_REQUESTED_USER_IDS_TO_FOLLOW_MAX_PAGE_SIZE { get; public set; }
    public short ACCOUNT_GET_BLOCKED_USER_IDS_MAX_PAGE_SIZE { get; public set; }
    public short ACCOUNT_GET_MUTED_USER_IDS_MAX_PAGE_SIZE { get; public set; }
    public short ACCOUNT_GET_MUTED_USERS_MAX_PAGE_SIZE { get; public set; }
    public short ACCOUNT_SETTINGS_PROFILE_NAME_MAX_LENGTH { get; public set; }
    public short ACCOUNT_SETTINGS_PROFILE_DESCRIPTION_MAX_LENGTH { get; public set; }
    public short ACCOUNT_SETTINGS_PROFILE_LOCATION_MAX_LENGTH { get; public set; }
    public short ACCOUNT_SETTINGS_PROFILE_WEBSITE_URL_MAX_LENGTH { get; public set; }
    public short ACCOUNT_GET_BLOCKED_USER_MAX_PAGE_SIZE { get; public set; }
    public short LISTS_CREATE_NAME_MAX_SIZE { get; public set; }
    public short LISTS_GET_USER_OWNED_LISTS_MAX_SIZE { get; public set; }
    public short LISTS_GET_TWEETS_MAX_PAGE_SIZE { get; public set; }
    public short LISTS_GET_USER_MEMBERSHIPS_MAX_PAGE_SIZE { get; public set; }
    public short LISTS_ADD_MEMBERS_MAX_USERS { get; public set; }
    public short LISTS_REMOVE_MEMBERS_MAX_USERS { get; public set; }
    public short LISTS_GET_MEMBERS_MAX_PAGE_SIZE { get; public set; }
    public short LISTS_GET_SUBSCRIBERS_MAX_PAGE_SIZE { get; public set; }
    public short LISTS_GET_USER_SUBSCRIPTIONS_MAX_PAGE_SIZE { get; public set; }
    public short MESSAGES_GET_MAX_PAGE_SIZE { get; public set; }
    public short MESSAGE_MAX_SIZE { get; public set; }
    public short MESSAGE_QUICK_REPLY_MAX_OPTIONS { get; public set; }
    public short TIMELINE_HOME_PAGE_MAX_PAGE_SIZE { get; public set; }
    public short TIMELINE_MENTIONS_PAGE_MAX_PAGE_SIZE { get; public set; }
    public short TIMELINE_RETWEETS_OF_ME_MAX_PAGE_SIZE { get; public set; }
    public short TIMELINE_USER_PAGE_MAX_PAGE_SIZE { get; public set; }
    public short TWEETS_GET_FAVORITE_TWEETS_MAX_SIZE { get; public set; }
    public short TWEETS_GET_RETWEETS_MAX_SIZE { get; public set; }
    public short TWEETS_GET_RETWEETER_IDS_MAX_PAGE_SIZE { get; public set; }
    public short TWEETS_GET_TWEETS_REQUEST_MAX_SIZE { get; public set; }
    public short USERS_GET_USERS_MAX_SIZE { get; public set; }
    public short USERS_GET_FOLLOWER_IDS_PAGE_MAX_SIZE { get; public set; }
    public short USERS_GET_FRIEND_IDS_PAGE_MAX_SIZE { get; public set; }
    public TwitterLimits(TwitterLimits source);
    private static TwitterLimits();
    [CompilerGeneratedAttribute]
public static TwitterLimits get_DEFAULTS();
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_RELATIONSHIPS_WITH_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_RELATIONSHIPS_WITH_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_USER_IDS_REQUESTING_FRIENDSHIP_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_USER_IDS_REQUESTING_FRIENDSHIP_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_REQUESTED_USER_IDS_TO_FOLLOW_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_REQUESTED_USER_IDS_TO_FOLLOW_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_BLOCKED_USER_IDS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_BLOCKED_USER_IDS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_MUTED_USER_IDS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_MUTED_USER_IDS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_MUTED_USERS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_MUTED_USERS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_SETTINGS_PROFILE_NAME_MAX_LENGTH();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_SETTINGS_PROFILE_NAME_MAX_LENGTH(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_SETTINGS_PROFILE_DESCRIPTION_MAX_LENGTH();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_SETTINGS_PROFILE_DESCRIPTION_MAX_LENGTH(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_SETTINGS_PROFILE_LOCATION_MAX_LENGTH();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_SETTINGS_PROFILE_LOCATION_MAX_LENGTH(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_SETTINGS_PROFILE_WEBSITE_URL_MAX_LENGTH();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_SETTINGS_PROFILE_WEBSITE_URL_MAX_LENGTH(short value);
    [CompilerGeneratedAttribute]
public short get_ACCOUNT_GET_BLOCKED_USER_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_ACCOUNT_GET_BLOCKED_USER_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_CREATE_NAME_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_CREATE_NAME_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_USER_OWNED_LISTS_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_USER_OWNED_LISTS_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_TWEETS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_TWEETS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_USER_MEMBERSHIPS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_USER_MEMBERSHIPS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_ADD_MEMBERS_MAX_USERS();
    [CompilerGeneratedAttribute]
public void set_LISTS_ADD_MEMBERS_MAX_USERS(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_REMOVE_MEMBERS_MAX_USERS();
    [CompilerGeneratedAttribute]
public void set_LISTS_REMOVE_MEMBERS_MAX_USERS(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_MEMBERS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_MEMBERS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_SUBSCRIBERS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_SUBSCRIBERS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_LISTS_GET_USER_SUBSCRIPTIONS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_LISTS_GET_USER_SUBSCRIPTIONS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_MESSAGES_GET_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_MESSAGES_GET_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_MESSAGE_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_MESSAGE_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_MESSAGE_QUICK_REPLY_MAX_OPTIONS();
    [CompilerGeneratedAttribute]
public void set_MESSAGE_QUICK_REPLY_MAX_OPTIONS(short value);
    [CompilerGeneratedAttribute]
public short get_TIMELINE_HOME_PAGE_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_TIMELINE_HOME_PAGE_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TIMELINE_MENTIONS_PAGE_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_TIMELINE_MENTIONS_PAGE_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TIMELINE_RETWEETS_OF_ME_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_TIMELINE_RETWEETS_OF_ME_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TIMELINE_USER_PAGE_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_TIMELINE_USER_PAGE_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TWEETS_GET_FAVORITE_TWEETS_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_TWEETS_GET_FAVORITE_TWEETS_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TWEETS_GET_RETWEETS_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_TWEETS_GET_RETWEETS_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TWEETS_GET_RETWEETER_IDS_MAX_PAGE_SIZE();
    [CompilerGeneratedAttribute]
public void set_TWEETS_GET_RETWEETER_IDS_MAX_PAGE_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_TWEETS_GET_TWEETS_REQUEST_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_TWEETS_GET_TWEETS_REQUEST_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_USERS_GET_USERS_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_USERS_GET_USERS_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_USERS_GET_FOLLOWER_IDS_PAGE_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_USERS_GET_FOLLOWER_IDS_PAGE_MAX_SIZE(short value);
    [CompilerGeneratedAttribute]
public short get_USERS_GET_FRIEND_IDS_PAGE_MAX_SIZE();
    [CompilerGeneratedAttribute]
public void set_USERS_GET_FRIEND_IDS_PAGE_MAX_SIZE(short value);
}
public class Tweetinvi.TwitterQuery : TwitterRequestParameters {
    [CompilerGeneratedAttribute]
private IProxyConfig <ProxyConfig>k__BackingField;
    private TimeSpan _timeout;
    [CompilerGeneratedAttribute]
private ITwitterCredentials <TwitterCredentials>k__BackingField;
    [CompilerGeneratedAttribute]
private IOAuthQueryParameter[] <QueryParameters>k__BackingField;
    [CompilerGeneratedAttribute]
private IEndpointRateLimit <QueryRateLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private ICredentialsRateLimits <CredentialsRateLimits>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DateWhenCredentialsWillHaveTheRequiredRateLimits>k__BackingField;
    public IProxyConfig ProxyConfig { get; public set; }
    public TimeSpan Timeout { get; public set; }
    public ITwitterCredentials TwitterCredentials { get; public set; }
    public IOAuthQueryParameter[] QueryParameters { get; public set; }
    public IEndpointRateLimit QueryRateLimit { get; public set; }
    public ICredentialsRateLimits CredentialsRateLimits { get; public set; }
    public Nullable`1<DateTime> DateWhenCredentialsWillHaveTheRequiredRateLimits { get; public set; }
    public Nullable`1<TimeSpan> TimeToWaitBeforeExecutingTheQuery { get; }
    public TwitterQuery(string queryURL, HttpMethod httpMethod);
    public TwitterQuery(ITwitterQuery source);
    [CompilerGeneratedAttribute]
public sealed virtual IProxyConfig get_ProxyConfig();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyConfig(IProxyConfig value);
    public sealed virtual TimeSpan get_Timeout();
    public sealed virtual void set_Timeout(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterCredentials get_TwitterCredentials();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TwitterCredentials(ITwitterCredentials value);
    [CompilerGeneratedAttribute]
public sealed virtual IOAuthQueryParameter[] get_QueryParameters();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryParameters(IOAuthQueryParameter[] value);
    [CompilerGeneratedAttribute]
public sealed virtual IEndpointRateLimit get_QueryRateLimit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryRateLimit(IEndpointRateLimit value);
    [CompilerGeneratedAttribute]
public sealed virtual ICredentialsRateLimits get_CredentialsRateLimits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CredentialsRateLimits(ICredentialsRateLimits value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_DateWhenCredentialsWillHaveTheRequiredRateLimits();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DateWhenCredentialsWillHaveTheRequiredRateLimits(Nullable`1<DateTime> value);
    public sealed virtual Nullable`1<TimeSpan> get_TimeToWaitBeforeExecutingTheQuery();
    public sealed virtual void Initialize(ITweetinviSettings settings);
    public virtual string ToString();
}
public class Tweetinvi.TwitterRequest : object {
    private ITwitterQuery _query;
    [CompilerGeneratedAttribute]
private ITwitterExecutionContext <ExecutionContext>k__BackingField;
    [CompilerGeneratedAttribute]
private ITwitterClientHandler <TwitterClientHandler>k__BackingField;
    public ITwitterQuery Query { get; public set; }
    public ITwitterExecutionContext ExecutionContext { get; public set; }
    public ITwitterClientHandler TwitterClientHandler { get; public set; }
    public TwitterRequest(ITwitterRequest source);
    public sealed virtual ITwitterQuery get_Query();
    public sealed virtual void set_Query(ITwitterQuery value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterExecutionContext get_ExecutionContext();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ExecutionContext(ITwitterExecutionContext value);
    [CompilerGeneratedAttribute]
public sealed virtual ITwitterClientHandler get_TwitterClientHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TwitterClientHandler(ITwitterClientHandler value);
}
public class Tweetinvi.TwitterRequestParameters : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpMethod <HttpMethod>k__BackingField;
    [CompilerGeneratedAttribute]
private HttpContent <HttpContent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHttpContentPartOfQueryParams>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <AcceptHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthorizationHeader>k__BackingField;
    [CompilerGeneratedAttribute]
private CustomRequestHeaders <CustomHeaders>k__BackingField;
    public string Url { get; public set; }
    public HttpMethod HttpMethod { get; public set; }
    public HttpContent HttpContent { get; public set; }
    public bool IsHttpContentPartOfQueryParams { get; public set; }
    public List`1<string> AcceptHeaders { get; public set; }
    public string AuthorizationHeader { get; public set; }
    public CustomRequestHeaders CustomHeaders { get; public set; }
    public TwitterRequestParameters(ITwitterRequestParameters source);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual HttpMethod get_HttpMethod();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HttpMethod(HttpMethod value);
    [CompilerGeneratedAttribute]
public virtual HttpContent get_HttpContent();
    [CompilerGeneratedAttribute]
public virtual void set_HttpContent(HttpContent value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsHttpContentPartOfQueryParams();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsHttpContentPartOfQueryParams(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_AcceptHeaders();
    [CompilerGeneratedAttribute]
public void set_AcceptHeaders(List`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AuthorizationHeader();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthorizationHeader(string value);
    [CompilerGeneratedAttribute]
public sealed virtual CustomRequestHeaders get_CustomHeaders();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CustomHeaders(CustomRequestHeaders value);
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_0(CustomHeader customHeader);
}
