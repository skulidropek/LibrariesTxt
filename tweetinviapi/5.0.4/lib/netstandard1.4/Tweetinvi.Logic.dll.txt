public class Tweetinvi.Logic.Exceptions.WebExceptionInfoExtractor : object {
    private IJObjectStaticWrapper _jObjectStaticWrapper;
    private IFactory`1<ITwitterExceptionInfo> _twitterExceptionInfoUnityFactory;
    public WebExceptionInfoExtractor(IJObjectStaticWrapper jObjectStaticWrapper, IFactory`1<ITwitterExceptionInfo> twitterExceptionInfoUnityFactory);
    public sealed virtual int GetWebExceptionStatusNumber(WebException wex);
    public sealed virtual int GetWebExceptionStatusNumber(WebException wex, int defaultStatusCode);
    public sealed virtual string GetStatusCodeDescription(int statusCode);
    public sealed virtual ITwitterExceptionInfo[] GetTwitterExceptionInfos(string content);
    public sealed virtual ITwitterExceptionInfo[] GetTwitterExceptionInfos(WebException wex);
    private ITwitterExceptionInfo[] GetStreamInfo(HttpWebResponse wexResponse);
    public sealed virtual ITwitterExceptionInfo[] GetTwitterExceptionInfosFromStream(Stream stream);
}
public class Tweetinvi.Logic.Helpers.TwitterStringFormatter : object {
    public sealed virtual string TwitterEncode(string source);
    public sealed virtual string TwitterDecode(string source);
}
internal static class Tweetinvi.Logic.Properties.Resources : object {
    public static string ExceptionDescription_44;
    public static string ExceptionDescription_304;
    public static string ExceptionDescription_385;
    public static string ExceptionDescription_386;
    public static string ExceptionDescription_400;
    public static string ExceptionDescription_401;
    public static string ExceptionDescription_403;
    public static string ExceptionDescription_404;
    public static string ExceptionDescription_406;
    public static string ExceptionDescription_410;
    public static string ExceptionDescription_420;
    public static string ExceptionDescription_422;
    public static string ExceptionDescription_429;
    public static string ExceptionDescription_500;
    public static string ExceptionDescription_502;
    public static string ExceptionDescription_503;
    public static string ExceptionDescription_504;
    private static Resources();
    public static string GetResourceByName(string resourceName);
}
public class Tweetinvi.Logic.QueryParameters.MediaMetadata : object {
    [CompilerGeneratedAttribute]
private Nullable`1<long> <MediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AltText>k__BackingField;
    public Nullable`1<long> MediaId { get; public set; }
    public string AltText { get; public set; }
    public MediaMetadata(Nullable`1<long> mediaId);
    public MediaMetadata(IMedia media);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<long> get_MediaId();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MediaId(Nullable`1<long> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_AltText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AltText(string value);
}
public class Tweetinvi.Logic.TweetinviLogicModule : object {
    public sealed virtual void Initialize(ITweetinviContainer container);
    private void InitializeTweetinviModels(ITweetinviContainer container);
    private void InitializeTwitterModels(ITweetinviContainer container);
    private void InitializeDTOs(ITweetinviContainer container);
    private void InitializeHelpers(ITweetinviContainer container);
    private void InitializeWrappers(ITweetinviContainer container);
    private void InitializeExceptionHandler(ITweetinviContainer container);
    private void InitializeSerialization(ITweetinviContainer container);
}
public class Tweetinvi.Logic.TweetWithSearchMetadata : Tweet {
    private ITweetWithSearchMetadataDTO _tweetWithSearchMetadataDTO;
    public ITweetFromSearchMetadata SearchMetadata { get; }
    public TweetWithSearchMetadata(ITweetWithSearchMetadataDTO tweetDTO, Nullable`1<TweetMode> tweetMode, ITwitterClient client);
    public sealed virtual ITweetFromSearchMetadata get_SearchMetadata();
}
public class Tweetinvi.Logic.Wrapper.JObjectStaticWrapper : object {
    private JsonSerializer _serializer;
    public sealed virtual JObject GetJobjectFromJson(string json);
    public sealed virtual T ToObject(JObject jObject);
    public sealed virtual T ToObject(JToken jToken);
    public sealed virtual string GetNodeRootName(JToken jToken);
}
public class Tweetinvi.Logic.Wrapper.JsonConvertWrapper : object {
    public sealed virtual string SerializeObject(object o);
    public sealed virtual string SerializeObject(object o, JsonConverter[] converters);
    public sealed virtual T DeserializeObject(string json);
    public sealed virtual T DeserializeObject(string json, JsonConverter[] converters);
}
