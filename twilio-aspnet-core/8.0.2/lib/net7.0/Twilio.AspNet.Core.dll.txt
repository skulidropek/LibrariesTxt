[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
public enum Twilio.AspNet.Core.CredentialType : Enum {
    public int value__;
    public static CredentialType Unspecified;
    public static CredentialType AuthToken;
    public static CredentialType ApiKey;
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.RequestValidationDependencyInjectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddTwilioRequestValidation(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioRequestValidation(IServiceCollection services, IConfiguration namedConfigurationSection);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioRequestValidation(IServiceCollection services, Action`1<TwilioRequestValidationOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioRequestValidation(IServiceCollection services, Action`2<IServiceProvider, TwilioRequestValidationOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioRequestValidation(IServiceCollection services, TwilioRequestValidationOptions options);
    private static void Sanitize(OptionsBuilder`1<TwilioRequestValidationOptions> optionsBuilder);
    private static void Validate(OptionsBuilder`1<TwilioRequestValidationOptions> optionsBuilder);
}
public static class Twilio.AspNet.Core.RequestValidationHelper : object {
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.RequestValidationHelper/<IsValidRequestAsync>d__0")]
internal static Task`1<bool> IsValidRequestAsync(HttpContext context);
    public static Task`1<bool> IsValidRequestAsync(HttpContext context, string authToken, bool allowLocal);
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.RequestValidationHelper/<IsValidRequestAsync>d__2")]
public static Task`1<bool> IsValidRequestAsync(HttpContext context, string authToken, string urlOverride, bool allowLocal);
    public static bool IsValidRequest(HttpContext context, string authToken, bool allowLocal);
    public static bool IsValidRequest(HttpContext context, string authToken, string urlOverride, bool allowLocal);
    private static bool IsLocal(HttpRequest req);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.ResultsExtensions : object {
    [ExtensionAttribute]
public static TwiMLResult TwiML(IResultExtensions results, TwiML twimlResponse);
    [ExtensionAttribute]
public static TwiMLResult TwiML(IResultExtensions results, TwiML twimlResponse, SaveOptions formattingOptions);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.TwilioClientDependencyInjectionExtensions : object {
    internal static string TwilioHttpClientName;
    [ExtensionAttribute]
public static IServiceCollection AddTwilioClient(IServiceCollection services);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioClient(IServiceCollection services, IConfiguration namedConfigurationSection);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioClient(IServiceCollection services, Action`1<TwilioClientOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioClient(IServiceCollection services, Action`2<IServiceProvider, TwilioClientOptions> configureOptions);
    [ExtensionAttribute]
public static IServiceCollection AddTwilioClient(IServiceCollection services, TwilioClientOptions options);
    private static void ConfigureDefaultOptions(OptionsBuilder`1<TwilioClientOptions> optionsBuilder);
    private static void PostConfigure(OptionsBuilder`1<TwilioClientOptions> optionsBuilder);
    private static void AddServices(IServiceCollection services);
    private static void Sanitize(TwilioClientOptions options);
    private static void Validate(OptionsBuilder`1<TwilioClientOptions> optionsBuilder);
    private static void ConfigureCredentialType(TwilioClientOptions options);
    private static TwilioRestClient CreateTwilioClient(IServiceProvider provider);
}
public class Twilio.AspNet.Core.TwilioClientOptions : object {
    [CompilerGeneratedAttribute]
private string <AccountSid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthToken>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKeySid>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApiKeySecret>k__BackingField;
    [CompilerGeneratedAttribute]
private CredentialType <CredentialType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Region>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Edge>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogLevel>k__BackingField;
    public string AccountSid { get; public set; }
    public string AuthToken { get; public set; }
    public string ApiKeySid { get; public set; }
    public string ApiKeySecret { get; public set; }
    public CredentialType CredentialType { get; public set; }
    public string Region { get; public set; }
    public string Edge { get; public set; }
    public string LogLevel { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AccountSid();
    [CompilerGeneratedAttribute]
public void set_AccountSid(string value);
    [CompilerGeneratedAttribute]
public string get_AuthToken();
    [CompilerGeneratedAttribute]
public void set_AuthToken(string value);
    [CompilerGeneratedAttribute]
public string get_ApiKeySid();
    [CompilerGeneratedAttribute]
public void set_ApiKeySid(string value);
    [CompilerGeneratedAttribute]
public string get_ApiKeySecret();
    [CompilerGeneratedAttribute]
public void set_ApiKeySecret(string value);
    [CompilerGeneratedAttribute]
public CredentialType get_CredentialType();
    [CompilerGeneratedAttribute]
public void set_CredentialType(CredentialType value);
    [CompilerGeneratedAttribute]
public string get_Region();
    [CompilerGeneratedAttribute]
public void set_Region(string value);
    [CompilerGeneratedAttribute]
public string get_Edge();
    [CompilerGeneratedAttribute]
public void set_Edge(string value);
    [CompilerGeneratedAttribute]
public string get_LogLevel();
    [CompilerGeneratedAttribute]
public void set_LogLevel(string value);
}
public class Twilio.AspNet.Core.TwilioController : ControllerBase {
    [NonActionAttribute]
public TwiMLResult TwiML(MessagingResponse response);
    [NonActionAttribute]
public TwiMLResult TwiML(MessagingResponse response, SaveOptions formattingOptions);
    [NonActionAttribute]
public TwiMLResult TwiML(VoiceResponse response);
    [NonActionAttribute]
public TwiMLResult TwiML(VoiceResponse response, SaveOptions formattingOptions);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.TwilioControllerExtensions : object {
    [ExtensionAttribute]
public static TwiMLResult TwiML(ControllerBase controller, MessagingResponse response);
    [ExtensionAttribute]
public static TwiMLResult TwiML(ControllerBase controller, MessagingResponse response, SaveOptions formattingOptions);
    [ExtensionAttribute]
public static TwiMLResult TwiML(ControllerBase controller, VoiceResponse response);
    [ExtensionAttribute]
public static TwiMLResult TwiML(ControllerBase controller, VoiceResponse response, SaveOptions formattingOptions);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.TwilioFilterExtensions : object {
    [ExtensionAttribute]
public static RouteHandlerBuilder ValidateTwilioRequest(RouteHandlerBuilder builder);
    [ExtensionAttribute]
public static RouteGroupBuilder ValidateTwilioRequest(RouteGroupBuilder builder);
}
public class Twilio.AspNet.Core.TwilioOptions : object {
    [CompilerGeneratedAttribute]
private string <AuthToken>k__BackingField;
    [CompilerGeneratedAttribute]
private TwilioClientOptions <Client>k__BackingField;
    [CompilerGeneratedAttribute]
private TwilioRequestValidationOptions <RequestValidation>k__BackingField;
    public string AuthToken { get; public set; }
    public TwilioClientOptions Client { get; public set; }
    public TwilioRequestValidationOptions RequestValidation { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthToken();
    [CompilerGeneratedAttribute]
public void set_AuthToken(string value);
    [CompilerGeneratedAttribute]
public TwilioClientOptions get_Client();
    [CompilerGeneratedAttribute]
public void set_Client(TwilioClientOptions value);
    [CompilerGeneratedAttribute]
public TwilioRequestValidationOptions get_RequestValidation();
    [CompilerGeneratedAttribute]
public void set_RequestValidation(TwilioRequestValidationOptions value);
}
public class Twilio.AspNet.Core.TwilioRequestValidationOptions : object {
    [CompilerGeneratedAttribute]
private string <AuthToken>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BaseUrlOverride>k__BackingField;
    public string AuthToken { get; public set; }
    public bool AllowLocal { get; public set; }
    public string BaseUrlOverride { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AuthToken();
    [CompilerGeneratedAttribute]
public void set_AuthToken(string value);
    [CompilerGeneratedAttribute]
public bool get_AllowLocal();
    [CompilerGeneratedAttribute]
public void set_AllowLocal(bool value);
    [CompilerGeneratedAttribute]
public string get_BaseUrlOverride();
    [CompilerGeneratedAttribute]
public void set_BaseUrlOverride(string value);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.TwiMLExtensions : object {
    [ExtensionAttribute]
public static TwiMLResult ToTwiMLResult(VoiceResponse voiceResponse);
    [ExtensionAttribute]
public static TwiMLResult ToTwiMLResult(VoiceResponse voiceResponse, SaveOptions formattingOptions);
    [ExtensionAttribute]
public static TwiMLResult ToTwiMLResult(MessagingResponse messagingResponse);
    [ExtensionAttribute]
public static TwiMLResult ToTwiMLResult(MessagingResponse messagingResponse, SaveOptions formattingOptions);
}
public class Twilio.AspNet.Core.TwiMLResult : object {
    private TwiML twiml;
    private SaveOptions formattingOptions;
    public TwiMLResult(TwiML twiml);
    public TwiMLResult(TwiML twiml, SaveOptions formattingOptions);
    public sealed virtual Task ExecuteAsync(HttpContext httpContext);
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.TwiMLResult/<ExecuteResultAsync>d__5")]
public sealed virtual Task ExecuteResultAsync(ActionContext actionContext);
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.TwiMLResult/<WriteTwiMLToResponse>d__6")]
private Task WriteTwiMLToResponse(HttpResponse response);
}
[AttributeUsageAttribute("68")]
public class Twilio.AspNet.Core.ValidateRequestAttribute : Attribute {
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.ValidateRequestAttribute/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext filterContext, ActionExecutionDelegate next);
}
public class Twilio.AspNet.Core.ValidateTwilioRequestFilter : object {
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.ValidateTwilioRequestFilter/<InvokeAsync>d__0")]
public sealed virtual ValueTask`1<object> InvokeAsync(EndpointFilterInvocationContext efiContext, EndpointFilterDelegate next);
}
public class Twilio.AspNet.Core.ValidateTwilioRequestMiddleware : object {
    private RequestDelegate next;
    public ValidateTwilioRequestMiddleware(RequestDelegate next);
    [AsyncStateMachineAttribute("Twilio.AspNet.Core.ValidateTwilioRequestMiddleware/<InvokeAsync>d__2")]
public Task InvokeAsync(HttpContext context);
}
[ExtensionAttribute]
public static class Twilio.AspNet.Core.ValidateTwilioRequestMiddlewareExtensions : object {
    [ExtensionAttribute]
public static IApplicationBuilder UseTwilioRequestValidation(IApplicationBuilder builder);
}
