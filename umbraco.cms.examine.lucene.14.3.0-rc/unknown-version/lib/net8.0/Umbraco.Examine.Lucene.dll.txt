[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.BackOfficeExamineSearcher : object {
    private AppCaches _appCaches;
    private IBackOfficeSecurityAccessor _backOfficeSecurityAccessor;
    private IEntityService _entityService;
    private IExamineManager _examineManager;
    private ILocalizationService _languageService;
    private IPublishedUrlProvider _publishedUrlProvider;
    private IUmbracoTreeSearcherFields _treeSearcherFields;
    private IUmbracoMapper _umbracoMapper;
    public BackOfficeExamineSearcher(IExamineManager examineManager, ILocalizationService languageService, IBackOfficeSecurityAccessor backOfficeSecurityAccessor, IEntityService entityService, IUmbracoTreeSearcherFields treeSearcherFields, AppCaches appCaches, IUmbracoMapper umbracoMapper, IPublishedUrlProvider publishedUrlProvider);
    public sealed virtual IEnumerable`1<ISearchResult> Search(string query, UmbracoEntityTypes entityType, int pageSize, long pageIndex, Int64& totalFound, string searchFrom, bool ignoreUserStartNodes);
    private bool BuildQuery(StringBuilder sb, string query, string searchFrom, List`1<string> fields, string type);
    private void AppendNodeNamePhraseWithBoost(StringBuilder sb, string query, IEnumerable`1<string> allLangs);
    private void AppendNodeNameExactWithBoost(StringBuilder sb, string query, IEnumerable`1<string> allLangs);
    private void AppendNodeNameWithWildcards(StringBuilder sb, String[] querywords, IEnumerable`1<string> allLangs);
    private void AppendPath(StringBuilder sb, UmbracoObjectTypes objectType, Int32[] startNodeIds, string searchFrom, bool ignoreUserStartNodes, IEntityService entityService);
    private void AppendPath(StringBuilder sb, string path, bool includeThisNode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.ConfigurationEnabledDirectoryFactory : DirectoryFactoryBase {
    private IApplicationRoot _applicationRoot;
    private IServiceProvider _services;
    private IndexCreatorSettings _settings;
    [NullableAttribute("2")]
private IDirectoryFactory _directoryFactory;
    public ConfigurationEnabledDirectoryFactory(IServiceProvider services, IOptions`1<IndexCreatorSettings> settings, IApplicationRoot applicationRoot);
    protected virtual Directory CreateDirectory(LuceneIndex luceneIndex, bool forceUnlock);
    private IDirectoryFactory CreateFactory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndex : UmbracoExamineIndex {
    private IDeliveryApiCompositeIdHandler _deliveryApiCompositeIdHandler;
    private ILogger`1<DeliveryApiContentIndex> _logger;
    protected bool ApplySpecialValueTransformations { get; }
    [ObsoleteAttribute("Use the constructor that takes an IDeliveryApiCompositeIdHandler instead, scheduled for removal in v15")]
public DeliveryApiContentIndex(ILoggerFactory loggerFactory, string name, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState);
    public DeliveryApiContentIndex(ILoggerFactory loggerFactory, string name, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState, IDeliveryApiCompositeIdHandler deliveryApiCompositeIdHandler);
    protected virtual bool get_ApplySpecialValueTransformations();
    protected virtual void PerformDeleteFromIndex(IEnumerable`1<string> itemIds, Action`1<IndexOperationEventArgs> onComplete);
    private ValueTuple`2<string, string> ParseItemId(string id);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <PerformDeleteFromIndex>b__6_1(string indexId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.DependencyInjection.ConfigureIndexOptions : object {
    private IndexCreatorSettings _settings;
    private IUmbracoIndexConfig _umbracoIndexConfig;
    private IDeliveryApiContentIndexFieldDefinitionBuilder _deliveryApiContentIndexFieldDefinitionBuilder;
    public ConfigureIndexOptions(IUmbracoIndexConfig umbracoIndexConfig, IOptions`1<IndexCreatorSettings> settings, IDeliveryApiContentIndexFieldDefinitionBuilder deliveryApiContentIndexFieldDefinitionBuilder);
    public sealed virtual void Configure(string name, LuceneDirectoryIndexOptions options);
    public sealed virtual void Configure(LuceneDirectoryIndexOptions options);
}
[ExtensionAttribute]
public static class Umbraco.Cms.Infrastructure.Examine.DependencyInjection.UmbracoBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IUmbracoBuilder AddExamineIndexes(IUmbracoBuilder umbracoBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.LuceneIndexDiagnostics : object {
    private IHostingEnvironment _hostingEnvironment;
    [NullableAttribute("2")]
private LuceneDirectoryIndexOptions _indexOptions;
    [CompilerGeneratedAttribute]
private LuceneIndex <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<LuceneIndexDiagnostics> <Logger>k__BackingField;
    public LuceneIndex Index { get; }
    public ILogger`1<LuceneIndexDiagnostics> Logger { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> Metadata { get; }
    public LuceneIndexDiagnostics(LuceneIndex index, ILogger`1<LuceneIndexDiagnostics> logger, IHostingEnvironment hostingEnvironment, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions);
    [CompilerGeneratedAttribute]
public LuceneIndex get_Index();
    [CompilerGeneratedAttribute]
public ILogger`1<LuceneIndexDiagnostics> get_Logger();
    public sealed virtual Attempt`1<string> IsHealthy();
    public sealed virtual long GetDocumentCount();
    public sealed virtual IEnumerable`1<string> GetFieldNames();
    public virtual IReadOnlyDictionary`2<string, object> get_Metadata();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.LuceneIndexDiagnosticsFactory : IndexDiagnosticsFactory {
    private IHostingEnvironment _hostingEnvironment;
    private ILoggerFactory _loggerFactory;
    public LuceneIndexDiagnosticsFactory(ILoggerFactory loggerFactory, IHostingEnvironment hostingEnvironment);
    public virtual IIndexDiagnostics Create(IIndex index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.LuceneRAMDirectoryFactory : DirectoryFactoryBase {
    protected virtual Directory CreateDirectory(LuceneIndex luceneIndex, bool forceUnlock);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.NoPrefixSimpleFsLockFactory : SimpleFSLockFactory {
    public string LockPrefix { get; public set; }
    public NoPrefixSimpleFsLockFactory(DirectoryInfo lockDir);
    public virtual string get_LockPrefix();
    public virtual void set_LockPrefix(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoApplicationRoot : object {
    private IHostingEnvironment _hostingEnvironment;
    public DirectoryInfo ApplicationRoot { get; }
    public UmbracoApplicationRoot(IHostingEnvironment hostingEnvironment);
    public sealed virtual DirectoryInfo get_ApplicationRoot();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoContentIndex : UmbracoExamineIndex {
    private ISet`1<string> _idOnlyFieldSet;
    private ILogger`1<UmbracoContentIndex> _logger;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILocalizationService <LanguageService>k__BackingField;
    [NullableAttribute("2")]
protected ILocalizationService LanguageService { get; }
    public UmbracoContentIndex(ILoggerFactory loggerFactory, string name, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState, ILocalizationService languageService);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected ILocalizationService get_LanguageService();
    private sealed virtual override void Examine.IIndex.IndexItems(IEnumerable`1<ValueSet> values);
    protected virtual void PerformIndexItems(IEnumerable`1<ValueSet> values, Action`1<IndexOperationEventArgs> onComplete);
    protected virtual void PerformDeleteFromIndex(IEnumerable`1<string> itemIds, Action`1<IndexOperationEventArgs> onComplete);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ValueSetValidationStatus <PerformIndexItems>b__7_0(ValueSet v);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Examine.UmbracoExamineIndex : LuceneIndex {
    private UmbracoExamineIndexDiagnostics _diagnostics;
    private ILogger`1<UmbracoExamineIndex> _logger;
    private IRuntimeState _runtimeState;
    private bool _hasLoggedInitLog;
    [CompilerGeneratedAttribute]
private bool <EnableDefaultEventHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PublishedValuesOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportProtectedContent>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> Metadata { get; }
    protected bool ApplySpecialValueTransformations { get; }
    public bool EnableDefaultEventHandler { get; public set; }
    public bool PublishedValuesOnly { get; protected set; }
    public bool SupportProtectedContent { get; protected set; }
    protected UmbracoExamineIndex(ILoggerFactory loggerFactory, string name, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState);
    public sealed virtual Attempt`1<string> IsHealthy();
    public virtual IReadOnlyDictionary`2<string, object> get_Metadata();
    protected virtual bool get_ApplySpecialValueTransformations();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_EnableDefaultEventHandler();
    [CompilerGeneratedAttribute]
public void set_EnableDefaultEventHandler(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_PublishedValuesOnly();
    [CompilerGeneratedAttribute]
protected void set_PublishedValuesOnly(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SupportProtectedContent();
    [CompilerGeneratedAttribute]
protected void set_SupportProtectedContent(bool value);
    protected virtual void PerformDeleteFromIndex(IEnumerable`1<string> itemIds, Action`1<IndexOperationEventArgs> onComplete);
    protected virtual void PerformIndexItems(IEnumerable`1<ValueSet> values, Action`1<IndexOperationEventArgs> onComplete);
    protected bool CanInitialize();
    protected virtual void OnDocumentWriting(DocumentWritingEventArgs docArgs);
    protected virtual void OnTransformingIndexValues(IndexingItemEventArgs e);
    private void ApplySpecialIndexValueTransformations(IndexingItemEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoExamineIndexDiagnostics : LuceneIndexDiagnostics {
    private UmbracoExamineIndex _index;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> Metadata { get; }
    public UmbracoExamineIndexDiagnostics(UmbracoExamineIndex index, ILogger`1<UmbracoExamineIndexDiagnostics> logger, IHostingEnvironment hostingEnvironment, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions);
    public virtual IReadOnlyDictionary`2<string, object> get_Metadata();
}
public class Umbraco.Cms.Infrastructure.Examine.UmbracoLockFactory : object {
    [NullableContextAttribute("1")]
public sealed virtual LockFactory GetLockFactory(DirectoryInfo directory);
}
public class Umbraco.Cms.Infrastructure.Examine.UmbracoMemberIndex : UmbracoExamineIndex {
    [NullableContextAttribute("1")]
public UmbracoMemberIndex(ILoggerFactory loggerFactory, string name, IOptionsMonitor`1<LuceneDirectoryIndexOptions> indexOptions, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoTempEnvFileSystemDirectoryFactory : FileSystemDirectoryFactory {
    public UmbracoTempEnvFileSystemDirectoryFactory(IApplicationIdentifier applicationIdentifier, ILockFactory lockFactory, IHostingEnvironment hostingEnvironment);
    public static string GetTempPath(IApplicationIdentifier applicationIdentifier, IHostingEnvironment hostingEnvironment);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ExamineExtensions : object {
    internal static bool TryParseLuceneQuery(string query);
    [ExtensionAttribute]
public static bool IsHealthy(LuceneIndex indexer, Exception& ex);
}
