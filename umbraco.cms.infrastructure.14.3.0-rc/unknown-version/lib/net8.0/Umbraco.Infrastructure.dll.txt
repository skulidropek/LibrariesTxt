[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__BlockRegex_3 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__BlockRegex_3 Instance;
    private static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__BlockRegex_3();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__CultureIsoCodeFieldNameMatchExpression_2 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__CultureIsoCodeFieldNameMatchExpression_2 Instance;
    private static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__CultureIsoCodeFieldNameMatchExpression_2();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LegacyLocalLinkRegex_0 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LegacyLocalLinkRegex_0 Instance;
    private static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LegacyLocalLinkRegex_0();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LocalLinkRegex_1 : Regex {
    [NullableAttribute("1")]
internal static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LocalLinkRegex_1 Instance;
    private static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__LocalLinkRegex_1();
}
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal static class System.Text.RegularExpressions.Generated.<RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__Utilities : object {
    internal static TimeSpan s_defaultTimeout;
    internal static bool s_hasTimeout;
    private static <RegexGenerator_g>F04F6573FA251E0BDBF7673A9D1B7B32CDDE49D617686C4581E5C7CB37DE251F6__Utilities();
    [NullableContextAttribute("1")]
internal static void StackPush(Int32[]& stack, Int32& pos, int arg0, int arg1);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
internal static void <StackPush>g__WithResize|2_0(Int32[]& stack, Int32& pos, int arg0, int arg1);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Cache.DatabaseServerMessengerNotificationHandler : object {
    private IUmbracoDatabaseFactory _databaseFactory;
    private ILogger`1<DatabaseServerMessengerNotificationHandler> _logger;
    private IServerMessenger _messenger;
    private IRuntimeState _runtimeState;
    public DatabaseServerMessengerNotificationHandler(IServerMessenger serverMessenger, IUmbracoDatabaseFactory databaseFactory, ILogger`1<DatabaseServerMessengerNotificationHandler> logger, IRuntimeState runtimeState);
    public sealed virtual void Handle(UmbracoApplicationStartingNotification notification);
    public sealed virtual void Handle(UmbracoRequestEndNotification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Cache.DefaultRepositoryCachePolicy`2 : RepositoryCachePolicyBase`2<TEntity, TId> {
    private static TEntity[] _emptyEntities;
    private RepositoryCachePolicyOptions _options;
    [CompilerGeneratedAttribute]
private string <EntityTypeCacheKey>k__BackingField;
    protected string EntityTypeCacheKey { get; }
    public DefaultRepositoryCachePolicy`2(IAppPolicyCache cache, IScopeAccessor scopeAccessor, RepositoryCachePolicyOptions options);
    private static DefaultRepositoryCachePolicy`2();
    [CompilerGeneratedAttribute]
protected string get_EntityTypeCacheKey();
    public virtual void Create(TEntity entity, Action`1<TEntity> persistNew);
    public virtual void Update(TEntity entity, Action`1<TEntity> persistUpdated);
    public virtual void Delete(TEntity entity, Action`1<TEntity> persistDeleted);
    [NullableContextAttribute("2")]
public virtual TEntity Get(TId id, Func`2<TId, TEntity> performGet, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual TEntity GetCached(TId id);
    public virtual bool Exists(TId id, Func`2<TId, bool> performExists, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual TEntity[] GetAll(TId[] ids, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual void ClearAll();
    protected string GetEntityCacheKey(int id);
    protected string GetEntityCacheKey(TId id);
    protected virtual void InsertEntity(string cacheKey, TEntity entity);
    protected virtual void InsertEntities(TId[] ids, TEntity[] entities);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.Cache.FullDataSetRepositoryCachePolicy`2 : RepositoryCachePolicyBase`2<TEntity, TId> {
    protected static TId[] EmptyIds;
    private Func`2<TEntity, TId> _entityGetId;
    private bool _expires;
    public FullDataSetRepositoryCachePolicy`2(IAppPolicyCache cache, IScopeAccessor scopeAccessor, Func`2<TEntity, TId> entityGetId, bool expires);
    private static FullDataSetRepositoryCachePolicy`2();
    public virtual void Create(TEntity entity, Action`1<TEntity> persistNew);
    protected string GetEntityTypeCacheKey();
    protected void InsertEntities(TEntity[] entities);
    public virtual void Update(TEntity entity, Action`1<TEntity> persistUpdated);
    public virtual void Delete(TEntity entity, Action`1<TEntity> persistDeleted);
    [NullableContextAttribute("2")]
public virtual TEntity Get(TId id, Func`2<TId, TEntity> performGet, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual TEntity GetCached(TId id);
    public virtual bool Exists(TId id, Func`2<TId, bool> performExits, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual TEntity[] GetAll(TId[] ids, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public virtual void ClearAll();
    internal IEnumerable`1<TEntity> GetAllCached(Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Cache.PropertyEditors.BlockEditorElementTypeCache : object {
    private IContentTypeService _contentTypeService;
    private AppCaches _appCaches;
    public BlockEditorElementTypeCache(IContentTypeService contentTypeService, AppCaches appCaches);
    public sealed virtual IEnumerable`1<IContentType> GetAll(IEnumerable`1<Guid> keys);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Cache.PropertyEditors.IBlockEditorElementTypeCache {
    public abstract virtual IEnumerable`1<IContentType> GetAll(IEnumerable`1<Guid> keys);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.Cache.RepositoryCachePolicyBase`2 : object {
    private IAppPolicyCache _globalCache;
    private IScopeAccessor _scopeAccessor;
    protected IAppPolicyCache Cache { get; }
    protected RepositoryCachePolicyBase`2(IAppPolicyCache globalCache, IScopeAccessor scopeAccessor);
    protected IAppPolicyCache get_Cache();
    [NullableContextAttribute("2")]
public abstract virtual TEntity Get(TId id, Func`2<TId, TEntity> performGet, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public abstract virtual TEntity GetCached(TId id);
    public abstract virtual bool Exists(TId id, Func`2<TId, bool> performExists, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public abstract virtual void Create(TEntity entity, Action`1<TEntity> persistNew);
    public abstract virtual void Update(TEntity entity, Action`1<TEntity> persistUpdated);
    public abstract virtual void Delete(TEntity entity, Action`1<TEntity> persistDeleted);
    public abstract virtual TEntity[] GetAll(TId[] ids, Func`2<TId[], IEnumerable`1<TEntity>> performGetAll);
    public abstract virtual void ClearAll();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.Cache.SingleItemsOnlyRepositoryCachePolicy`2 : DefaultRepositoryCachePolicy`2<TEntity, TId> {
    public SingleItemsOnlyRepositoryCachePolicy`2(IAppPolicyCache cache, IScopeAccessor scopeAccessor, RepositoryCachePolicyOptions options);
    protected virtual void InsertEntities(TId[] ids, TEntity[] entities);
}
public class Umbraco.Cms.Core.Configuration.NCronTabParser : object {
    [NullableContextAttribute("1")]
public sealed virtual bool IsValidCronTab(string cronTab);
    [NullableContextAttribute("1")]
public sealed virtual DateTime GetNextOccurrence(string cronTab, DateTime time);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Events.MigrationEventArgs : CancellableObjectEventArgs`1<IList`1<Type>> {
    [CompilerGeneratedAttribute]
private SemVersion <ConfiguredSemVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private SemVersion <TargetSemVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProductName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IMigrationContext <MigrationContext>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<Type> MigrationsTypes { get; }
    public SemVersion ConfiguredSemVersion { get; }
    public SemVersion TargetSemVersion { get; }
    public string ProductName { get; }
    [NullableAttribute("2")]
internal IMigrationContext MigrationContext { get; }
    public MigrationEventArgs(IList`1<Type> migrationTypes, SemVersion configuredVersion, SemVersion targetVersion, string productName, bool canCancel);
    public MigrationEventArgs(IList`1<Type> migrationTypes, SemVersion configuredVersion, SemVersion targetVersion, string productName);
    internal MigrationEventArgs(IList`1<Type> migrationTypes, IMigrationContext migrationContext, SemVersion configuredVersion, SemVersion targetVersion, string productName, bool canCancel);
    public IList`1<Type> get_MigrationsTypes();
    [CompilerGeneratedAttribute]
public SemVersion get_ConfiguredSemVersion();
    [CompilerGeneratedAttribute]
public SemVersion get_TargetSemVersion();
    [CompilerGeneratedAttribute]
public string get_ProductName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal IMigrationContext get_MigrationContext();
    public static bool op_Equality(MigrationEventArgs left, MigrationEventArgs right);
    public static bool op_Inequality(MigrationEventArgs left, MigrationEventArgs right);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(MigrationEventArgs other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Events.RelateOnTrashNotificationHandler : object {
    private IAuditService _auditService;
    private IEntityService _entityService;
    private IRelationService _relationService;
    private ICoreScopeProvider _scopeProvider;
    private IBackOfficeSecurityAccessor _backOfficeSecurityAccessor;
    private ILocalizedTextService _textService;
    [ObsoleteAttribute("Use the new constructor instead, will be removed in V16")]
public RelateOnTrashNotificationHandler(IRelationService relationService, IEntityService entityService, ILocalizedTextService textService, IAuditService auditService, IScopeProvider scopeProvider);
    public RelateOnTrashNotificationHandler(IRelationService relationService, IEntityService entityService, ILocalizedTextService textService, IAuditService auditService, IScopeProvider scopeProvider, IBackOfficeSecurityAccessor backOfficeSecurityAccessor);
    public sealed virtual void Handle(ContentMovedNotification notification);
    public sealed virtual void Handle(ContentMovedToRecycleBinNotification notification);
    public sealed virtual void Handle(MediaMovedNotification notification);
    public sealed virtual void Handle(MediaMovedToRecycleBinNotification notification);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.IPublishedContentQuery {
    [NullableContextAttribute("2")]
public abstract virtual IPublishedContent Content(int id);
    [NullableContextAttribute("2")]
public abstract virtual IPublishedContent Content(Guid id);
    public abstract virtual IPublishedContent Content(Udi id);
    public abstract virtual IPublishedContent Content(object id);
    public abstract virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<int> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<Guid> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<object> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> ContentAtRoot();
    [NullableContextAttribute("2")]
public abstract virtual IPublishedContent Media(int id);
    [NullableContextAttribute("2")]
public abstract virtual IPublishedContent Media(Guid id);
    public abstract virtual IPublishedContent Media(Udi id);
    public abstract virtual IPublishedContent Media(object id);
    public abstract virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<int> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<object> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<Guid> ids);
    public abstract virtual IEnumerable`1<IPublishedContent> MediaAtRoot();
    public abstract virtual IEnumerable`1<PublishedSearchResult> Search(string term, int skip, int take, Int64& totalRecords, string culture, string indexName, ISet`1<string> loadedFields);
    public abstract virtual IEnumerable`1<PublishedSearchResult> Search(string term, string culture, string indexName);
    public abstract virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query);
    public abstract virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query, int skip, int take, Int64& totalRecords);
    public virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query, int skip, int take, Int64& totalRecords, string culture);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.IPublishedContentQueryAccessor {
    public abstract virtual bool TryGetValue(IPublishedContentQuery& publishedContentQuery);
}
public class Umbraco.Cms.Core.Logging.MessageTemplates : object {
    [NullableAttribute("1")]
private static Lazy`1<ILogger> _minimalLogger;
    private static MessageTemplates();
    [NullableContextAttribute("1")]
public sealed virtual string Render(string messageTemplate, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Serilog.Enrichers.HttpRequestIdEnricher : object {
    public static string HttpRequestIdPropertyName;
    private IRequestCache _requestCache;
    public HttpRequestIdEnricher(IRequestCache requestCache);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Serilog.Enrichers.HttpRequestNumberEnricher : object {
    private static string HttpRequestNumberPropertyName;
    private static string _requestNumberItemName;
    private static int _lastRequestNumber;
    private IRequestCache _requestCache;
    public HttpRequestNumberEnricher(IRequestCache requestCache);
    private static HttpRequestNumberEnricher();
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Serilog.Enrichers.HttpSessionIdEnricher : object {
    public static string HttpSessionIdPropertyName;
    private ISessionIdResolver _sessionIdResolver;
    public HttpSessionIdEnricher(ISessionIdResolver sessionIdResolver);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
internal class Umbraco.Cms.Core.Logging.Serilog.Enrichers.Log4NetLevelMapperEnricher : object {
    [NullableContextAttribute("1")]
public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Serilog.Enrichers.ThreadAbortExceptionEnricher : object {
    private IHostingEnvironment _hostingEnvironment;
    private IMarchal _marchal;
    private CoreDebugSettings _coreDebugSettings;
    public ThreadAbortExceptionEnricher(IOptionsMonitor`1<CoreDebugSettings> coreDebugSettings, IHostingEnvironment hostingEnvironment, IMarchal marchal);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
    [NullableContextAttribute("2")]
private static bool IsTimeoutThreadAbortException(Exception exception);
    private void DumpThreadAborts(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
    private static bool IsMonitorEnterThreadAbortException(Exception exception);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__3_0(CoreDebugSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Serilog.SerilogLogger : object {
    [CompilerGeneratedAttribute]
private ILogger <SerilogLog>k__BackingField;
    public ILogger SerilogLog { get; }
    public SerilogLogger(LoggerConfiguration logConfig);
    [CompilerGeneratedAttribute]
public ILogger get_SerilogLog();
    [ObsoleteAttribute]
public static SerilogLogger CreateWithDefaultConfiguration(IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, IConfiguration configuration);
    public sealed virtual void Dispose();
    [ObsoleteAttribute]
public static SerilogLogger CreateWithDefaultConfiguration(IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, IConfiguration configuration, UmbracoFileConfiguration& umbracoFileConfig);
    public bool IsEnabled(Type reporting, LogLevel level);
    private ILogger LoggerFor(Type reporting);
    private LogEventLevel MapLevel(LogLevel level);
    public void Fatal(Type reporting, Exception exception, string message);
    public void Fatal(Type reporting, Exception exception);
    public void Fatal(Type reporting, string message);
    public void Fatal(Type reporting, string messageTemplate, Object[] propertyValues);
    public void Fatal(Type reporting, Exception exception, string messageTemplate, Object[] propertyValues);
    public void Error(Type reporting, Exception exception, string message);
    public void Error(Type reporting, Exception exception);
    public void Error(Type reporting, string message);
    public void Error(Type reporting, string messageTemplate, Object[] propertyValues);
    public void Error(Type reporting, Exception exception, string messageTemplate, Object[] propertyValues);
    public void Warn(Type reporting, string message);
    public void Warn(Type reporting, string message, Object[] propertyValues);
    public void Warn(Type reporting, Exception exception, string message);
    public void Warn(Type reporting, Exception exception, string messageTemplate, Object[] propertyValues);
    public void Info(Type reporting, string message);
    public void Info(Type reporting, string messageTemplate, Object[] propertyValues);
    public void Debug(Type reporting, string message);
    public void Debug(Type reporting, string messageTemplate, Object[] propertyValues);
    public void Verbose(Type reporting, string message);
    public void Verbose(Type reporting, string messageTemplate, Object[] propertyValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Logging.Viewer.CountingFilter : object {
    [CompilerGeneratedAttribute]
private LogLevelCounts <Counts>k__BackingField;
    public LogLevelCounts Counts { get; }
    [CompilerGeneratedAttribute]
public LogLevelCounts get_Counts();
    public sealed virtual bool TakeLogEvent(LogEvent e);
}
internal class Umbraco.Cms.Core.Logging.Viewer.ErrorCounterFilter : object {
    [CompilerGeneratedAttribute]
private int <Count>k__BackingField;
    public int Count { get; private set; }
    [CompilerGeneratedAttribute]
public int get_Count();
    [CompilerGeneratedAttribute]
private void set_Count(int value);
    [NullableContextAttribute("1")]
public sealed virtual bool TakeLogEvent(LogEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Logging.Viewer.ExpressionFilter : object {
    private static string ExpressionOperators;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Func`2<LogEvent, bool> _filter;
    [NullableContextAttribute("2")]
public ExpressionFilter(string filterExpression);
    public sealed virtual bool TakeLogEvent(LogEvent e);
    private Func`2<LogEvent, bool> PerformMessageLikeFilter(string filterExpression, SerilogLegacyNameResolver serilogLegacyNameResolver);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Logging.Viewer.ILogFilter {
    public abstract virtual bool TakeLogEvent(LogEvent e);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("Use ILogViewerService instead. Scheduled for removal in Umbraco 15.")]
public interface Umbraco.Cms.Core.Logging.Viewer.ILogLevelLoader {
    public abstract virtual ReadOnlyDictionary`2<string, Nullable`1<LogEventLevel>> GetLogLevelsFromSinks();
    public abstract virtual Nullable`1<LogEventLevel> GetGlobalMinLogLevel();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Logging.Viewer.ILogViewer {
    public bool CanHandleLargeLogs { get; }
    public abstract virtual bool get_CanHandleLargeLogs();
    [ObsoleteAttribute("Use ILogViewerService.GetSavedLogQueriesAsync instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual IReadOnlyList`1<SavedLogSearch> GetSavedSearches();
    [ObsoleteAttribute("Use ILogViewerService.AddSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual IReadOnlyList`1<SavedLogSearch> AddSavedSearch(string name, string query);
    [ObsoleteAttribute("Use ILogViewerService.DeleteSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual IReadOnlyList`1<SavedLogSearch> DeleteSavedSearch(string name);
    public abstract virtual int GetNumberOfErrors(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetLogLevelCounts instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual LogLevelCounts GetLogLevelCounts(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetMessageTemplates instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual IEnumerable`1<LogTemplate> GetMessageTemplates(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.CanViewLogsAsync instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual bool CheckCanOpenLogs(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetPagedLogs instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual PagedResult`1<LogMessage> GetLogs(LogTimePeriod logTimePeriod, int pageNumber, int pageSize, Direction orderDirection, string filterExpression, String[] logLevels);
    [ObsoleteAttribute("Use ILogViewerService.GetPagedLogs instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual PagedModel`1<LogMessage> GetLogsAsPagedModel(LogTimePeriod logTimePeriod, int skip, int take, Direction orderDirection, string filterExpression, String[] logLevels);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("Use ILogViewerService instead. Scheduled for removal in Umbraco 15.")]
public interface Umbraco.Cms.Core.Logging.Viewer.ILogViewerConfig {
    public abstract virtual IReadOnlyList`1<SavedLogSearch> GetSavedSearches();
    public abstract virtual IReadOnlyList`1<SavedLogSearch> AddSavedSearch(string name, string query);
    public abstract virtual IReadOnlyList`1<SavedLogSearch> DeleteSavedSearch(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Viewer.LogLevelLoader : object {
    private UmbracoFileConfiguration _umbracoFileConfig;
    public LogLevelLoader(UmbracoFileConfiguration umbracoFileConfig);
    [ObsoleteAttribute("Use ILogViewerService.GetLogLevelsFromSinks instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual ReadOnlyDictionary`2<string, Nullable`1<LogEventLevel>> GetLogLevelsFromSinks();
    [ObsoleteAttribute("Use ILogViewerService.GetGlobalMinLogLevel instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual Nullable`1<LogEventLevel> GetGlobalMinLogLevel();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ObsoleteAttribute("Use ILogEntry instead. Scheduled for removal in Umbraco 15.")]
public class Umbraco.Cms.Core.Logging.Viewer.LogMessage : object {
    [CompilerGeneratedAttribute]
private DateTimeOffset <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
private LogEventLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageTemplateText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RenderedMessage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, LogEventPropertyValue> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Exception>k__BackingField;
    public DateTimeOffset Timestamp { get; public set; }
    public LogEventLevel Level { get; public set; }
    public string MessageTemplateText { get; public set; }
    public string RenderedMessage { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, LogEventPropertyValue> Properties { get; public set; }
    public string Exception { get; public set; }
    [CompilerGeneratedAttribute]
public DateTimeOffset get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(DateTimeOffset value);
    [CompilerGeneratedAttribute]
public LogEventLevel get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(LogEventLevel value);
    [CompilerGeneratedAttribute]
public string get_MessageTemplateText();
    [CompilerGeneratedAttribute]
public void set_MessageTemplateText(string value);
    [CompilerGeneratedAttribute]
public string get_RenderedMessage();
    [CompilerGeneratedAttribute]
public void set_RenderedMessage(string value);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, LogEventPropertyValue> get_Properties();
    [CompilerGeneratedAttribute]
public void set_Properties(IReadOnlyDictionary`2<string, LogEventPropertyValue> value);
    [CompilerGeneratedAttribute]
public string get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Logging.Viewer.LogViewerConfig : object {
    private ILogViewerQueryRepository _logViewerQueryRepository;
    private IScopeProvider _scopeProvider;
    public LogViewerConfig(ILogViewerQueryRepository logViewerQueryRepository, IScopeProvider scopeProvider);
    [ObsoleteAttribute("Use ILogViewerService.GetSavedLogQueriesAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual IReadOnlyList`1<SavedLogSearch> GetSavedSearches();
    [ObsoleteAttribute("Use ILogViewerService.AddSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual IReadOnlyList`1<SavedLogSearch> AddSavedSearch(string name, string query);
    [ObsoleteAttribute("Use ILogViewerService.DeleteSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual IReadOnlyList`1<SavedLogSearch> DeleteSavedSearch(string name);
}
internal class Umbraco.Cms.Core.Logging.Viewer.MessageTemplateFilter : object {
    [NullableAttribute("1")]
public Dictionary`2<string, int> Counts;
    [NullableContextAttribute("1")]
public sealed virtual bool TakeLogEvent(LogEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Umbraco.Cms.Core.Logging.Viewer.SavedLogSearch : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [RequiredMemberAttribute]
public string Name { get; public set; }
    [RequiredMemberAttribute]
public string Query { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Logging.Viewer.SerilogJsonLogViewer : SerilogLogViewerSourceBase {
    private static int FileSizeCap;
    private ILogger`1<SerilogJsonLogViewer> _logger;
    private string _logsPath;
    public bool CanHandleLargeLogs { get; }
    public SerilogJsonLogViewer(ILogger`1<SerilogJsonLogViewer> logger, ILogViewerConfig logViewerConfig, ILoggingConfiguration loggingConfiguration, ILogLevelLoader logLevelLoader, ILogger serilogLog);
    public virtual bool get_CanHandleLargeLogs();
    [ObsoleteAttribute("Use ILogViewerService.CanViewLogsAsync instead. Scheduled for removal in Umbraco 15.")]
public virtual bool CheckCanOpenLogs(LogTimePeriod logTimePeriod);
    protected virtual IReadOnlyList`1<LogEvent> GetLogs(LogTimePeriod logTimePeriod, ILogFilter filter, int skip, int take);
    private string GetSearchPattern(DateTime day);
    private bool TryRead(LogEventReader reader, LogEvent& evt);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.Logging.Viewer.SerilogLogViewerSourceBase : object {
    private ILogLevelLoader _logLevelLoader;
    private ILogViewerConfig _logViewerConfig;
    public bool CanHandleLargeLogs { get; }
    protected SerilogLogViewerSourceBase(ILogViewerConfig logViewerConfig, ILogLevelLoader logLevelLoader, ILogger serilogLog);
    public abstract virtual bool get_CanHandleLargeLogs();
    [ObsoleteAttribute("Use ILogViewerService.CanViewLogsAsync instead. Scheduled for removal in Umbraco 15.")]
public abstract virtual bool CheckCanOpenLogs(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetSavedLogQueriesAsync instead. Scheduled for removal in Umbraco 15.")]
public virtual IReadOnlyList`1<SavedLogSearch> GetSavedSearches();
    [ObsoleteAttribute("Use ILogViewerService.AddSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public virtual IReadOnlyList`1<SavedLogSearch> AddSavedSearch(string name, string query);
    [ObsoleteAttribute("Use ILogViewerService.DeleteSavedLogQueryAsync instead. Scheduled for removal in Umbraco 15.")]
public virtual IReadOnlyList`1<SavedLogSearch> DeleteSavedSearch(string name);
    public sealed virtual int GetNumberOfErrors(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetLogLevelCounts instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual LogLevelCounts GetLogLevelCounts(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetMessageTemplates instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual IEnumerable`1<LogTemplate> GetMessageTemplates(LogTimePeriod logTimePeriod);
    [ObsoleteAttribute("Use ILogViewerService.GetPagedLogs instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual PagedResult`1<LogMessage> GetLogs(LogTimePeriod logTimePeriod, int pageNumber, int pageSize, Direction orderDirection, string filterExpression, String[] logLevels);
    [ObsoleteAttribute("Use ILogViewerService.GetPagedLogs instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual PagedModel`1<LogMessage> GetLogsAsPagedModel(LogTimePeriod logTimePeriod, int skip, int take, Direction orderDirection, string filterExpression, String[] logLevels);
    [ObsoleteAttribute("Use ILogViewerService.GetLogLevelsFromSinks instead. Scheduled for removal in Umbraco 15.")]
public ReadOnlyDictionary`2<string, Nullable`1<LogEventLevel>> GetLogLevels();
    protected abstract virtual IReadOnlyList`1<LogEvent> GetLogs(LogTimePeriod logTimePeriod, ILogFilter filter, int skip, int take);
    private IReadOnlyList`1<LogEvent> GetFilteredLogs(LogTimePeriod logTimePeriod, string filterExpression, String[] logLevels);
}
public class Umbraco.Cms.Core.Mapping.UmbracoDefaultMapper : DefaultMapper {
    [NullableContextAttribute("1")]
public virtual Func`2<object, object> GetFromDbConverter(Type destType, Type sourceType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Mapping.UmbracoMapper : object {
    private ConcurrentDictionary`2<Type, ConcurrentDictionary`2<Type, Func`3<object, MapperContext, object>>> _ctors;
    private ConcurrentDictionary`2<Type, ConcurrentDictionary`2<Type, Action`3<object, object, MapperContext>>> _maps;
    private ICoreScopeProvider _scopeProvider;
    private ILogger`1<UmbracoMapper> _logger;
    public UmbracoMapper(MapDefinitionCollection profiles, ICoreScopeProvider scopeProvider, ILogger`1<UmbracoMapper> logger);
    private static TTarget ThrowCtor(TSource source, MapperContext context);
    private static void Identity(TSource source, TTarget target, MapperContext context);
    [NullableContextAttribute("2")]
public sealed virtual void Define();
    [NullableContextAttribute("2")]
public sealed virtual void Define(Action`3<TSource, TTarget, MapperContext> map);
    [NullableContextAttribute("2")]
public sealed virtual void Define(Func`3<TSource, MapperContext, TTarget> ctor);
    public sealed virtual void Define(Func`3<TSource, MapperContext, TTarget> ctor, Action`3<TSource, TTarget, MapperContext> map);
    private ConcurrentDictionary`2<Type, Func`3<object, MapperContext, object>> DefineCtors(Type sourceType);
    private ConcurrentDictionary`2<Type, Action`3<object, object, MapperContext>> DefineMaps(Type sourceType);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(object source);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(object source, Action`1<MapperContext> f);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(object source, MapperContext context);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(TSource source);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(TSource source, Action`1<MapperContext> f);
    [NullableContextAttribute("2")]
public sealed virtual TTarget Map(TSource source, MapperContext context);
    [NullableContextAttribute("2")]
private TTarget Map(object source, Type sourceType, MapperContext context);
    private TTarget MapEnumerableInternal(IEnumerable source, Type targetGenericArg, Func`3<object, MapperContext, object> ctor, Action`3<object, object, MapperContext> map, MapperContext context);
    public sealed virtual TTarget Map(TSource source, TTarget target);
    public sealed virtual TTarget Map(TSource source, TTarget target, Action`1<MapperContext> f);
    public sealed virtual TTarget Map(TSource source, TTarget target, MapperContext context);
    [NullableContextAttribute("2")]
private Func`3<object, MapperContext, object> GetCtor(Type sourceType, Type targetType);
    [NullableContextAttribute("2")]
private Action`3<object, object, MapperContext> GetMap(Type sourceType, Type targetType);
    private static bool IsEnumerableOrArrayOfType(Type type);
    private static Type GetEnumerableOrArrayTypeArgument(Type type);
    public sealed virtual List`1<TTargetElement> MapEnumerable(IEnumerable`1<TSourceElement> source);
    public sealed virtual List`1<TTargetElement> MapEnumerable(IEnumerable`1<TSourceElement> source, Action`1<MapperContext> f);
    public sealed virtual List`1<TTargetElement> MapEnumerable(IEnumerable`1<TSourceElement> source, MapperContext context);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Migrations.IMigrationPlanExecutor {
    [ObsoleteAttribute("Use ExecutePlan instead.")]
public abstract virtual string Execute(MigrationPlan plan, string fromState);
    public virtual ExecutedMigrationPlan ExecutePlan(MigrationPlan plan, string fromState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Models.DeliveryApi.ApiImageCropperValue : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ImageFocalPoint <FocalPoint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<ImageCrop> <Crops>k__BackingField;
    public string Url { get; }
    [NullableAttribute("2")]
public ImageFocalPoint FocalPoint { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<ImageCrop> Crops { get; }
    public ApiImageCropperValue(string url, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops);
    [CompilerGeneratedAttribute]
public string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ImageFocalPoint get_FocalPoint();
    [CompilerGeneratedAttribute]
public IEnumerable`1<ImageCrop> get_Crops();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Models.DeliveryApi.ApiMediaWithCrops : object {
    private IApiMedia _inner;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ImageFocalPoint <FocalPoint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<ImageCrop> <Crops>k__BackingField;
    public Guid Id { get; }
    public string Name { get; }
    public string MediaType { get; }
    public string Url { get; }
    [NullableAttribute("2")]
public string Extension { get; }
    public Nullable`1<int> Width { get; }
    public Nullable`1<int> Height { get; }
    public Nullable`1<int> Bytes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, object> Properties { get; }
    [NullableAttribute("2")]
public ImageFocalPoint FocalPoint { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<ImageCrop> Crops { get; }
    public ApiMediaWithCrops(IApiMedia inner, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops);
    public sealed virtual Guid get_Id();
    public sealed virtual string get_Name();
    public sealed virtual string get_MediaType();
    public sealed virtual string get_Url();
    [NullableContextAttribute("2")]
public sealed virtual string get_Extension();
    public sealed virtual Nullable`1<int> get_Width();
    public sealed virtual Nullable`1<int> get_Height();
    public sealed virtual Nullable`1<int> get_Bytes();
    public sealed virtual IDictionary`2<string, object> get_Properties();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual ImageFocalPoint get_FocalPoint();
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<ImageCrop> get_Crops();
}
internal class Umbraco.Cms.Core.Models.DeliveryApi.ApiMediaWithCropsResponse : ApiMediaWithCrops {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [NullableAttribute("1")]
public string Path { get; }
    public DateTime CreateDate { get; }
    public DateTime UpdateDate { get; }
    [NullableContextAttribute("1")]
public ApiMediaWithCropsResponse(IApiMedia inner, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops, string path, DateTime createDate, DateTime updateDate);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_UpdateDate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Models.MediaWithCrops : PublishedContentWrapped {
    [CompilerGeneratedAttribute]
private ImageCropperValue <LocalCrops>k__BackingField;
    public IPublishedContent Content { get; }
    public ImageCropperValue LocalCrops { get; }
    public MediaWithCrops(IPublishedContent content, IPublishedValueFallback publishedValueFallback, ImageCropperValue localCrops);
    public IPublishedContent get_Content();
    [CompilerGeneratedAttribute]
public ImageCropperValue get_LocalCrops();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Models.MediaWithCrops`1 : MediaWithCrops {
    [CompilerGeneratedAttribute]
private T <Content>k__BackingField;
    public T Content { get; }
    public MediaWithCrops`1(T content, IPublishedValueFallback publishedValueFallback, ImageCropperValue localCrops);
    [CompilerGeneratedAttribute]
public T get_Content();
    public static T op_Implicit(MediaWithCrops`1<T> mediaWithCrops);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Core.Models.PathValidationExtensions : object {
    [ExtensionAttribute]
public static void ValidatePathWithException(NodeDto entity);
    [ExtensionAttribute]
public static bool ValidatePath(IUmbracoEntity entity);
    [ExtensionAttribute]
public static void EnsureValidPath(T entity, ILogger`1<T> logger, Func`2<T, T> getParent, Action`1<T> update);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.Packaging.PackageMigrationPlan : MigrationPlan {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <PackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PackageName>k__BackingField;
    public bool IgnoreCurrentState { get; }
    [NullableAttribute("2")]
public string PackageId { get; public set; }
    public string PackageName { get; public set; }
    protected PackageMigrationPlan(string packageName);
    protected PackageMigrationPlan(string packageName, string planName);
    protected PackageMigrationPlan(string packageId, string packageName, string planName);
    public virtual bool get_IgnoreCurrentState();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_PackageId();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PackageId(string value);
    [CompilerGeneratedAttribute]
public string get_PackageName();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_PackageName(string value);
    protected abstract virtual void DefinePlan();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Packaging.PackageMigrationPlanCollection : BuilderCollectionBase`1<PackageMigrationPlan> {
    public PackageMigrationPlanCollection(Func`1<IEnumerable`1<PackageMigrationPlan>> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Packaging.PackageMigrationPlanCollectionBuilder : WeightedCollectionBuilderBase`3<PackageMigrationPlanCollectionBuilder, PackageMigrationPlanCollection, PackageMigrationPlan> {
    protected PackageMigrationPlanCollectionBuilder This { get; }
    protected virtual PackageMigrationPlanCollectionBuilder get_This();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Packaging.PendingPackageMigrations : object {
    private ILogger`1<PendingPackageMigrations> _logger;
    private PackageMigrationPlanCollection _packageMigrationPlans;
    public PendingPackageMigrations(ILogger`1<PendingPackageMigrations> logger, PackageMigrationPlanCollection packageMigrationPlans);
    public IReadOnlyList`1<string> GetPendingPackageMigrations(IReadOnlyDictionary`2<string, string> keyValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Core.PropertyEditors.BlockEditorMinMaxValidatorBase`2 : object {
    [CompilerGeneratedAttribute]
private ILocalizedTextService <TextService>k__BackingField;
    protected ILocalizedTextService TextService { get; }
    protected BlockEditorMinMaxValidatorBase`2(ILocalizedTextService textService);
    [CompilerGeneratedAttribute]
protected ILocalizedTextService get_TextService();
    [NullableContextAttribute("2")]
public abstract virtual IEnumerable`1<ValidationResult> Validate(object value, string valueType, object dataTypeConfiguration);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockEditorMinMaxValidatorBase`2/<ValidateNumberOfBlocks>d__5")]
protected IEnumerable`1<ValidationResult> ValidateNumberOfBlocks(BlockEditorData`2<TValue, TLayout> blockEditorData, Nullable`1<int> min, Nullable`1<int> max);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockEditorPropertyNotificationHandlerBase`1 : ComplexPropertyEditorContentNotificationHandler {
    private ILogger`1<BlockEditorPropertyNotificationHandlerBase`1<TBlockLayoutItem>> _logger;
    private List`1<string> _udisToReplace;
    protected BlockEditorPropertyNotificationHandlerBase`1(ILogger`1<BlockEditorPropertyNotificationHandlerBase`1<TBlockLayoutItem>> logger);
    protected virtual string FormatPropertyValue(string rawJson, bool onlyMissingKeys);
    internal string ReplaceBlockEditorUdis(string rawJson, Func`2<Guid, Guid> createGuid);
    private void TraverseProperty(JsonNode property);
    private void TraverseToken(JsonNode token);
    private void TraverseObject(JsonObject obj);
    private void ParseUdis(JsonArray contentData, JsonArray settingsData);
    private JsonObject ParseObject(string json);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockEditorPropertyValueEditor`2 : BlockValuePropertyValueEditorBase`2<TValue, TLayout> {
    private IJsonSerializer _jsonSerializer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private BlockEditorValues`2<TValue, TLayout> _blockEditorValues;
    private IDataTypeConfigurationCache _dataTypeConfigurationCache;
    private PropertyEditorCollection _propertyEditors;
    private DataValueReferenceFactoryCollection _dataValueReferenceFactories;
    protected BlockEditorValues`2<TValue, TLayout> BlockEditorValues { get; protected set; }
    protected BlockEditorPropertyValueEditor`2(DataEditorAttribute attribute, PropertyEditorCollection propertyEditors, DataValueReferenceFactoryCollection dataValueReferenceFactories, IDataTypeConfigurationCache dataTypeConfigurationCache, ILocalizedTextService textService, ILogger`1<BlockEditorPropertyValueEditor`2<TValue, TLayout>> logger, IShortStringHelper shortStringHelper, IJsonSerializer jsonSerializer, IIOHelper ioHelper);
    protected BlockEditorValues`2<TValue, TLayout> get_BlockEditorValues();
    protected void set_BlockEditorValues(BlockEditorValues`2<TValue, TLayout> value);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockEditorPropertyValueEditor`2/<GetReferences>d__9")]
public virtual IEnumerable`1<UmbracoEntityReference> GetReferences(object value);
    [NullableContextAttribute("2")]
[IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockEditorPropertyValueEditor`2/<GetTags>d__10")]
public virtual IEnumerable`1<ITag> GetTags(object value, object dataTypeConfiguration, Nullable`1<int> languageId);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockEditorPropertyValueEditor`2/<GetAllPropertyValues>d__11")]
private IEnumerable`1<BlockPropertyValue> GetAllPropertyValues(object value);
    public virtual object ToEditor(IProperty property, string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object FromEditor(ContentPropertyData editorValue, object currentValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.BlockEditorValidator`2 : BlockEditorValidatorBase`2<TValue, TLayout> {
    private BlockEditorValues`2<TValue, TLayout> _blockEditorValues;
    public BlockEditorValidator`2(IPropertyValidationService propertyValidationService, BlockEditorValues`2<TValue, TLayout> blockEditorValues, IBlockEditorElementTypeCache elementTypeCache);
    protected virtual IEnumerable`1<ElementTypeValidationModel> GetElementTypeValidation(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockEditorValidatorBase`2 : ComplexEditorValidator {
    private IBlockEditorElementTypeCache _elementTypeCache;
    protected BlockEditorValidatorBase`2(IPropertyValidationService propertyValidationService, IBlockEditorElementTypeCache elementTypeCache);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockEditorValidatorBase`2/<GetBlockEditorDataValidation>d__2")]
protected IEnumerable`1<ElementTypeValidationModel> GetBlockEditorDataValidation(BlockEditorData`2<TValue, TLayout> blockEditorData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.BlockEditorValues`2 : object {
    private BlockEditorDataConverter`2<TValue, TLayout> _dataConverter;
    private IBlockEditorElementTypeCache _elementTypeCache;
    private ILogger _logger;
    public BlockEditorValues`2(BlockEditorDataConverter`2<TValue, TLayout> dataConverter, IBlockEditorElementTypeCache elementTypeCache, ILogger logger);
    [NullableContextAttribute("2")]
public BlockEditorData`2<TValue, TLayout> DeserializeAndClean(object propertyValue);
    public BlockEditorData`2<TValue, TLayout> ConvertAndClean(TValue blockValue);
    private BlockEditorData`2<TValue, TLayout> Clean(BlockEditorData`2<TValue, TLayout> blockEditorData);
    private bool ResolveBlockItemData(BlockItemData block, Dictionary`2<string, Dictionary`2<string, IPropertyType>> contentTypePropertyTypes, IDictionary`2<Guid, IContentType> contentTypesDictionary);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.BlockGridConfigurationEditor : ConfigurationEditor`1<BlockGridConfiguration> {
    public BlockGridConfigurationEditor(IIOHelper ioHelper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.BlockGrid")]
public class Umbraco.Cms.Core.PropertyEditors.BlockGridPropertyEditor : BlockGridPropertyEditorBase {
    private IIOHelper _ioHelper;
    public bool SupportsConfigurableElements { get; }
    public BlockGridPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory);
    public virtual bool get_SupportsConfigurableElements();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockGridPropertyEditorBase : DataEditor {
    private IBlockValuePropertyIndexValueFactory _blockValuePropertyIndexValueFactory;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    protected BlockGridPropertyEditorBase(IDataValueEditorFactory dataValueEditorFactory, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory);
    public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.BlockGridPropertyNotificationHandler : BlockEditorPropertyNotificationHandlerBase`1<BlockGridLayoutItem> {
    protected string EditorAlias { get; }
    public BlockGridPropertyNotificationHandler(ILogger`1<BlockGridPropertyNotificationHandler> logger);
    protected virtual string get_EditorAlias();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.BlockListConfigurationEditor : ConfigurationEditor`1<BlockListConfiguration> {
    public BlockListConfigurationEditor(IIOHelper ioHelper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.BlockList")]
public class Umbraco.Cms.Core.PropertyEditors.BlockListPropertyEditor : BlockListPropertyEditorBase {
    private IIOHelper _ioHelper;
    public bool SupportsConfigurableElements { get; }
    public BlockListPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory, IJsonSerializer jsonSerializer);
    [ObsoleteAttribute("Use constructor that doesn't take PropertyEditorCollection, scheduled for removal in V15")]
public BlockListPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, PropertyEditorCollection propertyEditors, IIOHelper ioHelper, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory, IJsonSerializer jsonSerializer);
    public virtual bool get_SupportsConfigurableElements();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockListPropertyEditorBase : DataEditor {
    private IBlockValuePropertyIndexValueFactory _blockValuePropertyIndexValueFactory;
    private IJsonSerializer _jsonSerializer;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    [ObsoleteAttribute("Use non-obsoleted ctor. This will be removed in Umbraco 15.")]
protected BlockListPropertyEditorBase(IDataValueEditorFactory dataValueEditorFactory, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory);
    protected BlockListPropertyEditorBase(IDataValueEditorFactory dataValueEditorFactory, IBlockValuePropertyIndexValueFactory blockValuePropertyIndexValueFactory, IJsonSerializer jsonSerializer);
    public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual BlockEditorDataConverter`2<BlockListValue, BlockListLayoutItem> CreateBlockEditorDataConverter();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.BlockListPropertyNotificationHandler : BlockEditorPropertyNotificationHandlerBase`1<BlockListLayoutItem> {
    protected string EditorAlias { get; }
    public BlockListPropertyNotificationHandler(ILogger`1<BlockListPropertyNotificationHandler> logger);
    protected virtual string get_EditorAlias();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.BlockValuePropertyIndexValueFactory : NestedPropertyIndexValueFactoryBase`2<IndexValueFactoryBlockValue, BlockItemData> {
    public BlockValuePropertyIndexValueFactory(PropertyEditorCollection propertyEditorCollection, IJsonSerializer jsonSerializer, IOptionsMonitor`1<IndexingSettings> indexingSettings);
    protected virtual IContentType GetContentTypeOfNestedItem(BlockItemData input, IDictionary`2<Guid, IContentType> contentTypeDictionary);
    protected virtual IDictionary`2<string, object> GetRawProperty(BlockItemData blockItemData);
    protected virtual IEnumerable`1<BlockItemData> GetDataItems(IndexValueFactoryBlockValue input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.BlockValuePropertyValueEditorBase`2 : DataValueEditor {
    private IDataTypeConfigurationCache _dataTypeConfigurationCache;
    private PropertyEditorCollection _propertyEditors;
    private ILogger _logger;
    private DataValueReferenceFactoryCollection _dataValueReferenceFactoryCollection;
    protected BlockValuePropertyValueEditorBase`2(DataEditorAttribute attribute, PropertyEditorCollection propertyEditors, IDataTypeConfigurationCache dataTypeConfigurationCache, ILocalizedTextService textService, ILogger logger, IShortStringHelper shortStringHelper, IJsonSerializer jsonSerializer, IIOHelper ioHelper, DataValueReferenceFactoryCollection dataValueReferenceFactoryCollection);
    public abstract virtual IEnumerable`1<UmbracoEntityReference> GetReferences(object value);
    protected IEnumerable`1<UmbracoEntityReference> GetBlockValueReferences(TValue blockValue);
    [NullableContextAttribute("2")]
public abstract virtual IEnumerable`1<ITag> GetTags(object value, object dataTypeConfiguration, Nullable`1<int> languageId);
    protected IEnumerable`1<ITag> GetBlockValueTags(TValue blockValue, Nullable`1<int> languageId);
    protected void MapBlockValueFromEditor(TValue blockValue);
    protected void MapBlockValueToEditor(IProperty property, TValue blockValue);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.BlockValuePropertyValueEditorBase`2/<ConfiguredElementTypeKeys>d__11")]
protected IEnumerable`1<Guid> ConfiguredElementTypeKeys(IBlockConfiguration configuration);
    private void MapBlockItemDataToEditor(IProperty property, List`1<BlockItemData> items);
    private void MapBlockItemDataFromEditor(List`1<BlockItemData> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.CheckBoxList")]
public class Umbraco.Cms.Core.PropertyEditors.CheckBoxListPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    public CheckBoxListPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.ColorPickerConfigurationEditor : ConfigurationEditor`1<ColorPickerConfiguration> {
    [NullableContextAttribute("1")]
public ColorPickerConfigurationEditor(IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.ColorPicker")]
public class Umbraco.Cms.Core.PropertyEditors.ColorPickerPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    [CompilerGeneratedAttribute]
private IPropertyIndexValueFactory <PropertyIndexValueFactory>k__BackingField;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public ColorPickerPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    [CompilerGeneratedAttribute]
public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.ComplexEditorValidator : object {
    private IPropertyValidationService _propertyValidationService;
    public ComplexEditorValidator(IPropertyValidationService propertyValidationService);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ValidationResult> Validate(object value, string valueType, object dataTypeConfiguration);
    protected abstract virtual IEnumerable`1<ElementTypeValidationModel> GetElementTypeValidation(object value);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.ComplexEditorValidator/<GetNestedValidationResults>d__4")]
protected IEnumerable`1<NestedValidationResults> GetNestedValidationResults(IEnumerable`1<ElementTypeValidationModel> elements);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.ComplexPropertyEditorContentNotificationHandler : object {
    protected string EditorAlias { get; }
    protected abstract virtual string get_EditorAlias();
    public sealed virtual void Handle(ContentCopyingNotification notification);
    public sealed virtual void Handle(ContentSavingNotification notification);
    public sealed virtual void Handle(ContentScaffoldedNotification notification);
    protected abstract virtual string FormatPropertyValue(string rawJson, bool onlyMissingKeys);
    private void UpdatePropertyValues(IEnumerable`1<IProperty> props, bool onlyMissingKeys);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.DateTime")]
public class Umbraco.Cms.Core.PropertyEditors.DateTimePropertyEditor : DataEditor {
    public DateTimePropertyEditor(IDataValueEditorFactory dataValueEditorFactory);
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.DropDownFlexibleConfigurationEditor : ConfigurationEditor`1<DropDownFlexibleConfiguration> {
    public DropDownFlexibleConfigurationEditor(IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.DropDown.Flexible")]
public class Umbraco.Cms.Core.PropertyEditors.DropDownFlexiblePropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    public DropDownFlexiblePropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.EmailAddress")]
public class Umbraco.Cms.Core.PropertyEditors.EmailAddressPropertyEditor : DataEditor {
    public EmailAddressPropertyEditor(IDataValueEditorFactory dataValueEditorFactory);
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.UploadField")]
public class Umbraco.Cms.Core.PropertyEditors.FileUploadPropertyEditor : DataEditor {
    private IContentService _contentService;
    private IOptionsMonitor`1<ContentSettings> _contentSettings;
    private IIOHelper _ioHelper;
    private MediaFileManager _mediaFileManager;
    private UploadAutoFillProperties _uploadAutoFillProperties;
    public FileUploadPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, MediaFileManager mediaFileManager, IOptionsMonitor`1<ContentSettings> contentSettings, UploadAutoFillProperties uploadAutoFillProperties, IContentService contentService, IIOHelper ioHelper);
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetMediaPath(string propertyEditorAlias, object value, String& mediaPath);
    public sealed virtual void Handle(ContentCopiedNotification notification);
    public sealed virtual void Handle(ContentDeletedNotification notification);
    public sealed virtual void Handle(MediaDeletedNotification notification);
    public sealed virtual void Handle(MediaSavingNotification notification);
    public sealed virtual void Handle(MemberDeletedNotification notification);
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    protected virtual IDataValueEditor CreateValueEditor();
    private static bool IsUploadField(IProperty property);
    private IEnumerable`1<string> ContainedFilePaths(IEnumerable`1<IContentBase> entities);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.FileUploadPropertyEditor/<GetFilePathsFromPropertyValues>d__16")]
private IEnumerable`1<string> GetFilePathsFromPropertyValues(IProperty prop);
    private void DeleteContainedFiles(IEnumerable`1<IContentBase> deletedEntities);
    private void AutoFillProperties(IContentBase model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.PropertyEditors.FileUploadPropertyValueEditor : DataValueEditor {
    private MediaFileManager _mediaFileManager;
    private IJsonSerializer _jsonSerializer;
    private ITemporaryFileService _temporaryFileService;
    private IScopeProvider _scopeProvider;
    private IFileStreamSecurityValidator _fileStreamSecurityValidator;
    private ContentSettings _contentSettings;
    public FileUploadPropertyValueEditor(DataEditorAttribute attribute, MediaFileManager mediaFileManager, ILocalizedTextService localizedTextService, IShortStringHelper shortStringHelper, IOptionsMonitor`1<ContentSettings> contentSettings, IJsonSerializer jsonSerializer, IIOHelper ioHelper, ITemporaryFileService temporaryFileService, IScopeProvider scopeProvider, IFileStreamSecurityValidator fileStreamSecurityValidator);
    [NullableContextAttribute("2")]
public virtual object ToEditor(IProperty property, string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object FromEditor(ContentPropertyData editorValue, object currentValue);
    [NullableContextAttribute("2")]
private FileUploadValue ParseFileUploadValue(object editorValue);
    [NullableContextAttribute("2")]
private Nullable`1<Guid> TryParseTemporaryFileKey(object editorValue);
    [NullableContextAttribute("2")]
private TemporaryFileModel TryGetTemporaryFile(Guid temporaryFileKey);
    private bool IsAllowedInDataTypeConfiguration(string extension, object dataTypeConfiguration);
    [NullableContextAttribute("2")]
private string ProcessFile(TemporaryFileModel file, object dataTypeConfiguration, Guid contentKey, Guid propertyTypeKey);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__6_0(ContentSettings x);
    [CompilerGeneratedAttribute]
private ContentSettings <.ctor>b__6_1();
}
public class Umbraco.Cms.Core.PropertyEditors.ImageCropperConfiguration : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Crop[] <Crops>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ConfigurationFieldAttribute("crops")]
public Crop[] Crops { get; public set; }
    [CompilerGeneratedAttribute]
public Crop[] get_Crops();
    [CompilerGeneratedAttribute]
public void set_Crops(Crop[] value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.ImageCropperConfigurationEditor : ConfigurationEditor`1<ImageCropperConfiguration> {
    public ImageCropperConfigurationEditor(IIOHelper ioHelper);
    public virtual IDictionary`2<string, object> ToValueEditor(IDictionary`2<string, object> configuration);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Core.PropertyEditors.ImageCropperConfigurationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ApplyConfiguration(ImageCropperValue imageCropperValue, ImageCropperConfiguration configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.ImageCropper")]
public class Umbraco.Cms.Core.PropertyEditors.ImageCropperPropertyEditor : DataEditor {
    private UploadAutoFillProperties _autoFillProperties;
    private IContentService _contentService;
    private IIOHelper _ioHelper;
    private ILogger`1<ImageCropperPropertyEditor> _logger;
    private MediaFileManager _mediaFileManager;
    private ContentSettings _contentSettings;
    private IJsonSerializer _jsonSerializer;
    [CompilerGeneratedAttribute]
private IPropertyIndexValueFactory <PropertyIndexValueFactory>k__BackingField;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public ImageCropperPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, ILoggerFactory loggerFactory, MediaFileManager mediaFileManager, IOptionsMonitor`1<ContentSettings> contentSettings, IIOHelper ioHelper, UploadAutoFillProperties uploadAutoFillProperties, IContentService contentService, IJsonSerializer jsonSerializer);
    [CompilerGeneratedAttribute]
public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    [NullableContextAttribute("2")]
public sealed virtual bool TryGetMediaPath(string propertyEditorAlias, object value, String& mediaPath);
    public sealed virtual void Handle(ContentCopiedNotification notification);
    public sealed virtual void Handle(ContentDeletedNotification notification);
    public sealed virtual void Handle(MediaDeletedNotification notification);
    public sealed virtual void Handle(MediaSavingNotification notification);
    public sealed virtual void Handle(MemberDeletedNotification notification);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    private static bool IsCropperField(IProperty property);
    private IEnumerable`1<string> ContainedFilePaths(IEnumerable`1<IContentBase> entities);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.ImageCropperPropertyEditor/<GetFilePathsFromPropertyValues>d__21")]
private IEnumerable`1<string> GetFilePathsFromPropertyValues(IProperty prop);
    [NullableContextAttribute("2")]
private string GetFileSrcFromPropertyValue(object propVal, bool relative);
    private void DeleteContainedFiles(IEnumerable`1<IContentBase> deletedEntities);
    private void AutoFillProperties(IContentBase model);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__7_0(ContentSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.PropertyEditors.ImageCropperPropertyValueEditor : DataValueEditor {
    private IDataTypeConfigurationCache _dataTypeConfigurationCache;
    private IFileStreamSecurityValidator _fileStreamSecurityValidator;
    private ILogger`1<ImageCropperPropertyValueEditor> _logger;
    private MediaFileManager _mediaFileManager;
    private IJsonSerializer _jsonSerializer;
    private ContentSettings _contentSettings;
    private ITemporaryFileService _temporaryFileService;
    private IScopeProvider _scopeProvider;
    public ImageCropperPropertyValueEditor(DataEditorAttribute attribute, ILogger`1<ImageCropperPropertyValueEditor> logger, MediaFileManager mediaFileSystem, ILocalizedTextService localizedTextService, IShortStringHelper shortStringHelper, IOptionsMonitor`1<ContentSettings> contentSettings, IJsonSerializer jsonSerializer, IIOHelper ioHelper, ITemporaryFileService temporaryFileService, IScopeProvider scopeProvider, IFileStreamSecurityValidator fileStreamSecurityValidator, IDataTypeConfigurationCache dataTypeConfigurationCache);
    [NullableContextAttribute("2")]
public virtual object ToEditor(IProperty property, string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object FromEditor(ContentPropertyData editorValue, object currentValue);
    public virtual string ConvertDbToString(IPropertyType propertyType, object value);
    [NullableContextAttribute("2")]
private ImageCropperValue ParseImageCropperValue(object editorValue);
    [NullableContextAttribute("2")]
private Nullable`1<Guid> TryParseTemporaryFileKey(object editorValue);
    [NullableContextAttribute("2")]
private TemporaryFileModel TryGetTemporaryFile(Guid temporaryFileKey);
    private string ProcessFile(TemporaryFileModel file, Guid contentKey, Guid propertyTypeKey);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__8_0(ContentSettings x);
    [CompilerGeneratedAttribute]
private ContentSettings <.ctor>b__8_1();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.ListView")]
public class Umbraco.Cms.Core.PropertyEditors.ListViewPropertyEditor : DataEditor {
    private IIOHelper _iioHelper;
    public ListViewPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper iioHelper);
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.MediaPicker3")]
public class Umbraco.Cms.Core.PropertyEditors.MediaPicker3PropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    [CompilerGeneratedAttribute]
private IPropertyIndexValueFactory <PropertyIndexValueFactory>k__BackingField;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public MediaPicker3PropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper);
    [CompilerGeneratedAttribute]
public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.MultiNodeTreePicker")]
public class Umbraco.Cms.Core.PropertyEditors.MultiNodeTreePickerPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    public MultiNodeTreePickerPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper);
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.MultipleTextStringConfigurationEditor : ConfigurationEditor`1<MultipleTextStringConfiguration> {
    public MultipleTextStringConfigurationEditor(IIOHelper ioHelper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.MultipleTextstring")]
public class Umbraco.Cms.Core.PropertyEditors.MultipleTextStringPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    public MultipleTextStringPropertyEditor(IIOHelper ioHelper, IDataValueEditorFactory dataValueEditorFactory);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.MultipleValueEditor : DataValueEditor {
    private IJsonSerializer _jsonSerializer;
    public MultipleValueEditor(ILocalizedTextService localizedTextService, IShortStringHelper shortStringHelper, IJsonSerializer jsonSerializer, IIOHelper ioHelper, DataEditorAttribute attribute);
    [NullableContextAttribute("2")]
public virtual object FromEditor(ContentPropertyData editorValue, object currentValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.MultiUrlPicker")]
public class Umbraco.Cms.Core.PropertyEditors.MultiUrlPickerPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    [CompilerGeneratedAttribute]
private IPropertyIndexValueFactory <PropertyIndexValueFactory>k__BackingField;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public MultiUrlPickerPropertyEditor(IIOHelper ioHelper, IDataValueEditorFactory dataValueEditorFactory);
    [CompilerGeneratedAttribute]
public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
    protected virtual IDataValueEditor CreateValueEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.MultiUrlPickerValueEditor : DataValueEditor {
    private ILogger`1<MultiUrlPickerValueEditor> _logger;
    private IPublishedUrlProvider _publishedUrlProvider;
    private IJsonSerializer _jsonSerializer;
    private IContentService _contentService;
    private IMediaService _mediaService;
    public MultiUrlPickerValueEditor(ILogger`1<MultiUrlPickerValueEditor> logger, ILocalizedTextService localizedTextService, IShortStringHelper shortStringHelper, DataEditorAttribute attribute, IPublishedUrlProvider publishedUrlProvider, IJsonSerializer jsonSerializer, IIOHelper ioHelper, IContentService contentService, IMediaService mediaService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.MultiUrlPickerValueEditor/<GetReferences>d__6")]
public sealed virtual IEnumerable`1<UmbracoEntityReference> GetReferences(object value);
    [NullableContextAttribute("2")]
public virtual object ToEditor(IProperty property, string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object FromEditor(ContentPropertyData editorValue, object currentValue);
    private static bool TypeIsExternal(LinkDisplay link);
    private static bool TypeIsUdiBased(LinkDisplay link);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Umbraco.Cms.Core.PropertyEditors.NestedPropertyIndexValueFactoryBase`2 : JsonPropertyIndexValueFactoryBase`1<TSerialized> {
    private PropertyEditorCollection _propertyEditorCollection;
    protected NestedPropertyIndexValueFactoryBase`2(PropertyEditorCollection propertyEditorCollection, IJsonSerializer jsonSerializer, IOptionsMonitor`1<IndexingSettings> indexingSettings);
    protected virtual IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> Handle(TSerialized deserializedPropertyValue, IProperty property, string culture, string segment, bool published, IEnumerable`1<string> availableCultures, IDictionary`2<Guid, IContentType> contentTypeDictionary);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.NestedPropertyIndexValueFactoryBase`2/<RenameKeysToEnsureRawSegmentsIsAPrefix>d__3")]
private IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> RenameKeysToEnsureRawSegmentsIsAPrefix(List`1<KeyValuePair`2<string, IEnumerable`1<object>>> indexContent);
    protected abstract virtual IContentType GetContentTypeOfNestedItem(TItem nestedItem, IDictionary`2<Guid, IContentType> contentTypeDictionary);
    protected abstract virtual IDictionary`2<string, object> GetRawProperty(TItem nestedItem);
    protected abstract virtual IEnumerable`1<TItem> GetDataItems(TSerialized input);
    [NullableContextAttribute("2")]
[IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.NestedPropertyIndexValueFactoryBase`2/<HandleResume>d__7")]
protected virtual IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> HandleResume(List`1<KeyValuePair`2<string, IEnumerable`1<object>>> indexedContent, IProperty property, string culture, string segment, bool published);
    private static string GetResumeFromAllContent(List`1<KeyValuePair`2<string, IEnumerable`1<object>>> indexedContent);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.NestedPropertyIndexValueFactoryBase`2/<GetNestedResults>d__9")]
private IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> GetNestedResults(string keyPrefix, string culture, string segment, bool published, IDictionary`2<string, IPropertyType> propertyTypeDictionary, TItem nestedContentRowValue, IEnumerable`1<string> availableCultures, IDictionary`2<Guid, IContentType> contentTypeDictionary);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.RadioButtonList")]
public class Umbraco.Cms.Core.PropertyEditors.RadioButtonsPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    public RadioButtonsPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.RichTextEditorBlockValidator : BlockEditorValidatorBase`2<RichTextBlockValue, RichTextBlockLayoutItem> {
    private BlockEditorValues`2<RichTextBlockValue, RichTextBlockLayoutItem> _blockEditorValues;
    private IJsonSerializer _jsonSerializer;
    private ILogger _logger;
    public RichTextEditorBlockValidator(IPropertyValidationService propertyValidationService, BlockEditorValues`2<RichTextBlockValue, RichTextBlockLayoutItem> blockEditorValues, IBlockEditorElementTypeCache elementTypeCache, IJsonSerializer jsonSerializer, ILogger logger);
    protected virtual IEnumerable`1<ElementTypeValidationModel> GetElementTypeValidation(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.RichTextEditorPastedImages : object {
    private static string TemporaryImageDataAttribute;
    private IPublishedUrlProvider _publishedUrlProvider;
    private IUmbracoContextAccessor _umbracoContextAccessor;
    private ITemporaryFileService _temporaryFileService;
    private IScopeProvider _scopeProvider;
    private IMediaImportService _mediaImportService;
    private IImageUrlGenerator _imageUrlGenerator;
    private IUserService _userService;
    [ObsoleteAttribute("Please use the non-obsolete constructor. Will be removed in V16.")]
public RichTextEditorPastedImages(IUmbracoContextAccessor umbracoContextAccessor, ILogger`1<RichTextEditorPastedImages> logger, IHostingEnvironment hostingEnvironment, IMediaService mediaService, IContentTypeBaseServiceProvider contentTypeBaseServiceProvider, MediaFileManager mediaFileManager, MediaUrlGeneratorCollection mediaUrlGenerators, IShortStringHelper shortStringHelper, IPublishedUrlProvider publishedUrlProvider);
    [ObsoleteAttribute("Please use the non-obsolete constructor. Will be removed in V16.")]
public RichTextEditorPastedImages(IUmbracoContextAccessor umbracoContextAccessor, ILogger`1<RichTextEditorPastedImages> logger, IHostingEnvironment hostingEnvironment, IMediaService mediaService, IContentTypeBaseServiceProvider contentTypeBaseServiceProvider, MediaFileManager mediaFileManager, MediaUrlGeneratorCollection mediaUrlGenerators, IShortStringHelper shortStringHelper, IPublishedUrlProvider publishedUrlProvider, ITemporaryFileService temporaryFileService, IScopeProvider scopeProvider, IMediaImportService mediaImportService, IImageUrlGenerator imageUrlGenerator, IOptions`1<ContentSettings> contentSettings);
    public RichTextEditorPastedImages(IUmbracoContextAccessor umbracoContextAccessor, IPublishedUrlProvider publishedUrlProvider, ITemporaryFileService temporaryFileService, IScopeProvider scopeProvider, IMediaImportService mediaImportService, IImageUrlGenerator imageUrlGenerator);
    [ObsoleteAttribute("Please use FindAndPersistPastedTempImagesAsync. Will be removed in V16.")]
public string FindAndPersistPastedTempImages(string html, Guid mediaParentFolder, int userId, IImageUrlGenerator imageUrlGenerator);
    [ObsoleteAttribute("Please use FindAndPersistPastedTempImagesAsync. Will be removed in V16.")]
public string FindAndPersistPastedTempImages(string html, Guid mediaParentFolder, int userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.RichTextEditorPastedImages/<FindAndPersistPastedTempImagesAsync>d__13")]
public Task`1<string> FindAndPersistPastedTempImagesAsync(string html, Guid mediaParentFolder, Guid userKey);
    private string MediaTypeAlias(string fileName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.RichText")]
public class Umbraco.Cms.Core.PropertyEditors.RichTextPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    private IRichTextPropertyIndexValueFactory _richTextPropertyIndexValueFactory;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public bool SupportsConfigurableElements { get; }
    public RichTextPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, IRichTextPropertyIndexValueFactory richTextPropertyIndexValueFactory);
    public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    public virtual bool get_SupportsConfigurableElements();
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Cms.Core.PropertyEditors.RichTextPropertyEditorHelper : object {
    public static bool TryParseRichTextEditorValue(object value, IJsonSerializer jsonSerializer, ILogger logger, RichTextEditorValue& richTextEditorValue);
    public static string SerializeRichTextEditorValue(RichTextEditorValue richTextEditorValue, IJsonSerializer jsonSerializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.RichTextPropertyIndexValueFactory : NestedPropertyIndexValueFactoryBase`2<RichTextEditorValue, BlockItemData> {
    private IJsonSerializer _jsonSerializer;
    private ILogger`1<RichTextPropertyIndexValueFactory> _logger;
    public RichTextPropertyIndexValueFactory(PropertyEditorCollection propertyEditorCollection, IJsonSerializer jsonSerializer, IOptionsMonitor`1<IndexingSettings> indexingSettings, ILogger`1<RichTextPropertyIndexValueFactory> logger);
    [ObsoleteAttribute("Use constructor that doesn't take IContentTypeService, scheduled for removal in V15")]
public RichTextPropertyIndexValueFactory(PropertyEditorCollection propertyEditorCollection, IJsonSerializer jsonSerializer, IOptionsMonitor`1<IndexingSettings> indexingSettings, IContentTypeService contentTypeService, ILogger`1<RichTextPropertyIndexValueFactory> logger);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.RichTextPropertyIndexValueFactory/<GetIndexValues>d__4")]
public sealed virtual IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> GetIndexValues(IProperty property, string culture, string segment, bool published, IEnumerable`1<string> availableCultures, IDictionary`2<Guid, IContentType> contentTypeDictionary);
    protected virtual IContentType GetContentTypeOfNestedItem(BlockItemData nestedItem, IDictionary`2<Guid, IContentType> contentTypeDictionary);
    protected virtual IDictionary`2<string, object> GetRawProperty(BlockItemData blockItemData);
    protected virtual IEnumerable`1<BlockItemData> GetDataItems(RichTextEditorValue input);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private IEnumerable`1<KeyValuePair`2<string, IEnumerable`1<object>>> <>n__0(IProperty property, string culture, string segment, bool published, IEnumerable`1<string> availableCultures, IDictionary`2<Guid, IContentType> contentTypeDictionary);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.Slider")]
public class Umbraco.Cms.Core.PropertyEditors.SliderPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    public SliderPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TagsPropertyEditorAttribute]
[DataEditorAttribute("Umbraco.Tags")]
public class Umbraco.Cms.Core.PropertyEditors.TagsPropertyEditor : DataEditor {
    private ITagPropertyIndexValueFactory _tagPropertyIndexValueFactory;
    private IIOHelper _ioHelper;
    public IPropertyIndexValueFactory PropertyIndexValueFactory { get; }
    public TagsPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper, ITagPropertyIndexValueFactory tagPropertyIndexValueFactory);
    public virtual IPropertyIndexValueFactory get_PropertyIndexValueFactory();
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
internal class Umbraco.Cms.Core.PropertyEditors.TemporaryFileUploadValidator : object {
    [NullableAttribute("1")]
private GetContentSettings _getContentSettings;
    [NullableAttribute("1")]
private ParseTemporaryFileKey _parseTemporaryFileKey;
    [NullableAttribute("1")]
private GetTemporaryFileModel _getTemporaryFileModel;
    [NullableAttribute("2")]
private ValidateFileType _validateFileType;
    [NullableContextAttribute("1")]
public TemporaryFileUploadValidator(GetContentSettings getContentSettings, ParseTemporaryFileKey parseTemporaryFileKey, GetTemporaryFileModel getTemporaryFileModel, ValidateFileType validateFileType);
    [NullableContextAttribute("2")]
[IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.TemporaryFileUploadValidator/<Validate>d__9")]
public sealed virtual IEnumerable`1<ValidationResult> Validate(object value, string valueType, object dataTypeConfiguration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.TextArea")]
public class Umbraco.Cms.Core.PropertyEditors.TextAreaPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    public TextAreaPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.TextBox")]
public class Umbraco.Cms.Core.PropertyEditors.TextboxPropertyEditor : DataEditor {
    private IIOHelper _ioHelper;
    public TextboxPropertyEditor(IDataValueEditorFactory dataValueEditorFactory, IIOHelper ioHelper);
    protected virtual IDataValueEditor CreateValueEditor();
    protected virtual IConfigurationEditor CreateConfigurationEditor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataEditorAttribute("Umbraco.TrueFalse")]
public class Umbraco.Cms.Core.PropertyEditors.TrueFalsePropertyEditor : DataEditor {
    public TrueFalsePropertyEditor(IDataValueEditorFactory dataValueEditorFactory);
    protected virtual IDataValueEditor CreateValueEditor();
}
internal interface Umbraco.Cms.Core.PropertyEditors.Validators.IRichTextRequiredValidator {
}
internal class Umbraco.Cms.Core.PropertyEditors.Validators.RichTextRequiredValidator : RequiredValidator {
    [NullableAttribute("1")]
private IJsonSerializer _jsonSerializer;
    [NullableAttribute("1")]
private ILogger`1<RichTextRequiredValidator> _logger;
    [NullableContextAttribute("1")]
public RichTextRequiredValidator(ILocalizedTextService textService, IJsonSerializer jsonSerializer, ILogger`1<RichTextRequiredValidator> logger);
    [NullableContextAttribute("2")]
public virtual IEnumerable`1<ValidationResult> ValidateRequired(object value, string valueType);
    [NullableContextAttribute("2")]
private object GetValue(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockEditorConverter : object {
    private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    public BlockEditorConverter(IPublishedSnapshotAccessor publishedSnapshotAccessor, IPublishedModelFactory publishedModelFactory);
    public IPublishedElement ConvertToElement(BlockItemData data, PropertyCacheLevel referenceCacheLevel, bool preview);
    public Type GetModelType(Guid contentTypeKey);
}
public abstract class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockEditorPropertyValueConstructorCacheBase`1 : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ValueTuple`2<Guid, Nullable`1<Guid>>, Func`5<Udi, IPublishedElement, Udi, IPublishedElement, T>> _constructorCache;
    public bool TryGetValue(ValueTuple`2<Guid, Nullable`1<Guid>> key, Func`5& value);
    public void SetValue(ValueTuple`2<Guid, Nullable`1<Guid>> key, Func`5<Udi, IPublishedElement, Udi, IPublishedElement, T> value);
    public void Clear();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockGridPropertyValueConstructorCache : BlockEditorPropertyValueConstructorCacheBase`1<BlockGridItem> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockGridPropertyValueConverter : PropertyValueConverterBase {
    private IProfilingLogger _proflog;
    private BlockEditorConverter _blockConverter;
    private IJsonSerializer _jsonSerializer;
    private IApiElementBuilder _apiElementBuilder;
    private BlockGridPropertyValueConstructorCache _constructorCache;
    [ObsoleteAttribute("Please use non-obsolete construtor. This will be removed in Umbraco 15.")]
public BlockGridPropertyValueConverter(IProfilingLogger proflog, BlockEditorConverter blockConverter, IJsonSerializer jsonSerializer, IApiElementBuilder apiElementBuilder);
    public BlockGridPropertyValueConverter(IProfilingLogger proflog, BlockEditorConverter blockConverter, IJsonSerializer jsonSerializer, IApiElementBuilder apiElementBuilder, BlockGridPropertyValueConstructorCache constructorCache);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevelForExpansion(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
    [NullableContextAttribute("2")]
private BlockGridModel ConvertIntermediateToBlockGridModel(IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockGridPropertyValueCreator : BlockPropertyValueCreatorBase`5<BlockGridModel, BlockGridItem, BlockGridLayoutItem, BlockGridBlockConfiguration, BlockGridValue> {
    private IJsonSerializer _jsonSerializer;
    private BlockGridPropertyValueConstructorCache _constructorCache;
    public BlockGridPropertyValueCreator(BlockEditorConverter blockEditorConverter, IJsonSerializer jsonSerializer, BlockGridPropertyValueConstructorCache constructorCache);
    public BlockGridModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, string intermediateBlockModelValue, bool preview, BlockGridBlockConfiguration[] blockConfigurations, Nullable`1<int> gridColumns);
    protected virtual BlockEditorDataConverter`2<BlockGridValue, BlockGridLayoutItem> CreateBlockEditorDataConverter();
    protected virtual BlockItemActivator`1<BlockGridModel, BlockGridItem, BlockGridLayoutItem, BlockGridBlockConfiguration, BlockGridValue, BlockGridItem> CreateBlockItemActivator();
    [CompilerGeneratedAttribute]
internal static BlockGridModel <CreateBlockModel>g__CreateEmptyModel|3_0();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockListPropertyValueConstructorCache : BlockEditorPropertyValueConstructorCacheBase`1<BlockListItem> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockListPropertyValueConverter : PropertyValueConverterBase {
    private IContentTypeService _contentTypeService;
    private IProfilingLogger _proflog;
    private BlockEditorConverter _blockConverter;
    private IApiElementBuilder _apiElementBuilder;
    private IJsonSerializer _jsonSerializer;
    private BlockListPropertyValueConstructorCache _constructorCache;
    [ObsoleteAttribute("Use the constructor that takes all parameters, scheduled for removal in V15")]
public BlockListPropertyValueConverter(IProfilingLogger proflog, BlockEditorConverter blockConverter, IContentTypeService contentTypeService, IApiElementBuilder apiElementBuilder);
    [ObsoleteAttribute("Use the constructor that takes all parameters, scheduled for removal in V15")]
public BlockListPropertyValueConverter(IProfilingLogger proflog, BlockEditorConverter blockConverter, IContentTypeService contentTypeService, IApiElementBuilder apiElementBuilder, BlockListPropertyValueConstructorCache constructorCache);
    public BlockListPropertyValueConverter(IProfilingLogger proflog, BlockEditorConverter blockConverter, IContentTypeService contentTypeService, IApiElementBuilder apiElementBuilder, IJsonSerializer jsonSerializer, BlockListPropertyValueConstructorCache constructorCache);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    private bool IsSingleBlockMode(PublishedDataType dataType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevelForExpansion(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
    private BlockListModel ConvertIntermediateToBlockListModel(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ApiBlockItem <ConvertIntermediateToDeliveryApiObject>b__18_0(BlockListItem item);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockListPropertyValueCreator : BlockPropertyValueCreatorBase`5<BlockListModel, BlockListItem, BlockListLayoutItem, BlockConfiguration, BlockListValue> {
    private IJsonSerializer _jsonSerializer;
    private BlockListPropertyValueConstructorCache _constructorCache;
    public BlockListPropertyValueCreator(BlockEditorConverter blockEditorConverter, IJsonSerializer jsonSerializer, BlockListPropertyValueConstructorCache constructorCache);
    public BlockListModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, string intermediateBlockModelValue, bool preview, BlockConfiguration[] blockConfigurations);
    protected virtual BlockEditorDataConverter`2<BlockListValue, BlockListLayoutItem> CreateBlockEditorDataConverter();
    protected virtual BlockItemActivator`1<BlockListModel, BlockListItem, BlockListLayoutItem, BlockConfiguration, BlockListValue, BlockListItem> CreateBlockItemActivator();
    [CompilerGeneratedAttribute]
internal static BlockListModel <CreateBlockModel>g__CreateEmptyModel|3_0();
    [CompilerGeneratedAttribute]
internal static BlockListModel <CreateBlockModel>g__CreateModel|3_1(IList`1<BlockListItem> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Please use implementations of BlockPropertyValueCreatorBase instead of this. See BlockListPropertyValueConverter for inspiration.. Will be removed in V15.")]
public abstract class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockPropertyValueConverterBase`5 : PropertyValueConverterBase {
    [CompilerGeneratedAttribute]
private BlockEditorConverter <BlockEditorConverter>k__BackingField;
    protected BlockEditorConverter BlockEditorConverter { get; }
    protected BlockPropertyValueConverterBase`5(BlockEditorConverter blockBlockEditorConverter);
    protected abstract virtual BlockEditorDataConverter`2<TBlockValue, TBlockLayoutItem> CreateBlockEditorDataConverter();
    protected abstract virtual BlockItemActivator`1<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue, TBlockItemModel> CreateBlockItemActivator();
    [CompilerGeneratedAttribute]
protected BlockEditorConverter get_BlockEditorConverter();
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    protected TBlockModel UnwrapBlockModel(PropertyCacheLevel referenceCacheLevel, object inter, bool preview, IEnumerable`1<TBlockConfiguration> blockConfigurations, CreateEmptyBlockModel<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createEmptyModel, CreateBlockModel<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createModel, EnrichBlockItemModelFromConfiguration<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> enrichBlockItem);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Core.PropertyEditors.ValueConverters.BlockPropertyValueCreatorBase`5 : object {
    [CompilerGeneratedAttribute]
private BlockEditorConverter <BlockEditorConverter>k__BackingField;
    protected BlockEditorConverter BlockEditorConverter { get; }
    protected BlockPropertyValueCreatorBase`5(BlockEditorConverter blockEditorConverter);
    protected abstract virtual BlockEditorDataConverter`2<TBlockValue, TBlockLayoutItem> CreateBlockEditorDataConverter();
    protected abstract virtual BlockItemActivator`1<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue, TBlockItemModel> CreateBlockItemActivator();
    [CompilerGeneratedAttribute]
protected BlockEditorConverter get_BlockEditorConverter();
    protected TBlockModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, string intermediateBlockModelValue, bool preview, IEnumerable`1<TBlockConfiguration> blockConfigurations, CreateEmptyBlockModel<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createEmptyModel, CreateBlockModelFromItems<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createModelFromItems, EnrichBlockItemModelFromConfiguration<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> enrichBlockItem);
    protected TBlockModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, TBlockValue blockValue, bool preview, IEnumerable`1<TBlockConfiguration> blockConfigurations, CreateEmptyBlockModel<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createEmptyModel, CreateBlockModelFromItems<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createModelFromItems, EnrichBlockItemModelFromConfiguration<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> enrichBlockItem);
    private TBlockModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, BlockEditorData`2<TBlockValue, TBlockLayoutItem> converted, bool preview, IEnumerable`1<TBlockConfiguration> blockConfigurations, CreateEmptyBlockModel<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createEmptyModel, CreateBlockModelFromItems<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> createModelFromItems, EnrichBlockItemModelFromConfiguration<TBlockModel, TBlockItemModel, TBlockLayoutItem, TBlockConfiguration, TBlockValue> enrichBlockItem);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.ConstructorCacheClearNotificationHandler : object {
    private BlockListPropertyValueConstructorCache _blockListPropertyValueConstructorCache;
    private BlockGridPropertyValueConstructorCache _blockGridPropertyValueConstructorCache;
    private RichTextBlockPropertyValueConstructorCache _richTextBlockPropertyValueConstructorCache;
    public ConstructorCacheClearNotificationHandler(BlockListPropertyValueConstructorCache blockListPropertyValueConstructorCache, BlockGridPropertyValueConstructorCache blockGridPropertyValueConstructorCache, RichTextBlockPropertyValueConstructorCache richTextBlockPropertyValueConstructorCache);
    public sealed virtual void Handle(ContentTypeCacheRefresherNotification notification);
    public sealed virtual void Handle(DataTypeCacheRefresherNotification notification);
    private void ClearCaches();
}
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.FileUploadValue : TemporaryFileUploadValueBase {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.ImageCropperValue : TemporaryFileUploadValueBase {
    [CompilerGeneratedAttribute]
private ImageCropperFocalPoint <FocalPoint>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<ImageCropperCrop> <Crops>k__BackingField;
    public ImageCropperFocalPoint FocalPoint { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<ImageCropperCrop> Crops { get; public set; }
    [NullableAttribute("1")]
private IEnumerable`1<ImageCropperCrop> ComparableCrops { get; }
    [CompilerGeneratedAttribute]
public ImageCropperFocalPoint get_FocalPoint();
    [CompilerGeneratedAttribute]
public void set_FocalPoint(ImageCropperFocalPoint value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ImageCropperCrop> get_Crops();
    [CompilerGeneratedAttribute]
public void set_Crops(IEnumerable`1<ImageCropperCrop> value);
    public sealed virtual string ToHtmlString();
    public virtual string ToString();
    public ImageCropperCrop GetCrop(string alias);
    public ImageUrlGenerationOptions GetCropBaseOptions(string url, ImageCropperCrop crop, bool preferFocalPoint);
    [NullableContextAttribute("1")]
public string GetCropUrl(string alias, IImageUrlGenerator imageUrlGenerator, bool useCropDimensions, bool useFocalPoint, string cacheBusterValue);
    public string GetCropUrl(int width, int height, IImageUrlGenerator imageUrlGenerator, string cacheBusterValue);
    public bool HasFocalPoint();
    public bool HasCrops();
    [NullableContextAttribute("1")]
public bool HasCrop(string alias);
    public bool HasImage();
    [NullableContextAttribute("1")]
public ImageCropperValue Merge(ImageCropperValue imageCropperValue);
    internal void Prune();
    public sealed virtual bool Equals(ImageCropperValue other);
    public virtual bool Equals(object obj);
    private static bool Equals(ImageCropperValue left, ImageCropperValue right);
    [NullableContextAttribute("1")]
private IEnumerable`1<ImageCropperCrop> get_ComparableCrops();
    public static bool op_Equality(ImageCropperValue left, ImageCropperValue right);
    public static bool op_Inequality(ImageCropperValue left, ImageCropperValue right);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.ImageCropperValueConverter : PropertyValueConverterBase {
    private IJsonSerializer _jsonSerializer;
    private ILogger`1<ImageCropperValueConverter> _logger;
    public ImageCropperValueConverter(ILogger`1<ImageCropperValueConverter> logger, IJsonSerializer jsonSerializer);
    [ObsoleteAttribute("Use the constructor specifying all dependencies, scheduled for removal in V16")]
public ImageCropperValueConverter(ILogger`1<ImageCropperValueConverter> logger);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.JsonValueConverter : PropertyValueConverterBase {
    private ILogger`1<JsonValueConverter> _logger;
    private PropertyEditorCollection _propertyEditors;
    private String[] _excludedPropertyEditors;
    public JsonValueConverter(PropertyEditorCollection propertyEditors, ILogger`1<JsonValueConverter> logger);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.MarkdownEditorValueConverter : PropertyValueConverterBase {
    private HtmlLocalLinkParser _localLinkParser;
    private HtmlUrlParser _urlParser;
    public MarkdownEditorValueConverter(HtmlLocalLinkParser localLinkParser, HtmlUrlParser urlParser);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.MediaPickerWithCropsValueConverter : PropertyValueConverterBase {
    private IJsonSerializer _jsonSerializer;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IPublishedUrlProvider _publishedUrlProvider;
    private IPublishedValueFallback _publishedValueFallback;
    private IApiMediaWithCropsBuilder _apiMediaWithCropsBuilder;
    public MediaPickerWithCropsValueConverter(IPublishedSnapshotAccessor publishedSnapshotAccessor, IPublishedUrlProvider publishedUrlProvider, IPublishedValueFallback publishedValueFallback, IJsonSerializer jsonSerializer, IApiMediaWithCropsBuilder apiMediaWithCropsBuilder);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    [NullableContextAttribute("2")]
public virtual Nullable`1<bool> IsValue(object value, PropertyValueLevel level);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevelForExpansion(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
    private bool IsMultipleDataType(PublishedDataType dataType);
    [CompilerGeneratedAttribute]
private IApiMediaWithCrops <ConvertIntermediateToDeliveryApiObject>g__ToApiMedia|14_0(MediaWithCrops media);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.MultiUrlPickerValueConverter : PropertyValueConverterBase {
    private IJsonSerializer _jsonSerializer;
    private IProfilingLogger _proflog;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IPublishedUrlProvider _publishedUrlProvider;
    private IApiContentNameProvider _apiContentNameProvider;
    private IApiMediaUrlProvider _apiMediaUrlProvider;
    private IApiContentRouteBuilder _apiContentRouteBuilder;
    public MultiUrlPickerValueConverter(IPublishedSnapshotAccessor publishedSnapshotAccessor, IProfilingLogger proflog, IJsonSerializer jsonSerializer, IUmbracoContextAccessor umbracoContextAccessor, IPublishedUrlProvider publishedUrlProvider, IApiContentNameProvider apiContentNameProvider, IApiMediaUrlProvider apiMediaUrlProvider, IApiContentRouteBuilder apiContentRouteBuilder);
    public virtual bool IsConverter(IPublishedPropertyType propertyType);
    public virtual Type GetPropertyValueType(IPublishedPropertyType propertyType);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    [NullableContextAttribute("2")]
public virtual Nullable`1<bool> IsValue(object value, PropertyValueLevel level);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
    private static bool IsSingleUrlPicker(IPublishedPropertyType propertyType);
    private IEnumerable`1<LinkDto> ParseLinkDtos(string inter);
    [CompilerGeneratedAttribute]
internal static IEnumerable`1<ApiLink> <ConvertIntermediateToDeliveryApiObject>g__DefaultValue|16_0();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.RichTextBlockPropertyValueConstructorCache : BlockEditorPropertyValueConstructorCacheBase`1<RichTextBlockItem> {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Core.PropertyEditors.ValueConverters.RichTextBlockPropertyValueCreator : BlockPropertyValueCreatorBase`5<RichTextBlockModel, RichTextBlockItem, RichTextBlockLayoutItem, RichTextBlockConfiguration, RichTextBlockValue> {
    private IJsonSerializer _jsonSerializer;
    private RichTextBlockPropertyValueConstructorCache _constructorCache;
    public RichTextBlockPropertyValueCreator(BlockEditorConverter blockEditorConverter, IJsonSerializer jsonSerializer, RichTextBlockPropertyValueConstructorCache constructorCache);
    public RichTextBlockModel CreateBlockModel(PropertyCacheLevel referenceCacheLevel, RichTextBlockValue blockValue, bool preview, RichTextBlockConfiguration[] blockConfigurations);
    protected virtual BlockEditorDataConverter`2<RichTextBlockValue, RichTextBlockLayoutItem> CreateBlockEditorDataConverter();
    protected virtual BlockItemActivator`1<RichTextBlockModel, RichTextBlockItem, RichTextBlockLayoutItem, RichTextBlockConfiguration, RichTextBlockValue, RichTextBlockItem> CreateBlockItemActivator();
    [CompilerGeneratedAttribute]
internal static RichTextBlockModel <CreateBlockModel>g__CreateEmptyModel|3_0();
    [CompilerGeneratedAttribute]
internal static RichTextBlockModel <CreateBlockModel>g__CreateModel|3_1(IList`1<RichTextBlockItem> items);
}
internal static class Umbraco.Cms.Core.PropertyEditors.ValueConverters.RichTextParsingRegexes : object {
    [NullableContextAttribute("1")]
[GeneratedRegexAttribute("<umb-rte-block(?:-inline)?(?: class="(.[^"]*)")? data-content-udi="(?<udi>.[^"]*)"><!--Umbraco-Block--><\/umb-rte-block(?:-inline)?>")]
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
public static Regex BlockRegex();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultPropertyValueConverterAttribute]
public class Umbraco.Cms.Core.PropertyEditors.ValueConverters.RteBlockRenderingValueConverter : SimpleTinyMceValueConverter {
    private HtmlImageSourceParser _imageSourceParser;
    private HtmlLocalLinkParser _linkParser;
    private HtmlUrlParser _urlParser;
    private IApiRichTextElementParser _apiRichTextElementParser;
    private IApiRichTextMarkupParser _apiRichTextMarkupParser;
    private IPartialViewBlockEngine _partialViewBlockEngine;
    private BlockEditorConverter _blockEditorConverter;
    private IJsonSerializer _jsonSerializer;
    private ILogger`1<RteBlockRenderingValueConverter> _logger;
    private IApiElementBuilder _apiElementBuilder;
    private RichTextBlockPropertyValueConstructorCache _constructorCache;
    private DeliveryApiSettings _deliveryApiSettings;
    public RteBlockRenderingValueConverter(HtmlLocalLinkParser linkParser, HtmlUrlParser urlParser, HtmlImageSourceParser imageSourceParser, IApiRichTextElementParser apiRichTextElementParser, IApiRichTextMarkupParser apiRichTextMarkupParser, IPartialViewBlockEngine partialViewBlockEngine, BlockEditorConverter blockEditorConverter, IJsonSerializer jsonSerializer, IApiElementBuilder apiElementBuilder, RichTextBlockPropertyValueConstructorCache constructorCache, ILogger`1<RteBlockRenderingValueConverter> logger, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettingsMonitor);
    public virtual PropertyCacheLevel GetPropertyCacheLevel(IPublishedPropertyType propertyType);
    public virtual object ConvertSourceToIntermediate(IPublishedElement owner, IPublishedPropertyType propertyType, object source, bool preview);
    public virtual object ConvertIntermediateToObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevel(IPublishedPropertyType propertyType);
    public sealed virtual PropertyCacheLevel GetDeliveryApiPropertyCacheLevelForExpansion(IPublishedPropertyType propertyType);
    public sealed virtual Type GetDeliveryApiPropertyValueType(IPublishedPropertyType propertyType);
    public sealed virtual object ConvertIntermediateToDeliveryApiObject(IPublishedElement owner, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, object inter, bool preview, bool expanding);
    [NullableContextAttribute("2")]
private string Convert(object source, bool preview);
    private RichTextBlockModel ParseRichTextBlockModel(RichTextBlockValue blocks, IPublishedPropertyType propertyType, PropertyCacheLevel referenceCacheLevel, bool preview);
    private string RenderRichTextBlockModel(string source, RichTextBlockModel richTextBlockModel);
    private RichTextModel CreateRichTextModel(IRichTextEditorIntermediateValue richTextEditorIntermediateValue);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__12_0(DeliveryApiSettings settings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ApiBlockItem <CreateRichTextModel>b__23_0(RichTextBlockItem item);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.PropertyEditors.ValueConverters.TemporaryFileUploadValueBase : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TemporaryFileId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Src>k__BackingField;
    [JsonIgnoreAttribute]
public Nullable`1<Guid> TemporaryFileId { get; public set; }
    public string Src { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TemporaryFileId();
    [CompilerGeneratedAttribute]
public void set_TemporaryFileId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Src();
    [CompilerGeneratedAttribute]
public void set_Src(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.PropertyEditors.ValueListConfigurationEditor : ConfigurationEditor`1<ValueListConfiguration> {
    public ValueListConfigurationEditor(IIOHelper ioHelper, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
}
public class Umbraco.Cms.Core.PropertyEditors.ValueListUniqueValueValidator : object {
    [NullableAttribute("1")]
private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    [NullableContextAttribute("1")]
public ValueListUniqueValueValidator(IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    [NullableContextAttribute("2")]
[IteratorStateMachineAttribute("Umbraco.Cms.Core.PropertyEditors.ValueListUniqueValueValidator/<Validate>d__2")]
public sealed virtual IEnumerable`1<ValidationResult> Validate(object value, string valueType, object dataTypeConfiguration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PublishedCache.PublishedContentTypeCache : object {
    [NullableAttribute("2")]
private IContentTypeService _contentTypeService;
    private Dictionary`2<Guid, int> _keyToIdMap;
    private ReaderWriterLockSlim _lock;
    private ILogger`1<PublishedContentTypeCache> _logger;
    [NullableAttribute("2")]
private IMediaTypeService _mediaTypeService;
    [NullableAttribute("2")]
private IMemberTypeService _memberTypeService;
    private IPublishedContentTypeFactory _publishedContentTypeFactory;
    private Dictionary`2<string, IPublishedContentType> _typesByAlias;
    private Dictionary`2<int, IPublishedContentType> _typesById;
    private bool _disposedValue;
    [NullableContextAttribute("2")]
public PublishedContentTypeCache(IContentTypeService contentTypeService, IMediaTypeService mediaTypeService, IMemberTypeService memberTypeService, IPublishedContentTypeFactory publishedContentTypeFactory, ILogger`1<PublishedContentTypeCache> logger);
    internal PublishedContentTypeCache(ILogger`1<PublishedContentTypeCache> logger, IPublishedContentTypeFactory publishedContentTypeFactory);
    public sealed virtual void Dispose();
    public void ClearAll();
    public void ClearContentType(int id);
    public void ClearDataType(int id);
    public IPublishedContentType Get(PublishedItemType itemType, Guid key);
    public IPublishedContentType Get(PublishedItemType itemType, string alias);
    public IPublishedContentType Get(PublishedItemType itemType, int id);
    protected virtual void Dispose(bool disposing);
    private static string GetAliasKey(PublishedItemType itemType, string alias);
    private IPublishedContentType CreatePublishedContentType(PublishedItemType itemType, Guid key);
    private IPublishedContentType CreatePublishedContentType(PublishedItemType itemType, string alias);
    private IPublishedContentType CreatePublishedContentType(PublishedItemType itemType, int id);
    private static string GetAliasKey(IPublishedContentType contentType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.PublishedContentQueryAccessor : object {
    private IScopedServiceProvider _scopedServiceProvider;
    [ObsoleteAttribute("Please use alternative constructor")]
public PublishedContentQueryAccessor(IServiceProvider serviceProvider);
    public PublishedContentQueryAccessor(IScopedServiceProvider scopedServiceProvider);
    public sealed virtual bool TryGetValue(IPublishedContentQuery& publishedContentQuery);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[DataContractAttribute]
public class Umbraco.Cms.Core.RichTextEditorValue : object {
    [CompilerGeneratedAttribute]
private string <Markup>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RichTextBlockValue <Blocks>k__BackingField;
    [RequiredMemberAttribute]
[DataMemberAttribute]
public string Markup { get; public set; }
    [NullableAttribute("2")]
[RequiredMemberAttribute]
[DataMemberAttribute]
public RichTextBlockValue Blocks { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Markup();
    [CompilerGeneratedAttribute]
public void set_Markup(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public RichTextBlockValue get_Blocks();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Blocks(RichTextBlockValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Routing.ContentFinderByConfigured404 : object {
    private IEntityService _entityService;
    private IExamineManager _examineManager;
    private ILogger`1<ContentFinderByConfigured404> _logger;
    private IUmbracoContextAccessor _umbracoContextAccessor;
    private IVariationContextAccessor _variationContextAccessor;
    private ContentSettings _contentSettings;
    public ContentFinderByConfigured404(ILogger`1<ContentFinderByConfigured404> logger, IEntityService entityService, IOptionsMonitor`1<ContentSettings> contentSettings, IExamineManager examineManager, IVariationContextAccessor variationContextAccessor, IUmbracoContextAccessor umbracoContextAccessor);
    public sealed virtual Task`1<bool> TryFindContent(IPublishedRequestBuilder frequest);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__6_0(ContentSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Routing.NotFoundHandlerHelper : object {
    internal static Nullable`1<int> GetCurrentNotFoundPageId(ContentErrorPage[] error404Collection, IEntityService entityService, IPublishedContentQuery publishedContentQuery, string errorCulture, Nullable`1<int> domainContentId);
    internal static Nullable`1<int> GetContentIdFromErrorPageConfig(ContentErrorPage errorPage, IEntityService entityService, IPublishedContentQuery publishedContentQuery, Nullable`1<int> domainContentId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Routing.RedirectTrackingHandler : object {
    private static string NotificationStateKey;
    private IOptionsMonitor`1<WebRoutingSettings> _webRoutingSettings;
    private IRedirectTracker _redirectTracker;
    public RedirectTrackingHandler(IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings, IRedirectTracker redirectTracker);
    public sealed virtual void Handle(ContentMovedNotification notification);
    public sealed virtual void Handle(ContentMovingNotification notification);
    public sealed virtual void Handle(ContentPublishedNotification notification);
    public sealed virtual void Handle(ContentPublishingNotification notification);
    private void StoreOldRoutes(IEnumerable`1<IContent> entities, IStatefulNotification notification);
    private void CreateRedirectsForOldRoutes(IStatefulNotification notification);
    private Dictionary`2<ValueTuple`2<int, string>, ValueTuple`2<Guid, string>> GetOldRoutes(IStatefulNotification notification);
}
internal class Umbraco.Cms.Core.Scoping.HttpScopeReference : object {
    [NullableAttribute("1")]
private ScopeProvider _scopeProvider;
    private bool _disposedValue;
    private bool _registered;
    [NullableContextAttribute("1")]
public HttpScopeReference(ScopeProvider scopeProvider);
    public sealed virtual void Dispose();
    public sealed virtual void Register();
    protected virtual void Dispose(bool disposing);
}
public interface Umbraco.Cms.Core.Scoping.IHttpScopeReference {
    public abstract virtual void Register();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("Please use Umbraco.Cms.Infrastructure.Scoping.IScope or Umbraco.Cms.Core.Scoping.ICoreScope instead.")]
public interface Umbraco.Cms.Core.Scoping.IScope {
    public IUmbracoDatabase Database { get; }
    public ISqlContext SqlContext { get; }
    public EventMessages Messages { get; }
    public IEventDispatcher Events { get; }
    public IScopedNotificationPublisher Notifications { get; }
    public RepositoryCacheMode RepositoryCacheMode { get; }
    public IsolatedCaches IsolatedCaches { get; }
    public abstract virtual IUmbracoDatabase get_Database();
    public abstract virtual ISqlContext get_SqlContext();
    public abstract virtual EventMessages get_Messages();
    public abstract virtual IEventDispatcher get_Events();
    public abstract virtual IScopedNotificationPublisher get_Notifications();
    public abstract virtual RepositoryCacheMode get_RepositoryCacheMode();
    public abstract virtual IsolatedCaches get_IsolatedCaches();
    public abstract virtual bool Complete();
    public abstract virtual void ReadLock(Int32[] lockIds);
    public abstract virtual void WriteLock(Int32[] lockIds);
    public abstract virtual void WriteLock(TimeSpan timeout, int lockId);
    public abstract virtual void ReadLock(TimeSpan timeout, int lockId);
    public abstract virtual void EagerWriteLock(Int32[] lockIds);
    public abstract virtual void EagerWriteLock(TimeSpan timeout, int lockId);
    public abstract virtual void EagerReadLock(TimeSpan timeout, int lockId);
    public abstract virtual void EagerReadLock(Int32[] lockIds);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("Please use Umbraco.Cms.Infrastructure.Scoping.IScopeProvider or Umbraco.Cms.Core.Scoping.ICoreScopeProvider instead.")]
public interface Umbraco.Cms.Core.Scoping.IScopeProvider {
    [NullableAttribute("2")]
public IScopeContext Context { get; }
    public ISqlContext SqlContext { get; }
    [NullableContextAttribute("2")]
public abstract virtual IScope CreateScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("2")]
public abstract virtual IScope CreateDetachedScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems);
    public abstract virtual void AttachScope(IScope scope, bool callContext);
    public abstract virtual IScope DetachScope();
    [NullableContextAttribute("2")]
public abstract virtual IScopeContext get_Context();
    public abstract virtual ISqlContext get_SqlContext();
}
public class Umbraco.Cms.Core.Scoping.ScopeContext : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, IEnlistedObject> _enlisted;
    [CompilerGeneratedAttribute]
private Guid <InstanceId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CreatedThreadId>k__BackingField;
    public Guid InstanceId { get; }
    [NullableAttribute("1")]
private IDictionary`2<string, IEnlistedObject> Enlisted { get; }
    public int CreatedThreadId { get; }
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_InstanceId();
    [NullableContextAttribute("1")]
private IDictionary`2<string, IEnlistedObject> get_Enlisted();
    public sealed virtual void ScopeExit(bool completed);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CreatedThreadId();
    [NullableContextAttribute("1")]
public sealed virtual void Enlist(string key, Action`1<bool> action, int priority);
    [NullableContextAttribute("2")]
public sealed virtual T Enlist(string key, Func`1<T> creator, Action`2<bool, T> action, int priority);
    [NullableContextAttribute("2")]
public sealed virtual T GetEnlisted(string key);
}
public abstract class Umbraco.Cms.Core.Scoping.ScopeContextualBase : object {
    private bool _scoped;
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Please use the Get method that accepts an Umbraco.Cms.Core.Scoping.ICoreScopeProvider instead.")]
public static T Get(IScopeProvider scopeProvider, string key, Func`2<bool, T> ctor);
    [NullableContextAttribute("1")]
public static T Get(ICoreScopeProvider scopeProvider, string key, Func`2<bool, T> ctor);
    public sealed virtual void Dispose();
    public abstract virtual void Release(bool completed);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.BackOfficeClaimsPrincipalFactory : UserClaimsPrincipalFactory`1<BackOfficeIdentityUser> {
    private IOptions`1<BackOfficeAuthenticationTypeSettings> _backOfficeAuthenticationTypeSettings;
    protected string AuthenticationType { get; }
    public BackOfficeClaimsPrincipalFactory(UserManager`1<BackOfficeIdentityUser> userManager, IOptions`1<BackOfficeIdentityOptions> optionsAccessor, IOptions`1<BackOfficeAuthenticationTypeSettings> backOfficeAuthenticationTypeSettings);
    protected virtual string get_AuthenticationType();
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeClaimsPrincipalFactory/<GenerateClaimsAsync>d__4")]
protected virtual Task`1<ClaimsIdentity> GenerateClaimsAsync(BackOfficeIdentityUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<ClaimsIdentity> <>n__0(BackOfficeIdentityUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.BackOfficeErrorDescriber : UmbracoErrorDescriberBase {
    private ILocalizedTextService _textService;
    public BackOfficeErrorDescriber(ILocalizedTextService textService);
    public virtual IdentityError DuplicateRoleName(string role);
    public virtual IdentityError InvalidRoleName(string role);
    public virtual IdentityError LoginAlreadyAssociated();
    public virtual IdentityError UserAlreadyHasPassword();
    public virtual IdentityError UserAlreadyInRole(string role);
    public virtual IdentityError UserLockoutNotEnabled();
    public virtual IdentityError UserNotInRole(string role);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.BackOfficeIdentityBuilder : IdentityBuilder {
    public BackOfficeIdentityBuilder(IServiceCollection services);
    public BackOfficeIdentityBuilder(Type role, IServiceCollection services);
    public virtual IdentityBuilder AddErrorDescriber();
    private void InitializeServices(IServiceCollection services);
    public virtual IdentityBuilder AddTokenProvider(string providerName, Type provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.BackOfficeIdentityUser : UmbracoIdentityUser {
    private static DelegateEqualityComparer`1<Int32[]> _startIdsComparer;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private String[] _allowedSections;
    private string _culture;
    private IReadOnlyCollection`1<IReadOnlyUserGroup> _groups;
    private Nullable`1<DateTime> _inviteDateUtc;
    private Int32[] _startContentIds;
    private Int32[] _startMediaIds;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Int32[] <CalculatedMediaStartNodeIds>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Int32[] <CalculatedContentStartNodeIds>k__BackingField;
    private Guid _key;
    [NullableAttribute("2")]
public Int32[] CalculatedMediaStartNodeIds { get; public set; }
    [NullableAttribute("2")]
public Int32[] CalculatedContentStartNodeIds { get; public set; }
    public Nullable`1<DateTime> InviteDateUtc { get; public set; }
    public Int32[] StartContentIds { get; public set; }
    public Int32[] StartMediaIds { get; public set; }
    public String[] AllowedSections { get; }
    public string Culture { get; public set; }
    public Guid Key { get; public set; }
    public BackOfficeIdentityUser(GlobalSettings globalSettings, int userId, IEnumerable`1<IReadOnlyUserGroup> groups);
    private BackOfficeIdentityUser(GlobalSettings globalSettings, IReadOnlyCollection`1<IReadOnlyUserGroup> groups);
    private static BackOfficeIdentityUser();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Int32[] get_CalculatedMediaStartNodeIds();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CalculatedMediaStartNodeIds(Int32[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Int32[] get_CalculatedContentStartNodeIds();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CalculatedContentStartNodeIds(Int32[] value);
    public Nullable`1<DateTime> get_InviteDateUtc();
    public void set_InviteDateUtc(Nullable`1<DateTime> value);
    public Int32[] get_StartContentIds();
    public void set_StartContentIds(Int32[] value);
    public Int32[] get_StartMediaIds();
    public void set_StartMediaIds(Int32[] value);
    public String[] get_AllowedSections();
    public string get_Culture();
    public void set_Culture(string value);
    public Guid get_Key();
    public void set_Key(Guid value);
    public static BackOfficeIdentityUser CreateNew(GlobalSettings globalSettings, string username, string email, string culture, string name, Nullable`1<Guid> id);
    public void SetGroups(IReadOnlyCollection`1<IReadOnlyUserGroup> value);
    private static string UserIdToString(int userId);
    [NullableContextAttribute("2")]
private static int UserIdToInt(string userId);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IdentityUserRole`1<string> <SetGroups>b__36_0(IReadOnlyUserGroup x);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.BackOfficePasswordHasher : UmbracoPasswordHasher`1<BackOfficeIdentityUser> {
    public BackOfficePasswordHasher(LegacyPasswordSecurity passwordSecurity, IJsonSerializer jsonSerializer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.BackOfficeUserStore : UmbracoUserStore`2<BackOfficeIdentityUser, IdentityRole`1<string>> {
    private AppCaches _appCaches;
    private IEntityService _entityService;
    private IExternalLoginWithKeyService _externalLoginService;
    private GlobalSettings _globalSettings;
    private IUmbracoMapper _mapper;
    private ICoreScopeProvider _scopeProvider;
    private ITwoFactorLoginService _twoFactorLoginService;
    private IUserGroupService _userGroupService;
    private IUserRepository _userRepository;
    private IRuntimeState _runtimeState;
    private IEventMessagesFactory _eventMessagesFactory;
    private ILogger`1<BackOfficeUserStore> _logger;
    private bool IsUpgrading { get; }
    [ActivatorUtilitiesConstructorAttribute]
public BackOfficeUserStore(ICoreScopeProvider scopeProvider, IEntityService entityService, IExternalLoginWithKeyService externalLoginService, IOptionsSnapshot`1<GlobalSettings> globalSettings, IUmbracoMapper mapper, BackOfficeErrorDescriber describer, AppCaches appCaches, ITwoFactorLoginService twoFactorLoginService, IUserGroupService userGroupService, IUserRepository userRepository, IRuntimeState runtimeState, IEventMessagesFactory eventMessagesFactory, ILogger`1<BackOfficeUserStore> logger);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<ValidateSessionIdAsync>d__13")]
public sealed virtual Task`1<bool> ValidateSessionIdAsync(string userId, string sessionId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<GetTwoFactorEnabledAsync>d__14")]
public virtual Task`1<bool> GetTwoFactorEnabledAsync(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<IdentityResult> CreateAsync(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    public sealed virtual Task`1<UserOperationStatus> SaveAsync(IUser user);
    public sealed virtual Task`1<UserOperationStatus> DisableAsync(IUser user);
    public sealed virtual Task`1<IUser> GetAsync(int id);
    public sealed virtual Task`1<IEnumerable`1<IUser>> GetUsersAsync(Int32[] ids);
    public sealed virtual Task`1<IEnumerable`1<IUser>> GetUsersAsync(Guid[] keys);
    public sealed virtual Task`1<IUser> GetAsync(Guid key);
    public sealed virtual Task`1<IUser> GetByUserNameAsync(string username);
    public sealed virtual Task`1<IUser> GetByEmailAsync(string email);
    public sealed virtual Task`1<IEnumerable`1<IUser>> GetAllInGroupAsync(int groupId);
    private bool get_IsUpgrading();
    public virtual Task`1<IdentityResult> UpdateAsync(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<IdentityResult> DeleteAsync(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<FindByNameAsync>d__29")]
public virtual Task`1<BackOfficeIdentityUser> FindByNameAsync(string userName, CancellationToken cancellationToken);
    protected virtual Task`1<BackOfficeIdentityUser> FindUserAsync(string userId, CancellationToken cancellationToken);
    private IUser FindUserFromString(string userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<ResolveEntityIdFromIdentityId>d__32")]
protected virtual Task`1<int> ResolveEntityIdFromIdentityId(string identityId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<FindByEmailAsync>d__33")]
public virtual Task`1<BackOfficeIdentityUser> FindByEmailAsync(string email, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<SetPasswordHashAsync>d__34")]
public virtual Task SetPasswordHashAsync(BackOfficeIdentityUser user, string passwordHash, CancellationToken cancellationToken);
    public virtual Task AddLoginAsync(BackOfficeIdentityUser user, UserLoginInfo login, CancellationToken cancellationToken);
    public virtual Task RemoveLoginAsync(BackOfficeIdentityUser user, string loginProvider, string providerKey, CancellationToken cancellationToken);
    public virtual Task`1<IList`1<UserLoginInfo>> GetLoginsAsync(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<GetUsersInRoleAsync>d__38")]
public virtual Task`1<IList`1<BackOfficeIdentityUser>> GetUsersInRoleAsync(string normalizedRoleName, CancellationToken cancellationToken);
    public virtual Task SetTokenAsync(BackOfficeIdentityUser user, string loginProvider, string name, string value, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<FindUserLoginAsync>d__40")]
protected virtual Task`1<IdentityUserLogin`1<string>> FindUserLoginAsync(string userId, string loginProvider, string providerKey, CancellationToken cancellationToken);
    protected virtual Task`1<IdentityUserLogin`1<string>> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken);
    protected virtual Task`1<IdentityRole`1<string>> FindRoleAsync(string normalizedRoleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserStore/<FindUserRoleAsync>d__43")]
protected virtual Task`1<IdentityUserRole`1<string>> FindUserRoleAsync(string userId, string roleId, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private BackOfficeIdentityUser AssignLoginsCallback(BackOfficeIdentityUser user);
    private bool UpdateMemberProperties(IUser user, BackOfficeIdentityUser identityUser);
    public virtual Task RemoveTokenAsync(BackOfficeIdentityUser user, string loginProvider, string name, CancellationToken cancellationToken);
    public virtual Task`1<string> GetTokenAsync(BackOfficeIdentityUser user, string loginProvider, string name, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(BackOfficeIdentityUser user, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__1(BackOfficeIdentityUser user, string passwordHash, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private BackOfficeIdentityUser <GetUsersInRoleAsync>b__38_0(IUser x);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.BackOfficeUserValidator`1 : UserValidator`1<T> {
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.BackOfficeUserValidator`1/<ValidateAsync>d__0")]
public virtual Task`1<IdentityResult> ValidateAsync(UserManager`1<T> manager, T user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__0(UserManager`1<T> manager, T user);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IBackOfficeUserManager {
    public abstract virtual void NotifyForgotPasswordRequested(IPrincipal currentUser, string userId);
    public abstract virtual void NotifyForgotPasswordChanged(IPrincipal currentUser, string userId);
    public abstract virtual SignOutSuccessResult NotifyLogoutSuccess(IPrincipal currentUser, string userId);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IBackOfficeUserPasswordChecker {
    public abstract virtual Task`1<BackOfficeUserPasswordCheckerResult> CheckPasswordAsync(BackOfficeIdentityUser user, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.IdentityMapDefinition : object {
    private AppCaches _appCaches;
    private IEntityService _entityService;
    private SecuritySettings _securitySettings;
    private GlobalSettings _globalSettings;
    private ILocalizedTextService _textService;
    private ITwoFactorLoginService _twoFactorLoginService;
    public IdentityMapDefinition(ILocalizedTextService textService, IEntityService entityService, IOptions`1<GlobalSettings> globalSettings, IOptions`1<SecuritySettings> securitySettings, AppCaches appCaches, ITwoFactorLoginService twoFactorLoginService);
    public sealed virtual void DefineMaps(IUmbracoMapper mapper);
    [NullableContextAttribute("2")]
private static string GetPasswordHash(string storedPass);
    private void Map(IUser source, BackOfficeIdentityUser target);
    private void Map(IMember source, MemberIdentityUser target);
    [CompilerGeneratedAttribute]
private BackOfficeIdentityUser <DefineMaps>b__7_0(IUser source, MapperContext context);
    [CompilerGeneratedAttribute]
private void <DefineMaps>b__7_1(IUser source, BackOfficeIdentityUser target, MapperContext context);
    [CompilerGeneratedAttribute]
private void <DefineMaps>b__7_3(IMember source, MemberIdentityUser target, MapperContext context);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IMemberManager {
    public abstract virtual IPublishedContent AsPublishedMember(MemberIdentityUser user);
    public abstract virtual Task`1<MemberIdentityUser> GetCurrentMemberAsync();
    public abstract virtual Task`1<bool> IsMemberAuthorizedAsync(IEnumerable`1<string> allowTypes, IEnumerable`1<string> allowGroups, IEnumerable`1<int> allowMembers);
    public abstract virtual bool IsLoggedIn();
    public abstract virtual Task`1<bool> MemberHasAccessAsync(string path);
    public abstract virtual Task`1<IReadOnlyDictionary`2<string, bool>> MemberHasAccessAsync(IEnumerable`1<string> paths);
    public abstract virtual Task`1<bool> IsProtectedAsync(string path);
    public abstract virtual Task`1<IReadOnlyDictionary`2<string, bool>> IsProtectedAsync(IEnumerable`1<string> paths);
}
public interface Umbraco.Cms.Core.Security.IMemberUserStore {
    [NullableContextAttribute("1")]
public abstract virtual IPublishedContent GetPublishedMember(MemberIdentityUser user);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IPasswordChanger`1 {
    public abstract virtual Task`1<Attempt`1<PasswordChangedModel>> ChangePasswordWithIdentityAsync(ChangingPasswordModel passwordModel, IUmbracoUserManager`1<TUser> userMgr, IUser currentUser);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IUmbracoUserManager`1 {
    public abstract virtual Task`1<string> GetUserIdAsync(TUser user);
    public abstract virtual Task`1<TUser> GetUserAsync(ClaimsPrincipal principal);
    public abstract virtual string GetUserId(ClaimsPrincipal principal);
    public abstract virtual Task`1<IList`1<UserLoginInfo>> GetLoginsAsync(TUser user);
    public abstract virtual Task`1<IdentityResult> DeleteAsync(TUser user);
    public abstract virtual Task`1<TUser> FindByLoginAsync(string loginProvider, string providerKey);
    public abstract virtual Task`1<TUser> FindByIdAsync(string userId);
    public abstract virtual Task`1<string> GeneratePasswordResetTokenAsync(TUser user);
    public abstract virtual Task`1<IdentityResult> ChangePasswordWithResetAsync(string userId, string token, string newPassword);
    public abstract virtual Task`1<IdentityResult> ConfirmEmailAsync(TUser user, string token);
    public abstract virtual Task`1<TUser> FindByEmailAsync(string email);
    public abstract virtual Task`1<IdentityResult> ResetPasswordAsync(TUser user, string token, string newPassword);
    public abstract virtual Task`1<bool> IsLockedOutAsync(TUser user);
    public abstract virtual Task`1<IdentityResult> SetLockoutEndDateAsync(TUser user, Nullable`1<DateTimeOffset> lockoutEnd);
    public abstract virtual Task`1<bool> IsEmailConfirmedAsync(TUser user);
    public abstract virtual Task`1<IdentityResult> UpdateAsync(TUser user);
    public abstract virtual Task`1<bool> VerifyUserTokenAsync(TUser user, string tokenProvider, string purpose, string token);
    public abstract virtual Task`1<IdentityResult> AddPasswordAsync(TUser user, string password);
    public abstract virtual Task`1<bool> CheckPasswordAsync(TUser user, string password);
    public abstract virtual Task`1<IdentityResult> ChangePasswordAsync(TUser user, string currentPassword, string newPassword);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<bool> ValidateSessionIdAsync(string userId, string sessionId);
    public abstract virtual Task`1<IdentityResult> CreateAsync(TUser user);
    public abstract virtual Task`1<IList`1<string>> GetRolesAsync(TUser user);
    public abstract virtual Task`1<IdentityResult> RemoveFromRolesAsync(TUser user, IEnumerable`1<string> roles);
    public abstract virtual Task`1<IdentityResult> AddToRolesAsync(TUser user, IEnumerable`1<string> roles);
    public abstract virtual Task`1<IdentityResult> CreateAsync(TUser user, string password);
    public abstract virtual string GeneratePassword();
    public abstract virtual Task`1<IdentityResult> ValidatePasswordAsync(string password);
    public abstract virtual Task`1<string> GenerateEmailConfirmationTokenAsync(TUser user);
    public abstract virtual Task`1<TUser> FindByNameAsync(string userName);
    public abstract virtual Task`1<IdentityResult> AccessFailedAsync(TUser user);
    public abstract virtual Task`1<bool> GetTwoFactorEnabledAsync(TUser user);
    public abstract virtual Task`1<IList`1<string>> GetValidTwoFactorProvidersAsync(TUser user);
    public abstract virtual Task`1<bool> VerifyTwoFactorTokenAsync(TUser user, string tokenProvider, string token);
    public abstract virtual Task`1<IdentityResult> AddLoginAsync(TUser user, UserLoginInfo login);
    public abstract virtual Task`1<IdentityResult> RemoveLoginAsync(TUser user, string loginProvider, string providerKey);
    public abstract virtual Task`1<IdentityResult> ResetAccessFailedCountAsync(TUser user);
    public abstract virtual Task`1<string> GenerateTwoFactorTokenAsync(TUser user, string tokenProvider);
    public abstract virtual Task`1<string> GetEmailAsync(TUser user);
    public abstract virtual Task`1<string> GetPhoneNumberAsync(TUser user);
    public abstract virtual Task`1<bool> ValidateCredentialsAsync(string username, string password);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Core.Security.IUserSessionStore`1 {
    [NullableContextAttribute("2")]
public abstract virtual Task`1<bool> ValidateSessionIdAsync(string userId, string sessionId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.MemberIdentityBuilder : IdentityBuilder {
    public MemberIdentityBuilder(IServiceCollection services);
    public MemberIdentityBuilder(Type role, IServiceCollection services);
    public virtual IdentityBuilder AddErrorDescriber();
    private void InitializeServices(IServiceCollection services);
    public virtual IdentityBuilder AddTokenProvider(string providerName, Type provider);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.MemberIdentityUser : UmbracoIdentityUser {
    [NullableAttribute("1")]
private static DelegateEqualityComparer`1<IReadOnlyCollection`1<IReadOnlyUserGroup>> _groupsComparer;
    private string _comments;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastLockoutDateUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreatedDateUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MemberTypeAlias>k__BackingField;
    public string Comments { get; public set; }
    public Nullable`1<DateTime> LastLockoutDateUtc { get; public set; }
    public DateTime CreatedDateUtc { get; public set; }
    public Guid Key { get; public set; }
    public string MemberTypeAlias { get; public set; }
    public MemberIdentityUser(int userId);
    private static MemberIdentityUser();
    public string get_Comments();
    public void set_Comments(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastLockoutDateUtc();
    [CompilerGeneratedAttribute]
public void set_LastLockoutDateUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreatedDateUtc();
    [CompilerGeneratedAttribute]
public void set_CreatedDateUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public string get_MemberTypeAlias();
    [CompilerGeneratedAttribute]
public void set_MemberTypeAlias(string value);
    [NullableContextAttribute("1")]
public static MemberIdentityUser CreateNew(string username, string email, string memberTypeAlias, bool isApproved, string name, Nullable`1<Guid> key);
    [NullableContextAttribute("1")]
private static string UserIdToString(int userId);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.MemberPasswordHasher : UmbracoPasswordHasher`1<MemberIdentityUser> {
    private IOptions`1<LegacyPasswordMigrationSettings> _legacyMachineKeySettings;
    private ILogger`1<MemberPasswordHasher> _logger;
    [ObsoleteAttribute("Use ctor with all params")]
public MemberPasswordHasher(LegacyPasswordSecurity legacyPasswordHasher, IJsonSerializer jsonSerializer);
    public MemberPasswordHasher(LegacyPasswordSecurity legacyPasswordHasher, IJsonSerializer jsonSerializer, IOptions`1<LegacyPasswordMigrationSettings> legacyMachineKeySettings, ILogger`1<MemberPasswordHasher> logger);
    public virtual PasswordVerificationResult VerifyHashedPassword(MemberIdentityUser user, string hashedPassword, string providedPassword);
    private static string DecryptLegacyPassword(string encryptedPassword, string algorithmName, string decryptionKey);
    private bool IsSuccessfulLegacyPassword(string hashedPassword, string providedPassword);
    private static string DecryptLegacyPassword(string encryptedPassword, SymmetricAlgorithm algorithm);
    private static Byte[] StringToByteArray(string hex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.MemberRoleStore : object {
    private IdentityError _intParseError;
    private IdentityError _memberGroupNotFoundError;
    private IMemberGroupService _memberGroupService;
    private bool _disposed;
    [CompilerGeneratedAttribute]
private IdentityErrorDescriber <ErrorDescriber>k__BackingField;
    public IdentityErrorDescriber ErrorDescriber { get; public set; }
    public IQueryable`1<UmbracoIdentityRole> Roles { get; }
    public MemberRoleStore(IMemberGroupService memberGroupService, IdentityErrorDescriber errorDescriber);
    [CompilerGeneratedAttribute]
public IdentityErrorDescriber get_ErrorDescriber();
    [CompilerGeneratedAttribute]
public void set_ErrorDescriber(IdentityErrorDescriber value);
    public sealed virtual IQueryable`1<UmbracoIdentityRole> get_Roles();
    public sealed virtual Task`1<IdentityResult> CreateAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task`1<IdentityResult> UpdateAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task`1<IdentityResult> DeleteAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task`1<string> GetRoleIdAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task`1<string> GetRoleNameAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task SetRoleNameAsync(UmbracoIdentityRole role, string roleName, CancellationToken cancellationToken);
    public sealed virtual Task`1<string> GetNormalizedRoleNameAsync(UmbracoIdentityRole role, CancellationToken cancellationToken);
    public sealed virtual Task SetNormalizedRoleNameAsync(UmbracoIdentityRole role, string normalizedName, CancellationToken cancellationToken);
    public sealed virtual Task`1<UmbracoIdentityRole> FindByIdAsync(string roleId, CancellationToken cancellationToken);
    public sealed virtual Task`1<UmbracoIdentityRole> FindByNameAsync(string name, CancellationToken cancellationToken);
    public sealed virtual void Dispose();
    protected void ThrowIfDisposed();
    private UmbracoIdentityRole MapFromMemberGroup(IMemberGroup memberGroup);
    private bool MapToMemberGroup(UmbracoIdentityRole role, IMemberGroup memberGroup);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.MembersErrorDescriber : UmbracoErrorDescriberBase {
    private ILocalizedTextService _textService;
    public MembersErrorDescriber(ILocalizedTextService textService);
    public virtual IdentityError DuplicateRoleName(string role);
    public virtual IdentityError InvalidRoleName(string role);
    public virtual IdentityError LoginAlreadyAssociated();
    public virtual IdentityError UserAlreadyHasPassword();
    public virtual IdentityError UserAlreadyInRole(string role);
    public virtual IdentityError UserLockoutNotEnabled();
    public virtual IdentityError UserNotInRole(string role);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.MemberUserStore : UmbracoUserStore`2<MemberIdentityUser, UmbracoIdentityRole> {
    private static string GenericIdentityErrorCode;
    public static string CancelledIdentityErrorCode;
    private IExternalLoginWithKeyService _externalLoginService;
    private IUmbracoMapper _mapper;
    private IMemberService _memberService;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private ICoreScopeProvider _scopeProvider;
    private ITwoFactorLoginService _twoFactorLoginService;
    [ActivatorUtilitiesConstructorAttribute]
public MemberUserStore(IMemberService memberService, IUmbracoMapper mapper, ICoreScopeProvider scopeProvider, IdentityErrorDescriber describer, IPublishedSnapshotAccessor publishedSnapshotAccessor, IExternalLoginWithKeyService externalLoginService, ITwoFactorLoginService twoFactorLoginService);
    [ObsoleteAttribute("Use ctor with IExternalLoginWithKeyService and ITwoFactorLoginService param")]
public MemberUserStore(IMemberService memberService, IUmbracoMapper mapper, ICoreScopeProvider scopeProvider, IdentityErrorDescriber describer, IPublishedSnapshotAccessor publishedSnapshotAccessor, IExternalLoginWithKeyService externalLoginService);
    [ObsoleteAttribute("Use ctor with IExternalLoginWithKeyService and ITwoFactorLoginService param")]
public MemberUserStore(IMemberService memberService, IUmbracoMapper mapper, ICoreScopeProvider scopeProvider, IdentityErrorDescriber describer, IPublishedSnapshotAccessor publishedSnapshotAccessor);
    public virtual Task`1<IdentityResult> CreateAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<IdentityResult> UpdateAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<IdentityResult> DeleteAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<MemberIdentityUser> FindByNameAsync(string userName, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent GetPublishedMember(MemberIdentityUser user);
    public virtual Task`1<MemberIdentityUser> FindByEmailAsync(string email, CancellationToken cancellationToken);
    protected virtual Task`1<MemberIdentityUser> FindUserAsync(string userId, CancellationToken cancellationToken);
    protected virtual Task`1<int> ResolveEntityIdFromIdentityId(string identityId);
    public virtual Task AddLoginAsync(MemberIdentityUser user, UserLoginInfo login, CancellationToken cancellationToken);
    public virtual Task RemoveLoginAsync(MemberIdentityUser user, string loginProvider, string providerKey, CancellationToken cancellationToken);
    public virtual Task`1<IList`1<UserLoginInfo>> GetLoginsAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<IList`1<string>> GetRolesAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    public virtual Task`1<bool> IsInRoleAsync(MemberIdentityUser user, string roleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.MemberUserStore/<FindUserLoginAsync>d__24")]
protected virtual Task`1<IdentityUserLogin`1<string>> FindUserLoginAsync(string userId, string loginProvider, string providerKey, CancellationToken cancellationToken);
    protected virtual Task`1<IdentityUserLogin`1<string>> FindUserLoginAsync(string loginProvider, string providerKey, CancellationToken cancellationToken);
    private void EnsureRoles(MemberIdentityUser user);
    public virtual Task`1<IList`1<MemberIdentityUser>> GetUsersInRoleAsync(string roleName, CancellationToken cancellationToken);
    public virtual Task SetTokenAsync(MemberIdentityUser user, string loginProvider, string name, string value, CancellationToken cancellationToken);
    public virtual Task`1<string> GetTokenAsync(MemberIdentityUser user, string loginProvider, string name, CancellationToken cancellationToken);
    protected virtual Task`1<UmbracoIdentityRole> FindRoleAsync(string roleName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.MemberUserStore/<FindUserRoleAsync>d__31")]
protected virtual Task`1<IdentityUserRole`1<string>> FindUserRoleAsync(string userId, string roleId, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
private MemberIdentityUser AssignLoginsCallback(MemberIdentityUser user);
    private bool UpdateMemberProperties(IMember member, MemberIdentityUser identityUser, Boolean& updateRoles);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.MemberUserStore/<GetTwoFactorEnabledAsync>d__34")]
public virtual Task`1<bool> GetTwoFactorEnabledAsync(MemberIdentityUser user, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private MemberIdentityUser <GetUsersInRoleAsync>b__27_0(IMember x);
}
public class Umbraco.Cms.Core.Security.NoopLookupNormalizer : object {
    [NullableContextAttribute("2")]
public sealed virtual string NormalizeName(string name);
    [NullableContextAttribute("2")]
public sealed virtual string NormalizeEmail(string email);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Security.PasswordChanger`1 : object {
    private ILogger`1<PasswordChanger`1<TUser>> _logger;
    public PasswordChanger`1(ILogger`1<PasswordChanger`1<TUser>> logger);
    public Task`1<Attempt`1<PasswordChangedModel>> ChangePasswordWithIdentityAsync(ChangingPasswordModel passwordModel, IUmbracoUserManager`1<TUser> userMgr);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.PasswordChanger`1/<ChangePasswordWithIdentityAsync>d__3")]
public sealed virtual Task`1<Attempt`1<PasswordChangedModel>> ChangePasswordWithIdentityAsync(ChangingPasswordModel changingPasswordModel, IUmbracoUserManager`1<TUser> userMgr, IUser currentUser);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.Security.UmbracoErrorDescriberBase : IdentityErrorDescriber {
    private ILocalizedTextService _textService;
    protected UmbracoErrorDescriberBase(ILocalizedTextService textService);
    public virtual IdentityError ConcurrencyFailure();
    public virtual IdentityError DefaultError();
    public virtual IdentityError DuplicateEmail(string email);
    public virtual IdentityError DuplicateUserName(string userName);
    public virtual IdentityError InvalidEmail(string email);
    public virtual IdentityError InvalidToken();
    public virtual IdentityError InvalidUserName(string userName);
    public virtual IdentityError PasswordMismatch();
    public virtual IdentityError PasswordRequiresDigit();
    public virtual IdentityError PasswordRequiresLower();
    public virtual IdentityError PasswordRequiresNonAlphanumeric();
    public virtual IdentityError PasswordRequiresUniqueChars(int uniqueChars);
    public virtual IdentityError PasswordRequiresUpper();
    public virtual IdentityError PasswordTooShort(int length);
    public virtual IdentityError RecoveryCodeRedemptionFailed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Security.UmbracoIdentityRole : IdentityRole {
    private string _id;
    private string _name;
    [CompilerGeneratedAttribute]
private bool <HasIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private BeingDirty <BeingDirty>k__BackingField;
    public string Id { get; public set; }
    [NullableAttribute("2")]
public string Name { get; public set; }
    [NullableAttribute("2")]
public string NormalizedName { get; public set; }
    public bool HasIdentity { get; protected set; }
    [NullableAttribute("2")]
public string ConcurrencyStamp { get; public set; }
    protected BeingDirty BeingDirty { get; }
    public UmbracoIdentityRole(string roleName);
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    public virtual string get_Id();
    public virtual void set_Id(string value);
    [NullableContextAttribute("2")]
public virtual string get_Name();
    [NullableContextAttribute("2")]
public virtual void set_Name(string value);
    [NullableContextAttribute("2")]
public virtual string get_NormalizedName();
    [NullableContextAttribute("2")]
public virtual void set_NormalizedName(string value);
    [CompilerGeneratedAttribute]
public bool get_HasIdentity();
    [CompilerGeneratedAttribute]
protected void set_HasIdentity(bool value);
    [NullableContextAttribute("2")]
public virtual string get_ConcurrencyStamp();
    [NullableContextAttribute("2")]
public virtual void set_ConcurrencyStamp(string value);
    [CompilerGeneratedAttribute]
protected BeingDirty get_BeingDirty();
    public sealed virtual bool IsDirty();
    public sealed virtual bool IsPropertyDirty(string propName);
    public sealed virtual IEnumerable`1<string> GetDirtyProperties();
    public sealed virtual void ResetDirtyProperties();
    public sealed virtual bool WasDirty();
    public sealed virtual bool WasPropertyDirty(string propertyName);
    public sealed virtual void ResetWereDirtyProperties();
    public sealed virtual void ResetDirtyProperties(bool rememberDirty);
    public sealed virtual IEnumerable`1<string> GetWereDirtyProperties();
    public sealed virtual void DisableChangeTracking();
    public sealed virtual void EnableChangeTracking();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Core.Security.UmbracoIdentityUser : IdentityUser {
    private int _accessFailedCount;
    private string _email;
    private bool _emailConfirmed;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Lazy`1<IEnumerable`1<IIdentityUserLogin>> _getLogins;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Lazy`1<IEnumerable`1<IIdentityUserToken>> _getTokens;
    private string _id;
    private Nullable`1<DateTime> _lastLoginDateUtc;
    private Nullable`1<DateTime> _lastPasswordChangeDateUtc;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObservableCollection`1<IIdentityUserLogin> _logins;
    [NullableAttribute("2")]
private string _name;
    [NullableAttribute("2")]
private string _passwordConfig;
    [NullableAttribute("2")]
private string _passwordHash;
    private ObservableCollection`1<IdentityUserRole`1<string>> _roles;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ObservableCollection`1<IIdentityUserToken> _tokens;
    private string _userName;
    [CompilerGeneratedAttribute]
private ICollection`1<IdentityUserClaim`1<string>> <Claims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private BeingDirty <BeingDirty>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsApproved>k__BackingField;
    [NullableAttribute("2")]
public string ConcurrencyStamp { get; public set; }
    public Nullable`1<DateTime> LastLoginDateUtc { get; public set; }
    [NullableAttribute("2")]
public string Email { get; public set; }
    public bool EmailConfirmed { get; public set; }
    [NullableAttribute("2")]
public string PasswordHash { get; public set; }
    public Nullable`1<DateTime> LastPasswordChangeDateUtc { get; public set; }
    public bool LockoutEnabled { get; public set; }
    public int AccessFailedCount { get; public set; }
    public ICollection`1<IdentityUserRole`1<string>> Roles { get; public set; }
    public ICollection`1<IdentityUserClaim`1<string>> Claims { get; }
    public ICollection`1<IIdentityUserLogin> Logins { get; }
    public ICollection`1<IIdentityUserToken> LoginTokens { get; }
    public string Id { get; public set; }
    public bool HasIdentity { get; protected set; }
    [NullableAttribute("2")]
public string UserName { get; public set; }
    public bool IsLockedOut { get; }
    protected BeingDirty BeingDirty { get; }
    public bool IsApproved { get; public set; }
    [NullableAttribute("2")]
public string Name { get; public set; }
    [NullableAttribute("2")]
public string PasswordConfig { get; public set; }
    public sealed virtual void add_PropertyChanged(PropertyChangedEventHandler value);
    public sealed virtual void remove_PropertyChanged(PropertyChangedEventHandler value);
    [NullableContextAttribute("2")]
public virtual string get_ConcurrencyStamp();
    [NullableContextAttribute("2")]
public virtual void set_ConcurrencyStamp(string value);
    public Nullable`1<DateTime> get_LastLoginDateUtc();
    public void set_LastLoginDateUtc(Nullable`1<DateTime> value);
    [NullableContextAttribute("2")]
public virtual string get_Email();
    [NullableContextAttribute("2")]
public virtual void set_Email(string value);
    public virtual bool get_EmailConfirmed();
    public virtual void set_EmailConfirmed(bool value);
    [NullableContextAttribute("2")]
public virtual string get_PasswordHash();
    [NullableContextAttribute("2")]
public virtual void set_PasswordHash(string value);
    public Nullable`1<DateTime> get_LastPasswordChangeDateUtc();
    public void set_LastPasswordChangeDateUtc(Nullable`1<DateTime> value);
    public virtual bool get_LockoutEnabled();
    public virtual void set_LockoutEnabled(bool value);
    public virtual int get_AccessFailedCount();
    public virtual void set_AccessFailedCount(int value);
    public ICollection`1<IdentityUserRole`1<string>> get_Roles();
    public void set_Roles(ICollection`1<IdentityUserRole`1<string>> value);
    [CompilerGeneratedAttribute]
public ICollection`1<IdentityUserClaim`1<string>> get_Claims();
    public ICollection`1<IIdentityUserLogin> get_Logins();
    public ICollection`1<IIdentityUserToken> get_LoginTokens();
    public virtual string get_Id();
    public virtual void set_Id(string value);
    [CompilerGeneratedAttribute]
public bool get_HasIdentity();
    [CompilerGeneratedAttribute]
protected void set_HasIdentity(bool value);
    [NullableContextAttribute("2")]
public virtual string get_UserName();
    [NullableContextAttribute("2")]
public virtual void set_UserName(string value);
    public bool get_IsLockedOut();
    [CompilerGeneratedAttribute]
protected BeingDirty get_BeingDirty();
    [CompilerGeneratedAttribute]
public bool get_IsApproved();
    [CompilerGeneratedAttribute]
public void set_IsApproved(bool value);
    [NullableContextAttribute("2")]
public string get_Name();
    [NullableContextAttribute("2")]
public void set_Name(string value);
    [NullableContextAttribute("2")]
public string get_PasswordConfig();
    [NullableContextAttribute("2")]
public void set_PasswordConfig(string value);
    public sealed virtual bool IsDirty();
    public sealed virtual bool IsPropertyDirty(string propName);
    public sealed virtual IEnumerable`1<string> GetDirtyProperties();
    public sealed virtual void ResetDirtyProperties();
    public sealed virtual bool WasDirty();
    public sealed virtual bool WasPropertyDirty(string propertyName);
    public sealed virtual void ResetWereDirtyProperties();
    public sealed virtual void ResetDirtyProperties(bool rememberDirty);
    public sealed virtual IEnumerable`1<string> GetWereDirtyProperties();
    public sealed virtual void DisableChangeTracking();
    public sealed virtual void EnableChangeTracking();
    public void AddRole(string role);
    internal void SetLoginsCallback(Lazy`1<IEnumerable`1<IIdentityUserLogin>> callback);
    internal void SetTokensCallback(Lazy`1<IEnumerable`1<IIdentityUserToken>> callback);
    private void Logins_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    private void LoginTokens_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    private void Roles_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.UmbracoPasswordHasher`1 : PasswordHasher`1<TUser> {
    private IJsonSerializer _jsonSerializer;
    [CompilerGeneratedAttribute]
private LegacyPasswordSecurity <LegacyPasswordSecurity>k__BackingField;
    public LegacyPasswordSecurity LegacyPasswordSecurity { get; }
    public UmbracoPasswordHasher`1(LegacyPasswordSecurity legacyPasswordSecurity, IJsonSerializer jsonSerializer);
    [CompilerGeneratedAttribute]
public LegacyPasswordSecurity get_LegacyPasswordSecurity();
    public virtual string HashPassword(TUser user, string password);
    public virtual PasswordVerificationResult VerifyHashedPassword(TUser user, string hashedPassword, string providedPassword);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Core.Security.UmbracoUserConfirmation`1 : DefaultUserConfirmation`1<TUser> {
    public virtual Task`1<bool> IsConfirmedAsync(UserManager`1<TUser> manager, TUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Core.Security.UmbracoUserManager`2 : UserManager`1<TUser> {
    [NullableAttribute("2")]
private PasswordGenerator _passwordGenerator;
    [CompilerGeneratedAttribute]
private IPasswordConfiguration <PasswordConfiguration>k__BackingField;
    [CompilerGeneratedAttribute]
private IIpResolver <IpResolver>k__BackingField;
    public bool SupportsUserClaim { get; }
    public bool SupportsQueryableUsers { get; }
    public bool SupportsUserTwoFactor { get; }
    public bool SupportsUserPhoneNumber { get; }
    public IPasswordConfiguration PasswordConfiguration { get; }
    public IIpResolver IpResolver { get; }
    public UmbracoUserManager`2(IIpResolver ipResolver, IUserStore`1<TUser> store, IOptions`1<IdentityOptions> optionsAccessor, IPasswordHasher`1<TUser> passwordHasher, IEnumerable`1<IUserValidator`1<TUser>> userValidators, IEnumerable`1<IPasswordValidator`1<TUser>> passwordValidators, IdentityErrorDescriber errors, IServiceProvider services, ILogger`1<UserManager`1<TUser>> logger, IOptions`1<TPasswordConfig> passwordConfiguration);
    public virtual bool get_SupportsUserClaim();
    public virtual bool get_SupportsQueryableUsers();
    public virtual bool get_SupportsUserTwoFactor();
    public virtual bool get_SupportsUserPhoneNumber();
    [CompilerGeneratedAttribute]
public IPasswordConfiguration get_PasswordConfiguration();
    [CompilerGeneratedAttribute]
public IIpResolver get_IpResolver();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<ValidateSessionIdAsync>d__16")]
public virtual Task`1<bool> ValidateSessionIdAsync(string userId, string sessionId);
    public string GeneratePassword();
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<ValidatePasswordAsync>d__18")]
public Task`1<IdentityResult> ValidatePasswordAsync(string password);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<CheckPasswordAsync>d__19")]
public virtual Task`1<bool> CheckPasswordAsync(TUser user, string password);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<ChangePasswordWithResetAsync>d__20")]
public virtual Task`1<IdentityResult> ChangePasswordWithResetAsync(string userId, string token, string newPassword);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<SetLockoutEndDateAsync>d__21")]
public virtual Task`1<IdentityResult> SetLockoutEndDateAsync(TUser user, Nullable`1<DateTimeOffset> lockoutEnd);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<ResetAccessFailedCountAsync>d__22")]
public virtual Task`1<IdentityResult> ResetAccessFailedCountAsync(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<AccessFailedAsync>d__23")]
public virtual Task`1<IdentityResult> AccessFailedAsync(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<ValidateCredentialsAsync>d__24")]
public Task`1<bool> ValidateCredentialsAsync(string username, string password);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserManager`2/<GetValidTwoFactorProvidersAsync>d__25")]
public virtual Task`1<IList`1<string>> GetValidTwoFactorProvidersAsync(TUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(TUser user, string password);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__1(TUser user, Nullable`1<DateTimeOffset> lockoutEnd);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IList`1<string>> <>n__2(TUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Core.Security.UmbracoUserStore`2 : UserStoreBase`8<TUser, TRole, string, IdentityUserClaim`1<string>, IdentityUserRole`1<string>, IdentityUserLogin`1<string>, IdentityUserToken`1<string>, IdentityRoleClaim`1<string>> {
    [EditorBrowsableAttribute("1")]
public IQueryable`1<TUser> Users { get; }
    protected UmbracoUserStore`2(IdentityErrorDescriber describer);
    public virtual IQueryable`1<TUser> get_Users();
    [EditorBrowsableAttribute("1")]
public virtual Task AddClaimsAsync(TUser user, IEnumerable`1<Claim> claims, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("Use TryConvertIdentityIdToInt instead. Scheduled for removal in V15.")]
protected static int UserIdToInt(string userId);
    protected abstract virtual Task`1<int> ResolveEntityIdFromIdentityId(string identityId);
    [NullableContextAttribute("2")]
protected static bool TryConvertIdentityIdToInt(string userId, Int32& intId);
    protected static string UserIdToString(int userId);
    public virtual Task AddToRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    public virtual Task`1<TUser> FindByIdAsync(string userId, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<IList`1<Claim>> GetClaimsAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<string> GetNormalizedEmailAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<string> GetNormalizedUserNameAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<IList`1<string>> GetRolesAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<string> GetSecurityStampAsync(TUser user, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task`1<IList`1<TUser>> GetUsersForClaimAsync(Claim claim, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserStore`2/<HasPasswordAsync>d__16")]
public virtual Task`1<bool> HasPasswordAsync(TUser user, CancellationToken cancellationToken);
    public virtual Task`1<bool> IsInRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task RemoveClaimsAsync(TUser user, IEnumerable`1<Claim> claims, CancellationToken cancellationToken);
    public virtual Task RemoveFromRoleAsync(TUser user, string normalizedRoleName, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
public virtual Task ReplaceClaimAsync(TUser user, Claim claim, Claim newClaim, CancellationToken cancellationToken);
    public virtual Task SetNormalizedEmailAsync(TUser user, string normalizedEmail, CancellationToken cancellationToken);
    public virtual Task SetNormalizedUserNameAsync(TUser user, string normalizedName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Security.UmbracoUserStore`2/<SetPasswordHashAsync>d__23")]
public virtual Task SetPasswordHashAsync(TUser user, string passwordHash, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
protected virtual Task AddUserTokenAsync(IdentityUserToken`1<string> token);
    [EditorBrowsableAttribute("1")]
protected virtual Task`1<IdentityUserToken`1<string>> FindTokenAsync(TUser user, string loginProvider, string name, CancellationToken cancellationToken);
    [EditorBrowsableAttribute("1")]
protected virtual Task RemoveUserTokenAsync(IdentityUserToken`1<string> token);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(TUser user, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__1(TUser user, string passwordHash, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Services.Implement.PackagingService : object {
    private IAuditService _auditService;
    private ICreatedPackagesRepository _createdPackages;
    private IEventAggregator _eventAggregator;
    private IKeyValueService _keyValueService;
    private IPackageInstallation _packageInstallation;
    private PackageMigrationPlanCollection _packageMigrationPlans;
    private IPackageManifestReader _packageManifestReader;
    private ICoreScopeProvider _coreScopeProvider;
    private IHostEnvironment _hostEnvironment;
    private IUserService _userService;
    [ObsoleteAttribute("Use the constructor with IPackageManifestReader instead.")]
public PackagingService(IAuditService auditService, ICreatedPackagesRepository createdPackages, IPackageInstallation packageInstallation, IEventAggregator eventAggregator, IKeyValueService keyValueService, ICoreScopeProvider coreScopeProvider, PackageMigrationPlanCollection packageMigrationPlans, IHostEnvironment hostEnvironment, IUserService userService);
    public PackagingService(IAuditService auditService, ICreatedPackagesRepository createdPackages, IPackageInstallation packageInstallation, IEventAggregator eventAggregator, IKeyValueService keyValueService, ICoreScopeProvider coreScopeProvider, PackageMigrationPlanCollection packageMigrationPlans, IPackageManifestReader packageManifestReader, IHostEnvironment hostEnvironment, IUserService userService);
    public sealed virtual CompiledPackage GetCompiledPackageInfo(XDocument xml);
    public sealed virtual InstallationSummary InstallCompiledPackageData(XDocument packageXml, int userId);
    public sealed virtual InstallationSummary InstallCompiledPackageData(FileInfo packageXmlFile, int userId);
    [ObsoleteAttribute("Use DeleteCreatedPackageAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual void DeleteCreatedPackage(int id, int userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.Implement.PackagingService/<DeleteCreatedPackageAsync>d__16")]
public sealed virtual Task`1<Attempt`2<PackageDefinition, PackageOperationStatus>> DeleteCreatedPackageAsync(Guid key, Guid userKey);
    public sealed virtual IEnumerable`1<PackageDefinition> GetAllCreatedPackages();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("Use GetCreatedPackagesAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual PackageDefinition GetCreatedPackageById(int id);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.Implement.PackagingService/<GetCreatedPackagesAsync>d__19")]
public sealed virtual Task`1<PagedModel`1<PackageDefinition>> GetCreatedPackagesAsync(int skip, int take);
    public sealed virtual Task`1<PackageDefinition> GetCreatedPackageByKeyAsync(Guid key);
    [ObsoleteAttribute("Use CreateCreatedPackageAsync or UpdateCreatedPackageAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual bool SaveCreatedPackage(PackageDefinition definition);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.Implement.PackagingService/<CreateCreatedPackageAsync>d__22")]
public sealed virtual Task`1<Attempt`2<PackageDefinition, PackageOperationStatus>> CreateCreatedPackageAsync(PackageDefinition package, Guid userKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.Implement.PackagingService/<UpdateCreatedPackageAsync>d__23")]
public sealed virtual Task`1<Attempt`2<PackageDefinition, PackageOperationStatus>> UpdateCreatedPackageAsync(PackageDefinition package, Guid userKey);
    public sealed virtual string ExportCreatedPackage(PackageDefinition definition);
    public sealed virtual InstalledPackage GetInstalledPackageByName(string packageName);
    [ObsoleteAttribute("Use GetAllInstalledPackagesAsync instead. Scheduled for removal in Umbraco 15.")]
public sealed virtual IEnumerable`1<InstalledPackage> GetAllInstalledPackages();
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.Implement.PackagingService/<GetAllInstalledPackagesAsync>d__27")]
public sealed virtual Task`1<IEnumerable`1<InstalledPackage>> GetAllInstalledPackagesAsync();
    public sealed virtual Task`1<PagedModel`1<InstalledPackage>> GetInstalledPackagesFromMigrationPlansAsync(int skip, int take);
    public sealed virtual Stream GetPackageFileStream(PackageDefinition definition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Services.MemberEditingService : object {
    private IMemberService _memberService;
    private IMemberTypeService _memberTypeService;
    private IMemberContentEditingService _memberContentEditingService;
    private IMemberManager _memberManager;
    private ITwoFactorLoginService _twoFactorLoginService;
    private IPasswordChanger`1<MemberIdentityUser> _passwordChanger;
    private ILogger`1<MemberEditingService> _logger;
    private IMemberGroupService _memberGroupService;
    public MemberEditingService(IMemberService memberService, IMemberTypeService memberTypeService, IMemberContentEditingService memberContentEditingService, IMemberManager memberManager, ITwoFactorLoginService twoFactorLoginService, IPasswordChanger`1<MemberIdentityUser> passwordChanger, ILogger`1<MemberEditingService> logger, IMemberGroupService memberGroupService);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<GetAsync>d__9")]
public sealed virtual Task`1<IMember> GetAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<ValidateCreateAsync>d__10")]
public sealed virtual Task`1<Attempt`2<ContentValidationResult, ContentEditingOperationStatus>> ValidateCreateAsync(MemberCreateModel createModel);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<ValidateUpdateAsync>d__11")]
public sealed virtual Task`1<Attempt`2<ContentValidationResult, ContentEditingOperationStatus>> ValidateUpdateAsync(Guid key, MemberUpdateModel updateModel);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<CreateAsync>d__12")]
public sealed virtual Task`1<Attempt`2<MemberCreateResult, MemberEditingStatus>> CreateAsync(MemberCreateModel createModel, IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<UpdateAsync>d__13")]
public sealed virtual Task`1<Attempt`2<MemberUpdateResult, MemberEditingStatus>> UpdateAsync(Guid key, MemberUpdateModel updateModel, IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<DeleteAsync>d__14")]
public sealed virtual Task`1<Attempt`2<IMember, MemberEditingStatus>> DeleteAsync(Guid key, Guid userKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<ValidateMemberDataAsync>d__15")]
private Task`1<MemberEditingOperationStatus> ValidateMemberDataAsync(MemberEditingModelBase model, Nullable`1<Guid> memberKey, string password);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<UpdateRoles>d__16")]
private Task`1<bool> UpdateRoles(IEnumerable`1<Guid> roles, MemberIdentityUser identityMember);
    private static Attempt`2<MemberCreateResult, MemberEditingStatus> IdentityMemberCreationFailed(IdentityResult created, MemberEditingStatus status);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<UnlockMember>d__18")]
private Task`1<bool> UnlockMember(MemberIdentityUser identityMember);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<DisableTwoFactor>d__19")]
private Task`1<bool> DisableTwoFactor(IMember member);
    [AsyncStateMachineAttribute("Umbraco.Cms.Core.Services.MemberEditingService/<ChangePassword>d__20")]
private Task`1<bool> ChangePassword(IMember member, string oldPassword, string newPassword, IUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Core.Services.UsageInformationService : object {
    private IMetricsConsentService _metricsConsentService;
    private IEnumerable`1<IDetailedTelemetryProvider> _providers;
    public UsageInformationService(IMetricsConsentService metricsConsentService, IEnumerable`1<IDetailedTelemetryProvider> providers);
    public sealed virtual IEnumerable`1<UsageInformation> GetDetailed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.TagQuery : object {
    private IPublishedContentQuery _contentQuery;
    private IUmbracoMapper _mapper;
    private ITagService _tagService;
    public TagQuery(ITagService tagService, IPublishedContentQuery contentQuery, IUmbracoMapper mapper);
    public sealed virtual IEnumerable`1<IPublishedContent> GetContentByTag(string tag, string group, string culture);
    public sealed virtual IEnumerable`1<IPublishedContent> GetContentByTagGroup(string group, string culture);
    public sealed virtual IEnumerable`1<IPublishedContent> GetMediaByTag(string tag, string group, string culture);
    public sealed virtual IEnumerable`1<IPublishedContent> GetMediaByTagGroup(string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetAllTags(string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetAllContentTags(string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetAllMediaTags(string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetAllMemberTags(string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetTagsForProperty(int contentId, string propertyTypeAlias, string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<TagModel> GetTagsForEntity(int contentId, string group, string culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.DelayCalculator : object {
    public static TimeSpan GetDelay(string firstRunTime, ICronTabParser cronTabParser, ILogger logger, TimeSpan defaultDelay);
    internal static TimeSpan GetDelay(string firstRunTime, ICronTabParser cronTabParser, ILogger logger, DateTime now, TimeSpan defaultDelay);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.BackgroundJobs.IRecurringBackgroundJob {
    public static TimeSpan DefaultDelay;
    public static ServerRole[] DefaultServerRoles;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public ServerRole[] ServerRoles { get; }
    private static IRecurringBackgroundJob();
    public abstract virtual TimeSpan get_Period();
    public virtual TimeSpan get_Delay();
    public virtual ServerRole[] get_ServerRoles();
    [CompilerGeneratedAttribute]
public abstract virtual void add_PeriodChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public abstract virtual void remove_PeriodChanged(EventHandler value);
    public abstract virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ContentVersionCleanupJob : object {
    private ILogger`1<ContentVersionCleanupJob> _logger;
    private IContentVersionService _service;
    private IOptionsMonitor`1<ContentSettings> _settingsMonitor;
    public TimeSpan Period { get; }
    public ContentVersionCleanupJob(ILogger`1<ContentVersionCleanupJob> logger, IOptionsMonitor`1<ContentSettings> settingsMonitor, IContentVersionService service);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.HealthCheckNotifierJob : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Period>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private EventHandler _periodChanged;
    private HealthCheckCollection _healthChecks;
    private ILogger`1<HealthCheckNotifierJob> _logger;
    private HealthCheckNotificationMethodCollection _notifications;
    private IProfilingLogger _profilingLogger;
    private IEventAggregator _eventAggregator;
    private ICoreScopeProvider _scopeProvider;
    private HealthChecksSettings _healthChecksSettings;
    public TimeSpan Period { get; private set; }
    public TimeSpan Delay { get; private set; }
    public HealthCheckNotifierJob(IOptionsMonitor`1<HealthChecksSettings> healthChecksSettings, HealthCheckCollection healthChecks, HealthCheckNotificationMethodCollection notifications, ICoreScopeProvider scopeProvider, ILogger`1<HealthCheckNotifierJob> logger, IProfilingLogger profilingLogger, ICronTabParser cronTabParser, IEventAggregator eventAggregator);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Period();
    [CompilerGeneratedAttribute]
private void set_Period(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Delay();
    [CompilerGeneratedAttribute]
private void set_Delay(TimeSpan value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void add__periodChanged(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void remove__periodChanged(EventHandler value);
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.HealthCheckNotifierJob/<RunJobAsync>d__22")]
public sealed virtual Task RunJobAsync();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__21_0(HealthChecksSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.LogScrubberJob : object {
    private IAuditService _auditService;
    private ILogger`1<LogScrubberJob> _logger;
    private IProfilingLogger _profilingLogger;
    private ICoreScopeProvider _scopeProvider;
    private LoggingSettings _settings;
    public TimeSpan Period { get; }
    public LogScrubberJob(IAuditService auditService, IOptionsMonitor`1<LoggingSettings> settings, ICoreScopeProvider scopeProvider, ILogger`1<LogScrubberJob> logger, IProfilingLogger profilingLogger);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__10_0(LoggingSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.OpenIddictCleanupJob : object {
    private static int LifespanInSeconds;
    private ILogger`1<OpenIddictCleanupJob> _logger;
    private IServiceProvider _provider;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public OpenIddictCleanupJob(ILogger`1<OpenIddictCleanupJob> logger, IServiceProvider provider);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual TimeSpan get_Delay();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.OpenIddictCleanupJob/<RunJobAsync>d__11")]
public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ReportSiteJob : object {
    private ILogger`1<ReportSiteJob> _logger;
    private ITelemetryService _telemetryService;
    private IJsonSerializer _jsonSerializer;
    private IHttpClientFactory _httpClientFactory;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public ServerRole[] ServerRoles { get; }
    [ObsoleteAttribute("Use the constructor with IHttpClientFactory instead.")]
public ReportSiteJob(ILogger`1<ReportSiteJob> logger, ITelemetryService telemetryService, IJsonSerializer jsonSerializer);
    public ReportSiteJob(ILogger`1<ReportSiteJob> logger, ITelemetryService telemetryService, IJsonSerializer jsonSerializer, IHttpClientFactory httpClientFactory);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual TimeSpan get_Delay();
    public sealed virtual ServerRole[] get_ServerRoles();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ReportSiteJob/<RunJobAsync>d__15")]
public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ScheduledPublishingJob : object {
    private IContentService _contentService;
    private ILogger`1<ScheduledPublishingJob> _logger;
    private ICoreScopeProvider _scopeProvider;
    private TimeProvider _timeProvider;
    private IServerMessenger _serverMessenger;
    private IUmbracoContextFactory _umbracoContextFactory;
    public TimeSpan Period { get; }
    public ScheduledPublishingJob(IContentService contentService, IUmbracoContextFactory umbracoContextFactory, ILogger`1<ScheduledPublishingJob> logger, IServerMessenger serverMessenger, ICoreScopeProvider scopeProvider, TimeProvider timeProvider);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ServerRegistration.InstructionProcessJob : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Period>k__BackingField;
    private ILogger`1<InstructionProcessJob> _logger;
    private IServerMessenger _messenger;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public ServerRole[] ServerRoles { get; }
    public InstructionProcessJob(IServerMessenger messenger, ILogger`1<InstructionProcessJob> logger, IOptions`1<GlobalSettings> globalSettings);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Period();
    public sealed virtual TimeSpan get_Delay();
    public sealed virtual ServerRole[] get_ServerRoles();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.ServerRegistration.TouchServerJob : object {
    [CompilerGeneratedAttribute]
private TimeSpan <Period>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private EventHandler _periodChanged;
    private IHostingEnvironment _hostingEnvironment;
    private ILogger`1<TouchServerJob> _logger;
    private IServerRegistrationService _serverRegistrationService;
    private IServerRoleAccessor _serverRoleAccessor;
    private GlobalSettings _globalSettings;
    public TimeSpan Period { get; private set; }
    public TimeSpan Delay { get; }
    public ServerRole[] ServerRoles { get; }
    public TouchServerJob(IServerRegistrationService serverRegistrationService, IHostingEnvironment hostingEnvironment, ILogger`1<TouchServerJob> logger, IOptionsMonitor`1<GlobalSettings> globalSettings, IServerRoleAccessor serverRoleAccessor);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Period();
    [CompilerGeneratedAttribute]
private void set_Period(TimeSpan value);
    public sealed virtual TimeSpan get_Delay();
    public sealed virtual ServerRole[] get_ServerRoles();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void add__periodChanged(EventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void remove__periodChanged(EventHandler value);
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__19_0(GlobalSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.TempFileCleanupJob : object {
    private TimeSpan _age;
    private IIOHelper _ioHelper;
    private ILogger`1<TempFileCleanupJob> _logger;
    private DirectoryInfo[] _tempFolders;
    public TimeSpan Period { get; }
    public ServerRole[] ServerRoles { get; }
    public TempFileCleanupJob(IIOHelper ioHelper, ILogger`1<TempFileCleanupJob> logger);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual ServerRole[] get_ServerRoles();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual Task RunJobAsync();
    private void CleanupFolder(DirectoryInfo folder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.TemporaryFileCleanupJob : object {
    private ILogger`1<TemporaryFileCleanupJob> _logger;
    private ITemporaryFileService _service;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public TemporaryFileCleanupJob(ILogger`1<TemporaryFileCleanupJob> logger, ITemporaryFileService temporaryFileService);
    public sealed virtual TimeSpan get_Period();
    public sealed virtual TimeSpan get_Delay();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.TemporaryFileCleanupJob/<RunJobAsync>d__10")]
public sealed virtual Task RunJobAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.WebhookFiring : object {
    private ILogger`1<WebhookFiring> _logger;
    private IWebhookRequestService _webhookRequestService;
    private IWebhookLogFactory _webhookLogFactory;
    private IWebhookLogService _webhookLogService;
    private IWebhookService _webHookService;
    private ICoreScopeProvider _coreScopeProvider;
    private IHttpClientFactory _httpClientFactory;
    private WebhookSettings _webhookSettings;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public WebhookFiring(ILogger`1<WebhookFiring> logger, IWebhookRequestService webhookRequestService, IWebhookLogFactory webhookLogFactory, IWebhookLogService webhookLogService, IWebhookService webHookService, IOptionsMonitor`1<WebhookSettings> webhookSettings, ICoreScopeProvider coreScopeProvider, IHttpClientFactory httpClientFactory);
    public sealed virtual TimeSpan get_Period();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Delay();
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.WebhookFiring/<RunJobAsync>d__17")]
public sealed virtual Task RunJobAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.WebhookFiring/<SendRequestAsync>d__18")]
private Task`1<HttpResponseMessage> SendRequestAsync(IWebhook webhook, string eventName, string serializedObject, int retryCount, CancellationToken cancellationToken);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__16_0(WebhookSettings x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private Task <RunJobAsync>b__17_0(WebhookRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.WebhookLoggingCleanup : object {
    private ILogger`1<WebhookLoggingCleanup> _logger;
    private WebhookSettings _webhookSettings;
    private IWebhookLogRepository _webhookLogRepository;
    private ICoreScopeProvider _coreScopeProvider;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    public TimeSpan Period { get; }
    public TimeSpan Delay { get; }
    public WebhookLoggingCleanup(ILogger`1<WebhookLoggingCleanup> logger, IOptionsMonitor`1<WebhookSettings> webhookSettings, IWebhookLogRepository webhookLogRepository, ICoreScopeProvider coreScopeProvider);
    public sealed virtual void add_PeriodChanged(EventHandler value);
    public sealed virtual void remove_PeriodChanged(EventHandler value);
    public sealed virtual TimeSpan get_Period();
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_Delay();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.Jobs.WebhookLoggingCleanup/<RunJobAsync>d__13")]
public sealed virtual Task RunJobAsync();
}
public static class Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedService : object {
    [NullableContextAttribute("1")]
public static Func`2<IRecurringBackgroundJob, IHostedService> CreateHostedServiceFactory(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedService`1 : RecurringHostedServiceBase {
    private ILogger`1<RecurringBackgroundJobHostedService`1<TJob>> _logger;
    private IMainDom _mainDom;
    private IRuntimeState _runtimeState;
    private IServerRoleAccessor _serverRoleAccessor;
    private IEventAggregator _eventAggregator;
    private IRecurringBackgroundJob _job;
    public RecurringBackgroundJobHostedService`1(IRuntimeState runtimeState, ILogger`1<RecurringBackgroundJobHostedService`1<TJob>> logger, IMainDom mainDom, IServerRoleAccessor serverRoleAccessor, IEventAggregator eventAggregator, TJob job);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedService`1/<PerformExecuteAsync>d__7")]
public virtual Task PerformExecuteAsync(object state);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedService`1/<StartAsync>d__8")]
public virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedService`1/<StopAsync>d__9")]
public virtual Task StopAsync(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_0(object sender, EventArgs e);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__1(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedServiceRunner : object {
    private ILogger`1<RecurringBackgroundJobHostedServiceRunner> _logger;
    private List`1<IRecurringBackgroundJob> _jobs;
    private Func`2<IRecurringBackgroundJob, IHostedService> _jobFactory;
    private List`1<NamedServiceJob> _hostedServices;
    public RecurringBackgroundJobHostedServiceRunner(ILogger`1<RecurringBackgroundJobHostedServiceRunner> logger, IEnumerable`1<IRecurringBackgroundJob> jobs, Func`2<IRecurringBackgroundJob, IHostedService> jobFactory);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedServiceRunner/<StartAsync>d__5")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.BackgroundJobs.RecurringBackgroundJobHostedServiceRunner/<StopAsync>d__6")]
public sealed virtual Task StopAsync(CancellationToken stoppingToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator : object {
    private static string ConnectionStringObjectName;
    private static string UmbracoConnectionStringPath;
    private static string UmbracoConnectionStringProviderNamePath;
    private static string CmsObjectPath;
    private static string GlobalIdPath;
    private static string DisableRedirectUrlTrackingPath;
    private JsonDocumentOptions _jsonDocumentOptions;
    private IConfiguration _configuration;
    private ILogger`1<JsonConfigManipulator> _logger;
    private SemaphoreSlim _lock;
    public JsonConfigManipulator(IConfiguration configuration, ILogger`1<JsonConfigManipulator> logger);
    public sealed virtual void RemoveConnectionString();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<RemoveConnectionStringAsync>d__12")]
public sealed virtual Task RemoveConnectionStringAsync();
    public sealed virtual void SaveConnectionString(string connectionString, string providerName);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<SaveConnectionStringAsync>d__14")]
public sealed virtual Task SaveConnectionStringAsync(string connectionString, string providerName);
    public sealed virtual void SaveConfigValue(string key, object value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<SaveConfigValueAsync>d__16")]
public sealed virtual Task SaveConfigValueAsync(string itemPath, object value);
    public sealed virtual void SaveDisableRedirectUrlTracking(bool disable);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<SaveDisableRedirectUrlTrackingAsync>d__18")]
public sealed virtual Task SaveDisableRedirectUrlTrackingAsync(bool disable);
    public sealed virtual void SetGlobalId(string id);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<SetGlobalIdAsync>d__20")]
public sealed virtual Task SetGlobalIdAsync(string id);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<CreateOrUpdateConfigValueAsync>d__21")]
private Task CreateOrUpdateConfigValueAsync(string itemPath, object value);
    private static void CreateOrUpdateJsonNode(JsonNode node, string itemPath, object value);
    private static void RemoveJsonNode(JsonNode node, string key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<SaveJsonAsync>d__24")]
private Task SaveJsonAsync(JsonConfigurationProvider provider, JsonNode jsonNode);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Configuration.JsonConfigManipulator/<GetJsonNodeAsync>d__25")]
private Task`1<JsonNode> GetJsonNodeAsync(JsonConfigurationProvider provider);
    [NullableContextAttribute("2")]
private JsonConfigurationProvider GetJsonConfigurationProvider(string requiredKey);
    [NullableContextAttribute("2")]
private static JsonNode FindChildNode(JsonNode node, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.DeliveryApi.ApiMediaWithCropsBuilder : ApiMediaWithCropsBuilderBase`1<IApiMediaWithCrops> {
    public ApiMediaWithCropsBuilder(IApiMediaBuilder apiMediaBuilder, IPublishedValueFallback publishedValueFallback);
    protected virtual IApiMediaWithCrops Create(IPublishedContent media, IApiMedia inner, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.DeliveryApi.ApiMediaWithCropsBuilderBase`1 : object {
    private IApiMediaBuilder _apiMediaBuilder;
    private IPublishedValueFallback _publishedValueFallback;
    protected ApiMediaWithCropsBuilderBase`1(IApiMediaBuilder apiMediaBuilder, IPublishedValueFallback publishedValueFallback);
    protected abstract virtual T Create(IPublishedContent media, IApiMedia inner, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops);
    public sealed virtual T Build(MediaWithCrops media);
    public sealed virtual T Build(IPublishedContent media);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.DeliveryApi.ApiMediaWithCropsResponseBuilder : ApiMediaWithCropsBuilderBase`1<IApiMediaWithCropsResponse> {
    public ApiMediaWithCropsResponseBuilder(IApiMediaBuilder apiMediaBuilder, IPublishedValueFallback publishedValueFallback);
    protected virtual IApiMediaWithCropsResponse Create(IPublishedContent media, IApiMedia inner, ImageFocalPoint focalPoint, IEnumerable`1<ImageCrop> crops);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.DeliveryApi.ApiMediaWithCropsResponseBuilder/<PathSegments>d__2")]
private IEnumerable`1<string> PathSegments(IPublishedContent media);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.DeliveryApi.ApiRichTextElementParser : ApiRichTextParserBase {
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IApiElementBuilder _apiElementBuilder;
    private ILogger`1<ApiRichTextElementParser> _logger;
    private static string TextNodeName;
    private static string CommentNodeName;
    public ApiRichTextElementParser(IApiContentRouteBuilder apiContentRouteBuilder, IApiMediaUrlProvider mediaUrlProvider, IPublishedSnapshotAccessor publishedSnapshotAccessor, IApiElementBuilder apiElementBuilder, ILogger`1<ApiRichTextElementParser> logger);
    [ObsoleteAttribute("Please use the overload that accepts RichTextBlockModel. Will be removed in V15.")]
public sealed virtual IRichTextElement Parse(string html);
    [NullableContextAttribute("2")]
public sealed virtual IRichTextElement Parse(string html, RichTextBlockModel richTextBlockModel);
    private IRichTextElement ParseRecursively(HtmlNode current, IPublishedSnapshot publishedSnapshot);
    private RichTextTextElement ParseTextElement(HtmlNode element);
    private RichTextRootElement ParseRootElement(HtmlNode element, IPublishedSnapshot publishedSnapshot, RichTextBlockModel richTextBlockModel);
    private RichTextGenericElement ParseGenericElement(HtmlNode element, IPublishedSnapshot publishedSnapshot);
    private T ParseElement(HtmlNode element, IPublishedSnapshot publishedSnapshot, Func`4<string, Dictionary`2<string, object>, IRichTextElement[], T> createElement);
    private string TagName(HtmlNode htmlNode);
    private void ReplaceLocalLinks(IPublishedSnapshot publishedSnapshot, Dictionary`2<string, object> attributes);
    private void ReplaceLocalImages(IPublishedSnapshot publishedSnapshot, string tag, Dictionary`2<string, object> attributes);
    private void CleanUpBlocks(string tag, Dictionary`2<string, object> attributes);
    private static void SanitizeAttributes(Dictionary`2<string, object> attributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.DeliveryApi.ApiRichTextMarkupParser : ApiRichTextParserBase {
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private ILogger`1<ApiRichTextMarkupParser> _logger;
    public ApiRichTextMarkupParser(IApiContentRouteBuilder apiContentRouteBuilder, IApiMediaUrlProvider mediaUrlProvider, IPublishedSnapshotAccessor publishedSnapshotAccessor, ILogger`1<ApiRichTextMarkupParser> logger);
    public sealed virtual string Parse(string html);
    private void ReplaceLocalLinks(HtmlDocument doc, IPublishedSnapshot publishedSnapshot);
    private void ReplaceLocalImages(HtmlDocument doc, IPublishedSnapshot publishedSnapshot);
    private void CleanUpBlocks(HtmlDocument doc);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.DeliveryApi.ApiRichTextParserBase : object {
    private IApiContentRouteBuilder _apiContentRouteBuilder;
    private IApiMediaUrlProvider _apiMediaUrlProvider;
    protected ApiRichTextParserBase(IApiContentRouteBuilder apiContentRouteBuilder, IApiMediaUrlProvider apiMediaUrlProvider);
    protected void ReplaceLocalLinks(IPublishedSnapshot publishedSnapshot, string href, string type, Action`1<IApiContentRoute> handleContentRoute, Action`1<string> handleMediaUrl, Action handleInvalidLink);
    private ReplaceStatus ReplaceLocalLink(IPublishedSnapshot publishedSnapshot, string href, string type, Action`1<IApiContentRoute> handleContentRoute, Action`1<string> handleMediaUrl);
    private ReplaceStatus ReplaceLegacyLocalLink(IPublishedSnapshot publishedSnapshot, string href, Action`1<IApiContentRoute> handleContentRoute, Action`1<string> handleMediaUrl);
    protected void ReplaceLocalImages(IPublishedSnapshot publishedSnapshot, string udi, Action`1<string> handleMediaUrl);
    [GeneratedRegexAttribute("{localLink:(?<udi>umb:.+)}")]
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
private static Regex LegacyLocalLinkRegex();
    [GeneratedRegexAttribute("{localLink:(?<guid>.+)}")]
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
private static Regex LocalLinkRegex();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.DeliveryApi.IApiMediaWithCropsBuilder {
    public abstract virtual IApiMediaWithCrops Build(MediaWithCrops media);
    public abstract virtual IApiMediaWithCrops Build(IPublishedContent media);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.DeliveryApi.IApiMediaWithCropsResponseBuilder {
    public abstract virtual IApiMediaWithCropsResponse Build(IPublishedContent media);
}
[ExtensionAttribute]
public static class Umbraco.Cms.Infrastructure.DependencyInjection.UmbracoBuilder_TelemetryProviders : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IUmbracoBuilder AddTelemetryProviders(IUmbracoBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Cms.Infrastructure.DependencyInjection.UmbracoBuilderExtensions : object {
    [ExtensionAttribute]
public static IUmbracoBuilder AddCoreInitialServices(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddPropertyIndexValueFactories(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddLogging(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddMainDom(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddCoreNotifications(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddDeliveryApiCoreServices(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddDistributedCache(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerRegistrar(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerRegistrar(IUmbracoBuilder builder, Func`2<IServiceProvider, IServerRoleAccessor> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerRegistrar(IUmbracoBuilder builder, IServerRoleAccessor registrar);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerMessenger(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerMessenger(IUmbracoBuilder builder, Func`2<IServiceProvider, IServerMessenger> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetServerMessenger(IUmbracoBuilder builder, IServerMessenger registrar);
    [ExtensionAttribute]
public static IUmbracoBuilder AddExamine(IUmbracoBuilder builder);
    [ExtensionAttribute]
internal static IUmbracoBuilder AddFileSystems(IUmbracoBuilder builder);
    [ExtensionAttribute]
internal static IUmbracoBuilder AddInstaller(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddCoreMappingProfiles(IUmbracoBuilder builder);
    [ExtensionAttribute]
internal static IUmbracoBuilder AddRepositories(IUmbracoBuilder builder);
    [ExtensionAttribute]
internal static IUmbracoBuilder AddServices(IUmbracoBuilder builder);
    private static PackagesRepository CreatePackageRepository(IServiceProvider factory, string packageRepoFileName);
    private static IPackageDataInstallation CreatePackageDataInstallation(IServiceProvider factory);
    private static LocalizedTextServiceFileSources CreateLocalizedTextServiceFileSourcesFactory(IServiceProvider container);
    [ExtensionAttribute]
public static IUmbracoBuilder SetCultureDictionaryFactory(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetDefaultViewContentProvider(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetCultureDictionaryFactory(IUmbracoBuilder builder, Func`2<IServiceProvider, ICultureDictionaryFactory> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetCultureDictionaryFactory(IUmbracoBuilder builder, ICultureDictionaryFactory factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetPublishedContentModelFactory(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetPublishedContentModelFactory(IUmbracoBuilder builder, Func`2<IServiceProvider, IPublishedModelFactory> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetPublishedContentModelFactory(IUmbracoBuilder builder, IPublishedModelFactory factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetShortStringHelper(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetShortStringHelper(IUmbracoBuilder builder, Func`2<IServiceProvider, IShortStringHelper> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetShortStringHelper(IUmbracoBuilder builder, IShortStringHelper helper);
    [ExtensionAttribute]
public static IUmbracoBuilder SetMediaFileSystem(IUmbracoBuilder builder, Func`2<IServiceProvider, IFileSystem> filesystemFactory);
    [ExtensionAttribute]
public static IUmbracoBuilder ConfigureFileSystems(IUmbracoBuilder builder, Action`2<IServiceProvider, FileSystems> configure);
    [ExtensionAttribute]
public static IUmbracoBuilder SetLogViewer(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetLogViewer(IUmbracoBuilder builder, Func`2<IServiceProvider, ILogViewer> factory);
    [ExtensionAttribute]
public static IUmbracoBuilder SetLogViewer(IUmbracoBuilder builder, ILogViewer viewer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.DistributedLocking.DefaultDistributedLockingMechanismFactory : object {
    private IEnumerable`1<IDistributedLockingMechanism> _distributedLockingMechanisms;
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    private IDistributedLockingMechanism _distributedLockingMechanism;
    private bool _initialized;
    private object _lock;
    public IDistributedLockingMechanism DistributedLockingMechanism { get; }
    public DefaultDistributedLockingMechanismFactory(IOptionsMonitor`1<GlobalSettings> globalSettings, IEnumerable`1<IDistributedLockingMechanism> distributedLockingMechanisms);
    public sealed virtual IDistributedLockingMechanism get_DistributedLockingMechanism();
    private void EnsureInitialized();
    private IDistributedLockingMechanism Initialize();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Examine.BaseValueSetBuilder`1 : object {
    private PropertyEditorCollection _propertyEditors;
    [CompilerGeneratedAttribute]
private bool <PublishedValuesOnly>k__BackingField;
    protected bool PublishedValuesOnly { get; }
    protected BaseValueSetBuilder`1(PropertyEditorCollection propertyEditors, bool publishedValuesOnly);
    [CompilerGeneratedAttribute]
protected bool get_PublishedValuesOnly();
    public abstract virtual IEnumerable`1<ValueSet> GetValueSets(TContent[] content);
    protected void AddPropertyValue(IProperty property, string culture, string segment, IDictionary`2<string, IEnumerable`1<object>> values, IEnumerable`1<string> availableCultures, IDictionary`2<Guid, IContentType> contentTypeDictionary);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.ContentIndexPopulator : IndexPopulator`1<IUmbracoContentIndex> {
    private IContentService _contentService;
    private IValueSetBuilder`1<IContent> _contentValueSetBuilder;
    private ILogger`1<ContentIndexPopulator> _logger;
    private Nullable`1<int> _parentId;
    private bool _publishedValuesOnly;
    private IUmbracoDatabaseFactory _umbracoDatabaseFactory;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IQuery`1<IContent> _publishedQuery;
    private IQuery`1<IContent> PublishedQuery { get; }
    public ContentIndexPopulator(ILogger`1<ContentIndexPopulator> logger, IContentService contentService, IUmbracoDatabaseFactory umbracoDatabaseFactory, IContentValueSetBuilder contentValueSetBuilder);
    public ContentIndexPopulator(ILogger`1<ContentIndexPopulator> logger, bool publishedValuesOnly, Nullable`1<int> parentId, IContentService contentService, IUmbracoDatabaseFactory umbracoDatabaseFactory, IValueSetBuilder`1<IContent> contentValueSetBuilder);
    private IQuery`1<IContent> get_PublishedQuery();
    public virtual bool IsRegistered(IUmbracoContentIndex index);
    protected virtual void PopulateIndexes(IReadOnlyList`1<IIndex> indexes);
    protected void IndexAllContent(int contentParentId, int pageIndex, int pageSize, IReadOnlyList`1<IIndex> indexes);
    protected void IndexPublishedContent(int contentParentId, int pageIndex, int pageSize, IReadOnlyList`1<IIndex> indexes);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.ContentValueSetBuilder : BaseValueSetBuilder`1<IContent> {
    private static Object[] NoValue;
    private static Object[] YesValue;
    private ICoreScopeProvider _scopeProvider;
    private IShortStringHelper _shortStringHelper;
    private UrlSegmentProviderCollection _urlSegmentProviders;
    private IUserService _userService;
    private ILocalizationService _localizationService;
    private IContentTypeService _contentTypeService;
    private ILogger`1<ContentValueSetBuilder> _logger;
    public ContentValueSetBuilder(PropertyEditorCollection propertyEditors, UrlSegmentProviderCollection urlSegmentProviders, IUserService userService, IShortStringHelper shortStringHelper, ICoreScopeProvider scopeProvider, bool publishedValuesOnly, ILocalizationService localizationService, IContentTypeService contentTypeService, ILogger`1<ContentValueSetBuilder> logger);
    private static ContentValueSetBuilder();
    public virtual IEnumerable`1<ValueSet> GetValueSets(IContent[] content);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Examine.ContentValueSetBuilder/<GetValueSetsEnumerable>d__11")]
private IEnumerable`1<ValueSet> GetValueSetsEnumerable(IContent[] content, Dictionary`2<int, IProfile> creatorIds, Dictionary`2<int, IProfile> writerIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.ContentValueSetValidator : ValueSetValidator {
    private static string PathKey;
    private static IEnumerable`1<string> ValidCategories;
    [NullableAttribute("2")]
private IPublicAccessService _publicAccessService;
    [NullableAttribute("2")]
private IScopeProvider _scopeProvider;
    [CompilerGeneratedAttribute]
private bool <PublishedValuesOnly>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SupportProtectedContent>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <ParentId>k__BackingField;
    protected IEnumerable`1<string> ValidIndexCategories { get; }
    public bool PublishedValuesOnly { get; }
    public bool SupportProtectedContent { get; }
    public Nullable`1<int> ParentId { get; }
    public ContentValueSetValidator(bool publishedValuesOnly, Nullable`1<int> parentId, IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("Use the overload accepting includeFields and excludeFields instead. This overload will be removed in Umbraco 14.")]
public ContentValueSetValidator(bool publishedValuesOnly, bool supportProtectedContent, IPublicAccessService publicAccessService, IScopeProvider scopeProvider, Nullable`1<int> parentId, IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("This constructor is obsolete, the IScopeProvider will change to Infrastructure.Scoping.ScopeProvider instead, this will be removed in Umbraco 14.")]
public ContentValueSetValidator(bool publishedValuesOnly, bool supportProtectedContent, IPublicAccessService publicAccessService, IScopeProvider scopeProvider, Nullable`1<int> parentId, IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes, IEnumerable`1<string> includeFields, IEnumerable`1<string> excludeFields);
    private static ContentValueSetValidator();
    protected virtual IEnumerable`1<string> get_ValidIndexCategories();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_PublishedValuesOnly();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_SupportProtectedContent();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_ParentId();
    public sealed virtual bool ValidatePath(string path, string category);
    public sealed virtual bool ValidateRecycleBin(string path, string category);
    public sealed virtual bool ValidateProtectedContent(string path, string category);
    public virtual ValueSetValidationResult Validate(ValueSet valueSet);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.Examine.Deferred.DeliveryApiContentIndexDeferredBase : object {
    protected static void RemoveFromIndex(int id, IIndex index);
    protected static void RemoveFromIndex(IReadOnlyCollection`1<int> ids, IIndex index);
    protected static void RemoveFromIndex(IReadOnlyCollection`1<string> ids, IIndex index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.Deferred.DeliveryApiContentIndexHandleContentChanges : DeliveryApiContentIndexDeferredBase {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<int, TreeChangeTypes>> _changes;
    private IContentService _contentService;
    private DeliveryApiIndexingHandler _deliveryApiIndexingHandler;
    private IDeliveryApiContentIndexValueSetBuilder _deliveryApiContentIndexValueSetBuilder;
    private IDeliveryApiContentIndexHelper _deliveryApiContentIndexHelper;
    private IBackgroundTaskQueue _backgroundTaskQueue;
    public DeliveryApiContentIndexHandleContentChanges(IList`1<KeyValuePair`2<int, TreeChangeTypes>> changes, DeliveryApiIndexingHandler deliveryApiIndexingHandler, IContentService contentService, IDeliveryApiContentIndexValueSetBuilder deliveryApiContentIndexValueSetBuilder, IDeliveryApiContentIndexHelper deliveryApiContentIndexHelper, IBackgroundTaskQueue backgroundTaskQueue);
    public sealed virtual void Execute();
    private void Reindex(IContent content, IIndex index);
    private CulturePublishStatus[] UpdateIndex(IContent content, IIndex index);
    private void ReindexDescendants(IContent content, IIndex index);
    [CompilerGeneratedAttribute]
private Task <Execute>b__7_0(CancellationToken _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.Deferred.DeliveryApiContentIndexHandleContentTypeChanges : DeliveryApiContentIndexDeferredBase {
    private static int PageSize;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IList`1<KeyValuePair`2<int, ContentTypeChangeTypes>> _changes;
    private DeliveryApiIndexingHandler _deliveryApiIndexingHandler;
    private IDeliveryApiContentIndexValueSetBuilder _deliveryApiContentIndexValueSetBuilder;
    private IContentService _contentService;
    private IBackgroundTaskQueue _backgroundTaskQueue;
    private IDeliveryApiCompositeIdHandler _deliveryApiCompositeIdHandler;
    [ObsoleteAttribute("Use the constructor that takes an IDeliveryApiCompositeIdHandler instead, scheduled for removal in v15")]
public DeliveryApiContentIndexHandleContentTypeChanges(IList`1<KeyValuePair`2<int, ContentTypeChangeTypes>> changes, DeliveryApiIndexingHandler deliveryApiIndexingHandler, IDeliveryApiContentIndexValueSetBuilder deliveryApiContentIndexValueSetBuilder, IContentService contentService, IBackgroundTaskQueue backgroundTaskQueue);
    public DeliveryApiContentIndexHandleContentTypeChanges(IList`1<KeyValuePair`2<int, ContentTypeChangeTypes>> changes, DeliveryApiIndexingHandler deliveryApiIndexingHandler, IDeliveryApiContentIndexValueSetBuilder deliveryApiContentIndexValueSetBuilder, IContentService contentService, IBackgroundTaskQueue backgroundTaskQueue, IDeliveryApiCompositeIdHandler deliveryApiCompositeIdHandler);
    public sealed virtual void Execute();
    private void HandleUpdatedContentTypes(IEnumerable`1<int> updatedContentTypesIds, IIndex index);
    private List`1<string> FindIdsForContentType(int contentTypeId, IIndex index);
    [CompilerGeneratedAttribute]
private Task <Execute>b__9_0(CancellationToken _);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ValueTuple`2<int, string> <HandleUpdatedContentTypes>b__10_0(string id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.Deferred.DeliveryApiContentIndexHandlePublicAccessChanges : DeliveryApiContentIndexDeferredBase {
    private IPublicAccessService _publicAccessService;
    private DeliveryApiIndexingHandler _deliveryApiIndexingHandler;
    private IDeliveryApiContentIndexHelper _deliveryApiContentIndexHelper;
    private IBackgroundTaskQueue _backgroundTaskQueue;
    private DeliveryApiSettings _deliveryApiSettings;
    private IContentService _contentService;
    private IDeliveryApiContentIndexValueSetBuilder _deliveryApiContentIndexValueSetBuilder;
    public DeliveryApiContentIndexHandlePublicAccessChanges(IPublicAccessService publicAccessService, DeliveryApiIndexingHandler deliveryApiIndexingHandler, IContentService contentService, IDeliveryApiContentIndexValueSetBuilder deliveryApiContentIndexValueSetBuilder, IDeliveryApiContentIndexHelper deliveryApiContentIndexHelper, DeliveryApiSettings deliveryApiSettings, IBackgroundTaskQueue backgroundTaskQueue);
    public sealed virtual void Execute();
    private void EnsureProtectedContentIsRemovedFromIndex(IIndex index);
    private void EnsureProtectedContentIsUpToDateInIndex(IIndex index);
    private void UpdateIndexWithDescendants(int contentId, IIndex index);
    private bool UpdateIndex(int contentId, IIndex index);
    private bool UpdateIndex(IContent content, IIndex index);
    private List`1<string> FindIndexIdsForContentIds(Int32[] contentIds, IIndex index);
    private Int32[] FindContentIdsForProtectedContent(IIndex index);
    [CompilerGeneratedAttribute]
private Task <Execute>b__8_0(CancellationToken _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeferredActions : object {
    private static int EnlistPriority;
    private List`1<IDeferredAction> _actions;
    public static DeferredActions Get(ICoreScopeProvider scopeProvider);
    public void Add(IDeferredAction action);
    private void Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndexFieldDefinitionBuilder : object {
    private ContentIndexHandlerCollection _indexHandlers;
    private ILogger`1<DeliveryApiContentIndexFieldDefinitionBuilder> _logger;
    public DeliveryApiContentIndexFieldDefinitionBuilder(ContentIndexHandlerCollection indexHandlers, ILogger`1<DeliveryApiContentIndexFieldDefinitionBuilder> logger);
    public sealed virtual FieldDefinitionCollection Build();
    private void AddRequiredFieldDefinitions(ICollection`1<FieldDefinition> fieldDefinitions);
    private void AddContentIndexHandlerFieldDefinitions(ICollection`1<FieldDefinition> fieldDefinitions);
    private static FieldDefinition CreateFieldDefinition(IndexField field);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndexHelper : object {
    private IContentService _contentService;
    private IUmbracoDatabaseFactory _umbracoDatabaseFactory;
    private DeliveryApiSettings _deliveryApiSettings;
    public DeliveryApiContentIndexHelper(IContentService contentService, IUmbracoDatabaseFactory umbracoDatabaseFactory, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings);
    public sealed virtual void EnumerateApplicableDescendantsForContentIndex(int rootContentId, Action`1<IContent[]> actionToPerform);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__3_0(DeliveryApiSettings settings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <EnumerateApplicableDescendantsForContentIndex>b__4_1(IContent descendant);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndexPopulator : IndexPopulator {
    private IDeliveryApiContentIndexValueSetBuilder _deliveryContentIndexValueSetBuilder;
    private IDeliveryApiContentIndexHelper _deliveryApiContentIndexHelper;
    private ILogger`1<DeliveryApiContentIndexPopulator> _logger;
    private DeliveryApiSettings _deliveryApiSettings;
    public DeliveryApiContentIndexPopulator(IDeliveryApiContentIndexValueSetBuilder deliveryContentIndexValueSetBuilder, IDeliveryApiContentIndexHelper deliveryApiContentIndexHelper, ILogger`1<DeliveryApiContentIndexPopulator> logger, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings);
    protected virtual void PopulateIndexes(IReadOnlyList`1<IIndex> indexes);
    public virtual bool IsRegistered(IIndex index);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__4_0(DeliveryApiSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndexValueSetBuilder : object {
    private ContentIndexHandlerCollection _contentIndexHandlerCollection;
    private IContentService _contentService;
    private IPublicAccessService _publicAccessService;
    private ILogger`1<DeliveryApiContentIndexValueSetBuilder> _logger;
    private IDeliveryApiContentIndexFieldDefinitionBuilder _deliveryApiContentIndexFieldDefinitionBuilder;
    private IMemberService _memberService;
    private IDeliveryApiCompositeIdHandler _deliveryApiCompositeIdHandler;
    private ICoreScopeProvider _coreScopeProvider;
    private DeliveryApiSettings _deliveryApiSettings;
    [ObsoleteAttribute("Please use ctor that takes an IDeliveryApiCompositeIdHandler. Scheduled for removal in v15")]
public DeliveryApiContentIndexValueSetBuilder(ContentIndexHandlerCollection contentIndexHandlerCollection, IContentService contentService, IPublicAccessService publicAccessService, ILogger`1<DeliveryApiContentIndexValueSetBuilder> logger, IDeliveryApiContentIndexFieldDefinitionBuilder deliveryApiContentIndexFieldDefinitionBuilder, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings, IMemberService memberService);
    [ObsoleteAttribute("Please use ctor that takes an IDeliveryApiCompositeIdHandler. Scheduled for removal in v15")]
public DeliveryApiContentIndexValueSetBuilder(ContentIndexHandlerCollection contentIndexHandlerCollection, IContentService contentService, IPublicAccessService publicAccessService, ILogger`1<DeliveryApiContentIndexValueSetBuilder> logger, IDeliveryApiContentIndexFieldDefinitionBuilder deliveryApiContentIndexFieldDefinitionBuilder, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings, IMemberService memberService, IDeliveryApiCompositeIdHandler deliveryApiCompositeIdHandle);
    public DeliveryApiContentIndexValueSetBuilder(ContentIndexHandlerCollection contentIndexHandlerCollection, IContentService contentService, IPublicAccessService publicAccessService, ILogger`1<DeliveryApiContentIndexValueSetBuilder> logger, IDeliveryApiContentIndexFieldDefinitionBuilder deliveryApiContentIndexFieldDefinitionBuilder, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings, IMemberService memberService, IDeliveryApiCompositeIdHandler deliveryApiCompositeIdHandler, ICoreScopeProvider coreScopeProvider);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Examine.DeliveryApiContentIndexValueSetBuilder/<GetValueSets>d__12")]
public sealed virtual IEnumerable`1<ValueSet> GetValueSets(IContent[] contents);
    private String[] AvailableCultures(IContent content);
    private String[] PublishedCultures(IContent content);
    private String[] ProtectedAccessValue(IContent content, Boolean& isProtected);
    private void AddContentIndexHandlerFields(IContent content, string culture, FieldDefinitionCollection fieldDefinitions, Dictionary`2<string, IEnumerable`1<object>> indexValues);
    private bool CanIndex(IContent content);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__11_0(DeliveryApiSettings settings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <ProtectedAccessValue>b__15_0(PublicAccessRule r);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.DeliveryApiIndexingHandler : object {
    private ExamineIndexingMainDomHandler _mainDomHandler;
    private IExamineManager _examineManager;
    private ICoreScopeProvider _scopeProvider;
    private ILogger`1<DeliveryApiIndexingHandler> _logger;
    private DeliveryApiSettings _deliveryApiSettings;
    private Lazy`1<bool> _enabled;
    private IContentService _contentService;
    private IPublicAccessService _publicAccessService;
    private IDeliveryApiContentIndexValueSetBuilder _deliveryApiContentIndexValueSetBuilder;
    private IDeliveryApiContentIndexHelper _deliveryApiContentIndexHelper;
    private IBackgroundTaskQueue _backgroundTaskQueue;
    public bool Enabled { get; }
    public DeliveryApiIndexingHandler(ExamineIndexingMainDomHandler mainDomHandler, IExamineManager examineManager, ICoreScopeProvider scopeProvider, ILogger`1<DeliveryApiIndexingHandler> logger, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings, IContentService contentService, IPublicAccessService publicAccessService, IDeliveryApiContentIndexValueSetBuilder deliveryApiContentIndexValueSetBuilder, IDeliveryApiContentIndexHelper deliveryApiContentIndexHelper, IBackgroundTaskQueue backgroundTaskQueue);
    public sealed virtual bool get_Enabled();
    public sealed virtual void HandleContentChanges(IList`1<KeyValuePair`2<int, TreeChangeTypes>> changes);
    public sealed virtual void HandleContentTypeChanges(IList`1<KeyValuePair`2<int, ContentTypeChangeTypes>> changes);
    public sealed virtual void HandlePublicAccessChanges();
    private void Execute(IDeferredAction action);
    private bool IsEnabled();
    [NullableContextAttribute("2")]
internal IIndex GetIndex();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__11_0(DeliveryApiSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.ExamineIndexingMainDomHandler : object {
    private IMainDom _mainDom;
    private IProfilingLogger _profilingLogger;
    private IExamineManager _examineManager;
    private ILogger`1<ExamineIndexingMainDomHandler> _logger;
    private Lazy`1<bool> _isMainDom;
    public ExamineIndexingMainDomHandler(IMainDom mainDom, IProfilingLogger profilingLogger, IExamineManager examineManager, ILogger`1<ExamineIndexingMainDomHandler> logger);
    public bool IsMainDom();
    private bool DetectMainDom();
    [CompilerGeneratedAttribute]
private void <DetectMainDom>b__7_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.Examine.ExamineIndexModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HealthStatus>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, object> <ProviderProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanRebuild>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [DataMemberAttribute]
public string HealthStatus { get; public set; }
    [DataMemberAttribute]
public bool IsHealthy { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
public IReadOnlyDictionary`2<string, object> ProviderProperties { get; public set; }
    [DataMemberAttribute]
public bool CanRebuild { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_HealthStatus();
    [CompilerGeneratedAttribute]
public void set_HealthStatus(string value);
    public bool get_IsHealthy();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, object> get_ProviderProperties();
    [CompilerGeneratedAttribute]
public void set_ProviderProperties(IReadOnlyDictionary`2<string, object> value);
    [CompilerGeneratedAttribute]
public bool get_CanRebuild();
    [CompilerGeneratedAttribute]
public void set_CanRebuild(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This will be removed in Umbraco 15. Use IIndexRebuilder instead.")]
public class Umbraco.Cms.Infrastructure.Examine.ExamineIndexRebuilder : object {
    private IBackgroundTaskQueue _backgroundTaskQueue;
    private IExamineManager _examineManager;
    private ILogger`1<ExamineIndexRebuilder> _logger;
    private IMainDom _mainDom;
    private IEnumerable`1<IIndexPopulator> _populators;
    private object _rebuildLocker;
    private IRuntimeState _runtimeState;
    public ExamineIndexRebuilder(IMainDom mainDom, IRuntimeState runtimeState, ILogger`1<ExamineIndexRebuilder> logger, IExamineManager examineManager, IEnumerable`1<IIndexPopulator> populators, IBackgroundTaskQueue backgroundTaskQueue);
    public sealed virtual bool CanRebuild(string indexName);
    public virtual void RebuildIndex(string indexName, Nullable`1<TimeSpan> delay, bool useBackgroundThread);
    public virtual void RebuildIndexes(bool onlyEmptyIndexes, Nullable`1<TimeSpan> delay, bool useBackgroundThread);
    private bool CanRun();
    private void RebuildIndex(string indexName, TimeSpan delay, CancellationToken cancellationToken);
    private void RebuildIndexes(bool onlyEmptyIndexes, TimeSpan delay, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.Examine.ExamineSearcherModel : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [DataMemberAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Examine.ExamineUmbracoIndexingHandler : object {
    private IBackgroundTaskQueue _backgroundTaskQueue;
    private IContentValueSetBuilder _contentValueSetBuilder;
    private Lazy`1<bool> _enabled;
    private IExamineManager _examineManager;
    private ILogger`1<ExamineUmbracoIndexingHandler> _logger;
    private IValueSetBuilder`1<IMedia> _mediaValueSetBuilder;
    private IValueSetBuilder`1<IMember> _memberValueSetBuilder;
    private IPublishedContentValueSetBuilder _publishedContentValueSetBuilder;
    private ICoreScopeProvider _scopeProvider;
    private ExamineIndexingMainDomHandler _mainDomHandler;
    private IPublicAccessService _publicAccessService;
    public bool Enabled { get; }
    public ExamineUmbracoIndexingHandler(ILogger`1<ExamineUmbracoIndexingHandler> logger, ICoreScopeProvider scopeProvider, IExamineManager examineManager, IBackgroundTaskQueue backgroundTaskQueue, IContentValueSetBuilder contentValueSetBuilder, IPublishedContentValueSetBuilder publishedContentValueSetBuilder, IValueSetBuilder`1<IMedia> mediaValueSetBuilder, IValueSetBuilder`1<IMember> memberValueSetBuilder, ExamineIndexingMainDomHandler mainDomHandler, IPublicAccessService publicAccessService);
    public sealed virtual bool get_Enabled();
    public sealed virtual void DeleteIndexForEntity(int entityId, bool keepIfUnpublished);
    public sealed virtual void DeleteIndexForEntities(IReadOnlyCollection`1<int> entityIds, bool keepIfUnpublished);
    public sealed virtual void ReIndexForContent(IContent sender, bool isPublished);
    public sealed virtual void ReIndexForMedia(IMedia sender, bool isPublished);
    public sealed virtual void ReIndexForMember(IMember member);
    public sealed virtual void RemoveProtectedContent();
    public sealed virtual void DeleteDocumentsForContentTypes(IReadOnlyCollection`1<int> removedContentTypes);
    private bool IsEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.GenericIndexDiagnostics : object {
    private static String[] _ignoreProperties;
    private ISet`1<string> _idOnlyFieldSet;
    private IIndex _index;
    public int DocumentCount { get; }
    public int FieldCount { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> Metadata { get; }
    public GenericIndexDiagnostics(IIndex index);
    private static GenericIndexDiagnostics();
    public int get_DocumentCount();
    public int get_FieldCount();
    public sealed virtual IReadOnlyDictionary`2<string, object> get_Metadata();
    public sealed virtual Attempt`1<string> IsHealthy();
    public sealed virtual long GetDocumentCount();
    public sealed virtual IEnumerable`1<string> GetFieldNames();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IBackOfficeExamineSearcher {
    public abstract virtual IEnumerable`1<ISearchResult> Search(string query, UmbracoEntityTypes entityType, int pageSize, long pageIndex, Int64& totalFound, string searchFrom, bool ignoreUserStartNodes);
}
public interface Umbraco.Cms.Infrastructure.Examine.IContentValueSetBuilder {
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IContentValueSetValidator {
    public bool PublishedValuesOnly { get; }
    public bool SupportProtectedContent { get; }
    public Nullable`1<int> ParentId { get; }
    public abstract virtual bool get_PublishedValuesOnly();
    public abstract virtual bool get_SupportProtectedContent();
    public abstract virtual Nullable`1<int> get_ParentId();
    public abstract virtual bool ValidatePath(string path, string category);
    public abstract virtual bool ValidateRecycleBin(string path, string category);
    public abstract virtual bool ValidateProtectedContent(string path, string category);
}
internal interface Umbraco.Cms.Infrastructure.Examine.IDeferredAction {
    public abstract virtual void Execute();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IDeliveryApiContentIndexFieldDefinitionBuilder {
    public abstract virtual FieldDefinitionCollection Build();
}
[NullableContextAttribute("1")]
internal interface Umbraco.Cms.Infrastructure.Examine.IDeliveryApiContentIndexHelper {
    public abstract virtual void EnumerateApplicableDescendantsForContentIndex(int rootContentId, Action`1<IContent[]> actionToPerform);
}
public interface Umbraco.Cms.Infrastructure.Examine.IDeliveryApiContentIndexValueSetBuilder {
}
public interface Umbraco.Cms.Infrastructure.Examine.IIndexDiagnostics {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, object> Metadata { get; }
    public abstract virtual IReadOnlyDictionary`2<string, object> get_Metadata();
    public abstract virtual Attempt`1<string> IsHealthy();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IIndexDiagnosticsFactory {
    public abstract virtual IIndexDiagnostics Create(IIndex index);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IIndexPopulator {
    public abstract virtual bool IsRegistered(IIndex index);
    public abstract virtual void Populate(IIndex[] indexes);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IIndexRebuilder {
    public abstract virtual bool CanRebuild(string indexName);
    public abstract virtual void RebuildIndex(string indexName, Nullable`1<TimeSpan> delay, bool useBackgroundThread);
    public abstract virtual void RebuildIndexes(bool onlyEmptyIndexes, Nullable`1<TimeSpan> delay, bool useBackgroundThread);
}
public class Umbraco.Cms.Infrastructure.Examine.IndexDiagnosticsFactory : object {
    [NullableContextAttribute("1")]
public virtual IIndexDiagnostics Create(IIndex index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Examine.IndexPopulator : object {
    private ConcurrentHashSet`1<string> _registeredIndexes;
    public virtual bool IsRegistered(IIndex index);
    public sealed virtual void Populate(IIndex[] indexes);
    public void RegisterIndex(string indexName);
    protected abstract virtual void PopulateIndexes(IReadOnlyList`1<IIndex> indexes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Examine.IndexPopulator`1 : IndexPopulator {
    public virtual bool IsRegistered(IIndex index);
    public virtual bool IsRegistered(TIndex index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Cms.Infrastructure.Examine.IndexTypes : object {
    public static string Content;
    public static string Media;
    public static string Member;
}
public interface Umbraco.Cms.Infrastructure.Examine.IPublishedContentValueSetBuilder {
}
public interface Umbraco.Cms.Infrastructure.Examine.IUmbracoContentIndex {
}
public interface Umbraco.Cms.Infrastructure.Examine.IUmbracoIndex {
    public bool EnableDefaultEventHandler { get; }
    public bool PublishedValuesOnly { get; }
    public bool SupportProtectedContent { get; }
    public abstract virtual bool get_EnableDefaultEventHandler();
    public abstract virtual bool get_PublishedValuesOnly();
    public abstract virtual bool get_SupportProtectedContent();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IUmbracoIndexConfig {
    public abstract virtual IContentValueSetValidator GetContentValueSetValidator();
    public abstract virtual IContentValueSetValidator GetPublishedContentValueSetValidator();
    public abstract virtual IValueSetValidator GetMemberValueSetValidator();
}
public interface Umbraco.Cms.Infrastructure.Examine.IUmbracoMemberIndex {
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IUmbracoTreeSearcherFields {
    public abstract virtual IEnumerable`1<string> GetBackOfficeFields();
    public abstract virtual IEnumerable`1<string> GetBackOfficeMembersFields();
    public abstract virtual IEnumerable`1<string> GetBackOfficeMediaFields();
    public abstract virtual IEnumerable`1<string> GetBackOfficeDocumentFields();
    public abstract virtual ISet`1<string> GetBackOfficeFieldsToLoad();
    public abstract virtual ISet`1<string> GetBackOfficeMembersFieldsToLoad();
    public abstract virtual ISet`1<string> GetBackOfficeDocumentFieldsToLoad();
    public abstract virtual ISet`1<string> GetBackOfficeMediaFieldsToLoad();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Examine.IValueSetBuilder`1 {
    public abstract virtual IEnumerable`1<ValueSet> GetValueSets(T[] content);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.MediaIndexPopulator : IndexPopulator`1<IUmbracoContentIndex> {
    private ILogger`1<MediaIndexPopulator> _logger;
    private IMediaService _mediaService;
    private IValueSetBuilder`1<IMedia> _mediaValueSetBuilder;
    private Nullable`1<int> _parentId;
    public MediaIndexPopulator(ILogger`1<MediaIndexPopulator> logger, IMediaService mediaService, IValueSetBuilder`1<IMedia> mediaValueSetBuilder);
    public MediaIndexPopulator(ILogger`1<MediaIndexPopulator> logger, Nullable`1<int> parentId, IMediaService mediaService, IValueSetBuilder`1<IMedia> mediaValueSetBuilder);
    protected virtual void PopulateIndexes(IReadOnlyList`1<IIndex> indexes);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.MediaValueSetBuilder : BaseValueSetBuilder`1<IMedia> {
    private ContentSettings _contentSettings;
    private MediaUrlGeneratorCollection _mediaUrlGenerators;
    private IShortStringHelper _shortStringHelper;
    private IContentTypeService _contentTypeService;
    private UrlSegmentProviderCollection _urlSegmentProviders;
    private IUserService _userService;
    public MediaValueSetBuilder(PropertyEditorCollection propertyEditors, UrlSegmentProviderCollection urlSegmentProviders, MediaUrlGeneratorCollection mediaUrlGenerators, IUserService userService, IShortStringHelper shortStringHelper, IOptions`1<ContentSettings> contentSettings, IContentTypeService contentTypeService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Examine.MediaValueSetBuilder/<GetValueSets>d__7")]
public virtual IEnumerable`1<ValueSet> GetValueSets(IMedia[] media);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.MemberIndexPopulator : IndexPopulator`1<IUmbracoMemberIndex> {
    private IMemberService _memberService;
    private IValueSetBuilder`1<IMember> _valueSetBuilder;
    public MemberIndexPopulator(IMemberService memberService, IValueSetBuilder`1<IMember> valueSetBuilder);
    protected virtual void PopulateIndexes(IReadOnlyList`1<IIndex> indexes);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Examine.MemberValueSetBuilder : BaseValueSetBuilder`1<IMember> {
    private IContentTypeService _contentTypeService;
    public MemberValueSetBuilder(PropertyEditorCollection propertyEditors, IContentTypeService contentTypeService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Examine.MemberValueSetBuilder/<GetValueSets>d__2")]
public virtual IEnumerable`1<ValueSet> GetValueSets(IMember[] members);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.MemberValueSetValidator : ValueSetValidator {
    public static String[] DefaultMemberIndexFields;
    private static IEnumerable`1<string> _validCategories;
    protected IEnumerable`1<string> ValidIndexCategories { get; }
    public MemberValueSetValidator(IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes);
    public MemberValueSetValidator(IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes, IEnumerable`1<string> includeFields, IEnumerable`1<string> excludeFields);
    private static MemberValueSetValidator();
    protected virtual IEnumerable`1<string> get_ValidIndexCategories();
}
public class Umbraco.Cms.Infrastructure.Examine.NoopBackOfficeExamineSearcher : object {
    [NullableContextAttribute("1")]
public sealed virtual IEnumerable`1<ISearchResult> Search(string query, UmbracoEntityTypes entityType, int pageSize, long pageIndex, Int64& totalFound, string searchFrom, bool ignoreUserStartNodes);
}
public class Umbraco.Cms.Infrastructure.Examine.PublishedContentIndexPopulator : ContentIndexPopulator {
    [NullableContextAttribute("1")]
public PublishedContentIndexPopulator(ILogger`1<PublishedContentIndexPopulator> logger, IContentService contentService, IUmbracoDatabaseFactory umbracoDatabaseFactory, IPublishedContentValueSetBuilder contentValueSetBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.RebuildOnStartupHandler : object {
    private static bool _isReady;
    private static bool _isReadSet;
    [NullableAttribute("2")]
private static object _isReadyLock;
    private IRuntimeState _runtimeState;
    private ISyncBootStateAccessor _syncBootStateAccessor;
    private IIndexRebuilder _indexRebuilder;
    [ObsoleteAttribute("Use non-obsolete constructor. This is scheduled for removal in Umbraco 15.")]
public RebuildOnStartupHandler(ISyncBootStateAccessor syncBootStateAccessor, ExamineIndexRebuilder backgroundIndexRebuilder, IRuntimeState runtimeState);
    [ObsoleteAttribute("Use non-obsolete constructor. This is scheduled for removal in Umbraco 15.")]
public RebuildOnStartupHandler(ISyncBootStateAccessor syncBootStateAccessor, ExamineIndexRebuilder backgroundIndexRebuilder, IIndexRebuilder indexRebuilder, IRuntimeState runtimeState);
    public RebuildOnStartupHandler(ISyncBootStateAccessor syncBootStateAccessor, IIndexRebuilder indexRebuilder, IRuntimeState runtimeState);
    public sealed virtual void Handle(UmbracoRequestBeginNotification notification);
    [CompilerGeneratedAttribute]
private bool <Handle>b__9_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Cms.Infrastructure.Examine.UmbracoExamineFieldNames : object {
    public static string IndexPathFieldName;
    public static string NodeKeyFieldName;
    public static string UmbracoFileFieldName;
    public static string IconFieldName;
    public static string PublishedFieldName;
    public static string RawFieldPrefix;
    public static string VariesByCultureFieldName;
    public static string NodeNameFieldName;
    public static string ItemIdFieldName;
    public static string CategoryFieldName;
    public static string ItemTypeFieldName;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoFieldDefinitionCollection : FieldDefinitionCollection {
    public static FieldDefinition[] UmbracoIndexFieldDefinitions;
    private static UmbracoFieldDefinitionCollection();
    public virtual bool TryGetValue(string fieldName, FieldDefinition& fieldDefinition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Examine.UmbracoIndexConfig : object {
    [CompilerGeneratedAttribute]
private IPublicAccessService <PublicAccessService>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopeProvider <ScopeProvider>k__BackingField;
    protected IPublicAccessService PublicAccessService { get; }
    protected IScopeProvider ScopeProvider { get; }
    public UmbracoIndexConfig(IPublicAccessService publicAccessService, IScopeProvider scopeProvider);
    [CompilerGeneratedAttribute]
protected IPublicAccessService get_PublicAccessService();
    [CompilerGeneratedAttribute]
protected IScopeProvider get_ScopeProvider();
    public sealed virtual IContentValueSetValidator GetContentValueSetValidator();
    public sealed virtual IContentValueSetValidator GetPublishedContentValueSetValidator();
    public sealed virtual IValueSetValidator GetMemberValueSetValidator();
}
public class Umbraco.Cms.Infrastructure.Examine.ValueSetValidator : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <IncludeItemTypes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExcludeItemTypes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <IncludeFields>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ExcludeFields>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IEnumerable`1<string> <ValidIndexCategories>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> IncludeItemTypes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ExcludeItemTypes { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> IncludeFields { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IEnumerable`1<string> ExcludeFields { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected IEnumerable`1<string> ValidIndexCategories { get; }
    public ValueSetValidator(IEnumerable`1<string> includeItemTypes, IEnumerable`1<string> excludeItemTypes, IEnumerable`1<string> includeFields, IEnumerable`1<string> excludeFields);
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_IncludeItemTypes();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ExcludeItemTypes();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_IncludeFields();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_ExcludeFields();
    [CompilerGeneratedAttribute]
protected virtual IEnumerable`1<string> get_ValidIndexCategories();
    [NullableContextAttribute("1")]
public virtual ValueSetValidationResult Validate(ValueSet valueSet);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Extensions.DeliveryApiBlockReferenceExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static ApiBlockItem CreateApiBlockItem(IBlockReference`2<IPublishedElement, IPublishedElement> blockItem, IApiElementBuilder apiElementBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Extensions.EmailMessageExtensions : object {
    [ExtensionAttribute]
public static MimeMessage ToMimeMessage(EmailMessage mailMessage, string configuredFromAddress);
    [ExtensionAttribute]
public static NotificationEmailModel ToNotificationEmail(EmailMessage emailMessage, string configuredFromAddress);
    private static void AddAddresses(MimeMessage message, String[] addresses, Func`2<MimeMessage, InternetAddressList> addressListGetter, bool throwIfNoneValid);
    [NullableContextAttribute("2")]
private static NotificationEmailAddress ToNotificationAddress(string address);
    [NullableContextAttribute("2")]
private static IEnumerable`1<NotificationEmailAddress> GetNotificationAddresses(IEnumerable`1<string> addresses);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Factories.Installer.DatabaseSettingsFactory : object {
    private IEnumerable`1<IDatabaseProviderMetadata> _databaseProviderMetadata;
    private IOptionsMonitor`1<ConnectionStrings> _connectionStrings;
    private IUmbracoMapper _mapper;
    public DatabaseSettingsFactory(IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata, IOptionsMonitor`1<ConnectionStrings> connectionStrings, IUmbracoMapper mapper);
    public sealed virtual ICollection`1<DatabaseSettingsModel> GetDatabaseSettings();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.HealthChecks.MarkdownToHtmlConverter : object {
    public sealed virtual string ToHtml(HealthCheckResults results, HealthCheckNotificationVerbosity verbosity);
    private string ApplyHtmlHighlighting(string html);
    private string ApplyHtmlHighlightingForStatus(string html, StatusResultType status, string color);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.HostedServices.BackgroundTaskQueue : object {
    private SemaphoreSlim _signal;
    private ConcurrentQueue`1<Func`2<CancellationToken, Task>> _workItems;
    public sealed virtual void QueueBackgroundWorkItem(Func`2<CancellationToken, Task> workItem);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.HostedServices.BackgroundTaskQueue/<DequeueAsync>d__3")]
public sealed virtual Task`1<Func`2<CancellationToken, Task>> DequeueAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.HostedServices.IBackgroundTaskQueue {
    public abstract virtual void QueueBackgroundWorkItem(Func`2<CancellationToken, Task> workItem);
    public abstract virtual Task`1<Func`2<CancellationToken, Task>> DequeueAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.HostedServices.QueuedHostedService : BackgroundService {
    private ILogger`1<QueuedHostedService> _logger;
    [CompilerGeneratedAttribute]
private IBackgroundTaskQueue <TaskQueue>k__BackingField;
    public IBackgroundTaskQueue TaskQueue { get; }
    public QueuedHostedService(IBackgroundTaskQueue taskQueue, ILogger`1<QueuedHostedService> logger);
    [CompilerGeneratedAttribute]
public IBackgroundTaskQueue get_TaskQueue();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.HostedServices.QueuedHostedService/<StopAsync>d__5")]
public virtual Task StopAsync(CancellationToken stoppingToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.HostedServices.QueuedHostedService/<ExecuteAsync>d__6")]
protected virtual Task ExecuteAsync(CancellationToken stoppingToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.HostedServices.QueuedHostedService/<BackgroundProcessing>d__7")]
private Task BackgroundProcessing(CancellationToken stoppingToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.HostedServices.RecurringHostedServiceBase : object {
    protected static TimeSpan DefaultDelay;
    private TimeSpan _delay;
    [NullableAttribute("2")]
private ILogger _logger;
    private bool _disposedValue;
    private TimeSpan _period;
    [NullableAttribute("2")]
private Timer _timer;
    [NullableContextAttribute("2")]
protected RecurringHostedServiceBase(ILogger logger, TimeSpan period, TimeSpan delay);
    private static RecurringHostedServiceBase();
    public sealed virtual void Dispose();
    protected static TimeSpan GetDelay(string firstRunTime, ICronTabParser cronTabParser, ILogger logger, TimeSpan defaultDelay);
    internal static TimeSpan GetDelay(string firstRunTime, ICronTabParser cronTabParser, ILogger logger, DateTime now, TimeSpan defaultDelay);
    public virtual Task StartAsync(CancellationToken cancellationToken);
    public virtual Task StopAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.HostedServices.RecurringHostedServiceBase/<ExecuteAsync>d__12")]
public virtual void ExecuteAsync(object state);
    public abstract virtual Task PerformExecuteAsync(object state);
    protected void ChangePeriod(TimeSpan newPeriod);
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.FilePermissionHelper : object {
    private GlobalSettings _globalSettings;
    private IHostingEnvironment _hostingEnvironment;
    private IIOHelper _ioHelper;
    private String[] _packagesPermissionsDirs;
    private String[] _permissionDirs;
    private String[] _permissionFiles;
    private string _basePath;
    public FilePermissionHelper(IOptions`1<GlobalSettings> globalSettings, IIOHelper ioHelper, IHostingEnvironment hostingEnvironment);
    public sealed virtual bool RunFilePermissionTestSuite(Dictionary`2& report);
    private bool EnsureDirectories(String[] dirs, IEnumerable`1& errors, bool writeCausesRestart);
    private bool EnsureFiles(String[] files, IEnumerable`1& errors);
    private bool EnsureCanCreateSubDirectory(string dir, IEnumerable`1& errors);
    private bool EnsureCanCreateSubDirectories(IEnumerable`1<string> dirs, IEnumerable`1& errors);
    private bool TryCreateSubDirectory(string dir);
    private bool TryAccessDirectory(string dirPath, bool canWrite);
    private bool HasWritePermission(string path);
    private bool TryWriteFile(string file);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.InstallHelper : object {
    private DatabaseBuilder _databaseBuilder;
    private ILogger`1<InstallHelper> _logger;
    private IUmbracoVersion _umbracoVersion;
    private IOptionsMonitor`1<ConnectionStrings> _connectionStrings;
    private IInstallationService _installationService;
    private ICookieManager _cookieManager;
    private IUserAgentProvider _userAgentProvider;
    private IUmbracoDatabaseFactory _umbracoDatabaseFactory;
    private IFireAndForgetRunner _fireAndForgetRunner;
    private IEnumerable`1<IDatabaseProviderMetadata> _databaseProviderMetadata;
    private bool IsBrandNewInstall { get; }
    public InstallHelper(DatabaseBuilder databaseBuilder, ILogger`1<InstallHelper> logger, IUmbracoVersion umbracoVersion, IOptionsMonitor`1<ConnectionStrings> connectionStrings, IInstallationService installationService, ICookieManager cookieManager, IUserAgentProvider userAgentProvider, IUmbracoDatabaseFactory umbracoDatabaseFactory, IFireAndForgetRunner fireAndForgetRunner, IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Install.InstallHelper/<SetInstallStatusAsync>d__11")]
public Task SetInstallStatusAsync(bool isCompleted, string errorMsg);
    private bool get_IsBrandNewInstall();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.PackageMigrationRunner : object {
    private IEventAggregator _eventAggregator;
    private ILogger`1<PackageMigrationRunner> _logger;
    private IKeyValueService _keyValueService;
    private IMigrationPlanExecutor _migrationPlanExecutor;
    private Dictionary`2<string, PackageMigrationPlan> _packageMigrationPlans;
    private PendingPackageMigrations _pendingPackageMigrations;
    private IProfilingLogger _profilingLogger;
    private ICoreScopeProvider _scopeProvider;
    public PackageMigrationRunner(IProfilingLogger profilingLogger, ICoreScopeProvider scopeProvider, PendingPackageMigrations pendingPackageMigrations, PackageMigrationPlanCollection packageMigrationPlans, IMigrationPlanExecutor migrationPlanExecutor, IKeyValueService keyValueService, IEventAggregator eventAggregator, ILogger`1<PackageMigrationRunner> logger);
    public IEnumerable`1<ExecutedMigrationPlan> RunPackageMigrationsIfPending(string packageName);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Install.PackageMigrationRunner/<RunPendingPackageMigrations>d__10")]
public Task`1<Attempt`2<bool, PackageMigrationOperationStatus>> RunPendingPackageMigrations(string packageName);
    public IEnumerable`1<ExecutedMigrationPlan> RunPackagePlans(IEnumerable`1<string> plansToRun);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.PremigrationUpgrader : object {
    private DatabaseBuilder _databaseBuilder;
    private IProfilingLogger _profilingLogger;
    private IRuntimeState _runtimeState;
    private IUmbracoDatabaseFactory _umbracoDatabaseFactory;
    private IKeyValueService _keyValueService;
    public PremigrationUpgrader(IProfilingLogger profilingLogger, DatabaseBuilder databaseBuilder, IRuntimeState runtimeState, IUmbracoDatabaseFactory umbracoDatabaseFactory, IKeyValueService keyValueService);
    public sealed virtual Task HandleAsync(RuntimePremigrationsUpgradeNotification notification, CancellationToken cancellationToken);
    private bool HasMissingPremigrations(UmbracoPremigrationPlan umbracoPremigrationPlan);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.UnattendedInstaller : object {
    private IUmbracoDatabaseFactory _databaseFactory;
    private DatabaseSchemaCreatorFactory _databaseSchemaCreatorFactory;
    private IDbProviderFactoryCreator _dbProviderFactoryCreator;
    private IEventAggregator _eventAggregator;
    private ILogger`1<UnattendedInstaller> _logger;
    private IRuntimeState _runtimeState;
    private IOptions`1<UnattendedSettings> _unattendedSettings;
    public UnattendedInstaller(DatabaseSchemaCreatorFactory databaseSchemaCreatorFactory, IEventAggregator eventAggregator, IOptions`1<UnattendedSettings> unattendedSettings, IUmbracoDatabaseFactory databaseFactory, IDbProviderFactoryCreator dbProviderFactoryCreator, ILogger`1<UnattendedInstaller> logger, IRuntimeState runtimeState);
    public sealed virtual Task HandleAsync(RuntimeUnattendedInstallNotification notification, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Install.UnattendedUpgrader : object {
    private DatabaseBuilder _databaseBuilder;
    private PackageMigrationRunner _packageMigrationRunner;
    private IProfilingLogger _profilingLogger;
    private IRuntimeState _runtimeState;
    private IUmbracoVersion _umbracoVersion;
    public UnattendedUpgrader(IProfilingLogger profilingLogger, IUmbracoVersion umbracoVersion, DatabaseBuilder databaseBuilder, IRuntimeState runtimeState, PackageMigrationRunner packageMigrationRunner);
    public sealed virtual Task HandleAsync(RuntimeUnattendedUpgradeNotification notification, CancellationToken cancellationToken);
    private void SetRuntimeError(Exception exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Installer.Steps.CreateUserStep : StepBase {
    private IUserService _userService;
    private DatabaseBuilder _databaseBuilder;
    private IHttpClientFactory _httpClientFactory;
    private SecuritySettings _securitySettings;
    private IOptionsMonitor`1<ConnectionStrings> _connectionStrings;
    private ICookieManager _cookieManager;
    private IBackOfficeUserManager _userManager;
    private IDbProviderFactoryCreator _dbProviderFactoryCreator;
    private IMetricsConsentService _metricsConsentService;
    private IJsonSerializer _jsonSerializer;
    public CreateUserStep(IUserService userService, DatabaseBuilder databaseBuilder, IHttpClientFactory httpClientFactory, IOptions`1<SecuritySettings> securitySettings, IOptionsMonitor`1<ConnectionStrings> connectionStrings, ICookieManager cookieManager, IBackOfficeUserManager userManager, IDbProviderFactoryCreator dbProviderFactoryCreator, IMetricsConsentService metricsConsentService, IJsonSerializer jsonSerializer);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Installer.Steps.CreateUserStep/<ExecuteAsync>d__11")]
public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync(InstallData model);
    public sealed virtual Task`1<bool> RequiresExecutionAsync(InstallData model);
    private InstallState GetInstallState();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Installer.Steps.DatabaseConfigureStep : StepBase {
    private IOptionsMonitor`1<ConnectionStrings> _connectionStrings;
    private DatabaseBuilder _databaseBuilder;
    private ILogger`1<DatabaseConfigureStep> _logger;
    private IUmbracoMapper _mapper;
    public DatabaseConfigureStep(DatabaseBuilder databaseBuilder, IOptionsMonitor`1<ConnectionStrings> connectionStrings, ILogger`1<DatabaseConfigureStep> logger, IUmbracoMapper mapper);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync(InstallData model);
    public sealed virtual Task`1<bool> RequiresExecutionAsync(InstallData model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Installer.Steps.DatabaseInstallStep : StepBase {
    private IRuntimeState _runtime;
    private DatabaseBuilder _databaseBuilder;
    public DatabaseInstallStep(IRuntimeState runtime, DatabaseBuilder databaseBuilder);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync(InstallData _);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync();
    private Task`1<Attempt`1<InstallationResult>> Execute();
    public sealed virtual Task`1<bool> RequiresExecutionAsync(InstallData _);
    public sealed virtual Task`1<bool> RequiresExecutionAsync();
    private Task`1<bool> ShouldExecute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Installer.Steps.DatabaseUpgradeStep : StepBase {
    private DatabaseBuilder _databaseBuilder;
    private IRuntimeState _runtime;
    private ILogger`1<DatabaseUpgradeStep> _logger;
    private IUmbracoVersion _umbracoVersion;
    private IKeyValueService _keyValueService;
    public DatabaseUpgradeStep(DatabaseBuilder databaseBuilder, IRuntimeState runtime, ILogger`1<DatabaseUpgradeStep> logger, IUmbracoVersion umbracoVersion, IKeyValueService keyValueService);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync(InstallData _);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync();
    private Task`1<Attempt`1<InstallationResult>> ExecuteInternalAsync();
    public sealed virtual Task`1<bool> RequiresExecutionAsync(InstallData model);
    public sealed virtual Task`1<bool> RequiresExecutionAsync();
    private Task`1<bool> ShouldExecute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Installer.Steps.RegisterInstallCompleteStep : StepBase {
    private InstallHelper _installHelper;
    public RegisterInstallCompleteStep(InstallHelper installHelper);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync(InstallData _);
    public sealed virtual Task`1<Attempt`1<InstallationResult>> ExecuteAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Installer.Steps.RegisterInstallCompleteStep/<Execute>d__4")]
private Task`1<Attempt`1<InstallationResult>> Execute();
    public sealed virtual Task`1<bool> RequiresExecutionAsync(InstallData _);
    public sealed virtual Task`1<bool> RequiresExecutionAsync();
    private static Task`1<bool> ShouldExecute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Logging.Serilog.UmbracoFileConfiguration : object {
    [CompilerGeneratedAttribute]
private LogEventLevel <RestrictedToMinimumLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private long <FileSizeLimitBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private RollingInterval <RollingInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <FlushToDiskInterval>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RollOnFileSizeLimit>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetainedFileCountLimit>k__BackingField;
    public LogEventLevel RestrictedToMinimumLevel { get; public set; }
    public long FileSizeLimitBytes { get; public set; }
    public RollingInterval RollingInterval { get; public set; }
    public Nullable`1<TimeSpan> FlushToDiskInterval { get; public set; }
    public bool RollOnFileSizeLimit { get; public set; }
    public int RetainedFileCountLimit { get; public set; }
    public UmbracoFileConfiguration(IConfiguration configuration);
    [CompilerGeneratedAttribute]
public LogEventLevel get_RestrictedToMinimumLevel();
    [CompilerGeneratedAttribute]
public void set_RestrictedToMinimumLevel(LogEventLevel value);
    [CompilerGeneratedAttribute]
public long get_FileSizeLimitBytes();
    [CompilerGeneratedAttribute]
public void set_FileSizeLimitBytes(long value);
    [CompilerGeneratedAttribute]
public RollingInterval get_RollingInterval();
    [CompilerGeneratedAttribute]
public void set_RollingInterval(RollingInterval value);
    [CompilerGeneratedAttribute]
public Nullable`1<TimeSpan> get_FlushToDiskInterval();
    [CompilerGeneratedAttribute]
public void set_FlushToDiskInterval(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public bool get_RollOnFileSizeLimit();
    [CompilerGeneratedAttribute]
public void set_RollOnFileSizeLimit(bool value);
    [CompilerGeneratedAttribute]
public int get_RetainedFileCountLimit();
    [CompilerGeneratedAttribute]
public void set_RetainedFileCountLimit(int value);
    public string GetPath(string logDirectory);
}
public class Umbraco.Cms.Infrastructure.Logging.Viewer.SerilogExpressionsFunctions : object {
    [NullableContextAttribute("2")]
public static LogEventPropertyValue Has(LogEventPropertyValue value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Logging.Viewer.SerilogLegacyNameResolver : StaticMemberNameResolver {
    public SerilogLegacyNameResolver(Type type);
    public virtual bool TryResolveBuiltInPropertyName(string alias, String& target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Mail.EmailSender : object {
    private IEventAggregator _eventAggregator;
    private ILogger`1<EmailSender> _logger;
    private bool _notificationHandlerRegistered;
    private GlobalSettings _globalSettings;
    public EmailSender(ILogger`1<EmailSender> logger, IOptionsMonitor`1<GlobalSettings> globalSettings, IEventAggregator eventAggregator);
    public EmailSender(ILogger`1<EmailSender> logger, IOptionsMonitor`1<GlobalSettings> globalSettings, IEventAggregator eventAggregator, INotificationHandler`1<SendEmailNotification> handler1, INotificationAsyncHandler`1<SendEmailNotification> handler2);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Mail.EmailSender/<SendAsync>d__6")]
public sealed virtual Task SendAsync(EmailMessage message, string emailType);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Mail.EmailSender/<SendAsync>d__7")]
public sealed virtual Task SendAsync(EmailMessage message, string emailType, bool enableNotification);
    public sealed virtual bool CanSendRequiredEmail();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Mail.EmailSender/<SendAsyncInternal>d__9")]
private Task SendAsyncInternal(EmailMessage message, string emailType, bool enableNotification);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__5_0(GlobalSettings x);
}
internal class Umbraco.Cms.Infrastructure.Manifest.AppPluginsPackageManifestReader : PackageManifestReader {
    [NullableContextAttribute("1")]
public AppPluginsPackageManifestReader(IPackageManifestFileProviderFactory packageManifestFileProviderFactory, IJsonSerializer jsonSerializer, ILogger`1<AppPluginsPackageManifestReader> logger);
}
internal class Umbraco.Cms.Infrastructure.Manifest.BackOfficePackageManifestReader : PackageManifestReader {
    [NullableContextAttribute("1")]
public BackOfficePackageManifestReader(IPackageManifestFileProviderFactory packageManifestFileProviderFactory, IJsonSerializer jsonSerializer, ILogger`1<BackOfficePackageManifestReader> logger);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Manifest.IPackageManifestReader {
    public abstract virtual Task`1<IEnumerable`1<PackageManifest>> ReadPackageManifestsAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Manifest.PackageManifestReader : object {
    private string _appPluginsPath;
    private IPackageManifestFileProviderFactory _packageManifestFileProviderFactory;
    private IJsonSerializer _jsonSerializer;
    private ILogger`1<PackageManifestReader> _logger;
    public PackageManifestReader(string appPluginsPath, IPackageManifestFileProviderFactory packageManifestFileProviderFactory, IJsonSerializer jsonSerializer, ILogger`1<PackageManifestReader> logger);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestReader/<ReadPackageManifestsAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<PackageManifest>> ReadPackageManifestsAsync();
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestReader/<GetAllPackageManifestFiles>d__6")]
private static IEnumerable`1<IFileInfo> GetAllPackageManifestFiles(IFileProvider fileProvider, string path);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestReader/<ParsePackageManifestFiles>d__7")]
private Task`1<IEnumerable`1<PackageManifest>> ParsePackageManifestFiles(IFileInfo[] files);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Manifest.PackageManifestService : object {
    private IEnumerable`1<IPackageManifestReader> _packageManifestReaders;
    private IAppPolicyCache _cache;
    private RuntimeSettings _runtimeSettings;
    public PackageManifestService(IEnumerable`1<IPackageManifestReader> packageManifestReaders, AppCaches appCaches, IOptionsMonitor`1<RuntimeSettings> runtimeSettingsOptionsMonitor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestService/<GetAllPackageManifestsAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<PackageManifest>> GetAllPackageManifestsAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestService/<GetPublicPackageManifestsAsync>d__5")]
public sealed virtual Task`1<IEnumerable`1<PackageManifest>> GetPublicPackageManifestsAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestService/<GetPrivatePackageManifestsAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<PackageManifest>> GetPrivatePackageManifestsAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestService/<GetPackageManifestImportmapAsync>d__7")]
public sealed virtual Task`1<PackageManifestImportmap> GetPackageManifestImportmapAsync();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__3_0(RuntimeSettings runtimeSettings);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Manifest.PackageManifestService/<<GetAllPackageManifestsAsync>b__4_0>d")]
[CompilerGeneratedAttribute]
private Task`1<IEnumerable`1<PackageManifest>> <GetAllPackageManifestsAsync>b__4_0();
}
public class Umbraco.Cms.Infrastructure.Mapping.RelationModelMapDefinition : object {
    [NullableContextAttribute("1")]
public sealed virtual void DefineMaps(IUmbracoMapper mapper);
    [NullableContextAttribute("1")]
private void Map(RelationItemDto source, RelationItemModel target, MapperContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Umbraco.Cms.Infrastructure.Migrations.ExecutedMigrationPlan : object {
    [CompilerGeneratedAttribute]
private MigrationPlan <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InitialState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FinalState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Successful>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<Transition> <CompletedTransitions>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<IMigrationContext> <ExecutedMigrationContexts>k__BackingField;
    [RequiredMemberAttribute]
public MigrationPlan Plan { get; public set; }
    [RequiredMemberAttribute]
public string InitialState { get; public set; }
    [RequiredMemberAttribute]
public string FinalState { get; public set; }
    [RequiredMemberAttribute]
public bool Successful { get; public set; }
    [NullableAttribute("2")]
public Exception Exception { get; public set; }
    [RequiredMemberAttribute]
public IReadOnlyList`1<Transition> CompletedTransitions { get; public set; }
    [ObsoleteAttribute("This will be removed in the V13, and replaced with UmbracoPlanExecutedNotification")]
internal IReadOnlyList`1<IMigrationContext> ExecutedMigrationContexts { get; internal set; }
    [ObsoleteAttribute("Constructors of types with required members are not supported in this version of your compiler.", "True")]
[CompilerFeatureRequiredAttribute("RequiredMembers")]
public ExecutedMigrationPlan(MigrationPlan plan, string initialState, string finalState);
    [SetsRequiredMembersAttribute]
public ExecutedMigrationPlan(MigrationPlan plan, string initialState, string finalState, bool successful, IReadOnlyList`1<Transition> completedTransitions);
    [CompilerGeneratedAttribute]
public MigrationPlan get_Plan();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Plan(MigrationPlan value);
    [CompilerGeneratedAttribute]
public string get_InitialState();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_InitialState(string value);
    [CompilerGeneratedAttribute]
public string get_FinalState();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_FinalState(string value);
    [CompilerGeneratedAttribute]
public bool get_Successful();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Successful(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_Exception(Exception value);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<Transition> get_CompletedTransitions();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CompletedTransitions(IReadOnlyList`1<Transition> value);
    [CompilerGeneratedAttribute]
internal IReadOnlyList`1<IMigrationContext> get_ExecutedMigrationContexts();
    [CompilerGeneratedAttribute]
internal Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExecutedMigrationContexts(IReadOnlyList`1<IMigrationContext> value);
}
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.AlterBuilder : object {
    [NullableAttribute("1")]
private IMigrationContext _context;
    [NullableContextAttribute("1")]
public AlterBuilder(IMigrationContext context);
    [NullableContextAttribute("1")]
public sealed virtual IAlterTableBuilder Table(string tableName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Expressions.AlterColumnExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ColumnDefinition <Column>k__BackingField;
    public string SchemaName { get; public set; }
    public string TableName { get; public set; }
    [NullableAttribute("1")]
public ColumnDefinition Column { get; public set; }
    [NullableContextAttribute("1")]
public AlterColumnExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_SchemaName();
    [CompilerGeneratedAttribute]
public virtual void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ColumnDefinition get_Column();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_Column(ColumnDefinition value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Expressions.AlterDefaultConstraintExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConstraintName>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    public string TableName { get; public set; }
    public string ColumnName { get; public set; }
    public string ConstraintName { get; public set; }
    public object DefaultValue { get; public set; }
    [NullableContextAttribute("1")]
public AlterDefaultConstraintExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ColumnName();
    [CompilerGeneratedAttribute]
public virtual void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConstraintName();
    [CompilerGeneratedAttribute]
public virtual void set_ConstraintName(string value);
    [CompilerGeneratedAttribute]
public virtual object get_DefaultValue();
    [CompilerGeneratedAttribute]
public virtual void set_DefaultValue(object value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Expressions.AlterTableExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public string TableName { get; public set; }
    [NullableContextAttribute("1")]
public AlterTableExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.IAlterBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IAlterTableBuilder Table(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Table.AlterTableBuilder : ExpressionBuilderBase`2<AlterTableExpression, IAlterTableColumnOptionBuilder> {
    private IMigrationContext _context;
    [CompilerGeneratedAttribute]
private ColumnDefinition <CurrentColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private ForeignKeyDefinition <CurrentForeignKey>k__BackingField;
    public ColumnDefinition CurrentColumn { get; public set; }
    public ForeignKeyDefinition CurrentForeignKey { get; public set; }
    public AlterTableBuilder(IMigrationContext context, AlterTableExpression expression);
    [CompilerGeneratedAttribute]
public ColumnDefinition get_CurrentColumn();
    [CompilerGeneratedAttribute]
public void set_CurrentColumn(ColumnDefinition value);
    [CompilerGeneratedAttribute]
public ForeignKeyDefinition get_CurrentForeignKey();
    [CompilerGeneratedAttribute]
public void set_CurrentForeignKey(ForeignKeyDefinition value);
    public sealed virtual void Do();
    public sealed virtual IAlterTableColumnOptionBuilder WithDefault(SystemMethods method);
    public sealed virtual IAlterTableColumnOptionBuilder WithDefaultValue(object value);
    public sealed virtual IAlterTableColumnOptionBuilder Identity();
    public sealed virtual IAlterTableColumnOptionBuilder Indexed();
    public sealed virtual IAlterTableColumnOptionBuilder Indexed(string indexName);
    public sealed virtual IAlterTableColumnOptionBuilder PrimaryKey();
    public sealed virtual IAlterTableColumnOptionBuilder PrimaryKey(string primaryKeyName);
    public sealed virtual IAlterTableColumnOptionBuilder Nullable();
    public sealed virtual IAlterTableColumnOptionBuilder NotNullable();
    public sealed virtual IAlterTableColumnOptionBuilder Unique();
    public sealed virtual IAlterTableColumnOptionBuilder Unique(string indexName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string primaryTableName, string primaryColumnName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ForeignKey();
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignTableName, string foreignColumnName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName);
    public sealed virtual IAlterTableColumnTypeBuilder AddColumn(string name);
    public sealed virtual IAlterTableColumnTypeBuilder AlterColumn(string name);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder OnDelete(Rule rule);
    public sealed virtual IAlterTableColumnOptionForeignKeyCascadeBuilder OnUpdate(Rule rule);
    public sealed virtual IAlterTableColumnOptionBuilder OnDeleteOrUpdate(Rule rule);
    public virtual ColumnDefinition GetColumnForType();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Table.IAlterTableBuilder {
    public abstract virtual IAlterTableColumnTypeBuilder AddColumn(string name);
    public abstract virtual IAlterTableColumnTypeBuilder AlterColumn(string name);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Table.IAlterTableColumnOptionBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Table.IAlterTableColumnOptionForeignKeyCascadeBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Alter.Table.IAlterTableColumnTypeBuilder {
}
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.ExecutableBuilder : object {
    [NullableAttribute("1")]
private IMigrationExpression _expression;
    [NullableContextAttribute("1")]
public ExecutableBuilder(IMigrationExpression expression);
    public sealed virtual void Do();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.Expressions.CreateColumnExpression : MigrationExpressionBase {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ColumnDefinition <Column>k__BackingField;
    [NullableAttribute("2")]
public string TableName { get; public set; }
    public ColumnDefinition Column { get; public set; }
    public CreateColumnExpression(IMigrationContext context);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TableName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public ColumnDefinition get_Column();
    [CompilerGeneratedAttribute]
public void set_Column(ColumnDefinition value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.Expressions.CreateForeignKeyExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private ForeignKeyDefinition <ForeignKey>k__BackingField;
    public ForeignKeyDefinition ForeignKey { get; public set; }
    public CreateForeignKeyExpression(IMigrationContext context, ForeignKeyDefinition fkDef);
    public CreateForeignKeyExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public ForeignKeyDefinition get_ForeignKey();
    [CompilerGeneratedAttribute]
public void set_ForeignKey(ForeignKeyDefinition value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.Expressions.CreateIndexExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private IndexDefinition <Index>k__BackingField;
    public IndexDefinition Index { get; public set; }
    public CreateIndexExpression(IMigrationContext context, IndexDefinition index);
    public CreateIndexExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public IndexDefinition get_Index();
    [CompilerGeneratedAttribute]
public void set_Index(IndexDefinition value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.IColumnOptionBuilder`2 {
    public abstract virtual TNext WithDefault(SystemMethods method);
    public abstract virtual TNext WithDefaultValue(object value);
    public abstract virtual TNext Identity();
    public abstract virtual TNext Indexed();
    public abstract virtual TNext Indexed(string indexName);
    public abstract virtual TNext PrimaryKey();
    public abstract virtual TNext PrimaryKey(string primaryKeyName);
    public abstract virtual TNext Nullable();
    public abstract virtual TNext NotNullable();
    public abstract virtual TNext Unique();
    public abstract virtual TNext Unique(string indexName);
    public abstract virtual TNextFk ForeignKey(string primaryTableName, string primaryColumnName);
    public abstract virtual TNextFk ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName);
    public abstract virtual TNextFk ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName);
    public abstract virtual TNextFk ForeignKey();
    public abstract virtual TNextFk ReferencedBy(string foreignTableName, string foreignColumnName);
    public abstract virtual TNextFk ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName);
    public abstract virtual TNextFk ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.IColumnTypeBuilder`1 {
    public abstract virtual TNext AsAnsiString();
    public abstract virtual TNext AsAnsiString(int size);
    public abstract virtual TNext AsBinary();
    public abstract virtual TNext AsBinary(int size);
    public abstract virtual TNext AsBoolean();
    public abstract virtual TNext AsByte();
    public abstract virtual TNext AsCurrency();
    public abstract virtual TNext AsDate();
    public abstract virtual TNext AsDateTime();
    public abstract virtual TNext AsDecimal();
    public abstract virtual TNext AsDecimal(int size, int precision);
    public abstract virtual TNext AsDouble();
    public abstract virtual TNext AsGuid();
    public abstract virtual TNext AsFixedLengthString(int size);
    public abstract virtual TNext AsFixedLengthAnsiString(int size);
    public abstract virtual TNext AsFloat();
    public abstract virtual TNext AsInt16();
    public abstract virtual TNext AsInt32();
    public abstract virtual TNext AsInt64();
    public abstract virtual TNext AsString();
    public abstract virtual TNext AsString(int size);
    public abstract virtual TNext AsTime();
    public abstract virtual TNext AsXml();
    public abstract virtual TNext AsXml(int size);
    public abstract virtual TNext AsCustom(string customType);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.IExecutableBuilder {
    public abstract virtual void Do();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Common.IForeignKeyCascadeBuilder`2 {
    public abstract virtual TNextFk OnDelete(Rule rule);
    public abstract virtual TNextFk OnUpdate(Rule rule);
    public abstract virtual TNext OnDeleteOrUpdate(Rule rule);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Column.CreateColumnBuilder : ExpressionBuilderBase`2<CreateColumnExpression, ICreateColumnOptionBuilder> {
    private IMigrationContext _context;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ForeignKeyDefinition <CurrentForeignKey>k__BackingField;
    [NullableAttribute("2")]
public ForeignKeyDefinition CurrentForeignKey { get; public set; }
    public CreateColumnBuilder(IMigrationContext context, CreateColumnExpression expression);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ForeignKeyDefinition get_CurrentForeignKey();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CurrentForeignKey(ForeignKeyDefinition value);
    public sealed virtual ICreateColumnTypeBuilder OnTable(string name);
    public sealed virtual void Do();
    public sealed virtual ICreateColumnOptionBuilder WithDefault(SystemMethods method);
    public sealed virtual ICreateColumnOptionBuilder WithDefaultValue(object value);
    public sealed virtual ICreateColumnOptionBuilder Identity();
    public sealed virtual ICreateColumnOptionBuilder Indexed();
    public sealed virtual ICreateColumnOptionBuilder Indexed(string indexName);
    public sealed virtual ICreateColumnOptionBuilder PrimaryKey();
    public sealed virtual ICreateColumnOptionBuilder PrimaryKey(string primaryKeyName);
    public sealed virtual ICreateColumnOptionBuilder Nullable();
    public sealed virtual ICreateColumnOptionBuilder NotNullable();
    public sealed virtual ICreateColumnOptionBuilder Unique();
    public sealed virtual ICreateColumnOptionBuilder Unique(string indexName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ForeignKey(string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ForeignKey();
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder OnDelete(Rule rule);
    public sealed virtual ICreateColumnOptionForeignKeyCascadeBuilder OnUpdate(Rule rule);
    public sealed virtual ICreateColumnOptionBuilder OnDeleteOrUpdate(Rule rule);
    public virtual ColumnDefinition GetColumnForType();
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Column.ICreateColumnOnTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateColumnTypeBuilder OnTable(string name);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Column.ICreateColumnOptionBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Column.ICreateColumnOptionForeignKeyCascadeBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Column.ICreateColumnTypeBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Constraint.CreateConstraintBuilder : ExpressionBuilderBase`1<CreateConstraintExpression> {
    public CreateConstraintBuilder(CreateConstraintExpression expression);
    public sealed virtual IExecutableBuilder Column(string columnName);
    public sealed virtual IExecutableBuilder Columns(String[] columnNames);
    public sealed virtual ICreateConstraintColumnsBuilder OnTable(string tableName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Constraint.ICreateConstraintColumnsBuilder {
    public abstract virtual IExecutableBuilder Column(string columnName);
    public abstract virtual IExecutableBuilder Columns(String[] columnNames);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Constraint.ICreateConstraintOnTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateConstraintColumnsBuilder OnTable(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.CreateBuilder : object {
    private IMigrationContext _context;
    public CreateBuilder(IMigrationContext context);
    public sealed virtual IExecutableBuilder Table(bool withoutKeysAndIndexes);
    public sealed virtual IExecutableBuilder KeysAndIndexes();
    public sealed virtual IExecutableBuilder KeysAndIndexes(Type typeOfDto);
    public sealed virtual ICreateTableWithColumnBuilder Table(string tableName);
    public sealed virtual ICreateColumnOnTableBuilder Column(string columnName);
    public sealed virtual ICreateForeignKeyFromTableBuilder ForeignKey();
    public sealed virtual ICreateForeignKeyFromTableBuilder ForeignKey(string foreignKeyName);
    public sealed virtual ICreateIndexForTableBuilder Index();
    public sealed virtual ICreateIndexForTableBuilder Index(string indexName);
    public sealed virtual ICreateConstraintOnTableBuilder PrimaryKey();
    public sealed virtual ICreateConstraintOnTableBuilder PrimaryKey(bool clustered);
    public sealed virtual ICreateConstraintOnTableBuilder PrimaryKey(string primaryKeyName);
    public sealed virtual ICreateConstraintOnTableBuilder PrimaryKey(string primaryKeyName, bool clustered);
    public sealed virtual ICreateConstraintOnTableBuilder UniqueConstraint();
    public sealed virtual ICreateConstraintOnTableBuilder UniqueConstraint(string constraintName);
    public sealed virtual ICreateConstraintOnTableBuilder Constraint(string constraintName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Expressions.CreateConstraintExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private ConstraintDefinition <Constraint>k__BackingField;
    public ConstraintDefinition Constraint { get; }
    public CreateConstraintExpression(IMigrationContext context, ConstraintType constraint);
    [CompilerGeneratedAttribute]
public ConstraintDefinition get_Constraint();
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Expressions.CreateTableExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<ColumnDefinition> <Columns>k__BackingField;
    public string SchemaName { get; public set; }
    public string TableName { get; public set; }
    public IList`1<ColumnDefinition> Columns { get; public set; }
    public CreateTableExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_SchemaName();
    [CompilerGeneratedAttribute]
public virtual void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual IList`1<ColumnDefinition> get_Columns();
    [CompilerGeneratedAttribute]
public virtual void set_Columns(IList`1<ColumnDefinition> value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.CreateForeignKeyBuilder : ExpressionBuilderBase`1<CreateForeignKeyExpression> {
    public CreateForeignKeyBuilder(CreateForeignKeyExpression expression);
    public sealed virtual void Do();
    public sealed virtual ICreateForeignKeyCascadeBuilder OnDelete(Rule rule);
    public sealed virtual ICreateForeignKeyCascadeBuilder OnUpdate(Rule rule);
    public sealed virtual IExecutableBuilder OnDeleteOrUpdate(Rule rule);
    public sealed virtual ICreateForeignKeyToTableBuilder ForeignColumn(string column);
    public sealed virtual ICreateForeignKeyToTableBuilder ForeignColumns(String[] columns);
    public sealed virtual ICreateForeignKeyForeignColumnBuilder FromTable(string table);
    public sealed virtual ICreateForeignKeyCascadeBuilder PrimaryColumn(string column);
    public sealed virtual ICreateForeignKeyCascadeBuilder PrimaryColumns(String[] columns);
    public sealed virtual ICreateForeignKeyPrimaryColumnBuilder ToTable(string table);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.ICreateForeignKeyCascadeBuilder {
    public abstract virtual ICreateForeignKeyCascadeBuilder OnDelete(Rule rule);
    public abstract virtual ICreateForeignKeyCascadeBuilder OnUpdate(Rule rule);
    public abstract virtual IExecutableBuilder OnDeleteOrUpdate(Rule rule);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.ICreateForeignKeyForeignColumnBuilder {
    public abstract virtual ICreateForeignKeyToTableBuilder ForeignColumn(string column);
    public abstract virtual ICreateForeignKeyToTableBuilder ForeignColumns(String[] columns);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.ICreateForeignKeyFromTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateForeignKeyForeignColumnBuilder FromTable(string table);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.ICreateForeignKeyPrimaryColumnBuilder {
    public abstract virtual ICreateForeignKeyCascadeBuilder PrimaryColumn(string column);
    public abstract virtual ICreateForeignKeyCascadeBuilder PrimaryColumns(String[] columns);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ForeignKey.ICreateForeignKeyToTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateForeignKeyPrimaryColumnBuilder ToTable(string table);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.ICreateBuilder {
    public abstract virtual IExecutableBuilder Table(bool withoutKeysAndIndexes);
    public abstract virtual IExecutableBuilder KeysAndIndexes();
    public abstract virtual IExecutableBuilder KeysAndIndexes(Type typeOfDto);
    public abstract virtual ICreateTableWithColumnBuilder Table(string tableName);
    public abstract virtual ICreateColumnOnTableBuilder Column(string columnName);
    public abstract virtual ICreateForeignKeyFromTableBuilder ForeignKey();
    public abstract virtual ICreateForeignKeyFromTableBuilder ForeignKey(string foreignKeyName);
    public abstract virtual ICreateIndexForTableBuilder Index();
    public abstract virtual ICreateIndexForTableBuilder Index(string indexName);
    public abstract virtual ICreateConstraintOnTableBuilder PrimaryKey();
    public abstract virtual ICreateConstraintOnTableBuilder PrimaryKey(string primaryKeyName);
    public abstract virtual ICreateConstraintOnTableBuilder PrimaryKey(bool clustered);
    public abstract virtual ICreateConstraintOnTableBuilder PrimaryKey(string primaryKeyName, bool clustered);
    public abstract virtual ICreateConstraintOnTableBuilder UniqueConstraint();
    public abstract virtual ICreateConstraintOnTableBuilder UniqueConstraint(string constraintName);
    public abstract virtual ICreateConstraintOnTableBuilder Constraint(string constraintName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.CreateIndexBuilder : ExpressionBuilderBase`1<CreateIndexExpression> {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IndexColumnDefinition <CurrentColumn>k__BackingField;
    [NullableAttribute("2")]
public IndexColumnDefinition CurrentColumn { get; public set; }
    public CreateIndexBuilder(CreateIndexExpression expression);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IndexColumnDefinition get_CurrentColumn();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_CurrentColumn(IndexColumnDefinition value);
    public sealed virtual ICreateIndexOnColumnBuilder Ascending();
    public sealed virtual ICreateIndexOnColumnBuilder Descending();
    private sealed virtual override ICreateIndexOnColumnBuilder Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexColumnOptionsBuilder.Unique();
    public sealed virtual ICreateIndexOnColumnBuilder OnTable(string tableName);
    public sealed virtual void Do();
    public sealed virtual ICreateIndexColumnOptionsBuilder OnColumn(string columnName);
    public sealed virtual ICreateIndexOptionsBuilder WithOptions();
    public sealed virtual ICreateIndexOnColumnBuilder NonClustered();
    public sealed virtual ICreateIndexOnColumnBuilder Clustered();
    private sealed virtual override ICreateIndexOnColumnBuilder Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexOptionsBuilder.Unique();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexColumnOptionsBuilder {
    public abstract virtual ICreateIndexOnColumnBuilder Ascending();
    public abstract virtual ICreateIndexOnColumnBuilder Descending();
    public abstract virtual ICreateIndexOnColumnBuilder Unique();
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexForTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateIndexOnColumnBuilder OnTable(string tableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexOnColumnBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateIndexColumnOptionsBuilder OnColumn(string columnName);
    [NullableContextAttribute("1")]
public abstract virtual ICreateIndexOptionsBuilder WithOptions();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Index.ICreateIndexOptionsBuilder {
    public abstract virtual ICreateIndexOnColumnBuilder Unique();
    public abstract virtual ICreateIndexOnColumnBuilder NonClustered();
    public abstract virtual ICreateIndexOnColumnBuilder Clustered();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.KeysAndIndexes.CreateKeysAndIndexesBuilder : object {
    private IMigrationContext _context;
    private DatabaseType[] _supportedDatabaseTypes;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <TypeOfDto>k__BackingField;
    [NullableAttribute("2")]
public Type TypeOfDto { get; public set; }
    public CreateKeysAndIndexesBuilder(IMigrationContext context, DatabaseType[] supportedDatabaseTypes);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_TypeOfDto();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TypeOfDto(Type value);
    public sealed virtual void Do();
    private void ExecuteSql(string sql);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.CreateTableBuilder : ExpressionBuilderBase`2<CreateTableExpression, ICreateTableColumnOptionBuilder> {
    private IMigrationContext _context;
    [CompilerGeneratedAttribute]
private ColumnDefinition <CurrentColumn>k__BackingField;
    [CompilerGeneratedAttribute]
private ForeignKeyDefinition <CurrentForeignKey>k__BackingField;
    public ColumnDefinition CurrentColumn { get; public set; }
    public ForeignKeyDefinition CurrentForeignKey { get; public set; }
    public CreateTableBuilder(IMigrationContext context, CreateTableExpression expression);
    [CompilerGeneratedAttribute]
public ColumnDefinition get_CurrentColumn();
    [CompilerGeneratedAttribute]
public void set_CurrentColumn(ColumnDefinition value);
    [CompilerGeneratedAttribute]
public ForeignKeyDefinition get_CurrentForeignKey();
    [CompilerGeneratedAttribute]
public void set_CurrentForeignKey(ForeignKeyDefinition value);
    public sealed virtual void Do();
    public sealed virtual ICreateTableColumnAsTypeBuilder WithColumn(string name);
    public sealed virtual ICreateTableColumnOptionBuilder WithDefault(SystemMethods method);
    public sealed virtual ICreateTableColumnOptionBuilder WithDefaultValue(object value);
    public sealed virtual ICreateTableColumnOptionBuilder Identity();
    public sealed virtual ICreateTableColumnOptionBuilder Indexed();
    public sealed virtual ICreateTableColumnOptionBuilder Indexed(string indexName);
    public sealed virtual ICreateTableColumnOptionBuilder PrimaryKey();
    public sealed virtual ICreateTableColumnOptionBuilder PrimaryKey(string primaryKeyName);
    public sealed virtual ICreateTableColumnOptionBuilder Nullable();
    public sealed virtual ICreateTableColumnOptionBuilder NotNullable();
    public sealed virtual ICreateTableColumnOptionBuilder Unique();
    public sealed virtual ICreateTableColumnOptionBuilder Unique(string indexName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ForeignKey(string foreignKeyName, string primaryTableSchema, string primaryTableName, string primaryColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ForeignKey();
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder ReferencedBy(string foreignKeyName, string foreignTableSchema, string foreignTableName, string foreignColumnName);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder OnDelete(Rule rule);
    public sealed virtual ICreateTableColumnOptionForeignKeyCascadeBuilder OnUpdate(Rule rule);
    public sealed virtual ICreateTableColumnOptionBuilder OnDeleteOrUpdate(Rule rule);
    public virtual ColumnDefinition GetColumnForType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.CreateTableOfDtoBuilder : object {
    private IMigrationContext _context;
    private DatabaseType[] _supportedDatabaseTypes;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <TypeOfDto>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithoutKeysAndIndexes>k__BackingField;
    [NullableAttribute("2")]
public Type TypeOfDto { get; public set; }
    public bool WithoutKeysAndIndexes { get; public set; }
    public CreateTableOfDtoBuilder(IMigrationContext context, DatabaseType[] supportedDatabaseTypes);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_TypeOfDto();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TypeOfDto(Type value);
    [CompilerGeneratedAttribute]
public bool get_WithoutKeysAndIndexes();
    [CompilerGeneratedAttribute]
public void set_WithoutKeysAndIndexes(bool value);
    public sealed virtual void Do();
    private void ExecuteSql(string sql);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.ICreateTableColumnAsTypeBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.ICreateTableColumnOptionBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.ICreateTableColumnOptionForeignKeyCascadeBuilder {
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Create.Table.ICreateTableWithColumnBuilder {
    [NullableContextAttribute("1")]
public abstract virtual ICreateTableColumnAsTypeBuilder WithColumn(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Column.DeleteColumnBuilder : ExpressionBuilderBase`1<DeleteColumnExpression> {
    public DeleteColumnBuilder(DeleteColumnExpression expression);
    public sealed virtual IExecutableBuilder FromTable(string tableName);
    public sealed virtual IDeleteColumnBuilder Column(string columnName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Column.IDeleteColumnBuilder {
    public abstract virtual IExecutableBuilder FromTable(string tableName);
    public abstract virtual IDeleteColumnBuilder Column(string columnName);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Constraint.DeleteConstraintBuilder : ExpressionBuilderBase`1<DeleteConstraintExpression> {
    [NullableContextAttribute("1")]
public DeleteConstraintBuilder(DeleteConstraintExpression expression);
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder FromTable(string tableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Constraint.IDeleteConstraintBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder FromTable(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Data.DeleteDataBuilder : ExpressionBuilderBase`1<DeleteDataExpression> {
    public DeleteDataBuilder(DeleteDataExpression expression);
    public sealed virtual IExecutableBuilder IsNull(string columnName);
    public sealed virtual IDeleteDataBuilder Row(object dataAsAnonymousType);
    public sealed virtual IExecutableBuilder AllRows();
    public sealed virtual void Do();
    private static DeletionDataDefinition GetData(object dataAsAnonymousType);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Data.IDeleteDataBuilder {
    public abstract virtual IDeleteDataBuilder Row(object dataAsAnonymousType);
    public abstract virtual IExecutableBuilder AllRows();
    public abstract virtual IExecutableBuilder IsNull(string columnName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.DefaultConstraint.DeleteDefaultConstraintBuilder : ExpressionBuilderBase`1<DeleteDefaultConstraintExpression> {
    private IMigrationContext _context;
    public DeleteDefaultConstraintBuilder(IMigrationContext context, DeleteDefaultConstraintExpression expression);
    public sealed virtual IExecutableBuilder OnColumn(string columnName);
    public sealed virtual IDeleteDefaultConstraintOnColumnBuilder OnTable(string tableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.DefaultConstraint.IDeleteDefaultConstraintOnColumnBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder OnColumn(string columnName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.DefaultConstraint.IDeleteDefaultConstraintOnTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IDeleteDefaultConstraintOnColumnBuilder OnTable(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.DeleteBuilder : object {
    private IMigrationContext _context;
    public DeleteBuilder(IMigrationContext context);
    public sealed virtual IExecutableBuilder Table(string tableName);
    public sealed virtual IExecutableBuilder KeysAndIndexes(bool local, bool foreign);
    public sealed virtual IExecutableBuilder KeysAndIndexes(string tableName, bool local, bool foreign);
    public sealed virtual IDeleteColumnBuilder Column(string columnName);
    public sealed virtual IDeleteForeignKeyFromTableBuilder ForeignKey();
    public sealed virtual IDeleteForeignKeyOnTableBuilder ForeignKey(string foreignKeyName);
    public sealed virtual IDeleteDataBuilder FromTable(string tableName);
    public sealed virtual IDeleteIndexForTableBuilder Index();
    public sealed virtual IDeleteIndexForTableBuilder Index(string indexName);
    public sealed virtual IDeleteConstraintBuilder PrimaryKey(string primaryKeyName);
    public sealed virtual IDeleteConstraintBuilder UniqueConstraint(string constraintName);
    public sealed virtual IDeleteDefaultConstraintOnTableBuilder DefaultConstraint();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteColumnExpression : MigrationExpressionBase {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<string> <ColumnNames>k__BackingField;
    [NullableAttribute("2")]
public string TableName { get; public set; }
    public ICollection`1<string> ColumnNames { get; public set; }
    public DeleteColumnExpression(IMigrationContext context);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual string get_TableName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_ColumnNames();
    [CompilerGeneratedAttribute]
public void set_ColumnNames(ICollection`1<string> value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteConstraintExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private ConstraintDefinition <Constraint>k__BackingField;
    public ConstraintDefinition Constraint { get; }
    public DeleteConstraintExpression(IMigrationContext context, ConstraintType type);
    [CompilerGeneratedAttribute]
public ConstraintDefinition get_Constraint();
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteDataExpression : MigrationExpressionBase {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAllRows>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DeletionDataDefinition> <Rows>k__BackingField;
    [NullableAttribute("2")]
public string TableName { get; public set; }
    public bool IsAllRows { get; public set; }
    public List`1<DeletionDataDefinition> Rows { get; }
    public DeleteDataExpression(IMigrationContext context);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TableName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsAllRows();
    [CompilerGeneratedAttribute]
public virtual void set_IsAllRows(bool value);
    [CompilerGeneratedAttribute]
public List`1<DeletionDataDefinition> get_Rows();
    protected virtual string GetSql();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <GetSql>b__12_0(KeyValuePair`2<string, object> kvp);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteDefaultConstraintExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConstraintName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasDefaultConstraint>k__BackingField;
    public string TableName { get; public set; }
    public string ColumnName { get; public set; }
    public string ConstraintName { get; public set; }
    public bool HasDefaultConstraint { get; public set; }
    [NullableContextAttribute("1")]
public DeleteDefaultConstraintExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ColumnName();
    [CompilerGeneratedAttribute]
public virtual void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ConstraintName();
    [CompilerGeneratedAttribute]
public virtual void set_ConstraintName(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_HasDefaultConstraint();
    [CompilerGeneratedAttribute]
public virtual void set_HasDefaultConstraint(bool value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteForeignKeyExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private ForeignKeyDefinition <ForeignKey>k__BackingField;
    public ForeignKeyDefinition ForeignKey { get; public set; }
    public DeleteForeignKeyExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public ForeignKeyDefinition get_ForeignKey();
    [CompilerGeneratedAttribute]
public void set_ForeignKey(ForeignKeyDefinition value);
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteIndexExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private IndexDefinition <Index>k__BackingField;
    public IndexDefinition Index { get; }
    public DeleteIndexExpression(IMigrationContext context);
    public DeleteIndexExpression(IMigrationContext context, IndexDefinition index);
    [CompilerGeneratedAttribute]
public IndexDefinition get_Index();
    protected virtual string GetSql();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Expressions.DeleteTableExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    public string TableName { get; public set; }
    [NullableContextAttribute("1")]
public DeleteTableExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.DeleteForeignKeyBuilder : ExpressionBuilderBase`1<DeleteForeignKeyExpression> {
    public DeleteForeignKeyBuilder(DeleteForeignKeyExpression expression);
    public sealed virtual IDeleteForeignKeyToTableBuilder ForeignColumn(string column);
    public sealed virtual IDeleteForeignKeyToTableBuilder ForeignColumns(String[] columns);
    public sealed virtual IDeleteForeignKeyForeignColumnBuilder FromTable(string foreignTableName);
    public sealed virtual IExecutableBuilder OnTable(string foreignTableName);
    public sealed virtual IExecutableBuilder PrimaryColumn(string column);
    public sealed virtual IExecutableBuilder PrimaryColumns(String[] columns);
    public sealed virtual IDeleteForeignKeyPrimaryColumnBuilder ToTable(string table);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.IDeleteForeignKeyForeignColumnBuilder {
    public abstract virtual IDeleteForeignKeyToTableBuilder ForeignColumn(string column);
    public abstract virtual IDeleteForeignKeyToTableBuilder ForeignColumns(String[] columns);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.IDeleteForeignKeyFromTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IDeleteForeignKeyForeignColumnBuilder FromTable(string foreignTableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.IDeleteForeignKeyOnTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder OnTable(string foreignTableName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.IDeleteForeignKeyPrimaryColumnBuilder {
    public abstract virtual IExecutableBuilder PrimaryColumn(string column);
    public abstract virtual IExecutableBuilder PrimaryColumns(String[] columns);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.ForeignKey.IDeleteForeignKeyToTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IDeleteForeignKeyPrimaryColumnBuilder ToTable(string table);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.IDeleteBuilder {
    public abstract virtual IExecutableBuilder Table(string tableName);
    public abstract virtual IExecutableBuilder KeysAndIndexes(bool local, bool foreign);
    public abstract virtual IExecutableBuilder KeysAndIndexes(string tableName, bool local, bool foreign);
    public abstract virtual IDeleteColumnBuilder Column(string columnName);
    public abstract virtual IDeleteForeignKeyFromTableBuilder ForeignKey();
    public abstract virtual IDeleteForeignKeyOnTableBuilder ForeignKey(string foreignKeyName);
    public abstract virtual IDeleteDataBuilder FromTable(string tableName);
    public abstract virtual IDeleteIndexForTableBuilder Index();
    public abstract virtual IDeleteIndexForTableBuilder Index(string indexName);
    public abstract virtual IDeleteConstraintBuilder PrimaryKey(string primaryKeyName);
    public abstract virtual IDeleteConstraintBuilder UniqueConstraint(string constraintName);
    public abstract virtual IDeleteDefaultConstraintOnTableBuilder DefaultConstraint();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Index.DeleteIndexBuilder : ExpressionBuilderBase`1<DeleteIndexExpression> {
    [NullableContextAttribute("1")]
public DeleteIndexBuilder(DeleteIndexExpression expression);
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder OnTable(string tableName);
    public sealed virtual void Do();
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.Index.IDeleteIndexForTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder OnTable(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Delete.KeysAndIndexes.DeleteKeysAndIndexesBuilder : object {
    private IMigrationContext _context;
    private DatabaseType[] _supportedDatabaseTypes;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeleteLocal>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeleteForeign>k__BackingField;
    [NullableAttribute("2")]
public string TableName { get; public set; }
    public bool DeleteLocal { get; public set; }
    public bool DeleteForeign { get; public set; }
    private IDeleteBuilder Delete { get; }
    public DeleteKeysAndIndexesBuilder(IMigrationContext context, DatabaseType[] supportedDatabaseTypes);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TableName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_DeleteLocal();
    [CompilerGeneratedAttribute]
public void set_DeleteLocal(bool value);
    [CompilerGeneratedAttribute]
public bool get_DeleteForeign();
    [CompilerGeneratedAttribute]
public void set_DeleteForeign(bool value);
    private IDeleteBuilder get_Delete();
    public sealed virtual void Do();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Execute.ExecuteBuilder : ExpressionBuilderBase`1<ExecuteSqlStatementExpression> {
    [NullableContextAttribute("1")]
public ExecuteBuilder(IMigrationContext context);
    public sealed virtual void Do();
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder Sql(string sqlStatement);
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder Sql(Sql`1<ISqlContext> sql);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Execute.Expressions.ExecuteSqlStatementExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <SqlStatement>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <SqlObject>k__BackingField;
    public string SqlStatement { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Sql`1<ISqlContext> SqlObject { get; public set; }
    [NullableContextAttribute("1")]
public ExecuteSqlStatementExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_SqlStatement();
    [CompilerGeneratedAttribute]
public virtual void set_SqlStatement(string value);
    [CompilerGeneratedAttribute]
public virtual Sql`1<ISqlContext> get_SqlObject();
    [CompilerGeneratedAttribute]
public virtual void set_SqlObject(Sql`1<ISqlContext> value);
    public void ExecuteSqlObject();
    protected virtual string GetSql();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Execute.IExecuteBuilder {
    public abstract virtual IExecutableBuilder Sql(string sqlStatement);
    public abstract virtual IExecutableBuilder Sql(Sql`1<ISqlContext> sql);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Migrations.Expressions.ExpressionBuilderBase`1 : object {
    [CompilerGeneratedAttribute]
private TExpression <Expression>k__BackingField;
    public TExpression Expression { get; }
    protected ExpressionBuilderBase`1(TExpression expression);
    [CompilerGeneratedAttribute]
public TExpression get_Expression();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Infrastructure.Migrations.Expressions.ExpressionBuilderBase`2 : ExpressionBuilderBase`1<TExpression> {
    [NullableAttribute("2")]
private ColumnDefinition Column { get; }
    protected ExpressionBuilderBase`2(TExpression expression);
    [NullableContextAttribute("2")]
private ColumnDefinition get_Column();
    [NullableContextAttribute("2")]
public abstract virtual ColumnDefinition GetColumnForType();
    public sealed virtual TNext AsAnsiString();
    public sealed virtual TNext AsAnsiString(int size);
    public sealed virtual TNext AsBinary();
    public sealed virtual TNext AsBinary(int size);
    public sealed virtual TNext AsBoolean();
    public sealed virtual TNext AsByte();
    public sealed virtual TNext AsCurrency();
    public sealed virtual TNext AsDate();
    public sealed virtual TNext AsDateTime();
    public sealed virtual TNext AsDecimal();
    public sealed virtual TNext AsDecimal(int size, int precision);
    public sealed virtual TNext AsDouble();
    public sealed virtual TNext AsFixedLengthString(int size);
    public sealed virtual TNext AsFixedLengthAnsiString(int size);
    public sealed virtual TNext AsFloat();
    public sealed virtual TNext AsGuid();
    public sealed virtual TNext AsInt16();
    public sealed virtual TNext AsInt32();
    public sealed virtual TNext AsInt64();
    public sealed virtual TNext AsString();
    public sealed virtual TNext AsString(int size);
    public sealed virtual TNext AsTime();
    public sealed virtual TNext AsXml();
    public sealed virtual TNext AsXml(int size);
    public sealed virtual TNext AsCustom(string customType);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.IFluentBuilder {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Insert.Expressions.InsertDataExpression : MigrationExpressionBase {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnabledIdentityInsert>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<InsertionDataDefinition> <Rows>k__BackingField;
    [NullableAttribute("2")]
public string TableName { get; public set; }
    public bool EnabledIdentityInsert { get; public set; }
    public List`1<InsertionDataDefinition> Rows { get; }
    public InsertDataExpression(IMigrationContext context);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TableName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_EnabledIdentityInsert();
    [CompilerGeneratedAttribute]
public void set_EnabledIdentityInsert(bool value);
    [CompilerGeneratedAttribute]
public List`1<InsertionDataDefinition> get_Rows();
    protected virtual string GetSql();
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Insert.IInsertBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IInsertIntoBuilder IntoTable(string tableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Insert.IInsertIntoBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IInsertIntoBuilder EnableIdentityInsert();
    [NullableContextAttribute("1")]
public abstract virtual IInsertIntoBuilder Row(object dataAsAnonymousType);
}
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Insert.InsertBuilder : object {
    [NullableAttribute("1")]
private IMigrationContext _context;
    [NullableContextAttribute("1")]
public InsertBuilder(IMigrationContext context);
    [NullableContextAttribute("1")]
public sealed virtual IInsertIntoBuilder IntoTable(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Insert.InsertIntoBuilder : ExpressionBuilderBase`1<InsertDataExpression> {
    public InsertIntoBuilder(InsertDataExpression expression);
    public sealed virtual void Do();
    public sealed virtual IInsertIntoBuilder EnableIdentityInsert();
    public sealed virtual IInsertIntoBuilder Row(object dataAsAnonymousType);
    private static InsertionDataDefinition GetData(object dataAsAnonymousType);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Column.IRenameColumnBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRenameColumnToBuilder OnTable(string tableName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Column.IRenameColumnToBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder To(string name);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Column.RenameColumnBuilder : ExpressionBuilderBase`1<RenameColumnExpression> {
    [NullableContextAttribute("1")]
public RenameColumnBuilder(RenameColumnExpression expression);
    public sealed virtual void Do();
    [NullableContextAttribute("1")]
public sealed virtual IRenameColumnToBuilder OnTable(string tableName);
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder To(string name);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Expressions.RenameColumnExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewName>k__BackingField;
    public string TableName { get; public set; }
    public string OldName { get; public set; }
    public string NewName { get; public set; }
    [NullableContextAttribute("1")]
public RenameColumnExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_OldName();
    [CompilerGeneratedAttribute]
public virtual void set_OldName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NewName();
    [CompilerGeneratedAttribute]
public virtual void set_NewName(string value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Expressions.RenameTableExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <OldName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewName>k__BackingField;
    public string OldName { get; public set; }
    public string NewName { get; public set; }
    [NullableContextAttribute("1")]
public RenameTableExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public virtual string get_OldName();
    [CompilerGeneratedAttribute]
public virtual void set_OldName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_NewName();
    [CompilerGeneratedAttribute]
public virtual void set_NewName(string value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.IRenameBuilder {
    public abstract virtual IRenameTableBuilder Table(string oldName);
    public abstract virtual IRenameColumnBuilder Column(string oldName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.RenameBuilder : object {
    private IMigrationContext _context;
    public RenameBuilder(IMigrationContext context);
    public sealed virtual IRenameTableBuilder Table(string oldName);
    public sealed virtual IRenameColumnBuilder Column(string oldName);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Table.IRenameTableBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IExecutableBuilder To(string name);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Rename.Table.RenameTableBuilder : ExpressionBuilderBase`1<RenameTableExpression> {
    [NullableContextAttribute("1")]
public RenameTableBuilder(RenameTableExpression expression);
    public sealed virtual void Do();
    [NullableContextAttribute("1")]
public sealed virtual IExecutableBuilder To(string name);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.Expressions.UpdateDataExpression : MigrationExpressionBase {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, object>> <Set>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<KeyValuePair`2<string, object>> <Where>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsAllRows>k__BackingField;
    public string TableName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, object>> Set { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<KeyValuePair`2<string, object>> Where { get; public set; }
    public bool IsAllRows { get; public set; }
    [NullableContextAttribute("1")]
public UpdateDataExpression(IMigrationContext context);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, object>> get_Set();
    [CompilerGeneratedAttribute]
public void set_Set(List`1<KeyValuePair`2<string, object>> value);
    [CompilerGeneratedAttribute]
public List`1<KeyValuePair`2<string, object>> get_Where();
    [CompilerGeneratedAttribute]
public void set_Where(List`1<KeyValuePair`2<string, object>> value);
    [CompilerGeneratedAttribute]
public bool get_IsAllRows();
    [CompilerGeneratedAttribute]
public void set_IsAllRows(bool value);
    [NullableContextAttribute("1")]
protected virtual string GetSql();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <GetSql>b__17_0(KeyValuePair`2<string, object> x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <GetSql>b__17_1(KeyValuePair`2<string, object> x);
}
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.IUpdateBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IUpdateTableBuilder Table(string tableName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.IUpdateTableBuilder {
    public abstract virtual IUpdateWhereBuilder Set(object dataAsAnonymousType);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.IUpdateWhereBuilder {
    public abstract virtual IExecutableBuilder Where(object dataAsAnonymousType);
    public abstract virtual IExecutableBuilder AllRows();
}
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.UpdateBuilder : object {
    [NullableAttribute("1")]
private IMigrationContext _context;
    [NullableContextAttribute("1")]
public UpdateBuilder(IMigrationContext context);
    [NullableContextAttribute("1")]
public sealed virtual IUpdateTableBuilder Table(string tableName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Migrations.Expressions.Update.UpdateDataBuilder : ExpressionBuilderBase`1<UpdateDataExpression> {
    public UpdateDataBuilder(UpdateDataExpression expression);
    public sealed virtual void Do();
    public sealed virtual IUpdateWhereBuilder Set(object dataAsAnonymousType);
    public sealed virtual IExecutableBuilder Where(object dataAsAnonymousType);
    public sealed virtual IExecutableBuilder AllRows();
    private static List`1<KeyValuePair`2<string, object>> GetData(object dataAsAnonymousType);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.IEFCoreMigrationExecutor {
    public abstract virtual Task ExecuteSingleMigrationAsync(EFCoreMigration efCoreMigration);
    public abstract virtual Task ExecuteAllMigrationsAsync();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.IMigrationBuilder {
    public abstract virtual MigrationBase Build(Type migrationType, IMigrationContext context);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Migrations.IMigrationContext {
    public MigrationPlan Plan { get; }
    public ILogger`1<IMigrationContext> Logger { get; }
    public IUmbracoDatabase Database { get; }
    public ISqlContext SqlContext { get; }
    public int Index { get; public set; }
    public bool BuildingExpression { get; public set; }
    public bool IsCompleted { get; }
    public abstract virtual MigrationPlan get_Plan();
    public abstract virtual ILogger`1<IMigrationContext> get_Logger();
    public abstract virtual IUmbracoDatabase get_Database();
    public abstract virtual ISqlContext get_SqlContext();
    public abstract virtual int get_Index();
    public abstract virtual void set_Index(int value);
    public abstract virtual bool get_BuildingExpression();
    public abstract virtual void set_BuildingExpression(bool value);
    [NullableContextAttribute("0")]
[ObsoleteAttribute("This will be removed in the V13, and replaced with a RebuildCache flag on the MigrationBase")]
public abstract virtual void AddPostMigration();
    public abstract virtual bool get_IsCompleted();
    public abstract virtual void Complete();
}
public interface Umbraco.Cms.Infrastructure.Migrations.IMigrationExpression {
    public abstract virtual void Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.IncompleteMigrationExpressionException : Exception {
    public IncompleteMigrationExpressionException(string message);
    public IncompleteMigrationExpressionException(string message, Exception innerException);
    protected IncompleteMigrationExpressionException(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Install.DatabaseBuilder : object {
    private IUmbracoDatabaseFactory _databaseFactory;
    private ICoreScopeProvider _scopeProvider;
    private IScopeAccessor _scopeAccessor;
    private IRuntimeState _runtimeState;
    private IKeyValueService _keyValueService;
    private ILogger`1<DatabaseBuilder> _logger;
    private IDbProviderFactoryCreator _dbProviderFactoryCreator;
    private IConfigManipulator _configManipulator;
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    private IOptionsMonitor`1<ConnectionStrings> _connectionStrings;
    private IMigrationPlanExecutor _migrationPlanExecutor;
    private DatabaseSchemaCreatorFactory _databaseSchemaCreatorFactory;
    private IEnumerable`1<IDatabaseProviderMetadata> _databaseProviderMetadata;
    private IEventAggregator _aggregator;
    [NullableAttribute("2")]
private DatabaseSchemaResult _databaseSchemaValidationResult;
    public bool IsDatabaseConfigured { get; }
    public bool CanConnectToDatabase { get; }
    public DatabaseBuilder(ICoreScopeProvider scopeProvider, IScopeAccessor scopeAccessor, IUmbracoDatabaseFactory databaseFactory, IRuntimeState runtimeState, ILoggerFactory loggerFactory, IKeyValueService keyValueService, IDbProviderFactoryCreator dbProviderFactoryCreator, IConfigManipulator configManipulator, IOptionsMonitor`1<GlobalSettings> globalSettings, IOptionsMonitor`1<ConnectionStrings> connectionStrings, IMigrationPlanExecutor migrationPlanExecutor, DatabaseSchemaCreatorFactory databaseSchemaCreatorFactory, IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata, IEventAggregator aggregator);
    public bool get_IsDatabaseConfigured();
    public bool get_CanConnectToDatabase();
    public bool CanConnect(string connectionString, string providerName);
    public bool HasSomeNonDefaultUser();
    internal bool IsUmbracoInstalled();
    public bool ConfigureDatabaseConnection(DatabaseModel databaseSettings, bool isTrialRun);
    public Task`1<Attempt`1<InstallOperationStatus>> ValidateDatabaseConnectionAsync(DatabaseModel databaseSettings);
    private void Configure(bool installMissingDatabase);
    public void CreateDatabase();
    [NullableContextAttribute("2")]
public DatabaseSchemaResult ValidateSchema();
    private DatabaseSchemaResult ValidateSchema(ICoreScope scope);
    [NullableContextAttribute("2")]
public Result CreateSchemaAndData();
    private Result CreateSchemaAndData(ICoreScope scope);
    public Result UpgradeSchemaAndData(UmbracoPlan plan);
    public Result UpgradeSchemaAndData(MigrationPlan plan);
    private Attempt`1<Result> CheckReadyForInstall();
    private Result HandleInstallException(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Migrations.Install.DatabaseDataCreator : object {
    internal static LogViewerQueryDto[] _defaultLogQueries;
    private static string ImageMediaTypeKey;
    private IDatabase _database;
    private IDictionary`2<string, IList`1<string>> _entitiesToAlwaysCreate;
    private IOptionsMonitor`1<InstallDefaultDataSettings> _installDefaultDataSettings;
    private ILogger`1<DatabaseDataCreator> _logger;
    private IUmbracoVersion _umbracoVersion;
    public DatabaseDataCreator(IDatabase database, ILogger`1<DatabaseDataCreator> logger, IUmbracoVersion umbracoVersion, IOptionsMonitor`1<InstallDefaultDataSettings> installDefaultDataSettings);
    private static DatabaseDataCreator();
    public void InitializeBaseData(string tableName);
    private void CreateUserGroup2PermissionData();
    internal static Guid CreateUniqueRelationTypeId(string alias, string name);
    private void CreateNodeData();
    private void CreateNodeDataForDataTypes();
    private void CreateNodeDataForMediaTypes();
    private void CreateNodeDataForMemberTypes();
    private void CreateLockData();
    private void CreateContentTypeData();
    private void CreateUserData();
    private void CreateUserGroupData();
    private void CreateUser2UserGroupData();
    private void CreateUserGroup2AppData();
    private void CreatePropertyTypeGroupData();
    private void CreatePropertyTypeData();
    private void CreateLanguageData();
    private bool TryCreateCulture(string isoCode, CultureInfo& culture);
    private void CreateContentChildTypeData();
    private void CreateDataTypeData();
    private void CreateRelationTypeData();
    private void CreateRelationTypeData(int id, string alias, string name, Nullable`1<Guid> parentObjectType, Nullable`1<Guid> childObjectType, bool dual, bool isDependency);
    private void CreateKeyValueData();
    private void CreateLogViewerQueryData();
    private void ConditionalInsert(string configKey, string id, TDto dto, string tableName, string primaryKeyName, bool autoIncrement);
    [CompilerGeneratedAttribute]
private void <CreateNodeDataForDataTypes>g__InsertDataTypeNodeDto|12_0(int id, int sortOrder, string uniqueId, string text);
    [CompilerGeneratedAttribute]
private void <CreateDataTypeData>g__InsertDataTypeDto|26_0(int id, string editorAlias, string editorUiAlias, string dbType, string configuration);
    [CompilerGeneratedAttribute]
internal static string <CreateDataTypeData>g__TableCollectionView|26_1(string collectionViewType);
    [CompilerGeneratedAttribute]
internal static string <CreateDataTypeData>g__GridCollectionView|26_2(string collectionViewType);
    [CompilerGeneratedAttribute]
internal static string <CreateDataTypeData>g__Layouts|26_3(string collectionViewType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Install.DatabaseSchemaCreator : object {
    internal static List`1<Type> _orderedTables;
    private IUmbracoDatabase _database;
    private IOptionsMonitor`1<InstallDefaultDataSettings> _installDefaultDataSettings;
    private IEventAggregator _eventAggregator;
    private ILogger`1<DatabaseSchemaCreator> _logger;
    private ILoggerFactory _loggerFactory;
    private IUmbracoVersion _umbracoVersion;
    private ISqlSyntaxProvider SqlSyntax { get; }
    public DatabaseSchemaCreator(IUmbracoDatabase database, ILogger`1<DatabaseSchemaCreator> logger, ILoggerFactory loggerFactory, IUmbracoVersion umbracoVersion, IEventAggregator eventAggregator, IOptionsMonitor`1<InstallDefaultDataSettings> defaultDataCreationSettings);
    private static DatabaseSchemaCreator();
    private ISqlSyntaxProvider get_SqlSyntax();
    internal void UninstallDatabaseSchema();
    public void InitializeDatabaseSchema();
    internal DatabaseSchemaResult ValidateSchema();
    internal DatabaseSchemaResult ValidateSchema(IEnumerable`1<Type> orderedTables);
    private void ValidateDbConstraints(DatabaseSchemaResult result);
    private void ValidateDbColumns(DatabaseSchemaResult result);
    private void ValidateDbTables(DatabaseSchemaResult result);
    private void ValidateDbIndexes(DatabaseSchemaResult result);
    internal virtual void FireBeforeCreation(DatabaseSchemaCreatingNotification notification);
    internal virtual void FireAfterCreation(DatabaseSchemaCreatedNotification notification);
    [NullableContextAttribute("2")]
public bool TableExists(string tableName);
    [NullableContextAttribute("2")]
public bool TableExists();
    [NullableContextAttribute("2")]
internal void CreateTable(bool overwrite);
    internal void CreateTable(bool overwrite, Type modelType, DatabaseDataCreator dataCreation);
    [NullableContextAttribute("2")]
public void DropTable(string tableName);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private TableDefinition <ValidateSchema>b__13_1(Type x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Install.DatabaseSchemaCreatorFactory : object {
    private IEventAggregator _eventAggregator;
    private IOptionsMonitor`1<InstallDefaultDataSettings> _installDefaultDataSettings;
    private ILogger`1<DatabaseSchemaCreator> _logger;
    private ILoggerFactory _loggerFactory;
    private IUmbracoVersion _umbracoVersion;
    public DatabaseSchemaCreatorFactory(ILogger`1<DatabaseSchemaCreator> logger, ILoggerFactory loggerFactory, IUmbracoVersion umbracoVersion, IEventAggregator eventAggregator, IOptionsMonitor`1<InstallDefaultDataSettings> installDefaultDataSettings);
    public DatabaseSchemaCreator Create(IUmbracoDatabase database);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Install.DatabaseSchemaResult : object {
    [CompilerGeneratedAttribute]
private List`1<Tuple`2<string, string>> <Errors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<TableDefinition> <TableDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValidTables>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DbIndexDefinition> <IndexDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValidColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValidConstraints>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <ValidIndexes>k__BackingField;
    public List`1<Tuple`2<string, string>> Errors { get; }
    public List`1<TableDefinition> TableDefinitions { get; }
    public List`1<string> ValidTables { get; }
    internal List`1<DbIndexDefinition> IndexDefinitions { get; }
    public List`1<string> ValidColumns { get; }
    public List`1<string> ValidConstraints { get; }
    public List`1<string> ValidIndexes { get; }
    [CompilerGeneratedAttribute]
public List`1<Tuple`2<string, string>> get_Errors();
    [CompilerGeneratedAttribute]
public List`1<TableDefinition> get_TableDefinitions();
    [CompilerGeneratedAttribute]
public List`1<string> get_ValidTables();
    [CompilerGeneratedAttribute]
internal List`1<DbIndexDefinition> get_IndexDefinitions();
    [CompilerGeneratedAttribute]
public List`1<string> get_ValidColumns();
    [CompilerGeneratedAttribute]
public List`1<string> get_ValidConstraints();
    [CompilerGeneratedAttribute]
public List`1<string> get_ValidIndexes();
    public bool DetermineHasInstalledVersion();
    public string GetSummary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.MergeBuilder : object {
    private List`1<Type> _migrations;
    private MigrationPlan _plan;
    private bool _with;
    [NullableAttribute("2")]
private string _withLast;
    internal MergeBuilder(MigrationPlan plan);
    public MergeBuilder To(string targetState);
    public MergeBuilder To(string targetState);
    public MergeBuilder To(string targetState, Type migration);
    public MergeBuilder With();
    public MigrationPlan As(string targetState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Migrations.MigrationBase : object {
    [CompilerGeneratedAttribute]
private IMigrationContext <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RebuildCache>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <InvalidateBackofficeUserAccess>k__BackingField;
    public IAlterBuilder Alter { get; }
    protected IMigrationContext Context { get; }
    protected ILogger Logger { get; }
    protected ISqlSyntaxProvider SqlSyntax { get; }
    protected IUmbracoDatabase Database { get; }
    protected DatabaseType DatabaseType { get; }
    public ICreateBuilder Create { get; }
    public IDeleteBuilder Delete { get; }
    public IExecuteBuilder Execute { get; }
    public IInsertBuilder Insert { get; }
    public IRenameBuilder Rename { get; }
    public IUpdateBuilder Update { get; }
    public bool RebuildCache { get; public set; }
    public bool InvalidateBackofficeUserAccess { get; public set; }
    protected MigrationBase(IMigrationContext context);
    public IAlterBuilder get_Alter();
    [CompilerGeneratedAttribute]
protected IMigrationContext get_Context();
    protected ILogger get_Logger();
    protected ISqlSyntaxProvider get_SqlSyntax();
    protected IUmbracoDatabase get_Database();
    protected DatabaseType get_DatabaseType();
    public ICreateBuilder get_Create();
    public IDeleteBuilder get_Delete();
    public IExecuteBuilder get_Execute();
    public IInsertBuilder get_Insert();
    public IRenameBuilder get_Rename();
    public IUpdateBuilder get_Update();
    [CompilerGeneratedAttribute]
public bool get_RebuildCache();
    [CompilerGeneratedAttribute]
public void set_RebuildCache(bool value);
    [CompilerGeneratedAttribute]
public bool get_InvalidateBackofficeUserAccess();
    [CompilerGeneratedAttribute]
public void set_InvalidateBackofficeUserAccess(bool value);
    public void Run();
    protected Sql`1<ISqlContext> Sql();
    protected Sql`1<ISqlContext> Sql(string sql, Object[] args);
    protected abstract virtual void Migrate();
    private protected T BeginBuild(T builder);
    protected void AddColumn(string columnName);
    protected void AddColumnIfNotExists(IEnumerable`1<ColumnInfo> columns, string columnName);
    protected void AddColumn(string tableName, string columnName);
    protected void AddColumnIfNotExists(IEnumerable`1<ColumnInfo> columns, string tableName, string columnName);
    protected void AddColumn(string columnName, IEnumerable`1& sqls);
    private void AddColumn(TableDefinition table, string tableName, string columnName);
    protected void AddColumn(string tableName, string columnName, IEnumerable`1& sqls);
    protected void AlterColumn(string tableName, string columnName);
    private void AddColumn(TableDefinition table, string tableName, string columnName, IEnumerable`1& sqls);
    protected void ReplaceColumn(string tableName, string currentName, string newName);
    protected bool TableExists(string tableName);
    protected bool IndexExists(string indexName);
    protected void CreateIndex(string toCreate);
    protected void DeleteIndex(string toDelete);
    protected bool PrimaryKeyExists(string tableName, string primaryKeyName);
    protected bool ColumnExists(string tableName, string columnName);
    protected string ColumnType(string tableName, string columnName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.MigrationBuilder : object {
    private IServiceProvider _container;
    public MigrationBuilder(IServiceProvider container);
    public sealed virtual MigrationBase Build(Type migrationType, IMigrationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Migrations.MigrationContext : object {
    [NullableAttribute("2")]
private Action _onCompleteAction;
    private List`1<Type> _postMigrations;
    [CompilerGeneratedAttribute]
private ILogger`1<IMigrationContext> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private MigrationPlan <Plan>k__BackingField;
    [CompilerGeneratedAttribute]
private IUmbracoDatabase <Database>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Index>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BuildingExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsCompleted>k__BackingField;
    [ObsoleteAttribute("This will be removed in the V13, and replaced with a RebuildCache flag on the MigrationBase")]
internal IReadOnlyList`1<Type> PostMigrations { get; }
    public ILogger`1<IMigrationContext> Logger { get; }
    public MigrationPlan Plan { get; }
    public IUmbracoDatabase Database { get; internal set; }
    public ISqlContext SqlContext { get; }
    public int Index { get; public set; }
    public bool BuildingExpression { get; public set; }
    public bool IsCompleted { get; private set; }
    public MigrationContext(MigrationPlan plan, IUmbracoDatabase database, ILogger`1<MigrationContext> logger, Action onCompleteAction);
    internal IReadOnlyList`1<Type> get_PostMigrations();
    [CompilerGeneratedAttribute]
public sealed virtual ILogger`1<IMigrationContext> get_Logger();
    [CompilerGeneratedAttribute]
public sealed virtual MigrationPlan get_Plan();
    [CompilerGeneratedAttribute]
public sealed virtual IUmbracoDatabase get_Database();
    [CompilerGeneratedAttribute]
internal void set_Database(IUmbracoDatabase value);
    public sealed virtual ISqlContext get_SqlContext();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Index();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Index(int value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_BuildingExpression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BuildingExpression(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsCompleted();
    [CompilerGeneratedAttribute]
private void set_IsCompleted(bool value);
    public sealed virtual void Complete();
    [NullableContextAttribute("0")]
[ObsoleteAttribute("This will be removed in the V13, and replaced with a RebuildCache flag on the MigrationBase, and a UmbracoPlanExecutedNotification.")]
public sealed virtual void AddPostMigration();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Migrations.MigrationExpressionBase : object {
    private bool _executed;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<IMigrationExpression> _expressions;
    [CompilerGeneratedAttribute]
private IMigrationContext <Context>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public DatabaseType DatabaseType { get; }
    protected IMigrationContext Context { get; }
    protected ILogger Logger { get; }
    protected ISqlSyntaxProvider SqlSyntax { get; }
    protected IUmbracoDatabase Database { get; }
    public List`1<IMigrationExpression> Expressions { get; }
    [NullableAttribute("2")]
internal string Name { get; internal set; }
    protected MigrationExpressionBase(IMigrationContext context);
    public DatabaseType get_DatabaseType();
    [CompilerGeneratedAttribute]
protected IMigrationContext get_Context();
    protected ILogger get_Logger();
    protected ISqlSyntaxProvider get_SqlSyntax();
    protected IUmbracoDatabase get_Database();
    public List`1<IMigrationExpression> get_Expressions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_Name(string value);
    public virtual void Execute();
    [NullableContextAttribute("2")]
protected virtual string GetSql();
    protected void Execute(Sql`1<ISqlContext> sql);
    protected void AppendStatementSeparator(StringBuilder stmtBuilder);
    private void ExecuteStatement(StringBuilder stmtBuilder);
    protected string GetQuotedValue(object val);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.MigrationPlan : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<string, Transition> _transitions;
    [NullableAttribute("2")]
private string _finalState;
    [NullableAttribute("2")]
private string _prevState;
    [CompilerGeneratedAttribute]
private bool <IgnoreCurrentState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public bool IgnoreCurrentState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, Transition> Transitions { get; }
    public string Name { get; }
    public string InitialState { get; }
    public string FinalState { get; }
    public MigrationPlan(string name);
    [CompilerGeneratedAttribute]
public virtual bool get_IgnoreCurrentState();
    public IReadOnlyDictionary`2<string, Transition> get_Transitions();
    [CompilerGeneratedAttribute]
public string get_Name();
    public virtual string get_InitialState();
    public string get_FinalState();
    public MigrationPlan To(string targetState);
    private MigrationPlan Add(string sourceState, string targetState, Type migration);
    public MigrationPlan To(Guid targetState);
    public MigrationPlan To(string targetState);
    public MigrationPlan To(Guid targetState);
    public MigrationPlan To(string targetState, Type migration);
    public MigrationPlan To(Guid targetState, Type migration);
    public MigrationPlan From(string sourceState);
    public MigrationPlan ToWithReplace(string recoverState, string targetState);
    public MigrationPlan ToWithReplace(string recoverState, string targetState);
    public MigrationPlan ToWithClone(string startState, string endState, string targetState);
    public virtual string CreateRandomState();
    public MergeBuilder Merge();
    public void Validate();
    public virtual void ThrowOnUnknownInitialState(string state);
    [NullableContextAttribute("2")]
internal IReadOnlyList`1<string> FollowPath(string fromState, string toState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.MigrationPlanExecutor : object {
    private ILogger`1<MigrationPlanExecutor> _logger;
    private ILoggerFactory _loggerFactory;
    private IMigrationBuilder _migrationBuilder;
    private IUmbracoDatabaseFactory _databaseFactory;
    private IPublishedSnapshotService _publishedSnapshotService;
    private IKeyValueService _keyValueService;
    private IServiceScopeFactory _serviceScopeFactory;
    private DistributedCache _distributedCache;
    private IScopeAccessor _scopeAccessor;
    private ICoreScopeProvider _scopeProvider;
    private bool _rebuildCache;
    private bool _invalidateBackofficeUserAccess;
    public MigrationPlanExecutor(ICoreScopeProvider scopeProvider, IScopeAccessor scopeAccessor, ILoggerFactory loggerFactory, IMigrationBuilder migrationBuilder, IUmbracoDatabaseFactory databaseFactory, IPublishedSnapshotService publishedSnapshotService, DistributedCache distributedCache, IKeyValueService keyValueService, IServiceScopeFactory serviceScopeFactory);
    [ObsoleteAttribute("Use non-obsolete constructor. This will be removed in Umbraco 15.")]
public MigrationPlanExecutor(ICoreScopeProvider scopeProvider, IScopeAccessor scopeAccessor, ILoggerFactory loggerFactory, IMigrationBuilder migrationBuilder, IUmbracoDatabaseFactory databaseFactory, IPublishedSnapshotService publishedSnapshotService, DistributedCache distributedCache);
    [ObsoleteAttribute("Use non-obsolete constructor. This will be removed in Umbraco 15.")]
public MigrationPlanExecutor(ICoreScopeProvider scopeProvider, IScopeAccessor scopeAccessor, ILoggerFactory loggerFactory, IMigrationBuilder migrationBuilder);
    public sealed virtual string Execute(MigrationPlan plan, string fromState);
    public sealed virtual ExecutedMigrationPlan ExecutePlan(MigrationPlan plan, string fromState);
    [ObsoleteAttribute]
private void HandlePostMigrations(ExecutedMigrationPlan result);
    private ExecutedMigrationPlan RunMigrationPlan(MigrationPlan plan, string fromState);
    private MigrationContext RunUnscopedMigration(Transition transition, MigrationPlan plan);
    private void OnComplete(MigrationPlan plan, string targetState);
    private MigrationContext RunScopedMigration(Transition transition, MigrationPlan plan);
    private void RunMigration(Type migrationType, MigrationContext context);
    private void RebuildCache();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Migrations.MigrationPlanExecutor/<RevokeBackofficeTokens>d__24")]
private Task RevokeBackofficeTokens();
}
public class Umbraco.Cms.Infrastructure.Migrations.NoopMigration : MigrationBase {
    [NullableContextAttribute("1")]
public NoopMigration(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Notifications.DatabaseSchemaAndDataCreatedNotification : object {
    [CompilerGeneratedAttribute]
private bool <RequiresUpgrade>k__BackingField;
    public bool RequiresUpgrade { get; }
    public DatabaseSchemaAndDataCreatedNotification(bool requiresUpgrade);
    [CompilerGeneratedAttribute]
public bool get_RequiresUpgrade();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Migrations.Notifications.DatabaseSchemaCreatedNotification : StatefulNotification {
    [CompilerGeneratedAttribute]
private EventMessages <EventMessages>k__BackingField;
    public EventMessages EventMessages { get; }
    public DatabaseSchemaCreatedNotification(EventMessages eventMessages);
    [CompilerGeneratedAttribute]
public EventMessages get_EventMessages();
}
internal class Umbraco.Cms.Infrastructure.Migrations.Notifications.DatabaseSchemaCreatingNotification : CancelableNotification {
    [NullableContextAttribute("1")]
public DatabaseSchemaCreatingNotification(EventMessages messages);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Notifications.MigrationPlansExecutedNotification : object {
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ExecutedMigrationPlan> <ExecutedPlans>k__BackingField;
    public IReadOnlyList`1<ExecutedMigrationPlan> ExecutedPlans { get; }
    public MigrationPlansExecutedNotification(IReadOnlyList`1<ExecutedMigrationPlan> executedPlans);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ExecutedMigrationPlan> get_ExecutedPlans();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
public class Umbraco.Cms.Infrastructure.Migrations.Notifications.UmbracoPlanExecutedNotification : object {
    [CompilerGeneratedAttribute]
private ExecutedMigrationPlan <ExecutedPlan>k__BackingField;
    [RequiredMemberAttribute]
public ExecutedMigrationPlan ExecutedPlan { get; public set; }
    [CompilerGeneratedAttribute]
public ExecutedMigrationPlan get_ExecutedPlan();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_ExecutedPlan(ExecutedMigrationPlan value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.PostMigrations.ClearCsrfCookieHandler : object {
    private ICookieManager _cookieManager;
    public ClearCsrfCookieHandler(ICookieManager cookieManager);
    public sealed virtual void Handle(UmbracoPlanExecutedNotification notification);
}
public interface Umbraco.Cms.Infrastructure.Migrations.PostMigrations.IPublishedSnapshotRebuilder {
    public abstract virtual void Rebuild();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.PostMigrations.PublishedSnapshotRebuilder : object {
    private DistributedCache _distributedCache;
    private IPublishedSnapshotService _publishedSnapshotService;
    public PublishedSnapshotRebuilder(IPublishedSnapshotService publishedSnapshotService, DistributedCache distributedCache);
    public sealed virtual void Rebuild();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Migrations.UnscopedMigrationBase : MigrationBase {
    protected UnscopedMigrationBase(IMigrationContext context);
    protected void ScopeDatabase(IScope scope);
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.Common.CreateKeysAndIndexes : MigrationBase {
    [NullableContextAttribute("1")]
public CreateKeysAndIndexes(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.Common.DeleteKeysAndIndexes : MigrationBase {
    [NullableContextAttribute("1")]
public DeleteKeysAndIndexes(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.UmbracoPlan : MigrationPlan {
    public string InitialState { get; }
    public UmbracoPlan(IUmbracoVersion umbracoVersion);
    public virtual string get_InitialState();
    protected virtual void DefinePlan();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.UmbracoPremigrationPlan : MigrationPlan {
    public string InitialState { get; }
    public virtual string get_InitialState();
    protected virtual void DefinePlan();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.Upgrader : object {
    [CompilerGeneratedAttribute]
private MigrationPlan <Plan>k__BackingField;
    public string Name { get; }
    public MigrationPlan Plan { get; }
    public string StateValueKey { get; }
    public Upgrader(MigrationPlan plan);
    public string get_Name();
    [CompilerGeneratedAttribute]
public MigrationPlan get_Plan();
    public virtual string get_StateValueKey();
    public ExecutedMigrationPlan Execute(IMigrationPlanExecutor migrationPlanExecutor, ICoreScopeProvider scopeProvider, IKeyValueService keyValueService);
    private string GetInitialState(ICoreScopeProvider scopeProvider, IKeyValueService keyValueService);
    private void SetState(string state, ICoreScopeProvider scopeProvider, IKeyValueService keyValueService);
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.AddExceptionOccured : MigrationBase {
    [NullableContextAttribute("1")]
public AddExceptionOccured(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.AddWebhookDatabaseLock : MigrationBase {
    [NullableContextAttribute("1")]
public AddWebhookDatabaseLock(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.AddWebhookRequest : MigrationBase {
    [NullableContextAttribute("1")]
public AddWebhookRequest(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.AddWebhooks : MigrationBase {
    [NullableContextAttribute("1")]
public AddWebhooks(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.ChangeLogStatusCode : MigrationBase {
    public ChangeLogStatusCode(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.ChangeWebhookRequestObjectColumnToNvarcharMax : MigrationBase {
    public ChangeWebhookRequestObjectColumnToNvarcharMax(IMigrationContext context);
    protected virtual void Migrate();
    private void MigrateNtextColumn(string columnName, string tableName, Expression`1<Func`2<TDto, object>> fieldSelector, bool nullable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.ChangeWebhookUrlColumnsToNvarcharMax : MigrationBase {
    public ChangeWebhookUrlColumnsToNvarcharMax(IMigrationContext context);
    protected virtual void Migrate();
    private void MigrateNtextColumn(string columnName, string tableName, Expression`1<Func`2<TDto, object>> fieldSelector, bool nullable);
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.RenameEventNameColumn : MigrationBase {
    [NullableContextAttribute("1")]
public RenameEventNameColumn(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_0_0.RenameWebhookIdToKey : MigrationBase {
    [NullableContextAttribute("1")]
public RenameWebhookIdToKey(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_3_0.AlignUpgradedDatabase : MigrationBase {
    public AlignUpgradedDatabase(IMigrationContext context);
    protected virtual void Migrate();
    private void MakeIndexUnique(string tableName, string indexName, IEnumerable`1<Tuple`4<string, string, string, bool>> indexes);
    private void RemoveDefaultConstraint(string tableName, string columnName, IEnumerable`1<ColumnInfo> columns);
    private void RenameColumn(string tableName, string oldColumnName, string newColumnName, IEnumerable`1<ColumnInfo> columns);
    private void MakeNvarCharColumnNotNullable(string tableName, string columnName, IEnumerable`1<ColumnInfo> columns);
    private void DropCacheInstructionDefaultConstraint(IEnumerable`1<ColumnInfo> columns);
    private void AlignContentVersionTable(ColumnInfo[] columns);
    private void UpdateExternalLoginIndexes(IEnumerable`1<Tuple`4<string, string, string, bool>> indexes);
    private void AlignNodeTable(ColumnInfo[] columns);
    private void MakeRelationTypeIndexUnique(Tuple`4[] indexes);
    private void RemoveUserGroupDefault(ColumnInfo[] columns);
    private void MakeWebhookUrlNotNullable(ColumnInfo[] columns);
    private void MakeWebhookLogUrlNotNullable(ColumnInfo[] columns);
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_13_5_0.ChangeRedirectUrlToNvarcharMax : MigrationBase {
    [NullableContextAttribute("1")]
public ChangeRedirectUrlToNvarcharMax(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddEditorUiToDataType : MigrationBase {
    private IKeyValueService _keyValueService;
    private IJsonSerializer _jsonSerializer;
    private ILogger`1<AddEditorUiToDataType> _logger;
    public AddEditorUiToDataType(IMigrationContext context, IKeyValueService keyValueService, IJsonSerializer jsonSerializer, ILogger`1<AddEditorUiToDataType> logger);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddGuidsToUserGroups : UnscopedMigrationBase {
    private static string NewColumnName;
    private IScopeProvider _scopeProvider;
    public AddGuidsToUserGroups(IMigrationContext context, IScopeProvider scopeProvider);
    protected virtual void Migrate();
    private void MigrateSqlServer();
    private void MigrateSqlite();
    private void MigrateColumnSqlite();
    [NullableContextAttribute("2")]
private Guid ResolveAliasToGuid(string alias);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private UserGroupDto <MigrateColumnSqlite>b__6_0(OldUserGroupDto x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddGuidsToUsers : UnscopedMigrationBase {
    private static string NewColumnName;
    private IScopeProvider _scopeProvider;
    public AddGuidsToUsers(IMigrationContext context, IScopeProvider scopeProvider);
    protected virtual void Migrate();
    private void MigrateSqlServer();
    private void MigrateSqlite();
    private void MigrateExternalLogins(List`1<NewUserDto> userDtos);
    private void MigrateTwoFactorLogins(List`1<NewUserDto> userDtos);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddListViewKeysToDocumentTypes : UnscopedMigrationBase {
    private IScopeProvider _scopeProvider;
    private IDataTypeService _dataTypeService;
    private static string NewColumnName;
    public AddListViewKeysToDocumentTypes(IMigrationContext context, IScopeProvider scopeProvider, IDataTypeService dataTypeService);
    protected virtual void Migrate();
    private void MigrateSqlServer();
    private void MigrateSqlite();
    private Nullable`1<Guid> CalculateListView(ContentTypeDtoOld dto);
    private IEnumerable`1<ContentTypeDto> GetContentTypeDtos();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ContentTypeDto <GetContentTypeDtos>b__8_2(ContentTypeDtoOld x);
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddPropertyEditorUiAliasColumn : MigrationBase {
    [NullableContextAttribute("1")]
public AddPropertyEditorUiAliasColumn(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.AddUserGroup2PermisionTable : MigrationBase {
    [NullableContextAttribute("1")]
public AddUserGroup2PermisionTable(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.CleanUpDataTypeConfigurations : MigrationBase {
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    private ILogger`1<MigrateDataTypeConfigurations> _logger;
    public CleanUpDataTypeConfigurations(IMigrationContext context, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer, ILogger`1<MigrateDataTypeConfigurations> logger);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.DeleteMacroTables : MigrationBase {
    [NullableContextAttribute("1")]
public DeleteMacroTables(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Remove in Umbraco 18.")]
internal class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateCharPermissionsToStrings : MigrationBase {
    private IIdKeyMap _idKeyMap;
    [CompilerGeneratedAttribute]
private static Dictionary`2<char, IEnumerable`1<string>> <CharToStringPermissionDictionary>k__BackingField;
    internal static Dictionary`2<char, IEnumerable`1<string>> CharToStringPermissionDictionary { get; }
    public MigrateCharPermissionsToStrings(IMigrationContext context, IIdKeyMap idKeyMap);
    private static MigrateCharPermissionsToStrings();
    [CompilerGeneratedAttribute]
internal static Dictionary`2<char, IEnumerable`1<string>> get_CharToStringPermissionDictionary();
    protected virtual void Migrate();
    private IEnumerable`1<string> ReplacePermissionValue(char oldPermission);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateDataTypeConfigurations : MigrationBase {
    private IContentTypeService _contentTypeService;
    private IMediaTypeService _mediaTypeService;
    private IMemberTypeService _memberTypeService;
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    private ILogger`1<MigrateDataTypeConfigurations> _logger;
    public MigrateDataTypeConfigurations(IMigrationContext context, IContentTypeService contentTypeService, IMediaTypeService mediaTypeService, IMemberTypeService memberTypeService, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer, ILogger`1<MigrateDataTypeConfigurations> logger);
    protected virtual void Migrate();
    private bool HandleBoolean(Dictionary`2& configurationData);
    private bool HandleCheckBoxList(Dictionary`2& configurationData);
    private bool HandleColorPicker(Dictionary`2& configurationData);
    private bool HandleContentPicker(Dictionary`2& configurationData);
    private bool HandleDateTime(Dictionary`2& configurationData);
    private bool HandleDropDown(Dictionary`2& configurationData);
    private bool HandleEmailAddress(Dictionary`2& configurationData);
    private static bool HandleLabel(Dictionary`2& configurationData);
    private bool HandleListView(Dictionary`2& configurationData, Nullable`1<Guid> dataTypeKey, IMediaType[] allMediaTypes);
    private bool HandleMediaPicker(Dictionary`2& configurationData, IMediaType[] allMediaTypes);
    private bool HandleMultiNodeTreePicker(Dictionary`2& configurationData, IContentType[] allContentTypes, IMediaType[] allMediaTypes, IMemberType[] allMemberTypes);
    private bool HandleMultiUrlPicker(Dictionary`2& configurationData);
    private static bool HandleMultipleTextstring(Dictionary`2& configurationData);
    private bool HandleRadioButton(Dictionary`2& configurationData);
    private bool HandleRichText(Dictionary`2& configurationData);
    private static bool HandleTextBoxAndTextArea(Dictionary`2& configurationData);
    private bool HandleUploadField(Dictionary`2& configurationData);
    private string ConfigurationValue(IReadOnlyDictionary`2<string, object> configurationData, string key, bool mustBeJson);
    private bool ReplaceUdiWithKey(Dictionary`2& configurationData, string key);
    private bool ReplaceContentTypeAliasesWithKeys(Dictionary`2& configurationData, string key, IEnumerable`1<IContentTypeBase> allContentTypes);
    private bool ReplaceValueListArrayWithStringArray(Dictionary`2& configurationData, string key);
    private bool ReplaceIntegerStringWithBoolean(Dictionary`2& configurationData, string key);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ColorPickerItem <HandleColorPicker>b__9_5(KeyValuePair`2<string, object> item);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ColorPickerItem <HandleColorPicker>b__9_7(ValueListItem item);
    [CompilerGeneratedAttribute]
internal static bool <HandleMultipleTextstring>g__ReplaceKey|19_0(string oldKey, string newKey, <>c__DisplayClass19_0& );
    [CompilerGeneratedAttribute]
internal static bool <HandleTextBoxAndTextArea>g__ReplaceStringWithIntValue|22_0(string key, <>c__DisplayClass22_0& );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Remove in Umbraco 18.")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateNotificationCharsToStrings : MigrationBase {
    public MigrateNotificationCharsToStrings(IMigrationContext context);
    protected virtual void Migrate();
    private User2NodeNotifyDto ReplaceAction(LegacyUser2NodeNotifyDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateSchduledPublishesToUtc : MigrationBase {
    private TimeProvider _timeProvider;
    public MigrateSchduledPublishesToUtc(IMigrationContext context, TimeProvider timeProvider);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateTours : UnscopedMigrationBase {
    private IJsonSerializer _jsonSerializer;
    private IScopeProvider _scopeProvider;
    public MigrateTours(IMigrationContext context, IJsonSerializer jsonSerializer, IScopeProvider scopeProvider);
    protected virtual void Migrate();
    private void MigrateUserTableSqlite();
    private void MigrateUserTableSqlServer();
}
[ObsoleteAttribute("Remove in Umbraco 18.")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MigrateUserGroup2PermissionPermissionColumnType : MigrationBase {
    [NullableContextAttribute("1")]
public MigrateUserGroup2PermissionPermissionColumnType(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.MoveDocumentBlueprintsToFolders : MigrationBase {
    private IEntityService _entityService;
    private IContentService _contentService;
    private IDocumentBlueprintContainerRepository _containerRepository;
    public MoveDocumentBlueprintsToFolders(IMigrationContext context, IEntityService entityService, IContentService contentService, IDocumentBlueprintContainerRepository containerRepository);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.RenameTechnologyLeakingPropertyEditorAliases : MigrationBase {
    public RenameTechnologyLeakingPropertyEditorAliases(IMigrationContext context);
    protected virtual void Migrate();
    private void MigratePropertyEditorAlias(string propertyEditorAlias, string newAlias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.UpdateDefaultGuidsOfCreatedPackages : MigrationBase {
    private PackageDefinitionXmlParser _xmlParser;
    public UpdateDefaultGuidsOfCreatedPackages(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_0_0.UpdateToOpenIddictV5 : MigrationBase {
    private IEFCoreMigrationExecutor _efCoreMigrationExecutor;
    public UpdateToOpenIddictV5(IMigrationContext context, IEFCoreMigrationExecutor efCoreMigrationExecutor);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_1_0.MigrateOldRichTextSeedConfiguration : MigrationBase {
    private static string OldSeedValue;
    private static string NewDefaultValue;
    public MigrateOldRichTextSeedConfiguration(IMigrationContext context);
    protected virtual void Migrate();
}
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_1_0.MigrateRichTextConfiguration : MigrationBase {
    [NullableContextAttribute("1")]
public MigrateRichTextConfiguration(IMigrationContext context);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Migrations.Upgrade.V_14_2_0.AddMissingDateTimeConfiguration : MigrationBase {
    private IConfigurationEditorJsonSerializer _configurationEditorJsonSerializer;
    public AddMissingDateTimeConfiguration(IMigrationContext context, IConfigurationEditorJsonSerializer configurationEditorJsonSerializer);
    protected virtual void Migrate();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.ApiVersion : object {
    [CompilerGeneratedAttribute]
private static ApiVersion <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private SemVersion <Version>k__BackingField;
    public static ApiVersion Current { get; }
    private static SemVersion CurrentAssemblyVersion { get; }
    public SemVersion Version { get; }
    internal ApiVersion(SemVersion executingVersion);
    private static ApiVersion();
    [CompilerGeneratedAttribute]
public static ApiVersion get_Current();
    private static SemVersion get_CurrentAssemblyVersion();
    [CompilerGeneratedAttribute]
public SemVersion get_Version();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.AutoModelsNotificationHandler : object {
    private static int _req;
    private ModelsBuilderSettings _config;
    private ILogger`1<AutoModelsNotificationHandler> _logger;
    private IMainDom _mainDom;
    private ModelsGenerationError _mbErrors;
    private IModelsGenerator _modelGenerator;
    internal bool IsEnabled { get; }
    public AutoModelsNotificationHandler(ILogger`1<AutoModelsNotificationHandler> logger, IOptionsMonitor`1<ModelsBuilderSettings> config, IModelsGenerator modelGenerator, ModelsGenerationError mbErrors, IMainDom mainDom);
    internal bool get_IsEnabled();
    public sealed virtual void Handle(ContentTypeCacheRefresherNotification notification);
    public sealed virtual void Handle(DataTypeCacheRefresherNotification notification);
    public sealed virtual void Handle(UmbracoApplicationStartingNotification notification);
    public sealed virtual void Handle(UmbracoRequestEndNotification notification);
    private void Install();
    private void RequestModelsGeneration();
    private void GenerateModelsIfRequested();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.Builder : object {
    [CompilerGeneratedAttribute]
private string <ModelsNamespace>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ModelsMap>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<string> <TypesUsing>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<TypeModel> <TypeModels>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ModelsNamespaceForTests>k__BackingField;
    [CompilerGeneratedAttribute]
private ModelsBuilderSettings <Config>k__BackingField;
    public string ModelsNamespace { get; public set; }
    protected Dictionary`2<string, string> ModelsMap { get; }
    protected IList`1<string> TypesUsing { get; }
    public IList`1<string> Using { get; }
    public IList`1<TypeModel> TypeModels { get; }
    [NullableAttribute("2")]
public string ModelsNamespaceForTests { get; public set; }
    protected ModelsBuilderSettings Config { get; }
    protected Builder(ModelsBuilderSettings config, IList`1<TypeModel> typeModels);
    [CompilerGeneratedAttribute]
public string get_ModelsNamespace();
    [CompilerGeneratedAttribute]
public void set_ModelsNamespace(string value);
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, string> get_ModelsMap();
    [CompilerGeneratedAttribute]
protected IList`1<string> get_TypesUsing();
    public IList`1<string> get_Using();
    [CompilerGeneratedAttribute]
public IList`1<TypeModel> get_TypeModels();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ModelsNamespaceForTests();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ModelsNamespaceForTests(string value);
    [CompilerGeneratedAttribute]
protected ModelsBuilderSettings get_Config();
    public IEnumerable`1<TypeModel> GetModelsToGenerate();
    public string GetModelsNamespace();
    protected bool IsAmbiguousSymbol(string symbol, string match);
    private void Prepare();
    protected string GetModelsBaseClassName(TypeModel type);
}
public interface Umbraco.Cms.Infrastructure.ModelsBuilder.Building.IModelsGenerator {
    public abstract virtual void GenerateModels();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.ModelsGenerator : object {
    private IHostingEnvironment _hostingEnvironment;
    private OutOfDateModelsStatus _outOfDateModels;
    private UmbracoServices _umbracoService;
    private ModelsBuilderSettings _config;
    public ModelsGenerator(UmbracoServices umbracoService, IOptionsMonitor`1<ModelsBuilderSettings> config, OutOfDateModelsStatus outOfDateModels, IHostingEnvironment hostingEnvironment);
    public sealed virtual void GenerateModels();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__4_0(ModelsBuilderSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.PropertyModel : object {
    public string Alias;
    public string ClrName;
    public string ClrTypeName;
    [NullableAttribute("2")]
public string Description;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public List`1<string> Errors;
    public Type ModelClrType;
    public string Name;
    public void AddError(string error);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TextBuilder : Builder {
    private static IDictionary`2<string, string> _typesMap;
    public TextBuilder(ModelsBuilderSettings config, IList`1<TypeModel> typeModels);
    private static TextBuilder();
    public static void WriteHeader(StringBuilder sb);
    public void Generate(StringBuilder sb, TypeModel typeModel);
    public void Generate(StringBuilder sb, IEnumerable`1<TypeModel> typeModels);
    public void WriteClrType(StringBuilder sb, Type type);
    private static void WriteGeneratedCodeAttribute(StringBuilder sb, string tabs);
    private static void WriteMaybeNullAttribute(StringBuilder sb, string tabs, bool isReturn);
    private static string MixinStaticGetterName(string clrName);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TextBuilder/<SplitError>d__10")]
private static IEnumerable`1<string> SplitError(string error);
    private void WriteContentType(StringBuilder sb, TypeModel type);
    private void WriteContentTypeProperties(StringBuilder sb, TypeModel type);
    private void WriteMixinProperty(StringBuilder sb, PropertyModel property, string mixinClrName);
    private void WriteProperty(StringBuilder sb, TypeModel type, PropertyModel property, string mixinClrName);
    private void WriteInterfaceProperty(StringBuilder sb, PropertyModel property);
    internal void WriteClrType(StringBuilder sb, string type);
    private static string XmlCommentString(string s);
    private void WriteNonGenericClrType(StringBuilder sb, string s);
    [CompilerGeneratedAttribute]
private string <WriteNonGenericClrType>b__18_0(Match m);
}
internal static class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TextHeaderWriter : object {
    [NullableContextAttribute("1")]
public static void WriteHeader(StringBuilder sb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TypeModel : object {
    public List`1<TypeModel> DeclaringInterfaces;
    public List`1<TypeModel> ImplementingInterfaces;
    public List`1<TypeModel> MixinTypes;
    public List`1<PropertyModel> Properties;
    public string Alias;
    private ItemTypes _itemType;
    [NullableAttribute("2")]
public TypeModel BaseType;
    public string ClrName;
    [NullableAttribute("2")]
public string Description;
    public bool HasBase;
    public int Id;
    public bool IsMixin;
    public bool IsParent;
    [NullableAttribute("2")]
public string Name;
    public int ParentId;
    public bool IsElement { get; }
    public ItemTypes ItemType { get; public set; }
    public bool get_IsElement();
    public ItemTypes get_ItemType();
    public void set_ItemType(ItemTypes value);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TypeModel/<EnumerateBaseTypes>d__21")]
public IEnumerable`1<TypeModel> EnumerateBaseTypes(bool andSelf);
    internal static void CollectImplems(ICollection`1<TypeModel> types, TypeModel type);
    public static void MapModelTypes(IList`1<TypeModel> typeModels, string ns);
}
public class Umbraco.Cms.Infrastructure.ModelsBuilder.Building.TypeModelHasher : object {
    [NullableContextAttribute("1")]
public static string Hash(IEnumerable`1<TypeModel> typeModels);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.ImplementPropertyTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    public string Alias { get; }
    public ImplementPropertyTypeAttribute(string alias);
    [CompilerGeneratedAttribute]
public string get_Alias();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("1")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.ModelsBuilderAssemblyAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IsInMemory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SourceHash>k__BackingField;
    public bool IsInMemory { get; public set; }
    public string SourceHash { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsInMemory();
    [CompilerGeneratedAttribute]
public void set_IsInMemory(bool value);
    [CompilerGeneratedAttribute]
public string get_SourceHash();
    [CompilerGeneratedAttribute]
public void set_SourceHash(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.ModelsGenerationError : object {
    private IHostingEnvironment _hostingEnvironment;
    private ModelsBuilderSettings _config;
    public ModelsGenerationError(IOptionsMonitor`1<ModelsBuilderSettings> config, IHostingEnvironment hostingEnvironment);
    public void Clear();
    public void Report(string message, Exception e);
    [NullableContextAttribute("2")]
public string GetLastError();
    [NullableContextAttribute("2")]
private string GetErrFile();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__2_0(ModelsBuilderSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.OutOfDateModelsStatus : object {
    private IHostingEnvironment _hostingEnvironment;
    private ModelsBuilderSettings _config;
    public bool IsEnabled { get; }
    public bool IsOutOfDate { get; }
    public OutOfDateModelsStatus(IOptionsMonitor`1<ModelsBuilderSettings> config, IHostingEnvironment hostingEnvironment);
    public bool get_IsEnabled();
    public bool get_IsOutOfDate();
    public sealed virtual void Handle(ContentTypeCacheRefresherNotification notification);
    public sealed virtual void Handle(DataTypeCacheRefresherNotification notification);
    public void Clear();
    private string GetFlagPath();
    private void Write();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__2_0(ModelsBuilderSettings x);
}
public static class Umbraco.Cms.Infrastructure.ModelsBuilder.PublishedModelUtility : object {
    [NullableContextAttribute("1")]
public static IPublishedContentType GetModelContentType(IPublishedSnapshotAccessor publishedSnapshotAccessor, PublishedItemType itemType, string alias);
    [NullableContextAttribute("2")]
public static IPublishedPropertyType GetModelPropertyType(IPublishedContentType contentType, Expression`1<Func`2<TModel, TValue>> selector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.RoslynCompiler : object {
    public static string GeneratedAssemblyName;
    private OutputKind _outputKind;
    private CSharpParseOptions _parseOptions;
    private IEnumerable`1<MetadataReference> _refs;
    public void CompileToFile(string pathToSourceFile, string savePath);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.ModelsBuilder.TypeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static object CreateGenericInstance(Type genericType, object typeParmObj, Object[] ctorArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.ModelsBuilder.UmbracoServices : object {
    private IContentTypeService _contentTypeService;
    private IMediaTypeService _mediaTypeService;
    private IMemberTypeService _memberTypeService;
    private IPublishedContentTypeFactory _publishedContentTypeFactory;
    private IShortStringHelper _shortStringHelper;
    public UmbracoServices(IContentTypeService contentTypeService, IMediaTypeService mediaTypeService, IMemberTypeService memberTypeService, IPublishedContentTypeFactory publishedContentTypeFactory, IShortStringHelper shortStringHelper);
    public static string GetClrName(IShortStringHelper shortStringHelper, string name, string alias);
    public IList`1<TypeModel> GetAllTypes();
    public IList`1<TypeModel> GetContentTypes();
    public IList`1<TypeModel> GetMediaTypes();
    public IList`1<TypeModel> GetMemberTypes();
    internal static IList`1<TypeModel> EnsureDistinctAliases(IList`1<TypeModel> typeModels);
    private IList`1<TypeModel> GetTypes(PublishedItemType itemType, IContentTypeComposition[] contentTypes);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobExecutedNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobExecutedNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobExecutingNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobExecutingNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobFailedNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobFailedNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobIgnoredNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobIgnoredNotification(IRecurringBackgroundJob target, EventMessages messages);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobNotification : ObjectNotification`1<IRecurringBackgroundJob> {
    [CompilerGeneratedAttribute]
private IRecurringBackgroundJob <Job>k__BackingField;
    public IRecurringBackgroundJob Job { get; }
    public RecurringBackgroundJobNotification(IRecurringBackgroundJob target, EventMessages messages);
    [CompilerGeneratedAttribute]
public IRecurringBackgroundJob get_Job();
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobStartedNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobStartedNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobStartingNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobStartingNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobStoppedNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobStoppedNotification(IRecurringBackgroundJob target, EventMessages messages);
}
public class Umbraco.Cms.Infrastructure.Notifications.RecurringBackgroundJobStoppingNotification : RecurringBackgroundJobNotification {
    [NullableContextAttribute("1")]
public RecurringBackgroundJobStoppingNotification(IRecurringBackgroundJob target, EventMessages messages);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Packaging.AutomaticPackageMigrationPlan : PackageMigrationPlan {
    protected AutomaticPackageMigrationPlan(string packageName);
    protected AutomaticPackageMigrationPlan(string packageName, string planName);
    protected AutomaticPackageMigrationPlan(string packageId, string packageName, string planName);
    protected sealed virtual void DefinePlan();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Packaging.IImportPackageBuilder {
    public abstract virtual IExecutableBuilder FromEmbeddedResource();
    public abstract virtual IExecutableBuilder FromEmbeddedResource(Type packageMigrationType);
    public abstract virtual IExecutableBuilder FromXmlDataManifest(XDocument packageDataManifest);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Packaging.ImportPackageBuilder : ExpressionBuilderBase`1<ImportPackageBuilderExpression> {
    public ImportPackageBuilder(IPackagingService packagingService, IMediaService mediaService, MediaFileManager mediaFileManager, MediaUrlGeneratorCollection mediaUrlGenerators, IShortStringHelper shortStringHelper, IContentTypeBaseServiceProvider contentTypeBaseServiceProvider, IMigrationContext context, IOptions`1<PackageMigrationSettings> options);
    public sealed virtual void Do();
    public sealed virtual IExecutableBuilder FromEmbeddedResource();
    public sealed virtual IExecutableBuilder FromEmbeddedResource(Type packageMigrationType);
    public sealed virtual IExecutableBuilder FromXmlDataManifest(XDocument packageDataManifest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Packaging.ImportPackageBuilderExpression : MigrationExpressionBase {
    private IContentTypeBaseServiceProvider _contentTypeBaseServiceProvider;
    private MediaFileManager _mediaFileManager;
    private IMediaService _mediaService;
    private MediaUrlGeneratorCollection _mediaUrlGenerators;
    private PackageMigrationSettings _packageMigrationSettings;
    private IPackagingService _packagingService;
    private IShortStringHelper _shortStringHelper;
    private bool _executed;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <EmbeddedResourceMigrationType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private XDocument <PackageDataManifest>k__BackingField;
    [NullableAttribute("2")]
public Type EmbeddedResourceMigrationType { get; public set; }
    [NullableAttribute("2")]
public XDocument PackageDataManifest { get; public set; }
    public ImportPackageBuilderExpression(IPackagingService packagingService, IMediaService mediaService, MediaFileManager mediaFileManager, MediaUrlGeneratorCollection mediaUrlGenerators, IShortStringHelper shortStringHelper, IContentTypeBaseServiceProvider contentTypeBaseServiceProvider, IMigrationContext context, IOptions`1<PackageMigrationSettings> packageMigrationSettings);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_EmbeddedResourceMigrationType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EmbeddedResourceMigrationType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public XDocument get_PackageDataManifest();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PackageDataManifest(XDocument value);
    public virtual void Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Packaging.PackageDataInstallation : object {
    private IDataValueEditorFactory _dataValueEditorFactory;
    private ILogger`1<PackageDataInstallation> _logger;
    private IFileService _fileService;
    private ILocalizationService _localizationService;
    private IDataTypeService _dataTypeService;
    private PropertyEditorCollection _propertyEditors;
    private IScopeProvider _scopeProvider;
    private IShortStringHelper _shortStringHelper;
    private IConfigurationEditorJsonSerializer _serializer;
    private IMediaService _mediaService;
    private IMediaTypeService _mediaTypeService;
    private ITemplateContentParserService _templateContentParserService;
    private ITemplateService _templateService;
    private IEntityService _entityService;
    private IContentTypeService _contentTypeService;
    private IContentService _contentService;
    public PackageDataInstallation(IDataValueEditorFactory dataValueEditorFactory, ILogger`1<PackageDataInstallation> logger, IFileService fileService, ILocalizationService localizationService, IDataTypeService dataTypeService, IEntityService entityService, IContentTypeService contentTypeService, IContentService contentService, PropertyEditorCollection propertyEditors, IScopeProvider scopeProvider, IShortStringHelper shortStringHelper, IConfigurationEditorJsonSerializer serializer, IMediaService mediaService, IMediaTypeService mediaTypeService, ITemplateContentParserService templateContentParserService, ITemplateService templateService);
    [ObsoleteAttribute("Please use new constructor, scheduled for removal in v15")]
public PackageDataInstallation(IDataValueEditorFactory dataValueEditorFactory, ILogger`1<PackageDataInstallation> logger, IFileService fileService, ILocalizationService localizationService, IDataTypeService dataTypeService, IEntityService entityService, IContentTypeService contentTypeService, IContentService contentService, PropertyEditorCollection propertyEditors, IScopeProvider scopeProvider, IShortStringHelper shortStringHelper, IConfigurationEditorJsonSerializer serializer, IMediaService mediaService, IMediaTypeService mediaTypeService);
    [ObsoleteAttribute("Use the constructor with Infrastructure.IScopeProvider and without global settings and hosting environment instead.")]
public PackageDataInstallation(IDataValueEditorFactory dataValueEditorFactory, ILogger`1<PackageDataInstallation> logger, IFileService fileService, ILocalizationService localizationService, IDataTypeService dataTypeService, IEntityService entityService, IContentTypeService contentTypeService, IContentService contentService, PropertyEditorCollection propertyEditors, IScopeProvider scopeProvider, IShortStringHelper shortStringHelper, IOptions`1<GlobalSettings> globalSettings, IConfigurationEditorJsonSerializer serializer, IMediaService mediaService, IMediaTypeService mediaTypeService, IHostingEnvironment hostingEnvironment);
    public sealed virtual InstallationSummary InstallPackageData(CompiledPackage compiledPackage, int userId);
    public sealed virtual IReadOnlyList`1<IMediaType> ImportMediaTypes(IEnumerable`1<XElement> docTypeElements, int userId);
    public IReadOnlyList`1<IMediaType> ImportMediaTypes(IEnumerable`1<XElement> docTypeElements, int userId, IEnumerable`1& entityContainersInstalled);
    public sealed virtual IReadOnlyList`1<TContentBase> ImportContentBase(IEnumerable`1<CompiledPackageContentBase> docs, IDictionary`2<string, TContentTypeComposition> importedDocumentTypes, int userId, IContentTypeBaseService`1<TContentTypeComposition> typeService, IContentServiceBase`1<TContentBase> service);
    public IEnumerable`1<TContentBase> ImportContentBase(IEnumerable`1<XElement> roots, int parentId, IDictionary`2<string, TContentTypeComposition> importedDocumentTypes, int userId, IContentTypeBaseService`1<TContentTypeComposition> typeService, IContentServiceBase`1<TContentBase> service);
    private IEnumerable`1<TContentBase> ParseContentBaseRootXml(IEnumerable`1<XElement> roots, int parentId, IDictionary`2<string, TContentTypeComposition> importedContentTypes, IContentTypeBaseService`1<TContentTypeComposition> typeService, IContentServiceBase`1<TContentBase> service);
    private IEnumerable`1<TContentBase> CreateContentFromXml(IEnumerable`1<XElement> children, TContentBase parent, IDictionary`2<string, TContentTypeComposition> importedContentTypes, IContentTypeBaseService`1<TContentTypeComposition> typeService, IContentServiceBase`1<TContentBase> service);
    private bool TryCreateContentFromXml(XElement element, TContentTypeComposition contentType, TContentBase parent, int parentId, IContentServiceBase`1<TContentBase> service, TContentBase& output);
    private TContentBase CreateContent(string name, TContentBase parent, int parentId, TContentTypeComposition contentType, Guid key, int level, int sortOrder, Nullable`1<int> templateId);
    public sealed virtual IReadOnlyList`1<IContentType> ImportDocumentType(XElement docTypeElement, int userId);
    public sealed virtual IReadOnlyList`1<IContentType> ImportDocumentTypes(IEnumerable`1<XElement> docTypeElements, int userId);
    public IReadOnlyList`1<IContentType> ImportDocumentTypes(IEnumerable`1<XElement> docTypeElements, int userId, IEnumerable`1& entityContainersInstalled);
    public IReadOnlyList`1<T> ImportDocumentTypes(IReadOnlyCollection`1<XElement> unsortedDocumentTypes, bool importStructure, int userId, IContentTypeBaseService`1<T> service);
    public IReadOnlyList`1<T> ImportDocumentTypes(IReadOnlyCollection`1<XElement> unsortedDocumentTypes, bool importStructure, int userId, IContentTypeBaseService`1<T> service, IEnumerable`1& entityContainersInstalled);
    private Dictionary`2<string, int> CreateContentTypeFolderStructure(IEnumerable`1<XElement> unsortedDocumentTypes, IEnumerable`1& entityContainersInstalled);
    private EntityContainer CreateContentTypeChildFolder(string folderName, Guid folderKey, IUmbracoEntity current);
    public sealed virtual Guid GetContentTypeKey(XElement contentType);
    public sealed virtual string GetEntityTypeAlias(XElement entityType);
    private T CreateContentTypeFromXml(XElement documentType, IReadOnlyDictionary`2<string, T> importedContentTypes, IContentTypeBaseService`1<T> service);
    private T CreateContentType(Guid key, T parent, int parentId, string alias);
    private T UpdateContentTypeFromXml(XElement documentType, T contentType, IReadOnlyDictionary`2<string, T> importedContentTypes, IContentTypeBaseService`1<T> service);
    private void UpdateHistoryCleanupPolicy(IContentType withCleanup, XElement element);
    [NullableContextAttribute("2")]
private void UpdateContentTypesAllowedTemplates(IContentType contentType, XElement allowedTemplatesElement, XElement defaultTemplateElement);
    private void UpdateContentTypesPropertyGroups(T contentType, XElement propertyGroupsContainer);
    private void UpdateContentTypesProperties(T contentType, XElement genericPropertiesElement);
    private T UpdateContentTypesStructure(T contentType, XElement structureElement, IReadOnlyDictionary`2<string, T> importedContentTypes, IContentTypeBaseService`1<T> service);
    private T FindContentTypeByAlias(string contentTypeAlias, IContentTypeBaseService`1<T> typeService);
    public sealed virtual IReadOnlyList`1<IDataType> ImportDataTypes(IReadOnlyCollection`1<XElement> dataTypeElements, int userId);
    public IReadOnlyList`1<IDataType> ImportDataTypes(IReadOnlyCollection`1<XElement> dataTypeElements, int userId, IEnumerable`1& entityContainersInstalled);
    private Dictionary`2<string, int> CreateDataTypeFolderStructure(IEnumerable`1<XElement> datatypeElements, IEnumerable`1& entityContainersInstalled);
    private EntityContainer CreateDataTypeChildFolder(string folderName, Guid folderKey, IUmbracoEntity current);
    public sealed virtual IReadOnlyList`1<IDictionaryItem> ImportDictionaryItems(IEnumerable`1<XElement> dictionaryItemElementList, int userId);
    public sealed virtual IEnumerable`1<IDictionaryItem> ImportDictionaryItem(XElement dictionaryItemElement, int userId, Nullable`1<Guid> parentId);
    private IReadOnlyList`1<IDictionaryItem> ImportDictionaryItems(IEnumerable`1<XElement> dictionaryItemElementList, List`1<ILanguage> languages, Nullable`1<Guid> parentId, int userId);
    private IEnumerable`1<IDictionaryItem> ImportDictionaryItem(XElement dictionaryItemElement, List`1<ILanguage> languages, Nullable`1<Guid> parentId, int userId);
    private IDictionaryItem UpdateDictionaryItem(IDictionaryItem dictionaryItem, XElement dictionaryItemElement, List`1<ILanguage> languages);
    private static DictionaryItem CreateNewDictionaryItem(Guid itemId, string itemName, XElement dictionaryItemElement, List`1<ILanguage> languages, Nullable`1<Guid> parentId);
    private static bool DictionaryValueIsNew(IEnumerable`1<IDictionaryTranslation> translations, XElement valueElement);
    private static void AddDictionaryTranslation(ICollection`1<IDictionaryTranslation> translations, XElement valueElement, IEnumerable`1<ILanguage> languages);
    public sealed virtual IReadOnlyList`1<ILanguage> ImportLanguages(IEnumerable`1<XElement> languageElements, int userId);
    public IReadOnlyList`1<IScript> ImportScripts(IEnumerable`1<XElement> scriptElements, int userId);
    public IReadOnlyList`1<IPartialView> ImportPartialViews(IEnumerable`1<XElement> partialViewElements, int userId);
    public IReadOnlyList`1<IFile> ImportStylesheets(IEnumerable`1<XElement> stylesheetElements, int userId);
    [ObsoleteAttribute("Use Async version instead, Scheduled to be removed in v17")]
public sealed virtual IEnumerable`1<ITemplate> ImportTemplate(XElement templateElement, int userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Packaging.PackageDataInstallation/<ImportTemplateAsync>d__63")]
public sealed virtual Task`1<IEnumerable`1<ITemplate>> ImportTemplateAsync(XElement templateElement, int userId);
    [ObsoleteAttribute("Use Async version instead, Scheduled to be removed in v17")]
public sealed virtual IReadOnlyList`1<ITemplate> ImportTemplates(IReadOnlyCollection`1<XElement> templateElements, int userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Packaging.PackageDataInstallation/<ImportTemplatesAsync>d__65")]
public sealed virtual Task`1<IReadOnlyList`1<ITemplate>> ImportTemplatesAsync(IReadOnlyCollection`1<XElement> templateElements, int userId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Packaging.PackageInstallation : object {
    private IPackageDataInstallation _packageDataInstallation;
    private CompiledPackageXmlParser _parser;
    public PackageInstallation(IPackageDataInstallation packageDataInstallation, CompiledPackageXmlParser parser);
    public sealed virtual CompiledPackage ReadPackage(XDocument packageXmlFile);
    public sealed virtual InstallationSummary InstallPackageData(CompiledPackage compiledPackage, int userId, PackageDefinition& packageDefinition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Packaging.PackageMigrationBase : MigrationBase {
    private IContentTypeBaseServiceProvider _contentTypeBaseServiceProvider;
    private MediaFileManager _mediaFileManager;
    private IMediaService _mediaService;
    private MediaUrlGeneratorCollection _mediaUrlGenerators;
    private IOptions`1<PackageMigrationSettings> _packageMigrationsSettings;
    private IPackagingService _packagingService;
    private IShortStringHelper _shortStringHelper;
    public IImportPackageBuilder ImportPackage { get; }
    public PackageMigrationBase(IPackagingService packagingService, IMediaService mediaService, MediaFileManager mediaFileManager, MediaUrlGeneratorCollection mediaUrlGenerators, IShortStringHelper shortStringHelper, IContentTypeBaseServiceProvider contentTypeBaseServiceProvider, IMigrationContext context, IOptions`1<PackageMigrationSettings> packageMigrationsSettings);
    public IImportPackageBuilder get_ImportPackage();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.CustomConnectionStringDatabaseProviderMetadata : object {
    public Guid Id { get; }
    public int SortOrder { get; }
    public string DisplayName { get; }
    public string DefaultDatabaseName { get; }
    [NullableAttribute("2")]
public string ProviderName { get; }
    public bool SupportsQuickInstall { get; }
    public bool IsAvailable { get; }
    public bool RequiresServer { get; }
    [NullableAttribute("2")]
public string ServerPlaceholder { get; }
    public bool RequiresCredentials { get; }
    public bool SupportsIntegratedAuthentication { get; }
    public bool RequiresConnectionTest { get; }
    public bool ForceCreateDatabase { get; }
    public sealed virtual Guid get_Id();
    public sealed virtual int get_SortOrder();
    public sealed virtual string get_DisplayName();
    public sealed virtual string get_DefaultDatabaseName();
    [NullableContextAttribute("2")]
public sealed virtual string get_ProviderName();
    public sealed virtual bool get_SupportsQuickInstall();
    public sealed virtual bool get_IsAvailable();
    public sealed virtual bool get_RequiresServer();
    [NullableContextAttribute("2")]
public sealed virtual string get_ServerPlaceholder();
    public sealed virtual bool get_RequiresCredentials();
    public sealed virtual bool get_SupportsIntegratedAuthentication();
    public sealed virtual bool get_RequiresConnectionTest();
    public sealed virtual bool get_ForceCreateDatabase();
    public sealed virtual string GenerateConnectionString(DatabaseModel databaseModel);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.ConstraintAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Default>k__BackingField;
    public string Name { get; public set; }
    public object Default { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public object get_Default();
    [CompilerGeneratedAttribute]
public void set_Default(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.ForeignKeyAttribute : ReferencesAttribute {
    [CompilerGeneratedAttribute]
private Rule <OnDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private Rule <OnUpdate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Column>k__BackingField;
    public Rule OnDelete { get; public set; }
    public Rule OnUpdate { get; public set; }
    public string Name { get; public set; }
    public string Column { get; public set; }
    [NullableContextAttribute("1")]
public ForeignKeyAttribute(Type type);
    [CompilerGeneratedAttribute]
public Rule get_OnDelete();
    [CompilerGeneratedAttribute]
public void set_OnDelete(Rule value);
    [CompilerGeneratedAttribute]
public Rule get_OnUpdate();
    [CompilerGeneratedAttribute]
public void set_OnUpdate(Rule value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Column();
    [CompilerGeneratedAttribute]
public void set_Column(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.IndexAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexTypes <IndexType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ForColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IncludeColumns>k__BackingField;
    public string Name { get; public set; }
    public IndexTypes IndexType { get; }
    public string ForColumns { get; public set; }
    public string IncludeColumns { get; public set; }
    public IndexAttribute(IndexTypes indexType);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IndexTypes get_IndexType();
    [CompilerGeneratedAttribute]
public string get_ForColumns();
    [CompilerGeneratedAttribute]
public void set_ForColumns(string value);
    [CompilerGeneratedAttribute]
public string get_IncludeColumns();
    [CompilerGeneratedAttribute]
public void set_IncludeColumns(string value);
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.IndexTypes : Enum {
    public int value__;
    public static IndexTypes Clustered;
    public static IndexTypes NonClustered;
    public static IndexTypes UniqueNonClustered;
}
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.LengthAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Length>k__BackingField;
    public int Length { get; }
    public LengthAttribute(int length);
    [CompilerGeneratedAttribute]
public int get_Length();
}
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.NullSettingAttribute : Attribute {
    [CompilerGeneratedAttribute]
private NullSettings <NullSetting>k__BackingField;
    public NullSettings NullSetting { get; public set; }
    [CompilerGeneratedAttribute]
public NullSettings get_NullSetting();
    [CompilerGeneratedAttribute]
public void set_NullSetting(NullSettings value);
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.NullSettings : Enum {
    public int value__;
    public static NullSettings Null;
    public static NullSettings NotNull;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.PrimaryKeyColumnAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <Clustered>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoIncrement>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OnColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private int <IdentitySeed>k__BackingField;
    public bool Clustered { get; public set; }
    public bool AutoIncrement { get; public set; }
    public string Name { get; public set; }
    public string OnColumns { get; public set; }
    public int IdentitySeed { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Clustered();
    [CompilerGeneratedAttribute]
public void set_Clustered(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoIncrement();
    [CompilerGeneratedAttribute]
public void set_AutoIncrement(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_OnColumns();
    [CompilerGeneratedAttribute]
public void set_OnColumns(string value);
    [CompilerGeneratedAttribute]
public int get_IdentitySeed();
    [CompilerGeneratedAttribute]
public void set_IdentitySeed(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("132")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.ReferencesAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; public set; }
    public ReferencesAttribute(Type type);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.SpecialDbType : ValueType {
    private string _dbType;
    [CompilerGeneratedAttribute]
private static SpecialDbType <NTEXT>k__BackingField;
    [CompilerGeneratedAttribute]
private static SpecialDbType <NCHAR>k__BackingField;
    [CompilerGeneratedAttribute]
private static SpecialDbType <NVARCHARMAX>k__BackingField;
    [ObsoleteAttribute("Use NVARCHARMAX instead")]
public static SpecialDbType NTEXT { get; }
    public static SpecialDbType NCHAR { get; }
    public static SpecialDbType NVARCHARMAX { get; }
    public SpecialDbType(string dbType);
    public SpecialDbType(SpecialDbTypes specialDbTypes);
    private static SpecialDbType();
    [CompilerGeneratedAttribute]
public static SpecialDbType get_NTEXT();
    [CompilerGeneratedAttribute]
public static SpecialDbType get_NCHAR();
    [CompilerGeneratedAttribute]
public static SpecialDbType get_NVARCHARMAX();
    public static string op_Implicit(SpecialDbType dbType);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public sealed virtual bool Equals(SpecialDbType other);
    public virtual int GetHashCode();
    public virtual string ToString();
    public static bool op_Equality(SpecialDbTypes x, SpecialDbType y);
    public static bool op_Inequality(SpecialDbTypes x, SpecialDbType y);
}
[AttributeUsageAttribute("128")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.SpecialDbTypeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private SpecialDbType <DatabaseType>k__BackingField;
    public SpecialDbType DatabaseType { get; }
    public SpecialDbTypeAttribute(SpecialDbTypes databaseType);
    [NullableContextAttribute("1")]
public SpecialDbTypeAttribute(string databaseType);
    [CompilerGeneratedAttribute]
public SpecialDbType get_DatabaseType();
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseAnnotations.SpecialDbTypes : Enum {
    public int value__;
    [ObsoleteAttribute("Use NVARCHARMAX instead")]
public static SpecialDbTypes NTEXT;
    public static SpecialDbTypes NCHAR;
    public static SpecialDbTypes NVARCHARMAX;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.ColumnDefinition : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DbType> <Type>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Type <PropertyType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<SpecialDbType> <CustomDbType>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Seeding>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Size>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Precision>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CustomType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConstraintName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsForeignKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsIndexed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryKeyName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryKeyColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnique>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private ModificationType <ModificationType>k__BackingField;
    [NullableAttribute("1")]
public string Name { get; public set; }
    public Nullable`1<DbType> Type { get; public set; }
    [NullableAttribute("1")]
public Type PropertyType { get; public set; }
    public Nullable`1<SpecialDbType> CustomDbType { get; public set; }
    public int Seeding { get; public set; }
    public int Size { get; public set; }
    public int Precision { get; public set; }
    public string CustomType { get; public set; }
    public object DefaultValue { get; public set; }
    public string ConstraintName { get; public set; }
    public bool IsForeignKey { get; public set; }
    public bool IsIdentity { get; public set; }
    public bool IsIndexed { get; public set; }
    public bool IsPrimaryKey { get; public set; }
    public string PrimaryKeyName { get; public set; }
    public string PrimaryKeyColumns { get; public set; }
    public bool IsNullable { get; public set; }
    public bool IsUnique { get; public set; }
    public string TableName { get; public set; }
    public ModificationType ModificationType { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual string get_Name();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DbType> get_Type();
    [CompilerGeneratedAttribute]
public virtual void set_Type(Nullable`1<DbType> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Type get_PropertyType();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_PropertyType(Type value);
    [CompilerGeneratedAttribute]
public Nullable`1<SpecialDbType> get_CustomDbType();
    [CompilerGeneratedAttribute]
public void set_CustomDbType(Nullable`1<SpecialDbType> value);
    [CompilerGeneratedAttribute]
public virtual int get_Seeding();
    [CompilerGeneratedAttribute]
public virtual void set_Seeding(int value);
    [CompilerGeneratedAttribute]
public virtual int get_Size();
    [CompilerGeneratedAttribute]
public virtual void set_Size(int value);
    [CompilerGeneratedAttribute]
public virtual int get_Precision();
    [CompilerGeneratedAttribute]
public virtual void set_Precision(int value);
    [CompilerGeneratedAttribute]
public virtual string get_CustomType();
    [CompilerGeneratedAttribute]
public virtual void set_CustomType(string value);
    [CompilerGeneratedAttribute]
public virtual object get_DefaultValue();
    [CompilerGeneratedAttribute]
public virtual void set_DefaultValue(object value);
    [CompilerGeneratedAttribute]
public virtual string get_ConstraintName();
    [CompilerGeneratedAttribute]
public virtual void set_ConstraintName(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsForeignKey();
    [CompilerGeneratedAttribute]
public virtual void set_IsForeignKey(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsIdentity();
    [CompilerGeneratedAttribute]
public virtual void set_IsIdentity(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsIndexed();
    [CompilerGeneratedAttribute]
public virtual void set_IsIndexed(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsPrimaryKey();
    [CompilerGeneratedAttribute]
public virtual void set_IsPrimaryKey(bool value);
    [CompilerGeneratedAttribute]
public virtual string get_PrimaryKeyName();
    [CompilerGeneratedAttribute]
public virtual void set_PrimaryKeyName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_PrimaryKeyColumns();
    [CompilerGeneratedAttribute]
public virtual void set_PrimaryKeyColumns(string value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsNullable();
    [CompilerGeneratedAttribute]
public virtual void set_IsNullable(bool value);
    [CompilerGeneratedAttribute]
public virtual bool get_IsUnique();
    [CompilerGeneratedAttribute]
public virtual void set_IsUnique(bool value);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual ModificationType get_ModificationType();
    [CompilerGeneratedAttribute]
public virtual void set_ModificationType(ModificationType value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.ConstraintDefinition : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Columns;
    private ConstraintType _constraintType;
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConstraintName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPrimaryKeyClustered>k__BackingField;
    public bool IsPrimaryKeyConstraint { get; }
    public bool IsUniqueConstraint { get; }
    public bool IsNonUniqueConstraint { get; }
    public string SchemaName { get; public set; }
    public string ConstraintName { get; public set; }
    public string TableName { get; public set; }
    public bool IsPrimaryKeyClustered { get; public set; }
    public ConstraintDefinition(ConstraintType type);
    public bool get_IsPrimaryKeyConstraint();
    public bool get_IsUniqueConstraint();
    public bool get_IsNonUniqueConstraint();
    [CompilerGeneratedAttribute]
public string get_SchemaName();
    [CompilerGeneratedAttribute]
public void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public string get_ConstraintName();
    [CompilerGeneratedAttribute]
public void set_ConstraintName(string value);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsPrimaryKeyClustered();
    [CompilerGeneratedAttribute]
public void set_IsPrimaryKeyClustered(bool value);
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.ConstraintType : Enum {
    public int value__;
    public static ConstraintType PrimaryKey;
    public static ConstraintType Unique;
    public static ConstraintType NonUnique;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.DbIndexDefinition : object {
    [CompilerGeneratedAttribute]
private string <IndexName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnique>k__BackingField;
    public string IndexName { get; }
    public string TableName { get; }
    public string ColumnName { get; }
    public bool IsUnique { get; }
    public DbIndexDefinition(Tuple`4<string, string, string, bool> data);
    [CompilerGeneratedAttribute]
public string get_IndexName();
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
public bool get_IsUnique();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.DefinitionFactory : object {
    public static TableDefinition GetTableDefinition(Type modelType, ISqlSyntaxProvider sqlSyntax);
    public static ColumnDefinition GetColumnDefinition(Type modelType, PropertyInfo propertyInfo, string columnName, string tableName, ISqlSyntaxProvider sqlSyntax);
    public static ForeignKeyDefinition GetForeignKeyDefinition(Type modelType, PropertyInfo propertyInfo, ForeignKeyAttribute attribute, string columnName, string tableName);
    public static IndexDefinition GetIndexDefinition(Type modelType, PropertyInfo propertyInfo, IndexAttribute attribute, string columnName, string tableName);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.DeletionDataDefinition : List`1<KeyValuePair`2<string, object>> {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.ForeignKeyDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ForeignTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ForeignTableSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryTable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrimaryTableSchema>k__BackingField;
    [CompilerGeneratedAttribute]
private Rule <OnDelete>k__BackingField;
    [CompilerGeneratedAttribute]
private Rule <OnUpdate>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <ForeignColumns>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <PrimaryColumns>k__BackingField;
    public string Name { get; public set; }
    public string ForeignTable { get; public set; }
    public string ForeignTableSchema { get; public set; }
    public string PrimaryTable { get; public set; }
    public string PrimaryTableSchema { get; public set; }
    public Rule OnDelete { get; public set; }
    public Rule OnUpdate { get; public set; }
    [NullableAttribute("1")]
public ICollection`1<string> ForeignColumns { get; public set; }
    [NullableAttribute("1")]
public ICollection`1<string> PrimaryColumns { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ForeignTable();
    [CompilerGeneratedAttribute]
public virtual void set_ForeignTable(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ForeignTableSchema();
    [CompilerGeneratedAttribute]
public virtual void set_ForeignTableSchema(string value);
    [CompilerGeneratedAttribute]
public virtual string get_PrimaryTable();
    [CompilerGeneratedAttribute]
public virtual void set_PrimaryTable(string value);
    [CompilerGeneratedAttribute]
public virtual string get_PrimaryTableSchema();
    [CompilerGeneratedAttribute]
public virtual void set_PrimaryTableSchema(string value);
    [CompilerGeneratedAttribute]
public virtual Rule get_OnDelete();
    [CompilerGeneratedAttribute]
public virtual void set_OnDelete(Rule value);
    [CompilerGeneratedAttribute]
public virtual Rule get_OnUpdate();
    [CompilerGeneratedAttribute]
public virtual void set_OnUpdate(Rule value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ICollection`1<string> get_ForeignColumns();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_ForeignColumns(ICollection`1<string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ICollection`1<string> get_PrimaryColumns();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_PrimaryColumns(ICollection`1<string> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.IndexColumnDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Direction <Direction>k__BackingField;
    public string Name { get; public set; }
    public Direction Direction { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual Direction get_Direction();
    [CompilerGeneratedAttribute]
public virtual void set_Direction(Direction value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.IndexDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICollection`1<IndexColumnDefinition> <Columns>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ICollection`1<IndexColumnDefinition> <IncludeColumns>k__BackingField;
    [CompilerGeneratedAttribute]
private IndexTypes <IndexType>k__BackingField;
    public string Name { get; public set; }
    public string SchemaName { get; public set; }
    public string TableName { get; public set; }
    public string ColumnName { get; public set; }
    [NullableAttribute("1")]
public ICollection`1<IndexColumnDefinition> Columns { get; public set; }
    [NullableAttribute("1")]
public ICollection`1<IndexColumnDefinition> IncludeColumns { get; public set; }
    public IndexTypes IndexType { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SchemaName();
    [CompilerGeneratedAttribute]
public virtual void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_TableName();
    [CompilerGeneratedAttribute]
public virtual void set_TableName(string value);
    [CompilerGeneratedAttribute]
public virtual string get_ColumnName();
    [CompilerGeneratedAttribute]
public virtual void set_ColumnName(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ICollection`1<IndexColumnDefinition> get_Columns();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_Columns(ICollection`1<IndexColumnDefinition> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual ICollection`1<IndexColumnDefinition> get_IncludeColumns();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public virtual void set_IncludeColumns(ICollection`1<IndexColumnDefinition> value);
    [CompilerGeneratedAttribute]
public IndexTypes get_IndexType();
    [CompilerGeneratedAttribute]
public void set_IndexType(IndexTypes value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.InsertionDataDefinition : List`1<KeyValuePair`2<string, object>> {
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.ModificationType : Enum {
    public int value__;
    public static ModificationType Create;
    public static ModificationType Alter;
    public static ModificationType Drop;
    public static ModificationType Rename;
    public static ModificationType Insert;
    public static ModificationType Update;
    public static ModificationType Delete;
}
public enum Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.SystemMethods : Enum {
    public int value__;
    public static SystemMethods NewGuid;
    public static SystemMethods CurrentDateTime;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DatabaseModelDefinitions.TableDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ColumnDefinition> <Columns>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<ForeignKeyDefinition> <ForeignKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private ICollection`1<IndexDefinition> <Indexes>k__BackingField;
    public string Name { get; public set; }
    public string SchemaName { get; public set; }
    public ICollection`1<ColumnDefinition> Columns { get; public set; }
    public ICollection`1<ForeignKeyDefinition> ForeignKeys { get; public set; }
    public ICollection`1<IndexDefinition> Indexes { get; public set; }
    [CompilerGeneratedAttribute]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public virtual void set_Name(string value);
    [CompilerGeneratedAttribute]
public virtual string get_SchemaName();
    [CompilerGeneratedAttribute]
public virtual void set_SchemaName(string value);
    [CompilerGeneratedAttribute]
public virtual ICollection`1<ColumnDefinition> get_Columns();
    [CompilerGeneratedAttribute]
public virtual void set_Columns(ICollection`1<ColumnDefinition> value);
    [CompilerGeneratedAttribute]
public virtual ICollection`1<ForeignKeyDefinition> get_ForeignKeys();
    [CompilerGeneratedAttribute]
public virtual void set_ForeignKeys(ICollection`1<ForeignKeyDefinition> value);
    [CompilerGeneratedAttribute]
public virtual ICollection`1<IndexDefinition> get_Indexes();
    [CompilerGeneratedAttribute]
public virtual void set_Indexes(ICollection`1<IndexDefinition> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Cms.Infrastructure.Persistence.DatabaseProviderMetadataExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<IDatabaseProviderMetadata> GetAvailable(IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata, bool onlyQuickInstall);
    [ExtensionAttribute]
public static bool CanForceCreateDatabase(IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata, IUmbracoDatabaseFactory umbracoDatabaseFactory);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GenerateConnectionString(IDatabaseProviderMetadata databaseProviderMetadata, string databaseName, string server, string login, string password, Nullable`1<bool> integratedAuth);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.DbCommandExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IDbCommand UnwrapUmbraco(IDbCommand command);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.DbProviderFactoryCreator : object {
    private IDictionary`2<string, IBulkSqlInsertProvider> _bulkSqlInsertProviders;
    private IDictionary`2<string, IDatabaseCreator> _databaseCreators;
    private Func`2<string, DbProviderFactory> _getFactory;
    private IEnumerable`1<IProviderSpecificInterceptor> _providerSpecificInterceptors;
    private IDictionary`2<string, IProviderSpecificMapperFactory> _providerSpecificMapperFactories;
    private IDictionary`2<string, ISqlSyntaxProvider> _syntaxProviders;
    [ObsoleteAttribute("Please use an alternative constructor.")]
public DbProviderFactoryCreator(Func`2<string, DbProviderFactory> getFactory, IEnumerable`1<ISqlSyntaxProvider> syntaxProviders, IEnumerable`1<IBulkSqlInsertProvider> bulkSqlInsertProviders, IEnumerable`1<IDatabaseCreator> databaseCreators, IEnumerable`1<IProviderSpecificMapperFactory> providerSpecificMapperFactories);
    public DbProviderFactoryCreator(Func`2<string, DbProviderFactory> getFactory, IEnumerable`1<ISqlSyntaxProvider> syntaxProviders, IEnumerable`1<IBulkSqlInsertProvider> bulkSqlInsertProviders, IEnumerable`1<IDatabaseCreator> databaseCreators, IEnumerable`1<IProviderSpecificMapperFactory> providerSpecificMapperFactories, IEnumerable`1<IProviderSpecificInterceptor> providerSpecificInterceptors);
    [NullableContextAttribute("2")]
public sealed virtual DbProviderFactory CreateFactory(string providerName);
    public sealed virtual ISqlSyntaxProvider GetSqlSyntaxProvider(string providerName);
    public sealed virtual IBulkSqlInsertProvider CreateBulkSqlInsertProvider(string providerName);
    public sealed virtual void CreateDatabase(string providerName, string connectionString);
    public sealed virtual NPocoMapperCollection ProviderSpecificMappers(string providerName);
    public sealed virtual IEnumerable`1<IProviderSpecificInterceptor> GetProviderSpecificInterceptors(string providerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoAccess")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.AccessDto : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LoginNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NoAccessNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<AccessRuleDto> <Rules>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public Guid Id { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("2")]
public int NodeId { get; public set; }
    [ColumnAttribute("loginNodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int LoginNodeId { get; public set; }
    [ColumnAttribute("noAccessNodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int NoAccessNodeId { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ColumnAttribute("updateDate")]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<AccessRuleDto> Rules { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_LoginNodeId();
    [CompilerGeneratedAttribute]
public void set_LoginNodeId(int value);
    [CompilerGeneratedAttribute]
public int get_NoAccessNodeId();
    [CompilerGeneratedAttribute]
public void set_NoAccessNodeId(int value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    [CompilerGeneratedAttribute]
public List`1<AccessRuleDto> get_Rules();
    [CompilerGeneratedAttribute]
public void set_Rules(List`1<AccessRuleDto> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoAccessRule")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.AccessRuleDto : object {
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <AccessId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuleValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RuleType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public Guid Id { get; public set; }
    [ColumnAttribute("accessId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.AccessDto")]
public Guid AccessId { get; public set; }
    [ColumnAttribute("ruleValue")]
[IndexAttribute("2")]
public string RuleValue { get; public set; }
    [ColumnAttribute("ruleType")]
public string RuleType { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ColumnAttribute("updateDate")]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_AccessId();
    [CompilerGeneratedAttribute]
public void set_AccessId(Guid value);
    [CompilerGeneratedAttribute]
public string get_RuleValue();
    [CompilerGeneratedAttribute]
public void set_RuleValue(string value);
    [CompilerGeneratedAttribute]
public string get_RuleType();
    [CompilerGeneratedAttribute]
public void set_RuleType(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoAudit")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.AuditEntryDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PerformingUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PerformingDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PerformingIp>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EventDateUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AffectedUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AffectedDetails>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventDetails>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("performingUserId")]
public int PerformingUserId { get; public set; }
    [ColumnAttribute("performingDetails")]
[NullSettingAttribute]
[LengthAttribute("1024")]
public string PerformingDetails { get; public set; }
    [ColumnAttribute("performingIp")]
[NullSettingAttribute]
[LengthAttribute("64")]
public string PerformingIp { get; public set; }
    [ColumnAttribute("eventDateUtc")]
[ConstraintAttribute]
public DateTime EventDateUtc { get; public set; }
    [ColumnAttribute("affectedUserId")]
public int AffectedUserId { get; public set; }
    [ColumnAttribute("affectedDetails")]
[NullSettingAttribute]
[LengthAttribute("1024")]
public string AffectedDetails { get; public set; }
    [ColumnAttribute("eventType")]
[LengthAttribute("256")]
public string EventType { get; public set; }
    [ColumnAttribute("eventDetails")]
[NullSettingAttribute]
[LengthAttribute("1024")]
public string EventDetails { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_PerformingUserId();
    [CompilerGeneratedAttribute]
public void set_PerformingUserId(int value);
    [CompilerGeneratedAttribute]
public string get_PerformingDetails();
    [CompilerGeneratedAttribute]
public void set_PerformingDetails(string value);
    [CompilerGeneratedAttribute]
public string get_PerformingIp();
    [CompilerGeneratedAttribute]
public void set_PerformingIp(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EventDateUtc();
    [CompilerGeneratedAttribute]
public void set_EventDateUtc(DateTime value);
    [CompilerGeneratedAttribute]
public int get_AffectedUserId();
    [CompilerGeneratedAttribute]
public void set_AffectedUserId(int value);
    [CompilerGeneratedAttribute]
public string get_AffectedDetails();
    [CompilerGeneratedAttribute]
public void set_AffectedDetails(string value);
    [CompilerGeneratedAttribute]
public string get_EventType();
    [CompilerGeneratedAttribute]
public void set_EventType(string value);
    [CompilerGeneratedAttribute]
public string get_EventDetails();
    [CompilerGeneratedAttribute]
public void set_EventDetails(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.AxisDefintionDto : object {
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [ColumnAttribute("nodeId")]
public int NodeId { get; public set; }
    [ColumnAttribute("alias")]
public string Alias { get; public set; }
    [ColumnAttribute("ParentID")]
public int ParentId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoCacheInstruction")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.CacheInstructionDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UtcStamp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Instructions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OriginIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InstructionCount>k__BackingField;
    [ColumnAttribute("id")]
[NullSettingAttribute]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("utcStamp")]
[NullSettingAttribute]
public DateTime UtcStamp { get; public set; }
    [ColumnAttribute("jsonInstruction")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Instructions { get; public set; }
    [ColumnAttribute("originated")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string OriginIdentity { get; public set; }
    [ColumnAttribute("instructionCount")]
[NullSettingAttribute]
[ConstraintAttribute]
public int InstructionCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public DateTime get_UtcStamp();
    [CompilerGeneratedAttribute]
public void set_UtcStamp(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Instructions();
    [CompilerGeneratedAttribute]
public void set_Instructions(string value);
    [CompilerGeneratedAttribute]
public string get_OriginIdentity();
    [CompilerGeneratedAttribute]
public void set_OriginIdentity(string value);
    [CompilerGeneratedAttribute]
public int get_InstructionCount();
    [CompilerGeneratedAttribute]
public void set_InstructionCount(int value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoConsent")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.ConsentDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Source>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <State>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("current")]
public bool Current { get; public set; }
    [ColumnAttribute("source")]
[LengthAttribute("512")]
public string Source { get; public set; }
    [ColumnAttribute("context")]
[LengthAttribute("128")]
public string Context { get; public set; }
    [ColumnAttribute("action")]
[LengthAttribute("512")]
public string Action { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ColumnAttribute("state")]
public int State { get; public set; }
    [ColumnAttribute("comment")]
[NullSettingAttribute]
public string Comment { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public bool get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(bool value);
    [CompilerGeneratedAttribute]
public string get_Source();
    [CompilerGeneratedAttribute]
public void set_Source(string value);
    [CompilerGeneratedAttribute]
public string get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(string value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public int get_State();
    [CompilerGeneratedAttribute]
public void set_State(int value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoContent")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeDto <NodeDto>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentVersionDto <ContentVersionDto>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("contentTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int ContentTypeId { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public NodeDto NodeDto { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentVersionDto ContentVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(int value);
    [CompilerGeneratedAttribute]
public NodeDto get_NodeDto();
    [CompilerGeneratedAttribute]
public void set_NodeDto(NodeDto value);
    [CompilerGeneratedAttribute]
public ContentVersionDto get_ContentVersionDto();
    [CompilerGeneratedAttribute]
public void set_ContentVersionDto(ContentVersionDto value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsContentNu")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentNuDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Rv>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <RawData>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("published")]
[IndexAttribute("1")]
public bool Published { get; public set; }
    [ColumnAttribute("data")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Data { get; public set; }
    [ColumnAttribute("rv")]
public long Rv { get; public set; }
    [ColumnAttribute("dataRaw")]
[NullSettingAttribute]
public Byte[] RawData { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public string get_Data();
    [CompilerGeneratedAttribute]
public void set_Data(string value);
    [CompilerGeneratedAttribute]
public long get_Rv();
    [CompilerGeneratedAttribute]
public void set_Rv(long value);
    [CompilerGeneratedAttribute]
public Byte[] get_RawData();
    [CompilerGeneratedAttribute]
public void set_RawData(Byte[] value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoContentSchedule")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentScheduleDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public Guid Id { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[NullSettingAttribute]
public Nullable`1<int> LanguageId { get; public set; }
    [ColumnAttribute("date")]
public DateTime Date { get; public set; }
    [ColumnAttribute("action")]
public string Action { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
}
[TableNameAttribute("cmsContentType2ContentType")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentType2ContentTypeDto : object {
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ChildId>k__BackingField;
    [ColumnAttribute("parentContentTypeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int ParentId { get; public set; }
    [ColumnAttribute("childContentTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int ChildId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
    [CompilerGeneratedAttribute]
public int get_ChildId();
    [CompilerGeneratedAttribute]
public void set_ChildId(int value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsContentTypeAllowedContentType")]
[PrimaryKeyAttribute("Id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeAllowedContentTypeDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <AllowedId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentTypeDto <ContentTypeDto>k__BackingField;
    [ColumnAttribute("Id")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("AllowedId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int AllowedId { get; public set; }
    [ColumnAttribute("SortOrder")]
[ConstraintAttribute]
public int SortOrder { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentTypeDto ContentTypeDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_AllowedId();
    [CompilerGeneratedAttribute]
public void set_AllowedId(int value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public ContentTypeDto get_ContentTypeDto();
    [CompilerGeneratedAttribute]
public void set_ContentTypeDto(ContentTypeDto value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsContentType")]
[PrimaryKeyAttribute("pk")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto : object {
    [NullableAttribute("1")]
public static string TableName;
    private string _alias;
    [CompilerGeneratedAttribute]
private int <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Thumbnail>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ListView>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsElement>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AllowAtRoot>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Variations>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private NodeDto <NodeDto>k__BackingField;
    [ColumnAttribute("pk")]
[PrimaryKeyColumnAttribute]
public int PrimaryKey { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("2")]
public int NodeId { get; public set; }
    [ColumnAttribute("alias")]
[NullSettingAttribute]
public string Alias { get; public set; }
    [ColumnAttribute("icon")]
[IndexAttribute("1")]
[NullSettingAttribute]
public string Icon { get; public set; }
    [ColumnAttribute("thumbnail")]
[ConstraintAttribute]
public string Thumbnail { get; public set; }
    [ColumnAttribute("description")]
[NullSettingAttribute]
[LengthAttribute("1500")]
public string Description { get; public set; }
    [ColumnAttribute("listView")]
[NullSettingAttribute]
public Nullable`1<Guid> ListView { get; public set; }
    [ColumnAttribute("isElement")]
[ConstraintAttribute]
public bool IsElement { get; public set; }
    [ColumnAttribute("allowAtRoot")]
[ConstraintAttribute]
public bool AllowAtRoot { get; public set; }
    [ColumnAttribute("variations")]
[ConstraintAttribute]
public byte Variations { get; public set; }
    [NullableAttribute("1")]
[ResultColumnAttribute]
[ReferenceAttribute]
public NodeDto NodeDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PrimaryKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryKey(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    public string get_Alias();
    public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Icon();
    [CompilerGeneratedAttribute]
public void set_Icon(string value);
    [CompilerGeneratedAttribute]
public string get_Thumbnail();
    [CompilerGeneratedAttribute]
public void set_Thumbnail(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ListView();
    [CompilerGeneratedAttribute]
public void set_ListView(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public bool get_IsElement();
    [CompilerGeneratedAttribute]
public void set_IsElement(bool value);
    [CompilerGeneratedAttribute]
public bool get_AllowAtRoot();
    [CompilerGeneratedAttribute]
public void set_AllowAtRoot(bool value);
    [CompilerGeneratedAttribute]
public byte get_Variations();
    [CompilerGeneratedAttribute]
public void set_Variations(byte value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public NodeDto get_NodeDto();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_NodeDto(NodeDto value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsDocumentType")]
[PrimaryKeyAttribute("contentTypeNodeId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeTemplateDto : object {
    [CompilerGeneratedAttribute]
private int <ContentTypeNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TemplateNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentTypeDto <ContentTypeDto>k__BackingField;
    [ColumnAttribute("contentTypeNodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int ContentTypeNodeId { get; public set; }
    [ColumnAttribute("templateNodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.TemplateDto")]
public int TemplateNodeId { get; public set; }
    [ColumnAttribute("IsDefault")]
[ConstraintAttribute]
public bool IsDefault { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentTypeDto ContentTypeDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ContentTypeNodeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeNodeId(int value);
    [CompilerGeneratedAttribute]
public int get_TemplateNodeId();
    [CompilerGeneratedAttribute]
public void set_TemplateNodeId(int value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public ContentTypeDto get_ContentTypeDto();
    [CompilerGeneratedAttribute]
public void set_ContentTypeDto(ContentTypeDto value);
}
[TableNameAttribute("umbracoContentVersionCleanupPolicy")]
[PrimaryKeyAttribute("contentTypeId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionCleanupPolicyDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreventCleanup>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <KeepAllVersionsNewerThanDays>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <KeepLatestVersionPerDayForDays>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Updated>k__BackingField;
    [ColumnAttribute("contentTypeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int ContentTypeId { get; public set; }
    [ColumnAttribute("preventCleanup")]
public bool PreventCleanup { get; public set; }
    [ColumnAttribute("keepAllVersionsNewerThanDays")]
[NullSettingAttribute]
public Nullable`1<int> KeepAllVersionsNewerThanDays { get; public set; }
    [ColumnAttribute("keepLatestVersionPerDayForDays")]
[NullSettingAttribute]
public Nullable`1<int> KeepLatestVersionPerDayForDays { get; public set; }
    [ColumnAttribute("updated")]
public DateTime Updated { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(int value);
    [CompilerGeneratedAttribute]
public bool get_PreventCleanup();
    [CompilerGeneratedAttribute]
public void set_PreventCleanup(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_KeepAllVersionsNewerThanDays();
    [CompilerGeneratedAttribute]
public void set_KeepAllVersionsNewerThanDays(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_KeepLatestVersionPerDayForDays();
    [CompilerGeneratedAttribute]
public void set_KeepLatestVersionPerDayForDays(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public DateTime get_Updated();
    [CompilerGeneratedAttribute]
public void set_Updated(DateTime value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoContentVersionCultureVariation")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionCultureVariationDto : object {
    [NullableAttribute("1")]
public static string TableName;
    private Nullable`1<int> _updateUserId;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("versionId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionDto")]
[IndexAttribute("2")]
public int VersionId { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("1")]
public int LanguageId { get; public set; }
    [IgnoreAttribute]
public string Culture { get; public set; }
    [ColumnAttribute("name")]
public string Name { get; public set; }
    [ColumnAttribute("date")]
public DateTime UpdateDate { get; public set; }
    [ColumnAttribute("availableUserId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
[NullSettingAttribute]
public Nullable`1<int> UpdateUserId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_VersionId();
    [CompilerGeneratedAttribute]
public void set_VersionId(int value);
    [CompilerGeneratedAttribute]
public int get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(int value);
    [CompilerGeneratedAttribute]
public string get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    public Nullable`1<int> get_UpdateUserId();
    public void set_UpdateUserId(Nullable`1<int> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoContentVersion")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionDto : object {
    [NullableAttribute("1")]
public static string TableName;
    private Nullable`1<int> _userId;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <VersionDate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Current>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentDto <ContentDto>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <PreventCleanup>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
[IndexAttribute("1")]
public int NodeId { get; public set; }
    [ColumnAttribute("versionDate")]
[ConstraintAttribute]
public DateTime VersionDate { get; public set; }
    [ColumnAttribute("userId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
[NullSettingAttribute]
public Nullable`1<int> UserId { get; public set; }
    [ColumnAttribute("current")]
[IndexAttribute("1")]
public bool Current { get; public set; }
    [ColumnAttribute("text")]
[NullSettingAttribute]
public string Text { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentDto ContentDto { get; public set; }
    [ColumnAttribute("preventCleanup")]
[ConstraintAttribute]
public bool PreventCleanup { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public DateTime get_VersionDate();
    [CompilerGeneratedAttribute]
public void set_VersionDate(DateTime value);
    public Nullable`1<int> get_UserId();
    public void set_UserId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_Current();
    [CompilerGeneratedAttribute]
public void set_Current(bool value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public ContentDto get_ContentDto();
    [CompilerGeneratedAttribute]
public void set_ContentDto(ContentDto value);
    [CompilerGeneratedAttribute]
public bool get_PreventCleanup();
    [CompilerGeneratedAttribute]
public void set_PreventCleanup(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoCreatedPackageSchema")]
[ExplicitColumnsAttribute]
[PrimaryKeyAttribute("id")]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.CreatedPackageSchemaDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <PackageId>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("name")]
[LengthAttribute("255")]
[NullSettingAttribute]
[IndexAttribute("2")]
public string Name { get; public set; }
    [ColumnAttribute("value")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Value { get; public set; }
    [ColumnAttribute("updateDate")]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [ColumnAttribute("packageId")]
[NullSettingAttribute]
public Guid PackageId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    [CompilerGeneratedAttribute]
public Guid get_PackageId();
    [CompilerGeneratedAttribute]
public void set_PackageId(Guid value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoDataType")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.DataTypeDto : object {
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditorAlias>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <EditorUiAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DbType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Configuration>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeDto <NodeDto>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("propertyEditorAlias")]
public string EditorAlias { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("propertyEditorUiAlias")]
[NullSettingAttribute]
public string EditorUiAlias { get; public set; }
    [ColumnAttribute("dbType")]
[LengthAttribute("50")]
public string DbType { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("config")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Configuration { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public NodeDto NodeDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_EditorAlias();
    [CompilerGeneratedAttribute]
public void set_EditorAlias(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_EditorUiAlias();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_EditorUiAlias(string value);
    [CompilerGeneratedAttribute]
public string get_DbType();
    [CompilerGeneratedAttribute]
public void set_DbType(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Configuration();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Configuration(string value);
    [CompilerGeneratedAttribute]
public NodeDto get_NodeDto();
    [CompilerGeneratedAttribute]
public void set_NodeDto(NodeDto value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsDictionary")]
[PrimaryKeyAttribute("pk")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.DictionaryDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <Parent>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<LanguageTextDto> <LanguageTextDtos>k__BackingField;
    [ColumnAttribute("pk")]
[PrimaryKeyColumnAttribute]
public int PrimaryKey { get; public set; }
    [ColumnAttribute("id")]
[IndexAttribute("2")]
public Guid UniqueId { get; public set; }
    [ColumnAttribute("parent")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.DictionaryDto")]
[IndexAttribute("1")]
public Nullable`1<Guid> Parent { get; public set; }
    [ColumnAttribute("key")]
[LengthAttribute("450")]
[IndexAttribute("2")]
public string Key { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ResultColumnAttribute]
[ReferenceAttribute]
public List`1<LanguageTextDto> LanguageTextDtos { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PrimaryKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryKey(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_Parent();
    [CompilerGeneratedAttribute]
public void set_Parent(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public List`1<LanguageTextDto> get_LanguageTextDtos();
    [CompilerGeneratedAttribute]
public void set_LanguageTextDtos(List`1<LanguageTextDto> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoDocumentCultureVariation")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.DocumentCultureVariationDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Edited>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Available>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("2")]
public int NodeId { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("1")]
public int LanguageId { get; public set; }
    [IgnoreAttribute]
public string Culture { get; public set; }
    [ColumnAttribute("edited")]
public bool Edited { get; public set; }
    [ColumnAttribute("available")]
public bool Available { get; public set; }
    [ColumnAttribute("published")]
public bool Published { get; public set; }
    [ColumnAttribute("name")]
[NullSettingAttribute]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(int value);
    [CompilerGeneratedAttribute]
public string get_Culture();
    [CompilerGeneratedAttribute]
public void set_Culture(string value);
    [CompilerGeneratedAttribute]
public bool get_Edited();
    [CompilerGeneratedAttribute]
public void set_Edited(bool value);
    [CompilerGeneratedAttribute]
public bool get_Available();
    [CompilerGeneratedAttribute]
public void set_Available(bool value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoDocument")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.DocumentDto : object {
    private static string TableName;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Edited>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentDto <ContentDto>k__BackingField;
    [CompilerGeneratedAttribute]
private DocumentVersionDto <DocumentVersionDto>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private DocumentVersionDto <PublishedVersionDto>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("published")]
[IndexAttribute("1")]
public bool Published { get; public set; }
    [ColumnAttribute("edited")]
public bool Edited { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentDto ContentDto { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public DocumentVersionDto DocumentVersionDto { get; public set; }
    [NullableAttribute("2")]
[ResultColumnAttribute]
[ReferenceAttribute]
public DocumentVersionDto PublishedVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public bool get_Edited();
    [CompilerGeneratedAttribute]
public void set_Edited(bool value);
    [CompilerGeneratedAttribute]
public ContentDto get_ContentDto();
    [CompilerGeneratedAttribute]
public void set_ContentDto(ContentDto value);
    [CompilerGeneratedAttribute]
public DocumentVersionDto get_DocumentVersionDto();
    [CompilerGeneratedAttribute]
public void set_DocumentVersionDto(DocumentVersionDto value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public DocumentVersionDto get_PublishedVersionDto();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PublishedVersionDto(DocumentVersionDto value);
}
[TableNameAttribute("umbracoDocument")]
[PrimaryKeyAttribute("versionId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.DocumentPublishedReadOnlyDto : object {
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Newest>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <VersionDate>k__BackingField;
    [ColumnAttribute("nodeId")]
public int NodeId { get; public set; }
    [ColumnAttribute("published")]
public bool Published { get; public set; }
    [ColumnAttribute("versionId")]
public Guid VersionId { get; public set; }
    [ColumnAttribute("newest")]
public bool Newest { get; public set; }
    [ColumnAttribute("updateDate")]
public DateTime VersionDate { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public Guid get_VersionId();
    [CompilerGeneratedAttribute]
public void set_VersionId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_Newest();
    [CompilerGeneratedAttribute]
public void set_Newest(bool value);
    [CompilerGeneratedAttribute]
public DateTime get_VersionDate();
    [CompilerGeneratedAttribute]
public void set_VersionDate(DateTime value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoDocumentVersion")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.DocumentVersionDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentVersionDto <ContentVersionDto>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionDto")]
[IndexAttribute("1")]
public int Id { get; public set; }
    [ColumnAttribute("templateId")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.TemplateDto")]
public Nullable`1<int> TemplateId { get; public set; }
    [ColumnAttribute("published")]
[IndexAttribute("1")]
public bool Published { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentVersionDto ContentVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TemplateId();
    [CompilerGeneratedAttribute]
public void set_TemplateId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public ContentVersionDto get_ContentVersionDto();
    [CompilerGeneratedAttribute]
public void set_ContentVersionDto(ContentVersionDto value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoDomain")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.DomainDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RootStructureId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DomainName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IsoCode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("domainDefaultLanguage")]
[NullSettingAttribute]
public Nullable`1<int> DefaultLanguage { get; public set; }
    [ColumnAttribute("domainRootStructureID")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public Nullable`1<int> RootStructureId { get; public set; }
    [ColumnAttribute("domainName")]
public string DomainName { get; public set; }
    [ResultColumnAttribute("languageISOCode")]
public string IsoCode { get; public set; }
    [ColumnAttribute("sortOrder")]
public int SortOrder { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_DefaultLanguage();
    [CompilerGeneratedAttribute]
public void set_DefaultLanguage(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RootStructureId();
    [CompilerGeneratedAttribute]
public void set_RootStructureId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_DomainName();
    [CompilerGeneratedAttribute]
public void set_DomainName(string value);
    [CompilerGeneratedAttribute]
public string get_IsoCode();
    [CompilerGeneratedAttribute]
public void set_IsoCode(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoExternalLogin")]
[ExplicitColumnsAttribute]
[PrimaryKeyAttribute("Id")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ExternalLoginDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserOrMemberKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderKey>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UserData>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ObsoleteAttribute("This only exists to ensure you can upgrade using external logins from umbraco version where this was used to the new where it is not used")]
[ResultColumnAttribute("userId")]
public Nullable`1<int> UserId { get; public set; }
    [ColumnAttribute("userOrMemberKey")]
[IndexAttribute("1")]
public Guid UserOrMemberKey { get; public set; }
    [ColumnAttribute("loginProvider")]
[LengthAttribute("400")]
[NullSettingAttribute]
[IndexAttribute("2")]
public string LoginProvider { get; public set; }
    [ColumnAttribute("providerKey")]
[LengthAttribute("4000")]
[NullSettingAttribute]
[IndexAttribute("1")]
public string ProviderKey { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("userData")]
[NullSettingAttribute]
[SpecialDbTypeAttribute("2")]
public string UserData { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Guid get_UserOrMemberKey();
    [CompilerGeneratedAttribute]
public void set_UserOrMemberKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_LoginProvider();
    [CompilerGeneratedAttribute]
public void set_LoginProvider(string value);
    [CompilerGeneratedAttribute]
public string get_ProviderKey();
    [CompilerGeneratedAttribute]
public void set_ProviderKey(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UserData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UserData(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoExternalLoginToken")]
[ExplicitColumnsAttribute]
[PrimaryKeyAttribute("Id")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ExternalLoginTokenDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ExternalLoginId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private ExternalLoginDto <ExternalLoginDto>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("externalLoginId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ExternalLoginDto")]
public int ExternalLoginId { get; public set; }
    [ColumnAttribute("name")]
[LengthAttribute("255")]
[NullSettingAttribute]
[IndexAttribute("2")]
public string Name { get; public set; }
    [ColumnAttribute("value")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Value { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ExternalLoginDto ExternalLoginDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_ExternalLoginId();
    [CompilerGeneratedAttribute]
public void set_ExternalLoginId(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public ExternalLoginDto get_ExternalLoginDto();
    [CompilerGeneratedAttribute]
public void set_ExternalLoginDto(ExternalLoginDto value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoKeyValue")]
[PrimaryKeyAttribute("key")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.KeyValueDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [ColumnAttribute("key")]
[LengthAttribute("256")]
[PrimaryKeyColumnAttribute]
public string Key { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("value")]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Value { get; public set; }
    [ColumnAttribute("updated")]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Value(string value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoLanguage")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private short <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IsoCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CultureName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMandatory>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FallbackLanguageId>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public short Id { get; public set; }
    [ColumnAttribute("languageISOCode")]
[IndexAttribute("2")]
[NullSettingAttribute]
[LengthAttribute("14")]
public string IsoCode { get; public set; }
    [ColumnAttribute("languageCultureName")]
[NullSettingAttribute]
[LengthAttribute("100")]
public string CultureName { get; public set; }
    [ColumnAttribute("isDefaultVariantLang")]
[ConstraintAttribute]
public bool IsDefault { get; public set; }
    [ColumnAttribute("mandatory")]
[ConstraintAttribute]
public bool IsMandatory { get; public set; }
    [ColumnAttribute("fallbackLanguageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("1")]
[NullSettingAttribute]
public Nullable`1<int> FallbackLanguageId { get; public set; }
    [CompilerGeneratedAttribute]
public short get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(short value);
    [CompilerGeneratedAttribute]
public string get_IsoCode();
    [CompilerGeneratedAttribute]
public void set_IsoCode(string value);
    [CompilerGeneratedAttribute]
public string get_CultureName();
    [CompilerGeneratedAttribute]
public void set_CultureName(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDefault();
    [CompilerGeneratedAttribute]
public void set_IsDefault(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsMandatory();
    [CompilerGeneratedAttribute]
public void set_IsMandatory(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FallbackLanguageId();
    [CompilerGeneratedAttribute]
public void set_FallbackLanguageId(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsLanguageText")]
[PrimaryKeyAttribute("pk")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageTextDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [ColumnAttribute("pk")]
[PrimaryKeyColumnAttribute]
public int PrimaryKey { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("2")]
public int LanguageId { get; public set; }
    [ColumnAttribute("UniqueId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.DictionaryDto")]
public Guid UniqueId { get; public set; }
    [ColumnAttribute("value")]
[LengthAttribute("1000")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PrimaryKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryKey(int value);
    [CompilerGeneratedAttribute]
public int get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoLock")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.LockDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("value")]
[NullSettingAttribute]
public int Value { get; public set; }
    [ColumnAttribute("name")]
[NullSettingAttribute]
[LengthAttribute("64")]
public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoLog")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.LogDto : object {
    [NullableAttribute("1")]
public static string TableName;
    private Nullable`1<int> _userId;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EntityType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Datestamp>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Header>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Parameters>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
[NullSettingAttribute]
public Nullable`1<int> UserId { get; public set; }
    [ColumnAttribute("NodeId")]
[IndexAttribute("1")]
public int NodeId { get; public set; }
    [ColumnAttribute("entityType")]
[LengthAttribute("50")]
[NullSettingAttribute]
public string EntityType { get; public set; }
    [ColumnAttribute("Datestamp")]
[ConstraintAttribute]
[IndexAttribute("1")]
public DateTime Datestamp { get; public set; }
    [NullableAttribute("1")]
[ColumnAttribute("logHeader")]
[LengthAttribute("50")]
[IndexAttribute("1")]
public string Header { get; public set; }
    [ColumnAttribute("logComment")]
[NullSettingAttribute]
[LengthAttribute("4000")]
public string Comment { get; public set; }
    [ColumnAttribute("parameters")]
[NullSettingAttribute]
[LengthAttribute("4000")]
public string Parameters { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    public Nullable`1<int> get_UserId();
    public void set_UserId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_EntityType();
    [CompilerGeneratedAttribute]
public void set_EntityType(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Datestamp();
    [CompilerGeneratedAttribute]
public void set_Datestamp(DateTime value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Header();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Header(string value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public string get_Parameters();
    [CompilerGeneratedAttribute]
public void set_Parameters(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[TableNameAttribute("umbracoLogViewerQuery")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.LogViewerQueryDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("name")]
[IndexAttribute("2")]
public string Name { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("query")]
public string Query { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.MediaDto : object {
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentDto <ContentDto>k__BackingField;
    [CompilerGeneratedAttribute]
private MediaVersionDto <MediaVersionDto>k__BackingField;
    public int NodeId { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentDto ContentDto { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public MediaVersionDto MediaVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public ContentDto get_ContentDto();
    [CompilerGeneratedAttribute]
public void set_ContentDto(ContentDto value);
    [CompilerGeneratedAttribute]
public MediaVersionDto get_MediaVersionDto();
    [CompilerGeneratedAttribute]
public void set_MediaVersionDto(MediaVersionDto value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoMediaVersion")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.MediaVersionDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentVersionDto <ContentVersionDto>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionDto")]
[IndexAttribute("2")]
public int Id { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("path")]
[NullSettingAttribute]
public string Path { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentVersionDto ContentVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Path();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public ContentVersionDto get_ContentVersionDto();
    [CompilerGeneratedAttribute]
public void set_ContentVersionDto(ContentVersionDto value);
}
[TableNameAttribute("cmsMember2MemberGroup")]
[PrimaryKeyAttribute("Member")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.Member2MemberGroupDto : object {
    [CompilerGeneratedAttribute]
private int <Member>k__BackingField;
    [CompilerGeneratedAttribute]
private int <MemberGroup>k__BackingField;
    [ColumnAttribute("Member")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.MemberDto")]
public int Member { get; public set; }
    [ColumnAttribute("MemberGroup")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int MemberGroup { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Member();
    [CompilerGeneratedAttribute]
public void set_Member(int value);
    [CompilerGeneratedAttribute]
public int get_MemberGroup();
    [CompilerGeneratedAttribute]
public void set_MemberGroup(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsMember")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.MemberDto : object {
    private static string TableName;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LoginName>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <PasswordConfig>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SecurityStampToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EmailConfirmedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FailedPasswordAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsLockedOut>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsApproved>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastLoginDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastLockoutDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastPasswordChangeDate>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentDto <ContentDto>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentVersionDto <ContentVersionDto>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("Email")]
[LengthAttribute("1000")]
[ConstraintAttribute]
public string Email { get; public set; }
    [ColumnAttribute("LoginName")]
[LengthAttribute("1000")]
[ConstraintAttribute]
[IndexAttribute("1")]
public string LoginName { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("Password")]
[LengthAttribute("1000")]
[ConstraintAttribute]
public string Password { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("passwordConfig")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string PasswordConfig { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("securityStampToken")]
[NullSettingAttribute]
[LengthAttribute("255")]
public string SecurityStampToken { get; public set; }
    [ColumnAttribute("emailConfirmedDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> EmailConfirmedDate { get; public set; }
    [ColumnAttribute("failedPasswordAttempts")]
[NullSettingAttribute]
public Nullable`1<int> FailedPasswordAttempts { get; public set; }
    [ColumnAttribute("isLockedOut")]
[ConstraintAttribute]
[NullSettingAttribute]
public bool IsLockedOut { get; public set; }
    [ColumnAttribute("isApproved")]
[ConstraintAttribute]
public bool IsApproved { get; public set; }
    [ColumnAttribute("lastLoginDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastLoginDate { get; public set; }
    [ColumnAttribute("lastLockoutDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastLockoutDate { get; public set; }
    [ColumnAttribute("lastPasswordChangeDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastPasswordChangeDate { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentDto ContentDto { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public ContentVersionDto ContentVersionDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_Email();
    [CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_LoginName();
    [CompilerGeneratedAttribute]
public void set_LoginName(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Password();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Password(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_PasswordConfig();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PasswordConfig(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_SecurityStampToken();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SecurityStampToken(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EmailConfirmedDate();
    [CompilerGeneratedAttribute]
public void set_EmailConfirmedDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FailedPasswordAttempts();
    [CompilerGeneratedAttribute]
public void set_FailedPasswordAttempts(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public bool get_IsLockedOut();
    [CompilerGeneratedAttribute]
public void set_IsLockedOut(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsApproved();
    [CompilerGeneratedAttribute]
public void set_IsApproved(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastLoginDate();
    [CompilerGeneratedAttribute]
public void set_LastLoginDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastLockoutDate();
    [CompilerGeneratedAttribute]
public void set_LastLockoutDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastPasswordChangeDate();
    [CompilerGeneratedAttribute]
public void set_LastPasswordChangeDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public ContentDto get_ContentDto();
    [CompilerGeneratedAttribute]
public void set_ContentDto(ContentDto value);
    [CompilerGeneratedAttribute]
public ContentVersionDto get_ContentVersionDto();
    [CompilerGeneratedAttribute]
public void set_ContentVersionDto(ContentVersionDto value);
}
[TableNameAttribute("cmsMemberType")]
[PrimaryKeyAttribute("pk")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.MemberPropertyTypeDto : object {
    [CompilerGeneratedAttribute]
private int <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PropertyTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ViewOnProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    [ColumnAttribute("pk")]
[PrimaryKeyColumnAttribute]
public int PrimaryKey { get; public set; }
    [ColumnAttribute("NodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("propertytypeId")]
public int PropertyTypeId { get; public set; }
    [ColumnAttribute("memberCanEdit")]
[ConstraintAttribute]
public bool CanEdit { get; public set; }
    [ColumnAttribute("viewOnProfile")]
[ConstraintAttribute]
public bool ViewOnProfile { get; public set; }
    [ColumnAttribute("isSensitive")]
[ConstraintAttribute]
public bool IsSensitive { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PrimaryKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryKey(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_PropertyTypeId();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeId(int value);
    [CompilerGeneratedAttribute]
public bool get_CanEdit();
    [CompilerGeneratedAttribute]
public void set_CanEdit(bool value);
    [CompilerGeneratedAttribute]
public bool get_ViewOnProfile();
    [CompilerGeneratedAttribute]
public void set_ViewOnProfile(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public void set_IsSensitive(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoNode")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto : object {
    public static string TableName;
    public static int NodeIdSeed;
    private Nullable`1<int> _userId;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private short <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Trashed>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <NodeObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int NodeId { get; public set; }
    [ColumnAttribute("uniqueId")]
[NullSettingAttribute]
[IndexAttribute("2")]
[ConstraintAttribute]
public Guid UniqueId { get; public set; }
    [ColumnAttribute("parentId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("1")]
public int ParentId { get; public set; }
    [ColumnAttribute("level")]
[IndexAttribute("1")]
public short Level { get; public set; }
    [ColumnAttribute("path")]
[LengthAttribute("150")]
[IndexAttribute("1")]
public string Path { get; public set; }
    [ColumnAttribute("sortOrder")]
[IndexAttribute("1")]
public int SortOrder { get; public set; }
    [ColumnAttribute("trashed")]
[ConstraintAttribute]
[IndexAttribute("1")]
public bool Trashed { get; public set; }
    [ColumnAttribute("nodeUser")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
[NullSettingAttribute]
public Nullable`1<int> UserId { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("text")]
[NullSettingAttribute]
public string Text { get; public set; }
    [ColumnAttribute("nodeObjectType")]
[NullSettingAttribute]
[IndexAttribute("1")]
public Nullable`1<Guid> NodeObjectType { get; public set; }
    [ColumnAttribute("createDate")]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
    [CompilerGeneratedAttribute]
public short get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(short value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public bool get_Trashed();
    [CompilerGeneratedAttribute]
public void set_Trashed(bool value);
    public Nullable`1<int> get_UserId();
    public void set_UserId(Nullable`1<int> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_NodeObjectType();
    [CompilerGeneratedAttribute]
public void set_NodeObjectType(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoPropertyData")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyDataDto : object {
    [NullableAttribute("1")]
public static string TableName;
    public static int VarcharLength;
    public static int SegmentLength;
    private Nullable`1<decimal> _decimalValue;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PropertyTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Segment>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <IntegerValue>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DateValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <VarcharValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TextValue>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyTypeDto <PropertyTypeDto>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("versionId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentVersionDto")]
[IndexAttribute("2")]
public int VersionId { get; public set; }
    [ColumnAttribute("propertyTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeDto")]
[IndexAttribute("1")]
public int PropertyTypeId { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("1")]
[NullSettingAttribute]
public Nullable`1<int> LanguageId { get; public set; }
    [ColumnAttribute("segment")]
[IndexAttribute("1")]
[NullSettingAttribute]
[LengthAttribute("256")]
public string Segment { get; public set; }
    [ColumnAttribute("intValue")]
[NullSettingAttribute]
public Nullable`1<int> IntegerValue { get; public set; }
    [ColumnAttribute("decimalValue")]
[NullSettingAttribute]
public Nullable`1<decimal> DecimalValue { get; public set; }
    [ColumnAttribute("dateValue")]
[NullSettingAttribute]
public Nullable`1<DateTime> DateValue { get; public set; }
    [ColumnAttribute("varcharValue")]
[NullSettingAttribute]
[LengthAttribute("512")]
public string VarcharValue { get; public set; }
    [ColumnAttribute("textValue")]
[NullSettingAttribute]
[SpecialDbTypeAttribute("2")]
public string TextValue { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public PropertyTypeDto PropertyTypeDto { get; public set; }
    [IgnoreAttribute]
public object Value { get; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_VersionId();
    [CompilerGeneratedAttribute]
public void set_VersionId(int value);
    [CompilerGeneratedAttribute]
public int get_PropertyTypeId();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeId(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Segment();
    [CompilerGeneratedAttribute]
public void set_Segment(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_IntegerValue();
    [CompilerGeneratedAttribute]
public void set_IntegerValue(Nullable`1<int> value);
    public Nullable`1<decimal> get_DecimalValue();
    public void set_DecimalValue(Nullable`1<decimal> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_DateValue();
    [CompilerGeneratedAttribute]
public void set_DateValue(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_VarcharValue();
    [CompilerGeneratedAttribute]
public void set_VarcharValue(string value);
    [CompilerGeneratedAttribute]
public string get_TextValue();
    [CompilerGeneratedAttribute]
public void set_TextValue(string value);
    [CompilerGeneratedAttribute]
public PropertyTypeDto get_PropertyTypeDto();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeDto(PropertyTypeDto value);
    public object get_Value();
    [NullableContextAttribute("1")]
public PropertyDataDto Clone(int versionId);
    [NullableContextAttribute("1")]
protected bool Equals(PropertyDataDto other);
    public virtual bool Equals(object other);
    public virtual int GetHashCode();
}
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeCommonDto : PropertyTypeDto {
    [CompilerGeneratedAttribute]
private bool <CanEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ViewOnProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    [ColumnAttribute("memberCanEdit")]
public bool CanEdit { get; public set; }
    [ColumnAttribute("viewOnProfile")]
public bool ViewOnProfile { get; public set; }
    [ColumnAttribute("isSensitive")]
public bool IsSensitive { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CanEdit();
    [CompilerGeneratedAttribute]
public void set_CanEdit(bool value);
    [CompilerGeneratedAttribute]
public bool get_ViewOnProfile();
    [CompilerGeneratedAttribute]
public void set_ViewOnProfile(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public void set_IsSensitive(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsPropertyType")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeDto : object {
    private string _alias;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DataTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PropertyTypeGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Mandatory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MandatoryMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationRegExp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationRegExpMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LabelOnTop>k__BackingField;
    [CompilerGeneratedAttribute]
private byte <Variations>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private DataTypeDto <DataTypeDto>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("dataTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.DataTypeDto")]
public int DataTypeId { get; public set; }
    [ColumnAttribute("contentTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int ContentTypeId { get; public set; }
    [ColumnAttribute("propertyTypeGroupId")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeGroupDto")]
public Nullable`1<int> PropertyTypeGroupId { get; public set; }
    [IndexAttribute("1")]
[ColumnAttribute("Alias")]
public string Alias { get; public set; }
    [ColumnAttribute("Name")]
[NullSettingAttribute]
public string Name { get; public set; }
    [ColumnAttribute("sortOrder")]
[ConstraintAttribute]
public int SortOrder { get; public set; }
    [ColumnAttribute("mandatory")]
[ConstraintAttribute]
public bool Mandatory { get; public set; }
    [ColumnAttribute("mandatoryMessage")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string MandatoryMessage { get; public set; }
    [ColumnAttribute("validationRegExp")]
[NullSettingAttribute]
public string ValidationRegExp { get; public set; }
    [ColumnAttribute("validationRegExpMessage")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string ValidationRegExpMessage { get; public set; }
    [ColumnAttribute("Description")]
[NullSettingAttribute]
[LengthAttribute("2000")]
public string Description { get; public set; }
    [ColumnAttribute("labelOnTop")]
[ConstraintAttribute]
public bool LabelOnTop { get; public set; }
    [ColumnAttribute("variations")]
[ConstraintAttribute]
public byte Variations { get; public set; }
    [NullableAttribute("1")]
[ResultColumnAttribute]
[ReferenceAttribute]
public DataTypeDto DataTypeDto { get; public set; }
    [ColumnAttribute("UniqueID")]
[NullSettingAttribute]
[ConstraintAttribute]
[IndexAttribute("2")]
public Guid UniqueId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_DataTypeId();
    [CompilerGeneratedAttribute]
public void set_DataTypeId(int value);
    [CompilerGeneratedAttribute]
public int get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PropertyTypeGroupId();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeGroupId(Nullable`1<int> value);
    public string get_Alias();
    public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public bool get_Mandatory();
    [CompilerGeneratedAttribute]
public void set_Mandatory(bool value);
    [CompilerGeneratedAttribute]
public string get_MandatoryMessage();
    [CompilerGeneratedAttribute]
public void set_MandatoryMessage(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationRegExp();
    [CompilerGeneratedAttribute]
public void set_ValidationRegExp(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationRegExpMessage();
    [CompilerGeneratedAttribute]
public void set_ValidationRegExpMessage(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_LabelOnTop();
    [CompilerGeneratedAttribute]
public void set_LabelOnTop(bool value);
    [CompilerGeneratedAttribute]
public byte get_Variations();
    [CompilerGeneratedAttribute]
public void set_Variations(byte value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public DataTypeDto get_DataTypeDto();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_DataTypeDto(DataTypeDto value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsPropertyTypeGroup")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeGroupDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private short <Type>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private List`1<PropertyTypeDto> <PropertyTypeDtos>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("uniqueID")]
[NullSettingAttribute]
[ConstraintAttribute]
[IndexAttribute("2")]
public Guid UniqueId { get; public set; }
    [ColumnAttribute("contenttypeNodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentTypeDto")]
public int ContentTypeNodeId { get; public set; }
    [ColumnAttribute("type")]
[ConstraintAttribute]
public short Type { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("text")]
public string Text { get; public set; }
    [ColumnAttribute("alias")]
public string Alias { get; public set; }
    [ColumnAttribute("sortorder")]
public int SortOrder { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ResultColumnAttribute]
[ReferenceAttribute]
public List`1<PropertyTypeDto> PropertyTypeDtos { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public int get_ContentTypeNodeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeNodeId(int value);
    [CompilerGeneratedAttribute]
public short get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(short value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Text();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public List`1<PropertyTypeDto> get_PropertyTypeDtos();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeDtos(List`1<PropertyTypeDto> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsPropertyTypeGroup")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeGroupReadOnlyDto : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [ColumnAttribute("PropertyTypeGroupId")]
public Nullable`1<int> Id { get; public set; }
    [ColumnAttribute("PropertyGroupName")]
public string Text { get; public set; }
    [ColumnAttribute("PropertyGroupSortOrder")]
public int SortOrder { get; public set; }
    [ColumnAttribute("contenttypeNodeId")]
public int ContentTypeNodeId { get; public set; }
    [ColumnAttribute("PropertyGroupUniqueID")]
public Guid UniqueId { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public int get_ContentTypeNodeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeNodeId(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("cmsPropertyType")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeReadOnlyDto : object {
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DataTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <PropertyTypeGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Mandatory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MandatoryMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationRegExp>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValidationRegExpMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <LabelOnTop>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <CanEdit>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ViewOnProfile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSensitive>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PropertyEditorAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DbType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [ColumnAttribute("PropertyTypeId")]
public Nullable`1<int> Id { get; public set; }
    [ColumnAttribute("dataTypeId")]
public int DataTypeId { get; public set; }
    [ColumnAttribute("contentTypeId")]
public int ContentTypeId { get; public set; }
    [ColumnAttribute("PropertyTypesGroupId")]
public Nullable`1<int> PropertyTypeGroupId { get; public set; }
    [ColumnAttribute("Alias")]
public string Alias { get; public set; }
    [ColumnAttribute("Name")]
public string Name { get; public set; }
    [ColumnAttribute("PropertyTypeSortOrder")]
public int SortOrder { get; public set; }
    [ColumnAttribute("mandatory")]
public bool Mandatory { get; public set; }
    [ColumnAttribute("mandatoryMessage")]
public string MandatoryMessage { get; public set; }
    [ColumnAttribute("validationRegExp")]
public string ValidationRegExp { get; public set; }
    [ColumnAttribute("validationRegExpMessage")]
public string ValidationRegExpMessage { get; public set; }
    [ColumnAttribute("Description")]
public string Description { get; public set; }
    [ColumnAttribute("labelOnTop")]
public bool LabelOnTop { get; public set; }
    [ColumnAttribute("memberCanEdit")]
public bool CanEdit { get; public set; }
    [ColumnAttribute("viewOnProfile")]
public bool ViewOnProfile { get; public set; }
    [ColumnAttribute("isSensitive")]
public bool IsSensitive { get; public set; }
    [ColumnAttribute("propertyEditorAlias")]
public string PropertyEditorAlias { get; public set; }
    [ColumnAttribute("dbType")]
public string DbType { get; public set; }
    [ColumnAttribute("UniqueID")]
public Guid UniqueId { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public int get_DataTypeId();
    [CompilerGeneratedAttribute]
public void set_DataTypeId(int value);
    [CompilerGeneratedAttribute]
public int get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_PropertyTypeGroupId();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeGroupId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public bool get_Mandatory();
    [CompilerGeneratedAttribute]
public void set_Mandatory(bool value);
    [CompilerGeneratedAttribute]
public string get_MandatoryMessage();
    [CompilerGeneratedAttribute]
public void set_MandatoryMessage(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationRegExp();
    [CompilerGeneratedAttribute]
public void set_ValidationRegExp(string value);
    [CompilerGeneratedAttribute]
public string get_ValidationRegExpMessage();
    [CompilerGeneratedAttribute]
public void set_ValidationRegExpMessage(string value);
    [CompilerGeneratedAttribute]
public string get_Description();
    [CompilerGeneratedAttribute]
public void set_Description(string value);
    [CompilerGeneratedAttribute]
public bool get_LabelOnTop();
    [CompilerGeneratedAttribute]
public void set_LabelOnTop(bool value);
    [CompilerGeneratedAttribute]
public bool get_CanEdit();
    [CompilerGeneratedAttribute]
public void set_CanEdit(bool value);
    [CompilerGeneratedAttribute]
public bool get_ViewOnProfile();
    [CompilerGeneratedAttribute]
public void set_ViewOnProfile(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSensitive();
    [CompilerGeneratedAttribute]
public void set_IsSensitive(bool value);
    [CompilerGeneratedAttribute]
public string get_PropertyEditorAlias();
    [CompilerGeneratedAttribute]
public void set_PropertyEditorAlias(string value);
    [CompilerGeneratedAttribute]
public string get_DbType();
    [CompilerGeneratedAttribute]
public void set_DbType(string value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoRedirectUrl")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.RedirectUrlDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private Guid <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ContentKey>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDateUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Culture>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlHash>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public Guid Id { get; public set; }
    [ResultColumnAttribute]
public int ContentId { get; public set; }
    [ColumnAttribute("contentKey")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public Guid ContentKey { get; public set; }
    [ColumnAttribute("createDateUtc")]
[NullSettingAttribute]
[IndexAttribute("1")]
public DateTime CreateDateUtc { get; public set; }
    [ColumnAttribute("url")]
[NullSettingAttribute]
[SpecialDbTypeAttribute("2")]
public string Url { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("culture")]
[NullSettingAttribute]
public string Culture { get; public set; }
    [ColumnAttribute("urlHash")]
[NullSettingAttribute]
[IndexAttribute("2")]
[LengthAttribute("40")]
public string UrlHash { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(Guid value);
    [CompilerGeneratedAttribute]
public int get_ContentId();
    [CompilerGeneratedAttribute]
public void set_ContentId(int value);
    [CompilerGeneratedAttribute]
public Guid get_ContentKey();
    [CompilerGeneratedAttribute]
public void set_ContentKey(Guid value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDateUtc();
    [CompilerGeneratedAttribute]
public void set_CreateDateUtc(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Culture();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Culture(string value);
    [CompilerGeneratedAttribute]
public string get_UrlHash();
    [CompilerGeneratedAttribute]
public void set_UrlHash(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoRelation")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.RelationDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ChildId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RelationType>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Datetime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Comment>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ParentObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ChildObjectType>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("parentId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("2")]
public int ParentId { get; public set; }
    [ColumnAttribute("childId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int ChildId { get; public set; }
    [ColumnAttribute("relType")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.RelationTypeDto")]
public int RelationType { get; public set; }
    [ColumnAttribute("datetime")]
[ConstraintAttribute]
public DateTime Datetime { get; public set; }
    [ColumnAttribute("comment")]
[LengthAttribute("1000")]
public string Comment { get; public set; }
    [ResultColumnAttribute]
[ColumnAttribute("parentObjectType")]
public Guid ParentObjectType { get; public set; }
    [ResultColumnAttribute]
[ColumnAttribute("childObjectType")]
public Guid ChildObjectType { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
    [CompilerGeneratedAttribute]
public int get_ChildId();
    [CompilerGeneratedAttribute]
public void set_ChildId(int value);
    [CompilerGeneratedAttribute]
public int get_RelationType();
    [CompilerGeneratedAttribute]
public void set_RelationType(int value);
    [CompilerGeneratedAttribute]
public DateTime get_Datetime();
    [CompilerGeneratedAttribute]
public void set_Datetime(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Comment();
    [CompilerGeneratedAttribute]
public void set_Comment(string value);
    [CompilerGeneratedAttribute]
public Guid get_ParentObjectType();
    [CompilerGeneratedAttribute]
public void set_ParentObjectType(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_ChildObjectType();
    [CompilerGeneratedAttribute]
public void set_ChildObjectType(Guid value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoRelationType")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.RelationTypeDto : object {
    public static int NodeIdSeed;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Dual>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ParentObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <ChildObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDependency>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("typeUniqueId")]
[IndexAttribute("2")]
public Guid UniqueId { get; public set; }
    [ColumnAttribute("dual")]
public bool Dual { get; public set; }
    [ColumnAttribute("parentObjectType")]
[NullSettingAttribute]
public Nullable`1<Guid> ParentObjectType { get; public set; }
    [ColumnAttribute("childObjectType")]
[NullSettingAttribute]
public Nullable`1<Guid> ChildObjectType { get; public set; }
    [ColumnAttribute("name")]
[NullSettingAttribute]
[IndexAttribute("2")]
public string Name { get; public set; }
    [ColumnAttribute("alias")]
[NullSettingAttribute]
[LengthAttribute("100")]
[IndexAttribute("2")]
public string Alias { get; public set; }
    [ConstraintAttribute]
[ColumnAttribute("isDependency")]
public bool IsDependency { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Guid value);
    [CompilerGeneratedAttribute]
public bool get_Dual();
    [CompilerGeneratedAttribute]
public void set_Dual(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ParentObjectType();
    [CompilerGeneratedAttribute]
public void set_ParentObjectType(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_ChildObjectType();
    [CompilerGeneratedAttribute]
public void set_ChildObjectType(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public bool get_IsDependency();
    [CompilerGeneratedAttribute]
public void set_IsDependency(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoServer")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.ServerRegistrationDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ServerIdentity>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateRegistered>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateAccessed>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsActive>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsSchedulingPublisher>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("address")]
[LengthAttribute("500")]
public string ServerAddress { get; public set; }
    [ColumnAttribute("computerName")]
[LengthAttribute("255")]
[IndexAttribute("2")]
public string ServerIdentity { get; public set; }
    [ColumnAttribute("registeredDate")]
[ConstraintAttribute]
public DateTime DateRegistered { get; public set; }
    [ColumnAttribute("lastNotifiedDate")]
public DateTime DateAccessed { get; public set; }
    [ColumnAttribute("isActive")]
[IndexAttribute("1")]
public bool IsActive { get; public set; }
    [ColumnAttribute("isSchedulingPublisher")]
public bool IsSchedulingPublisher { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_ServerAddress();
    [CompilerGeneratedAttribute]
public void set_ServerAddress(string value);
    [CompilerGeneratedAttribute]
public string get_ServerIdentity();
    [CompilerGeneratedAttribute]
public void set_ServerIdentity(string value);
    [CompilerGeneratedAttribute]
public DateTime get_DateRegistered();
    [CompilerGeneratedAttribute]
public void set_DateRegistered(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_DateAccessed();
    [CompilerGeneratedAttribute]
public void set_DateAccessed(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsActive();
    [CompilerGeneratedAttribute]
public void set_IsActive(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsSchedulingPublisher();
    [CompilerGeneratedAttribute]
public void set_IsSchedulingPublisher(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsTags")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.TagDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <LanguageId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Text>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeCount>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("group")]
[LengthAttribute("100")]
[IndexAttribute("1")]
public string Group { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
[IndexAttribute("1")]
[NullSettingAttribute]
public Nullable`1<int> LanguageId { get; public set; }
    [ColumnAttribute("tag")]
[LengthAttribute("200")]
[IndexAttribute("2")]
public string Text { get; public set; }
    [ResultColumnAttribute("NodeCount")]
public int NodeCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public string get_Text();
    [CompilerGeneratedAttribute]
public void set_Text(string value);
    [CompilerGeneratedAttribute]
public int get_NodeCount();
    [CompilerGeneratedAttribute]
public void set_NodeCount(int value);
}
[TableNameAttribute("cmsTagRelationship")]
[PrimaryKeyAttribute("nodeId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.TagRelationshipDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <TagId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PropertyTypeId>k__BackingField;
    [ColumnAttribute("nodeId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.ContentDto")]
[IndexAttribute("1")]
public int NodeId { get; public set; }
    [ColumnAttribute("tagId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.TagDto")]
public int TagId { get; public set; }
    [ColumnAttribute("propertyTypeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.PropertyTypeDto")]
public int PropertyTypeId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_TagId();
    [CompilerGeneratedAttribute]
public void set_TagId(int value);
    [CompilerGeneratedAttribute]
public int get_PropertyTypeId();
    [CompilerGeneratedAttribute]
public void set_PropertyTypeId(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("cmsTemplate")]
[PrimaryKeyAttribute("pk")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.TemplateDto : object {
    [CompilerGeneratedAttribute]
private int <PrimaryKey>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [CompilerGeneratedAttribute]
private NodeDto <NodeDto>k__BackingField;
    [ColumnAttribute("pk")]
[PrimaryKeyColumnAttribute]
public int PrimaryKey { get; public set; }
    [ColumnAttribute("nodeId")]
[IndexAttribute("2")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int NodeId { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("alias")]
[LengthAttribute("100")]
[NullSettingAttribute]
public string Alias { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public NodeDto NodeDto { get; public set; }
    [CompilerGeneratedAttribute]
public int get_PrimaryKey();
    [CompilerGeneratedAttribute]
public void set_PrimaryKey(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Alias();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Alias(string value);
    [CompilerGeneratedAttribute]
public NodeDto get_NodeDto();
    [CompilerGeneratedAttribute]
public void set_NodeDto(NodeDto value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoTwoFactorLogin")]
[ExplicitColumnsAttribute]
[PrimaryKeyAttribute("Id")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.TwoFactorLoginDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserOrMemberKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProviderName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Secret>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userOrMemberKey")]
[IndexAttribute("1")]
public Guid UserOrMemberKey { get; public set; }
    [ColumnAttribute("providerName")]
[LengthAttribute("400")]
[NullSettingAttribute]
[IndexAttribute("2")]
public string ProviderName { get; public set; }
    [ColumnAttribute("secret")]
[LengthAttribute("400")]
[NullSettingAttribute]
public string Secret { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UserOrMemberKey();
    [CompilerGeneratedAttribute]
public void set_UserOrMemberKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_ProviderName();
    [CompilerGeneratedAttribute]
public void set_ProviderName(string value);
    [CompilerGeneratedAttribute]
public string get_Secret();
    [CompilerGeneratedAttribute]
public void set_Secret(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoUser2NodeNotify")]
[PrimaryKeyAttribute("userId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.User2NodeNotifyDto : object {
    [CompilerGeneratedAttribute]
private int <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [ColumnAttribute("userId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
public int UserId { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int NodeId { get; public set; }
    [ColumnAttribute("action")]
[LengthAttribute("255")]
public string Action { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
}
[TableNameAttribute("umbracoUser2UserGroup")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.User2UserGroupDto : object {
    [CompilerGeneratedAttribute]
private int <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [ColumnAttribute("userId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
public int UserId { get; public set; }
    [ColumnAttribute("userGroupId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public int UserGroupId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(int value);
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[TableNameAttribute("umbracoUserData")]
[PrimaryKeyAttribute("key")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDataDto : object {
    public static string TableName;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Group>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [ColumnAttribute("key")]
[PrimaryKeyColumnAttribute]
public Guid Key { get; public set; }
    [ColumnAttribute("userKey")]
[NullSettingAttribute]
[IndexAttribute("1")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
public Guid UserKey { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("group")]
[NullSettingAttribute]
public string Group { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("identifier")]
[NullSettingAttribute]
public string Identifier { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("value")]
[NullSettingAttribute]
[SpecialDbTypeAttribute("2")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_UserKey();
    [CompilerGeneratedAttribute]
public void set_UserKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_Group();
    [CompilerGeneratedAttribute]
public void set_Group(string value);
    [CompilerGeneratedAttribute]
public string get_Identifier();
    [CompilerGeneratedAttribute]
public void set_Identifier(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoUser")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Disabled>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <NoConsole>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Login>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PasswordConfig>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SecurityStampToken>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <FailedLoginAttempts>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastLockoutDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastPasswordChangeDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastLoginDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <EmailConfirmedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <InvitedDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Avatar>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private List`1<UserGroupDto> <UserGroupDtos>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private HashSet`1<UserStartNodeDto> <UserStartNodeDtos>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userDisabled")]
[ConstraintAttribute]
public bool Disabled { get; public set; }
    [ColumnAttribute("key")]
[NullSettingAttribute]
[ConstraintAttribute]
[IndexAttribute("2")]
public Guid Key { get; public set; }
    [ColumnAttribute("userNoConsole")]
[ConstraintAttribute]
public bool NoConsole { get; public set; }
    [NullableAttribute("1")]
[ColumnAttribute("userName")]
public string UserName { get; public set; }
    [ColumnAttribute("userLogin")]
[LengthAttribute("125")]
[IndexAttribute("1")]
public string Login { get; public set; }
    [ColumnAttribute("userPassword")]
[LengthAttribute("500")]
public string Password { get; public set; }
    [ColumnAttribute("passwordConfig")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string PasswordConfig { get; public set; }
    [NullableAttribute("1")]
[ColumnAttribute("userEmail")]
public string Email { get; public set; }
    [ColumnAttribute("userLanguage")]
[NullSettingAttribute]
[LengthAttribute("10")]
public string UserLanguage { get; public set; }
    [ColumnAttribute("securityStampToken")]
[NullSettingAttribute]
[LengthAttribute("255")]
public string SecurityStampToken { get; public set; }
    [ColumnAttribute("failedLoginAttempts")]
[NullSettingAttribute]
public Nullable`1<int> FailedLoginAttempts { get; public set; }
    [ColumnAttribute("lastLockoutDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastLockoutDate { get; public set; }
    [ColumnAttribute("lastPasswordChangeDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastPasswordChangeDate { get; public set; }
    [ColumnAttribute("lastLoginDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> LastLoginDate { get; public set; }
    [ColumnAttribute("emailConfirmedDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> EmailConfirmedDate { get; public set; }
    [ColumnAttribute("invitedDate")]
[NullSettingAttribute]
public Nullable`1<DateTime> InvitedDate { get; public set; }
    [ColumnAttribute("createDate")]
[NullSettingAttribute]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ColumnAttribute("updateDate")]
[NullSettingAttribute]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [ColumnAttribute("avatar")]
[NullSettingAttribute]
[LengthAttribute("500")]
public string Avatar { get; public set; }
    [NullableAttribute("1")]
[ResultColumnAttribute]
[ReferenceAttribute]
public List`1<UserGroupDto> UserGroupDtos { get; public set; }
    [NullableAttribute("1")]
[ResultColumnAttribute]
[ReferenceAttribute]
public HashSet`1<UserStartNodeDto> UserStartNodeDtos { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public bool get_Disabled();
    [CompilerGeneratedAttribute]
public void set_Disabled(bool value);
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public bool get_NoConsole();
    [CompilerGeneratedAttribute]
public void set_NoConsole(bool value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_UserName();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Login();
    [CompilerGeneratedAttribute]
public void set_Login(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public string get_PasswordConfig();
    [CompilerGeneratedAttribute]
public void set_PasswordConfig(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Email();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Email(string value);
    [CompilerGeneratedAttribute]
public string get_UserLanguage();
    [CompilerGeneratedAttribute]
public void set_UserLanguage(string value);
    [CompilerGeneratedAttribute]
public string get_SecurityStampToken();
    [CompilerGeneratedAttribute]
public void set_SecurityStampToken(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_FailedLoginAttempts();
    [CompilerGeneratedAttribute]
public void set_FailedLoginAttempts(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastLockoutDate();
    [CompilerGeneratedAttribute]
public void set_LastLockoutDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastPasswordChangeDate();
    [CompilerGeneratedAttribute]
public void set_LastPasswordChangeDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LastLoginDate();
    [CompilerGeneratedAttribute]
public void set_LastLoginDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_EmailConfirmedDate();
    [CompilerGeneratedAttribute]
public void set_EmailConfirmedDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_InvitedDate();
    [CompilerGeneratedAttribute]
public void set_InvitedDate(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Avatar();
    [CompilerGeneratedAttribute]
public void set_Avatar(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public List`1<UserGroupDto> get_UserGroupDtos();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_UserGroupDtos(List`1<UserGroupDto> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public HashSet`1<UserStartNodeDto> get_UserStartNodeDtos();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_UserStartNodeDtos(HashSet`1<UserStartNodeDto> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoUserGroup2App")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2AppDto : object {
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AppAlias>k__BackingField;
    [ColumnAttribute("userGroupId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public int UserGroupId { get; public set; }
    [ColumnAttribute("app")]
[LengthAttribute("50")]
public string AppAlias { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
    [CompilerGeneratedAttribute]
public string get_AppAlias();
    [CompilerGeneratedAttribute]
public void set_AppAlias(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[TableNameAttribute("umbracoUserGroup2GranularPermission")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2GranularPermissionDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserGroupKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <UniqueId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Permission>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Context>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userGroupKey")]
[IndexAttribute("1")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public Guid UserGroupKey { get; public set; }
    [ColumnAttribute("uniqueId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[NullSettingAttribute]
[IndexAttribute("1")]
public Nullable`1<Guid> UniqueId { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("permission")]
[NullSettingAttribute]
public string Permission { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("context")]
[NullSettingAttribute]
public string Context { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UserGroupKey();
    [CompilerGeneratedAttribute]
public void set_UserGroupKey(Guid value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_UniqueId();
    [CompilerGeneratedAttribute]
public void set_UniqueId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_Permission();
    [CompilerGeneratedAttribute]
public void set_Permission(string value);
    [CompilerGeneratedAttribute]
public string get_Context();
    [CompilerGeneratedAttribute]
public void set_Context(string value);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2GranularPermissionWithIdsDto : UserGroup2GranularPermissionDto {
    [CompilerGeneratedAttribute]
private int <EntityId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [ColumnAttribute("entityId")]
public int EntityId { get; public set; }
    [ColumnAttribute("userGroupId")]
public int UserGroupId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_EntityId();
    [CompilerGeneratedAttribute]
public void set_EntityId(int value);
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
}
[TableNameAttribute("umbracoUserGroup2Language")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2LanguageDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LanguageId>k__BackingField;
    [ColumnAttribute("userGroupId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public int UserGroupId { get; public set; }
    [ColumnAttribute("languageId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.LanguageDto")]
public int LanguageId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
    [CompilerGeneratedAttribute]
public int get_LanguageId();
    [CompilerGeneratedAttribute]
public void set_LanguageId(int value);
}
[ObsoleteAttribute("Will be removed in Umbraco 18.")]
[TableNameAttribute("umbracoUserGroup2Node")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2NodeDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [ColumnAttribute("userGroupId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public int UserGroupId { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("1")]
public int NodeId { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ObsoleteAttribute("Will be removed in Umbraco 18.")]
[TableNameAttribute("umbracoUserGroup2NodePermission")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2NodePermissionDto : object {
    [CompilerGeneratedAttribute]
private int <UserGroupId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Permission>k__BackingField;
    [ColumnAttribute("userGroupId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public int UserGroupId { get; public set; }
    [ColumnAttribute("nodeId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
[IndexAttribute("1")]
public int NodeId { get; public set; }
    [ColumnAttribute("permission")]
public string Permission { get; public set; }
    [CompilerGeneratedAttribute]
public int get_UserGroupId();
    [CompilerGeneratedAttribute]
public void set_UserGroupId(int value);
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public string get_Permission();
    [CompilerGeneratedAttribute]
public void set_Permission(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RequiredMemberAttribute]
[TableNameAttribute("umbracoUserGroup2Permission")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroup2PermissionDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UserGroupKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Permission>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userGroupKey")]
[IndexAttribute("1")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto")]
public Guid UserGroupKey { get; public set; }
    [RequiredMemberAttribute]
[ColumnAttribute("permission")]
[LengthAttribute("255")]
public string Permission { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_UserGroupKey();
    [CompilerGeneratedAttribute]
public void set_UserGroupKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_Permission();
    [CompilerGeneratedAttribute]
public void set_Permission(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoUserGroup")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserGroupDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DefaultPermissions>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <UpdateDate>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Icon>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasAccessToAllLanguages>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StartContentId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StartMediaId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<UserGroup2AppDto> <UserGroup2AppDtos>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<UserGroup2LanguageDto> <UserGroup2LanguageDtos>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<UserGroup2PermissionDto> <UserGroup2PermissionDtos>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<UserGroup2GranularPermissionDto> <UserGroup2GranularPermissionDtos>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserCount>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("key")]
[NullSettingAttribute]
[ConstraintAttribute]
[IndexAttribute("2")]
public Guid Key { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("userGroupAlias")]
[LengthAttribute("200")]
[IndexAttribute("2")]
public string Alias { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("userGroupName")]
[LengthAttribute("200")]
[IndexAttribute("2")]
public string Name { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("userGroupDefaultPermissions")]
[LengthAttribute("50")]
[NullSettingAttribute]
[ObsoleteAttribute("Is not used anymore Use UserGroup2PermissionDtos instead. This will be removed in Umbraco 18.")]
public string DefaultPermissions { get; public set; }
    [ColumnAttribute("createDate")]
[NullSettingAttribute]
[ConstraintAttribute]
public DateTime CreateDate { get; public set; }
    [ColumnAttribute("updateDate")]
[NullSettingAttribute]
[ConstraintAttribute]
public DateTime UpdateDate { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute("icon")]
[NullSettingAttribute]
public string Icon { get; public set; }
    [ColumnAttribute("hasAccessToAllLanguages")]
[NullSettingAttribute]
public bool HasAccessToAllLanguages { get; public set; }
    [ColumnAttribute("startContentId")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public Nullable`1<int> StartContentId { get; public set; }
    [ColumnAttribute("startMediaId")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public Nullable`1<int> StartMediaId { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<UserGroup2AppDto> UserGroup2AppDtos { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<UserGroup2LanguageDto> UserGroup2LanguageDtos { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<UserGroup2PermissionDto> UserGroup2PermissionDtos { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<UserGroup2GranularPermissionDto> UserGroup2GranularPermissionDtos { get; public set; }
    [ResultColumnAttribute]
public int UserCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Alias();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Alias(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DefaultPermissions();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DefaultPermissions(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_UpdateDate();
    [CompilerGeneratedAttribute]
public void set_UpdateDate(DateTime value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Icon();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Icon(string value);
    [CompilerGeneratedAttribute]
public bool get_HasAccessToAllLanguages();
    [CompilerGeneratedAttribute]
public void set_HasAccessToAllLanguages(bool value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StartContentId();
    [CompilerGeneratedAttribute]
public void set_StartContentId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_StartMediaId();
    [CompilerGeneratedAttribute]
public void set_StartMediaId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public List`1<UserGroup2AppDto> get_UserGroup2AppDtos();
    [CompilerGeneratedAttribute]
public void set_UserGroup2AppDtos(List`1<UserGroup2AppDto> value);
    [CompilerGeneratedAttribute]
public List`1<UserGroup2LanguageDto> get_UserGroup2LanguageDtos();
    [CompilerGeneratedAttribute]
public void set_UserGroup2LanguageDtos(List`1<UserGroup2LanguageDto> value);
    [CompilerGeneratedAttribute]
public List`1<UserGroup2PermissionDto> get_UserGroup2PermissionDtos();
    [CompilerGeneratedAttribute]
public void set_UserGroup2PermissionDtos(List`1<UserGroup2PermissionDto> value);
    [CompilerGeneratedAttribute]
public List`1<UserGroup2GranularPermissionDto> get_UserGroup2GranularPermissionDtos();
    [CompilerGeneratedAttribute]
public void set_UserGroup2GranularPermissionDtos(List`1<UserGroup2GranularPermissionDto> value);
    [CompilerGeneratedAttribute]
public int get_UserCount();
    [CompilerGeneratedAttribute]
public void set_UserCount(int value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoUserLogin")]
[PrimaryKeyAttribute("sessionId")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserLoginDto : object {
    [NullableAttribute("1")]
public static string TableName;
    [CompilerGeneratedAttribute]
private Guid <SessionId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LoggedInUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <LastValidatedUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LoggedOutUtc>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IpAddress>k__BackingField;
    [ColumnAttribute("sessionId")]
[PrimaryKeyColumnAttribute]
public Guid SessionId { get; public set; }
    [ColumnAttribute("userId")]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
public Nullable`1<int> UserId { get; public set; }
    [ColumnAttribute("loggedInUtc")]
[NullSettingAttribute]
public DateTime LoggedInUtc { get; public set; }
    [ColumnAttribute("lastValidatedUtc")]
[NullSettingAttribute]
[IndexAttribute("1")]
public DateTime LastValidatedUtc { get; public set; }
    [ColumnAttribute("loggedOutUtc")]
[NullSettingAttribute]
public Nullable`1<DateTime> LoggedOutUtc { get; public set; }
    [ColumnAttribute("ipAddress")]
[NullSettingAttribute]
public string IpAddress { get; public set; }
    [CompilerGeneratedAttribute]
public Guid get_SessionId();
    [CompilerGeneratedAttribute]
public void set_SessionId(Guid value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public DateTime get_LoggedInUtc();
    [CompilerGeneratedAttribute]
public void set_LoggedInUtc(DateTime value);
    [CompilerGeneratedAttribute]
public DateTime get_LastValidatedUtc();
    [CompilerGeneratedAttribute]
public void set_LastValidatedUtc(DateTime value);
    [CompilerGeneratedAttribute]
public Nullable`1<DateTime> get_LoggedOutUtc();
    [CompilerGeneratedAttribute]
public void set_LoggedOutUtc(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public string get_IpAddress();
    [CompilerGeneratedAttribute]
public void set_IpAddress(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserNotificationDto : object {
    [CompilerGeneratedAttribute]
private int <NodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <NodeObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [ColumnAttribute("nodeId")]
public int NodeId { get; public set; }
    [ColumnAttribute("userId")]
public int UserId { get; public set; }
    [ColumnAttribute("nodeObjectType")]
public Guid NodeObjectType { get; public set; }
    [ColumnAttribute("action")]
public string Action { get; public set; }
    [CompilerGeneratedAttribute]
public int get_NodeId();
    [CompilerGeneratedAttribute]
public void set_NodeId(int value);
    [CompilerGeneratedAttribute]
public int get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(int value);
    [CompilerGeneratedAttribute]
public Guid get_NodeObjectType();
    [CompilerGeneratedAttribute]
public void set_NodeObjectType(Guid value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
}
[TableNameAttribute("umbracoUserStartNode")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.UserStartNodeDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private int <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartNode>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartNodeType>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("userId")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.UserDto")]
public int UserId { get; public set; }
    [ColumnAttribute("startNode")]
[NullSettingAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.NodeDto")]
public int StartNode { get; public set; }
    [ColumnAttribute("startNodeType")]
[NullSettingAttribute]
[IndexAttribute("2")]
public int StartNodeType { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public int get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(int value);
    [CompilerGeneratedAttribute]
public int get_StartNode();
    [CompilerGeneratedAttribute]
public void set_StartNode(int value);
    [CompilerGeneratedAttribute]
public int get_StartNodeType();
    [CompilerGeneratedAttribute]
public void set_StartNodeType(int value);
    [NullableContextAttribute("1")]
public static bool op_Equality(UserStartNodeDto left, UserStartNodeDto right);
    [NullableContextAttribute("1")]
public static bool op_Inequality(UserStartNodeDto left, UserStartNodeDto right);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(UserStartNodeDto other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[TableNameAttribute("umbracoWebhook2ContentTypeKeys")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.Webhook2ContentTypeKeysDto : object {
    [CompilerGeneratedAttribute]
private int <WebhookId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ContentTypeKey>k__BackingField;
    [ColumnAttribute("webhookId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookDto")]
public int WebhookId { get; public set; }
    [ColumnAttribute("entityKey")]
public Guid ContentTypeKey { get; public set; }
    [CompilerGeneratedAttribute]
public int get_WebhookId();
    [CompilerGeneratedAttribute]
public void set_WebhookId(int value);
    [CompilerGeneratedAttribute]
public Guid get_ContentTypeKey();
    [CompilerGeneratedAttribute]
public void set_ContentTypeKey(Guid value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoWebhook2Events")]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.Webhook2EventsDto : object {
    [CompilerGeneratedAttribute]
private int <WebhookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Event>k__BackingField;
    [ColumnAttribute("webhookId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookDto")]
public int WebhookId { get; public set; }
    [ColumnAttribute("event")]
public string Event { get; public set; }
    [CompilerGeneratedAttribute]
public int get_WebhookId();
    [CompilerGeneratedAttribute]
public void set_WebhookId(int value);
    [CompilerGeneratedAttribute]
public string get_Event();
    [CompilerGeneratedAttribute]
public void set_Event(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoWebhook2Headers")]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.Webhook2HeadersDto : object {
    [CompilerGeneratedAttribute]
private int <WebhookId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [ColumnAttribute("webhookId")]
[PrimaryKeyColumnAttribute]
[ForeignKeyAttribute("Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookDto")]
public int WebhookId { get; public set; }
    [ColumnAttribute("Key")]
public string Key { get; public set; }
    [ColumnAttribute("Value")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public int get_WebhookId();
    [CompilerGeneratedAttribute]
public void set_WebhookId(int value);
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(string value);
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoWebhook")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Enabled>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Webhook2EventsDto> <Webhook2Events>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Webhook2ContentTypeKeysDto> <Webhook2ContentTypeKeys>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Webhook2ContentTypeKeysDto> <Webhook2Headers>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute]
[NullSettingAttribute]
public Guid Key { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Url { get; public set; }
    [ColumnAttribute]
public bool Enabled { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<Webhook2EventsDto> Webhook2Events { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<Webhook2ContentTypeKeysDto> Webhook2ContentTypeKeys { get; public set; }
    [ResultColumnAttribute]
[ReferenceAttribute]
public List`1<Webhook2ContentTypeKeysDto> Webhook2Headers { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public bool get_Enabled();
    [CompilerGeneratedAttribute]
public void set_Enabled(bool value);
    [CompilerGeneratedAttribute]
public List`1<Webhook2EventsDto> get_Webhook2Events();
    [CompilerGeneratedAttribute]
public void set_Webhook2Events(List`1<Webhook2EventsDto> value);
    [CompilerGeneratedAttribute]
public List`1<Webhook2ContentTypeKeysDto> get_Webhook2ContentTypeKeys();
    [CompilerGeneratedAttribute]
public void set_Webhook2ContentTypeKeys(List`1<Webhook2ContentTypeKeysDto> value);
    [CompilerGeneratedAttribute]
public List`1<Webhook2ContentTypeKeysDto> get_Webhook2Headers();
    [CompilerGeneratedAttribute]
public void set_Webhook2Headers(List`1<Webhook2ContentTypeKeysDto> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoWebhookLog")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
internal class Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookLogDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <WebhookKey>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EventAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RequestBody>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ResponseBody>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExceptionOccured>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("webhookKey")]
public Guid WebhookKey { get; public set; }
    [ColumnAttribute]
[NullSettingAttribute]
public Guid Key { get; public set; }
    [ColumnAttribute]
[NullSettingAttribute]
public string StatusCode { get; public set; }
    [ColumnAttribute]
[IndexAttribute("1")]
[NullSettingAttribute]
public DateTime Date { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string Url { get; public set; }
    [ColumnAttribute]
[NullSettingAttribute]
public string EventAlias { get; public set; }
    [ColumnAttribute]
[NullSettingAttribute]
public int RetryCount { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string RequestHeaders { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string RequestBody { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string ResponseHeaders { get; public set; }
    [ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string ResponseBody { get; public set; }
    [ColumnAttribute]
public bool ExceptionOccured { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_WebhookKey();
    [CompilerGeneratedAttribute]
public void set_WebhookKey(Guid value);
    [CompilerGeneratedAttribute]
public Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public string get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public string get_EventAlias();
    [CompilerGeneratedAttribute]
public void set_EventAlias(string value);
    [CompilerGeneratedAttribute]
public int get_RetryCount();
    [CompilerGeneratedAttribute]
public void set_RetryCount(int value);
    [CompilerGeneratedAttribute]
public string get_RequestHeaders();
    [CompilerGeneratedAttribute]
public void set_RequestHeaders(string value);
    [CompilerGeneratedAttribute]
public string get_RequestBody();
    [CompilerGeneratedAttribute]
public void set_RequestBody(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseHeaders();
    [CompilerGeneratedAttribute]
public void set_ResponseHeaders(string value);
    [CompilerGeneratedAttribute]
public string get_ResponseBody();
    [CompilerGeneratedAttribute]
public void set_ResponseBody(string value);
    [CompilerGeneratedAttribute]
public bool get_ExceptionOccured();
    [CompilerGeneratedAttribute]
public void set_ExceptionOccured(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[TableNameAttribute("umbracoWebhookRequest")]
[PrimaryKeyAttribute("id")]
[ExplicitColumnsAttribute]
public class Umbraco.Cms.Infrastructure.Persistence.Dtos.WebhookRequestDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <WebhookKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Alias>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <RequestObject>k__BackingField;
    [CompilerGeneratedAttribute]
private int <RetryCount>k__BackingField;
    [ColumnAttribute("id")]
[PrimaryKeyColumnAttribute]
public int Id { get; public set; }
    [ColumnAttribute("webhookKey")]
public Guid WebhookKey { get; public set; }
    [ColumnAttribute("eventName")]
public string Alias { get; public set; }
    [NullableAttribute("2")]
[ColumnAttribute]
[SpecialDbTypeAttribute("2")]
[NullSettingAttribute]
public string RequestObject { get; public set; }
    [ColumnAttribute("retryCount")]
public int RetryCount { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public Guid get_WebhookKey();
    [CompilerGeneratedAttribute]
public void set_WebhookKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_Alias();
    [CompilerGeneratedAttribute]
public void set_Alias(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_RequestObject();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_RequestObject(string value);
    [CompilerGeneratedAttribute]
public int get_RetryCount();
    [CompilerGeneratedAttribute]
public void set_RetryCount(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.AuditEntryFactory : object {
    public static IEnumerable`1<IAuditEntry> BuildEntities(IEnumerable`1<AuditEntryDto> dtos);
    public static IAuditEntry BuildEntity(AuditEntryDto dto);
    public static AuditEntryDto BuildDto(IAuditEntry entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.CacheInstructionFactory : object {
    public static IEnumerable`1<CacheInstruction> BuildEntities(IEnumerable`1<CacheInstructionDto> dtos);
    public static CacheInstruction BuildEntity(CacheInstructionDto dto);
    public static CacheInstructionDto BuildDto(CacheInstruction entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.ConsentFactory : object {
    public static IEnumerable`1<IConsent> BuildEntities(IEnumerable`1<ConsentDto> dtos);
    public static ConsentDto BuildDto(IConsent entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Factories.ContentBaseFactory : object {
    public static Content BuildEntity(DocumentDto dto, IContentType contentType);
    public static Media BuildEntity(ContentDto dto, IMediaType contentType);
    public static Member BuildEntity(MemberDto dto, IMemberType contentType);
    public static DocumentDto BuildDto(IContent entity, Guid objectType);
    public static IEnumerable`1<ValueTuple`2<ContentSchedule, ContentScheduleDto>> BuildScheduleDto(IContent entity, ContentScheduleCollection contentSchedule, ILanguageRepository languageRepository);
    public static MediaDto BuildDto(MediaUrlGeneratorCollection mediaUrlGenerators, IMedia entity);
    public static MemberDto BuildDto(IMember entity);
    private static ContentDto BuildContentDto(IContentBase entity, Guid objectType);
    private static NodeDto BuildNodeDto(IContentBase entity, Guid objectType);
    private static ContentVersionDto BuildContentVersionDto(IContentBase entity, ContentDto contentDto);
    private static DocumentVersionDto BuildDocumentVersionDto(IContent entity, ContentDto contentDto);
    private static MediaVersionDto BuildMediaVersionDto(MediaUrlGeneratorCollection mediaUrlGenerators, IMedia entity, ContentDto contentDto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.ContentTypeFactory : object {
    public static IContentType BuildContentTypeEntity(IShortStringHelper shortStringHelper, ContentTypeDto dto);
    public static IMediaType BuildMediaTypeEntity(IShortStringHelper shortStringHelper, ContentTypeDto dto);
    public static IMemberType BuildMemberTypeEntity(IShortStringHelper shortStringHelper, ContentTypeDto dto);
    public static IEnumerable`1<MemberPropertyTypeDto> BuildMemberPropertyTypeDtos(IMemberType entity);
    public static ContentTypeDto BuildContentTypeDto(IContentTypeBase entity);
    private static void BuildCommonEntity(ContentTypeBase entity, ContentTypeDto dto, bool setVariations);
    private static NodeDto BuildNodeDto(IUmbracoEntity entity, Guid nodeObjectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.DataTypeFactory : object {
    public static IDataType BuildEntity(DataTypeDto dto, PropertyEditorCollection editors, ILogger`1<IDataType> logger, IConfigurationEditorJsonSerializer serializer);
    public static DataTypeDto BuildDto(IDataType entity, IConfigurationEditorJsonSerializer serializer);
    private static NodeDto BuildNodeDto(IDataType entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.DictionaryItemFactory : object {
    public static IDictionaryItem BuildEntity(DictionaryDto dto);
    public static DictionaryDto BuildDto(IDictionaryItem entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.DictionaryTranslationFactory : object {
    public static IDictionaryTranslation BuildEntity(LanguageTextDto dto, Guid uniqueId, ILanguage language);
    public static LanguageTextDto BuildDto(IDictionaryTranslation entity, Guid uniqueId, IDictionary`2<string, ILanguage> languagesByIsoCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.DomainFactory : object {
    public static IDomain BuildEntity(DomainDto dto);
    public static DomainDto BuildDto(IDomain entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.ExternalLoginFactory : object {
    public static IIdentityUserToken BuildEntity(ExternalLoginTokenDto dto);
    public static IIdentityUserLogin BuildEntity(ExternalLoginDto dto);
    public static ExternalLoginDto BuildDto(IIdentityUserLogin entity);
    public static ExternalLoginDto BuildDto(Guid userOrMemberKey, IExternalLogin entity, Nullable`1<int> id);
    public static ExternalLoginTokenDto BuildDto(int externalLoginId, IExternalLoginToken token, Nullable`1<int> id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.LanguageFactory : object {
    public static ILanguage BuildEntity(LanguageDto dto, string fallbackIsoCode);
    public static LanguageDto BuildDto(ILanguage entity, Nullable`1<int> fallbackLanguageId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.MemberGroupFactory : object {
    private static Guid _nodeObjectTypeId;
    private static MemberGroupFactory();
    public static IMemberGroup BuildEntity(NodeDto dto);
    public static NodeDto BuildDto(IMemberGroup entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.PropertyFactory : object {
    public static IEnumerable`1<IProperty> BuildEntities(IPropertyType[] propertyTypes, IReadOnlyCollection`1<PropertyDataDto> dtos, int publishedVersionId, ILanguageRepository languageRepository);
    public static IEnumerable`1<PropertyDataDto> BuildDtos(ContentVariation contentVariation, int currentVersionId, int publishedVersionId, IEnumerable`1<IProperty> properties, ILanguageRepository languageRepository, Boolean& edited, HashSet`1& editedCultures);
    private static PropertyDataDto BuildDto(int versionId, IProperty property, Nullable`1<int> languageId, string segment, object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.PropertyGroupFactory : object {
    internal static PropertyTypeGroupDto BuildGroupDto(PropertyGroup propertyGroup, int contentTypeId);
    internal static PropertyTypeDto BuildPropertyTypeDto(int groupId, IPropertyType propertyType, int contentTypeId);
    public static IEnumerable`1<PropertyGroup> BuildEntity(IEnumerable`1<PropertyTypeGroupDto> groupDtos, bool isPublishing, int contentTypeId, DateTime createDate, DateTime updateDate, Func`4<string, ValueStorageType, string, PropertyType> propertyTypeCtor);
    public static IEnumerable`1<PropertyTypeGroupDto> BuildDto(IEnumerable`1<PropertyGroup> entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.PublicAccessEntryFactory : object {
    public static PublicAccessEntry BuildEntity(AccessDto dto);
    public static AccessDto BuildDto(PublicAccessEntry entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.RelationFactory : object {
    public static IRelation BuildEntity(RelationDto dto, IRelationType relationType);
    public static RelationDto BuildDto(IRelation entity);
    public static RelationDto BuildDto(ReadOnlyRelation entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.RelationTypeFactory : object {
    public static IRelationType BuildEntity(RelationTypeDto dto);
    public static RelationTypeDto BuildDto(IRelationType entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.ServerRegistrationFactory : object {
    public static ServerRegistration BuildEntity(ServerRegistrationDto dto);
    public static ServerRegistrationDto BuildDto(IServerRegistration entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.TagFactory : object {
    public static ITag BuildEntity(TagDto dto);
    public static TagDto BuildDto(ITag entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.TemplateFactory : object {
    private static NodeDto BuildNodeDto(Template entity, Nullable`1<Guid> nodeObjectTypeId);
    public static Template BuildEntity(IShortStringHelper shortStringHelper, TemplateDto dto, IEnumerable`1<IUmbracoEntity> childDefinitions, Func`2<File, string> getFileContent);
    public static TemplateDto BuildDto(Template entity, Nullable`1<Guid> nodeObjectTypeId, int primaryKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.UserFactory : object {
    public static IUser BuildEntity(GlobalSettings globalSettings, UserDto dto, IDictionary`2<string, IPermissionMapper> permissionMappers);
    public static UserDto BuildDto(IUser entity);
    private static IReadOnlyUserGroup ToReadOnlyGroup(UserGroupDto group, IDictionary`2<string, IPermissionMapper> permissionMappers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.UserGroupFactory : object {
    public static IUserGroup BuildEntity(IShortStringHelper shortStringHelper, UserGroupDto dto, IDictionary`2<string, IPermissionMapper> permissionMappers);
    public static UserGroupDto BuildDto(IUserGroup entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.WebhookFactory : object {
    public static Webhook BuildEntity(WebhookDto dto, IEnumerable`1<Webhook2ContentTypeKeysDto> entityKey2WebhookDtos, IEnumerable`1<Webhook2EventsDto> event2WebhookDtos, IEnumerable`1<Webhook2HeadersDto> headersWebhookDtos);
    public static WebhookDto BuildDto(IWebhook webhook);
    public static IEnumerable`1<Webhook2ContentTypeKeysDto> BuildEntityKey2WebhookDto(IWebhook webhook);
    public static IEnumerable`1<Webhook2EventsDto> BuildEvent2WebhookDto(IWebhook webhook);
    public static IEnumerable`1<Webhook2HeadersDto> BuildHeaders2WebhookDtos(IWebhook webhook);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.WebhookLogFactory : object {
    public static WebhookLogDto CreateDto(WebhookLog log);
    public static WebhookLog DtoToEntity(WebhookLogDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.Persistence.Factories.WebhookRequestFactory : object {
    public static WebhookRequestDto CreateDto(WebhookRequest webhookRequest);
    public static WebhookRequest CreateModel(WebhookRequestDto webhookRequestDto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.FaultHandlingDbCommand : DbCommand {
    private RetryPolicy _cmdRetryPolicy;
    private RetryDbConnection _connection;
    [CompilerGeneratedAttribute]
private DbCommand <Inner>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DesignTimeVisible>k__BackingField;
    public DbCommand Inner { get; private set; }
    public string CommandText { get; public set; }
    public int CommandTimeout { get; public set; }
    public CommandType CommandType { get; public set; }
    public bool DesignTimeVisible { get; public set; }
    protected DbConnection DbConnection { get; protected set; }
    protected DbParameterCollection DbParameterCollection { get; }
    [NullableAttribute("2")]
protected DbTransaction DbTransaction { get; protected set; }
    public UpdateRowSource UpdatedRowSource { get; public set; }
    public FaultHandlingDbCommand(RetryDbConnection connection, DbCommand command, RetryPolicy cmdRetryPolicy);
    [CompilerGeneratedAttribute]
public DbCommand get_Inner();
    [CompilerGeneratedAttribute]
private void set_Inner(DbCommand value);
    public virtual string get_CommandText();
    public virtual void set_CommandText(string value);
    public virtual int get_CommandTimeout();
    public virtual void set_CommandTimeout(int value);
    public virtual CommandType get_CommandType();
    public virtual void set_CommandType(CommandType value);
    [CompilerGeneratedAttribute]
public virtual bool get_DesignTimeVisible();
    [CompilerGeneratedAttribute]
public virtual void set_DesignTimeVisible(bool value);
    protected virtual DbConnection get_DbConnection();
    protected virtual void set_DbConnection(DbConnection value);
    protected virtual DbParameterCollection get_DbParameterCollection();
    [NullableContextAttribute("2")]
protected virtual DbTransaction get_DbTransaction();
    [NullableContextAttribute("2")]
protected virtual void set_DbTransaction(DbTransaction value);
    public virtual UpdateRowSource get_UpdatedRowSource();
    public virtual void set_UpdatedRowSource(UpdateRowSource value);
    public virtual void Cancel();
    public virtual int ExecuteNonQuery();
    protected virtual void Dispose(bool disposing);
    protected virtual DbParameter CreateDbParameter();
    protected virtual DbDataReader ExecuteDbDataReader(CommandBehavior behavior);
    [NullableContextAttribute("2")]
public virtual object ExecuteScalar();
    public virtual void Prepare();
    private T Execute(Func`1<T> f);
    [CompilerGeneratedAttribute]
private int <ExecuteNonQuery>b__32_0();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private object <ExecuteScalar>b__36_0();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.FaultHandling.ITransientErrorDetectionStrategy {
    public abstract virtual bool IsTransient(Exception ex);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.RetryDbConnection : DbConnection {
    [NullableAttribute("2")]
private RetryPolicy _cmdRetryPolicy;
    private RetryPolicy _conRetryPolicy;
    [CompilerGeneratedAttribute]
private DbConnection <Inner>k__BackingField;
    public DbConnection Inner { get; }
    public string ConnectionString { get; public set; }
    public int ConnectionTimeout { get; }
    protected bool CanRaiseEvents { get; }
    public string DataSource { get; }
    public string Database { get; }
    public string ServerVersion { get; }
    public ConnectionState State { get; }
    [NullableContextAttribute("2")]
public RetryDbConnection(DbConnection connection, RetryPolicy conRetryPolicy, RetryPolicy cmdRetryPolicy);
    [CompilerGeneratedAttribute]
public DbConnection get_Inner();
    public virtual string get_ConnectionString();
    public virtual void set_ConnectionString(string value);
    public virtual int get_ConnectionTimeout();
    protected virtual bool get_CanRaiseEvents();
    public virtual string get_DataSource();
    public virtual string get_Database();
    public virtual string get_ServerVersion();
    public virtual ConnectionState get_State();
    public virtual void ChangeDatabase(string databaseName);
    protected virtual DbTransaction BeginDbTransaction(IsolationLevel isolationLevel);
    public virtual void Close();
    [NullableContextAttribute("2")]
public virtual void EnlistTransaction(Transaction transaction);
    protected virtual DbCommand CreateDbCommand();
    protected virtual void Dispose(bool disposing);
    public virtual DataTable GetSchema();
    public virtual DataTable GetSchema(string collectionName);
    public virtual DataTable GetSchema(string collectionName, String[] restrictionValues);
    public virtual void Open();
    public void Ensure();
    private void StateChangeHandler(object sender, StateChangeEventArgs stateChangeEventArguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.RetryingEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private int <CurrentRetryCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <Delay>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <LastException>k__BackingField;
    public int CurrentRetryCount { get; }
    public TimeSpan Delay { get; }
    public Exception LastException { get; }
    public RetryingEventArgs(int currentRetryCount, TimeSpan delay, Exception lastException);
    [CompilerGeneratedAttribute]
public int get_CurrentRetryCount();
    [CompilerGeneratedAttribute]
public TimeSpan get_Delay();
    [CompilerGeneratedAttribute]
public Exception get_LastException();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.RetryLimitExceededException : Exception {
    public RetryLimitExceededException(string message);
    public RetryLimitExceededException(Exception innerException);
    public RetryLimitExceededException(string message, Exception innerException);
    private RetryLimitExceededException(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.RetryPolicy : object {
    public static RetryPolicy NoRetry;
    public static RetryPolicy DefaultFixed;
    public static RetryPolicy DefaultProgressive;
    public static RetryPolicy DefaultExponential;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private EventHandler`1<RetryingEventArgs> Retrying;
    [CompilerGeneratedAttribute]
private RetryStrategy <RetryStrategy>k__BackingField;
    [CompilerGeneratedAttribute]
private ITransientErrorDetectionStrategy <ErrorDetectionStrategy>k__BackingField;
    public RetryStrategy RetryStrategy { get; }
    public ITransientErrorDetectionStrategy ErrorDetectionStrategy { get; }
    public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, RetryStrategy retryStrategy);
    public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount);
    public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan retryInterval);
    public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff);
    public RetryPolicy(ITransientErrorDetectionStrategy errorDetectionStrategy, int retryCount, TimeSpan initialInterval, TimeSpan increment);
    private static RetryPolicy();
    [CompilerGeneratedAttribute]
public void add_Retrying(EventHandler`1<RetryingEventArgs> value);
    [CompilerGeneratedAttribute]
public void remove_Retrying(EventHandler`1<RetryingEventArgs> value);
    [CompilerGeneratedAttribute]
public RetryStrategy get_RetryStrategy();
    [CompilerGeneratedAttribute]
public ITransientErrorDetectionStrategy get_ErrorDetectionStrategy();
    public virtual void ExecuteAction(Action action);
    [NullableContextAttribute("2")]
public virtual TResult ExecuteAction(Func`1<TResult> func);
    protected virtual void OnRetrying(int retryCount, Exception lastError, TimeSpan delay);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.RetryStrategy : object {
    public static int DefaultClientRetryCount;
    public static TimeSpan DefaultClientBackoff;
    public static TimeSpan DefaultMaxBackoff;
    public static TimeSpan DefaultMinBackoff;
    public static TimeSpan DefaultRetryInterval;
    public static TimeSpan DefaultRetryIncrement;
    public static bool DefaultFirstFastRetry;
    public static RetryStrategy NoRetry;
    public static RetryStrategy DefaultFixed;
    public static RetryStrategy DefaultProgressive;
    public static RetryStrategy DefaultExponential;
    [CompilerGeneratedAttribute]
private bool <FastFirstRetry>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public bool FastFirstRetry { get; public set; }
    [NullableAttribute("2")]
public string Name { get; private set; }
    [NullableContextAttribute("2")]
protected RetryStrategy(string name, bool firstFastRetry);
    private static RetryStrategy();
    [CompilerGeneratedAttribute]
public bool get_FastFirstRetry();
    [CompilerGeneratedAttribute]
public void set_FastFirstRetry(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Name(string value);
    public abstract virtual ShouldRetry GetShouldRetry();
}
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.ShouldRetry : MulticastDelegate {
    public ShouldRetry(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual bool Invoke(int retryCount, Exception lastException, TimeSpan& delay);
    public virtual IAsyncResult BeginInvoke(int retryCount, Exception lastException, TimeSpan& delay, AsyncCallback callback, object object);
    public virtual bool EndInvoke(TimeSpan& delay, IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.Strategies.ExponentialBackoff : RetryStrategy {
    private TimeSpan _deltaBackoff;
    private TimeSpan _maxBackoff;
    private TimeSpan _minBackoff;
    private int _retryCount;
    public ExponentialBackoff(int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff);
    public ExponentialBackoff(string name, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff);
    [NullableContextAttribute("2")]
public ExponentialBackoff(string name, int retryCount, TimeSpan minBackoff, TimeSpan maxBackoff, TimeSpan deltaBackoff, bool firstFastRetry);
    public virtual ShouldRetry GetShouldRetry();
    [CompilerGeneratedAttribute]
private bool <GetShouldRetry>b__8_0(int currentRetryCount, Exception lastException, TimeSpan& retryInterval);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.Strategies.FixedInterval : RetryStrategy {
    private int _retryCount;
    private TimeSpan _retryInterval;
    public FixedInterval(int retryCount);
    public FixedInterval(int retryCount, TimeSpan retryInterval);
    public FixedInterval(string name, int retryCount, TimeSpan retryInterval);
    [NullableContextAttribute("2")]
public FixedInterval(string name, int retryCount, TimeSpan retryInterval, bool firstFastRetry);
    public virtual ShouldRetry GetShouldRetry();
    [CompilerGeneratedAttribute]
private bool <GetShouldRetry>b__7_1(int currentRetryCount, Exception lastException, TimeSpan& interval);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.FaultHandling.Strategies.Incremental : RetryStrategy {
    private TimeSpan _increment;
    private TimeSpan _initialInterval;
    private int _retryCount;
    public Incremental(int retryCount, TimeSpan initialInterval, TimeSpan increment);
    public Incremental(string name, int retryCount, TimeSpan initialInterval, TimeSpan increment);
    public Incremental(string name, int retryCount, TimeSpan initialInterval, TimeSpan increment, bool firstFastRetry);
    [NullableContextAttribute("1")]
public virtual ShouldRetry GetShouldRetry();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private bool <GetShouldRetry>b__7_0(int currentRetryCount, Exception lastException, TimeSpan& retryInterval);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IBulkSqlInsertProvider {
    public string ProviderName { get; }
    public abstract virtual string get_ProviderName();
    public abstract virtual int BulkInsertRecords(IUmbracoDatabase database, IEnumerable`1<T> records);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IDatabaseCreator {
    public string ProviderName { get; }
    public abstract virtual string get_ProviderName();
    public abstract virtual void Create(string connectionString);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IDatabaseProviderMetadata {
    [DataMemberAttribute]
public Guid Id { get; }
    [DataMemberAttribute]
public int SortOrder { get; }
    [DataMemberAttribute]
public string DisplayName { get; }
    [DataMemberAttribute]
public string DefaultDatabaseName { get; }
    [NullableAttribute("2")]
[DataMemberAttribute]
public string ProviderName { get; }
    [DataMemberAttribute]
public bool SupportsQuickInstall { get; }
    [DataMemberAttribute]
public bool IsAvailable { get; }
    [DataMemberAttribute]
public bool RequiresServer { get; }
    [NullableAttribute("2")]
[DataMemberAttribute]
public string ServerPlaceholder { get; }
    [DataMemberAttribute]
public bool RequiresCredentials { get; }
    [DataMemberAttribute]
public bool SupportsIntegratedAuthentication { get; }
    [DataMemberAttribute]
public bool RequiresConnectionTest { get; }
    public bool ForceCreateDatabase { get; }
    public abstract virtual Guid get_Id();
    public abstract virtual int get_SortOrder();
    public abstract virtual string get_DisplayName();
    public abstract virtual string get_DefaultDatabaseName();
    [NullableContextAttribute("2")]
public abstract virtual string get_ProviderName();
    public abstract virtual bool get_SupportsQuickInstall();
    public abstract virtual bool get_IsAvailable();
    public abstract virtual bool get_RequiresServer();
    [NullableContextAttribute("2")]
public abstract virtual string get_ServerPlaceholder();
    public abstract virtual bool get_RequiresCredentials();
    public abstract virtual bool get_SupportsIntegratedAuthentication();
    public abstract virtual bool get_RequiresConnectionTest();
    public abstract virtual bool get_ForceCreateDatabase();
    [NullableContextAttribute("2")]
public virtual bool CanRecognizeConnectionString(string connectionString);
    public abstract virtual string GenerateConnectionString(DatabaseModel databaseModel);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IDbProviderFactoryCreator {
    [NullableContextAttribute("2")]
public abstract virtual DbProviderFactory CreateFactory(string providerName);
    public abstract virtual ISqlSyntaxProvider GetSqlSyntaxProvider(string providerName);
    public abstract virtual IBulkSqlInsertProvider CreateBulkSqlInsertProvider(string providerName);
    public abstract virtual void CreateDatabase(string providerName, string connectionString);
    public abstract virtual NPocoMapperCollection ProviderSpecificMappers(string providerName);
    public virtual IEnumerable`1<IProviderSpecificInterceptor> GetProviderSpecificInterceptors(string providerName);
}
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificConnectionInterceptor {
}
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificDataInterceptor {
}
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificExceptionInterceptor {
}
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificExecutingInterceptor {
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificInterceptor {
    public string ProviderName { get; }
    public abstract virtual string get_ProviderName();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificMapperFactory {
    public string ProviderName { get; }
    public NPocoMapperCollection Mappers { get; }
    public abstract virtual string get_ProviderName();
    public abstract virtual NPocoMapperCollection get_Mappers();
}
public interface Umbraco.Cms.Infrastructure.Persistence.IProviderSpecificTransactionInterceptor {
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.IScalarMapper {
    public abstract virtual object Map(object value);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.ISqlContext {
    public ISqlSyntaxProvider SqlSyntax { get; }
    public DatabaseType DatabaseType { get; }
    public SqlTemplates Templates { get; }
    public IPocoDataFactory PocoDataFactory { get; }
    [NullableAttribute("2")]
public IMapperCollection Mappers { get; }
    public abstract virtual ISqlSyntaxProvider get_SqlSyntax();
    public abstract virtual DatabaseType get_DatabaseType();
    public abstract virtual SqlTemplates get_Templates();
    public abstract virtual IPocoDataFactory get_PocoDataFactory();
    [NullableContextAttribute("2")]
public abstract virtual IMapperCollection get_Mappers();
    public abstract virtual Sql`1<ISqlContext> Sql();
    public abstract virtual Sql`1<ISqlContext> Sql(string sql, Object[] args);
    public abstract virtual IQuery`1<T> Query();
}
public interface Umbraco.Cms.Infrastructure.Persistence.IUmbracoDatabase {
    [NullableAttribute("1")]
public ISqlContext SqlContext { get; }
    [NullableAttribute("1")]
public string InstanceId { get; }
    public bool InTransaction { get; }
    public bool EnableSqlCount { get; public set; }
    public int SqlCount { get; }
    [NullableContextAttribute("1")]
public abstract virtual ISqlContext get_SqlContext();
    [NullableContextAttribute("1")]
public abstract virtual string get_InstanceId();
    public abstract virtual bool get_InTransaction();
    public abstract virtual bool get_EnableSqlCount();
    public abstract virtual void set_EnableSqlCount(bool value);
    public abstract virtual int get_SqlCount();
    [NullableContextAttribute("1")]
public abstract virtual int BulkInsertRecords(IEnumerable`1<T> records);
    public abstract virtual bool IsUmbracoInstalled();
    [NullableContextAttribute("1")]
public abstract virtual DatabaseSchemaResult ValidateSchema();
    [NullableContextAttribute("1")]
public virtual int ExecuteNonQuery(DbCommand command);
}
[NullableContextAttribute("2")]
public interface Umbraco.Cms.Infrastructure.Persistence.IUmbracoDatabaseFactory {
    public bool Configured { get; }
    public bool Initialized { get; }
    public string ConnectionString { get; }
    public string ProviderName { get; }
    public bool CanConnect { get; }
    [NullableAttribute("1")]
public ISqlContext SqlContext { get; }
    public IBulkSqlInsertProvider BulkSqlInsertProvider { get; }
    public abstract virtual bool get_Configured();
    public abstract virtual bool get_Initialized();
    public abstract virtual string get_ConnectionString();
    public abstract virtual string get_ProviderName();
    public abstract virtual bool get_CanConnect();
    [NullableContextAttribute("1")]
public abstract virtual ISqlContext get_SqlContext();
    public abstract virtual IBulkSqlInsertProvider get_BulkSqlInsertProvider();
    [NullableContextAttribute("1")]
public abstract virtual IUmbracoDatabase CreateDatabase();
    [NullableContextAttribute("1")]
public abstract virtual void Configure(ConnectionStrings umbracoConnectionString);
    [NullableContextAttribute("1")]
[ObsoleteAttribute("Please use alternative Configure method.")]
public virtual void Configure(string connectionString, string providerName);
    public abstract virtual void ConfigureForUpgrade();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.PublicAccessEntry")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.AccessMapper : BaseMapper {
    [NullableContextAttribute("1")]
public AccessMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IAuditEntry")]
[MapperForAttribute("Umbraco.Cms.Core.Models.AuditEntry")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.AuditEntryMapper : BaseMapper {
    [NullableContextAttribute("1")]
public AuditEntryMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.AuditItem")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IAuditItem")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.AuditItemMapper : BaseMapper {
    [NullableContextAttribute("1")]
public AuditItemMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.Mappers.BaseMapper : object {
    private object _definedLock;
    private MapperConfigurationStore _maps;
    private Lazy`1<ISqlContext> _sqlContext;
    private bool _defined;
    [NullableAttribute("2")]
private ISqlSyntaxProvider _sqlSyntax;
    protected BaseMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    internal string Map(string propertyName);
    protected abstract virtual void DefineMaps();
    protected void DefineMap(string sourceName, string targetName);
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IConsent")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Consent")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.ConsentMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ConsentMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Content")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IContent")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.ContentMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ContentMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.ContentType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IContentType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.ContentTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ContentTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.DataType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IDataType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.DataTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public DataTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.DictionaryItem")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IDictionaryItem")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.DictionaryMapper : BaseMapper {
    [NullableContextAttribute("1")]
public DictionaryMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.DictionaryTranslation")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IDictionaryTranslation")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.DictionaryTranslationMapper : BaseMapper {
    [NullableContextAttribute("1")]
public DictionaryTranslationMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IDomain")]
[MapperForAttribute("Umbraco.Cms.Core.Models.UmbracoDomain")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.DomainMapper : BaseMapper {
    [NullableContextAttribute("1")]
public DomainMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Security.IIdentityUserLogin")]
[MapperForAttribute("Umbraco.Cms.Core.Security.IdentityUserLogin")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.ExternalLoginMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ExternalLoginMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Security.IIdentityUserToken")]
[MapperForAttribute("Umbraco.Cms.Core.Security.IdentityUserToken")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.ExternalLoginTokenMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ExternalLoginTokenMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[NullableContextAttribute("1")]
[DefaultMemberAttribute("Item")]
public interface Umbraco.Cms.Infrastructure.Persistence.Mappers.IMapperCollection {
    public BaseMapper Item { get; }
    public abstract virtual BaseMapper get_Item(Type type);
    public abstract virtual bool TryGetMapper(Type type, BaseMapper& mapper);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.Mappers.IPermissionMapper {
    public string Context { get; }
    public abstract virtual string get_Context();
    public abstract virtual IGranularPermission MapFromDto(UserGroup2GranularPermissionDto dto);
}
[MapperForAttribute("Umbraco.Cms.Core.Models.KeyValue")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IKeyValue")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.KeyValueMapper : BaseMapper {
    [NullableContextAttribute("1")]
public KeyValueMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.ILanguage")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Language")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.LanguageMapper : BaseMapper {
    [NullableContextAttribute("1")]
public LanguageMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.ILogViewerQuery")]
[MapperForAttribute("Umbraco.Cms.Core.Models.LogViewerQuery")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.LogViewerQueryMapper : BaseMapper {
    [NullableContextAttribute("1")]
public LogViewerQueryMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DefaultMemberAttribute("Item")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MapperCollection : BuilderCollectionBase`1<BaseMapper> {
    private Lazy`1<ConcurrentDictionary`2<Type, BaseMapper>> _index;
    public BaseMapper Item { get; }
    public MapperCollection(Func`1<IEnumerable`1<BaseMapper>> items);
    public sealed virtual BaseMapper get_Item(Type type);
    public sealed virtual bool TryGetMapper(Type type, BaseMapper& mapper);
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, BaseMapper> <.ctor>b__1_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MapperCollectionBuilder : SetCollectionBuilderBase`3<MapperCollectionBuilder, MapperCollection, BaseMapper> {
    protected MapperCollectionBuilder This { get; }
    protected virtual MapperCollectionBuilder get_This();
    public virtual void RegisterWith(IServiceCollection services);
    public MapperCollectionBuilder AddCoreMappers();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MapperConfigurationStore : ConcurrentDictionary`2<Type, ConcurrentDictionary`2<string, string>> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MapperForAttribute : Attribute {
    [CompilerGeneratedAttribute]
private Type <EntityType>k__BackingField;
    public Type EntityType { get; }
    public MapperForAttribute(Type entityType);
    [CompilerGeneratedAttribute]
public Type get_EntityType();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IMedia")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Media")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MediaMapper : BaseMapper {
    [NullableContextAttribute("1")]
public MediaMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IMediaType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.MediaType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MediaTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public MediaTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IMemberGroup")]
[MapperForAttribute("Umbraco.Cms.Core.Models.MemberGroup")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MemberGroupMapper : BaseMapper {
    [NullableContextAttribute("1")]
public MemberGroupMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IMember")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Member")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MemberMapper : BaseMapper {
    [NullableContextAttribute("1")]
public MemberMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.MemberType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IMemberType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.MemberTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public MemberTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.NullableDateMapper : DefaultMapper {
    [NullableContextAttribute("1")]
public virtual Func`2<object, object> GetToDbConverter(Type destType, MemberInfo sourceMemberInfo);
}
[MapperForAttribute("Umbraco.Cms.Core.Models.PropertyGroup")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.PropertyGroupMapper : BaseMapper {
    [NullableContextAttribute("1")]
public PropertyGroupMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Property")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.PropertyMapper : BaseMapper {
    [NullableContextAttribute("1")]
public PropertyMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.PropertyType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.PropertyTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public PropertyTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.IRelation")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Relation")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.RelationMapper : BaseMapper {
    [NullableContextAttribute("1")]
public RelationMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.RelationType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IRelationType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.RelationTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public RelationTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.ServerRegistration")]
[MapperForAttribute("Umbraco.Cms.Core.Models.IServerRegistration")]
internal class Umbraco.Cms.Infrastructure.Persistence.Mappers.ServerRegistrationMapper : BaseMapper {
    [NullableContextAttribute("1")]
public ServerRegistrationMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.ISimpleContentType")]
[MapperForAttribute("Umbraco.Cms.Core.Models.SimpleContentType")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.SimpleContentTypeMapper : BaseMapper {
    [NullableContextAttribute("1")]
public SimpleContentTypeMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Tag")]
[MapperForAttribute("Umbraco.Cms.Core.Models.ITag")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.TagMapper : BaseMapper {
    [NullableContextAttribute("1")]
public TagMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Template")]
[MapperForAttribute("Umbraco.Cms.Core.Models.ITemplate")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.TemplateMapper : BaseMapper {
    [NullableContextAttribute("1")]
public TemplateMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Entities.IUmbracoEntity")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.UmbracoEntityMapper : BaseMapper {
    [NullableContextAttribute("1")]
public UmbracoEntityMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Membership.IUserGroup")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Membership.UserGroup")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.UserGroupMapper : BaseMapper {
    [NullableContextAttribute("1")]
public UserGroupMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[MapperForAttribute("Umbraco.Cms.Core.Models.Membership.IUser")]
[MapperForAttribute("Umbraco.Cms.Core.Models.Membership.User")]
public class Umbraco.Cms.Infrastructure.Persistence.Mappers.UserMapper : BaseMapper {
    [NullableContextAttribute("1")]
public UserMapper(Lazy`1<ISqlContext> sqlContext, MapperConfigurationStore maps);
    protected virtual void DefineMaps();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.NPocoDatabaseTypeExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Usage of this method indicates a code smell.")]
public static bool IsSqlServer(DatabaseType databaseType);
    [ExtensionAttribute]
[ObsoleteAttribute("Usage of this method indicates a code smell.")]
public static bool IsSqlite(DatabaseType databaseType);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.NPocoMapperCollection : BuilderCollectionBase`1<IMapper> {
    public NPocoMapperCollection(Func`1<IEnumerable`1<IMapper>> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.NPocoMapperCollectionBuilder : SetCollectionBuilderBase`3<NPocoMapperCollectionBuilder, NPocoMapperCollection, IMapper> {
    protected NPocoMapperCollectionBuilder This { get; }
    protected virtual NPocoMapperCollectionBuilder get_This();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Querying.CachedExpression : Expression {
    private string _visitResult;
    [CompilerGeneratedAttribute]
private Expression <InnerExpression>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Visited>k__BackingField;
    public Expression InnerExpression { get; private set; }
    public string VisitResult { get; public set; }
    public bool Visited { get; private set; }
    [CompilerGeneratedAttribute]
public Expression get_InnerExpression();
    [CompilerGeneratedAttribute]
private void set_InnerExpression(Expression value);
    public string get_VisitResult();
    public void set_VisitResult(string value);
    [CompilerGeneratedAttribute]
public bool get_Visited();
    [CompilerGeneratedAttribute]
private void set_Visited(bool value);
    public void Wrap(Expression expression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.Persistence.Querying.ExpressionVisitorBase : object {
    protected List`1<object> SqlParameters;
    [CompilerGeneratedAttribute]
private bool <Visited>k__BackingField;
    [CompilerGeneratedAttribute]
private ISqlSyntaxProvider <SqlSyntax>k__BackingField;
    protected bool Visited { get; protected set; }
    protected ISqlSyntaxProvider SqlSyntax { get; }
    protected ExpressionVisitorBase(ISqlSyntaxProvider sqlSyntax);
    [CompilerGeneratedAttribute]
protected bool get_Visited();
    [CompilerGeneratedAttribute]
protected void set_Visited(bool value);
    [CompilerGeneratedAttribute]
protected ISqlSyntaxProvider get_SqlSyntax();
    public Object[] GetSqlParameters();
    public virtual string Visit(Expression expression);
    public virtual string GetQuotedTableName(string tableName);
    protected abstract virtual string VisitMemberAccess(MemberExpression m);
    protected virtual string VisitLambda(LambdaExpression lambda);
    protected virtual string VisitBinary(BinaryExpression b);
    protected virtual List`1<object> VisitExpressionList(ReadOnlyCollection`1<Expression> original);
    protected virtual string VisitNew(NewExpression newExpression);
    protected virtual string VisitParameter(ParameterExpression p);
    protected virtual string VisitConstant(ConstantExpression c);
    protected virtual string VisitUnary(UnaryExpression u);
    protected virtual string VisitNewArray(NewArrayExpression na);
    private string VisitNot(Expression exp);
    private string VisitNotNot(Expression exp);
    protected virtual List`1<object> VisitNewArrayFromExpressionList(NewArrayExpression na);
    protected virtual string BindOperant(ExpressionType e);
    protected virtual string VisitMethodCall(MethodCallExpression m);
    public virtual string GetQuotedColumnName(string columnName);
    public virtual string GetQuotedName(string name);
    public virtual string EscapeParam(object paramValue, ISqlSyntaxProvider sqlSyntax);
    protected string HandleStringComparison(string col, string val, string verb, TextColumnType columnType);
    [NullableContextAttribute("2")]
protected virtual string RemoveQuote(string exp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Querying.ModelToSqlExpressionVisitor`1 : ExpressionVisitorBase {
    [NullableAttribute("2")]
private BaseMapper _mapper;
    [NullableAttribute("2")]
private IMapperCollection _mappers;
    public ModelToSqlExpressionVisitor`1(ISqlSyntaxProvider sqlSyntax, IMapperCollection mappers);
    protected virtual string VisitMemberAccess(MemberExpression m);
    private static bool EndsWithConstant(MemberExpression m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Querying.PocoToSqlExpressionVisitor`1 : ExpressionVisitorBase {
    [NullableAttribute("2")]
private string _alias;
    private PocoData _pd;
    public PocoToSqlExpressionVisitor`1(ISqlContext sqlContext, string alias);
    protected virtual string VisitMethodCall(MethodCallExpression m);
    protected virtual string VisitMemberAccess(MemberExpression m);
    protected virtual string GetFieldName(PocoData pocoData, string name, string alias);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Querying.PocoToSqlExpressionVisitor`2 : ExpressionVisitorBase {
    private string _alias1;
    private string _alias2;
    [NullableAttribute("1")]
private PocoData _pocoData1;
    [NullableAttribute("1")]
private PocoData _pocoData2;
    private string _parameterName1;
    private string _parameterName2;
    public PocoToSqlExpressionVisitor`2(ISqlContext sqlContext, string alias1, string alias2);
    [NullableContextAttribute("1")]
protected virtual string VisitLambda(LambdaExpression lambda);
    [NullableContextAttribute("1")]
protected virtual string VisitMemberAccess(MemberExpression m);
    [NullableContextAttribute("1")]
protected virtual string GetFieldName(PocoData pocoData, string name, string alias);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Querying.PocoToSqlExpressionVisitor`3 : ExpressionVisitorBase {
    private string _alias1;
    private string _alias2;
    private string _alias3;
    [NullableAttribute("1")]
private PocoData _pocoData1;
    [NullableAttribute("1")]
private PocoData _pocoData2;
    [NullableAttribute("1")]
private PocoData _pocoData3;
    private string _parameterName1;
    private string _parameterName2;
    private string _parameterName3;
    public PocoToSqlExpressionVisitor`3(ISqlContext sqlContext, string alias1, string alias2, string alias3);
    [NullableContextAttribute("1")]
protected virtual string VisitLambda(LambdaExpression lambda);
    [NullableContextAttribute("1")]
protected virtual string VisitMemberAccess(MemberExpression m);
    [NullableContextAttribute("1")]
protected virtual string GetFieldName(PocoData pocoData, string name, string alias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Querying.Query`1 : object {
    private ISqlContext _sqlContext;
    private List`1<Tuple`2<string, Object[]>> _wheres;
    public Query`1(ISqlContext sqlContext);
    public virtual IQuery`1<T> Where(Expression`1<Func`2<T, bool>> predicate);
    public virtual IQuery`1<T> WhereIn(Expression`1<Func`2<T, object>> fieldSelector, IEnumerable values);
    public virtual IQuery`1<T> WhereAny(IEnumerable`1<Expression`1<Func`2<T, bool>>> predicates);
    public sealed virtual IEnumerable`1<Tuple`2<string, Object[]>> GetWhereClauses();
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.Querying.QueryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<Tuple`2<string, Object[]>> GetWhereClauses(IQuery`1<T> query);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Querying.SqlTranslator`1 : object {
    private Sql`1<ISqlContext> _sql;
    public SqlTranslator`1(Sql`1<ISqlContext> sql, IQuery`1<T> query);
    public Sql`1<ISqlContext> Translate();
    public virtual string ToString();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Querying.UserDataFilter : object {
    [CompilerGeneratedAttribute]
private ICollection`1<Guid> <UserKeys>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <Groups>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <Identifiers>k__BackingField;
    public ICollection`1<Guid> UserKeys { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Groups { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Identifiers { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual ICollection`1<Guid> get_UserKeys();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UserKeys(ICollection`1<Guid> value);
    [CompilerGeneratedAttribute]
public sealed virtual ICollection`1<string> get_Groups();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Groups(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public sealed virtual ICollection`1<string> get_Identifiers();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Identifiers(ICollection`1<string> value);
}
public enum Umbraco.Cms.Infrastructure.Persistence.RecordPersistenceType : Enum {
    public int value__;
    public static RecordPersistenceType Insert;
    public static RecordPersistenceType Update;
    public static RecordPersistenceType Delete;
}
public interface Umbraco.Cms.Infrastructure.Persistence.Repositories.IEntityRepositoryExtended {
    [NullableContextAttribute("1")]
public abstract virtual IEnumerable`1<IEntitySlim> GetPagedResultsByQuery(IQuery`1<IUmbracoEntity> query, Guid[] objectTypes, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IUmbracoEntity> filter, Ordering ordering, Action`1<Sql`1<ISqlContext>> sqlCustomization);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.AuditEntryRepository : EntityRepositoryBase`2<int, IAuditEntry> {
    public AuditEntryRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<AuditEntryRepository> logger);
    public sealed virtual IEnumerable`1<IAuditEntry> GetPage(long pageIndex, int pageCount, Int64& records);
    public sealed virtual bool IsAvailable();
    [NullableContextAttribute("2")]
protected virtual IAuditEntry PerformGet(int id);
    protected virtual IEnumerable`1<IAuditEntry> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IAuditEntry> PerformGetByQuery(IQuery`1<IAuditEntry> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IAuditEntry entity);
    protected virtual void PersistUpdatedItem(IAuditEntry entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.AuditRepository : EntityRepositoryBase`2<int, IAuditItem> {
    public AuditRepository(IScopeAccessor scopeAccessor, ILogger`1<AuditRepository> logger);
    public sealed virtual IEnumerable`1<IAuditItem> Get(AuditType type, IQuery`1<IAuditItem> query);
    public sealed virtual void CleanLogs(int maximumAgeOfLogsInMinutes);
    public sealed virtual IEnumerable`1<IAuditItem> GetPagedResultsByQuery(IQuery`1<IAuditItem> query, long pageIndex, int pageSize, Int64& totalRecords, Direction orderDirection, AuditType[] auditTypeFilter, IQuery`1<IAuditItem> customFilter);
    protected virtual void PersistNewItem(IAuditItem entity);
    protected virtual void PersistUpdatedItem(IAuditItem entity);
    [NullableContextAttribute("2")]
protected virtual IAuditItem PerformGet(int id);
    protected virtual IEnumerable`1<IAuditItem> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IAuditItem> PerformGetByQuery(IQuery`1<IAuditItem> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.CacheInstructionRepository : object {
    private IScopeAccessor _scopeAccessor;
    [NullableAttribute("2")]
private IScope AmbientScope { get; }
    public CacheInstructionRepository(IScopeAccessor scopeAccessor);
    [NullableContextAttribute("2")]
private IScope get_AmbientScope();
    public sealed virtual int CountAll();
    public sealed virtual int CountPendingInstructions(int lastId);
    public sealed virtual int GetMaxId();
    public sealed virtual bool Exists(int id);
    public sealed virtual void Add(CacheInstruction cacheInstruction);
    public sealed virtual IEnumerable`1<CacheInstruction> GetPendingInstructions(int lastId, int maxNumberToRetrieve);
    public sealed virtual void DeleteInstructionsOlderThan(DateTime pruneDate);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ConsentRepository : EntityRepositoryBase`2<int, IConsent> {
    public ConsentRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<ConsentRepository> logger);
    public sealed virtual void ClearCurrent(string source, string context, string action);
    protected virtual IConsent PerformGet(int id);
    protected virtual IEnumerable`1<IConsent> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IConsent> PerformGetByQuery(IQuery`1<IConsent> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IConsent entity);
    protected virtual void PersistUpdatedItem(IConsent entity);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ContentRepositoryBase : object {
    [CompilerGeneratedAttribute]
private static bool <ThrowOnWarning>k__BackingField;
    public static bool ThrowOnWarning { get; public set; }
    [CompilerGeneratedAttribute]
public static bool get_ThrowOnWarning();
    [CompilerGeneratedAttribute]
public static void set_ThrowOnWarning(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ContentRepositoryBase`3 : EntityRepositoryBase`2<TId, TEntity> {
    private DataValueReferenceFactoryCollection _dataValueReferenceFactories;
    private IEventAggregator _eventAggregator;
    [CompilerGeneratedAttribute]
private ILanguageRepository <LanguageRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IDataTypeService <DataTypeService>k__BackingField;
    [CompilerGeneratedAttribute]
private IRelationRepository <RelationRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private IRelationTypeRepository <RelationTypeRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private PropertyEditorCollection <PropertyEditors>k__BackingField;
    protected TRepository This { get; }
    protected Guid NodeObjectTypeId { get; }
    protected ILanguageRepository LanguageRepository { get; }
    protected IDataTypeService DataTypeService { get; }
    protected IRelationRepository RelationRepository { get; }
    protected IRelationTypeRepository RelationTypeRepository { get; }
    protected PropertyEditorCollection PropertyEditors { get; }
    public int RecycleBinId { get; }
    protected ContentRepositoryBase`3(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<EntityRepositoryBase`2<TId, TEntity>> logger, ILanguageRepository languageRepository, IRelationRepository relationRepository, IRelationTypeRepository relationTypeRepository, PropertyEditorCollection propertyEditors, DataValueReferenceFactoryCollection dataValueReferenceFactories, IDataTypeService dataTypeService, IEventAggregator eventAggregator);
    protected abstract virtual TRepository get_This();
    protected abstract virtual Guid get_NodeObjectTypeId();
    [CompilerGeneratedAttribute]
protected ILanguageRepository get_LanguageRepository();
    [CompilerGeneratedAttribute]
protected IDataTypeService get_DataTypeService();
    [CompilerGeneratedAttribute]
protected IRelationRepository get_RelationRepository();
    [CompilerGeneratedAttribute]
protected IRelationTypeRepository get_RelationTypeRepository();
    [CompilerGeneratedAttribute]
protected PropertyEditorCollection get_PropertyEditors();
    [NullableContextAttribute("2")]
public abstract virtual TEntity GetVersion(int versionId);
    public abstract virtual IEnumerable`1<TEntity> GetAllVersions(int nodeId);
    public virtual IEnumerable`1<TEntity> GetAllVersionsSlim(int nodeId, int skip, int take);
    public virtual IEnumerable`1<int> GetVersionIds(int nodeId, int maxRows);
    public virtual void DeleteVersion(int versionId);
    public virtual void DeleteVersions(int nodeId, DateTime versionDate);
    protected abstract virtual void PerformDeleteVersion(int id, int versionId);
    [NullableContextAttribute("2")]
public sealed virtual int CountDescendants(int parentId, string contentTypeAlias);
    [NullableContextAttribute("2")]
public sealed virtual int CountChildren(int parentId, string contentTypeAlias);
    [NullableContextAttribute("2")]
public sealed virtual int Count(string contentTypeAlias);
    protected void SetEntityTags(IContentBase entity, ITagRepository tagRepo, IJsonSerializer serializer);
    protected void ClearEntityTags(IContentBase entity, ITagRepository tagRepo);
    private Sql`1<ISqlContext> PreparePageSql(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> filterSql, Ordering ordering);
    private void ApplyOrdering(Sql`1& sql, Ordering ordering);
    protected virtual string ApplySystemOrdering(Sql`1& sql, Ordering ordering);
    private string ApplyCustomOrdering(Sql`1& sql, Ordering ordering);
    public abstract virtual IEnumerable`1<TEntity> GetPage(IQuery`1<TEntity> query, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<TEntity> filter, Ordering ordering);
    public sealed virtual ContentDataIntegrityReport CheckDataIntegrity(ContentDataIntegrityReportOptions options);
    private static void AppendNodeToFix(IDictionary`2<int, List`1<NodeDto>> nodesToRebuild, NodeDto node);
    protected IEnumerable`1<TEntity> GetPage(IQuery`1<TEntity> query, long pageIndex, int pageSize, Int64& totalRecords, Func`2<List`1<TDto>, IEnumerable`1<TEntity>> mapDtos, Sql`1<ISqlContext> filter, Ordering ordering);
    protected IDictionary`2<int, PropertyCollection> GetPropertyCollections(List`1<TempContent`1<TId, TEntity, TRepository, T>> temps);
    private IDictionary`2<int, PropertyCollection> GetPropertyCollections(List`1<TempContent`1<TId, TEntity, TRepository, T>> temps, IEnumerable`1<PropertyDataDto> allPropertyDataDtos);
    protected string InsertBefore(Sql`1<ISqlContext> s, string atToken, string insert);
    protected string InsertBefore(string s, string atToken, string insert);
    protected Sql`1<ISqlContext> InsertJoins(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> joins);
    private string GetAliasedField(string field, Sql sql);
    protected string GetQuotedFieldName(string tableName, string fieldName);
    protected void OnUowRefreshedEntity(INotification notification);
    protected void OnUowRemovingEntity(IContentBase entity);
    protected abstract virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType);
    [NullableContextAttribute("2")]
protected virtual string EnsureUniqueNodeName(int parentId, string nodeName, int id);
    protected virtual bool SortorderExists(int parentId, int sortOrder);
    protected virtual int GetNewChildSortOrder(int parentId, int first);
    protected virtual NodeDto GetParentNodeDto(int parentId);
    protected virtual int GetReservedId(Guid uniqueId);
    public abstract virtual int get_RecycleBinId();
    public virtual IEnumerable`1<TEntity> GetRecycleBin();
    protected void PersistRelations(TEntity entity);
    protected void InsertPropertyValues(TEntity entity, int publishedVersionId, Boolean& edited, HashSet`1& editedCultures);
    protected void ReplacePropertyValues(TEntity entity, int versionId, int publishedVersionId, Boolean& edited, HashSet`1& editedCultures);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <GetPropertyCollections>b__42_0(IEnumerable`1<int> batch);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <GetPropertyCollections>b__42_2(IEnumerable`1<int> batch);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ContentTypeCommonRepository : object {
    private static string CacheKey;
    private AppCaches _appCaches;
    private IScopeAccessor _scopeAccessor;
    private IShortStringHelper _shortStringHelper;
    private ITemplateRepository _templateRepository;
    [NullableAttribute("2")]
private IScope AmbientScope { get; }
    [NullableAttribute("2")]
private IUmbracoDatabase Database { get; }
    [NullableAttribute("2")]
private ISqlContext SqlContext { get; }
    public ContentTypeCommonRepository(IScopeAccessor scopeAccessor, ITemplateRepository templateRepository, AppCaches appCaches, IShortStringHelper shortStringHelper);
    [NullableContextAttribute("2")]
private IScope get_AmbientScope();
    [NullableContextAttribute("2")]
private IUmbracoDatabase get_Database();
    [NullableContextAttribute("2")]
private ISqlContext get_SqlContext();
    public sealed virtual IEnumerable`1<IContentTypeComposition> GetAllTypes();
    public sealed virtual void ClearCache();
    private Sql`1<ISqlContext> Sql();
    private IEnumerable`1<IContentTypeComposition> GetAllTypesInternal();
    private void MapHistoryCleanup(Dictionary`2<int, IContentTypeComposition> contentTypes);
    private void MapTemplates(Dictionary`2<int, IContentTypeComposition> contentTypes);
    private void MapComposition(IDictionary`2<int, IContentTypeComposition> contentTypes);
    private void MapGroupsAndProperties(IDictionary`2<int, IContentTypeComposition> contentTypes);
    private PropertyGroup MapPropertyGroup(PropertyTypeGroupDto dto, bool isPublishing);
    private PropertyType MapPropertyType(IContentTypeComposition contentType, PropertyTypeCommonDto dto, IDictionary`2<string, PropertyType> builtinProperties);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ContentTypeRepository : ContentTypeRepositoryBase`1<IContentType> {
    protected bool SupportsPublishing { get; }
    protected Guid NodeObjectTypeId { get; }
    public ContentTypeRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<ContentTypeRepository> logger, IContentTypeCommonRepository commonRepository, ILanguageRepository languageRepository, IShortStringHelper shortStringHelper);
    protected virtual bool get_SupportsPublishing();
    protected virtual Guid get_NodeObjectTypeId();
    public sealed virtual IEnumerable`1<IContentType> GetByQuery(IQuery`1<PropertyType> query);
    public sealed virtual IEnumerable`1<string> GetAllPropertyTypeAliases();
    public sealed virtual IEnumerable`1<string> GetAllContentTypeAliases(Guid[] objectTypes);
    public sealed virtual IEnumerable`1<int> GetAllContentTypeIds(String[] aliases);
    protected virtual IRepositoryCachePolicy`2<IContentType, int> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual IContentType PerformGet(int id);
    [NullableContextAttribute("2")]
protected virtual IContentType PerformGet(Guid id);
    protected virtual IContentType PerformGet(string alias);
    protected virtual bool PerformExists(Guid id);
    protected virtual IEnumerable`1<IContentType> GetAllWithFullCachePolicy();
    protected virtual IEnumerable`1<IContentType> PerformGetAll(Guid[] ids);
    protected virtual IEnumerable`1<IContentType> PerformGetByQuery(IQuery`1<IContentType> query);
    protected IEnumerable`1<int> PerformGetByQuery(IQuery`1<PropertyType> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistDeletedItem(IContentType entity);
    protected virtual void PersistNewItem(IContentType entity);
    protected void PersistTemplates(IContentType entity, bool clearAll);
    protected virtual void PersistUpdatedItem(IContentType entity);
    private void PersistHistoryCleanup(IContentType entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ContentTypeRepositoryBase`1 : EntityRepositoryBase`2<int, TEntity> {
    private IShortStringHelper _shortStringHelper;
    [CompilerGeneratedAttribute]
private IContentTypeCommonRepository <CommonRepository>k__BackingField;
    [CompilerGeneratedAttribute]
private ILanguageRepository <LanguageRepository>k__BackingField;
    protected IContentTypeCommonRepository CommonRepository { get; }
    protected ILanguageRepository LanguageRepository { get; }
    protected bool SupportsPublishing { get; }
    protected Guid NodeObjectTypeId { get; }
    protected ContentTypeRepositoryBase`1(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<ContentTypeRepositoryBase`1<TEntity>> logger, IContentTypeCommonRepository commonRepository, ILanguageRepository languageRepository, IShortStringHelper shortStringHelper);
    [CompilerGeneratedAttribute]
protected IContentTypeCommonRepository get_CommonRepository();
    [CompilerGeneratedAttribute]
protected ILanguageRepository get_LanguageRepository();
    protected abstract virtual bool get_SupportsPublishing();
    protected abstract virtual Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
public sealed virtual TEntity Get(Guid id);
    private sealed virtual override IEnumerable`1<TEntity> Umbraco.Cms.Core.Persistence.IReadRepository<System.Guid,TEntity>.GetMany(Guid[] ids);
    public sealed virtual bool Exists(Guid id);
    public sealed virtual IEnumerable`1<MoveEventInfo`1<TEntity>> Move(TEntity moving, EntityContainer container);
    public sealed virtual TEntity Get(string alias);
    protected virtual IEnumerable`1<TEntity> PerformGetAll(Int32[] ids);
    protected abstract virtual IEnumerable`1<TEntity> GetAllWithFullCachePolicy();
    protected virtual PropertyType CreatePropertyType(string propertyEditorAlias, ValueStorageType storageType, string propertyTypeAlias);
    protected virtual void PersistDeletedItem(TEntity entity);
    protected void PersistNewBaseContentType(IContentTypeComposition entity);
    protected void PersistUpdatedBaseContentType(IContentTypeComposition entity);
    protected void ValidateAlias(IPropertyType pt);
    private static bool IsPropertyValueChanged(PropertyValueVersionDto<TEntity> pubRow, PropertyValueVersionDto<TEntity> row);
    private void CorrectPropertyTypeVariations(IContentTypeComposition entity);
    private void ValidateVariations(IContentTypeComposition entity);
    private IEnumerable`1<IContentTypeComposition> GetImpactedContentTypes(IContentTypeComposition contentType, IEnumerable`1<IContentTypeComposition> all);
    private Dictionary`2<int, ValueTuple`2<ContentVariation, ContentVariation>> GetPropertyVariationChanges(IEnumerable`1<IPropertyType> propertyTypes);
    private void Clear301Redirects(IContentTypeComposition contentType);
    private void ClearScheduledPublishing(IContentTypeComposition contentType);
    private int GetDefaultLanguageId();
    private void MovePropertyTypeVariantData(IDictionary`2<int, ValueTuple`2<ContentVariation, ContentVariation>> propertyTypeChanges, IEnumerable`1<IContentTypeComposition> impacted);
    private void MoveContentTypeVariantData(IContentTypeComposition contentType, ContentVariation fromVariation, ContentVariation toVariation);
    private void CopyTagData(Nullable`1<int> sourceLanguageId, Nullable`1<int> targetLanguageId, IReadOnlyCollection`1<int> propertyTypeIds, IReadOnlyCollection`1<int> contentTypeIds);
    private void CopyPropertyData(Nullable`1<int> sourceLanguageId, Nullable`1<int> targetLanguageId, IReadOnlyCollection`1<int> propertyTypeIds, IReadOnlyCollection`1<int> contentTypeIds);
    private void RenormalizeDocumentEditedFlags(IReadOnlyCollection`1<int> propertyTypeIds, IReadOnlyCollection`1<int> contentTypeIds);
    private void DeletePropertyType(int contentTypeId, int propertyTypeId);
    protected void ValidateAlias(TEntity entity);
    [NullableContextAttribute("2")]
protected abstract virtual TEntity PerformGet(Guid id);
    private void AssignDataTypeFromPropertyEditor(IPropertyType propertyType);
    protected abstract virtual TEntity PerformGet(string alias);
    [NullableContextAttribute("2")]
protected abstract virtual IEnumerable`1<TEntity> PerformGetAll(Guid[] ids);
    protected abstract virtual bool PerformExists(Guid id);
    public sealed virtual string GetUniqueAlias(string alias);
    public sealed virtual bool HasContainerInPath(string contentPath);
    public sealed virtual bool HasContainerInPath(Int32[] ids);
    public sealed virtual bool HasContentNodes(int id);
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    private ValueTuple`2[] GetAllowedContentTypes(IContentTypeBase contentTypeBase);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.CreatedPackageSchemaRepository : object {
    private IContentService _contentService;
    private IContentTypeService _contentTypeService;
    private IScopeAccessor _scopeAccessor;
    private ITemplateService _templateService;
    private IDictionaryItemService _dictionaryItemService;
    private ILanguageService _languageService;
    private string _createdPackagesFolderPath;
    private IDataTypeService _dataTypeService;
    private IFileService _fileService;
    private FileSystems _fileSystems;
    private IHostingEnvironment _hostingEnvironment;
    private MediaFileManager _mediaFileManager;
    private IMediaService _mediaService;
    private IMediaTypeService _mediaTypeService;
    private IEntityXmlSerializer _serializer;
    private string _tempFolderPath;
    private PackageDefinitionXmlParser _xmlParser;
    private IUmbracoDatabase Database { get; }
    public CreatedPackageSchemaRepository(IHostingEnvironment hostingEnvironment, FileSystems fileSystems, IEntityXmlSerializer serializer, IDataTypeService dataTypeService, IFileService fileService, IMediaService mediaService, IMediaTypeService mediaTypeService, IContentService contentService, MediaFileManager mediaFileManager, IContentTypeService contentTypeService, IScopeAccessor scopeAccessor, ITemplateService templateService, IDictionaryItemService dictionaryItemService, ILanguageService languageService, string mediaFolderPath, string tempFolderPath);
    [ObsoleteAttribute("use ctor with all dependencies instead")]
public CreatedPackageSchemaRepository(IUmbracoDatabaseFactory umbracoDatabaseFactory, IHostingEnvironment hostingEnvironment, IOptions`1<GlobalSettings> globalSettings, FileSystems fileSystems, IEntityXmlSerializer serializer, IDataTypeService dataTypeService, ILocalizationService localizationService, IFileService fileService, IMediaService mediaService, IMediaTypeService mediaTypeService, IContentService contentService, MediaFileManager mediaFileManager, IContentTypeService contentTypeService, IScopeAccessor scopeAccessor, string mediaFolderPath, string tempFolderPath);
    [ObsoleteAttribute("use ctor with all dependencies instead")]
public CreatedPackageSchemaRepository(IUmbracoDatabaseFactory umbracoDatabaseFactory, IHostingEnvironment hostingEnvironment, IOptions`1<GlobalSettings> globalSettings, FileSystems fileSystems, IEntityXmlSerializer serializer, IDataTypeService dataTypeService, ILocalizationService localizationService, IFileService fileService, IMediaService mediaService, IMediaTypeService mediaTypeService, IContentService contentService, MediaFileManager mediaFileManager, IContentTypeService contentTypeService, string mediaFolderPath, string tempFolderPath);
    private IUmbracoDatabase get_Database();
    public sealed virtual IEnumerable`1<PackageDefinition> GetAll();
    [NullableContextAttribute("2")]
public sealed virtual PackageDefinition GetById(int id);
    [NullableContextAttribute("2")]
public sealed virtual PackageDefinition GetByKey(Guid key);
    public sealed virtual void Delete(int id);
    [NullableContextAttribute("2")]
public sealed virtual bool SavePackage(PackageDefinition definition);
    public sealed virtual string ExportPackage(PackageDefinition definition);
    private static XElement GetPackageInfoXml(PackageDefinition definition);
    private XDocument CreateCompiledPackageXml(XElement& root);
    private void ValidatePackage(PackageDefinition definition);
    private void PackageDataTypes(PackageDefinition definition, XContainer root);
    private void PackageLanguages(PackageDefinition definition, XContainer root);
    private void PackageDictionaryItems(PackageDefinition definition, XContainer root);
    private void PackageStylesheets(PackageDefinition definition, XContainer root);
    private void PackageStaticFiles(IEnumerable`1<string> filePaths, XContainer root, string containerName, string elementName, IFileSystem fileSystem);
    private void PackageTemplates(PackageDefinition definition, XContainer root);
    private void PackageDocumentTypes(PackageDefinition definition, XContainer root);
    private void PackageMediaTypes(PackageDefinition definition, XContainer root);
    private void PackageDocumentsAndTags(PackageDefinition definition, XContainer root);
    private Dictionary`2<string, Stream> PackageMedia(PackageDefinition definition, XElement root);
    private XElement GetStylesheetXml(string path, bool includeProperties);
    private void AddDocumentType(IContentType dt, HashSet`1<IContentType> dtl);
    private void AddMediaType(IMediaType mediaType, HashSet`1<IMediaType> mediaTypes);
    private PackageDefinition CreatePackageDefinitionFromSchema(CreatedPackageSchemaDto packageSchema);
    [CompilerGeneratedAttribute]
internal static void <PackageDictionaryItems>g__AppendDictionaryElement|33_0(XElement rootDictionaryItems, Dictionary`2<Guid, ValueTuple`2<IDictionaryItem, XElement>> items, Dictionary`2<Guid, XElement> processed, Guid key, XElement serializedDictionaryValue);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DataTypeContainerRepository : EntityContainerRepository {
    [NullableContextAttribute("1")]
public DataTypeContainerRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<DataTypeContainerRepository> logger);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DataTypeRepository : EntityRepositoryBase`2<int, IDataType> {
    private ILogger`1<IDataType> _dataTypeLogger;
    private PropertyEditorCollection _editors;
    private IConfigurationEditorJsonSerializer _serializer;
    protected Guid NodeObjectTypeId { get; }
    public DataTypeRepository(IScopeAccessor scopeAccessor, AppCaches cache, PropertyEditorCollection editors, ILogger`1<DataTypeRepository> logger, ILoggerFactory loggerFactory, IConfigurationEditorJsonSerializer serializer);
    protected Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
public sealed virtual IDataType Get(Guid key);
    public sealed virtual IEnumerable`1<MoveEventInfo`1<IDataType>> Move(IDataType toMove, EntityContainer container);
    public sealed virtual IReadOnlyDictionary`2<Udi, IEnumerable`1<string>> FindUsages(int id);
    public sealed virtual IReadOnlyDictionary`2<Udi, IEnumerable`1<string>> FindListViewUsages(int id);
    [NullableContextAttribute("2")]
protected virtual IDataType PerformGet(int id);
    [NullableContextAttribute("2")]
private string EnsureUniqueNodeName(string nodeName, int id);
    protected virtual IEnumerable`1<IDataType> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IDataType> PerformGetByQuery(IQuery`1<IDataType> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IDataType entity);
    protected virtual void PersistUpdatedItem(IDataType entity);
    protected virtual void PersistDeletedItem(IDataType entity);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IDataType <PerformGetAll>b__14_1(DataTypeDto x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IDataType <PerformGetByQuery>b__15_0(DataTypeDto x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DataTypeUsageRepository : object {
    private IScopeAccessor _scopeAccessor;
    public DataTypeUsageRepository(IScopeAccessor scopeAccessor);
    [ObsoleteAttribute("Please use HasSavedValuesAsync. Scheduled for removable in Umbraco 15.")]
public sealed virtual bool HasSavedValues(int dataTypeId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DataTypeUsageRepository/<HasSavedValuesAsync>d__3")]
public sealed virtual Task`1<bool> HasSavedValuesAsync(Guid dataTypeKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DictionaryRepository : EntityRepositoryBase`2<int, IDictionaryItem> {
    private ILoggerFactory _loggerFactory;
    private ILanguageRepository _languageRepository;
    public DictionaryRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<DictionaryRepository> logger, ILoggerFactory loggerFactory, ILanguageRepository languageRepository);
    [NullableContextAttribute("2")]
public sealed virtual IDictionaryItem Get(Guid uniqueId);
    public sealed virtual IEnumerable`1<IDictionaryItem> GetMany(Guid[] uniqueIds);
    public sealed virtual IDictionaryItem Get(string key);
    public sealed virtual IEnumerable`1<IDictionaryItem> GetManyByKeys(String[] keys);
    public sealed virtual Dictionary`2<string, Guid> GetDictionaryItemKeyMap();
    public sealed virtual IEnumerable`1<IDictionaryItem> GetDictionaryItemDescendants(Nullable`1<Guid> parentId, string filter);
    protected virtual IRepositoryCachePolicy`2<IDictionaryItem, int> CreateCachePolicy();
    private IDictionaryItem ConvertFromDto(DictionaryDto dto, IDictionary`2<int, ILanguage> languagesById);
    [NullableContextAttribute("2")]
protected virtual IDictionaryItem PerformGet(int id);
    private IEnumerable`1<IDictionaryItem> GetRootDictionaryItems();
    protected virtual IEnumerable`1<IDictionaryItem> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IDictionaryItem> PerformGetByQuery(IQuery`1<IDictionaryItem> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IDictionaryItem entity);
    protected virtual void PersistUpdatedItem(IDictionaryItem entity);
    protected virtual void PersistDeletedItem(IDictionaryItem entity);
    private void RecursiveDelete(Guid parentId);
    private IDictionary`2<int, ILanguage> GetLanguagesById();
    private IDictionary`2<string, ILanguage> GetLanguagesByIsoCode();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private object <GetDictionaryItemKeyMap>b__7_0(string x);
    [CompilerGeneratedAttribute]
internal static string <GetDictionaryItemDescendants>g__DictionaryItemOrdering|8_3(IDictionaryItem item);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentBlueprintContainerRepository : EntityContainerRepository {
    [NullableContextAttribute("1")]
public DocumentBlueprintContainerRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<DocumentBlueprintContainerRepository> logger);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentBlueprintRepository : DocumentRepository {
    protected bool EnsureUniqueNaming { get; }
    protected Guid NodeObjectTypeId { get; }
    [NullableContextAttribute("1")]
public DocumentBlueprintRepository(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<DocumentBlueprintRepository> logger, ILoggerFactory loggerFactory, IContentTypeRepository contentTypeRepository, ITemplateRepository templateRepository, ITagRepository tagRepository, ILanguageRepository languageRepository, IRelationRepository relationRepository, IRelationTypeRepository relationTypeRepository, PropertyEditorCollection propertyEditorCollection, IDataTypeService dataTypeService, DataValueReferenceFactoryCollection dataValueReferenceFactories, IJsonSerializer serializer, IEventAggregator eventAggregator);
    protected virtual bool get_EnsureUniqueNaming();
    protected virtual Guid get_NodeObjectTypeId();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentRepository : ContentRepositoryBase`3<int, IContent, DocumentRepository> {
    private AppCaches _appCaches;
    private ContentByGuidReadRepository _contentByGuidReadRepository;
    private IContentTypeRepository _contentTypeRepository;
    private ILoggerFactory _loggerFactory;
    private IScopeAccessor _scopeAccessor;
    private IJsonSerializer _serializer;
    private ITagRepository _tagRepository;
    private ITemplateRepository _templateRepository;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private PermissionRepository`1<IContent> _permissionRepository;
    [CompilerGeneratedAttribute]
private bool <EnsureUniqueNaming>k__BackingField;
    protected DocumentRepository This { get; }
    protected bool EnsureUniqueNaming { get; }
    private PermissionRepository`1<IContent> PermissionRepository { get; }
    protected Guid NodeObjectTypeId { get; }
    private string VariantNameSqlExpression { get; }
    public int RecycleBinId { get; }
    private SqlTemplate SqlEnsureVariantNamesAreUnique { get; }
    public DocumentRepository(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<DocumentRepository> logger, ILoggerFactory loggerFactory, IContentTypeRepository contentTypeRepository, ITemplateRepository templateRepository, ITagRepository tagRepository, ILanguageRepository languageRepository, IRelationRepository relationRepository, IRelationTypeRepository relationTypeRepository, PropertyEditorCollection propertyEditors, DataValueReferenceFactoryCollection dataValueReferenceFactories, IDataTypeService dataTypeService, IJsonSerializer serializer, IEventAggregator eventAggregator);
    protected virtual DocumentRepository get_This();
    [CompilerGeneratedAttribute]
protected virtual bool get_EnsureUniqueNaming();
    private PermissionRepository`1<IContent> get_PermissionRepository();
    public sealed virtual ContentScheduleCollection GetContentSchedule(int contentId);
    protected virtual string ApplySystemOrdering(Sql`1& sql, Ordering ordering);
    private IEnumerable`1<IContent> MapDtosToContent(List`1<DocumentDto> dtos, bool withCache, bool loadProperties, bool loadTemplates, bool loadVariants);
    private IContent MapDtoToContent(DocumentDto dto);
    private void SetVariations(Content content, IDictionary`2<int, List`1<ContentVariation>> contentVariations, IDictionary`2<int, List`1<DocumentVariation>> documentVariations);
    private IDictionary`2<int, List`1<ContentVariation>> GetContentVariations(List`1<TempContent`1<int, IContent, DocumentRepository, T>> temps);
    private IDictionary`2<int, List`1<DocumentVariation>> GetDocumentVariations(List`1<TempContent`1<int, IContent, DocumentRepository, T>> temps);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentRepository/<GetContentVariationDtos>d__24")]
private IEnumerable`1<ContentVersionCultureVariationDto> GetContentVariationDtos(IContent content, bool publishing);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentRepository/<GetDocumentVariationDtos>d__25")]
private IEnumerable`1<DocumentCultureVariationDto> GetDocumentVariationDtos(IContent content, HashSet`1<string> editedCultures);
    protected virtual Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
protected virtual IContent PerformGet(int id);
    protected virtual IEnumerable`1<IContent> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IContent> PerformGetByQuery(IQuery`1<IContent> query);
    private void AddGetByQueryOrderBy(Sql`1<ISqlContext> sql);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType);
    private string get_VariantNameSqlExpression();
    protected Sql`1<ISqlContext> GetBaseQuery(QueryType queryType, bool current);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    public virtual IEnumerable`1<IContent> GetAllVersions(int nodeId);
    public virtual IEnumerable`1<IContent> GetAllVersionsSlim(int nodeId, int skip, int take);
    [NullableContextAttribute("2")]
public virtual IContent GetVersion(int versionId);
    public virtual void DeleteVersion(int versionId);
    public virtual void DeleteVersions(int nodeId, DateTime versionDate);
    protected virtual void PerformDeleteVersion(int id, int versionId);
    protected virtual void PersistNewItem(IContent entity);
    protected virtual void PersistUpdatedItem(IContent entity);
    public sealed virtual void PersistContentSchedule(IContent content, ContentScheduleCollection contentSchedule);
    protected virtual void PersistDeletedItem(IContent entity);
    [NullableContextAttribute("2")]
public sealed virtual int CountPublished(string contentTypeAlias);
    public sealed virtual void ReplaceContentPermissions(EntityPermissionSet permissionSet);
    public sealed virtual void AssignEntityPermission(IContent entity, string permission, IEnumerable`1<int> groupIds);
    public sealed virtual EntityPermissionCollection GetPermissionsForEntity(int entityId);
    public sealed virtual void AddOrUpdatePermissions(ContentPermissionSet permission);
    public virtual IEnumerable`1<IContent> GetPage(IQuery`1<IContent> query, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IContent> filter, Ordering ordering);
    [NullableContextAttribute("2")]
public sealed virtual bool IsPathPublished(IContent content);
    public virtual int get_RecycleBinId();
    public sealed virtual bool RecycleBinSmells();
    [NullableContextAttribute("2")]
public sealed virtual IContent Get(Guid id);
    private sealed virtual override IEnumerable`1<IContent> Umbraco.Cms.Core.Persistence.IReadRepository<System.Guid,Umbraco.Cms.Core.Models.IContent>.GetMany(Guid[] ids);
    public sealed virtual bool Exists(Guid id);
    public sealed virtual void ClearSchedule(DateTime date);
    public sealed virtual void ClearSchedule(DateTime date, ContentScheduleAction action);
    private Sql GetSqlForHasScheduling(ContentScheduleAction action, DateTime date);
    public sealed virtual bool HasContentForExpiration(DateTime date);
    public sealed virtual bool HasContentForRelease(DateTime date);
    public sealed virtual IEnumerable`1<IContent> GetContentForRelease(DateTime date);
    public sealed virtual IEnumerable`1<IContent> GetContentForExpiration(DateTime date);
    private void SanitizeNames(IContent content, bool publishing);
    private void EnsureInvariantNameExists(IContent content);
    private void EnsureInvariantNameIsUnique(IContent content);
    [NullableContextAttribute("2")]
protected virtual string EnsureUniqueNodeName(int parentId, string nodeName, int id);
    private SqlTemplate get_SqlEnsureVariantNamesAreUnique();
    private void EnsureVariantNamesAreUnique(IContent content, bool publishing);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <GetContentVariations>b__22_0(IEnumerable`1<int> batch);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <GetDocumentVariations>b__23_1(IEnumerable`1<int> batch);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IContent> <GetPage>b__56_0(List`1<DocumentDto> x);
    [CompilerGeneratedAttribute]
private bool <RecycleBinSmells>b__60_0();
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentTypeContainerRepository : EntityContainerRepository {
    [NullableContextAttribute("1")]
public DocumentTypeContainerRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<DocumentTypeContainerRepository> logger);
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DocumentVersionRepository : object {
    [NullableAttribute("1")]
private IScopeAccessor _scopeAccessor;
    [NullableContextAttribute("1")]
public DocumentVersionRepository(IScopeAccessor scopeAccessor);
    public sealed virtual IReadOnlyCollection`1<ContentVersionMeta> GetDocumentVersionsEligibleForCleanup();
    public sealed virtual IReadOnlyCollection`1<ContentVersionCleanupPolicySettings> GetCleanupPolicies();
    public sealed virtual IEnumerable`1<ContentVersionMeta> GetPagedItemsByContentId(int contentId, long pageIndex, int pageSize, Int64& totalRecords, Nullable`1<int> languageId);
    [NullableContextAttribute("1")]
public sealed virtual void DeleteVersions(IEnumerable`1<int> versionIds);
    public sealed virtual void SetPreventCleanup(int versionId, bool preventCleanup);
    [NullableContextAttribute("2")]
public sealed virtual ContentVersionMeta Get(int versionId);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DomainRepository : EntityRepositoryBase`2<int, IDomain> {
    public DomainRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<DomainRepository> logger);
    public sealed virtual IDomain GetByName(string domainName);
    public sealed virtual bool Exists(string domainName);
    public sealed virtual IEnumerable`1<IDomain> GetAll(bool includeWildcards);
    public sealed virtual IEnumerable`1<IDomain> GetAssignedDomains(int contentId, bool includeWildcards);
    protected virtual IRepositoryCachePolicy`2<IDomain, int> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual IDomain PerformGet(int id);
    protected virtual IEnumerable`1<IDomain> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IDomain> PerformGetByQuery(IQuery`1<IDomain> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IDomain entity);
    protected virtual void PersistUpdatedItem(IDomain entity);
    protected int GetNewSortOrder(Nullable`1<int> rootContentId, bool isWildcard);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DynamicRootRepository : object {
    private IScopeAccessor _scopeAccessor;
    private IUmbracoDatabase Database { get; }
    public DynamicRootRepository(IScopeAccessor scopeAccessor);
    private IUmbracoDatabase get_Database();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DynamicRootRepository/<NearestAncestorOrSelfAsync>d__4")]
public sealed virtual Task`1<Nullable`1<Guid>> NearestAncestorOrSelfAsync(IEnumerable`1<Guid> origins, DynamicRootQueryStep filter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DynamicRootRepository/<FurthestAncestorOrSelfAsync>d__5")]
public sealed virtual Task`1<Nullable`1<Guid>> FurthestAncestorOrSelfAsync(IEnumerable`1<Guid> origins, DynamicRootQueryStep filter);
    private Sql`1<ISqlContext> GetAncestorOrSelfBaseQuery(IEnumerable`1<Guid> origins, DynamicRootQueryStep filter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DynamicRootRepository/<NearestDescendantOrSelfAsync>d__7")]
public sealed virtual Task`1<ICollection`1<Guid>> NearestDescendantOrSelfAsync(ICollection`1<Guid> origins, DynamicRootQueryStep filter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.DynamicRootRepository/<FurthestDescendantOrSelfAsync>d__8")]
public sealed virtual Task`1<ICollection`1<Guid>> FurthestDescendantOrSelfAsync(ICollection`1<Guid> origins, DynamicRootQueryStep filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.EntityContainerRepository : EntityRepositoryBase`2<int, EntityContainer> {
    [CompilerGeneratedAttribute]
private Guid <NodeObjectTypeId>k__BackingField;
    protected Guid NodeObjectTypeId { get; }
    public EntityContainerRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<EntityContainerRepository> logger, Guid containerObjectType);
    [CompilerGeneratedAttribute]
protected Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
public sealed virtual EntityContainer Get(Guid id);
    public sealed virtual IEnumerable`1<EntityContainer> Get(string name, int level);
    protected virtual IRepositoryCachePolicy`2<EntityContainer, int> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual EntityContainer PerformGet(int id);
    protected virtual IEnumerable`1<EntityContainer> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<EntityContainer> PerformGetByQuery(IQuery`1<EntityContainer> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    private static EntityContainer CreateEntity(NodeDto nodeDto);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    public sealed virtual bool HasDuplicateName(Guid parentKey, string name);
    public sealed virtual bool HasDuplicateName(int parentId, string name);
    protected virtual void PersistDeletedItem(EntityContainer entity);
    protected virtual void PersistNewItem(EntityContainer entity);
    protected virtual void PersistUpdatedItem(EntityContainer entity);
    private void EnsureContainerType(EntityContainer entity);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <PerformGetAll>b__8_0(IEnumerable`1<int> batch);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.EntityRepository : RepositoryBase {
    public EntityRepository(IScopeAccessor scopeAccessor, AppCaches appCaches);
    public sealed virtual int CountByQuery(IQuery`1<IUmbracoEntity> query, IEnumerable`1<Guid> objectTypes, IQuery`1<IUmbracoEntity> filter);
    public sealed virtual IEnumerable`1<IEntitySlim> GetPagedResultsByQuery(IQuery`1<IUmbracoEntity> query, ISet`1<Guid> objectTypes, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IUmbracoEntity> filter, Ordering ordering);
    public sealed virtual IEnumerable`1<IEntitySlim> GetPagedResultsByQuery(IQuery`1<IUmbracoEntity> query, Guid[] objectTypes, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IUmbracoEntity> filter, Ordering ordering, Action`1<Sql`1<ISqlContext>> sqlCustomization);
    [NullableContextAttribute("2")]
public sealed virtual IEntitySlim Get(Guid key);
    private IEntitySlim GetEntity(Sql`1<ISqlContext> sql, bool isContent, bool isMedia, bool isMember);
    [NullableContextAttribute("2")]
public sealed virtual IEntitySlim Get(Guid key, Guid objectTypeId);
    [NullableContextAttribute("2")]
public sealed virtual IEntitySlim Get(int id);
    [NullableContextAttribute("2")]
public sealed virtual IEntitySlim Get(int id, Guid objectTypeId);
    public sealed virtual IEnumerable`1<IEntitySlim> GetAll(Guid objectType, Int32[] ids);
    public sealed virtual IEnumerable`1<IEntitySlim> GetAll(Guid objectType, Guid[] keys);
    private IEnumerable`1<IEntitySlim> GetEntities(Sql`1<ISqlContext> sql, bool isContent, bool isMedia, bool isMember);
    private IEnumerable`1<IEntitySlim> PerformGetAll(Guid objectType, Action`1<Sql`1<ISqlContext>> filter);
    public sealed virtual IEnumerable`1<TreeEntityPath> GetAllPaths(Guid objectType, Int32[] ids);
    public sealed virtual IEnumerable`1<TreeEntityPath> GetAllPaths(Guid objectType, Guid[] keys);
    private IEnumerable`1<TreeEntityPath> PerformGetAllPaths(Guid objectType, Action`1<Sql`1<ISqlContext>> filter);
    public sealed virtual IEnumerable`1<IEntitySlim> GetByQuery(IQuery`1<IUmbracoEntity> query);
    public sealed virtual IEnumerable`1<IEntitySlim> GetByQuery(IQuery`1<IUmbracoEntity> query, Guid objectType);
    public sealed virtual UmbracoObjectTypes GetObjectType(int id);
    public sealed virtual UmbracoObjectTypes GetObjectType(Guid key);
    public sealed virtual int ReserveId(Guid key);
    public sealed virtual bool Exists(Guid key);
    public sealed virtual bool Exists(IEnumerable`1<Guid> keys);
    public sealed virtual bool Exists(Guid key, Guid objectType);
    public sealed virtual bool Exists(int id, Guid objectType);
    public sealed virtual bool Exists(int id);
    private DocumentEntitySlim BuildVariants(DocumentEntitySlim entity);
    private IEnumerable`1<DocumentEntitySlim> BuildVariants(IEnumerable`1<DocumentEntitySlim> entities);
    protected Sql`1<ISqlContext> GetVariantInfos(IEnumerable`1<int> ids);
    protected Sql`1<ISqlContext> GetFullSqlForEntityType(bool isContent, bool isMedia, bool isMember, Guid objectType, Guid uniqueId);
    protected Sql`1<ISqlContext> GetFullSqlForEntityType(bool isContent, bool isMedia, bool isMember, Guid objectType, int nodeId);
    protected Sql`1<ISqlContext> GetFullSqlForEntityType(bool isContent, bool isMedia, bool isMember, Guid objectType, Action`1<Sql`1<ISqlContext>> filter);
    protected Sql`1<ISqlContext> GetBase(bool isContent, bool isMedia, bool isMember, Action`1<Sql`1<ISqlContext>> filter, bool isCount);
    protected Sql`1<ISqlContext> GetBaseWhere(bool isContent, bool isMedia, bool isMember, bool isCount, Action`1<Sql`1<ISqlContext>> filter, Guid[] objectTypes);
    protected Sql`1<ISqlContext> GetBaseWhere(bool isContent, bool isMedia, bool isMember, bool isCount, int id);
    protected Sql`1<ISqlContext> GetBaseWhere(bool isContent, bool isMedia, bool isMember, bool isCount, Guid uniqueId);
    protected Sql`1<ISqlContext> GetBaseWhere(bool isContent, bool isMedia, bool isMember, bool isCount, Guid objectType, int nodeId);
    protected Sql`1<ISqlContext> GetBaseWhere(bool isContent, bool isMedia, bool isMember, bool isCount, Guid objectType, Guid uniqueId);
    protected Sql`1<ISqlContext> AddGroupBy(bool isContent, bool isMedia, bool isMember, Sql`1<ISqlContext> sql, bool defaultSort);
    private void ApplyOrdering(Sql`1& sql, Ordering ordering);
    private EntitySlim BuildEntity(BaseDto dto);
    private static void BuildEntity(EntitySlim entity, BaseDto dto);
    private static void BuildContentEntity(ContentEntitySlim entity, BaseDto dto);
    private MediaEntitySlim BuildMediaEntity(BaseDto dto);
    private DocumentEntitySlim BuildDocumentEntity(BaseDto dto);
    private MemberEntitySlim BuildMemberEntity(BaseDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.EntityRepositoryBase`2 : RepositoryBase {
    [NullableAttribute("2")]
private static RepositoryCachePolicyOptions _defaultOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IRepositoryCachePolicy`2<TEntity, TId> _cachePolicy;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IQuery`1<TEntity> _hasIdQuery;
    [CompilerGeneratedAttribute]
private ILogger`1<EntityRepositoryBase`2<TId, TEntity>> <Logger>k__BackingField;
    protected ILogger`1<EntityRepositoryBase`2<TId, TEntity>> Logger { get; }
    protected IAppPolicyCache GlobalIsolatedCache { get; }
    protected IAppPolicyCache IsolatedCache { get; }
    protected RepositoryCachePolicyOptions DefaultOptions { get; }
    protected IRepositoryCachePolicy`2<TEntity, TId> CachePolicy { get; }
    protected EntityRepositoryBase`2(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<EntityRepositoryBase`2<TId, TEntity>> logger);
    [CompilerGeneratedAttribute]
protected ILogger`1<EntityRepositoryBase`2<TId, TEntity>> get_Logger();
    protected IAppPolicyCache get_GlobalIsolatedCache();
    protected IAppPolicyCache get_IsolatedCache();
    protected virtual RepositoryCachePolicyOptions get_DefaultOptions();
    protected IRepositoryCachePolicy`2<TEntity, TId> get_CachePolicy();
    public virtual void Save(TEntity entity);
    public virtual void Delete(TEntity entity);
    [NullableContextAttribute("2")]
public sealed virtual TEntity Get(TId id);
    public sealed virtual IEnumerable`1<TEntity> GetMany(TId[] ids);
    public sealed virtual IEnumerable`1<TEntity> Get(IQuery`1<TEntity> query);
    public sealed virtual bool Exists(TId id);
    public sealed virtual int Count(IQuery`1<TEntity> query);
    protected virtual TId GetEntityId(TEntity entity);
    protected virtual IRepositoryCachePolicy`2<TEntity, TId> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected abstract virtual TEntity PerformGet(TId id);
    protected abstract virtual IEnumerable`1<TEntity> PerformGetAll(TId[] ids);
    protected abstract virtual IEnumerable`1<TEntity> PerformGetByQuery(IQuery`1<TEntity> query);
    protected abstract virtual void PersistNewItem(TEntity item);
    protected abstract virtual void PersistUpdatedItem(TEntity item);
    protected abstract virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected abstract virtual string GetBaseWhereClause();
    protected abstract virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual bool PerformExists(TId id);
    protected virtual int PerformCount(IQuery`1<TEntity> query);
    protected virtual void PersistDeletedItem(TEntity entity);
    [CompilerGeneratedAttribute]
private int <get_DefaultOptions>b__12_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ExternalLoginRepository : EntityRepositoryBase`2<int, IIdentityUserLogin> {
    public ExternalLoginRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<ExternalLoginRepository> logger);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ExternalLoginRepository/<Get>d__1")]
public sealed virtual IEnumerable`1<IIdentityUserToken> Get(IQuery`1<IIdentityUserToken> query);
    public sealed virtual int Count(IQuery`1<IIdentityUserToken> query);
    public sealed virtual void DeleteUserLogins(Guid userOrMemberKey);
    public sealed virtual void Save(Guid userOrMemberKey, IEnumerable`1<IExternalLogin> logins);
    public sealed virtual void Save(Guid userOrMemberKey, IEnumerable`1<IExternalLoginToken> tokens);
    [NullableContextAttribute("2")]
protected virtual IIdentityUserLogin PerformGet(int id);
    protected virtual IEnumerable`1<IIdentityUserLogin> PerformGetAll(Int32[] ids);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ExternalLoginRepository/<PerformGetByQuery>d__8")]
protected virtual IEnumerable`1<IIdentityUserLogin> PerformGetByQuery(IQuery`1<IIdentityUserLogin> query);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ExternalLoginRepository/<PerformGetAllOnIds>d__9")]
private IEnumerable`1<IIdentityUserLogin> PerformGetAllOnIds(Int32[] ids);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ExternalLoginRepository/<ConvertFromDtos>d__10")]
private IEnumerable`1<IIdentityUserLogin> ConvertFromDtos(IEnumerable`1<ExternalLoginDto> dtos);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IIdentityUserLogin entity);
    protected virtual void PersistUpdatedItem(IIdentityUserLogin entity);
    private Sql`1<ISqlContext> GetBaseTokenQuery(bool forUpdate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.FileRepository`2 : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [NullableAttribute("2")]
protected IFileSystem FileSystem { get; }
    [NullableContextAttribute("2")]
protected FileRepository`2(IFileSystem fileSystem);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected IFileSystem get_FileSystem();
    public virtual void AddFolder(string folderPath);
    public virtual void DeleteFolder(string folderPath);
    public virtual bool FolderExists(string folderPath);
    public virtual bool FolderHasContent(string folderPath);
    public sealed virtual Stream GetFileContentStream(string filepath);
    internal virtual void PersistNewFolder(Folder entity);
    internal virtual void PersistDeletedFolder(Folder entity);
    protected virtual Stream GetContentStream(string content);
    protected IEnumerable`1<string> FindAllFiles(string path, string filter);
    [NullableContextAttribute("2")]
protected string GetFileContent(string filename);
    public sealed virtual void SetFileContent(string filepath, Stream content);
    public sealed virtual long GetFileSize(string filename);
    public virtual void Save(TEntity entity);
    public virtual void Delete(TEntity entity);
    [NullableContextAttribute("2")]
public abstract virtual TEntity Get(TId id);
    public abstract virtual IEnumerable`1<TEntity> GetMany(TId[] ids);
    public virtual bool Exists(TId id);
    public void PersistNewItem(IEntity entity);
    public void PersistUpdatedItem(IEntity entity);
    public void PersistDeletedItem(IEntity entity);
    protected virtual void PersistNewItem(TEntity entity);
    protected virtual void PersistUpdatedItem(TEntity entity);
    protected virtual void PersistDeletedItem(TEntity entity);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.HelperExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static Sql`1<ISqlContext> DescendantOrSelfBaseQuery(Sql`1<ISqlContext> sql, IEnumerable`1<Guid> origins, DynamicRootQueryStep filter);
}
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.IdKeyMapRepository : object {
    [NullableAttribute("1")]
private IScopeAccessor _scopeAccessor;
    [NullableContextAttribute("1")]
public IdKeyMapRepository(IScopeAccessor scopeAccessor);
    public sealed virtual Nullable`1<int> GetIdForKey(Guid key, UmbracoObjectTypes umbracoObjectType);
    public sealed virtual Nullable`1<Guid> GetIdForKey(int id, UmbracoObjectTypes umbracoObjectType);
    private Guid GetNodeObjectTypeGuid(UmbracoObjectTypes umbracoObjectType);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.KeyValueRepository : EntityRepositoryBase`2<string, IKeyValue> {
    public KeyValueRepository(IScopeAccessor scopeAccessor, ILogger`1<KeyValueRepository> logger);
    public sealed virtual IReadOnlyDictionary`2<string, string> FindByKeyPrefix(string keyPrefix);
    public virtual void Save(IKeyValue entity);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    [NullableContextAttribute("2")]
protected virtual IKeyValue PerformGet(string id);
    protected virtual IEnumerable`1<IKeyValue> PerformGetAll(String[] ids);
    protected virtual IEnumerable`1<IKeyValue> PerformGetByQuery(IQuery`1<IKeyValue> query);
    protected virtual void PersistNewItem(IKeyValue entity);
    protected virtual void PersistUpdatedItem(IKeyValue entity);
    [NullableContextAttribute("2")]
private static KeyValueDto Map(IKeyValue keyValue);
    [NullableContextAttribute("2")]
private static IKeyValue Map(KeyValueDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LanguageRepository : EntityRepositoryBase`2<int, ILanguage> {
    private Dictionary`2<string, int> _codeIdMap;
    private Dictionary`2<int, string> _idCodeMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private FullDataSetRepositoryCachePolicy`2<ILanguage, int> TypedCachePolicy { get; }
    public LanguageRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<LanguageRepository> logger);
    private FullDataSetRepositoryCachePolicy`2<ILanguage, int> get_TypedCachePolicy();
    public sealed virtual ILanguage GetByIsoCode(string isoCode);
    [NullableContextAttribute("2")]
public sealed virtual Nullable`1<int> GetIdByIsoCode(string isoCode, bool throwOnNotFound);
    [NullableContextAttribute("2")]
public sealed virtual string GetIsoCodeById(Nullable`1<int> id, bool throwOnNotFound);
    public sealed virtual String[] GetIsoCodesByIds(ICollection`1<int> ids, bool throwOnNotFound);
    public sealed virtual string GetDefaultIsoCode();
    public sealed virtual Nullable`1<int> GetDefaultId();
    protected virtual IRepositoryCachePolicy`2<ILanguage, int> CreateCachePolicy();
    protected ILanguage ConvertFromDto(LanguageDto dto);
    private ILanguage GetDefault();
    [NullableContextAttribute("2")]
protected virtual ILanguage PerformGet(int id);
    protected virtual IEnumerable`1<ILanguage> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ILanguage> PerformGetByQuery(IQuery`1<ILanguage> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(ILanguage entity);
    protected virtual void PersistUpdatedItem(ILanguage entity);
    protected virtual void PersistDeletedItem(ILanguage entity);
    private void EnsureCacheIsPopulated();
    private Nullable`1<int> GetFallbackLanguageId(ILanguage entity);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LanguageRepositoryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsDefault(ILanguageRepository repo, string culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ListExtensions : object {
    [ExtensionAttribute]
internal static bool Contains(IEnumerable`1<StructuredName> items, StructuredName model);
    [ExtensionAttribute]
internal static bool SimpleNameExists(IEnumerable`1<StructuredName> items, string name);
    [ExtensionAttribute]
internal static bool SuffixedNameExists(IEnumerable`1<StructuredName> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository : object {
    private static string MetaDataFileName;
    private IHostingEnvironment _hostingEnvironment;
    private ILogger`1<LocalFileSystemTemporaryFileRepository> _logger;
    private IJsonSerializer _jsonSerializer;
    public LocalFileSystemTemporaryFileRepository(IHostingEnvironment hostingEnvironment, ILogger`1<LocalFileSystemTemporaryFileRepository> logger, IJsonSerializer jsonSerializer);
    private DirectoryInfo GetRootDirectory();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<GetAsync>d__6")]
public sealed virtual Task`1<TemporaryFileModel> GetAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<SaveAsync>d__7")]
public sealed virtual Task SaveAsync(TemporaryFileModel model);
    public sealed virtual Task DeleteAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<CleanUpOldTempFiles>d__9")]
public sealed virtual Task`1<IEnumerable`1<Guid>> CleanUpOldTempFiles(DateTime now);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<CreateMetadataFile>d__10")]
private Task CreateMetadataFile(string fullFilePath, FileMetaData metaData);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<CreateActualFile>d__11")]
private static Task CreateActualFile(TemporaryFileModel model, string fullFilePath);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LocalFileSystemTemporaryFileRepository/<GetMetaDataAsync>d__12")]
private Task`1<FileMetaData> GetMetaDataAsync(IFileInfo metadataFile);
    private ValueTuple`2<IFileInfo, IFileInfo> GetFilesByType(FileInfo[] files);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.LogViewerQueryRepository : EntityRepositoryBase`2<int, ILogViewerQuery> {
    public LogViewerQueryRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<LogViewerQueryRepository> logger);
    public sealed virtual ILogViewerQuery GetByName(string name);
    protected virtual IRepositoryCachePolicy`2<ILogViewerQuery, int> CreateCachePolicy();
    protected virtual IEnumerable`1<ILogViewerQuery> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ILogViewerQuery> PerformGetByQuery(IQuery`1<ILogViewerQuery> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(ILogViewerQuery entity);
    protected virtual void PersistUpdatedItem(ILogViewerQuery entity);
    [NullableContextAttribute("2")]
protected virtual ILogViewerQuery PerformGet(int id);
    private ILogViewerQuery ConvertFromDto(LogViewerQueryDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MediaRepository : ContentRepositoryBase`3<int, IMedia, MediaRepository> {
    private AppCaches _cache;
    private MediaByGuidReadRepository _mediaByGuidReadRepository;
    private IMediaTypeRepository _mediaTypeRepository;
    private MediaUrlGeneratorCollection _mediaUrlGenerators;
    private IJsonSerializer _serializer;
    private ITagRepository _tagRepository;
    protected MediaRepository This { get; }
    protected Guid NodeObjectTypeId { get; }
    public int RecycleBinId { get; }
    public MediaRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MediaRepository> logger, ILoggerFactory loggerFactory, IMediaTypeRepository mediaTypeRepository, ITagRepository tagRepository, ILanguageRepository languageRepository, IRelationRepository relationRepository, IRelationTypeRepository relationTypeRepository, PropertyEditorCollection propertyEditorCollection, MediaUrlGeneratorCollection mediaUrlGenerators, DataValueReferenceFactoryCollection dataValueReferenceFactories, IDataTypeService dataTypeService, IJsonSerializer serializer, IEventAggregator eventAggregator);
    protected virtual MediaRepository get_This();
    public virtual IEnumerable`1<IMedia> GetPage(IQuery`1<IMedia> query, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IMedia> filter, Ordering ordering);
    private IEnumerable`1<IMedia> MapDtosToContent(List`1<ContentDto> dtos, bool withCache);
    private IMedia MapDtoToContent(ContentDto dto);
    protected virtual Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
protected virtual IMedia PerformGet(int id);
    protected virtual IEnumerable`1<IMedia> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IMedia> PerformGetByQuery(IQuery`1<IMedia> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType, bool current, bool joinMediaVersion);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    public virtual IEnumerable`1<IMedia> GetAllVersions(int nodeId);
    [NullableContextAttribute("2")]
public virtual IMedia GetVersion(int versionId);
    public sealed virtual IMedia GetMediaByPath(string mediaPath);
    protected virtual void PerformDeleteVersion(int id, int versionId);
    protected virtual void PersistNewItem(IMedia entity);
    protected virtual void PersistUpdatedItem(IMedia entity);
    protected virtual void PersistDeletedItem(IMedia entity);
    public virtual int get_RecycleBinId();
    public sealed virtual bool RecycleBinSmells();
    [NullableContextAttribute("2")]
public sealed virtual IMedia Get(Guid id);
    private sealed virtual override IEnumerable`1<IMedia> Umbraco.Cms.Core.Persistence.IReadRepository<System.Guid,Umbraco.Cms.Core.Models.IMedia>.GetMany(Guid[] ids);
    public sealed virtual bool Exists(Guid id);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMedia> <GetPage>b__9_0(List`1<ContentDto> x);
    [CompilerGeneratedAttribute]
private bool <RecycleBinSmells>b__31_0();
}
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MediaTypeContainerRepository : EntityContainerRepository {
    [NullableContextAttribute("1")]
public MediaTypeContainerRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MediaTypeContainerRepository> logger);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MediaTypeRepository : ContentTypeRepositoryBase`1<IMediaType> {
    protected bool SupportsPublishing { get; }
    protected Guid NodeObjectTypeId { get; }
    public MediaTypeRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MediaTypeRepository> logger, IContentTypeCommonRepository commonRepository, ILanguageRepository languageRepository, IShortStringHelper shortStringHelper);
    protected virtual bool get_SupportsPublishing();
    protected virtual Guid get_NodeObjectTypeId();
    protected virtual IRepositoryCachePolicy`2<IMediaType, int> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual IMediaType PerformGet(int id);
    [NullableContextAttribute("2")]
protected virtual IMediaType PerformGet(Guid id);
    protected virtual bool PerformExists(Guid id);
    protected virtual IMediaType PerformGet(string alias);
    protected virtual IEnumerable`1<IMediaType> GetAllWithFullCachePolicy();
    protected virtual IEnumerable`1<IMediaType> PerformGetAll(Guid[] ids);
    protected virtual IEnumerable`1<IMediaType> PerformGetByQuery(IQuery`1<IMediaType> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IMediaType entity);
    protected virtual void PersistUpdatedItem(IMediaType entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MemberGroupRepository : EntityRepositoryBase`2<int, IMemberGroup> {
    private IEventMessagesFactory _eventMessagesFactory;
    protected Guid NodeObjectTypeId { get; }
    public MemberGroupRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MemberGroupRepository> logger, IEventMessagesFactory eventMessagesFactory);
    protected Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
public sealed virtual IMemberGroup Get(Guid uniqueId);
    [NullableContextAttribute("2")]
public sealed virtual IMemberGroup GetByName(string name);
    public sealed virtual IMemberGroup CreateIfNotExists(string roleName);
    public sealed virtual IEnumerable`1<IMemberGroup> GetMemberGroupsForMember(int memberId);
    public sealed virtual IEnumerable`1<IMemberGroup> GetMemberGroupsForMember(string username);
    public sealed virtual void ReplaceRoles(Int32[] memberIds, String[] roleNames);
    public sealed virtual void AssignRoles(Int32[] memberIds, String[] roleNames);
    public sealed virtual void DissociateRoles(Int32[] memberIds, String[] roleNames);
    [NullableContextAttribute("2")]
protected virtual IMemberGroup PerformGet(int id);
    protected virtual IEnumerable`1<IMemberGroup> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IMemberGroup> PerformGetByQuery(IQuery`1<IMemberGroup> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IMemberGroup entity);
    protected virtual void PersistUpdatedItem(IMemberGroup entity);
    private void AssignRolesInternal(Int32[] memberIds, String[] roleNames, bool replace);
    private void DissociateRolesInternal(Int32[] memberIds, String[] roleNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MemberRepository : ContentRepositoryBase`3<int, IMember, MemberRepository> {
    private IJsonSerializer _jsonSerializer;
    private IRepositoryCachePolicy`2<IMember, string> _memberByUsernameCachePolicy;
    private IMemberGroupRepository _memberGroupRepository;
    private IMemberTypeRepository _memberTypeRepository;
    private MemberPasswordConfigurationSettings _passwordConfiguration;
    private IPasswordHasher _passwordHasher;
    private ITagRepository _tagRepository;
    private bool _passwordConfigInitialized;
    [NullableAttribute("2")]
private string _passwordConfigJson;
    [NullableAttribute("2")]
private string DefaultPasswordConfigJson { get; }
    protected MemberRepository This { get; }
    public int RecycleBinId { get; }
    protected Guid NodeObjectTypeId { get; }
    public MemberRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MemberRepository> logger, IMemberTypeRepository memberTypeRepository, IMemberGroupRepository memberGroupRepository, ITagRepository tagRepository, ILanguageRepository languageRepository, IRelationRepository relationRepository, IRelationTypeRepository relationTypeRepository, IPasswordHasher passwordHasher, PropertyEditorCollection propertyEditors, DataValueReferenceFactoryCollection dataValueReferenceFactories, IDataTypeService dataTypeService, IJsonSerializer serializer, IEventAggregator eventAggregator, IOptions`1<MemberPasswordConfigurationSettings> passwordConfiguration);
    [NullableContextAttribute("2")]
private string get_DefaultPasswordConfigJson();
    protected virtual MemberRepository get_This();
    public virtual int get_RecycleBinId();
    public sealed virtual IEnumerable`1<IMember> FindMembersInRole(string roleName, string usernameToMatch, StringPropertyMatchType matchType);
    public sealed virtual IEnumerable`1<IMember> GetByMemberGroup(string groupName);
    public sealed virtual bool Exists(string username);
    public sealed virtual int GetCountByQuery(IQuery`1<IMember> query);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MemberRepository/<GetPagedByFilterAsync>d__20")]
public sealed virtual Task`1<PagedModel`1<IMember>> GetPagedByFilterAsync(MemberFilter memberFilter, int skip, int take, Ordering ordering);
    private void ApplyOrdering(Sql`1& sql, Ordering ordering);
    public virtual IEnumerable`1<IMember> GetPage(IQuery`1<IMember> query, long pageIndex, int pageSize, Int64& totalRecords, IQuery`1<IMember> filter, Ordering ordering);
    [NullableContextAttribute("2")]
public sealed virtual IMember GetByUsername(string username);
    public sealed virtual Int32[] GetMemberIds(String[] usernames);
    protected virtual string ApplySystemOrdering(Sql`1& sql, Ordering ordering);
    private IEnumerable`1<IMember> MapDtosToContent(List`1<MemberDto> dtos, bool withCache);
    private IMember MapDtoToContent(MemberDto dto);
    [NullableContextAttribute("2")]
private IMember PerformGetByUsername(string username);
    private IEnumerable`1<IMember> PerformGetAllByUsername(String[] usernames);
    protected virtual Guid get_NodeObjectTypeId();
    [NullableContextAttribute("2")]
protected virtual IMember PerformGet(int id);
    protected virtual IEnumerable`1<IMember> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IMember> PerformGetByQuery(IQuery`1<IMember> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(QueryType queryType, bool current);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected Sql`1<ISqlContext> GetNodeIdQueryWithPropertyData();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    public virtual IEnumerable`1<IMember> GetAllVersions(int nodeId);
    [NullableContextAttribute("2")]
public virtual IMember GetVersion(int versionId);
    protected virtual void PerformDeleteVersion(int id, int versionId);
    protected virtual void PersistNewItem(IMember entity);
    protected virtual void PersistUpdatedItem(IMember entity);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IMember> <GetPage>b__22_0(List`1<MemberDto> x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MemberTypeContainerRepository : object {
    public sealed virtual void Delete(EntityContainer entity);
    public sealed virtual bool Exists(int id);
    [NullableContextAttribute("2")]
public sealed virtual EntityContainer Get(Guid id);
    public sealed virtual IEnumerable`1<EntityContainer> Get(string name, int level);
    public sealed virtual bool HasDuplicateName(Guid parentKey, string name);
    public sealed virtual bool HasDuplicateName(int parentId, string name);
    [NullableContextAttribute("2")]
public sealed virtual EntityContainer Get(int id);
    public sealed virtual IEnumerable`1<EntityContainer> GetMany(Int32[] ids);
    public sealed virtual void Save(EntityContainer entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.MemberTypeRepository : ContentTypeRepositoryBase`1<IMemberType> {
    private IShortStringHelper _shortStringHelper;
    protected bool SupportsPublishing { get; }
    protected Guid NodeObjectTypeId { get; }
    public MemberTypeRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<MemberTypeRepository> logger, IContentTypeCommonRepository commonRepository, ILanguageRepository languageRepository, IShortStringHelper shortStringHelper);
    protected virtual bool get_SupportsPublishing();
    protected virtual Guid get_NodeObjectTypeId();
    protected virtual IRepositoryCachePolicy`2<IMemberType, int> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual IMemberType PerformGet(int id);
    [NullableContextAttribute("2")]
protected virtual IMemberType PerformGet(Guid id);
    protected virtual IEnumerable`1<IMemberType> PerformGetAll(Guid[] ids);
    protected virtual bool PerformExists(Guid id);
    protected virtual IMemberType PerformGet(string alias);
    protected virtual IEnumerable`1<IMemberType> GetAllWithFullCachePolicy();
    protected virtual IEnumerable`1<IMemberType> PerformGetByQuery(IQuery`1<IMemberType> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected Sql`1<ISqlContext> GetSubquery();
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IMemberType entity);
    protected virtual void PersistUpdatedItem(IMemberType entity);
    protected virtual PropertyType CreatePropertyType(string propertyEditorAlias, ValueStorageType storageType, string propertyTypeAlias);
    private void EnsureExplicitDataTypeForBuiltInProperties(IContentTypeBase memberType);
}
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.NodeCountRepository : object {
    [NullableAttribute("1")]
private IScopeAccessor _scopeAccessor;
    [NullableContextAttribute("1")]
public NodeCountRepository(IScopeAccessor scopeAccessor);
    public sealed virtual int GetNodeCount(Guid nodeType);
    public sealed virtual int GetMediaCount();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.NotificationsRepository : object {
    private IScopeAccessor _scopeAccessor;
    [NullableAttribute("2")]
private IScope AmbientScope { get; }
    public NotificationsRepository(IScopeAccessor scopeAccessor);
    [NullableContextAttribute("2")]
private IScope get_AmbientScope();
    public sealed virtual IEnumerable`1<Notification> GetUsersNotifications(IEnumerable`1<int> userIds, string action, IEnumerable`1<int> nodeIds, Guid objectType);
    public sealed virtual IEnumerable`1<Notification> GetUserNotifications(IUser user);
    public sealed virtual IEnumerable`1<Notification> SetNotifications(IUser user, IEntity entity, String[] actions);
    public sealed virtual IEnumerable`1<Notification> GetEntityNotifications(IEntity entity);
    public sealed virtual int DeleteNotifications(IEntity entity);
    public sealed virtual int DeleteNotifications(IUser user);
    public sealed virtual int DeleteNotifications(IUser user, IEntity entity);
    public sealed virtual Notification CreateNotification(IUser user, IEntity entity, string action);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PartialViewRepository : FileRepository`2<string, IPartialView> {
    public PartialViewRepository(FileSystems fileSystems);
    [NullableContextAttribute("2")]
protected PartialViewRepository(IFileSystem fileSystem);
    [NullableContextAttribute("2")]
public virtual IPartialView Get(string id);
    public virtual void Save(IPartialView entity);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PartialViewRepository/<GetMany>d__4")]
public virtual IEnumerable`1<IPartialView> GetMany(String[] ids);
    public sealed virtual Stream GetFileContentStream(string filepath);
    public sealed virtual void SetFileContent(string filepath, Stream content);
    protected virtual Stream GetContentStream(string content);
    [CompilerGeneratedAttribute]
private string <Get>b__2_0(File file);
    [CompilerGeneratedAttribute]
private string <Save>b__3_0(File file);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PermissionRepository`1 : EntityRepositoryBase`2<int, ContentPermissionSet> {
    public PermissionRepository`1(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<PermissionRepository`1<TEntity>> logger);
    public EntityPermissionCollection GetPermissionsForEntities(Int32[] userGroupIds, Int32[] entityIds);
    public IEnumerable`1<EntityPermission> GetPermissionsForEntities(Int32[] entityIds);
    public EntityPermissionCollection GetPermissionsForEntity(int entityId);
    public void ReplacePermissions(int groupId, ISet`1<string> permissions, Int32[] entityIds);
    public void AssignPermission(int groupId, string permission, Int32[] entityIds);
    public void AssignEntityPermission(TEntity entity, string permission, IEnumerable`1<int> groupIds);
    public void ReplaceEntityPermissions(EntityPermissionSet permissionSet);
    protected virtual void PersistNewItem(ContentPermissionSet entity);
    protected virtual void PersistUpdatedItem(ContentPermissionSet entity);
    private static EntityPermissionCollection ConvertToPermissionList(IEnumerable`1<UserGroup2GranularPermissionWithIdsDto> result);
    protected virtual ContentPermissionSet PerformGet(int id);
    protected virtual IEnumerable`1<ContentPermissionSet> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ContentPermissionSet> PerformGetByQuery(IQuery`1<ContentPermissionSet> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistDeletedItem(ContentPermissionSet entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PropertyTypeUsageRepository : object {
    private static Nullable`1[] NodeObjectTypes;
    private IScopeAccessor _scopeAccessor;
    public PropertyTypeUsageRepository(IScopeAccessor scopeAccessor);
    private static PropertyTypeUsageRepository();
    [ObsoleteAttribute("Please use HasSavedPropertyValuesAsync. Scheduled for removable in Umbraco 15.")]
public sealed virtual bool HasSavedPropertyValues(string propertyTypeAlias);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PropertyTypeUsageRepository/<HasSavedPropertyValuesAsync>d__4")]
public sealed virtual Task`1<bool> HasSavedPropertyValuesAsync(Guid contentTypeKey, string propertyAlias);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PropertyTypeUsageRepository/<ContentTypeExistAsync>d__5")]
public sealed virtual Task`1<bool> ContentTypeExistAsync(Guid contentTypeKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.PublicAccessRepository : EntityRepositoryBase`2<Guid, PublicAccessEntry> {
    public PublicAccessRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<PublicAccessRepository> logger);
    protected virtual IRepositoryCachePolicy`2<PublicAccessEntry, Guid> CreateCachePolicy();
    [NullableContextAttribute("2")]
protected virtual PublicAccessEntry PerformGet(Guid id);
    protected virtual IEnumerable`1<PublicAccessEntry> PerformGetAll(Guid[] ids);
    protected virtual IEnumerable`1<PublicAccessEntry> PerformGetByQuery(IQuery`1<PublicAccessEntry> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(PublicAccessEntry entity);
    protected virtual void PersistUpdatedItem(PublicAccessEntry entity);
    protected virtual Guid GetEntityId(PublicAccessEntry entity);
}
public enum Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.QueryType : Enum {
    public int value__;
    public static QueryType Single;
    public static QueryType Many;
    public static QueryType Ids;
    public static QueryType Count;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RedirectUrlRepository : EntityRepositoryBase`2<Guid, IRedirectUrl> {
    public RedirectUrlRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<RedirectUrlRepository> logger);
    [NullableContextAttribute("2")]
public sealed virtual IRedirectUrl Get(string url, Guid contentKey, string culture);
    public sealed virtual void DeleteAll();
    public sealed virtual void DeleteContentUrls(Guid contentKey);
    public sealed virtual void Delete(Guid id);
    public sealed virtual IRedirectUrl GetMostRecentUrl(string url);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RedirectUrlRepository/<GetMostRecentUrlAsync>d__6")]
public sealed virtual Task`1<IRedirectUrl> GetMostRecentUrlAsync(string url);
    private Sql`1<ISqlContext> GetMostRecentSql(string url);
    public sealed virtual IRedirectUrl GetMostRecentUrl(string url, string culture);
    private Sql`1<ISqlContext> GetMostRecentUrlSql(string url, string culture);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RedirectUrlRepository/<GetMostRecentUrlAsync>d__10")]
public sealed virtual Task`1<IRedirectUrl> GetMostRecentUrlAsync(string url, string culture);
    public sealed virtual IEnumerable`1<IRedirectUrl> GetContentUrls(Guid contentKey);
    public sealed virtual IEnumerable`1<IRedirectUrl> GetAllUrls(long pageIndex, int pageSize, Int64& total);
    public sealed virtual IEnumerable`1<IRedirectUrl> GetAllUrls(int rootContentId, long pageIndex, int pageSize, Int64& total);
    public sealed virtual IEnumerable`1<IRedirectUrl> SearchUrls(string searchTerm, long pageIndex, int pageSize, Int64& total);
    protected virtual int PerformCount(IQuery`1<IRedirectUrl> query);
    protected virtual bool PerformExists(Guid id);
    [NullableContextAttribute("2")]
protected virtual IRedirectUrl PerformGet(Guid id);
    protected virtual IEnumerable`1<IRedirectUrl> PerformGetAll(Guid[] ids);
    protected virtual IEnumerable`1<IRedirectUrl> PerformGetByQuery(IQuery`1<IRedirectUrl> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IRedirectUrl entity);
    protected virtual void PersistUpdatedItem(IRedirectUrl entity);
    private static RedirectUrlDto Map(IRedirectUrl redirectUrl);
    private static IRedirectUrl Map(RedirectUrlDto dto);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RelationItemDto : object {
    [CompilerGeneratedAttribute]
private int <ChildNodeId>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ChildNodeKey>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChildNodeName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ChildNodePublished>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <ChildNodeObjectType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChildContentTypeIcon>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChildContentTypeAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ChildContentTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelationTypeName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RelationTypeAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RelationTypeIsDependency>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RelationTypeIsBidirectional>k__BackingField;
    [ColumnAttribute]
public int ChildNodeId { get; public set; }
    [ColumnAttribute]
public Guid ChildNodeKey { get; public set; }
    [ColumnAttribute]
public string ChildNodeName { get; public set; }
    [ColumnAttribute]
public Nullable`1<bool> ChildNodePublished { get; public set; }
    [ColumnAttribute]
public Guid ChildNodeObjectType { get; public set; }
    [ColumnAttribute]
public string ChildContentTypeIcon { get; public set; }
    [ColumnAttribute]
public string ChildContentTypeAlias { get; public set; }
    [ColumnAttribute]
public string ChildContentTypeName { get; public set; }
    [ColumnAttribute]
public string RelationTypeName { get; public set; }
    [ColumnAttribute]
public string RelationTypeAlias { get; public set; }
    [ColumnAttribute]
public bool RelationTypeIsDependency { get; public set; }
    [ColumnAttribute]
public bool RelationTypeIsBidirectional { get; public set; }
    [CompilerGeneratedAttribute]
public int get_ChildNodeId();
    [CompilerGeneratedAttribute]
public void set_ChildNodeId(int value);
    [CompilerGeneratedAttribute]
public Guid get_ChildNodeKey();
    [CompilerGeneratedAttribute]
public void set_ChildNodeKey(Guid value);
    [CompilerGeneratedAttribute]
public string get_ChildNodeName();
    [CompilerGeneratedAttribute]
public void set_ChildNodeName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ChildNodePublished();
    [CompilerGeneratedAttribute]
public void set_ChildNodePublished(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Guid get_ChildNodeObjectType();
    [CompilerGeneratedAttribute]
public void set_ChildNodeObjectType(Guid value);
    [CompilerGeneratedAttribute]
public string get_ChildContentTypeIcon();
    [CompilerGeneratedAttribute]
public void set_ChildContentTypeIcon(string value);
    [CompilerGeneratedAttribute]
public string get_ChildContentTypeAlias();
    [CompilerGeneratedAttribute]
public void set_ChildContentTypeAlias(string value);
    [CompilerGeneratedAttribute]
public string get_ChildContentTypeName();
    [CompilerGeneratedAttribute]
public void set_ChildContentTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_RelationTypeName();
    [CompilerGeneratedAttribute]
public void set_RelationTypeName(string value);
    [CompilerGeneratedAttribute]
public string get_RelationTypeAlias();
    [CompilerGeneratedAttribute]
public void set_RelationTypeAlias(string value);
    [CompilerGeneratedAttribute]
public bool get_RelationTypeIsDependency();
    [CompilerGeneratedAttribute]
public void set_RelationTypeIsDependency(bool value);
    [CompilerGeneratedAttribute]
public bool get_RelationTypeIsBidirectional();
    [CompilerGeneratedAttribute]
public void set_RelationTypeIsBidirectional(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RelationRepository : EntityRepositoryBase`2<int, IRelation> {
    private IEntityRepositoryExtended _entityRepository;
    private IRelationTypeRepository _relationTypeRepository;
    public RelationRepository(IScopeAccessor scopeAccessor, ILogger`1<RelationRepository> logger, IRelationTypeRepository relationTypeRepository, IEntityRepositoryExtended entityRepository);
    public sealed virtual IEnumerable`1<IUmbracoEntity> GetPagedParentEntitiesByChildId(int childId, long pageIndex, int pageSize, Int64& totalRecords, Guid[] entityTypes);
    public sealed virtual IEnumerable`1<IUmbracoEntity> GetPagedChildEntitiesByParentId(int parentId, long pageIndex, int pageSize, Int64& totalRecords, Guid[] entityTypes);
    public sealed virtual Task`1<PagedModel`1<IRelation>> GetPagedByChildKeyAsync(Guid childKey, int skip, int take, string relationTypeAlias);
    public sealed virtual void Save(IEnumerable`1<IRelation> relations);
    public sealed virtual void SaveBulk(IEnumerable`1<ReadOnlyRelation> relations);
    public sealed virtual IEnumerable`1<IRelation> GetPagedRelationsByQuery(IQuery`1<IRelation> query, long pageIndex, int pageSize, Int64& totalRecords, Ordering ordering);
    public sealed virtual void DeleteByParent(int parentId, String[] relationTypeAliases);
    private void SqlJoinRelations(Sql`1<ISqlContext> sql);
    public IEnumerable`1<IUmbracoEntity> GetPagedParentEntitiesByChildId(int childId, long pageIndex, int pageSize, Int64& totalRecords, Int32[] relationTypes, Guid[] entityTypes);
    public IEnumerable`1<IUmbracoEntity> GetPagedChildEntitiesByParentId(int parentId, long pageIndex, int pageSize, Int64& totalRecords, Int32[] relationTypes, Guid[] entityTypes);
    private void PopulateObjectTypes(IRelation[] entities);
    private void ApplyOrdering(Sql`1& sql, Ordering ordering);
    [NullableContextAttribute("2")]
protected virtual IRelation PerformGet(int id);
    protected virtual IEnumerable`1<IRelation> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IRelation> PerformGetByQuery(IQuery`1<IRelation> query);
    private IEnumerable`1<IRelation> DtosToEntities(IEnumerable`1<RelationDto> dtos);
    [NullableContextAttribute("2")]
private static IRelation DtoToEntity(RelationDto dto, IRelationType relationType);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IRelation entity);
    protected virtual void PersistUpdatedItem(IRelation entity);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IRelation <DtosToEntities>b__18_0(RelationDto x);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RelationTypeRepository : EntityRepositoryBase`2<int, IRelationType> {
    public RelationTypeRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<RelationTypeRepository> logger);
    protected virtual IRepositoryCachePolicy`2<IRelationType, int> CreateCachePolicy();
    private void CheckNullObjectTypeValues(IRelationType entity);
    [NullableContextAttribute("2")]
protected virtual IRelationType PerformGet(int id);
    [NullableContextAttribute("2")]
public sealed virtual IRelationType Get(Guid id);
    public sealed virtual bool Exists(Guid id);
    protected virtual IEnumerable`1<IRelationType> PerformGetAll(Int32[] ids);
    public sealed virtual IEnumerable`1<IRelationType> GetMany(Guid[] ids);
    protected virtual IEnumerable`1<IRelationType> PerformGetByQuery(IQuery`1<IRelationType> query);
    private static IRelationType DtoToEntity(RelationTypeDto dto);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IRelationType entity);
    protected virtual void PersistUpdatedItem(IRelationType entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.RepositoryBase : object {
    [CompilerGeneratedAttribute]
private AppCaches <AppCaches>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopeAccessor <ScopeAccessor>k__BackingField;
    protected AppCaches AppCaches { get; }
    protected IScopeAccessor ScopeAccessor { get; }
    protected IScope AmbientScope { get; }
    protected IUmbracoDatabase Database { get; }
    protected ISqlContext SqlContext { get; }
    protected ISqlSyntaxProvider SqlSyntax { get; }
    protected RepositoryBase(IScopeAccessor scopeAccessor, AppCaches appCaches);
    [CompilerGeneratedAttribute]
protected AppCaches get_AppCaches();
    [CompilerGeneratedAttribute]
protected IScopeAccessor get_ScopeAccessor();
    protected IScope get_AmbientScope();
    protected IUmbracoDatabase get_Database();
    protected ISqlContext get_SqlContext();
    protected ISqlSyntaxProvider get_SqlSyntax();
    protected Sql`1<ISqlContext> Sql();
    protected Sql`1<ISqlContext> Sql(string sql, Object[] args);
    protected IQuery`1<T> Query();
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ScriptRepository : FileRepository`2<string, IScript> {
    [NullableContextAttribute("1")]
public ScriptRepository(FileSystems fileSystems);
    [NullableContextAttribute("2")]
public virtual IScript Get(string id);
    [NullableContextAttribute("1")]
public virtual void Save(IScript entity);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ScriptRepository/<GetMany>d__3")]
public virtual IEnumerable`1<IScript> GetMany(String[] ids);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <Get>b__1_0(File file);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <Save>b__2_0(File file);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.ServerRegistrationRepository : EntityRepositoryBase`2<int, IServerRegistration> {
    public ServerRegistrationRepository(IScopeAccessor scopeAccessor, ILogger`1<ServerRegistrationRepository> logger);
    public sealed virtual void ClearCache();
    public sealed virtual void DeactiveStaleServers(TimeSpan staleTimeout);
    protected virtual IRepositoryCachePolicy`2<IServerRegistration, int> CreateCachePolicy();
    protected virtual int PerformCount(IQuery`1<IServerRegistration> query);
    protected virtual bool PerformExists(int id);
    [NullableContextAttribute("2")]
protected virtual IServerRegistration PerformGet(int id);
    protected virtual IEnumerable`1<IServerRegistration> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IServerRegistration> PerformGetByQuery(IQuery`1<IServerRegistration> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IServerRegistration entity);
    protected virtual void PersistUpdatedItem(IServerRegistration entity);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.SimilarNodeName : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public int Id { get; public set; }
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public static string GetUniqueName(IEnumerable`1<SimilarNodeName> names, int nodeId, string nodeName);
    public static string GetUniqueName(IEnumerable`1<string> names, string name);
    [NullableContextAttribute("1")]
private static int GetFirstSuffix(IEnumerable`1<StructuredName> items);
    [NullableContextAttribute("1")]
private static int GetSuffixNumber(IEnumerable`1<StructuredName> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal abstract class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.SimpleGetRepository`3 : EntityRepositoryBase`2<TId, TEntity> {
    protected SimpleGetRepository`3(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<SimpleGetRepository`3<TId, TEntity, TDto>> logger);
    protected abstract virtual TEntity ConvertToEntity(TDto dto);
    protected abstract virtual object GetBaseWhereClauseArguments(TId id);
    protected abstract virtual string GetWhereInClauseForGetAll();
    protected virtual IEnumerable`1<TDto> PerformFetch(Sql sql);
    [NullableContextAttribute("2")]
protected virtual TEntity PerformGet(TId id);
    protected virtual IEnumerable`1<TEntity> PerformGetAll(TId[] ids);
    protected sealed virtual IEnumerable`1<TEntity> PerformGetByQuery(IQuery`1<TEntity> query);
    protected sealed virtual IEnumerable`1<string> GetDeleteClauses();
    protected sealed virtual void PersistNewItem(TEntity entity);
    protected sealed virtual void PersistUpdatedItem(TEntity entity);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.StylesheetRepository : FileRepository`2<string, IStylesheet> {
    [NullableContextAttribute("1")]
public StylesheetRepository(FileSystems fileSystems);
    [NullableContextAttribute("2")]
public virtual IStylesheet Get(string id);
    [NullableContextAttribute("1")]
public virtual void Save(IStylesheet entity);
    [NullableContextAttribute("1")]
[IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.StylesheetRepository/<GetMany>d__3")]
public virtual IEnumerable`1<IStylesheet> GetMany(String[] ids);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <Get>b__1_0(File file);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private string <Save>b__2_0(File file);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TagRepository : EntityRepositoryBase`2<int, ITag> {
    public TagRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<TagRepository> logger);
    [NullableContextAttribute("2")]
protected virtual ITag PerformGet(int id);
    protected virtual IEnumerable`1<ITag> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ITag> PerformGetByQuery(IQuery`1<ITag> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    private Sql`1<ISqlContext> GetBaseQuery();
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(ITag entity);
    protected virtual void PersistUpdatedItem(ITag entity);
    public sealed virtual void Assign(int contentId, int propertyTypeId, IEnumerable`1<ITag> tags, bool replaceTags);
    public sealed virtual void Remove(int contentId, int propertyTypeId, IEnumerable`1<ITag> tags);
    public sealed virtual void RemoveAll(int contentId, int propertyTypeId);
    public sealed virtual void RemoveAll(int contentId);
    private string GetTagSet(IEnumerable`1<ITag> tags);
    [NullableContextAttribute("2")]
public sealed virtual TaggedEntity GetTaggedEntityByKey(Guid key);
    [NullableContextAttribute("2")]
public sealed virtual TaggedEntity GetTaggedEntityById(int id);
    public sealed virtual IEnumerable`1<TaggedEntity> GetTaggedEntitiesByTagGroup(TaggableObjectTypes objectType, string group, string culture);
    public sealed virtual IEnumerable`1<TaggedEntity> GetTaggedEntitiesByTag(TaggableObjectTypes objectType, string tag, string group, string culture);
    private Sql`1<ISqlContext> GetTaggedEntitiesSql(TaggableObjectTypes objectType, string culture);
    private static IEnumerable`1<TaggedEntity> Map(IEnumerable`1<TaggedEntityDto> dtos);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ITag> GetTagsForEntityType(TaggableObjectTypes objectType, string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ITag> GetTagsForEntity(int contentId, string group, string culture);
    [NullableContextAttribute("2")]
public sealed virtual IEnumerable`1<ITag> GetTagsForEntity(Guid contentId, string group, string culture);
    public sealed virtual IEnumerable`1<ITag> GetTagsForProperty(int contentId, string propertyTypeAlias, string group, string culture);
    public sealed virtual IEnumerable`1<ITag> GetTagsForProperty(Guid contentId, string propertyTypeAlias, string group, string culture);
    private Sql`1<ISqlContext> GetTagsSql(string culture, bool withGrouping);
    private Sql`1<ISqlContext> AddTagsSqlWhere(Sql`1<ISqlContext> sql, string culture);
    private IEnumerable`1<ITag> ExecuteTagsQuery(Sql sql);
    private Guid GetNodeObjectType(TaggableObjectTypes type);
    [CompilerGeneratedAttribute]
private Sql`1<ISqlContext> <PerformGetAll>b__2_0(IEnumerable`1<int> batch);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TemplateRepository : EntityRepositoryBase`2<int, ITemplate> {
    private IIOHelper _ioHelper;
    private IShortStringHelper _shortStringHelper;
    [NullableAttribute("2")]
private IFileSystem _viewsFileSystem;
    private IViewHelper _viewHelper;
    private IOptionsMonitor`1<RuntimeSettings> _runtimeSettings;
    protected Guid NodeObjectTypeId { get; }
    public TemplateRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<TemplateRepository> logger, FileSystems fileSystems, IIOHelper ioHelper, IShortStringHelper shortStringHelper, IViewHelper viewHelper, IOptionsMonitor`1<RuntimeSettings> runtimeSettings);
    public sealed virtual Stream GetFileContentStream(string filepath);
    public sealed virtual void SetFileContent(string filepath, Stream content);
    public sealed virtual long GetFileSize(string filename);
    protected virtual IRepositoryCachePolicy`2<ITemplate, int> CreateCachePolicy();
    private IEnumerable`1<IUmbracoEntity> GetAxisDefinitions(TemplateDto[] templates);
    private ITemplate MapFromDto(TemplateDto dto, IUmbracoEntity[] axisDefinitions);
    private void SetVirtualPath(ITemplate template);
    private string GetFileContent(ITemplate template, bool init);
    private string GetFileContent(ITemplate template, IFileSystem fs, string filename, bool init);
    [NullableContextAttribute("2")]
private string GetFileContent(IFileSystem fs, string filename);
    private IFileSystem GetFileSystem(string filepath);
    private void EnsureValidAlias(ITemplate template);
    private bool AliasAlreadExists(ITemplate template);
    private string EnsureUniqueAlias(ITemplate template, int attempts);
    [NullableContextAttribute("2")]
protected virtual ITemplate PerformGet(int id);
    protected virtual IEnumerable`1<ITemplate> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ITemplate> PerformGetByQuery(IQuery`1<ITemplate> query);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected Guid get_NodeObjectTypeId();
    protected virtual void PersistNewItem(ITemplate entity);
    protected virtual void PersistUpdatedItem(ITemplate entity);
    private void SaveFile(Template template, string originalAlias);
    protected virtual void PersistDeletedItem(ITemplate entity);
    [NullableContextAttribute("2")]
public sealed virtual ITemplate Get(string alias);
    public sealed virtual IEnumerable`1<ITemplate> GetAll(String[] aliases);
    public sealed virtual IEnumerable`1<ITemplate> GetChildren(int masterTemplateId);
    public sealed virtual IEnumerable`1<ITemplate> GetDescendants(int masterTemplateId);
    private void AddChildren(ITemplate[] all, List`1<ITemplate> descendants, string masterAlias);
    [CompilerGeneratedAttribute]
private string <PersistNewItem>b__28_0(File file);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TrackedReferencesRepository : object {
    private IScopeAccessor _scopeAccessor;
    private IUmbracoMapper _umbracoMapper;
    public TrackedReferencesRepository(IScopeAccessor scopeAccessor, IUmbracoMapper umbracoMapper);
    public sealed virtual IEnumerable`1<RelationItem> GetPagedItemsWithRelations(Int32[] ids, long pageIndex, int pageSize, bool filterMustBeIsDependency, Int64& totalRecords);
    private Sql`1<ISqlContext> GetInnerUnionSql();
    public sealed virtual IEnumerable`1<RelationItem> GetPagedDescendantsInReferences(int parentId, long pageIndex, int pageSize, bool filterMustBeIsDependency, Int64& totalRecords);
    public sealed virtual IEnumerable`1<RelationItem> GetPagedRelationsForItem(int id, long pageIndex, int pageSize, bool filterMustBeIsDependency, Int64& totalRecords);
    public sealed virtual IEnumerable`1<RelationItemModel> GetPagedRelationsForItem(Guid key, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    [ObsoleteAttribute("Use overload that takes key instead of id. This will be removed in Umbraco 15.")]
public sealed virtual IEnumerable`1<RelationItemModel> GetPagedRelationsForItem(int id, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    public sealed virtual IEnumerable`1<RelationItemModel> GetPagedItemsWithRelations(ISet`1<Guid> keys, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    public sealed virtual IEnumerable`1<RelationItemModel> GetPagedDescendantsInReferences(Guid parentKey, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    [ObsoleteAttribute("Use overload that takes keys instead of ids. This will be removed in Umbraco 15.")]
public sealed virtual IEnumerable`1<RelationItemModel> GetPagedItemsWithRelations(Int32[] ids, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    public sealed virtual IEnumerable`1<RelationItemModel> GetPagedDescendantsInReferences(int parentId, long skip, long take, bool filterMustBeIsDependency, Int64& totalRecords);
    private RelationItem MapDtoToEntity(RelationItemDto dto);
}
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TupleExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<TResult> Map(Tuple`2<List`1<T1>, List`1<T2>> t, Func`3<T1, T2, TResult> relator);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TwoFactorLoginRepository : EntityRepositoryBase`2<int, ITwoFactorLogin> {
    public TwoFactorLoginRepository(IScopeAccessor scopeAccessor, AppCaches cache, ILogger`1<TwoFactorLoginRepository> logger);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TwoFactorLoginRepository/<DeleteUserLoginsAsync>d__1")]
public sealed virtual Task`1<bool> DeleteUserLoginsAsync(Guid userOrMemberKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TwoFactorLoginRepository/<DeleteUserLoginsAsync>d__2")]
public sealed virtual Task`1<bool> DeleteUserLoginsAsync(Guid userOrMemberKey, string providerName);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.TwoFactorLoginRepository/<GetByUserOrMemberKeyAsync>d__3")]
public sealed virtual Task`1<IEnumerable`1<ITwoFactorLogin>> GetByUserOrMemberKeyAsync(Guid userOrMemberKey);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    [NullableContextAttribute("2")]
protected virtual ITwoFactorLogin PerformGet(int id);
    protected virtual IEnumerable`1<ITwoFactorLogin> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<ITwoFactorLogin> PerformGetByQuery(IQuery`1<ITwoFactorLogin> query);
    protected virtual void PersistNewItem(ITwoFactorLogin entity);
    protected virtual void PersistUpdatedItem(ITwoFactorLogin entity);
    private static TwoFactorLoginDto Map(ITwoFactorLogin entity);
    private static ITwoFactorLogin Map(TwoFactorLoginDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository : object {
    private IScopeAccessor _scopeAccessor;
    public UserDataRepository(IScopeAccessor scopeAccessor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository/<GetAsync>d__2")]
public sealed virtual Task`1<IUserData> GetAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository/<GetAsync>d__3")]
public sealed virtual Task`1<PagedModel`1<IUserData>> GetAsync(int skip, int take, IUserDataFilter filter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository/<Save>d__4")]
public sealed virtual Task`1<IUserData> Save(IUserData userData);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository/<Update>d__5")]
public sealed virtual Task`1<IUserData> Update(IUserData userData);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserDataRepository/<Delete>d__6")]
public sealed virtual Task Delete(IUserData userData);
    private Sql`1<ISqlContext> ApplyFilter(Sql`1<ISqlContext> sql, IUserDataFilter filter);
    private IEnumerable`1<IUserData> DtosToModels(IEnumerable`1<UserDataDto> dtos);
    private IUserData Map(UserDataDto dto);
    private UserDataDto Map(IUserData userData);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserGroupRepository : EntityRepositoryBase`2<int, IUserGroup> {
    private PermissionRepository`1<IContent> _permissionRepository;
    private IShortStringHelper _shortStringHelper;
    private UserGroupWithUsersRepository _userGroupWithUsersRepository;
    private IDictionary`2<string, IPermissionMapper> _permissionMappers;
    public UserGroupRepository(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<UserGroupRepository> logger, ILoggerFactory loggerFactory, IShortStringHelper shortStringHelper, IEnumerable`1<IPermissionMapper> permissionMappers);
    public sealed virtual IUserGroup Get(string alias);
    public sealed virtual IEnumerable`1<IUserGroup> GetGroupsAssignedToSection(string sectionAlias);
    public sealed virtual void AddOrUpdateGroupWithUsers(IUserGroup userGroup, Int32[] userIds);
    public sealed virtual EntityPermissionCollection GetPermissions(Int32[] groupIds, Int32[] entityIds);
    public sealed virtual EntityPermissionCollection GetPermissions(IReadOnlyUserGroup[] groups, bool fallbackToDefaultPermissions, Int32[] nodeIds);
    public sealed virtual void ReplaceGroupPermissions(int groupId, ISet`1<string> permissions, Int32[] entityIds);
    public sealed virtual void AssignGroupPermission(int groupId, string permission, Int32[] entityIds);
    public static string GetByAliasCacheKey(string alias);
    [NullableContextAttribute("2")]
protected virtual IUserGroup PerformGet(int id);
    protected virtual IEnumerable`1<IUserGroup> PerformGetAll(Int32[] ids);
    protected virtual IEnumerable`1<IUserGroup> PerformGetByQuery(IQuery`1<IUserGroup> query);
    private void AssignUserGroupOneToManyTables(List`1& userGroupDtos);
    protected Sql`1<ISqlContext> GetBaseQuery(QueryType type);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    private static void AppendGroupBy(Sql`1<ISqlContext> sql);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistNewItem(IUserGroup entity);
    protected virtual void PersistUpdatedItem(IUserGroup entity);
    private void PersistAllowedSections(IUserGroup entity);
    private void PersistAllowedLanguages(IUserGroup entity);
    private void PersistPermissions(IUserGroup userGroup);
    private void PersistGranularPermissions(IUserGroup userGroup);
    private List`1<UserGroup2LanguageDto> GetUserGroupLanguages(int userGroupId);
    private IDictionary`2<int, List`1<UserGroup2LanguageDto>> GetAllUserGroupLanguageGrouped();
    private List`1<UserGroup2PermissionDto> GetUserGroupPermissions(Guid userGroupKey);
    private List`1<UserGroup2GranularPermissionDto> GetUserGroupGranularPermissions(Guid userGroupKey);
    private Dictionary`2<Guid, List`1<UserGroup2PermissionDto>> GetAllUserGroupPermissionsGrouped();
    private Dictionary`2<Guid, List`1<UserGroup2GranularPermissionDto>> GetAllUserGroupGranularPermissionsGrouped();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IUserGroup <GetGroupsAssignedToSection>b__6_0(UserGroupDto x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IUserGroup <PerformGetAll>b__16_4(UserGroupDto x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IUserGroup <PerformGetByQuery>b__17_2(UserGroupDto x);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.UserRepository : EntityRepositoryBase`2<Guid, IUser> {
    private IMapperCollection _mapperCollection;
    private GlobalSettings _globalSettings;
    private UserPasswordConfigurationSettings _passwordConfiguration;
    private IJsonSerializer _jsonSerializer;
    private IRuntimeState _runtimeState;
    [NullableAttribute("2")]
private string _passwordConfigJson;
    private bool _passwordConfigInitialized;
    private object _sqliteValidateSessionLock;
    private IDictionary`2<string, IPermissionMapper> _permissionMappers;
    private IAppPolicyCache _globalCache;
    private IScopeAccessor _scopeAccessor;
    [NullableAttribute("2")]
private string DefaultPasswordConfigJson { get; }
    public UserRepository(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<UserRepository> logger, IMapperCollection mapperCollection, IOptions`1<GlobalSettings> globalSettings, IOptions`1<UserPasswordConfigurationSettings> passwordConfiguration, IJsonSerializer jsonSerializer, IRuntimeState runtimeState, IEnumerable`1<IPermissionMapper> permissionMappers, IAppPolicyCache globalCache);
    [NullableContextAttribute("2")]
private string get_DefaultPasswordConfigJson();
    private IEnumerable`1<IUser> ConvertFromDtos(IEnumerable`1<UserDto> dtos);
    [NullableContextAttribute("2")]
protected virtual IUser PerformGet(Guid key);
    protected virtual Guid GetEntityId(IUser entity);
    public sealed virtual IUser GetByUsername(string username, bool includeSecurityData);
    public sealed virtual IUser GetForUpgradeByUsername(string username);
    public sealed virtual IUser GetForUpgradeByEmail(string email);
    [NullableContextAttribute("2")]
public sealed virtual IUser GetForUpgrade(int id);
    private IUser GetUpgradeUserWith(Action`1<Sql`1<ISqlContext>> with);
    [NullableContextAttribute("2")]
public sealed virtual IUser Get(Nullable`1<int> id, bool includeSecurityData);
    public sealed virtual IProfile GetProfile(string username);
    [NullableContextAttribute("2")]
public sealed virtual IProfile GetProfile(int id);
    public sealed virtual IDictionary`2<UserState, int> GetUserStates();
    public sealed virtual Guid CreateLoginSession(Nullable`1<int> userId, string requestingIpAddress, bool cleanStaleSessions);
    public sealed virtual bool ValidateLoginSession(int userId, Guid sessionId);
    private bool ValidateLoginSessionInternal(int userId, Guid sessionId);
    public sealed virtual int ClearLoginSessions(int userId);
    public sealed virtual int ClearLoginSessions(TimeSpan timespan);
    public sealed virtual void ClearLoginSession(Guid sessionId);
    protected virtual IEnumerable`1<IUser> PerformGetAll(Guid[] ids);
    protected virtual IEnumerable`1<IUser> PerformGetByQuery(IQuery`1<IUser> query);
    private IUser GetWith(Action`1<Sql`1<ISqlContext>> with, bool includeReferences);
    private UserDto GetDtoWith(Action`1<Sql`1<ISqlContext>> with, bool includeReferences);
    private List`1<UserDto> GetDtosWith(Action`1<Sql`1<ISqlContext>> with, bool includeReferences);
    private void PerformGetReferencedDtos(List`1<UserDto> dtos);
    protected virtual Sql`1<ISqlContext> GetBaseQuery(bool isCount);
    private static void AddGroupLeftJoin(Sql`1<ISqlContext> sql);
    private Sql`1<ISqlContext> GetBaseQuery(string columns);
    protected virtual string GetBaseWhereClause();
    protected virtual IEnumerable`1<string> GetDeleteClauses();
    protected virtual void PersistDeletedItem(IUser entity);
    protected virtual void PersistNewItem(IUser entity);
    protected virtual void PersistUpdatedItem(IUser entity);
    private void AddingOrUpdateStartNodes(IEntity entity, IEnumerable`1<UserStartNodeDto> current, StartNodeTypeValue startNodeType, Int32[] entityStartIds);
    public sealed virtual int GetCountByQuery(IQuery`1<IUser> query);
    protected virtual bool PerformExists(Guid key);
    public bool Exists(string username);
    public sealed virtual bool ExistsByUserName(string username);
    [NullableContextAttribute("2")]
public sealed virtual IUser Get(int id);
    public sealed virtual bool ExistsByLogin(string login);
    public sealed virtual IEnumerable`1<IUser> GetAllInGroup(int groupId);
    public sealed virtual IEnumerable`1<IUser> GetAllNotInGroup(int groupId);
    private IEnumerable`1<IUser> GetAllInOrNotInGroup(int groupId, bool include);
    public sealed virtual IEnumerable`1<IUser> GetPagedResultsByQuery(IQuery`1<IUser> query, long pageIndex, int pageSize, Int64& totalRecords, Expression`1<Func`2<IUser, object>> orderBy, Direction orderDirection, String[] includeUserGroups, String[] excludeUserGroups, UserState[] userState, IQuery`1<IUser> filter);
    private Sql`1<ISqlContext> ApplyFilter(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> filterSql, bool hasWhereClause);
    private Sql`1<ISqlContext> ApplySort(Sql`1<ISqlContext> sql, Expression`1<Func`2<IUser, object>> orderBy, Direction orderDirection);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IUser <ConvertFromDtos>b__14_0(UserDto x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IUser <GetPagedResultsByQuery>b__56_0(UserDto x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookLogRepository : object {
    private IScopeAccessor _scopeAccessor;
    private IUmbracoDatabase Database { get; }
    public WebhookLogRepository(IScopeAccessor scopeAccessor);
    private IUmbracoDatabase get_Database();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookLogRepository/<CreateAsync>d__4")]
public sealed virtual Task CreateAsync(WebhookLog log);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookLogRepository/<GetPagedAsync>d__5")]
public sealed virtual Task`1<PagedModel`1<WebhookLog>> GetPagedAsync(int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookLogRepository/<GetOlderThanDate>d__6")]
public sealed virtual Task`1<IEnumerable`1<WebhookLog>> GetOlderThanDate(DateTime date);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookLogRepository/<DeleteByIds>d__7")]
public sealed virtual Task DeleteByIds(Int32[] ids);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository : object {
    private IScopeAccessor _scopeAccessor;
    public WebhookRepository(IScopeAccessor scopeAccessor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<GetAllAsync>d__2")]
public sealed virtual Task`1<PagedModel`1<IWebhook>> GetAllAsync(int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<CreateAsync>d__3")]
public sealed virtual Task`1<IWebhook> CreateAsync(IWebhook webhook);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<GetAsync>d__4")]
public sealed virtual Task`1<IWebhook> GetAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<GetByIdsAsync>d__5")]
public sealed virtual Task`1<PagedModel`1<IWebhook>> GetByIdsAsync(IEnumerable`1<Guid> keys);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<GetByAliasAsync>d__6")]
public sealed virtual Task`1<PagedModel`1<IWebhook>> GetByAliasAsync(string alias);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<DeleteAsync>d__7")]
public sealed virtual Task DeleteAsync(IWebhook webhook);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<UpdateAsync>d__8")]
public sealed virtual Task UpdateAsync(IWebhook webhook);
    private void DeleteManyToOneReferences(int webhookId);
    private void InsertManyToOneReferences(IWebhook webhook);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<DtosToEntities>d__11")]
private Task`1<IEnumerable`1<IWebhook>> DtosToEntities(IEnumerable`1<WebhookDto> dtos);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRepository/<DtoToEntity>d__12")]
private Task`1<IWebhook> DtoToEntity(WebhookDto dto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRequestRepository : object {
    private IScopeAccessor _scopeAccessor;
    private IUmbracoDatabase Database { get; }
    public WebhookRequestRepository(IScopeAccessor scopeAccessor);
    private IUmbracoDatabase get_Database();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRequestRepository/<CreateAsync>d__4")]
public sealed virtual Task`1<WebhookRequest> CreateAsync(WebhookRequest webhookRequest);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRequestRepository/<DeleteAsync>d__5")]
public sealed virtual Task DeleteAsync(WebhookRequest webhookRequest);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRequestRepository/<GetAllAsync>d__6")]
public sealed virtual Task`1<IEnumerable`1<WebhookRequest>> GetAllAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Persistence.Repositories.Implement.WebhookRequestRepository/<UpdateAsync>d__7")]
public sealed virtual Task`1<WebhookRequest> UpdateAsync(WebhookRequest webhookRequest);
}
public abstract class Umbraco.Cms.Infrastructure.Persistence.ScalarMapper`1 : object {
    [NullableContextAttribute("1")]
private sealed virtual override object Umbraco.Cms.Infrastructure.Persistence.IScalarMapper.Map(object value);
    [NullableContextAttribute("1")]
protected abstract virtual T Map(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.SqlContext : object {
    [CompilerGeneratedAttribute]
private ISqlSyntaxProvider <SqlSyntax>k__BackingField;
    [CompilerGeneratedAttribute]
private DatabaseType <DatabaseType>k__BackingField;
    [CompilerGeneratedAttribute]
private SqlTemplates <Templates>k__BackingField;
    [CompilerGeneratedAttribute]
private IPocoDataFactory <PocoDataFactory>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IMapperCollection <Mappers>k__BackingField;
    public ISqlSyntaxProvider SqlSyntax { get; }
    public DatabaseType DatabaseType { get; }
    public SqlTemplates Templates { get; }
    public IPocoDataFactory PocoDataFactory { get; }
    [NullableAttribute("2")]
public IMapperCollection Mappers { get; }
    public SqlContext(ISqlSyntaxProvider sqlSyntax, DatabaseType databaseType, IPocoDataFactory pocoDataFactory, IMapperCollection mappers);
    [CompilerGeneratedAttribute]
public sealed virtual ISqlSyntaxProvider get_SqlSyntax();
    [CompilerGeneratedAttribute]
public sealed virtual DatabaseType get_DatabaseType();
    [CompilerGeneratedAttribute]
public sealed virtual SqlTemplates get_Templates();
    [CompilerGeneratedAttribute]
public sealed virtual IPocoDataFactory get_PocoDataFactory();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IMapperCollection get_Mappers();
    public sealed virtual Sql`1<ISqlContext> Sql();
    public sealed virtual Sql`1<ISqlContext> Sql(string sql, Object[] args);
    public sealed virtual IQuery`1<T> Query();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.ColumnInfo : object {
    [CompilerGeneratedAttribute]
private string <TableName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ColumnName>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Ordinal>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ColumnDefault>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsNullable>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DataType>k__BackingField;
    public string TableName { get; public set; }
    public string ColumnName { get; public set; }
    public int Ordinal { get; public set; }
    [NullableAttribute("2")]
public string ColumnDefault { get; public set; }
    public bool IsNullable { get; public set; }
    public string DataType { get; public set; }
    public ColumnInfo(string tableName, string columnName, int ordinal, string columnDefault, string isNullable, string dataType);
    public ColumnInfo(string tableName, string columnName, int ordinal, string isNullable, string dataType);
    public ColumnInfo(string tableName, string columnName, int ordinal, bool isNullable, string dataType);
    [CompilerGeneratedAttribute]
public string get_TableName();
    [CompilerGeneratedAttribute]
public void set_TableName(string value);
    [CompilerGeneratedAttribute]
public string get_ColumnName();
    [CompilerGeneratedAttribute]
public void set_ColumnName(string value);
    [CompilerGeneratedAttribute]
public int get_Ordinal();
    [CompilerGeneratedAttribute]
public void set_Ordinal(int value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ColumnDefault();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ColumnDefault(string value);
    [CompilerGeneratedAttribute]
public bool get_IsNullable();
    [CompilerGeneratedAttribute]
public void set_IsNullable(bool value);
    [CompilerGeneratedAttribute]
public string get_DataType();
    [CompilerGeneratedAttribute]
public void set_DataType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.DbTypes : object {
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Type, string> <ColumnTypeMap>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<Type, DbType> <ColumnDbTypeMap>k__BackingField;
    public IReadOnlyDictionary`2<Type, string> ColumnTypeMap { get; }
    public IReadOnlyDictionary`2<Type, DbType> ColumnDbTypeMap { get; }
    public DbTypes(IReadOnlyDictionary`2<Type, string> columnTypeMap, IReadOnlyDictionary`2<Type, DbType> columnDbTypeMap);
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<Type, string> get_ColumnTypeMap();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<Type, DbType> get_ColumnDbTypeMap();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.DbTypesFactory : object {
    private Dictionary`2<Type, DbType> _columnDbTypeMap;
    private Dictionary`2<Type, string> _columnTypeMap;
    public void Set(DbType dbType, string fieldDefinition);
    public DbTypes Create();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.ISqlSyntaxProvider {
    public string Length { get; }
    public string Substring { get; }
    public string ProviderName { get; }
    public string CreateTable { get; }
    public string DropTable { get; }
    public string AddColumn { get; }
    public string DropColumn { get; }
    public string AlterColumn { get; }
    public string RenameColumn { get; }
    public string RenameTable { get; }
    public string CreateSchema { get; }
    public string AlterSchema { get; }
    public string DropSchema { get; }
    public string CreateIndex { get; }
    public string DropIndex { get; }
    public string InsertData { get; }
    public string UpdateData { get; }
    public string DeleteData { get; }
    public string TruncateTable { get; }
    public string CreateConstraint { get; }
    public string DeleteConstraint { get; }
    public string DeleteDefaultConstraint { get; }
    public Regex AliasRegex { get; }
    public string ConvertIntegerToOrderableString { get; }
    public string ConvertDateToOrderableString { get; }
    public string ConvertDecimalToOrderableString { get; }
    public IsolationLevel DefaultIsolationLevel { get; }
    public string DbProvider { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<Type, IScalarMapper> ScalarMappers { get; }
    public abstract virtual string get_Length();
    public abstract virtual string get_Substring();
    public abstract virtual string get_ProviderName();
    public abstract virtual string get_CreateTable();
    public abstract virtual string get_DropTable();
    public abstract virtual string get_AddColumn();
    public abstract virtual string get_DropColumn();
    public abstract virtual string get_AlterColumn();
    public abstract virtual string get_RenameColumn();
    public abstract virtual string get_RenameTable();
    public abstract virtual string get_CreateSchema();
    public abstract virtual string get_AlterSchema();
    public abstract virtual string get_DropSchema();
    public abstract virtual string get_CreateIndex();
    public abstract virtual string get_DropIndex();
    public abstract virtual string get_InsertData();
    public abstract virtual string get_UpdateData();
    public abstract virtual string get_DeleteData();
    public abstract virtual string get_TruncateTable();
    public abstract virtual string get_CreateConstraint();
    public abstract virtual string get_DeleteConstraint();
    public abstract virtual string get_DeleteDefaultConstraint();
    public abstract virtual Regex get_AliasRegex();
    public abstract virtual string get_ConvertIntegerToOrderableString();
    public abstract virtual string get_ConvertDateToOrderableString();
    public abstract virtual string get_ConvertDecimalToOrderableString();
    public abstract virtual IsolationLevel get_DefaultIsolationLevel();
    public abstract virtual string get_DbProvider();
    public virtual IDictionary`2<Type, IScalarMapper> get_ScalarMappers();
    public virtual DatabaseType GetUpdatedDatabaseType(DatabaseType current, string connectionString);
    public abstract virtual string EscapeString(string val);
    public abstract virtual string GetWildcardPlaceholder();
    public abstract virtual string GetStringColumnEqualComparison(string column, int paramIndex, TextColumnType columnType);
    public abstract virtual string GetStringColumnWildcardComparison(string column, int paramIndex, TextColumnType columnType);
    public abstract virtual string GetConcat(String[] args);
    public abstract virtual string GetColumn(DatabaseType dbType, string tableName, string columnName, string columnAlias, string referenceName, bool forInsert);
    public abstract virtual string GetQuotedTableName(string tableName);
    public abstract virtual string GetQuotedColumnName(string columnName);
    public abstract virtual string GetQuotedName(string name);
    public abstract virtual bool DoesTableExist(IDatabase db, string tableName);
    public abstract virtual string GetIndexType(IndexTypes indexTypes);
    public abstract virtual string GetSpecialDbType(SpecialDbType dbType);
    public abstract virtual string FormatDateTime(DateTime date, bool includeTime);
    public abstract virtual string Format(TableDefinition table);
    public abstract virtual string Format(IEnumerable`1<ColumnDefinition> columns);
    public abstract virtual List`1<string> Format(IEnumerable`1<IndexDefinition> indexes);
    public abstract virtual List`1<string> Format(IEnumerable`1<ForeignKeyDefinition> foreignKeys);
    public abstract virtual string FormatPrimaryKey(TableDefinition table);
    public abstract virtual string GetQuotedValue(string value);
    public abstract virtual string Format(ColumnDefinition column);
    public abstract virtual string Format(ColumnDefinition column, string tableName, IEnumerable`1& sqls);
    public abstract virtual string Format(IndexDefinition index);
    public abstract virtual string Format(ForeignKeyDefinition foreignKey);
    [NullableContextAttribute("2")]
public abstract virtual string FormatColumnRename(string tableName, string oldName, string newName);
    [NullableContextAttribute("2")]
public abstract virtual string FormatTableRename(string oldName, string newName);
    public abstract virtual void HandleCreateTable(IDatabase database, TableDefinition tableDefinition, bool skipKeysAndIndexes);
    public abstract virtual Sql`1<ISqlContext> SelectTop(Sql`1<ISqlContext> sql, int top);
    public abstract virtual bool SupportsClustered();
    public abstract virtual bool SupportsIdentityInsert();
    public abstract virtual IEnumerable`1<string> GetTablesInSchema(IDatabase db);
    public abstract virtual IEnumerable`1<ColumnInfo> GetColumnsInSchema(IDatabase db);
    public abstract virtual IEnumerable`1<Tuple`2<string, string>> GetConstraintsPerTable(IDatabase db);
    public abstract virtual IEnumerable`1<Tuple`3<string, string, string>> GetConstraintsPerColumn(IDatabase db);
    public abstract virtual IEnumerable`1<Tuple`4<string, string, string, bool>> GetDefinedIndexes(IDatabase db);
    public abstract virtual bool TryGetDefaultConstraint(IDatabase db, string tableName, string columnName, String& constraintName);
    public virtual bool DoesPrimaryKeyExist(IDatabase db, string tableName, string primaryKeyName);
    [NullableContextAttribute("2")]
public abstract virtual string GetFieldNameForUpdate(Expression`1<Func`2<TDto, object>> fieldSelector, string tableAlias);
    public abstract virtual Sql`1<ISqlContext> InsertForUpdateHint(Sql`1<ISqlContext> sql);
    public abstract virtual Sql`1<ISqlContext> AppendForUpdateHint(Sql`1<ISqlContext> sql);
    public abstract virtual SqlJoinClause`1<ISqlContext, ISqlContext> LeftJoinWithNestedJoin(Sql`1<ISqlContext> sql, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> nestedJoin, string alias);
}
internal enum Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.SqlServerVersionName : Enum {
    public int value__;
    public static SqlServerVersionName Invalid;
    public static SqlServerVersionName V7;
    public static SqlServerVersionName V2000;
    public static SqlServerVersionName V2005;
    public static SqlServerVersionName V2008;
    public static SqlServerVersionName V2012;
    public static SqlServerVersionName V2014;
    public static SqlServerVersionName V2016;
    public static SqlServerVersionName Other;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.SqlSyntaxProviderBase`1 : object {
    private Lazy`1<DbTypes> _dbTypes;
    [CompilerGeneratedAttribute]
private string <StringLengthNonUnicodeColumnDefinitionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringLengthUnicodeColumnDefinitionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DecimalColumnDefinitionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultValueFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultStringLength>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultDecimalPrecision>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DefaultDecimalScale>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StringLengthColumnDefinitionFormat>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AutoIncrementDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LongColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <GuidColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BoolColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RealColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DecimalColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BlobColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateTimeColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DateTimeOffsetColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TimeColumnDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private IList`1<Func`2<ColumnDefinition, string>> <ClauseOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private Regex <AliasRegex>k__BackingField;
    public string StringLengthNonUnicodeColumnDefinitionFormat { get; }
    public string StringLengthUnicodeColumnDefinitionFormat { get; }
    public string DecimalColumnDefinitionFormat { get; }
    public string DefaultValueFormat { get; }
    public int DefaultStringLength { get; }
    public int DefaultDecimalPrecision { get; }
    public int DefaultDecimalScale { get; }
    public string StringColumnDefinition { get; }
    public string StringLengthColumnDefinitionFormat { get; }
    public string AutoIncrementDefinition { get; protected set; }
    public string IntColumnDefinition { get; protected set; }
    public string LongColumnDefinition { get; protected set; }
    public string GuidColumnDefinition { get; protected set; }
    public string BoolColumnDefinition { get; protected set; }
    public string RealColumnDefinition { get; protected set; }
    public string DecimalColumnDefinition { get; protected set; }
    public string BlobColumnDefinition { get; protected set; }
    public string DateTimeColumnDefinition { get; protected set; }
    public string DateTimeOffsetColumnDefinition { get; protected set; }
    public string TimeColumnDefinition { get; protected set; }
    protected IList`1<Func`2<ColumnDefinition, string>> ClauseOrder { get; }
    protected DbTypes DbTypeMap { get; }
    public string CreateForeignKeyConstraint { get; }
    public string CreateDefaultConstraint { get; }
    public Regex AliasRegex { get; }
    public string ProviderName { get; }
    public IsolationLevel DefaultIsolationLevel { get; }
    public string DbProvider { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<Type, IScalarMapper> ScalarMappers { get; }
    public string DeleteDefaultConstraint { get; }
    public string Length { get; }
    public string Substring { get; }
    public string CreateTable { get; }
    public string DropTable { get; }
    public string AddColumn { get; }
    public string DropColumn { get; }
    public string AlterColumn { get; }
    public string RenameColumn { get; }
    public string RenameTable { get; }
    public string CreateSchema { get; }
    public string AlterSchema { get; }
    public string DropSchema { get; }
    public string CreateIndex { get; }
    public string DropIndex { get; }
    public string InsertData { get; }
    public string UpdateData { get; }
    public string DeleteData { get; }
    public string TruncateTable { get; }
    public string CreateConstraint { get; }
    public string DeleteConstraint { get; }
    public string ConvertIntegerToOrderableString { get; }
    public string ConvertDateToOrderableString { get; }
    public string ConvertDecimalToOrderableString { get; }
    [CompilerGeneratedAttribute]
public string get_StringLengthNonUnicodeColumnDefinitionFormat();
    [CompilerGeneratedAttribute]
public virtual string get_StringLengthUnicodeColumnDefinitionFormat();
    [CompilerGeneratedAttribute]
public string get_DecimalColumnDefinitionFormat();
    [CompilerGeneratedAttribute]
public string get_DefaultValueFormat();
    [CompilerGeneratedAttribute]
public int get_DefaultStringLength();
    [CompilerGeneratedAttribute]
public int get_DefaultDecimalPrecision();
    [CompilerGeneratedAttribute]
public int get_DefaultDecimalScale();
    [CompilerGeneratedAttribute]
public virtual string get_StringColumnDefinition();
    [CompilerGeneratedAttribute]
public string get_StringLengthColumnDefinitionFormat();
    [CompilerGeneratedAttribute]
public string get_AutoIncrementDefinition();
    [CompilerGeneratedAttribute]
protected void set_AutoIncrementDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_IntColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_IntColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_LongColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_LongColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_GuidColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_GuidColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_BoolColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_BoolColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_RealColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_RealColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_DecimalColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_DecimalColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_BlobColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_BlobColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_DateTimeColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_DateTimeColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_DateTimeOffsetColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_DateTimeOffsetColumnDefinition(string value);
    [CompilerGeneratedAttribute]
public string get_TimeColumnDefinition();
    [CompilerGeneratedAttribute]
protected void set_TimeColumnDefinition(string value);
    [CompilerGeneratedAttribute]
protected IList`1<Func`2<ColumnDefinition, string>> get_ClauseOrder();
    protected DbTypes get_DbTypeMap();
    public virtual string get_CreateForeignKeyConstraint();
    public virtual string get_CreateDefaultConstraint();
    [CompilerGeneratedAttribute]
public sealed virtual Regex get_AliasRegex();
    public sealed virtual string GetWildcardPlaceholder();
    public virtual DatabaseType GetUpdatedDatabaseType(DatabaseType current, string connectionString);
    public abstract virtual string get_ProviderName();
    public virtual string EscapeString(string val);
    public virtual string GetStringColumnEqualComparison(string column, int paramIndex, TextColumnType columnType);
    public virtual string GetStringColumnWildcardComparison(string column, int paramIndex, TextColumnType columnType);
    public virtual string GetConcat(String[] args);
    public virtual string GetQuotedTableName(string tableName);
    public virtual string GetQuotedColumnName(string columnName);
    public virtual string GetQuotedName(string name);
    public virtual string GetQuotedValue(string value);
    public virtual string GetIndexType(IndexTypes indexTypes);
    public virtual string GetSpecialDbType(SpecialDbType dbType);
    public virtual string GetColumn(DatabaseType dbType, string tableName, string columnName, string columnAlias, string referenceName, bool forInsert);
    public abstract virtual IsolationLevel get_DefaultIsolationLevel();
    public abstract virtual string get_DbProvider();
    public virtual IEnumerable`1<string> GetTablesInSchema(IDatabase db);
    public virtual IEnumerable`1<ColumnInfo> GetColumnsInSchema(IDatabase db);
    public virtual IEnumerable`1<Tuple`2<string, string>> GetConstraintsPerTable(IDatabase db);
    public virtual IEnumerable`1<Tuple`3<string, string, string>> GetConstraintsPerColumn(IDatabase db);
    public abstract virtual IEnumerable`1<Tuple`4<string, string, string, bool>> GetDefinedIndexes(IDatabase db);
    public abstract virtual bool TryGetDefaultConstraint(IDatabase db, string tableName, string columnName, String& constraintName);
    public virtual bool DoesPrimaryKeyExist(IDatabase db, string tableName, string primaryKeyName);
    [NullableContextAttribute("2")]
public virtual string GetFieldNameForUpdate(Expression`1<Func`2<TDto, object>> fieldSelector, string tableAlias);
    public virtual Sql`1<ISqlContext> InsertForUpdateHint(Sql`1<ISqlContext> sql);
    public virtual Sql`1<ISqlContext> AppendForUpdateHint(Sql`1<ISqlContext> sql);
    public abstract virtual SqlJoinClause`1<ISqlContext, ISqlContext> LeftJoinWithNestedJoin(Sql`1<ISqlContext> sql, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> nestedJoin, string alias);
    public virtual IDictionary`2<Type, IScalarMapper> get_ScalarMappers();
    public virtual bool DoesTableExist(IDatabase db, string tableName);
    public virtual bool SupportsClustered();
    public virtual bool SupportsIdentityInsert();
    public virtual string FormatDateTime(DateTime date, bool includeTime);
    public virtual string Format(TableDefinition table);
    public virtual List`1<string> Format(IEnumerable`1<IndexDefinition> indexes);
    public virtual string Format(IndexDefinition index);
    public virtual List`1<string> Format(IEnumerable`1<ForeignKeyDefinition> foreignKeys);
    public virtual string Format(ForeignKeyDefinition foreignKey);
    public virtual string Format(IEnumerable`1<ColumnDefinition> columns);
    public virtual string Format(ColumnDefinition column);
    public virtual string Format(ColumnDefinition column, string tableName, IEnumerable`1& sqls);
    public virtual string FormatPrimaryKey(TableDefinition table);
    [NullableContextAttribute("2")]
public virtual string FormatColumnRename(string tableName, string oldName, string newName);
    [NullableContextAttribute("2")]
public virtual string FormatTableRename(string oldName, string newName);
    public abstract virtual Sql`1<ISqlContext> SelectTop(Sql`1<ISqlContext> sql, int top);
    public abstract virtual void HandleCreateTable(IDatabase database, TableDefinition tableDefinition, bool skipKeysAndIndexes);
    public virtual string get_DeleteDefaultConstraint();
    public virtual string get_Length();
    public virtual string get_Substring();
    public virtual string get_CreateTable();
    public virtual string get_DropTable();
    public virtual string get_AddColumn();
    public virtual string get_DropColumn();
    public virtual string get_AlterColumn();
    public virtual string get_RenameColumn();
    public virtual string get_RenameTable();
    public virtual string get_CreateSchema();
    public virtual string get_AlterSchema();
    public virtual string get_DropSchema();
    public virtual string get_CreateIndex();
    public virtual string get_DropIndex();
    public virtual string get_InsertData();
    public virtual string get_UpdateData();
    public virtual string get_DeleteData();
    public virtual string get_TruncateTable();
    public virtual string get_CreateConstraint();
    public virtual string get_DeleteConstraint();
    public virtual string get_ConvertIntegerToOrderableString();
    public virtual string get_ConvertDateToOrderableString();
    public virtual string get_ConvertDecimalToOrderableString();
    private DbTypes InitColumnTypeMap();
    public virtual string GetSpecialDbType(SpecialDbType dbType, int customSize);
    protected virtual string FormatCascade(string onWhat, Rule rule);
    protected virtual string FormatString(ColumnDefinition column);
    protected virtual string FormatType(ColumnDefinition column);
    protected virtual string FormatNullable(ColumnDefinition column);
    protected virtual string FormatConstraint(ColumnDefinition column);
    protected virtual string FormatDefaultValue(ColumnDefinition column);
    protected virtual string FormatPrimaryKey(ColumnDefinition column);
    [NullableContextAttribute("2")]
protected abstract virtual string FormatSystemMethods(SystemMethods systemMethod);
    protected abstract virtual string FormatIdentity(ColumnDefinition column);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private string <Format>b__123_0(IndexColumnDefinition x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.SqlSyntaxProviderExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<DbIndexDefinition> GetDefinedIndexesDefinitions(ISqlSyntaxProvider sql, IDatabase db);
    [ExtensionAttribute]
public static string GetQuotedColumn(ISqlSyntaxProvider sql, string tableName, string columnName);
    [ExtensionAttribute]
public static Sql GetDeleteSubquery(ISqlSyntaxProvider sqlProvider, string tableName, string columnName, Sql subQuery, WhereInType whereInType);
}
internal enum Umbraco.Cms.Infrastructure.Persistence.SqlSyntax.WhereInType : Enum {
    public int value__;
    public static WhereInType In;
    public static WhereInType NotIn;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.SqlTemplate : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Dictionary`2<int, object> _args;
    private string _sql;
    private ISqlContext _sqlContext;
    internal SqlTemplate(ISqlContext sqlContext, string sql, Object[] args);
    public static object Arg(string name);
    public Sql`1<ISqlContext> Sql();
    public Sql`1<ISqlContext> Sql(Object[] args);
    public Sql`1<ISqlContext> SqlNamed(object nargs);
    internal string ToText();
    [NullableContextAttribute("2")]
public static T Arg(string name);
    public static IEnumerable`1<T> ArgIn(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.SqlTemplates : object {
    private ISqlContext _sqlContext;
    private ConcurrentDictionary`2<string, SqlTemplate> _templates;
    public SqlTemplates(ISqlContext sqlContext);
    public SqlTemplate Get(string key, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> sqlBuilder);
    internal void Clear();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.UmbracoDatabase : Database {
    private ILogger`1<UmbracoDatabase> _logger;
    [NullableAttribute("2")]
private IBulkSqlInsertProvider _bulkSqlInsertProvider;
    [NullableAttribute("2")]
private DatabaseSchemaCreatorFactory _databaseSchemaCreatorFactory;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IEnumerable`1<IMapper> _mapperCollection;
    private Guid _instanceGuid;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<CommandInfo> _commands;
    [CompilerGeneratedAttribute]
private ISqlContext <SqlContext>k__BackingField;
    private bool _enableCount;
    [NullableAttribute("2")]
private string _instanceId;
    private static bool EnableSqlTraceDefault;
    [CompilerGeneratedAttribute]
private bool <InTransaction>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableSqlTrace>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SqlCount>k__BackingField;
    [NullableAttribute("2")]
private DbCommand _cmd;
    public ISqlContext SqlContext { get; }
    public string InstanceId { get; }
    public bool InTransaction { get; private set; }
    internal bool EnableSqlTrace { get; internal set; }
    public bool EnableSqlCount { get; public set; }
    public int SqlCount { get; private set; }
    internal bool LogCommands { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal IEnumerable`1<CommandInfo> Commands { get; }
    public UmbracoDatabase(string connectionString, ISqlContext sqlContext, DbProviderFactory provider, ILogger`1<UmbracoDatabase> logger, IBulkSqlInsertProvider bulkSqlInsertProvider, DatabaseSchemaCreatorFactory databaseSchemaCreatorFactory, IEnumerable`1<IMapper> mapperCollection);
    internal UmbracoDatabase(DbConnection connection, ISqlContext sqlContext, ILogger`1<UmbracoDatabase> logger, IBulkSqlInsertProvider bulkSqlInsertProvider);
    private void Init();
    private void InitCommandTimeout();
    [CompilerGeneratedAttribute]
public sealed virtual ISqlContext get_SqlContext();
    public sealed virtual string get_InstanceId();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_InTransaction();
    [CompilerGeneratedAttribute]
private void set_InTransaction(bool value);
    protected virtual void OnBeginTransaction();
    protected virtual void OnAbortTransaction();
    protected virtual void OnCompleteTransaction();
    [CompilerGeneratedAttribute]
internal bool get_EnableSqlTrace();
    [CompilerGeneratedAttribute]
internal void set_EnableSqlTrace(bool value);
    public sealed virtual bool get_EnableSqlCount();
    public sealed virtual void set_EnableSqlCount(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_SqlCount();
    [CompilerGeneratedAttribute]
private void set_SqlCount(int value);
    internal bool get_LogCommands();
    internal void set_LogCommands(bool value);
    internal IEnumerable`1<CommandInfo> get_Commands();
    public sealed virtual int BulkInsertRecords(IEnumerable`1<T> records);
    public sealed virtual DatabaseSchemaResult ValidateSchema();
    public sealed virtual int ExecuteNonQuery(DbCommand command);
    public sealed virtual bool IsUmbracoInstalled();
    protected virtual DbConnection OnConnectionOpened(DbConnection connection);
    protected virtual void OnException(Exception ex);
    protected virtual void OnExecutingCommand(DbCommand cmd);
    private string CommandToString(DbCommand cmd);
    private string CommandToString(string sql, Object[] args);
    protected virtual void OnExecutedCommand(DbCommand cmd);
    public sealed virtual T ExecuteScalar(string sql, Object[] args);
    public sealed virtual T ExecuteScalar(Sql sql);
    public sealed virtual T ExecuteScalar(string sql, CommandType commandType, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Umbraco.Cms.Infrastructure.Persistence.UmbracoDatabaseExtensions : object {
    [ExtensionAttribute]
public static UmbracoDatabase AsUmbracoDatabase(IUmbracoDatabase database);
    [ExtensionAttribute]
public static IReadOnlyDictionary`2<string, string> GetFromKeyValueTable(IUmbracoDatabase database, string keyPrefix);
    [ExtensionAttribute]
public static bool HasTable(IUmbracoDatabase database, string tableName);
    [ExtensionAttribute]
public static bool IsDatabaseEmpty(IUmbracoDatabase database);
    [ExtensionAttribute]
public static long Count(IUmbracoDatabase database, Sql sql);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Persistence.UmbracoDatabaseFactory : DisposableObjectSlim {
    [NullableAttribute("1")]
private DatabaseSchemaCreatorFactory _databaseSchemaCreatorFactory;
    [NullableAttribute("1")]
private IDbProviderFactoryCreator _dbProviderFactoryCreator;
    [NullableAttribute("1")]
private IOptions`1<GlobalSettings> _globalSettings;
    [NullableAttribute("1")]
private ILogger`1<UmbracoDatabaseFactory> _logger;
    [NullableAttribute("1")]
private ILoggerFactory _loggerFactory;
    [NullableAttribute("1")]
private IMapperCollection _mappers;
    [NullableAttribute("1")]
private NPocoMapperCollection _npocoMappers;
    private IBulkSqlInsertProvider _bulkSqlInsertProvider;
    private DatabaseType _databaseType;
    private DbProviderFactory _dbProviderFactory;
    private bool _initialized;
    [NullableAttribute("1")]
private object _lock;
    private DatabaseFactory _npocoDatabaseFactory;
    private IPocoDataFactory _pocoDataFactory;
    private MapperCollection _pocoMappers;
    [NullableAttribute("1")]
private SqlContext _sqlContext;
    private ISqlSyntaxProvider _sqlSyntax;
    private ConnectionStrings _umbracoConnectionString;
    private bool _upgrading;
    private DbProviderFactory DbProviderFactory { get; }
    public bool Configured { get; }
    public bool Initialized { get; }
    public string ConnectionString { get; }
    public string ProviderName { get; }
    public bool CanConnect { get; }
    [NullableAttribute("1")]
public ISqlContext SqlContext { get; }
    public IBulkSqlInsertProvider BulkSqlInsertProvider { get; }
    [NullableContextAttribute("1")]
public UmbracoDatabaseFactory(ILogger`1<UmbracoDatabaseFactory> logger, ILoggerFactory loggerFactory, IOptions`1<GlobalSettings> globalSettings, IOptionsMonitor`1<ConnectionStrings> connectionStrings, IMapperCollection mappers, IDbProviderFactoryCreator dbProviderFactoryCreator, DatabaseSchemaCreatorFactory databaseSchemaCreatorFactory, NPocoMapperCollection npocoMappers);
    private DbProviderFactory get_DbProviderFactory();
    public sealed virtual bool get_Configured();
    public sealed virtual bool get_Initialized();
    public sealed virtual string get_ConnectionString();
    public sealed virtual string get_ProviderName();
    public sealed virtual bool get_CanConnect();
    [NullableContextAttribute("1")]
public sealed virtual ISqlContext get_SqlContext();
    public sealed virtual IBulkSqlInsertProvider get_BulkSqlInsertProvider();
    public sealed virtual void ConfigureForUpgrade();
    [NullableContextAttribute("1")]
public sealed virtual void Configure(ConnectionStrings umbracoConnectionString);
    [NullableContextAttribute("1")]
public sealed virtual IUmbracoDatabase CreateDatabase();
    private void EnsureInitialized();
    [NullableContextAttribute("1")]
private SqlContext Initialize();
    [NullableContextAttribute("1")]
private InitializedPocoDataBuilder GetPocoDataFactoryResolver(Type type, IPocoDataFactory factory);
    private UmbracoDatabase CreateDatabaseInstance();
    protected virtual void DisposeResources();
}
internal class Umbraco.Cms.Infrastructure.Persistence.UmbracoPocoDataBuilder : PocoDataBuilder {
    private bool _upgrading;
    [NullableContextAttribute("1")]
public UmbracoPocoDataBuilder(Type type, MapperCollection mapper, bool upgrading);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedContentQuery : object {
    private IExamineManager _examineManager;
    private IPublishedSnapshot _publishedSnapshot;
    private IVariationContextAccessor _variationContextAccessor;
    private static HashSet`1<string> _returnedQueryFields;
    public PublishedContentQuery(IPublishedSnapshot publishedSnapshot, IVariationContextAccessor variationContextAccessor, IExamineManager examineManager);
    private static PublishedContentQuery();
    private static bool ConvertIdObjectToInt(object id, Int32& intId);
    private static bool ConvertIdObjectToGuid(object id, Guid& guidId);
    private static bool ConvertIdObjectToUdi(object id, Udi& guidId);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Content(int id);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Content(Guid id);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Content(Udi id);
    public sealed virtual IPublishedContent Content(object id);
    public sealed virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<int> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<Guid> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> Content(IEnumerable`1<object> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> ContentAtRoot();
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Media(int id);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Media(Guid id);
    [NullableContextAttribute("2")]
public sealed virtual IPublishedContent Media(Udi id);
    public sealed virtual IPublishedContent Media(object id);
    public sealed virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<int> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<object> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> Media(IEnumerable`1<Guid> ids);
    public sealed virtual IEnumerable`1<IPublishedContent> MediaAtRoot();
    [NullableContextAttribute("2")]
private static IPublishedContent ItemById(int id, IPublishedCache cache);
    [NullableContextAttribute("2")]
private static IPublishedContent ItemById(Guid id, IPublishedCache cache);
    private static IEnumerable`1<IPublishedContent> ItemsByIds(IPublishedCache cache, IEnumerable`1<int> ids);
    private IEnumerable`1<IPublishedContent> ItemsByIds(IPublishedCache cache, IEnumerable`1<Guid> ids);
    private static IEnumerable`1<IPublishedContent> ItemsAtRoot(IPublishedCache cache);
    public sealed virtual IEnumerable`1<PublishedSearchResult> Search(string term, string culture, string indexName);
    public sealed virtual IEnumerable`1<PublishedSearchResult> Search(string term, int skip, int take, Int64& totalRecords, string culture, string indexName, ISet`1<string> loadedFields);
    public sealed virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query);
    public sealed virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query, int skip, int take, Int64& totalRecords);
    public sealed virtual IEnumerable`1<PublishedSearchResult> Search(IQueryExecutor query, int skip, int take, Int64& totalRecords, string culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Routing.RedirectTracker : object {
    private IUmbracoContextFactory _umbracoContextFactory;
    private IVariationContextAccessor _variationContextAccessor;
    private ILocalizationService _localizationService;
    private IRedirectUrlService _redirectUrlService;
    private ILogger`1<RedirectTracker> _logger;
    public RedirectTracker(IUmbracoContextFactory umbracoContextFactory, IVariationContextAccessor variationContextAccessor, ILocalizationService localizationService, IRedirectUrlService redirectUrlService, ILogger`1<RedirectTracker> logger);
    public sealed virtual void StoreOldRoute(IContent entity, Dictionary`2<ValueTuple`2<int, string>, ValueTuple`2<Guid, string>> oldRoutes);
    public sealed virtual void CreateRedirects(IDictionary`2<ValueTuple`2<int, string>, ValueTuple`2<Guid, string>> oldRoutes);
    [NullableContextAttribute("2")]
private static bool IsValidRoute(string route);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Runtime.CoreRuntime : object {
    private IApplicationShutdownRegistry _applicationShutdownRegistry;
    private ComponentCollection _components;
    private IUmbracoDatabaseFactory _databaseFactory;
    private IEventAggregator _eventAggregator;
    [NullableAttribute("2")]
private IHostApplicationLifetime _hostApplicationLifetime;
    private IHostingEnvironment _hostingEnvironment;
    private ILogger`1<CoreRuntime> _logger;
    private ILoggerFactory _loggerFactory;
    private IMainDom _mainDom;
    private IProfilingLogger _profilingLogger;
    [NullableAttribute("2")]
private IServiceProvider _serviceProvider;
    private IUmbracoVersion _umbracoVersion;
    private CancellationToken _cancellationToken;
    [CompilerGeneratedAttribute]
private IRuntimeState <State>k__BackingField;
    public IRuntimeState State { get; }
    public CoreRuntime(IRuntimeState state, ILoggerFactory loggerFactory, ComponentCollection components, IApplicationShutdownRegistry applicationShutdownRegistry, IProfilingLogger profilingLogger, IMainDom mainDom, IUmbracoDatabaseFactory databaseFactory, IEventAggregator eventAggregator, IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion, IServiceProvider serviceProvider, IHostApplicationLifetime hostApplicationLifetime);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public CoreRuntime(ILoggerFactory loggerFactory, IRuntimeState state, ComponentCollection components, IApplicationShutdownRegistry applicationShutdownRegistry, IProfilingLogger profilingLogger, IMainDom mainDom, IUmbracoDatabaseFactory databaseFactory, IEventAggregator eventAggregator, IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion, IServiceProvider serviceProvider);
    [EditorBrowsableAttribute("1")]
[ObsoleteAttribute]
public CoreRuntime(ILoggerFactory loggerFactory, IRuntimeState state, ComponentCollection components, IApplicationShutdownRegistry applicationShutdownRegistry, IProfilingLogger profilingLogger, IMainDom mainDom, IUmbracoDatabaseFactory databaseFactory, IEventAggregator eventAggregator, IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion);
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeState get_State();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.CoreRuntime/<StartAsync>d__19")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.CoreRuntime/<StopAsync>d__20")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.CoreRuntime/<RestartAsync>d__21")]
public sealed virtual Task RestartAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.CoreRuntime/<StartAsync>d__22")]
private Task StartAsync(CancellationToken cancellationToken, bool isRestarting);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.CoreRuntime/<StopAsync>d__23")]
private Task StopAsync(CancellationToken cancellationToken, bool isRestarting);
    private void AcquireMainDom();
    private void DetermineRuntimeLevel();
    [CompilerGeneratedAttribute]
private void <StartAsync>b__22_0(object _, UnhandledExceptionEventArgs args);
    [CompilerGeneratedAttribute]
private void <StartAsync>b__22_1();
    [CompilerGeneratedAttribute]
private void <StartAsync>b__22_2();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Runtime.DefaultMainDomKeyGenerator : object {
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    private IHostingEnvironment _hostingEnvironment;
    public DefaultMainDomKeyGenerator(IHostingEnvironment hostingEnvironment, IOptionsMonitor`1<GlobalSettings> globalSettings);
    public sealed virtual string GenerateKey();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Runtime.FileSystemMainDomLock : object {
    private CancellationTokenSource _cancellationTokenSource;
    private IHostingEnvironment _hostingEnvironment;
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    private string _lockFilePath;
    private ILogger`1<FileSystemMainDomLock> _logger;
    private string _releaseSignalFilePath;
    [NullableAttribute("2")]
private Task _listenForReleaseSignalFileTask;
    [NullableAttribute("2")]
private FileStream _lockFileStream;
    public FileSystemMainDomLock(ILogger`1<FileSystemMainDomLock> logger, IMainDomKeyGenerator mainDomKeyGenerator, IHostingEnvironment hostingEnvironment, IOptionsMonitor`1<GlobalSettings> globalSettings);
    public sealed virtual Task`1<bool> AcquireLockAsync(int millisecondsTimeout);
    public sealed virtual Task ListenAsync();
    public sealed virtual void Dispose();
    public void CreateLockReleaseSignalFile();
    public void DeleteLockReleaseSignalFile();
    private void ListeningLoop();
}
[NullableContextAttribute("2")]
public interface Umbraco.Cms.Infrastructure.Runtime.IRuntimeModeValidationService {
    public abstract virtual bool Validate(String& validationErrorMessage);
}
[NullableContextAttribute("2")]
public interface Umbraco.Cms.Infrastructure.Runtime.IRuntimeModeValidator {
    public abstract virtual bool Validate(RuntimeMode runtimeMode, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidationService : object {
    private IOptionsMonitor`1<RuntimeSettings> _runtimeSettings;
    private IServiceProvider _serviceProvider;
    public RuntimeModeValidationService(IOptionsMonitor`1<RuntimeSettings> runtimeSettings, IServiceProvider serviceProvider);
    [NullableContextAttribute("2")]
public sealed virtual bool Validate(String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidatorCollection : BuilderCollectionBase`1<IRuntimeModeValidator> {
    public RuntimeModeValidatorCollection(Func`1<IEnumerable`1<IRuntimeModeValidator>> items);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidatorCollectionBuilder : SetCollectionBuilderBase`3<RuntimeModeValidatorCollectionBuilder, RuntimeModeValidatorCollection, IRuntimeModeValidator> {
    protected ServiceLifetime CollectionLifetime { get; }
    protected RuntimeModeValidatorCollectionBuilder This { get; }
    protected virtual ServiceLifetime get_CollectionLifetime();
    protected virtual RuntimeModeValidatorCollectionBuilder get_This();
}
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.JITOptimizerValidator : RuntimeModeProductionValidatorBase {
    [NullableContextAttribute("2")]
protected virtual bool Validate(String& validationErrorMessage);
}
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.ModelsBuilderModeValidator : object {
    [NullableAttribute("1")]
private IOptionsMonitor`1<ModelsBuilderSettings> _modelsBuilderSettings;
    [NullableContextAttribute("1")]
public ModelsBuilderModeValidator(IOptionsMonitor`1<ModelsBuilderSettings> modelsBuilderSettings);
    [NullableContextAttribute("2")]
public sealed virtual bool Validate(RuntimeMode runtimeMode, String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Runtime minification is no longer supported, so this is no longer relevant. Will be removed entirely in V16.")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.RuntimeMinificationValidator : RuntimeModeProductionValidatorBase {
    private IOptionsMonitor`1<RuntimeMinificationSettings> _runtimeMinificationSettings;
    public RuntimeMinificationValidator(IOptionsMonitor`1<RuntimeMinificationSettings> runtimeMinificationSettings);
    [NullableContextAttribute("2")]
protected virtual bool Validate(String& validationErrorMessage);
}
public abstract class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.RuntimeModeProductionValidatorBase : object {
    [NullableContextAttribute("2")]
public sealed virtual bool Validate(RuntimeMode runtimeMode, String& validationErrorMessage);
    [NullableContextAttribute("2")]
protected abstract virtual bool Validate(String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.UmbracoApplicationUrlValidator : RuntimeModeProductionValidatorBase {
    private IOptionsMonitor`1<WebRoutingSettings> _webRoutingSettings;
    public UmbracoApplicationUrlValidator(IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings);
    [NullableContextAttribute("2")]
protected virtual bool Validate(String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeModeValidators.UseHttpsValidator : RuntimeModeProductionValidatorBase {
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    public UseHttpsValidator(IOptionsMonitor`1<GlobalSettings> globalSettings);
    [NullableContextAttribute("2")]
protected virtual bool Validate(String& validationErrorMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Runtime.RuntimeState : object {
    internal static string PendingPackageMigrationsStateKey;
    private IOptions`1<GlobalSettings> _globalSettings;
    private IOptions`1<UnattendedSettings> _unattendedSettings;
    private IUmbracoVersion _umbracoVersion;
    private IUmbracoDatabaseFactory _databaseFactory;
    private ILogger`1<RuntimeState> _logger;
    private PendingPackageMigrations _packageMigrationState;
    private Dictionary`2<string, object> _startupState;
    private IConflictingRouteService _conflictingRouteService;
    private IEnumerable`1<IDatabaseProviderMetadata> _databaseProviderMetadata;
    private IRuntimeModeValidationService _runtimeModeValidationService;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <CurrentMigrationState>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <FinalMigrationState>k__BackingField;
    [CompilerGeneratedAttribute]
private RuntimeLevel <Level>k__BackingField;
    [CompilerGeneratedAttribute]
private RuntimeLevelReason <Reason>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private BootFailedException <BootFailedException>k__BackingField;
    public Version Version { get; }
    public string VersionComment { get; }
    public SemVersion SemanticVersion { get; }
    [NullableAttribute("2")]
public string CurrentMigrationState { get; private set; }
    [NullableAttribute("2")]
public string FinalMigrationState { get; private set; }
    public RuntimeLevel Level { get; internal set; }
    public RuntimeLevelReason Reason { get; internal set; }
    [NullableAttribute("2")]
public BootFailedException BootFailedException { get; internal set; }
    public IReadOnlyDictionary`2<string, object> StartupState { get; }
    public RuntimeState(IOptions`1<GlobalSettings> globalSettings, IOptions`1<UnattendedSettings> unattendedSettings, IUmbracoVersion umbracoVersion, IUmbracoDatabaseFactory databaseFactory, ILogger`1<RuntimeState> logger, PendingPackageMigrations packageMigrationState, IConflictingRouteService conflictingRouteService, IEnumerable`1<IDatabaseProviderMetadata> databaseProviderMetadata, IRuntimeModeValidationService runtimeModeValidationService);
    public static RuntimeState Booting();
    public sealed virtual Version get_Version();
    public sealed virtual string get_VersionComment();
    public sealed virtual SemVersion get_SemanticVersion();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_CurrentMigrationState();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_CurrentMigrationState(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_FinalMigrationState();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_FinalMigrationState(string value);
    [CompilerGeneratedAttribute]
public sealed virtual RuntimeLevel get_Level();
    [CompilerGeneratedAttribute]
internal void set_Level(RuntimeLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual RuntimeLevelReason get_Reason();
    [CompilerGeneratedAttribute]
internal void set_Reason(RuntimeLevelReason value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual BootFailedException get_BootFailedException();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
internal void set_BootFailedException(BootFailedException value);
    public sealed virtual IReadOnlyDictionary`2<string, object> get_StartupState();
    public sealed virtual void DetermineRuntimeLevel();
    [NullableContextAttribute("2")]
public sealed virtual void Configure(RuntimeLevel level, RuntimeLevelReason reason, Exception bootFailedException);
    private UmbracoDatabaseState GetUmbracoDatabaseState(IUmbracoDatabaseFactory databaseFactory);
    private bool DoesUmbracoRequireUpgrade(IReadOnlyDictionary`2<string, string> keyValues);
    private bool TryDbConnect(IUmbracoDatabaseFactory databaseFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Runtime.SqlMainDomLock : object {
    private static string MainDomKeyPrefix;
    private static string UpdatedSuffix;
    private CancellationTokenSource _cancellationTokenSource;
    [NullableAttribute("2")]
private IUmbracoDatabase _db;
    private UmbracoDatabaseFactory _dbFactory;
    private IOptions`1<GlobalSettings> _globalSettings;
    private object _locker;
    private string _lockId;
    private ILogger`1<SqlMainDomLock> _logger;
    private bool _acquireWhenTablesNotAvailable;
    private bool _errorDuringAcquiring;
    private bool _hasTable;
    private bool _mainDomChanging;
    [CompilerGeneratedAttribute]
private string <MainDomKey>k__BackingField;
    private bool _disposedValue;
    private string MainDomKey { get; }
    public SqlMainDomLock(ILoggerFactory loggerFactory, IOptions`1<GlobalSettings> globalSettings, IOptionsMonitor`1<ConnectionStrings> connectionStrings, IDbProviderFactoryCreator dbProviderFactoryCreator, IMainDomKeyGenerator mainDomKeyGenerator, DatabaseSchemaCreatorFactory databaseSchemaCreatorFactory, NPocoMapperCollection npocoMappers);
    [CompilerGeneratedAttribute]
private string get_MainDomKey();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Runtime.SqlMainDomLock/<AcquireLockAsync>d__17")]
public sealed virtual Task`1<bool> AcquireLockAsync(int millisecondsTimeout);
    public sealed virtual Task ListenAsync();
    private void ListeningLoop();
    private Task`1<bool> WaitForExistingAsync(string tempId, int millisecondsTimeout);
    private Nullable`1<bool> TryAcquire(IUmbracoDatabase db, string tempId, string updatedTempId);
    private bool AcquireWhenMaxWaitTimeElapsed(IUmbracoDatabase db);
    private RecordPersistenceType InsertLockRecord(string id, IUmbracoDatabase db);
    private bool IsMainDomValue(string val, IUmbracoDatabase db);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Scoping.AmbientScopeContextStack : object {
    private static AsyncLocal`1<ConcurrentStack`1<IScopeContext>> _stack;
    [NullableAttribute("2")]
public IScopeContext AmbientContext { get; }
    private static AmbientScopeContextStack();
    [NullableContextAttribute("2")]
public sealed virtual IScopeContext get_AmbientContext();
    public sealed virtual IScopeContext Pop();
    public sealed virtual void Push(IScopeContext scope);
}
internal class Umbraco.Cms.Infrastructure.Scoping.AmbientScopeStack : object {
    [NullableAttribute("1")]
private static AsyncLocal`1<ConcurrentStack`1<IScope>> _stack;
    [NullableAttribute("2")]
public IScope AmbientScope { get; }
    private static AmbientScopeStack();
    [NullableContextAttribute("2")]
public sealed virtual IScope get_AmbientScope();
    [NullableContextAttribute("1")]
public sealed virtual IScope Pop();
    [NullableContextAttribute("1")]
public sealed virtual void Push(IScope scope);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Scoping.IAmbientScopeContextStack {
    [NullableAttribute("2")]
public IScopeContext AmbientContext { get; }
    [NullableContextAttribute("2")]
public abstract virtual IScopeContext get_AmbientContext();
    public abstract virtual IScopeContext Pop();
    public abstract virtual void Push(IScopeContext scope);
}
[NullableContextAttribute("1")]
internal interface Umbraco.Cms.Infrastructure.Scoping.IAmbientScopeStack {
    public abstract virtual IScope Pop();
    public abstract virtual void Push(IScope scope);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Scoping.IScope {
    public IUmbracoDatabase Database { get; }
    public ISqlContext SqlContext { get; }
    public abstract virtual IUmbracoDatabase get_Database();
    public abstract virtual ISqlContext get_SqlContext();
}
[NullableContextAttribute("2")]
public interface Umbraco.Cms.Infrastructure.Scoping.IScopeAccessor {
    public IScope AmbientScope { get; }
    public abstract virtual IScope get_AmbientScope();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Scoping.IScopeProvider {
    public ISqlContext SqlContext { get; }
    [NullableContextAttribute("2")]
private sealed virtual override ICoreScope Umbraco.Cms.Core.Scoping.ICoreScopeProvider.CreateCoreScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    private sealed virtual override IQuery`1<T> Umbraco.Cms.Core.Scoping.ICoreScopeProvider.CreateQuery();
    [NullableContextAttribute("2")]
public abstract virtual IScope CreateScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("2")]
public abstract virtual IScope CreateDetachedScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems);
    public abstract virtual void AttachScope(IScope scope, bool callContext);
    public abstract virtual IScope DetachScope();
    public abstract virtual ISqlContext get_SqlContext();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Scoping.Scope : CoreScope {
    private bool _autoComplete;
    [NullableAttribute("1")]
private CoreDebugSettings _coreDebugSettings;
    private IsolationLevel _isolationLevel;
    [NullableAttribute("1")]
private ILogger`1<Scope> _logger;
    [NullableAttribute("1")]
private MediaFileManager _mediaFileManager;
    [NullableAttribute("1")]
private ScopeProvider _scopeProvider;
    private IUmbracoDatabase _database;
    private bool _disposed;
    private IEventDispatcher _eventDispatcher;
    private EventMessages _messages;
    [CompilerGeneratedAttribute]
private bool <Detachable>k__BackingField;
    [CompilerGeneratedAttribute]
private Scope <ParentScope>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Attached>k__BackingField;
    [CompilerGeneratedAttribute]
private Scope <OrigScope>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopeContext <OrigContext>k__BackingField;
    [CompilerGeneratedAttribute]
private IScopeContext <Context>k__BackingField;
    [ObsoleteAttribute("Scopes are never stored on HttpContext.Items anymore, so CallContext is always true.")]
public bool CallContext { get; public set; }
    public bool Detachable { get; }
    public Scope ParentScope { get; public set; }
    public bool Attached { get; public set; }
    public Scope OrigScope { get; public set; }
    public IScopeContext OrigContext { get; public set; }
    public IScopeContext Context { get; }
    public IsolationLevel IsolationLevel { get; }
    private bool LogUncompletedScopes { get; }
    [NullableAttribute("1")]
public ISqlContext SqlContext { get; }
    [NullableAttribute("1")]
public IUmbracoDatabase Database { get; }
    [NullableAttribute("1")]
public EventMessages Messages { get; }
    [NullableAttribute("1")]
[ObsoleteAttribute("Will be removed in 14, please use notifications instead")]
public IEventDispatcher Events { get; }
    [NullableContextAttribute("1")]
private Scope(ScopeProvider scopeProvider, CoreDebugSettings coreDebugSettings, IDistributedLockingMechanismFactory distributedLockingMechanismFactory, ILoggerFactory loggerFactory, MediaFileManager mediaFileManager, IEventAggregator eventAggregator, ILogger`1<Scope> logger, FileSystems fileSystems, Scope parent, IScopeContext scopeContext, bool detachable, IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher notificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("1")]
public Scope(ScopeProvider scopeProvider, CoreDebugSettings coreDebugSettings, MediaFileManager mediaFileManager, IDistributedLockingMechanismFactory distributedLockingMechanismFactory, ILoggerFactory loggerFactory, IEventAggregator eventAggregator, ILogger`1<Scope> logger, FileSystems fileSystems, bool detachable, IScopeContext scopeContext, IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("1")]
public Scope(ScopeProvider scopeProvider, CoreDebugSettings coreDebugSettings, MediaFileManager mediaFileManager, IDistributedLockingMechanismFactory distributedLockingMechanismFactory, ILoggerFactory loggerFactory, IEventAggregator eventAggregator, ILogger`1<Scope> logger, FileSystems fileSystems, Scope parent, IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher notificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    public bool get_CallContext();
    public void set_CallContext(bool value);
    [CompilerGeneratedAttribute]
public bool get_Detachable();
    [CompilerGeneratedAttribute]
public Scope get_ParentScope();
    [CompilerGeneratedAttribute]
public void set_ParentScope(Scope value);
    [CompilerGeneratedAttribute]
public bool get_Attached();
    [CompilerGeneratedAttribute]
public void set_Attached(bool value);
    [CompilerGeneratedAttribute]
public Scope get_OrigScope();
    [CompilerGeneratedAttribute]
public void set_OrigScope(Scope value);
    [CompilerGeneratedAttribute]
public IScopeContext get_OrigContext();
    [CompilerGeneratedAttribute]
public void set_OrigContext(IScopeContext value);
    [CompilerGeneratedAttribute]
public IScopeContext get_Context();
    public IsolationLevel get_IsolationLevel();
    private bool get_LogUncompletedScopes();
    [NullableContextAttribute("1")]
public sealed virtual ISqlContext get_SqlContext();
    [NullableContextAttribute("1")]
public sealed virtual IUmbracoDatabase get_Database();
    [NullableContextAttribute("1")]
public sealed virtual EventMessages get_Messages();
    [NullableContextAttribute("1")]
public sealed virtual IEventDispatcher get_Events();
    public virtual void Dispose();
    internal Dictionary`2<Guid, Dictionary`2<int, int>> GetReadLocks();
    internal Dictionary`2<Guid, Dictionary`2<int, int>> GetWriteLocks();
    public void Reset();
    internal void EnsureNotDisposed();
    private void DisposeLastScope();
    private void RobustExit(bool completed, bool onException);
    [NullableContextAttribute("1")]
private static void TryFinally(Action[] actions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Scoping.ScopeProvider : object {
    private ILogger`1<ScopeProvider> _logger;
    private ILoggerFactory _loggerFactory;
    private IEventAggregator _eventAggregator;
    private IAmbientScopeStack _ambientScopeStack;
    private IAmbientScopeContextStack _ambientContextStack;
    private FileSystems _fileSystems;
    private CoreDebugSettings _coreDebugSettings;
    private MediaFileManager _mediaFileManager;
    [CompilerGeneratedAttribute]
private IDistributedLockingMechanismFactory <DistributedLockingMechanismFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private IUmbracoDatabaseFactory <DatabaseFactory>k__BackingField;
    public IDistributedLockingMechanismFactory DistributedLockingMechanismFactory { get; }
    public IUmbracoDatabaseFactory DatabaseFactory { get; }
    public ISqlContext SqlContext { get; }
    [NullableAttribute("2")]
public IScopeContext AmbientContext { get; }
    [NullableAttribute("2")]
public Scope AmbientScope { get; }
    [NullableAttribute("2")]
private IScope Umbraco.Cms.Infrastructure.Scoping.IScopeAccessor.AmbientScope { get; }
    [NullableAttribute("2")]
public IScopeContext Context { get; }
    public ScopeProvider(IAmbientScopeStack ambientScopeStack, IAmbientScopeContextStack ambientContextStack, IDistributedLockingMechanismFactory distributedLockingMechanismFactory, IUmbracoDatabaseFactory databaseFactory, FileSystems fileSystems, IOptionsMonitor`1<CoreDebugSettings> coreDebugSettings, MediaFileManager mediaFileManager, ILoggerFactory loggerFactory, IEventAggregator eventAggregator);
    [CompilerGeneratedAttribute]
public IDistributedLockingMechanismFactory get_DistributedLockingMechanismFactory();
    [CompilerGeneratedAttribute]
public IUmbracoDatabaseFactory get_DatabaseFactory();
    public sealed virtual ISqlContext get_SqlContext();
    [NullableContextAttribute("2")]
public IScopeContext get_AmbientContext();
    [NullableContextAttribute("2")]
public Scope get_AmbientScope();
    [NullableContextAttribute("2")]
private sealed virtual override IScope Umbraco.Cms.Infrastructure.Scoping.IScopeAccessor.get_AmbientScope();
    public void PopAmbientScope();
    public void PushAmbientScope(Scope scope);
    [NullableContextAttribute("2")]
public void PushAmbientScopeContext(IScopeContext scopeContext);
    public void PopAmbientScopeContext();
    [NullableContextAttribute("2")]
public sealed virtual IScope CreateDetachedScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems);
    public sealed virtual void AttachScope(IScope other, bool callContext);
    public sealed virtual IScope DetachScope();
    [NullableContextAttribute("2")]
public sealed virtual IScope CreateScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher notificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("2")]
public sealed virtual IScopeContext get_Context();
    [NullableContextAttribute("2")]
private sealed virtual override IScope Umbraco.Cms.Core.Scoping.IScopeProvider.CreateScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher notificationPublisher, Nullable`1<bool> scopeFileSystems, bool callContext, bool autoComplete);
    [NullableContextAttribute("2")]
private sealed virtual override IScope Umbraco.Cms.Core.Scoping.IScopeProvider.CreateDetachedScope(IsolationLevel isolationLevel, RepositoryCacheMode repositoryCacheMode, IEventDispatcher eventDispatcher, IScopedNotificationPublisher scopedNotificationPublisher, Nullable`1<bool> scopeFileSystems);
    private sealed virtual override void Umbraco.Cms.Core.Scoping.IScopeProvider.AttachScope(IScope scope, bool callContext);
    private sealed virtual override IScope Umbraco.Cms.Core.Scoping.IScopeProvider.DetachScope();
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <.ctor>b__8_0();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__8_1(CoreDebugSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.ContentIndexingNotificationHandler : object {
    private IContentService _contentService;
    private IUmbracoIndexingHandler _umbracoIndexingHandler;
    public ContentIndexingNotificationHandler(IUmbracoIndexingHandler umbracoIndexingHandler, IContentService contentService);
    public sealed virtual void Handle(ContentCacheRefresherNotification args);
    public sealed virtual void Handle(PublicAccessCacheRefresherNotification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.ContentTypeIndexingNotificationHandler : object {
    private IContentService _contentService;
    private IMediaService _mediaService;
    private IMemberService _memberService;
    private IMemberTypeService _memberTypeService;
    private IUmbracoIndexingHandler _umbracoIndexingHandler;
    public ContentTypeIndexingNotificationHandler(IUmbracoIndexingHandler umbracoIndexingHandler, IContentService contentService, IMemberService memberService, IMediaService mediaService, IMemberTypeService memberTypeService);
    public sealed virtual void Handle(ContentTypeCacheRefresherNotification args);
    private void RefreshMemberOfMemberTypes(Int32[] memberTypeIds);
    private void RefreshMediaOfMediaTypes(Int32[] mediaTypeIds);
    private void RefreshContentOfContentTypes(Int32[] contentTypeIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Search.DeliveryApiContentIndexingNotificationHandler : object {
    private IDeliveryApiIndexingHandler _deliveryApiIndexingHandler;
    private ILogger`1<DeliveryApiContentIndexingNotificationHandler> _logger;
    private DeliveryApiSettings _deliveryApiSettings;
    public DeliveryApiContentIndexingNotificationHandler(IDeliveryApiIndexingHandler deliveryApiIndexingHandler, ILogger`1<DeliveryApiContentIndexingNotificationHandler> logger, IOptionsMonitor`1<DeliveryApiSettings> deliveryApiSettings);
    public sealed virtual void Handle(ContentCacheRefresherNotification notification);
    public sealed virtual void Handle(ContentTypeCacheRefresherNotification notification);
    public sealed virtual void Handle(PublicAccessCacheRefresherNotification notification);
    private bool NotificationHandlingIsDisabled();
    private T[] GetNotificationPayloads(CacheRefresherNotification notification);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__3_0(DeliveryApiSettings settings);
}
internal interface Umbraco.Cms.Infrastructure.Search.IDeliveryApiIndexingHandler {
    public bool Enabled { get; }
    public abstract virtual bool get_Enabled();
    public abstract virtual void HandleContentChanges(IList`1<KeyValuePair`2<int, TreeChangeTypes>> changes);
    public abstract virtual void HandleContentTypeChanges(IList`1<KeyValuePair`2<int, ContentTypeChangeTypes>> changes);
    public abstract virtual void HandlePublicAccessChanges();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Search.IUmbracoIndexingHandler {
    public bool Enabled { get; }
    public abstract virtual bool get_Enabled();
    public abstract virtual void ReIndexForContent(IContent sender, bool isPublished);
    public abstract virtual void ReIndexForMember(IMember member);
    public abstract virtual void ReIndexForMedia(IMedia sender, bool isPublished);
    public abstract virtual void RemoveProtectedContent();
    public abstract virtual void DeleteDocumentsForContentTypes(IReadOnlyCollection`1<int> removedContentTypes);
    public abstract virtual void DeleteIndexForEntity(int entityId, bool keepIfUnpublished);
    public abstract virtual void DeleteIndexForEntities(IReadOnlyCollection`1<int> entityIds, bool keepIfUnpublished);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.LanguageIndexingNotificationHandler : object {
    private IIndexRebuilder _indexRebuilder;
    private IUmbracoIndexingHandler _umbracoIndexingHandler;
    public LanguageIndexingNotificationHandler(IUmbracoIndexingHandler umbracoIndexingHandler, IIndexRebuilder indexRebuilder);
    public sealed virtual void Handle(LanguageCacheRefresherNotification args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.MediaIndexingNotificationHandler : object {
    private IMediaService _mediaService;
    private IUmbracoIndexingHandler _umbracoIndexingHandler;
    public MediaIndexingNotificationHandler(IUmbracoIndexingHandler umbracoIndexingHandler, IMediaService mediaService);
    public sealed virtual void Handle(MediaCacheRefresherNotification args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.MemberIndexingNotificationHandler : object {
    private IMemberService _memberService;
    private IUmbracoIndexingHandler _umbracoIndexingHandler;
    public MemberIndexingNotificationHandler(IUmbracoIndexingHandler umbracoIndexingHandler, IMemberService memberService);
    public sealed virtual void Handle(MemberCacheRefresherNotification args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Search.UmbracoTreeSearcherFields : object {
    private ISet`1<string> _backOfficeDocumentFieldsToLoad;
    private ISet`1<string> _backOfficeFieldsToLoad;
    private ISet`1<string> _backOfficeMediaFieldsToLoad;
    private ISet`1<string> _backOfficeMembersFieldsToLoad;
    private ILocalizationService _localizationService;
    private IReadOnlyList`1<string> _backOfficeFields;
    private IReadOnlyList`1<string> _backOfficeMediaFields;
    private IReadOnlyList`1<string> _backOfficeMembersFields;
    public UmbracoTreeSearcherFields(ILocalizationService localizationService);
    public virtual IEnumerable`1<string> GetBackOfficeFields();
    public virtual IEnumerable`1<string> GetBackOfficeMembersFields();
    public virtual IEnumerable`1<string> GetBackOfficeMediaFields();
    public virtual IEnumerable`1<string> GetBackOfficeDocumentFields();
    public virtual ISet`1<string> GetBackOfficeFieldsToLoad();
    public virtual ISet`1<string> GetBackOfficeMembersFieldsToLoad();
    public virtual ISet`1<string> GetBackOfficeMediaFieldsToLoad();
    public virtual ISet`1<string> GetBackOfficeDocumentFieldsToLoad();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Security.DeleteExternalLoginsOnMemberDeletedHandler : object {
    private IExternalLoginWithKeyService _externalLoginWithKeyService;
    public DeleteExternalLoginsOnMemberDeletedHandler(IExternalLoginWithKeyService externalLoginWithKeyService);
    public sealed virtual void Handle(MemberDeletedNotification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Security.DeleteTwoFactorLoginsOnMemberDeletedHandler : object {
    private ITwoFactorLoginService _twoFactorLoginService;
    public DeleteTwoFactorLoginsOnMemberDeletedHandler(ITwoFactorLoginService twoFactorLoginService);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.DeleteTwoFactorLoginsOnMemberDeletedHandler/<HandleAsync>d__2")]
public sealed virtual Task HandleAsync(MemberDeletedNotification notification, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Security.EmailUserForgotPasswordSender : object {
    private IEmailSender _emailSender;
    private ILocalizedTextService _localizedTextService;
    private GlobalSettings _globalSettings;
    private SecuritySettings _securitySettings;
    public EmailUserForgotPasswordSender(IEmailSender emailSender, ILocalizedTextService localizedTextService, IOptionsMonitor`1<GlobalSettings> globalSettings, IOptionsMonitor`1<SecuritySettings> securitySettings);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.EmailUserForgotPasswordSender/<SendForgotPassword>d__5")]
public sealed virtual Task SendForgotPassword(UserForgotPasswordMessage messageModel);
    public sealed virtual bool CanSend();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__4_0(GlobalSettings settings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__4_1(SecuritySettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Security.EmailUserInviteSender : object {
    private IEmailSender _emailSender;
    private ILocalizedTextService _localizedTextService;
    private GlobalSettings _globalSettings;
    public EmailUserInviteSender(IEmailSender emailSender, ILocalizedTextService localizedTextService, IOptions`1<GlobalSettings> globalSettings);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.EmailUserInviteSender/<InviteUser>d__4")]
public sealed virtual Task InviteUser(UserInvitationMessage invite);
    public sealed virtual bool CanSendInvites();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Security.IBackOfficeApplicationManager {
    public abstract virtual Task EnsureBackOfficeApplicationAsync(Uri backOfficeUrl, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Security.IMemberApplicationManager {
    public abstract virtual Task EnsureMemberApplicationAsync(IEnumerable`1<Uri> loginRedirectUrls, IEnumerable`1<Uri> logoutRedirectUrls, CancellationToken cancellationToken);
    public abstract virtual Task DeleteMemberApplicationAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Security.OpenIdDictApplicationManagerBase : object {
    private IOpenIddictApplicationManager _applicationManager;
    protected OpenIdDictApplicationManagerBase(IOpenIddictApplicationManager applicationManager);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.OpenIdDictApplicationManagerBase/<CreateOrUpdate>d__2")]
protected Task CreateOrUpdate(OpenIddictApplicationDescriptor clientDescriptor, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.OpenIdDictApplicationManagerBase/<Delete>d__3")]
protected Task Delete(string identifier, CancellationToken cancellationToken);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Security.SignOutSuccessResult : object {
    [CompilerGeneratedAttribute]
private string <SignOutRedirectUrl>k__BackingField;
    public string SignOutRedirectUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SignOutRedirectUrl();
    [CompilerGeneratedAttribute]
public void set_SignOutRedirectUrl(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonBlockValueConverter : JsonConverter`1<BlockValue> {
    public virtual bool CanConvert(Type typeToConvert);
    public virtual BlockValue Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, BlockValue value, JsonSerializerOptions options);
    private static Type GetLayoutItemType(Type blockValueType);
    private List`1<BlockItemData> DeserializeBlockItemData(Utf8JsonReader& reader, JsonSerializerOptions options, Type typeToConvert, string propertyName);
    private void DeserializeAndSetLayout(Utf8JsonReader& reader, JsonSerializerOptions options, Type typeToConvert, BlockValue blockValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonBooleanConverter : JsonConverter`1<bool> {
    public virtual bool Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, bool value, JsonSerializerOptions options);
    private static bool ParseString(Utf8JsonReader& reader);
    private static bool ParseNumber(Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringIgnoreCaseConverter`1 : ReadOnlyJsonConverter`1<Dictionary`2<string, TValue>> {
    public virtual Dictionary`2<string, TValue> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringInternIgnoreCaseConverter`1 : ReadOnlyJsonConverter`1<Dictionary`2<string, TValue>> {
    public virtual Dictionary`2<string, TValue> Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonObjectConverter : JsonConverter`1<object> {
    public virtual object Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, object value, JsonSerializerOptions options);
    [NullableContextAttribute("2")]
private static object ParseObject(Utf8JsonReader& reader);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonStringInternConverter : ReadOnlyJsonConverter`1<string> {
    public virtual string Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonUdiConverter : JsonConverter`1<Udi> {
    public virtual bool CanConvert(Type typeToConvert);
    public virtual Udi Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, Udi value, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Serialization.JsonUdiRangeConverter : JsonConverter`1<UdiRange> {
    public virtual UdiRange Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
    public virtual void Write(Utf8JsonWriter writer, UdiRange value, JsonSerializerOptions options);
}
public class Umbraco.Cms.Infrastructure.Serialization.JsonUniversalDateTimeConverter : ReadOnlyJsonConverter`1<DateTime> {
    [NullableContextAttribute("1")]
public virtual DateTime Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Infrastructure.Serialization.ReadOnlyJsonConverter`1 : JsonConverter`1<T> {
    private JsonConverter`1<T> _fallbackConverter;
    public sealed virtual void Write(Utf8JsonWriter writer, T value, JsonSerializerOptions options);
}
public class Umbraco.Cms.Infrastructure.Serialization.SystemTextConfigurationEditorJsonSerializer : SystemTextJsonSerializerBase {
    [NullableAttribute("1")]
private JsonSerializerOptions _jsonSerializerOptions;
    [NullableAttribute("1")]
protected JsonSerializerOptions JsonSerializerOptions { get; }
    [NullableContextAttribute("1")]
protected virtual JsonSerializerOptions get_JsonSerializerOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Serialization.SystemTextJsonSerializer : SystemTextJsonSerializerBase {
    private JsonSerializerOptions _jsonSerializerOptions;
    protected JsonSerializerOptions JsonSerializerOptions { get; }
    protected virtual JsonSerializerOptions get_JsonSerializerOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Serialization.SystemTextJsonSerializerBase : object {
    protected JsonSerializerOptions JsonSerializerOptions { get; }
    protected abstract virtual JsonSerializerOptions get_JsonSerializerOptions();
    public sealed virtual string Serialize(object input);
    [NullableContextAttribute("2")]
public sealed virtual T Deserialize(string input);
    public sealed virtual bool TryDeserialize(object input, T& value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Infrastructure.Serialization.WriteOnlyJsonConverter`1 : JsonConverter`1<T> {
    private JsonConverter`1<T> _fallbackConverter;
    public sealed virtual T Read(Utf8JsonReader& reader, Type typeToConvert, JsonSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Services.CacheInstructionService : RepositoryService {
    private ICacheInstructionRepository _cacheInstructionRepository;
    private GlobalSettings _globalSettings;
    private ILogger`1<CacheInstructionService> _logger;
    private IProfilingLogger _profilingLogger;
    public CacheInstructionService(ICoreScopeProvider provider, ILoggerFactory loggerFactory, IEventMessagesFactory eventMessagesFactory, ICacheInstructionRepository cacheInstructionRepository, IProfilingLogger profilingLogger, ILogger`1<CacheInstructionService> logger, IOptions`1<GlobalSettings> globalSettings);
    public sealed virtual bool IsColdBootRequired(int lastId);
    public sealed virtual bool IsInstructionCountOverLimit(int lastId, int limit, Int32& count);
    public sealed virtual int GetMaxInstructionId();
    public sealed virtual void DeliverInstructions(IEnumerable`1<RefreshInstruction> instructions, string localIdentity);
    public sealed virtual void DeliverInstructionsInBatches(IEnumerable`1<RefreshInstruction> instructions, string localIdentity);
    public sealed virtual ProcessInstructionsResult ProcessInstructions(CacheRefresherCollection cacheRefreshers, ServerRole serverRole, CancellationToken cancellationToken, string localIdentity, DateTime lastPruned, int lastId);
    private CacheInstruction CreateCacheInstruction(IEnumerable`1<RefreshInstruction> instructions, string localIdentity);
    private int ProcessDatabaseInstructions(CacheRefresherCollection cacheRefreshers, CancellationToken cancellationToken, string localIdentity, Int32& lastId);
    private bool TryDeserializeInstructions(CacheInstruction instruction, JsonDocument& jsonInstructions);
    private static List`1<RefreshInstruction> GetAllInstructions(Nullable`1<JsonElement> jsonInstructions);
    private bool ProcessDatabaseInstructions(CacheRefresherCollection cacheRefreshers, IReadOnlyCollection`1<RefreshInstruction> instructionBatch, CacheInstruction instruction, HashSet`1<RefreshInstruction> processed, CancellationToken cancellationToken, Int32& lastId);
    private bool NotifyRefreshers(CacheRefresherCollection cacheRefreshers, IEnumerable`1<RefreshInstruction> instructions, HashSet`1<RefreshInstruction> processed, CancellationToken cancellationToken);
    private void RefreshAll(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier);
    private void RefreshByGuid(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier, Guid id);
    private void RefreshById(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier, int id);
    private void RefreshByIds(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier, string jsonIds);
    private void RefreshByJson(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier, string jsonPayload);
    private void RemoveById(CacheRefresherCollection cacheRefreshers, Guid uniqueIdentifier, int id);
    private ICacheRefresher GetRefresher(CacheRefresherCollection cacheRefreshers, Guid id);
    private IJsonCacheRefresher GetJsonRefresher(CacheRefresherCollection cacheRefreshers, Guid id);
    private static IJsonCacheRefresher GetJsonRefresher(ICacheRefresher refresher);
    private void PruneOldInstructions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3 : object {
    private TContentTypeService _contentTypeService;
    private IDataTypeService _dataTypeService;
    private ISqlContext _sqlContext;
    protected Guid DefaultListViewKey { get; }
    protected ContentListViewServiceBase`3(TContentTypeService contentTypeService, IDataTypeService dataTypeService, ISqlContext sqlContext);
    protected abstract virtual Guid get_DefaultListViewKey();
    protected abstract virtual Task`1<PagedModel`1<TContent>> GetPagedChildrenAsync(int id, IQuery`1<TContent> filter, Ordering ordering, int skip, int take);
    protected abstract virtual Task`1<bool> HasAccessToListViewItemAsync(IUser user, Guid key);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetListViewResultAsync>d__8")]
protected Task`1<Attempt`2<ListViewPagedModel`1<TContent>, ContentCollectionOperationStatus>> GetListViewResultAsync(IUser user, TContent content, Nullable`1<Guid> dataTypeKey, string orderBy, string orderCulture, Direction orderDirection, string filter, int skip, int take);
    [NullableContextAttribute("2")]
private Attempt`2<Ordering, ContentCollectionOperationStatus> HandleListViewOrdering(ListViewConfiguration listViewConfiguration, string orderBy, string orderCulture, Direction orderDirection);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetListViewConfigurationAsync>d__10")]
private Task`1<Attempt`2<ListViewConfiguration, ContentCollectionOperationStatus>> GetListViewConfigurationAsync(Nullable`1<Guid> contentTypeKey, Nullable`1<Guid> dataTypeKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetContentTypeForListViewConfigurationAsync>d__11")]
private Task`1<Attempt`2<TContentType, ContentCollectionOperationStatus>> GetContentTypeForListViewConfigurationAsync(Nullable`1<Guid> contentTypeKey, Nullable`1<Guid> dataTypeKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetListViewConfigurationFromDataTypeAsync>d__12")]
private Task`1<Attempt`2<ListViewConfiguration, ContentCollectionOperationStatus>> GetListViewConfigurationFromDataTypeAsync(Guid dataTypeKey, TContentType contentType);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetListViewConfigurationFromContentTypeAsync>d__13")]
private Task`1<Attempt`2<ListViewConfiguration, ContentCollectionOperationStatus>> GetListViewConfigurationFromContentTypeAsync(TContentType contentType);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetConfiguredListViewDataTypeAsync>d__14")]
private Task`1<IDataType> GetConfiguredListViewDataTypeAsync(TContentType contentType);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<GetAllowedListViewItemsAsync>d__15")]
private Task`1<PagedModel`1<TContent>> GetAllowedListViewItemsAsync(IUser user, int contentId, string filter, Ordering ordering, int skip, int take);
    [NullableContextAttribute("2")]
private IQuery`1<TContent> ParseQueryFilter(string filter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.ContentListViewServiceBase`3/<FilterItemsBasedOnAccessAsync>d__17")]
private Task`1<IEnumerable`1<TContent>> FilterItemsBasedOnAccessAsync(IUser user, IEnumerable`1<TContent> items);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Services.IIndexingRebuilderService {
    public abstract virtual bool CanRebuild(string indexName);
    public abstract virtual bool TryRebuild(IIndex index, string indexName);
    public abstract virtual bool IsRebuilding(string indexName);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Services.Implement.ContentListViewService : ContentListViewServiceBase`3<IContent, IContentType, IContentTypeService> {
    private IContentService _contentService;
    private IContentPermissionAuthorizer _contentPermissionAuthorizer;
    protected Guid DefaultListViewKey { get; }
    public ContentListViewService(IContentService contentService, IContentTypeService contentTypeService, IDataTypeService dataTypeService, ISqlContext sqlContext, IContentPermissionAuthorizer contentPermissionAuthorizer);
    protected virtual Guid get_DefaultListViewKey();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.ContentListViewService/<GetListViewItemsByKeyAsync>d__5")]
public sealed virtual Task`1<Attempt`2<ListViewPagedModel`1<IContent>, ContentCollectionOperationStatus>> GetListViewItemsByKeyAsync(IUser user, Guid key, Nullable`1<Guid> dataTypeKey, string orderBy, string orderCulture, Direction orderDirection, string filter, int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.ContentListViewService/<GetPagedChildrenAsync>d__6")]
protected virtual Task`1<PagedModel`1<IContent>> GetPagedChildrenAsync(int id, IQuery`1<IContent> filter, Ordering ordering, int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.ContentListViewService/<HasAccessToListViewItemAsync>d__7")]
protected virtual Task`1<bool> HasAccessToListViewItemAsync(IUser user, Guid key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Services.Implement.EntitySearchService : object {
    private IEntityService _entityService;
    private ISqlContext _sqlContext;
    public EntitySearchService(IEntityService entityService, ISqlContext sqlContext);
    public sealed virtual PagedModel`1<IEntitySlim> Search(UmbracoObjectTypes objectType, string query, int skip, int take);
}
public class Umbraco.Cms.Infrastructure.Services.Implement.ExamineIndexCountService : object {
    [NullableAttribute("1")]
private IExamineManager _examineManager;
    [NullableContextAttribute("1")]
public ExamineIndexCountService(IExamineManager examineManager);
    public sealed virtual int GetCount();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Services.Implement.IndexedEntitySearchService : object {
    private IBackOfficeExamineSearcher _backOfficeExamineSearcher;
    private IEntityService _entityService;
    public IndexedEntitySearchService(IBackOfficeExamineSearcher backOfficeExamineSearcher, IEntityService entityService);
    public sealed virtual PagedModel`1<IEntitySlim> Search(UmbracoObjectTypes objectType, string query, int skip, int take, bool ignoreUserStartNodes);
    public sealed virtual PagedModel`1<IEntitySlim> Search(UmbracoObjectTypes objectType, string query, Nullable`1<Guid> parentId, int skip, int take, bool ignoreUserStartNodes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Services.Implement.LogViewerRepository : object {
    private ILoggingConfiguration _loggingConfiguration;
    private ILogger`1<LogViewerRepository> _logger;
    private IJsonSerializer _jsonSerializer;
    private UmbracoFileConfiguration _umbracoFileConfig;
    public LogViewerRepository(ILoggingConfiguration loggingConfiguration, ILogger`1<LogViewerRepository> logger, IJsonSerializer jsonSerializer, UmbracoFileConfiguration umbracoFileConfig);
    public sealed virtual IEnumerable`1<ILogEntry> GetLogs(LogTimePeriod logTimePeriod, string filterExpression);
    public sealed virtual LogLevelCounts GetLogCount(LogTimePeriod logTimePeriod);
    public sealed virtual LogTemplate[] GetMessageTemplates(LogTimePeriod logTimePeriod);
    public sealed virtual LogLevel GetGlobalMinLogLevel();
    public sealed virtual LogLevel RestrictedToMinimumLevel();
    private LogEventLevel GetGlobalLogLevelEventMinLevel();
    private IEnumerable`1<ILogEntry> GetLogs(LogTimePeriod logTimePeriod, ILogFilter logFilter);
    private IReadOnlyDictionary`2<string, string> MapLogMessageProperties(IReadOnlyDictionary`2<string, LogEventPropertyValue> properties);
    private string GetSearchPattern(DateTime day);
    private bool TryRead(LogEventReader reader, LogEvent& evt);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private LogEntry <GetLogs>b__11_0(LogEvent x);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class Umbraco.Cms.Infrastructure.Services.Implement.MediaListViewService : ContentListViewServiceBase`3<IMedia, IMediaType, IMediaTypeService> {
    private IMediaService _mediaService;
    private IMediaPermissionAuthorizer _mediaPermissionAuthorizer;
    protected Guid DefaultListViewKey { get; }
    public MediaListViewService(IMediaService mediaService, IMediaTypeService mediaTypeService, IDataTypeService dataTypeService, ISqlContext sqlContext, IMediaPermissionAuthorizer mediaPermissionAuthorizer);
    protected virtual Guid get_DefaultListViewKey();
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.MediaListViewService/<GetListViewItemsByKeyAsync>d__5")]
public sealed virtual Task`1<Attempt`2<ListViewPagedModel`1<IMedia>, ContentCollectionOperationStatus>> GetListViewItemsByKeyAsync(IUser user, Nullable`1<Guid> key, Nullable`1<Guid> dataTypeKey, string orderBy, Direction orderDirection, string filter, int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.MediaListViewService/<GetPagedChildrenAsync>d__6")]
protected virtual Task`1<PagedModel`1<IMedia>> GetPagedChildrenAsync(int id, IQuery`1<IMedia> filter, Ordering ordering, int skip, int take);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.MediaListViewService/<HasAccessToListViewItemAsync>d__7")]
protected virtual Task`1<bool> HasAccessToListViewItemAsync(IUser user, Guid key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Services.Implement.UserIdKeyResolver : object {
    private IScopeProvider _scopeProvider;
    private ConcurrentDictionary`2<Guid, int> _keyToId;
    private ConcurrentDictionary`2<int, Guid> _idToKey;
    private SemaphoreSlim _keytToIdLock;
    private SemaphoreSlim _idToKeyLock;
    public UserIdKeyResolver(IScopeProvider scopeProvider);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.UserIdKeyResolver/<GetAsync>d__6")]
public sealed virtual Task`1<int> GetAsync(Guid key);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.UserIdKeyResolver/<GetAsync>d__7")]
public sealed virtual Task`1<Guid> GetAsync(int id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Services.Implement.WebhookFiringService : object {
    private IWebhookRequestService _webhookRequestService;
    public WebhookFiringService(IWebhookRequestService webhookRequestService);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Services.Implement.WebhookFiringService/<FireAsync>d__2")]
public sealed virtual Task FireAsync(IWebhook webhook, string eventAlias, object payload, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Services.IndexingRebuilderService : object {
    private static string TempKey;
    private IAppPolicyCache _runtimeCache;
    private IIndexRebuilder _indexRebuilder;
    private ILogger`1<IndexingRebuilderService> _logger;
    public IndexingRebuilderService(AppCaches runtimeCache, IIndexRebuilder indexRebuilder, ILogger`1<IndexingRebuilderService> logger);
    public sealed virtual bool CanRebuild(string indexName);
    public sealed virtual bool TryRebuild(IIndex index, string indexName);
    private void Set(string indexName);
    [NullableContextAttribute("2")]
private void Clear(string indexName);
    public sealed virtual bool IsRebuilding(string indexName);
    private void Indexer_IndexOperationComplete(object sender, EventArgs e);
}
public static class Umbraco.Cms.Infrastructure.Suspendable : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Sync.BatchedDatabaseServerMessenger : DatabaseServerMessenger {
    private IRequestAccessor _requestAccessor;
    private IRequestCache _requestCache;
    public BatchedDatabaseServerMessenger(IMainDom mainDom, CacheRefresherCollection cacheRefreshers, IServerRoleAccessor serverRoleAccessor, ILogger`1<BatchedDatabaseServerMessenger> logger, ISyncBootStateAccessor syncBootStateAccessor, IHostingEnvironment hostingEnvironment, ICacheInstructionService cacheInstructionService, IJsonSerializer jsonSerializer, IRequestCache requestCache, IRequestAccessor requestAccessor, LastSyncedFileManager lastSyncedFileManager, IOptionsMonitor`1<GlobalSettings> globalSettings);
    public virtual void SendMessages();
    protected virtual void DeliverRemote(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, string json);
    private ICollection`1<RefreshInstructionEnvelope> GetBatch(bool create);
    [NullableContextAttribute("2")]
private void BatchMessage(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, Type idType, string json);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Sync.DatabaseServerMessenger : ServerMessengerBase {
    private CacheRefresherCollection _cacheRefreshers;
    private CancellationToken _cancellationToken;
    private CancellationTokenSource _cancellationTokenSource;
    private IHostingEnvironment _hostingEnvironment;
    private Lazy`1<Nullable`1<SyncBootState>> _initialized;
    private LastSyncedFileManager _lastSyncedFileManager;
    private object _locko;
    private IMainDom _mainDom;
    private IServerRoleAccessor _serverRoleAccessor;
    private ISyncBootStateAccessor _syncBootStateAccessor;
    private ManualResetEvent _syncIdle;
    private bool _disposedValue;
    private DateTime _lastPruned;
    private DateTime _lastSync;
    private bool _syncing;
    [CompilerGeneratedAttribute]
private GlobalSettings <GlobalSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<DatabaseServerMessenger> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ICacheInstructionService <CacheInstructionService>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsonSerializer <JsonSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LocalIdentity>k__BackingField;
    public GlobalSettings GlobalSettings { get; private set; }
    protected ILogger`1<DatabaseServerMessenger> Logger { get; }
    protected ICacheInstructionService CacheInstructionService { get; }
    protected IJsonSerializer JsonSerializer { get; }
    protected string LocalIdentity { get; }
    protected DatabaseServerMessenger(IMainDom mainDom, CacheRefresherCollection cacheRefreshers, IServerRoleAccessor serverRoleAccessor, ILogger`1<DatabaseServerMessenger> logger, bool distributedEnabled, ISyncBootStateAccessor syncBootStateAccessor, IHostingEnvironment hostingEnvironment, ICacheInstructionService cacheInstructionService, IJsonSerializer jsonSerializer, LastSyncedFileManager lastSyncedFileManager, IOptionsMonitor`1<GlobalSettings> globalSettings);
    [CompilerGeneratedAttribute]
public GlobalSettings get_GlobalSettings();
    [CompilerGeneratedAttribute]
private void set_GlobalSettings(GlobalSettings value);
    [CompilerGeneratedAttribute]
protected ILogger`1<DatabaseServerMessenger> get_Logger();
    [CompilerGeneratedAttribute]
protected ICacheInstructionService get_CacheInstructionService();
    [CompilerGeneratedAttribute]
protected IJsonSerializer get_JsonSerializer();
    [CompilerGeneratedAttribute]
protected string get_LocalIdentity();
    public virtual void Sync();
    public sealed virtual void Dispose();
    protected bool EnsureInitialized();
    protected virtual bool RequiresDistributed(ICacheRefresher refresher, MessageType dispatchType);
    protected virtual void DeliverRemote(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, string json);
    private Nullable`1<SyncBootState> InitializeWithMainDom();
    private SyncBootState InitializeColdBootState();
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__15_0(GlobalSettings x);
    [CompilerGeneratedAttribute]
private void <InitializeWithMainDom>b__37_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Sync.LastSyncedFileManager : object {
    private IHostingEnvironment _hostingEnvironment;
    [NullableAttribute("2")]
private string _distCacheFile;
    private int _lastId;
    [NullableAttribute("2")]
private object _lastIdLock;
    private bool _lastIdReady;
    public int LastSyncedId { get; }
    public string DistCacheFilePath { get; }
    public LastSyncedFileManager(IHostingEnvironment hostingEnvironment);
    public int get_LastSyncedId();
    public string get_DistCacheFilePath();
    public void SaveLastSyncedId(int id);
    [CompilerGeneratedAttribute]
private int <get_LastSyncedId>b__7_0();
    [CompilerGeneratedAttribute]
private string <get_DistCacheFilePath>b__9_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Sync.RefreshInstructionEnvelope : object {
    [CompilerGeneratedAttribute]
private ICacheRefresher <Refresher>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<RefreshInstruction> <Instructions>k__BackingField;
    public ICacheRefresher Refresher { get; public set; }
    public IEnumerable`1<RefreshInstruction> Instructions { get; public set; }
    public RefreshInstructionEnvelope(ICacheRefresher refresher, IEnumerable`1<RefreshInstruction> instructions);
    [CompilerGeneratedAttribute]
public ICacheRefresher get_Refresher();
    [CompilerGeneratedAttribute]
public void set_Refresher(ICacheRefresher value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<RefreshInstruction> get_Instructions();
    [CompilerGeneratedAttribute]
public void set_Instructions(IEnumerable`1<RefreshInstruction> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Infrastructure.Sync.ServerMessengerBase : object {
    private IJsonSerializer _jsonSerializer;
    [CompilerGeneratedAttribute]
private bool <DistributedEnabled>k__BackingField;
    protected bool DistributedEnabled { get; protected set; }
    public ServerMessengerBase(bool distributedEnabled, IJsonSerializer jsonSerializer);
    [ObsoleteAttribute("Use constructor that takes IJsonSerializer, scheduled for removal in V16")]
protected ServerMessengerBase(bool distributedEnabled);
    [CompilerGeneratedAttribute]
protected bool get_DistributedEnabled();
    [CompilerGeneratedAttribute]
protected void set_DistributedEnabled(bool value);
    public abstract virtual void Sync();
    public abstract virtual void SendMessages();
    protected virtual bool RequiresDistributed(ICacheRefresher refresher, MessageType messageType);
    [NullableContextAttribute("2")]
protected static bool GetArrayType(IEnumerable`1<object> ids, Type& arrayType);
    public sealed virtual void QueueRefresh(ICacheRefresher refresher, TPayload[] payload);
    public sealed virtual void QueueRefresh(ICacheRefresher refresher, Func`2<T, int> getNumericId, T[] instances);
    public sealed virtual void QueueRefresh(ICacheRefresher refresher, Func`2<T, Guid> getGuidId, T[] instances);
    public sealed virtual void QueueRemove(ICacheRefresher refresher, Func`2<T, int> getNumericId, T[] instances);
    public sealed virtual void QueueRemove(ICacheRefresher refresher, Int32[] numericIds);
    public sealed virtual void QueueRefresh(ICacheRefresher refresher, Int32[] numericIds);
    public sealed virtual void QueueRefresh(ICacheRefresher refresher, Guid[] guidIds);
    public sealed virtual void QueueRefreshAll(ICacheRefresher refresher);
    protected void DeliverLocal(ICacheRefresher refresher, TPayload[] payload);
    protected void DeliverLocal(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, string json);
    protected void DeliverLocal(ICacheRefresher refresher, MessageType messageType, Func`2<T, object> getId, IEnumerable`1<T> instances);
    protected abstract virtual void DeliverRemote(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, string json);
    protected virtual void Deliver(ICacheRefresher refresher, TPayload[] payload);
    protected virtual void Deliver(ICacheRefresher refresher, MessageType messageType, IEnumerable`1<object> ids, string json);
    protected virtual void Deliver(ICacheRefresher refresher, MessageType messageType, Func`2<T, object> getId, IEnumerable`1<T> instances);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Sync.SyncBootStateAccessor : object {
    private ICacheInstructionService _cacheInstructionService;
    private LastSyncedFileManager _lastSyncedFileManager;
    private ILogger`1<SyncBootStateAccessor> _logger;
    private GlobalSettings _globalSettings;
    private SyncBootState _syncBootState;
    [NullableAttribute("2")]
private object _syncBootStateLock;
    private bool _syncBootStateReady;
    public SyncBootStateAccessor(ILogger`1<SyncBootStateAccessor> logger, LastSyncedFileManager lastSyncedFileManager, IOptionsMonitor`1<GlobalSettings> globalSettings, ICacheInstructionService cacheInstructionService);
    public sealed virtual SyncBootState GetSyncBootState();
    private SyncBootState InitializeColdBootState(int lastId);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__7_0(GlobalSettings x);
    [CompilerGeneratedAttribute]
private SyncBootState <GetSyncBootState>b__8_0();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Telemetry.Interfaces.IDetailedTelemetryProvider {
    public abstract virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.BlocksInRichTextTelemetryProvider : object {
    private IDataTypeService _dataTypeService;
    public BlocksInRichTextTelemetryProvider(IDataTypeService dataTypeService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.BlocksInRichTextTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.ContentTelemetryProvider : object {
    private IContentService _contentService;
    public ContentTelemetryProvider(IContentService contentService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.ContentTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.DeliveryApiTelemetryProvider : object {
    private DeliveryApiSettings _deliveryApiSettings;
    public DeliveryApiTelemetryProvider(IOptions`1<DeliveryApiSettings> deliveryApiSettings);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.DeliveryApiTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.DomainTelemetryProvider : object {
    private IDomainService _domainService;
    public DomainTelemetryProvider(IDomainService domainService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.DomainTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.ExamineTelemetryProvider : object {
    private IExamineIndexCountService _examineIndexCountService;
    public ExamineTelemetryProvider(IExamineIndexCountService examineIndexCountService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.ExamineTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.LanguagesTelemetryProvider : object {
    private ILocalizationService _localizationService;
    public LanguagesTelemetryProvider(ILocalizationService localizationService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.LanguagesTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.MediaTelemetryProvider : object {
    private INodeCountService _nodeCountService;
    public MediaTelemetryProvider(INodeCountService nodeCountService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.MediaTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.NodeCountTelemetryProvider : object {
    private INodeCountService _nodeCountService;
    public NodeCountTelemetryProvider(INodeCountService nodeCountService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.NodeCountTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.PropertyEditorTelemetryProvider : object {
    private IContentTypeService _contentTypeService;
    public PropertyEditorTelemetryProvider(IContentTypeService contentTypeService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.PropertyEditorTelemetryProvider/<GetInformation>d__2")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Telemetry.Providers.SystemTroubleshootingInformationTelemetryProvider : object {
    private IHostEnvironment _hostEnvironment;
    private HostingSettings _hostingSettings;
    private ILocalizationService _localizationService;
    private ModelsBuilderSettings _modelsBuilderSettings;
    private IUmbracoDatabaseFactory _umbracoDatabaseFactory;
    private IUmbracoVersion _version;
    private IServerRoleAccessor _serverRoleAccessor;
    private RuntimeSettings _runtimeSettings;
    private string CurrentWebServer { get; }
    private string ServerFramework { get; }
    private string ModelsBuilderMode { get; }
    private string RuntimeMode { get; }
    private string CurrentCulture { get; }
    private bool IsDebug { get; }
    private string AspEnvironment { get; }
    private string ServerOs { get; }
    private string DatabaseProvider { get; }
    private string CurrentServerRole { get; }
    public SystemTroubleshootingInformationTelemetryProvider(IUmbracoVersion version, ILocalizationService localizationService, IOptionsMonitor`1<ModelsBuilderSettings> modelsBuilderSettings, IOptionsMonitor`1<HostingSettings> hostingSettings, IHostEnvironment hostEnvironment, IUmbracoDatabaseFactory umbracoDatabaseFactory, IServerRoleAccessor serverRoleAccessor, IOptionsMonitor`1<RuntimeSettings> runtimeSettings);
    private string get_CurrentWebServer();
    private string get_ServerFramework();
    private string get_ModelsBuilderMode();
    private string get_RuntimeMode();
    private string get_CurrentCulture();
    private bool get_IsDebug();
    private string get_AspEnvironment();
    private string get_ServerOs();
    private string get_DatabaseProvider();
    private string get_CurrentServerRole();
    public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
    public sealed virtual IDictionary`2<string, string> GetTroubleshootingInformation();
    private string GetWebServerName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.UserTelemetryProvider : object {
    private IUserGroupService _userGroupService;
    private IUserService _userService;
    [ObsoleteAttribute("Use constructor that takes IUserGroupService, scheduled for removal in V15")]
public UserTelemetryProvider(IUserService userService);
    [ObsoleteAttribute("Use constructor that only takes IUserGroupService, scheduled for removal in V15")]
public UserTelemetryProvider(IUserService userService, IUserGroupService userGroupService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.UserTelemetryProvider/<GetInformation>d__4")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.Telemetry.Providers.WebhookTelemetryProvider : object {
    private IWebhookService _webhookService;
    private String[] _defaultEventTypes;
    public WebhookTelemetryProvider(IWebhookService webhookService);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.Telemetry.Providers.WebhookTelemetryProvider/<GetInformation>d__3")]
public sealed virtual IEnumerable`1<UsageInformation> GetInformation();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <GetInformation>b__3_0(IWebhook x);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.Templates.PartialViews.IPartialViewPopulator {
    public string CoreEmbeddedPath { get; }
    public abstract virtual void CopyPartialViewIfNotExists(Assembly assembly, string embeddedPath, string fileSystemPath);
    public abstract virtual Assembly GetCoreAssembly();
    public abstract virtual string get_CoreEmbeddedPath();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.Templates.PartialViews.PartialViewPopulator : object {
    private IFileService _fileService;
    public string CoreEmbeddedPath { get; }
    public PartialViewPopulator(IFileService fileService);
    public sealed virtual Assembly GetCoreAssembly();
    public sealed virtual string get_CoreEmbeddedPath();
    public sealed virtual void CopyPartialViewIfNotExists(Assembly assembly, string embeddedPath, string fileSystemPath);
    private string GetTextFromStream(Stream stream);
}
public enum Umbraco.Cms.Persistence.EFCore.Migrations.EFCoreMigration : Enum {
    public int value__;
    public static EFCoreMigration InitialCreate;
    public static EFCoreMigration AddOpenIddict;
    public static EFCoreMigration UpdateOpenIddictToV5;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.DbConnectionExtensions : object {
    [NullableContextAttribute("2")]
public static bool IsConnectionAvailable(string connectionString, DbProviderFactory factory);
    [ExtensionAttribute]
public static bool IsAvailable(IDbConnection connection);
    [ExtensionAttribute]
internal static IDbConnection UnwrapUmbraco(IDbConnection connection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.DeliveryApiImageExtensions : object {
    [ExtensionAttribute]
public static ImageFocalPoint GetImageFocalPoint(ImageCropperValue imageCropperValue);
    [ExtensionAttribute]
public static IEnumerable`1<ImageCrop> GetImageCrops(ImageCropperValue imageCropperValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ExamineExtensions : object {
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> ToPublishedSearchResults(IEnumerable`1<ISearchResult> results, IPublishedCache cache);
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> ToPublishedSearchResults(IEnumerable`1<ISearchResult> results, IPublishedSnapshot snapshot);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.IdentityExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToErrorMessage(IEnumerable`1<IdentityError> errors);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.InfrastuctureTypeLoaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<Type> GetPackageMigrationPlans(TypeLoader mgr);
}
[ExtensionAttribute]
internal static class Umbraco.Extensions.InstanceIdentifiableExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetDebugInfo(IInstanceIdentifiable instance);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.LoggerConfigExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Please use an alternative method. This will be removed in Umbraco 13.")]
public static LoggerConfiguration MinimalConfiguration(LoggerConfiguration logConfig, IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, IConfiguration configuration);
    [ExtensionAttribute]
[ObsoleteAttribute("Please use an alternative method. This will be removed in Umbraco 13.")]
public static LoggerConfiguration MinimalConfiguration(LoggerConfiguration logConfig, IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, IConfiguration configuration, UmbracoFileConfiguration& umbFileConfiguration);
    [ExtensionAttribute]
public static LoggerConfiguration MinimalConfiguration(LoggerConfiguration logConfig, IHostEnvironment hostEnvironment, ILoggingConfiguration loggingConfiguration, UmbracoFileConfiguration umbracoFileConfiguration);
    [ExtensionAttribute]
[ObsoleteAttribute("Will be removed in Umbraco 13.")]
public static LoggerConfiguration OutputDefaultTextFile(LoggerConfiguration logConfig, IHostingEnvironment hostingEnvironment, LogEventLevel minimumLevel);
    [ExtensionAttribute]
public static LoggerConfiguration OutputDefaultTextFile(LoggerConfiguration logConfig, IHostEnvironment hostEnvironment, LoggingSettings loggingSettings, LogEventLevel minimumLevel);
    [ExtensionAttribute]
public static LoggerConfiguration UmbracoFile(LoggerSinkConfiguration configuration, string path, ITextFormatter formatter, LogEventLevel restrictedToMinimumLevel, LoggingLevelSwitch levelSwitch, Nullable`1<long> fileSizeLimitBytes, Nullable`1<TimeSpan> flushToDiskInterval, RollingInterval rollingInterval, bool rollOnFileSizeLimit, Nullable`1<int> retainedFileCountLimit, Encoding encoding);
    [ExtensionAttribute]
[ObsoleteAttribute("Will be removed in Umbraco 13.")]
public static LoggerConfiguration OutputDefaultJsonFile(LoggerConfiguration logConfig, IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, LogEventLevel minimumLevel, Nullable`1<int> retainedFileCount);
    [ExtensionAttribute]
public static LoggerConfiguration OutputDefaultJsonFile(LoggerConfiguration logConfig, IHostEnvironment hostEnvironment, LoggingSettings loggingSettings, LogEventLevel minimumLevel, Nullable`1<int> retainedFileCount);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.MediaPicker3ConfigurationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ApplyConfiguration(ImageCropperValue imageCropperValue, MediaPicker3Configuration configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.MergeClaimsIdentityExtensions : object {
    private static String[] _ignoredClaims;
    private static MergeClaimsIdentityExtensions();
    [ExtensionAttribute]
public static void MergeAllClaims(ClaimsIdentity destination, ClaimsIdentity source);
    [ExtensionAttribute]
public static void MergeClaimsFromCookieIdentity(ClaimsIdentity destination, ClaimsIdentity source);
    [ExtensionAttribute]
public static void MergeClaimsFromBackOfficeIdentity(ClaimsIdentity destination, BackOfficeIdentityUser source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.NPocoDatabaseExtensions : object {
    public static bool IncludeColumn(PocoData pocoData, KeyValuePair`2<string, PocoColumn> column);
    [ExtensionAttribute]
internal static IDbCommand[] GenerateBulkInsertCommands(IUmbracoDatabase database, T[] records);
    [IteratorStateMachineAttribute("Umbraco.Extensions.NPocoDatabaseExtensions/<QueryPaged>d__2`1")]
[ExtensionAttribute]
public static IEnumerable`1<T> QueryPaged(IDatabase database, long pageSize, Sql sql, Sql sqlCount);
    [ExtensionAttribute]
public static IEnumerable`1<T> QueryPaged(IDatabase database, long pageSize, Sql sql);
    [ExtensionAttribute]
public static RecordPersistenceType InsertOrUpdate(IUmbracoDatabase db, T poco);
    [ExtensionAttribute]
public static RecordPersistenceType InsertOrUpdate(IUmbracoDatabase db, T poco, string updateCommand, object updateArgs);
    public static string EscapeAtSymbols(string value);
    public static TConnection GetTypedConnection(IDbConnection connection);
    public static TTransaction GetTypedTransaction(IDbTransaction transaction);
    public static TCommand GetTypedCommand(IDbCommand command);
    [ExtensionAttribute]
public static void TruncateTable(IDatabase db, ISqlSyntaxProvider sqlSyntax, string tableName);
    [ExtensionAttribute]
public static IsolationLevel GetCurrentTransactionIsolationLevel(IDatabase database);
    [ExtensionAttribute]
public static IEnumerable`1<TResult> FetchByGroups(IDatabase db, IEnumerable`1<TSource> source, int groupSize, Func`2<IEnumerable`1<TSource>, Sql`1<ISqlContext>> sqlFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.NPocoSqlExtensions : object {
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Where(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, bool>> predicate, string alias);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Sql`1<ISqlContext> Where(Sql`1<ISqlContext> sql, Expression`1<Func`3<TDto1, TDto2, bool>> predicate, string alias1, string alias2);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, IEnumerable values);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, Sql`1<ISqlContext> values);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, Sql`1<ISqlContext> values, string tableAlias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereLike(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> fieldSelector, Sql`1<ISqlContext> valuesSql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Union(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> sql2);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> InnerJoinNested(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> nestedQuery, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereLike(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> fieldSelector, string likeValue);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereNotIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, IEnumerable values);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereNotIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, Sql`1<ISqlContext> values);
    [ExtensionAttribute]
public static Sql WhereAnyIn(Sql`1<ISqlContext> sql, Expression`1[] fields, IEnumerable values);
    [ExtensionAttribute]
private static Sql`1<ISqlContext> WhereIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<T, object>> fieldSelector, Sql valuesSql, bool not);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
private static Sql`1<ISqlContext> WhereIn(Sql`1<ISqlContext> sql, Expression`1<Func`2<T, object>> fieldSelector, Sql valuesSql, bool not, string tableAlias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereAny(Sql`1<ISqlContext> sql, Func`2[] predicates);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereNotNull(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, string tableAlias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> WhereNull(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, string tableAlias, bool not);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> From(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderBy(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderBy(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderBy(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderByDescending(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderByDescending(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> OrderByDescending(Sql`1<ISqlContext> sql, String[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> GroupBy(Sql`1<ISqlContext> sql, Expression`1<Func`2<TDto, object>> field);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> GroupBy(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndBy(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndBy(Sql`1<ISqlContext> sql, string tableAlias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndByDescending(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> CrossJoin(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> InnerJoin(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> InnerJoin(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> nestedSelect, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> LeftJoin(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> LeftJoin(Sql`1<ISqlContext> sql, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> nestedJoin, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> LeftJoin(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> nestedSelect, string alias);
    [ExtensionAttribute]
public static SqlJoinClause`1<ISqlContext, ISqlContext> RightJoin(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> On(SqlJoinClause`1<ISqlContext, ISqlContext> sqlJoin, Expression`1<Func`2<TLeft, object>> leftField, Expression`1<Func`2<TRight, object>> rightField);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> On(SqlJoinClause`1<ISqlContext, ISqlContext> sqlJoin, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> on);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Sql`1<ISqlContext> On(SqlJoinClause`1<ISqlContext, ISqlContext> sqlJoin, Expression`1<Func`3<TDto1, TDto2, bool>> predicate, string aliasLeft, string aliasRight);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static Sql`1<ISqlContext> On(SqlJoinClause`1<ISqlContext, ISqlContext> sqlJoin, Expression`1<Func`4<TDto1, TDto2, TDto3, bool>> predicate, string aliasLeft, string aliasRight, string aliasOther);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectTop(Sql`1<ISqlContext> sql, int count);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectCount(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectCount(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectCount(Sql`1<ISqlContext> sql, string alias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectAll(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Select(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectDistinct(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectDistinct(Sql`1<ISqlContext> sql, Object[] columns);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Select(Sql`1<ISqlContext> sql, string tableAlias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelect(Sql`1<ISqlContext> sql, String[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelect(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelect(Sql`1<ISqlContext> sql, string tableAlias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelectCount(Sql`1<ISqlContext> sql, string alias);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelectCount(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AndSelectCount(Sql`1<ISqlContext> sql, string alias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Select(Sql`1<ISqlContext> sql, Func`2<SqlRef`1<TDto>, SqlRef`1<TDto>> reference);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Select(Sql`1<ISqlContext> sql, Func`2<SqlRef`1<TDto>, SqlRef`1<TDto>> reference, Func`2<Sql`1<ISqlContext>, Sql`1<ISqlContext>> sqlexpr);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> SelectAnyIfExists(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> nestedSelect);
    [ExtensionAttribute]
public static string Columns(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static string ColumnsForInsert(Sql`1<ISqlContext> sql, Expression`1[] fields);
    [ExtensionAttribute]
public static string Columns(Sql`1<ISqlContext> sql, string alias, Expression`1[] fields);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Delete(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Delete(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Update(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Update(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> Update(Sql`1<ISqlContext> sql, Func`2<SqlUpd`1<TDto>, SqlUpd`1<TDto>> updates);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> ForUpdate(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
public static Sql`1<ISqlContext> AppendForUpdateHint(Sql`1<ISqlContext> sql);
    [ExtensionAttribute]
internal static string GetAliasedField(Sql`1<ISqlContext> sql, string field);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
private static String[] GetColumns(Sql`1<ISqlContext> sql, string tableAlias, string referenceName, Expression`1[] columnExpressions, bool withAlias, bool forInsert);
    [ExtensionAttribute]
public static string GetTableName(Type type);
    [ExtensionAttribute]
private static string GetColumnName(PropertyInfo column);
    [ExtensionAttribute]
public static string ToText(Sql sql);
    [ExtensionAttribute]
public static void ToText(Sql sql, StringBuilder text);
    public static void ToText(string sql, Object[] arguments, StringBuilder text);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Extensions.ObjectJsonExtensions : object {
    private static ConcurrentDictionary`2<Type, Dictionary`2<string, object>> _toObjectTypes;
    private static ObjectJsonExtensions();
    public static Dictionary`2<string, object> ToObjectDictionary(T obj, Func`2<PropertyInfo, string> namer);
    [CompilerGeneratedAttribute]
internal static string <ToObjectDictionary>g__DefaultNamer|1_0(PropertyInfo property);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.PublishedElementExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static TValue ValueFor(TModel model, IPublishedValueFallback publishedValueFallback, Expression`1<Func`2<TModel, TValue>> property, string culture, string segment, Fallback fallback, TValue defaultValue);
    [NullableContextAttribute("1")]
private static string GetAlias(TModel model, Expression`1<Func`2<TModel, TValue>> property);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ScopeExtensions : object {
    [ExtensionAttribute]
public static void ReadLock(IScope scope, ICollection`1<int> lockIds);
    [ExtensionAttribute]
public static void WriteLock(IScope scope, ICollection`1<int> lockIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static void AddRecurringBackgroundJob(IServiceCollection services);
    [ExtensionAttribute]
public static void AddRecurringBackgroundJob(IServiceCollection services, Func`2<IServiceProvider, TJob> implementationFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.SqlContextExtensions : object {
    [ExtensionAttribute]
public static ValueTuple`2<string, Object[]> VisitDto(ISqlContext sqlContext, Expression`1<Func`2<TDto, object>> expression, string alias);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTuple`2<string, Object[]> VisitDto(ISqlContext sqlContext, Expression`1<Func`2<TDto, TOut>> expression, string alias);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTuple`2<string, Object[]> VisitDto(ISqlContext sqlContext, Expression`1<Func`3<TDto1, TDto2, object>> expression, string alias1, string alias2);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static ValueTuple`2<string, Object[]> VisitDto(ISqlContext sqlContext, Expression`1<Func`3<TDto1, TDto2, TOut>> expression, string alias1, string alias2);
    [ExtensionAttribute]
public static ValueTuple`2<string, Object[]> VisitModel(ISqlContext sqlContext, Expression`1<Func`2<TModel, object>> expression);
    [ExtensionAttribute]
public static string VisitModelField(ISqlContext sqlContext, Expression`1<Func`2<TModel, object>> field);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.SqlSyntaxExtensions : object {
    [ExtensionAttribute]
public static string GetFieldName(ISqlSyntaxProvider sqlSyntax, Expression`1<Func`2<TDto, object>> fieldSelector, string tableAlias);
    [ExtensionAttribute]
private static string GetColumnName(PropertyInfo column);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoBuilderExtensions : object {
    [ExtensionAttribute]
public static MapperCollectionBuilder Mappers(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static NPocoMapperCollectionBuilder NPocoMappers(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static PackageMigrationPlanCollectionBuilder PackageMigrationPlans(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static RuntimeModeValidatorCollectionBuilder RuntimeModeValidators(IUmbracoBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoExamineExtensions : object {
    [GeneratedRegexAttribute("^(?<FieldName>.+)_(?<CultureName>[a-z]{2,3}(-[a-z0-9]{2,4})?)$", "4")]
[GeneratedCodeAttribute("System.Text.RegularExpressions.Generator", "8.0.10.21615")]
internal static Regex CultureIsoCodeFieldNameMatchExpression();
    [ExtensionAttribute]
public static IEnumerable`1<string> GetCultureFields(IUmbracoIndex index, string culture);
    [IteratorStateMachineAttribute("Umbraco.Extensions.UmbracoExamineExtensions/<GetCultureAndInvariantFields>d__2")]
[ExtensionAttribute]
public static IEnumerable`1<string> GetCultureAndInvariantFields(IUmbracoIndex index, string culture);
    [ExtensionAttribute]
public static IBooleanOperation Id(IQuery query, int id);
    [ExtensionAttribute]
public static IBooleanOperation ParentId(IQuery query, int id);
    [ExtensionAttribute]
public static IBooleanOperation NodeName(IQuery query, string nodeName);
    [ExtensionAttribute]
public static IBooleanOperation NodeName(IQuery query, IExamineValue nodeName);
    [ExtensionAttribute]
public static IBooleanOperation NodeTypeAlias(IQuery query, string nodeTypeAlias);
    [ExtensionAttribute]
public static IBooleanOperation NodeTypeAlias(IQuery query, IExamineValue nodeTypeAlias);
}
