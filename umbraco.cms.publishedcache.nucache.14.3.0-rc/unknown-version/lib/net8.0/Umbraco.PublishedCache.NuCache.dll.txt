[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Infrastructure.PublishedCache.CacheKeys : object {
    public static string PublishedContentChildren(Guid contentUid, bool previewing);
    public static string ContentCacheRoots(bool previewing);
    public static string MediaCacheRoots(bool previewing);
    public static string PublishedContentAsPreviewing(Guid contentUid);
    public static string ProfileName(int userId);
    public static string PropertyCacheValues(Guid contentUid, string typeAlias, bool previewing);
    public static string ContentCacheRouteByContent(int id, bool previewing, string culture);
    public static string ContentCacheContentByRoute(string route, bool previewing, string culture);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.ContentCache : PublishedCacheBase {
    [NullableAttribute("1")]
private IDomainCache _domainCache;
    private IAppCache _elementsCache;
    [NullableAttribute("1")]
private GlobalSettings _globalSettings;
    [NullableAttribute("1")]
private Snapshot _snapshot;
    [NullableAttribute("1")]
private IAppCache _snapshotCache;
    [NullableAttribute("1")]
private IVariationContextAccessor _variationContextAccessor;
    private bool HideTopLevelNodeFromPath { get; }
    [NullableContextAttribute("1")]
public ContentCache(bool previewDefault, Snapshot snapshot, IAppCache snapshotCache, IAppCache elementsCache, IDomainCache domainCache, IOptions`1<GlobalSettings> globalSettings, IVariationContextAccessor variationContextAccessor);
    public sealed virtual void Dispose();
    private bool get_HideTopLevelNodeFromPath();
    public sealed virtual IPublishedContent GetByRoute(string route, Nullable`1<bool> hideTopLevelNode, string culture);
    public sealed virtual IPublishedContent GetByRoute(bool preview, string route, Nullable`1<bool> hideTopLevelNode, string culture);
    private IPublishedContent GetByRouteInternal(bool preview, string route, Nullable`1<bool> hideTopLevelNode, string culture);
    public sealed virtual string GetRouteById(int contentId, string culture);
    public sealed virtual string GetRouteById(bool preview, int contentId, string culture);
    private string GetRouteByIdInternal(bool preview, int contentId, Nullable`1<bool> hideTopLevelNode, string culture);
    private IPublishedContent FollowRoute(IPublishedContent content, IReadOnlyList`1<string> parts, int start, string culture);
    [NullableContextAttribute("1")]
private void ApplyHideTopLevelNodeFromPath(IPublishedContent content, IList`1<string> segments, bool preview);
    public virtual IPublishedContent GetById(bool preview, int contentId);
    public virtual IPublishedContent GetById(bool preview, Guid contentId);
    [NullableContextAttribute("1")]
public virtual IPublishedContent GetById(bool preview, Udi contentId);
    public virtual bool HasById(bool preview, int contentId);
    [NullableContextAttribute("1")]
private sealed virtual override IEnumerable`1<IPublishedContent> Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableData.GetAtRoot(bool preview);
    [NullableContextAttribute("1")]
public virtual IEnumerable`1<IPublishedContent> GetAtRoot(bool preview, string culture);
    private static IPublishedContent GetNodePublishedContent(ContentNode node, bool preview);
    private static IPublishedContent GetPublishedContentAsDraft(IPublishedContent content);
    public virtual bool HasContent(bool preview);
    public virtual IPublishedContentType GetContentType(int id);
    [NullableContextAttribute("1")]
public virtual IPublishedContentType GetContentType(string alias);
    public virtual IPublishedContentType GetContentType(Guid key);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("Id: {Id}, Path: {Path}")]
public class Umbraco.Cms.Infrastructure.PublishedCache.ContentNode : object {
    public int Id;
    private ContentData _draftData;
    private IPublishedContent _draftModel;
    private ContentData _publishedData;
    private IPublishedContent _publishedModel;
    private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IVariationContextAccessor _variationContextAccessor;
    public Guid Uid;
    public int Level;
    [NullableAttribute("1")]
public IPublishedContentType ContentType;
    [NullableAttribute("1")]
public string Path;
    public int SortOrder;
    public int ParentContentId;
    public DateTime CreateDate;
    public int FirstChildContentId;
    public int LastChildContentId;
    public int NextSiblingContentId;
    public int PreviousSiblingContentId;
    public int CreatorId;
    public bool HasPublished { get; }
    public IPublishedContent DraftModel { get; }
    public IPublishedContent PublishedModel { get; }
    [NullableContextAttribute("1")]
public ContentNode(int id, Guid uid, IPublishedContentType contentType, int level, string path, int sortOrder, int parentContentId, DateTime createDate, int creatorId);
    [NullableContextAttribute("1")]
public ContentNode(int id, Guid uid, IPublishedContentType contentType, int level, string path, int sortOrder, int parentContentId, DateTime createDate, int creatorId, ContentData draftData, ContentData publishedData, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    [NullableContextAttribute("1")]
public ContentNode(int id, Guid uid, int level, string path, int sortOrder, int parentContentId, DateTime createDate, int creatorId);
    [NullableContextAttribute("1")]
public ContentNode(ContentNode origin, IPublishedModelFactory publishedModelFactory, IPublishedContentType contentType);
    public bool get_HasPublished();
    public IPublishedContent get_DraftModel();
    public IPublishedContent get_PublishedModel();
    [NullableContextAttribute("1")]
public void SetContentTypeAndData(IPublishedContentType contentType, ContentData draftData, ContentData publishedData, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    [NullableContextAttribute("1")]
public bool HasPublishedCulture(string culture);
    public ContentNodeKit ToKit();
    private IPublishedContent GetModel(IPublishedContent& model, ContentData contentData);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.ContentNodeKit : ValueType {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ContentNode <Node>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentData <DraftData>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentData <PublishedData>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentNodeKit <Empty>k__BackingField;
    [CompilerGeneratedAttribute]
private static ContentNodeKit <Null>k__BackingField;
    [NullableAttribute("1")]
public ContentNode Node { get; }
    public int ContentTypeId { get; }
    public ContentData DraftData { get; }
    public ContentData PublishedData { get; }
    public static ContentNodeKit Empty { get; }
    public bool IsEmpty { get; }
    public bool IsNull { get; }
    public static ContentNodeKit Null { get; }
    public ContentNodeKit(ContentNode node, int contentTypeId, ContentData draftData, ContentData publishedData);
    private static ContentNodeKit();
    [IsReadOnlyAttribute]
[NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public ContentNode get_Node();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_ContentTypeId();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ContentData get_DraftData();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public ContentData get_PublishedData();
    [CompilerGeneratedAttribute]
public static ContentNodeKit get_Empty();
    public bool get_IsEmpty();
    public bool get_IsNull();
    [CompilerGeneratedAttribute]
public static ContentNodeKit get_Null();
    [NullableContextAttribute("1")]
public void Build(IPublishedContentType contentType, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory, bool canBePublished);
    [NullableContextAttribute("1")]
public ContentNodeKit Clone(IPublishedModelFactory publishedModelFactory);
    [NullableContextAttribute("1")]
public ContentNodeKit Clone(IPublishedModelFactory publishedModelFactory, ContentData draftData, ContentData publishedData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.ContentStore : object {
    private static TimeSpan _monitorTimeout;
    private static long CollectMinGenDelta;
    private ConcurrentDictionary`2<Guid, int> _contentKeyToIdMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<int, LinkedNode`1<ContentNode>> _contentNodes;
    private ConcurrentDictionary`2<Guid, int> _contentTypeKeyToIdMap;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<string, LinkedNode`1<IPublishedContentType>> _contentTypesByAlias;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<int, LinkedNode`1<IPublishedContentType>> _contentTypesById;
    private ConcurrentQueue`1<GenObj> _genObjs;
    private ILogger _logger;
    private ILoggerFactory _loggerFactory;
    private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private object _rlocko;
    private IVariationContextAccessor _variationContextAccessor;
    private object _wlocko;
    [NullableAttribute("2")]
private Task _collectTask;
    [NullableAttribute("2")]
private GenObj _genObj;
    private long _liveGen;
    private long _floorGen;
    [NullableAttribute("2")]
private BPlusTree`2<int, ContentNodeKit> _localDb;
    private bool _nextGen;
    private bool _collectAuto;
    private LinkedNode`1<ContentNode> _root;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<KeyValuePair`2<int, ContentNodeKit>> _wchanges;
    private string _instanceId;
    [NullableAttribute("2")]
private TestHelper _unitTesting;
    public int Count { get; }
    public Snapshot LiveSnapshot { get; }
    public long GenCount { get; }
    public long SnapCount { get; }
    internal TestHelper Test { get; }
    public ContentStore(IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, ILogger logger, ILoggerFactory loggerFactory, IPublishedModelFactory publishedModelFactory, BPlusTree`2<int, ContentNodeKit> localDb);
    private static ContentStore();
    public IDisposable GetScopedWriteLock(ICoreScopeProvider scopeProvider);
    private void EnsureLocked();
    private void Lock(WriteLockInfo lockInfo, bool forceGen);
    private void Release(WriteLockInfo lockInfo, bool commit);
    private void RollbackRoot();
    private void Rollback(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dictionary);
    public void ReleaseLocalDb();
    private void RegisterChange(int id, ContentNodeKit kit);
    public void NewContentTypesLocked(IEnumerable`1<IPublishedContentType> types);
    public void UpdateContentTypesLocked(IEnumerable`1<IPublishedContentType> types);
    public void SetAllContentTypesLocked(IEnumerable`1<IPublishedContentType> types);
    public void UpdateContentTypesLocked(IReadOnlyCollection`1<int> removedIds, IReadOnlyCollection`1<IPublishedContentType> refreshedTypes, IReadOnlyCollection`1<ContentNodeKit> kits);
    public void UpdateDataTypesLocked(IEnumerable`1<int> dataTypeIds, Func`2<int, IPublishedContentType> getContentType);
    private bool BuildKit(ContentNodeKit kit, LinkedNode`1& parent);
    public int get_Count();
    private static LinkedNode`1<TValue> GetHead(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict, TKey key);
    public bool SetLocked(ContentNodeKit kit);
    private void ClearRootLocked();
    [ObsoleteAttribute("Use the overload that takes a 'kitGroupSize' parameter instead")]
public bool SetAllFastSortedLocked(IEnumerable`1<ContentNodeKit> kits, bool fromDb);
    public bool SetAllFastSortedLocked(IEnumerable`1<ContentNodeKit> kits, int kitGroupSize, bool fromDb);
    [ObsoleteAttribute("Use the overload that takes the 'kitGroupSize' and 'fromDb' parameters instead")]
public bool SetAllLocked(IEnumerable`1<ContentNodeKit> kits);
    public bool SetAllLocked(IEnumerable`1<ContentNodeKit> kits, int kitGroupSize, bool fromDb);
    public bool SetBranchLocked(int rootContentId, IEnumerable`1<ContentNodeKit> kits);
    public bool ClearLocked(int id);
    private void ClearBranchLocked(int id);
    [NullableContextAttribute("2")]
private void ClearBranchLocked(ContentNode content);
    private LinkedNode`1<ContentNode> GetRequiredLinkedNode(int id, string description, Nullable`1<long> gen);
    private LinkedNode`1<ContentNode> GetParentLink(ContentNode content, Nullable`1<long> gen);
    private LinkedNode`1<ContentNode> GetRequiredParentLink(ContentNode content, Nullable`1<long> gen);
    [NullableContextAttribute("2")]
private LinkedNode`1<TValue> GetLinkedNodeGen(LinkedNode`1<TValue> link, Nullable`1<long> gen);
    private void RemoveTreeNodeLocked(ContentNode content);
    private bool ParentPublishedLocked(ContentNodeKit kit);
    private ContentNode GenCloneLocked(LinkedNode`1<ContentNode> link);
    private void AddTreeNodeLocked(ContentNode content, LinkedNode`1<ContentNode> parentLink);
    private void SetRootLocked(ContentNode node);
    private void SetContentTypeLocked(IPublishedContentType type);
    private void SetValueLocked(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict, TKey key, TValue value);
    private void ClearLocked(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict);
    [NullableContextAttribute("2")]
public ContentNode Get(int id, long gen);
    [NullableContextAttribute("2")]
public ContentNode Get(Guid uid, long gen);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.ContentStore/<GetAtRoot>d__70")]
public IEnumerable`1<ContentNode> GetAtRoot(long gen);
    private TValue GetValue(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict, TKey key, long gen);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.ContentStore/<GetAll>d__72")]
public IEnumerable`1<ContentNode> GetAll(long gen);
    public bool IsEmpty(long gen);
    [NullableContextAttribute("2")]
public IPublishedContentType GetContentType(int id, long gen);
    public IPublishedContentType GetContentType(string alias, long gen);
    [NullableContextAttribute("2")]
public IPublishedContentType GetContentType(Guid key, long gen);
    public Snapshot CreateSnapshot();
    public Snapshot get_LiveSnapshot();
    public Task CollectAsync();
    private Task CollectAsyncLocked();
    private void Collect();
    private void CollectRoot();
    private void Collect(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict);
    public long get_GenCount();
    public long get_SnapCount();
    internal TestHelper get_Test();
    [CompilerGeneratedAttribute]
private ScopedWriteLock <GetScopedWriteLock>b__29_0(bool scoped);
    [CompilerGeneratedAttribute]
private void <CollectAsyncLocked>b__81_0(Task _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.BTree : object {
    public static BPlusTree`2<int, ContentNodeKit> GetTree(string filepath, bool exists, NuCacheSettings settings, ContentDataSerializer contentDataSerializer);
    private static int GetBlockSize(NuCacheSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentCacheDataModel : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, PropertyData[]> <PropertyData>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, CultureVariation> <CultureData>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlSegment>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyNameAttribute("pd")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringInternIgnoreCaseConverter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.PropertyData[]>")]
[MessagePackFormatterAttribute("Umbraco.Cms.Infrastructure.PublishedCache.DataSource.MessagePackDictionaryStringInternIgnoreCaseFormatter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.PropertyData[]>")]
public Dictionary`2<string, PropertyData[]> PropertyData { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[DataMemberAttribute]
[JsonPropertyNameAttribute("cd")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringInternIgnoreCaseConverter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.CultureVariation>")]
[MessagePackFormatterAttribute("Umbraco.Cms.Infrastructure.PublishedCache.DataSource.MessagePackDictionaryStringInternIgnoreCaseFormatter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.CultureVariation>")]
public Dictionary`2<string, CultureVariation> CultureData { get; public set; }
    [NullableAttribute("2")]
[DataMemberAttribute]
[JsonPropertyNameAttribute("us")]
public string UrlSegment { get; public set; }
    [IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("properties")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringIgnoreCaseConverter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.PropertyData[]>")]
unknown Dictionary`2<string, PropertyData[]> LegacyPropertyData {private set; }
    [IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("cultureData")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonDictionaryStringIgnoreCaseConverter`1<Umbraco.Cms.Infrastructure.PublishedCache.DataSource.CultureVariation>")]
unknown Dictionary`2<string, CultureVariation> LegacyCultureData {private set; }
    [IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("urlSegment")]
unknown string LegacyUrlSegment {private set; }
    [CompilerGeneratedAttribute]
public Dictionary`2<string, PropertyData[]> get_PropertyData();
    [CompilerGeneratedAttribute]
public void set_PropertyData(Dictionary`2<string, PropertyData[]> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, CultureVariation> get_CultureData();
    [CompilerGeneratedAttribute]
public void set_CultureData(Dictionary`2<string, CultureVariation> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlSegment();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_UrlSegment(string value);
    private void set_LegacyPropertyData(Dictionary`2<string, PropertyData[]> value);
    private void set_LegacyCultureData(Dictionary`2<string, CultureVariation> value);
    private void set_LegacyUrlSegment(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentCacheDataSerializationResult : ValueType {
    [CompilerGeneratedAttribute]
private string <StringData>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <ByteData>k__BackingField;
    public string StringData { get; }
    public Byte[] ByteData { get; }
    public ContentCacheDataSerializationResult(string stringData, Byte[] byteData);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_StringData();
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Byte[] get_ByteData();
    public static bool op_Equality(ContentCacheDataSerializationResult left, ContentCacheDataSerializationResult right);
    public static bool op_Inequality(ContentCacheDataSerializationResult left, ContentCacheDataSerializationResult right);
    public virtual bool Equals(object obj);
    public sealed virtual bool Equals(ContentCacheDataSerializationResult other);
    public virtual int GetHashCode();
}
[FlagsAttribute]
public enum Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentCacheDataSerializerEntityType : Enum {
    public int value__;
    public static ContentCacheDataSerializerEntityType Document;
    public static ContentCacheDataSerializerEntityType Media;
    public static ContentCacheDataSerializerEntityType Member;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentData : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <UrlSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <VersionDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <WriterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, PropertyData[]> <Properties>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyDictionary`2<string, CultureVariation> <CultureInfos>k__BackingField;
    public string Name { get; }
    [NullableAttribute("2")]
public string UrlSegment { get; }
    public int VersionId { get; }
    public DateTime VersionDate { get; }
    public int WriterId { get; }
    public Nullable`1<int> TemplateId { get; }
    public bool Published { get; }
    public IDictionary`2<string, PropertyData[]> Properties { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyDictionary`2<string, CultureVariation> CultureInfos { get; }
    [NullableContextAttribute("2")]
public ContentData(string name, string urlSegment, int versionId, DateTime versionDate, int writerId, Nullable`1<int> templateId, bool published, IDictionary`2<string, PropertyData[]> properties, IReadOnlyDictionary`2<string, CultureVariation> cultureInfos);
    [CompilerGeneratedAttribute]
public string get_Name();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_UrlSegment();
    [CompilerGeneratedAttribute]
public int get_VersionId();
    [CompilerGeneratedAttribute]
public DateTime get_VersionDate();
    [CompilerGeneratedAttribute]
public int get_WriterId();
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_TemplateId();
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, PropertyData[]> get_Properties();
    [CompilerGeneratedAttribute]
public IReadOnlyDictionary`2<string, CultureVariation> get_CultureInfos();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentDataSerializer : object {
    private static DictionaryOfPropertyDataSerializer S_defaultPropertiesSerializer;
    private static DictionaryOfCultureVariationSerializer S_defaultCultureVariationsSerializer;
    [NullableAttribute("2")]
private IDictionaryOfPropertyDataSerializer _dictionaryOfPropertyDataSerializer;
    [NullableContextAttribute("2")]
public ContentDataSerializer(IDictionaryOfPropertyDataSerializer dictionaryOfPropertyDataSerializer);
    private static ContentDataSerializer();
    public sealed virtual ContentData ReadFrom(Stream stream);
    public sealed virtual void WriteTo(ContentData value, Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentNodeKitSerializer : object {
    private static ContentDataSerializer S_defaultDataSerializer;
    [NullableAttribute("2")]
private ContentDataSerializer _contentDataSerializer;
    [NullableContextAttribute("2")]
public ContentNodeKitSerializer(ContentDataSerializer contentDataSerializer);
    private static ContentNodeKitSerializer();
    public sealed virtual ContentNodeKit ReadFrom(Stream stream);
    public sealed virtual void WriteTo(ContentNodeKit value, Stream stream);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.ContentSourceDto : object {
    [CompilerGeneratedAttribute]
private int <Id>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ContentTypeId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Level>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private int <SortOrder>k__BackingField;
    [CompilerGeneratedAttribute]
private int <ParentId>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Published>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Edited>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreateDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <CreatorId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <VersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <EditVersionDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EditWriterId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <EditTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EditData>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <EditDataRaw>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PublishedVersionId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PubName>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <PubVersionDate>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PubWriterId>k__BackingField;
    [CompilerGeneratedAttribute]
private int <PubTemplateId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PubData>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <PubDataRaw>k__BackingField;
    public int Id { get; public set; }
    public Guid Key { get; public set; }
    public int ContentTypeId { get; public set; }
    public int Level { get; public set; }
    [NullableAttribute("1")]
public string Path { get; public set; }
    public int SortOrder { get; public set; }
    public int ParentId { get; public set; }
    public bool Published { get; public set; }
    public bool Edited { get; public set; }
    public DateTime CreateDate { get; public set; }
    public int CreatorId { get; public set; }
    public int VersionId { get; public set; }
    public string EditName { get; public set; }
    public DateTime EditVersionDate { get; public set; }
    public int EditWriterId { get; public set; }
    public int EditTemplateId { get; public set; }
    public string EditData { get; public set; }
    public Byte[] EditDataRaw { get; public set; }
    public int PublishedVersionId { get; public set; }
    public string PubName { get; public set; }
    public DateTime PubVersionDate { get; public set; }
    public int PubWriterId { get; public set; }
    public int PubTemplateId { get; public set; }
    public string PubData { get; public set; }
    public Byte[] PubDataRaw { get; public set; }
    private DateTime Umbraco.Cms.Core.Models.IReadOnlyContentBase.UpdateDate { get; }
    private string Umbraco.Cms.Core.Models.IReadOnlyContentBase.Name { get; }
    private int Umbraco.Cms.Core.Models.IReadOnlyContentBase.WriterId { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Id();
    [CompilerGeneratedAttribute]
public void set_Id(int value);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Key();
    [CompilerGeneratedAttribute]
public void set_Key(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ContentTypeId();
    [CompilerGeneratedAttribute]
public void set_ContentTypeId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Level();
    [CompilerGeneratedAttribute]
public void set_Level(int value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_SortOrder();
    [CompilerGeneratedAttribute]
public void set_SortOrder(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_ParentId();
    [CompilerGeneratedAttribute]
public void set_ParentId(int value);
    [CompilerGeneratedAttribute]
public bool get_Published();
    [CompilerGeneratedAttribute]
public void set_Published(bool value);
    [CompilerGeneratedAttribute]
public bool get_Edited();
    [CompilerGeneratedAttribute]
public void set_Edited(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_CreateDate();
    [CompilerGeneratedAttribute]
public void set_CreateDate(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_CreatorId();
    [CompilerGeneratedAttribute]
public void set_CreatorId(int value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_VersionId();
    [CompilerGeneratedAttribute]
public void set_VersionId(int value);
    [CompilerGeneratedAttribute]
public string get_EditName();
    [CompilerGeneratedAttribute]
public void set_EditName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_EditVersionDate();
    [CompilerGeneratedAttribute]
public void set_EditVersionDate(DateTime value);
    [CompilerGeneratedAttribute]
public int get_EditWriterId();
    [CompilerGeneratedAttribute]
public void set_EditWriterId(int value);
    [CompilerGeneratedAttribute]
public int get_EditTemplateId();
    [CompilerGeneratedAttribute]
public void set_EditTemplateId(int value);
    [CompilerGeneratedAttribute]
public string get_EditData();
    [CompilerGeneratedAttribute]
public void set_EditData(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_EditDataRaw();
    [CompilerGeneratedAttribute]
public void set_EditDataRaw(Byte[] value);
    [CompilerGeneratedAttribute]
public int get_PublishedVersionId();
    [CompilerGeneratedAttribute]
public void set_PublishedVersionId(int value);
    [CompilerGeneratedAttribute]
public string get_PubName();
    [CompilerGeneratedAttribute]
public void set_PubName(string value);
    [CompilerGeneratedAttribute]
public DateTime get_PubVersionDate();
    [CompilerGeneratedAttribute]
public void set_PubVersionDate(DateTime value);
    [CompilerGeneratedAttribute]
public int get_PubWriterId();
    [CompilerGeneratedAttribute]
public void set_PubWriterId(int value);
    [CompilerGeneratedAttribute]
public int get_PubTemplateId();
    [CompilerGeneratedAttribute]
public void set_PubTemplateId(int value);
    [CompilerGeneratedAttribute]
public string get_PubData();
    [CompilerGeneratedAttribute]
public void set_PubData(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_PubDataRaw();
    [CompilerGeneratedAttribute]
public void set_PubDataRaw(Byte[] value);
    private sealed virtual override DateTime Umbraco.Cms.Core.Models.IReadOnlyContentBase.get_UpdateDate();
    private sealed virtual override string Umbraco.Cms.Core.Models.IReadOnlyContentBase.get_Name();
    private sealed virtual override int Umbraco.Cms.Core.Models.IReadOnlyContentBase.get_WriterId();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.CultureVariation : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UrlSegment>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <Date>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDraft>k__BackingField;
    [DataMemberAttribute]
[JsonPropertyNameAttribute("nm")]
public string Name { get; public set; }
    [DataMemberAttribute]
[JsonPropertyNameAttribute("us")]
public string UrlSegment { get; public set; }
    [DataMemberAttribute]
[JsonPropertyNameAttribute("dt")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonUniversalDateTimeConverter")]
public DateTime Date { get; public set; }
    [DataMemberAttribute]
[JsonPropertyNameAttribute("isd")]
public bool IsDraft { get; public set; }
    [NullableAttribute("1")]
[IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("nam")]
unknown string LegacyName {private set; }
    [NullableAttribute("1")]
[IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("urlSegment")]
unknown string LegacyUrlSegment {private set; }
    [IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("date")]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonUniversalDateTimeConverter")]
unknown DateTime LegacyDate {private set; }
    [IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("isDraft")]
unknown bool LegacyIsDraft {private set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public string get_UrlSegment();
    [CompilerGeneratedAttribute]
public void set_UrlSegment(string value);
    [CompilerGeneratedAttribute]
public DateTime get_Date();
    [CompilerGeneratedAttribute]
public void set_Date(DateTime value);
    [CompilerGeneratedAttribute]
public bool get_IsDraft();
    [CompilerGeneratedAttribute]
public void set_IsDraft(bool value);
    [NullableContextAttribute("1")]
private void set_LegacyName(string value);
    [NullableContextAttribute("1")]
private void set_LegacyUrlSegment(string value);
    private void set_LegacyDate(DateTime value);
    private void set_LegacyIsDraft(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.DictionaryOfCultureVariationSerializer : SerializerBase {
    private static IReadOnlyDictionary`2<string, CultureVariation> Empty;
    private static DictionaryOfCultureVariationSerializer();
    public sealed virtual IReadOnlyDictionary`2<string, CultureVariation> ReadFrom(Stream stream);
    public sealed virtual void WriteTo(IReadOnlyDictionary`2<string, CultureVariation> value, Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.DictionaryOfPropertyDataSerializer : SerializerBase {
    private static PropertyData[] Empty;
    private static DictionaryOfPropertyDataSerializer();
    public sealed virtual IDictionary`2<string, PropertyData[]> ReadFrom(Stream stream);
    public sealed virtual void WriteTo(IDictionary`2<string, PropertyData[]> value, Stream stream);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.PublishedCache.DataSource.IContentCacheDataSerializer {
    [NullableContextAttribute("2")]
public abstract virtual ContentCacheDataModel Deserialize(IReadOnlyContentBase content, string stringData, Byte[] byteData, bool published);
    public abstract virtual ContentCacheDataSerializationResult Serialize(IReadOnlyContentBase content, ContentCacheDataModel model, bool published);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.PublishedCache.DataSource.IContentCacheDataSerializerFactory {
    public abstract virtual IContentCacheDataSerializer Create(ContentCacheDataSerializerEntityType types);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.PublishedCache.DataSource.IDictionaryOfPropertyDataSerializer {
    public abstract virtual IDictionary`2<string, PropertyData[]> ReadFrom(Stream stream);
    public abstract virtual void WriteTo(IDictionary`2<string, PropertyData[]> value, Stream stream);
}
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.JsonContentNestedDataSerializer : object {
    [NullableAttribute("1")]
private static JsonSerializerOptions _jsonSerializerOptions;
    private static JsonContentNestedDataSerializer();
    [NullableContextAttribute("2")]
public sealed virtual ContentCacheDataModel Deserialize(IReadOnlyContentBase content, string stringData, Byte[] byteData, bool published);
    [NullableContextAttribute("1")]
public sealed virtual ContentCacheDataSerializationResult Serialize(IReadOnlyContentBase content, ContentCacheDataModel model, bool published);
}
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.JsonContentNestedDataSerializerFactory : object {
    [NullableAttribute("1")]
private Lazy`1<JsonContentNestedDataSerializer> _serializer;
    [NullableContextAttribute("1")]
public sealed virtual IContentCacheDataSerializer Create(ContentCacheDataSerializerEntityType types);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DebuggerDisplayAttribute("{Display}")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.LazyCompressedString : ValueType {
    private object _locker;
    [NullableAttribute("2")]
private Byte[] _bytes;
    [NullableAttribute("2")]
private string _str;
    private string Display { get; }
    public LazyCompressedString(Byte[] bytes);
    private string get_Display();
    public static string op_Implicit(LazyCompressedString l);
    public Byte[] GetBytes();
    public string DecompressString();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.MessagePackDictionaryStringInternIgnoreCaseFormatter`1 : DictionaryFormatterBase`5<string, TValue, Dictionary`2<string, TValue>, Enumerator<string, TValue>, Dictionary`2<string, TValue>> {
    protected virtual void Add(Dictionary`2<string, TValue> collection, int index, string key, TValue value, MessagePackSerializerOptions options);
    protected virtual Dictionary`2<string, TValue> Complete(Dictionary`2<string, TValue> intermediateCollection);
    protected virtual Enumerator<string, TValue> GetSourceEnumerator(Dictionary`2<string, TValue> source);
    protected virtual Dictionary`2<string, TValue> Create(int count, MessagePackSerializerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.MsgPackContentNestedDataSerializer : object {
    private MessagePackSerializerOptions _options;
    private IPropertyCacheCompression _propertyOptions;
    public MsgPackContentNestedDataSerializer(IPropertyCacheCompression propertyOptions);
    [NullableContextAttribute("2")]
public sealed virtual ContentCacheDataModel Deserialize(IReadOnlyContentBase content, string stringData, Byte[] byteData, bool published);
    public sealed virtual ContentCacheDataSerializationResult Serialize(IReadOnlyContentBase content, ContentCacheDataModel model, bool published);
    public string ToJson(Byte[] bin);
    private void Compress(IReadOnlyContentBase content, ContentCacheDataModel model, bool published);
    private void Expand(IReadOnlyContentBase content, ContentCacheDataModel nestedData, bool published);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.MsgPackContentNestedDataSerializerFactory : object {
    private IPropertyCacheCompressionOptions _compressionOptions;
    private IContentTypeService _contentTypeService;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<ValueTuple`3<int, string, bool>, bool> _isCompressedCache;
    private IMediaTypeService _mediaTypeService;
    private IMemberTypeService _memberTypeService;
    private PropertyEditorCollection _propertyEditors;
    public MsgPackContentNestedDataSerializerFactory(IContentTypeService contentTypeService, IMediaTypeService mediaTypeService, IMemberTypeService memberTypeService, PropertyEditorCollection propertyEditors, IPropertyCacheCompressionOptions compressionOptions);
    public sealed virtual IContentCacheDataSerializer Create(ContentCacheDataSerializerEntityType types);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[DataContractAttribute]
public class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.PropertyData : object {
    private string _culture;
    private string _segment;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [DataMemberAttribute]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonStringInternConverter")]
[DefaultValueAttribute("")]
[JsonPropertyNameAttribute("c")]
public string Culture { get; public set; }
    [DataMemberAttribute]
[JsonConverterAttribute("Umbraco.Cms.Infrastructure.Serialization.JsonStringInternConverter")]
[DefaultValueAttribute("")]
[JsonPropertyNameAttribute("s")]
public string Segment { get; public set; }
    [DataMemberAttribute]
[JsonPropertyNameAttribute("v")]
public object Value { get; public set; }
    [NullableAttribute("1")]
[IgnoreDataMemberAttribute]
unknown string LegacyCulture {private set; }
    [NullableAttribute("1")]
[IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("seg")]
unknown string LegacySegment {private set; }
    [NullableAttribute("1")]
[IgnoreDataMemberAttribute]
[JsonPropertyNameAttribute("val")]
unknown object LegacyValue {private set; }
    public string get_Culture();
    public void set_Culture(string value);
    public string get_Segment();
    public void set_Segment(string value);
    [CompilerGeneratedAttribute]
public object get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(object value);
    [NullableContextAttribute("1")]
private void set_LegacyCulture(string value);
    [NullableContextAttribute("1")]
private void set_LegacySegment(string value);
    [NullableContextAttribute("1")]
private void set_LegacyValue(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal abstract class Umbraco.Cms.Infrastructure.PublishedCache.DataSource.SerializerBase : object {
    private static char PrefixNull;
    private static char PrefixString;
    private static char PrefixInt32;
    private static char PrefixUInt16;
    private static char PrefixUInt32;
    private static char PrefixLong;
    private static char PrefixFloat;
    private static char PrefixDouble;
    private static char PrefixDateTime;
    private static char PrefixByte;
    private static char PrefixByteArray;
    private static char PrefixCompressedStringByteArray;
    private static char PrefixSignedByte;
    private static char PrefixBool;
    private static char PrefixGuid;
    private static char PrefixTimeSpan;
    private static char PrefixInt16;
    private static char PrefixChar;
    protected string ReadString(Stream stream);
    protected int ReadInt(Stream stream);
    protected long ReadLong(Stream stream);
    protected float ReadFloat(Stream stream);
    protected double ReadDouble(Stream stream);
    protected DateTime ReadDateTime(Stream stream);
    protected Byte[] ReadByteArray(Stream stream);
    protected string ReadStringObject(Stream stream, bool intern);
    [NullableContextAttribute("0")]
private Nullable`1<T> ReadStruct(Stream stream, char t, Func`2<Stream, T> read);
    protected Nullable`1<int> ReadIntObject(Stream stream);
    protected Nullable`1<long> ReadLongObject(Stream stream);
    protected Nullable`1<float> ReadFloatObject(Stream stream);
    protected Nullable`1<double> ReadDoubleObject(Stream stream);
    protected Nullable`1<DateTime> ReadDateTimeObject(Stream stream);
    protected object ReadObject(Stream stream);
    protected object ReadObject(char type, Stream stream);
    protected void WriteObject(object value, Stream stream);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.DomainCache : object {
    private Snapshot<int, Domain> _snapshot;
    [CompilerGeneratedAttribute]
private string <DefaultCulture>k__BackingField;
    public string DefaultCulture { get; }
    public DomainCache(Snapshot<int, Domain> snapshot, string defaultCulture);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DefaultCulture();
    public sealed virtual IEnumerable`1<Domain> GetAll(bool includeWildcards);
    public sealed virtual IEnumerable`1<Domain> GetAssigned(int documentId, bool includeWildcards);
    public sealed virtual bool HasAssigned(int documentId, bool includeWildcards);
}
[ExtensionAttribute]
public static class Umbraco.Cms.Infrastructure.PublishedCache.DomainCacheExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool GetAssignedWithCulture(IDomainCache domainCache, string culture, int documentId, bool includeWildcards);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.MediaCache : PublishedCacheBase {
    private Snapshot _snapshot;
    private IVariationContextAccessor _variationContextAccessor;
    public MediaCache(bool previewDefault, Snapshot snapshot, IVariationContextAccessor variationContextAccessor);
    public sealed virtual void Dispose();
    [NullableContextAttribute("2")]
public virtual IPublishedContent GetById(bool preview, int contentId);
    [NullableContextAttribute("2")]
public virtual IPublishedContent GetById(bool preview, Guid contentId);
    public virtual IPublishedContent GetById(bool preview, Udi contentId);
    public virtual bool HasById(bool preview, int contentId);
    private sealed virtual override IEnumerable`1<IPublishedContent> Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableData.GetAtRoot(bool preview);
    public virtual IEnumerable`1<IPublishedContent> GetAtRoot(bool preview, string culture);
    public virtual bool HasContent(bool preview);
    [NullableContextAttribute("2")]
public virtual IPublishedContentType GetContentType(int id);
    public virtual IPublishedContentType GetContentType(string alias);
    [NullableContextAttribute("2")]
public virtual IPublishedContentType GetContentType(Guid key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.MemberCache : object {
    private PublishedContentTypeCache _contentTypeCache;
    private bool _previewDefault;
    private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IVariationContextAccessor _variationContextAccessor;
    private bool _disposedValue;
    public MemberCache(bool previewDefault, PublishedContentTypeCache contentTypeCache, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    public sealed virtual IPublishedContentType GetContentType(int id);
    public sealed virtual IPublishedContentType GetContentType(string alias);
    public sealed virtual IPublishedContent Get(IMember member);
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("The current implementation of XPath is suboptimal and will be removed entirely in a future version. Scheduled for removal in v15. Still needed for NuCache")]
internal interface Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableContent {
    public int Id { get; }
    public int ParentId { get; }
    [NullableAttribute("1")]
public INavigableContentType Type { get; }
    public IList`1<int> ChildIds { get; }
    public abstract virtual int get_Id();
    public abstract virtual int get_ParentId();
    [NullableContextAttribute("1")]
public abstract virtual INavigableContentType get_Type();
    public abstract virtual IList`1<int> get_ChildIds();
    public abstract virtual object Value(int index);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("The current implementation of XPath is suboptimal and will be removed entirely in a future version. Scheduled for removal in v15. Still needed for NuCache")]
internal interface Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableContentType {
    [NullableAttribute("2")]
public string Name { get; }
    public INavigableFieldType[] FieldTypes { get; }
    [NullableContextAttribute("2")]
public abstract virtual string get_Name();
    public abstract virtual INavigableFieldType[] get_FieldTypes();
}
[NullableContextAttribute("1")]
internal interface Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableData {
    [NullableContextAttribute("2")]
public abstract virtual IPublishedContent GetById(bool preview, int contentId);
    public abstract virtual IEnumerable`1<IPublishedContent> GetAtRoot(bool preview);
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("The current implementation of XPath is suboptimal and will be removed entirely in a future version. Scheduled for removal in v15. Still needed for NuCache")]
internal interface Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableFieldType {
    public string Name { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, string> XmlStringConverter { get; }
    public abstract virtual string get_Name();
    public abstract virtual Func`2<object, string> get_XmlStringConverter();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("The current implementation of XPath is suboptimal and will be removed entirely in a future version. Scheduled for removal in v15. Still needed for NuCache")]
internal interface Umbraco.Cms.Infrastructure.PublishedCache.Navigable.INavigableSource {
    public int LastAttributeIndex { get; }
    public INavigableContent Root { get; }
    public abstract virtual int get_LastAttributeIndex();
    public abstract virtual INavigableContent get_Root();
    [NullableContextAttribute("2")]
public abstract virtual INavigableContent Get(int id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Navigable.NavigableContent : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private String[] _builtInValues;
    private PublishedContent _content;
    [CompilerGeneratedAttribute]
private IPublishedContent <InnerContent>k__BackingField;
    public IPublishedContent InnerContent { get; }
    public int Id { get; }
    public int ParentId { get; }
    public INavigableContentType Type { get; }
    [NullableAttribute("2")]
public IList`1<int> ChildIds { get; }
    public NavigableContent(IPublishedContent content);
    [CompilerGeneratedAttribute]
public IPublishedContent get_InnerContent();
    [NullableContextAttribute("2")]
private string XmlString(int index, object value);
    public sealed virtual int get_Id();
    public sealed virtual int get_ParentId();
    public sealed virtual INavigableContentType get_Type();
    [NullableContextAttribute("2")]
public sealed virtual IList`1<int> get_ChildIds();
    [NullableContextAttribute("2")]
public sealed virtual object Value(int index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Navigable.NavigableContentType : object {
    public static INavigableFieldType[] BuiltinProperties;
    private static ConditionalWeakTable`2<IPublishedContentType, NavigableContentType> TypesMap;
    private object _locko;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private INavigableFieldType[] <FieldTypes>k__BackingField;
    public string Name { get; private set; }
    public INavigableFieldType[] FieldTypes { get; private set; }
    private static NavigableContentType();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
private void set_Name(string value);
    [CompilerGeneratedAttribute]
public sealed virtual INavigableFieldType[] get_FieldTypes();
    [CompilerGeneratedAttribute]
private void set_FieldTypes(INavigableFieldType[] value);
    public static NavigableContentType GetContentType(IPublishedContentType contentType);
    private NavigableContentType EnsureInitialized(IPublishedContentType contentType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Navigable.NavigablePropertyType : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<object, string> <XmlStringConverter>k__BackingField;
    public string Name { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<object, string> XmlStringConverter { get; }
    public NavigablePropertyType(string name, Func`2<object, string> xmlStringConverter);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<object, string> get_XmlStringConverter();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Navigable.RootContent : object {
    private static RootContentType ContentType;
    private Int32[] _childIds;
    public int Id { get; }
    public int ParentId { get; }
    public INavigableContentType Type { get; }
    public IList`1<int> ChildIds { get; }
    public RootContent(IEnumerable`1<int> childIds);
    private static RootContent();
    public sealed virtual int get_Id();
    public sealed virtual int get_ParentId();
    public sealed virtual INavigableContentType get_Type();
    public sealed virtual IList`1<int> get_ChildIds();
    [NullableContextAttribute("2")]
public sealed virtual object Value(int index);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Navigable.Source : object {
    private INavigableData _data;
    private bool _preview;
    private RootContent _root;
    public int LastAttributeIndex { get; }
    public INavigableContent Root { get; }
    public Source(INavigableData data, bool preview);
    public sealed virtual int get_LastAttributeIndex();
    [NullableContextAttribute("2")]
public sealed virtual INavigableContent Get(int id);
    public sealed virtual INavigableContent get_Root();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.NuCacheStartupHandler : object {
    private INuCacheContentService _nuCacheContentService;
    private IRuntimeState _runtimeState;
    public NuCacheStartupHandler(INuCacheContentService nuCacheContentService, IRuntimeState runtimeState);
    public sealed virtual void Handle(UmbracoApplicationStartingNotification notification);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.PublishedCache.Persistence.INuCacheContentRepository {
    public abstract virtual void DeleteContentItem(IContentBase item);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetAllContentSources();
    public abstract virtual IEnumerable`1<ContentNodeKit> GetAllMediaSources();
    public abstract virtual IEnumerable`1<ContentNodeKit> GetBranchContentSources(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetBranchMediaSources(int id);
    public abstract virtual ContentNodeKit GetContentSource(int id);
    public abstract virtual ContentNodeKit GetMediaSource(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetTypeContentSources(IEnumerable`1<int> ids);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetTypeMediaSources(IEnumerable`1<int> ids);
    public abstract virtual void RefreshContent(IContent content);
    public abstract virtual void RefreshMedia(IMedia content);
    public abstract virtual void RefreshMember(IMember content);
    [NullableContextAttribute("2")]
public abstract virtual void Rebuild(IReadOnlyCollection`1<int> contentTypeIds, IReadOnlyCollection`1<int> mediaTypeIds, IReadOnlyCollection`1<int> memberTypeIds);
    public abstract virtual bool VerifyContentDbCache();
    public abstract virtual bool VerifyMediaDbCache();
    public abstract virtual bool VerifyMemberDbCache();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Infrastructure.PublishedCache.Persistence.INuCacheContentService {
    public abstract virtual void RebuildDatabaseCacheIfSerializerChanged();
    public abstract virtual ContentNodeKit GetContentSource(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetAllContentSources();
    public abstract virtual IEnumerable`1<ContentNodeKit> GetBranchContentSources(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetTypeContentSources(IEnumerable`1<int> ids);
    public abstract virtual ContentNodeKit GetMediaSource(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetAllMediaSources();
    public abstract virtual IEnumerable`1<ContentNodeKit> GetBranchMediaSources(int id);
    public abstract virtual IEnumerable`1<ContentNodeKit> GetTypeMediaSources(IEnumerable`1<int> ids);
    public abstract virtual void DeleteContentItem(IContentBase item);
    public abstract virtual void DeleteContentItems(IEnumerable`1<IContentBase> items);
    public abstract virtual void RefreshContent(IContent content);
    public abstract virtual void RefreshMedia(IMedia media);
    public abstract virtual void RefreshMember(IMember member);
    [NullableContextAttribute("2")]
public abstract virtual void Rebuild(IReadOnlyCollection`1<int> contentTypeIds, IReadOnlyCollection`1<int> mediaTypeIds, IReadOnlyCollection`1<int> memberTypeIds);
    public abstract virtual bool VerifyContentDbCache();
    public abstract virtual bool VerifyMediaDbCache();
    public abstract virtual bool VerifyMemberDbCache();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository : RepositoryBase {
    private IContentCacheDataSerializerFactory _contentCacheDataSerializerFactory;
    private IDocumentRepository _documentRepository;
    private ILogger`1<NuCacheContentRepository> _logger;
    private IMediaRepository _mediaRepository;
    private IMemberRepository _memberRepository;
    private IOptions`1<NuCacheSettings> _nucacheSettings;
    private IShortStringHelper _shortStringHelper;
    private UrlSegmentProviderCollection _urlSegmentProviders;
    public NuCacheContentRepository(IScopeAccessor scopeAccessor, AppCaches appCaches, ILogger`1<NuCacheContentRepository> logger, IMemberRepository memberRepository, IDocumentRepository documentRepository, IMediaRepository mediaRepository, IShortStringHelper shortStringHelper, UrlSegmentProviderCollection urlSegmentProviders, IContentCacheDataSerializerFactory contentCacheDataSerializerFactory, IOptions`1<NuCacheSettings> nucacheSettings);
    public sealed virtual void DeleteContentItem(IContentBase item);
    public sealed virtual void RefreshContent(IContent content);
    public sealed virtual void RefreshMedia(IMedia media);
    public sealed virtual void RefreshMember(IMember member);
    [NullableContextAttribute("2")]
public sealed virtual void Rebuild(IReadOnlyCollection`1<int> contentTypeIds, IReadOnlyCollection`1<int> mediaTypeIds, IReadOnlyCollection`1<int> memberTypeIds);
    public sealed virtual bool VerifyContentDbCache();
    public sealed virtual bool VerifyMediaDbCache();
    public sealed virtual bool VerifyMemberDbCache();
    public sealed virtual ContentNodeKit GetContentSource(int id);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetAllContentSources>d__18")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetAllContentSources();
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetBranchContentSources>d__19")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetBranchContentSources(int id);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetTypeContentSources>d__20")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetTypeContentSources(IEnumerable`1<int> ids);
    public sealed virtual ContentNodeKit GetMediaSource(int id);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetAllMediaSources>d__22")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetAllMediaSources();
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetBranchMediaSources>d__23")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetBranchMediaSources(int id);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentRepository/<GetTypeMediaSources>d__24")]
public sealed virtual IEnumerable`1<ContentNodeKit> GetTypeMediaSources(IEnumerable`1<int> ids);
    public ContentNodeKit GetMediaSource(IScope scope, int id);
    private void OnRepositoryRefreshed(IContentCacheDataSerializer serializer, IContentBase content, bool published);
    private void RebuildContentDbCache(IContentCacheDataSerializer serializer, int groupSize, IReadOnlyCollection`1<int> contentTypeIds);
    private void RebuildMediaDbCache(IContentCacheDataSerializer serializer, int groupSize, IReadOnlyCollection`1<int> contentTypeIds);
    private void RebuildMemberDbCache(IContentCacheDataSerializer serializer, int groupSize, IReadOnlyCollection`1<int> contentTypeIds);
    private ContentNuDto GetDto(IContentBase content, bool published, IContentCacheDataSerializer serializer);
    private Sql`1<ISqlContext> SqlContentSourcesSelect(Func`2<ISqlContext, Sql`1<ISqlContext>> joins);
    private Sql`1<ISqlContext> SqlContentSourcesSelectUmbracoNodeJoin(ISqlContext sqlContext);
    private Sql`1<ISqlContext> SqlWhereNodeId(ISqlContext sqlContext, int id);
    private Sql`1<ISqlContext> SqlWhereNodeIdX(ISqlContext sqlContext, int id);
    private Sql`1<ISqlContext> SqlOrderByLevelIdSortOrder(ISqlContext sqlContext);
    private Sql`1<ISqlContext> SqlObjectTypeNotTrashed(ISqlContext sqlContext, Guid nodeObjectType);
    private Sql`1<ISqlContext> SqlContentSourcesCount(Func`2<ISqlContext, Sql`1<ISqlContext>> joins);
    private Sql`1<ISqlContext> SqlMediaSourcesSelect(Func`2<ISqlContext, Sql`1<ISqlContext>> joins);
    private Sql`1<ISqlContext> SqlMediaSourcesCount(Func`2<ISqlContext, Sql`1<ISqlContext>> joins);
    private ContentNodeKit CreateContentNodeKit(ContentSourceDto dto, IContentCacheDataSerializer serializer);
    private ContentNodeKit CreateMediaNodeKit(ContentSourceDto dto, IContentCacheDataSerializer serializer);
    private IEnumerable`1<ContentSourceDto> GetMediaNodeDtos(Sql`1<ISqlContext> sql);
    private IEnumerable`1<ContentSourceDto> GetContentNodeDtos(Sql`1<ISqlContext> sql, Sql`1<ISqlContext> sqlCount);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.Persistence.NuCacheContentService : RepositoryService {
    private static string NuCacheSerializerKey;
    private IKeyValueService _keyValueService;
    private ILogger`1<NuCacheContentService> _logger;
    private IOptions`1<NuCacheSettings> _nucacheSettings;
    private IProfilingLogger _profilingLogger;
    private INuCacheContentRepository _repository;
    public NuCacheContentService(INuCacheContentRepository repository, IKeyValueService keyValueService, ICoreScopeProvider provider, ILoggerFactory loggerFactory, IProfilingLogger profilingLogger, IEventMessagesFactory eventMessagesFactory, IOptions`1<NuCacheSettings> nucacheSettings);
    public sealed virtual void RebuildDatabaseCacheIfSerializerChanged();
    public sealed virtual IEnumerable`1<ContentNodeKit> GetAllContentSources();
    public sealed virtual IEnumerable`1<ContentNodeKit> GetAllMediaSources();
    public sealed virtual IEnumerable`1<ContentNodeKit> GetBranchContentSources(int id);
    public sealed virtual IEnumerable`1<ContentNodeKit> GetBranchMediaSources(int id);
    public sealed virtual ContentNodeKit GetContentSource(int id);
    public sealed virtual ContentNodeKit GetMediaSource(int id);
    public sealed virtual IEnumerable`1<ContentNodeKit> GetTypeContentSources(IEnumerable`1<int> ids);
    public sealed virtual IEnumerable`1<ContentNodeKit> GetTypeMediaSources(IEnumerable`1<int> ids);
    public sealed virtual void DeleteContentItem(IContentBase item);
    public sealed virtual void DeleteContentItems(IEnumerable`1<IContentBase> items);
    public sealed virtual void RefreshContent(IContent content);
    public sealed virtual void RefreshMedia(IMedia media);
    public sealed virtual void RefreshMember(IMember member);
    public void RebuildAll();
    [NullableContextAttribute("2")]
public sealed virtual void Rebuild(IReadOnlyCollection`1<int> contentTypeIds, IReadOnlyCollection`1<int> mediaTypeIds, IReadOnlyCollection`1<int> memberTypeIds);
    public sealed virtual bool VerifyContentDbCache();
    public sealed virtual bool VerifyMediaDbCache();
    public sealed virtual bool VerifyMemberDbCache();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[XmlTypeAttribute]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Property : PublishedPropertyBase {
    private PublishedContent _content;
    private Guid _contentUid;
    private bool _isMember;
    private bool _isPreviewing;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    [NullableAttribute("2")]
private object _sourceValue;
    private ContentVariation _variations;
    private ContentVariation _sourceVariations;
    [NullableAttribute("2")]
private CacheValues _cacheValues;
    private bool _interInitialized;
    [NullableAttribute("2")]
private object _interValue;
    private object _locko;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<CompositeStringStringKey, SourceInterValue> _sourceValues;
    [NullableAttribute("2")]
private string _valuesCacheKey;
    internal string ValuesCacheKey { get; }
    public Property(IPublishedPropertyType propertyType, PublishedContent content, IPublishedSnapshotAccessor publishedSnapshotAccessor, PropertyCacheLevel referenceCacheLevel);
    public Property(IPublishedPropertyType propertyType, PublishedContent content, PropertyData[] sourceValues, IPublishedSnapshotAccessor publishedSnapshotAccessor, PropertyCacheLevel referenceCacheLevel);
    public Property(Property origin, PublishedContent content);
    internal string get_ValuesCacheKey();
    [NullableContextAttribute("2")]
public virtual bool HasValue(string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object GetSourceValue(string culture, string segment);
    private CacheValues GetCacheValues(PropertyCacheLevel cacheLevel);
    private CacheValues GetCacheValues(IAppCache cache);
    [NullableContextAttribute("2")]
private object GetInterValue(string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object GetValue(string culture, string segment);
    [NullableContextAttribute("2")]
public virtual object GetDeliveryApiValue(bool expanding, string culture, string segment);
    private object GetDeliveryApiDefaultObject(CacheValue cacheValues, Func`1<object> getValue);
    private object GetDeliveryApiExpandedObject(CacheValue cacheValues, Func`1<object> getValue);
    private static ConcurrentDictionary`2<TKey, TValue> InitializeConcurrentDictionary();
    private void EnsureSourceValuesInitialized();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.PublishedContent : PublishedContentBase {
    private ContentNode _contentNode;
    [NullableAttribute("2")]
private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    [NullableAttribute("2")]
private string _urlSegment;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> <GetContentByIdFunc>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> <GetMediaByIdFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private ContentData <ContentData>k__BackingField;
    private static IReadOnlyDictionary`2<string, PublishedCultureInfo> EmptyCultures;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyDictionary`2<string, PublishedCultureInfo> _cultures;
    [CompilerGeneratedAttribute]
private IVariationContextAccessor <VariationContextAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private IPublishedProperty[] <PropertiesArray>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsPreviewing>k__BackingField;
    [NullableAttribute("2")]
private string _asPreviewingCacheKey;
    public IPublishedContentType ContentType { get; }
    public Guid Key { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> GetContentByIdFunc { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> GetMediaByIdFunc { get; internal set; }
    internal ContentData ContentData { get; }
    public int Id { get; }
    public int SortOrder { get; }
    public int Level { get; }
    public string Path { get; }
    public Nullable`1<int> TemplateId { get; }
    public int CreatorId { get; }
    public DateTime CreateDate { get; }
    public int WriterId { get; }
    public DateTime UpdateDate { get; }
    public IReadOnlyDictionary`2<string, PublishedCultureInfo> Cultures { get; }
    public PublishedItemType ItemType { get; }
    [NullableAttribute("2")]
public IPublishedContent Parent { get; }
    public IEnumerable`1<IPublishedContent> ChildrenForAllCultures { get; }
    public IEnumerable`1<IPublishedProperty> Properties { get; }
    internal IVariationContextAccessor VariationContextAccessor { get; }
    internal IPublishedProperty[] PropertiesArray { get; }
    internal int ParentId { get; }
    [NullableAttribute("2")]
internal IList`1<int> ChildIds { get; }
    internal bool IsPreviewing { get; }
    private string AsPreviewingCacheKey { get; }
    [NullableContextAttribute("2")]
public PublishedContent(ContentNode contentNode, ContentData contentData, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    public PublishedContent(ContentNode contentNode, PublishedContent origin, IVariationContextAccessor variationContextAccessor);
    private PublishedContent(PublishedContent origin);
    private static PublishedContent();
    public virtual IPublishedContentType get_ContentType();
    public virtual Guid get_Key();
    [CompilerGeneratedAttribute]
internal static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> get_GetContentByIdFunc();
    [CompilerGeneratedAttribute]
internal static void set_GetContentByIdFunc(Func`4<IPublishedSnapshot, bool, int, IPublishedContent> value);
    [CompilerGeneratedAttribute]
internal static Func`4<IPublishedSnapshot, bool, int, IPublishedContent> get_GetMediaByIdFunc();
    [CompilerGeneratedAttribute]
internal static void set_GetMediaByIdFunc(Func`4<IPublishedSnapshot, bool, int, IPublishedContent> value);
    private Func`4<IPublishedSnapshot, bool, int, IPublishedContent> GetGetterById();
    [CompilerGeneratedAttribute]
internal ContentData get_ContentData();
    public virtual int get_Id();
    public virtual int get_SortOrder();
    public virtual int get_Level();
    public virtual string get_Path();
    public virtual Nullable`1<int> get_TemplateId();
    public virtual int get_CreatorId();
    public virtual DateTime get_CreateDate();
    public virtual int get_WriterId();
    public virtual DateTime get_UpdateDate();
    public virtual IReadOnlyDictionary`2<string, PublishedCultureInfo> get_Cultures();
    public virtual PublishedItemType get_ItemType();
    [NullableContextAttribute("2")]
public virtual bool IsDraft(string culture);
    [NullableContextAttribute("2")]
public virtual bool IsPublished(string culture);
    [NullableContextAttribute("2")]
public virtual IPublishedContent get_Parent();
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.PublishedContent/<get_ChildrenForAllCultures>d__52")]
public virtual IEnumerable`1<IPublishedContent> get_ChildrenForAllCultures();
    public virtual IEnumerable`1<IPublishedProperty> get_Properties();
    public virtual IPublishedProperty GetProperty(string alias);
    [NullableContextAttribute("2")]
private IAppCache GetAppropriateCache();
    [NullableContextAttribute("2")]
private IAppCache GetCurrentSnapshotCache();
    [CompilerGeneratedAttribute]
internal IVariationContextAccessor get_VariationContextAccessor();
    [CompilerGeneratedAttribute]
internal IPublishedProperty[] get_PropertiesArray();
    internal int get_ParentId();
    [NullableContextAttribute("2")]
internal IList`1<int> get_ChildIds();
    [CompilerGeneratedAttribute]
internal bool get_IsPreviewing();
    private string get_AsPreviewingCacheKey();
    [NullableContextAttribute("2")]
internal IPublishedContent AsDraft();
    internal static PublishedContent UnwrapIPublishedContent(IPublishedContent content);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedProperty <.ctor>b__10_0(IPublishedProperty x);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private object <AsDraft>b__74_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.PublishedMember : PublishedContent {
    [CompilerGeneratedAttribute]
private IMember <Member>k__BackingField;
    public IMember Member { get; }
    public string Email { get; }
    public string UserName { get; }
    [NullableAttribute("2")]
public string Comments { get; }
    public bool IsApproved { get; }
    public bool IsLockedOut { get; }
    public Nullable`1<DateTime> LastLockoutDate { get; }
    public DateTime CreationDate { get; }
    public Nullable`1<DateTime> LastLoginDate { get; }
    public Nullable`1<DateTime> LastPasswordChangedDate { get; }
    private PublishedMember(IMember member, ContentNode contentNode, ContentData contentData, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    public static IPublishedContent Create(IMember member, IPublishedContentType contentType, bool previewing, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IPublishedModelFactory publishedModelFactory);
    private static Dictionary`2<string, PropertyData[]> GetPropertyValues(IPublishedContentType contentType, IMember member);
    private static void AddIf(IPublishedContentType contentType, IDictionary`2<string, PropertyData[]> properties, string alias, object value);
    [CompilerGeneratedAttribute]
public IMember get_Member();
    public string get_Email();
    public string get_UserName();
    [NullableContextAttribute("2")]
public string get_Comments();
    public bool get_IsApproved();
    public bool get_IsLockedOut();
    public Nullable`1<DateTime> get_LastLockoutDate();
    public DateTime get_CreationDate();
    public Nullable`1<DateTime> get_LastLoginDate();
    public Nullable`1<DateTime> get_LastPasswordChangedDate();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshot : object {
    private PublishedSnapshotService _service;
    private bool _defaultPreview;
    private PublishedSnapshotElements _elements;
    private bool _disposed;
    [NullableAttribute("1")]
private PublishedSnapshotElements Elements { get; }
    public IAppCache SnapshotCache { get; }
    public IAppCache ElementsCache { get; }
    public IPublishedContentCache Content { get; }
    public IPublishedMediaCache Media { get; }
    public IPublishedMemberCache Members { get; }
    public IDomainCache Domains { get; }
    [NullableContextAttribute("1")]
public PublishedSnapshot(IPublishedSnapshotService service, bool defaultPreview);
    [NullableContextAttribute("1")]
private PublishedSnapshotElements get_Elements();
    public void Resync();
    public sealed virtual IAppCache get_SnapshotCache();
    public sealed virtual IAppCache get_ElementsCache();
    public sealed virtual IPublishedContentCache get_Content();
    public sealed virtual IPublishedMediaCache get_Media();
    public sealed virtual IPublishedMemberCache get_Members();
    public sealed virtual IDomainCache get_Domains();
    [NullableContextAttribute("1")]
public sealed virtual IDisposable ForcedPreview(bool preview, Action`1<bool> callback);
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshotService : object {
    public static bool FullCacheWhenPreviewing;
    private NuCacheSettings _config;
    private ContentDataSerializer _contentDataSerializer;
    private IDefaultCultureAccessor _defaultCultureAccessor;
    private object _elementsLock;
    private GlobalSettings _globalSettings;
    private IHostingEnvironment _hostingEnvironment;
    private ILogger`1<PublishedSnapshotService> _logger;
    private ILoggerFactory _loggerFactory;
    private IMainDom _mainDom;
    private PublishedSnapshotServiceOptions _options;
    private IProfilingLogger _profilingLogger;
    private INuCacheContentService _publishedContentService;
    private IPublishedContentTypeFactory _publishedContentTypeFactory;
    private IPublishedModelFactory _publishedModelFactory;
    private IPublishedSnapshotAccessor _publishedSnapshotAccessor;
    private IScopeProvider _scopeProvider;
    private ServiceContext _serviceContext;
    private object _storesLock;
    private ISyncBootStateAccessor _syncBootStateAccessor;
    private IVariationContextAccessor _variationContextAccessor;
    private long _contentGen;
    private ContentStore _contentStore;
    private long _domainGen;
    private SnapDictionary`2<int, Domain> _domainStore;
    [NullableAttribute("2")]
private IAppCache _elementsCache;
    private bool _isReadSet;
    private bool _isReady;
    [NullableAttribute("2")]
private object _isReadyLock;
    private bool _mainDomRegistered;
    [NullableAttribute("2")]
private BPlusTree`2<int, ContentNodeKit> _localContentDb;
    private bool _localContentDbExists;
    [NullableAttribute("2")]
private BPlusTree`2<int, ContentNodeKit> _localMediaDb;
    private bool _localMediaDbExists;
    private long _mediaGen;
    private ContentStore _mediaStore;
    private string LocalFilePath { get; }
    [NullableAttribute("2")]
protected PublishedSnapshot CurrentPublishedSnapshot { get; }
    public PublishedSnapshotService(PublishedSnapshotServiceOptions options, ISyncBootStateAccessor syncBootStateAccessor, IMainDom mainDom, ServiceContext serviceContext, IPublishedContentTypeFactory publishedContentTypeFactory, IPublishedSnapshotAccessor publishedSnapshotAccessor, IVariationContextAccessor variationContextAccessor, IProfilingLogger profilingLogger, ILoggerFactory loggerFactory, IScopeProvider scopeProvider, INuCacheContentService publishedContentService, IDefaultCultureAccessor defaultCultureAccessor, IOptions`1<GlobalSettings> globalSettings, IPublishedModelFactory publishedModelFactory, IHostingEnvironment hostingEnvironment, IOptions`1<NuCacheSettings> config, ContentDataSerializer contentDataSerializer);
    private static PublishedSnapshotService();
    private string get_LocalFilePath();
    [NullableContextAttribute("2")]
protected PublishedSnapshot get_CurrentPublishedSnapshot();
    public sealed virtual void Notify(JsonPayload[] payloads, Boolean& draftChanged, Boolean& publishedChanged);
    public sealed virtual void Notify(JsonPayload[] payloads, Boolean& anythingChanged);
    public sealed virtual void Notify(JsonPayload[] payloads);
    public sealed virtual void Notify(JsonPayload[] payloads);
    public sealed virtual void Notify(JsonPayload[] payloads);
    public sealed virtual IPublishedSnapshot CreatePublishedSnapshot(string previewToken);
    [NullableContextAttribute("2")]
public sealed virtual void Rebuild(IReadOnlyCollection`1<int> contentTypeIds, IReadOnlyCollection`1<int> mediaTypeIds, IReadOnlyCollection`1<int> memberTypeIds);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshotService/<CollectAsync>d__48")]
public sealed virtual Task CollectAsync();
    public sealed virtual void Dispose();
    public PublishedSnapshotElements GetElements(bool previewDefault);
    internal int GetDocumentId(Guid udi);
    internal int GetMediaId(Guid udi);
    internal Guid GetDocumentUid(int id);
    internal Guid GetMediaUid(int id);
    public sealed virtual void ResetLocalDb();
    internal void EnsureCaches();
    [NullableContextAttribute("2")]
private int GetId(ContentStore store, Guid uid);
    [NullableContextAttribute("2")]
private Guid GetUid(ContentStore store, int id);
    private void MainDomRegister();
    private void MainDomRelease();
    private string GetAndEnsureLocalFilesPathExists();
    private bool LockAndLoadContent(Func`1<bool> action);
    private bool LoadContentFromDatabaseLocked(bool onStartup);
    private bool LoadContentFromLocalDbLocked(bool onStartup);
    private bool LockAndLoadMedia(Func`1<bool> action);
    private bool LoadMediaFromDatabaseLocked(bool onStartup);
    private bool LoadMediaFromLocalDbLocked(bool onStartup);
    private bool LoadEntitiesFromLocalDbLocked(bool onStartup, BPlusTree`2<int, ContentNodeKit> localDb, ContentStore store, string entityType);
    private void LockAndLoadDomains();
    private void LoadDomainsLocked();
    private void NotifyLocked(IEnumerable`1<JsonPayload> payloads, Boolean& draftChanged, Boolean& publishedChanged);
    private void NotifyLocked(IEnumerable`1<JsonPayload> payloads, Boolean& anythingChanged);
    private void Notify(ContentStore store, JsonPayload[] payloads, Action`4<List`1<int>, List`1<int>, List`1<int>, List`1<int>> action);
    [NullableContextAttribute("2")]
private void AddToList(List`1& list, int val);
    private List`1<int> GetOrCreateList(List`1& list);
    private IReadOnlyCollection`1<IPublishedContentType> CreateContentTypes(PublishedItemType itemType, Int32[] ids);
    [NullableContextAttribute("2")]
private IPublishedContentType CreateContentType(PublishedItemType itemType, int id);
    [NullableContextAttribute("2")]
private void RefreshContentTypesLocked(List`1<int> removedIds, List`1<int> refreshedIds, List`1<int> otherIds, List`1<int> newIds);
    [NullableContextAttribute("2")]
private void RefreshMediaTypesLocked(List`1<int> removedIds, List`1<int> refreshedIds, List`1<int> otherIds, List`1<int> newIds);
    internal ContentStore GetContentStore();
    [NullableContextAttribute("2")]
internal ContentStore GetMediaStore();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private IPublishedContentType <Notify>b__44_1(int id);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private IPublishedContentType <Notify>b__44_2(int id);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private PublishedSnapshotService <GetElements>b__50_0();
    [CompilerGeneratedAttribute]
private bool <EnsureCaches>b__56_0();
    [CompilerGeneratedAttribute]
private bool <EnsureCaches>b__56_1();
    [CompilerGeneratedAttribute]
private bool <EnsureCaches>b__56_2();
    [CompilerGeneratedAttribute]
private bool <EnsureCaches>b__56_3();
    [CompilerGeneratedAttribute]
private bool <EnsureCaches>b__56_4();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedContentType <LoadContentFromDatabaseLocked>b__63_0(IContentType x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedContentType <LoadContentFromLocalDbLocked>b__64_0(IContentType x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedContentType <LoadMediaFromDatabaseLocked>b__66_0(IMediaType x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedContentType <LoadMediaFromLocalDbLocked>b__67_0(IMediaType x);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private IPublishedContentType <CreateContentTypes>b__76_0(IContentTypeComposition x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshotServiceEventHandler : object {
    private INuCacheContentService _publishedContentService;
    private IPublishedSnapshotService _publishedSnapshotService;
    public PublishedSnapshotServiceEventHandler(IPublishedSnapshotService publishedSnapshotService, INuCacheContentService publishedContentService);
    [ObsoleteAttribute("Please use alternative constructor.")]
public PublishedSnapshotServiceEventHandler(IRuntimeState runtime, IPublishedSnapshotService publishedSnapshotService, INuCacheContentService publishedContentService, IContentService contentService, IMediaService mediaService);
    public sealed virtual void Handle(ContentRefreshNotification notification);
    public sealed virtual void Handle(ContentTypeRefreshedNotification notification);
    public sealed virtual void Handle(LanguageSavedNotification notification);
    public sealed virtual void Handle(MediaRefreshNotification notification);
    public sealed virtual void Handle(MediaTypeRefreshedNotification notification);
    public sealed virtual void Handle(MemberDeletingNotification notification);
    public sealed virtual void Handle(MemberRefreshNotification notification);
    public sealed virtual void Handle(MemberTypeRefreshedNotification notification);
    public sealed virtual void Handle(ScopedEntityRemoveNotification notification);
}
public class Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshotServiceOptions : object {
    [CompilerGeneratedAttribute]
private bool <IgnoreLocalDb>k__BackingField;
    public bool IgnoreLocalDb { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IgnoreLocalDb();
    [CompilerGeneratedAttribute]
public void set_IgnoreLocalDb(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.PublishedSnapshotStatus : object {
    private INuCacheContentService _publishedContentService;
    [NullableAttribute("2")]
private PublishedSnapshotService _service;
    public PublishedSnapshotStatus(IPublishedSnapshotService service, INuCacheContentService publishedContentService);
    public sealed virtual string GetStatus();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.ReservedFieldNamesService : object {
    private ContentPropertySettings _contentPropertySettings;
    private MemberPropertySettings _memberPropertySettings;
    private MediaPropertySettings _mediaPropertySettings;
    public ReservedFieldNamesService(IOptions`1<ContentPropertySettings> contentPropertySettings, IOptions`1<MemberPropertySettings> memberPropertySettings, IOptions`1<MediaPropertySettings> mediaPropertySettings);
    public sealed virtual ISet`1<string> GetDocumentReservedFieldNames();
    public sealed virtual ISet`1<string> GetMediaReservedFieldNames();
    public sealed virtual ISet`1<string> GetMemberReservedFieldNames();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Snap.GenObj : object {
    public long Gen;
    public WeakReference WeakGenRef;
    public int Count;
    public GenObj(long gen);
    public GenRef GetGenRef();
    public void Reference();
    public void Release();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Snap.GenRef : object {
    public GenObj GenObj;
    public long Gen { get; }
    public GenRef(GenObj genObj);
    public long get_Gen();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Infrastructure.PublishedCache.Snap.LinkedNode`1 : object {
    public long Gen;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public LinkedNode`1 modreq(System.Runtime.CompilerServices.IsVolatile) Next;
    public TValue modreq(System.Runtime.CompilerServices.IsVolatile) Value;
    public LinkedNode`1(TValue value, long gen, LinkedNode`1<TValue> next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Infrastructure.PublishedCache.SnapDictionary`2 : object {
    private static TimeSpan _monitorTimeout;
    private static long CollectMinGenDelta;
    private ConcurrentQueue`1<GenObj> _genObjs;
    private ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> _items;
    private object _rlocko;
    private object _wlocko;
    [NullableAttribute("2")]
private Task _collectTask;
    [NullableAttribute("2")]
private GenObj _genObj;
    private long _liveGen;
    private long _floorGen;
    private bool _nextGen;
    private bool _collectAuto;
    private string _instanceId;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private TestHelper<TKey, TValue> _unitTesting;
    public int Count { get; }
    public long GenCount { get; }
    public long SnapCount { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal TestHelper<TKey, TValue> Test { get; }
    private static SnapDictionary`2();
    public IDisposable GetScopedWriteLock(ICoreScopeProvider scopeProvider);
    private void EnsureLocked();
    private void Lock(WriteLockInfo<TKey, TValue> lockInfo, bool forceGen);
    private void Release(WriteLockInfo<TKey, TValue> lockInfo, bool commit);
    public int get_Count();
    private LinkedNode`1<TValue> GetHead(TKey key);
    public void SetLocked(TKey key, TValue value);
    public void ClearLocked(TKey key);
    public void ClearLocked();
    public TValue Get(TKey key, long gen);
    [IteratorStateMachineAttribute("Umbraco.Cms.Infrastructure.PublishedCache.SnapDictionary`2/<GetAll>d__28")]
public IEnumerable`1<TValue> GetAll(long gen);
    public bool IsEmpty(long gen);
    public Snapshot<TKey, TValue> CreateSnapshot();
    public Task CollectAsync();
    private Task CollectAsyncLocked();
    private void Collect();
    private void Collect(ConcurrentDictionary`2<TKey, LinkedNode`1<TValue>> dict);
    public long get_GenCount();
    public long get_SnapCount();
    internal TestHelper<TKey, TValue> get_Test();
    [CompilerGeneratedAttribute]
private ScopedWriteLock<TKey, TValue> <GetScopedWriteLock>b__17_0(bool scoped);
    [CompilerGeneratedAttribute]
private void <CollectAsyncLocked>b__32_0();
    [CompilerGeneratedAttribute]
private void <CollectAsyncLocked>b__32_1(Task _);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoBuilderExtensions : object {
    [ExtensionAttribute]
public static IUmbracoBuilder AddNuCache(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddNuCacheNotifications(IUmbracoBuilder builder);
}
