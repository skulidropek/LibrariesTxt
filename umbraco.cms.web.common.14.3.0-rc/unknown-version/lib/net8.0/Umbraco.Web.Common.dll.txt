[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.Hosting.HostBuilderExtensions : object {
    [ExtensionAttribute]
public static IHostBuilder ConfigureUmbracoDefaults(IHostBuilder builder);
    [ExtensionAttribute]
internal static IHostBuilder ConfigureUmbracoDefaults(IHostBuilder builder, bool addRuntimeHostedService);
    private static void OnHostBuilt(IHost host);
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.6.139.59561")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Core.Cache.HttpContextRequestAppCache : FastDictionaryAppCacheBase {
    private IHttpContextAccessor _httpContextAccessor;
    public bool IsAvailable { get; }
    public HttpContextRequestAppCache(IHttpContextAccessor httpContextAccessor);
    public sealed virtual bool get_IsAvailable();
    public virtual object Get(string key, Func`1<object> factory);
    public sealed virtual bool Set(string key, object value);
    public sealed virtual bool Remove(string key);
    [IteratorStateMachineAttribute("Umbraco.Cms.Core.Cache.HttpContextRequestAppCache/<GetEnumerator>d__7")]
public sealed virtual IEnumerator`1<KeyValuePair`2<string, object>> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    private bool TryGetContextItems(IDictionary`2& items);
    [NullableContextAttribute("2")]
private object GetLock();
    protected virtual IEnumerable`1<KeyValuePair`2<object, object>> GetDictionaryEntries();
    protected virtual void RemoveEntry(string key);
    protected virtual object GetEntry(string key);
    protected virtual void EnterReadLock();
    protected virtual void EnterWriteLock();
    protected virtual void ExitReadLock();
    protected virtual void ExitWriteLock();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Security.TwoFactorBackOfficeValidationProvider`1 : TwoFactorValidationProvider`2<BackOfficeIdentityUser, TTwoFactorSetupGenerator> {
    public TwoFactorBackOfficeValidationProvider`1(IDataProtectionProvider dataProtectionProvider, IOptions`1<DataProtectionTokenProviderOptions> options, ILogger`1<TwoFactorBackOfficeValidationProvider`1<TTwoFactorSetupGenerator>> logger, ITwoFactorLoginService twoFactorLoginService, TTwoFactorSetupGenerator generator);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Security.TwoFactorMemberValidationProvider`1 : TwoFactorValidationProvider`2<MemberIdentityUser, TTwoFactorSetupGenerator> {
    public TwoFactorMemberValidationProvider`1(IDataProtectionProvider dataProtectionProvider, IOptions`1<DataProtectionTokenProviderOptions> options, ILogger`1<TwoFactorMemberValidationProvider`1<TTwoFactorSetupGenerator>> logger, ITwoFactorLoginService twoFactorLoginService, TTwoFactorSetupGenerator generator);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Infrastructure.Security.TwoFactorValidationProvider`2 : DataProtectorTokenProvider`1<TUmbracoIdentityUser> {
    private TTwoFactorSetupGenerator _generator;
    private ITwoFactorLoginService _twoFactorLoginService;
    protected TwoFactorValidationProvider`2(IDataProtectionProvider dataProtectionProvider, IOptions`1<DataProtectionTokenProviderOptions> options, ILogger`1<TwoFactorValidationProvider`2<TUmbracoIdentityUser, TTwoFactorSetupGenerator>> logger, ITwoFactorLoginService twoFactorLoginService, TTwoFactorSetupGenerator generator);
    public virtual Task`1<bool> CanGenerateTwoFactorTokenAsync(UserManager`1<TUmbracoIdentityUser> manager, TUmbracoIdentityUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Infrastructure.Security.TwoFactorValidationProvider`2/<ValidateAsync>d__4")]
public virtual Task`1<bool> ValidateAsync(string purpose, string token, UserManager`1<TUmbracoIdentityUser> manager, TUmbracoIdentityUser user);
    protected Guid GetUserKey(TUmbracoIdentityUser user);
}
public class Umbraco.Cms.Web.Common.ActionsResults.MaintenanceResult : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.ActionsResults.MaintenanceResult/<ExecuteResultAsync>d__0")]
public sealed virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ActionsResults.PublishedContentNotFoundResult : object {
    [NullableAttribute("2")]
private string _message;
    private IUmbracoContext _umbracoContext;
    public PublishedContentNotFoundResult(IUmbracoContext umbracoContext, string message);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.ActionsResults.PublishedContentNotFoundResult/<ExecuteResultAsync>d__3")]
public sealed virtual Task ExecuteResultAsync(ActionContext context);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoApplicationBuilder {
    public abstract virtual IUmbracoEndpointBuilder WithCustomMiddleware(Action`1<IUmbracoApplicationBuilderContext> configureUmbracoMiddleware);
    public abstract virtual IUmbracoEndpointBuilder WithMiddleware(Action`1<IUmbracoApplicationBuilderContext> configureUmbracoMiddleware);
}
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoApplicationBuilderContext {
    public abstract virtual void UseUmbracoCoreMiddleware();
    public abstract virtual void RunPrePipeline();
    public virtual void RunPreRouting();
    public virtual void RunPostRouting();
    public abstract virtual void RunPostPipeline();
    public abstract virtual void RegisterDefaultRequiredMiddleware();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoApplicationBuilderServices {
    public IApplicationBuilder AppBuilder { get; }
    public IServiceProvider ApplicationServices { get; }
    public IRuntimeState RuntimeState { get; }
    public abstract virtual IApplicationBuilder get_AppBuilder();
    public abstract virtual IServiceProvider get_ApplicationServices();
    public abstract virtual IRuntimeState get_RuntimeState();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoEndpointBuilder {
    public abstract virtual void WithEndpoints(Action`1<IUmbracoEndpointBuilderContext> configureUmbraco);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoEndpointBuilderContext {
    public IEndpointRouteBuilder EndpointRouteBuilder { get; }
    public abstract virtual IEndpointRouteBuilder get_EndpointRouteBuilder();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.ApplicationBuilder.IUmbracoPipelineFilter {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual void OnPrePipeline(IApplicationBuilder app);
    public virtual void OnPreRouting(IApplicationBuilder app);
    public virtual void OnPostRouting(IApplicationBuilder app);
    public abstract virtual void OnPostPipeline(IApplicationBuilder app);
    public abstract virtual void OnEndpoints(IApplicationBuilder app);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ApplicationBuilder.UmbracoApplicationBuilder : object {
    private IOptions`1<UmbracoPipelineOptions> _umbracoPipelineStartupOptions;
    [CompilerGeneratedAttribute]
private IServiceProvider <ApplicationServices>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeState <RuntimeState>k__BackingField;
    [CompilerGeneratedAttribute]
private IApplicationBuilder <AppBuilder>k__BackingField;
    public IServiceProvider ApplicationServices { get; }
    public IRuntimeState RuntimeState { get; }
    public IApplicationBuilder AppBuilder { get; }
    public UmbracoApplicationBuilder(IApplicationBuilder appBuilder);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ApplicationServices();
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeState get_RuntimeState();
    [CompilerGeneratedAttribute]
public sealed virtual IApplicationBuilder get_AppBuilder();
    public sealed virtual IUmbracoEndpointBuilder WithCustomMiddleware(Action`1<IUmbracoApplicationBuilderContext> configureUmbracoMiddleware);
    public sealed virtual IUmbracoEndpointBuilder WithMiddleware(Action`1<IUmbracoApplicationBuilderContext> configureUmbracoMiddleware);
    public sealed virtual void RegisterDefaultRequiredMiddleware();
    public sealed virtual void UseUmbracoCoreMiddleware();
    public sealed virtual void RunPrePipeline();
    public sealed virtual void RunPreRouting();
    public sealed virtual void RunPostRouting();
    public sealed virtual void RunPostPipeline();
    public sealed virtual void WithEndpoints(Action`1<IUmbracoEndpointBuilderContext> configureUmbraco);
    private void RunPreEndpointsPipeline();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ApplicationBuilder.UmbracoEndpointBuilder : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ApplicationServices>k__BackingField;
    [CompilerGeneratedAttribute]
private IEndpointRouteBuilder <EndpointRouteBuilder>k__BackingField;
    [CompilerGeneratedAttribute]
private IRuntimeState <RuntimeState>k__BackingField;
    [CompilerGeneratedAttribute]
private IApplicationBuilder <AppBuilder>k__BackingField;
    public IServiceProvider ApplicationServices { get; }
    public IEndpointRouteBuilder EndpointRouteBuilder { get; }
    public IRuntimeState RuntimeState { get; }
    public IApplicationBuilder AppBuilder { get; }
    public UmbracoEndpointBuilder(IServiceProvider services, IRuntimeState runtimeState, IApplicationBuilder appBuilder, IEndpointRouteBuilder endpointRouteBuilder);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ApplicationServices();
    [CompilerGeneratedAttribute]
public sealed virtual IEndpointRouteBuilder get_EndpointRouteBuilder();
    [CompilerGeneratedAttribute]
public sealed virtual IRuntimeState get_RuntimeState();
    [CompilerGeneratedAttribute]
public sealed virtual IApplicationBuilder get_AppBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ApplicationBuilder.UmbracoPipelineFilter : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PrePipeline>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PreRouting>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PostRouting>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PostPipeline>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <Endpoints>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PrePipeline { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PreRouting { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PostRouting { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PostPipeline { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> Endpoints { get; public set; }
    public string Name { get; }
    public UmbracoPipelineFilter(string name);
    public UmbracoPipelineFilter(string name, Action`1<IApplicationBuilder> prePipeline, Action`1<IApplicationBuilder> preRouting, Action`1<IApplicationBuilder> postRouting, Action`1<IApplicationBuilder> postPipeline, Action`1<IApplicationBuilder> endpoints);
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_PrePipeline();
    [CompilerGeneratedAttribute]
public void set_PrePipeline(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_PreRouting();
    [CompilerGeneratedAttribute]
public void set_PreRouting(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_PostRouting();
    [CompilerGeneratedAttribute]
public void set_PostRouting(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_PostPipeline();
    [CompilerGeneratedAttribute]
public void set_PostPipeline(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public Action`1<IApplicationBuilder> get_Endpoints();
    [CompilerGeneratedAttribute]
public void set_Endpoints(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public sealed virtual void OnPrePipeline(IApplicationBuilder app);
    public sealed virtual void OnPreRouting(IApplicationBuilder app);
    public sealed virtual void OnPostRouting(IApplicationBuilder app);
    public sealed virtual void OnPostPipeline(IApplicationBuilder app);
    public sealed virtual void OnEndpoints(IApplicationBuilder app);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ApplicationBuilder.UmbracoPipelineOptions : object {
    [CompilerGeneratedAttribute]
private IList`1<IUmbracoPipelineFilter> <PipelineFilters>k__BackingField;
    public IList`1<IUmbracoPipelineFilter> PipelineFilters { get; }
    [CompilerGeneratedAttribute]
public IList`1<IUmbracoPipelineFilter> get_PipelineFilters();
    public void AddFilter(IUmbracoPipelineFilter filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ApplicationModels.VirtualPageApplicationModelProvider : object {
    private List`1<IActionModelConvention> _actionModelConventions;
    public int Order { get; }
    public sealed virtual int get_Order();
    public sealed virtual void OnProvidersExecuted(ApplicationModelProviderContext context);
    public sealed virtual void OnProvidersExecuting(ApplicationModelProviderContext context);
    private bool IsVirtualPageController(ControllerModel controller);
}
public class Umbraco.Cms.Web.Common.ApplicationModels.VirtualPageConvention : object {
    [NullableContextAttribute("1")]
public sealed virtual void Apply(ActionModel action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.AspNetCore.ApplicationUrlRequestBeginNotificationHandler : object {
    private IRequestAccessor _requestAccessor;
    public ApplicationUrlRequestBeginNotificationHandler(IRequestAccessor requestAccessor);
    public sealed virtual void Handle(UmbracoRequestBeginNotification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreApplicationShutdownRegistry : object {
    private IHostApplicationLifetime _hostApplicationLifetime;
    private ConcurrentDictionary`2<IRegisteredObject, RegisteredObjectWrapper> _registeredObjects;
    public AspNetCoreApplicationShutdownRegistry(IHostApplicationLifetime hostApplicationLifetime);
    public sealed virtual void RegisterObject(IRegisteredObject registeredObject);
    public sealed virtual void UnregisterObject(IRegisteredObject registeredObject);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreBackOfficeInfo : object {
    private IOptionsMonitor`1<GlobalSettings> _globalSettings;
    private IHostingEnvironment _hostingEnvironment;
    [NullableAttribute("2")]
private string _getAbsoluteUrl;
    public string GetAbsoluteUrl { get; }
    public AspNetCoreBackOfficeInfo(IOptionsMonitor`1<GlobalSettings> globalSettings, IHostingEnvironment hostingEnviroment);
    public sealed virtual string get_GetAbsoluteUrl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreCookieManager : object {
    private IHttpContextAccessor _httpContextAccessor;
    public AspNetCoreCookieManager(IHttpContextAccessor httpContextAccessor);
    public sealed virtual void ExpireCookie(string cookieName);
    public sealed virtual string GetCookieValue(string cookieName);
    public sealed virtual void SetCookieValue(string cookieName, string value, bool httpOnly);
    public sealed virtual bool HasCookie(string cookieName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreHostingEnvironment : object {
    [NullableAttribute("2")]
private IApplicationDiscriminator _applicationDiscriminator;
    private ConcurrentHashSet`1<Uri> _applicationUrls;
    private IOptionsMonitor`1<HostingSettings> _hostingSettings;
    private IWebHostEnvironment _webHostEnvironment;
    private IOptionsMonitor`1<WebRoutingSettings> _webRoutingSettings;
    private UrlMode _urlProviderMode;
    [NullableAttribute("2")]
private string _applicationId;
    [NullableAttribute("2")]
private string _localTempPath;
    [CompilerGeneratedAttribute]
private bool <IsHosted>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <ApplicationMainUrl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <SiteName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationPhysicalPath>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDebugMode>k__BackingField;
    public bool IsHosted { get; }
    public Uri ApplicationMainUrl { get; private set; }
    [NullableAttribute("2")]
public string SiteName { get; private set; }
    public string ApplicationId { get; }
    public string ApplicationPhysicalPath { get; }
    public string ApplicationVirtualPath { get; }
    public bool IsDebugMode { get; private set; }
    public string LocalTempPath { get; }
    public AspNetCoreHostingEnvironment(IOptionsMonitor`1<HostingSettings> hostingSettings, IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings, IWebHostEnvironment webHostEnvironment, IApplicationDiscriminator applicationDiscriminator);
    public AspNetCoreHostingEnvironment(IOptionsMonitor`1<HostingSettings> hostingSettings, IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings, IWebHostEnvironment webHostEnvironment);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsHosted();
    [CompilerGeneratedAttribute]
public sealed virtual Uri get_ApplicationMainUrl();
    [CompilerGeneratedAttribute]
private void set_ApplicationMainUrl(Uri value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_SiteName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_SiteName(string value);
    public sealed virtual string get_ApplicationId();
    [CompilerGeneratedAttribute]
public sealed virtual string get_ApplicationPhysicalPath();
    public sealed virtual string get_ApplicationVirtualPath();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsDebugMode();
    [CompilerGeneratedAttribute]
private void set_IsDebugMode(bool value);
    public sealed virtual string get_LocalTempPath();
    public sealed virtual string MapPathWebRoot(string path);
    public sealed virtual string MapPathContentRoot(string path);
    public sealed virtual string ToAbsolute(string virtualPath);
    [NullableContextAttribute("2")]
public sealed virtual void EnsureApplicationMainUrl(Uri currentApplicationUrl);
    private void SetSiteNameAndDebugMode(HostingSettings hostingSettings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__9_0(HostingSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreIpResolver : object {
    private IHttpContextAccessor _httpContextAccessor;
    public AspNetCoreIpResolver(IHttpContextAccessor httpContextAccessor);
    public sealed virtual string GetCurrentRequestIpAddress();
}
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreMarchal : object {
    public sealed virtual IntPtr GetExceptionPointers();
}
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCorePasswordHasher : object {
    [NullableAttribute("1")]
private PasswordHasher`1<object> _underlyingHasher;
    [NullableContextAttribute("1")]
public sealed virtual string HashPassword(string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreRequestAccessor : object {
    private ISet`1<string> _applicationUrls;
    private IHttpContextAccessor _httpContextAccessor;
    [NullableAttribute("2")]
private Uri _currentApplicationUrl;
    private bool _hasAppUrl;
    private object _initLocker;
    private bool _isInit;
    private WebRoutingSettings _webRoutingSettings;
    [NullableAttribute("2")]
private IDisposable _onChangeDisposable;
    public AspNetCoreRequestAccessor(IHttpContextAccessor httpContextAccessor, IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings);
    public sealed virtual string GetRequestValue(string name);
    public sealed virtual string GetQueryStringValue(string name);
    [NullableContextAttribute("2")]
public sealed virtual Uri GetRequestUrl();
    internal void EnsureApplicationUrl();
    [NullableContextAttribute("2")]
public Uri GetApplicationUrl();
    private string GetFormValue(string name);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__8_0(WebRoutingSettings x);
    [CompilerGeneratedAttribute]
private bool <EnsureApplicationUrl>b__12_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreSessionManager : object {
    private IHttpContextAccessor _httpContextAccessor;
    [NullableAttribute("2")]
public string SessionId { get; }
    private bool IsSessionsAvailable { get; }
    public AspNetCoreSessionManager(IHttpContextAccessor httpContextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual string get_SessionId();
    private bool get_IsSessionsAvailable();
    public sealed virtual string GetSessionValue(string key);
    public sealed virtual void SetSessionValue(string key, string value);
    public sealed virtual void ClearSessionValue(string key);
}
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreUmbracoApplicationLifetime : object {
    [NullableAttribute("1")]
private IHostApplicationLifetime _hostApplicationLifetime;
    [CompilerGeneratedAttribute]
private bool <IsRestarting>k__BackingField;
    public bool IsRestarting { get; public set; }
    [NullableContextAttribute("1")]
public AspNetCoreUmbracoApplicationLifetime(IHostApplicationLifetime hostApplicationLifetime);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsRestarting();
    [CompilerGeneratedAttribute]
public void set_IsRestarting(bool value);
    public sealed virtual void Restart();
}
public class Umbraco.Cms.Web.Common.AspNetCore.AspNetCoreUserAgentProvider : object {
    [NullableAttribute("1")]
private IHttpContextAccessor _httpContextAccessor;
    [NullableContextAttribute("1")]
public AspNetCoreUserAgentProvider(IHttpContextAccessor httpContextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual string GetUserAgent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("Please let the container wire up a real OptionsMonitor for you")]
internal class Umbraco.Cms.Web.Common.AspNetCore.OptionsMonitorAdapter`1 : object {
    [CompilerGeneratedAttribute]
private T <CurrentValue>k__BackingField;
    public T CurrentValue { get; }
    public OptionsMonitorAdapter`1(T inner);
    [CompilerGeneratedAttribute]
public sealed virtual T get_CurrentValue();
    public sealed virtual T Get(string name);
    public sealed virtual IDisposable OnChange(Action`2<T, string> listener);
}
[AttributeUsageAttribute("64")]
public class Umbraco.Cms.Web.Common.Attributes.IgnoreFromNotFoundSelectorPolicyAttribute : Attribute {
}
[AttributeUsageAttribute("4")]
public class Umbraco.Cms.Web.Common.Attributes.IsBackOfficeAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Umbraco.Cms.Web.Common.Attributes.PluginControllerAttribute : AreaAttribute {
    [CompilerGeneratedAttribute]
private string <AreaName>k__BackingField;
    public string AreaName { get; }
    public PluginControllerAttribute(string areaName);
    [CompilerGeneratedAttribute]
public string get_AreaName();
}
[AttributeUsageAttribute("4")]
[ObsoleteAttribute("No-op attribute. Will be removed in Umbraco 15.")]
public class Umbraco.Cms.Web.Common.Attributes.UmbracoApiControllerAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Umbraco.Cms.Web.Common.Authorization.AuthorizationPolicies : object {
    public static string UmbracoFeatureEnabled;
    public static string BackOfficeAccess;
    public static string DenyLocalLoginIfConfigured;
    public static string RequireAdminAccess;
    public static string UserBelongsToUserGroupInRequest;
    public static string UserPermissionByResource;
    public static string ContentPermissionByResource;
    public static string MediaPermissionByResource;
    public static string SectionAccessContent;
    public static string SectionAccessPackages;
    public static string SectionAccessUsers;
    public static string SectionAccessMedia;
    public static string SectionAccessSettings;
    public static string SectionAccessMembers;
    public static string SectionAccessContentOrMedia;
    public static string SectionAccessForMemberTree;
    public static string SectionAccessForMediaTree;
    public static string SectionAccessForContentTree;
    public static string TreeAccessDocuments;
    public static string TreeAccessPartialViews;
    public static string TreeAccessDataTypes;
    public static string TreeAccessWebhooks;
    public static string TreeAccessTemplates;
    public static string TreeAccessDictionary;
    public static string TreeAccessRelationTypes;
    public static string TreeAccessMediaTypes;
    public static string TreeAccessLanguages;
    public static string TreeAccessMemberGroups;
    public static string TreeAccessDocumentTypes;
    public static string TreeAccessMemberTypes;
    public static string TreeAccessScripts;
    public static string TreeAccessStylesheets;
    public static string TreeAccessDocumentsOrDocumentTypes;
    public static string TreeAccessMediaOrMediaTypes;
    public static string TreeAccessDictionaryOrTemplates;
    public static string TreeAccessDocumentOrMediaOrContentTypes;
    public static string DictionaryPermissionByResource;
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Authorization.FeatureAuthorizeHandler : AuthorizationHandler`1<FeatureAuthorizeRequirement> {
    private UmbracoFeatures _umbracoFeatures;
    private IRuntimeState _runtimeState;
    public FeatureAuthorizeHandler(UmbracoFeatures umbracoFeatures, IRuntimeState runtimeState);
    protected virtual Task HandleRequirementAsync(AuthorizationHandlerContext context, FeatureAuthorizeRequirement requirement);
    private Nullable`1<bool> IsAllowed(AuthorizationHandlerContext context);
}
public class Umbraco.Cms.Web.Common.Authorization.FeatureAuthorizeRequirement : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Blocks.PartialViewBlockEngine : object {
    private IHttpContextAccessor _httpContextAccessor;
    private IModelMetadataProvider _modelMetadataProvider;
    private ITempDataDictionaryFactory _tempDataDictionaryFactory;
    public PartialViewBlockEngine(IHttpContextAccessor httpContextAccessor, IModelMetadataProvider modelMetadataProvider, ITempDataDictionaryFactory tempDataDictionaryFactory);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Blocks.PartialViewBlockEngine/<ExecuteAsync>d__4")]
public sealed virtual Task`1<string> ExecuteAsync(IBlockReference`2<IPublishedElement, IPublishedElement> blockReference);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Configuration.ConfigureApiExplorerOptions : object {
    private IOptions`1<ApiVersioningOptions> _apiVersioningOptions;
    public ConfigureApiExplorerOptions(IOptions`1<ApiVersioningOptions> apiVersioningOptions);
    public sealed virtual void Configure(ApiExplorerOptions options);
}
public class Umbraco.Cms.Web.Common.Configuration.ConfigureApiVersioningOptions : object {
    [NullableContextAttribute("1")]
public sealed virtual void Configure(ApiVersioningOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Web.Common.Constants.ViewConstants : object {
    internal static string ViewLocation;
    internal static string DataTokenCurrentViewContext;
}
public interface Umbraco.Cms.Web.Common.Controllers.IRenderController {
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Controllers.IVirtualPageController {
    public abstract virtual IPublishedContent FindContent(ActionExecutingContext actionExecutingContext);
}
internal class Umbraco.Cms.Web.Common.Controllers.MaintenanceModeActionFilterAttribute : TypeFilterAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Web.Common.Controllers.PluginController : Controller {
    private static ConcurrentDictionary`2<Type, PluginControllerMetadata> MetadataStorage;
    [CompilerGeneratedAttribute]
private IUmbracoContextAccessor <UmbracoContextAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private IUmbracoDatabaseFactory <DatabaseFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private ServiceContext <Services>k__BackingField;
    [CompilerGeneratedAttribute]
private AppCaches <AppCaches>k__BackingField;
    [CompilerGeneratedAttribute]
private IProfilingLogger <ProfilingLogger>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <InstanceId>k__BackingField;
    public IUmbracoContext UmbracoContext { get; }
    public IUmbracoContextAccessor UmbracoContextAccessor { get; }
    public IUmbracoDatabaseFactory DatabaseFactory { get; }
    public ServiceContext Services { get; }
    public AppCaches AppCaches { get; }
    public IProfilingLogger ProfilingLogger { get; }
    internal PluginControllerMetadata Metadata { get; }
    internal Guid InstanceId { get; }
    protected PluginController(IUmbracoContextAccessor umbracoContextAccessor, IUmbracoDatabaseFactory databaseFactory, ServiceContext services, AppCaches appCaches, IProfilingLogger profilingLogger);
    private static PluginController();
    public virtual IUmbracoContext get_UmbracoContext();
    [CompilerGeneratedAttribute]
public virtual IUmbracoContextAccessor get_UmbracoContextAccessor();
    [CompilerGeneratedAttribute]
public IUmbracoDatabaseFactory get_DatabaseFactory();
    [CompilerGeneratedAttribute]
public ServiceContext get_Services();
    [CompilerGeneratedAttribute]
public AppCaches get_AppCaches();
    [CompilerGeneratedAttribute]
public IProfilingLogger get_ProfilingLogger();
    internal PluginControllerMetadata get_Metadata();
    [CompilerGeneratedAttribute]
internal Guid get_InstanceId();
    public static PluginControllerMetadata GetMetadata(Type controllerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Controllers.ProxyViewDataFeature : object {
    [CompilerGeneratedAttribute]
private ViewDataDictionary <ViewData>k__BackingField;
    [CompilerGeneratedAttribute]
private ITempDataDictionary <TempData>k__BackingField;
    public ViewDataDictionary ViewData { get; }
    public ITempDataDictionary TempData { get; }
    public ProxyViewDataFeature(ViewDataDictionary viewData, ITempDataDictionary tempData);
    [CompilerGeneratedAttribute]
public ViewDataDictionary get_ViewData();
    [CompilerGeneratedAttribute]
public ITempDataDictionary get_TempData();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Controllers.PublishedRequestFilterAttribute : ResultFilterAttribute {
    public virtual void OnResultExecuting(ResultExecutingContext context);
    protected UmbracoRouteValues GetUmbracoRouteValues(ResultExecutingContext context);
    private void AddCacheControlHeaders(ResultExecutingContext context, IPublishedRequest pcr);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ModelBindingExceptionAttribute]
[PublishedRequestFilterAttribute]
[MaintenanceModeActionFilterAttribute]
public class Umbraco.Cms.Web.Common.Controllers.RenderController : UmbracoPageController {
    private ILogger`1<RenderController> _logger;
    private IUmbracoContextAccessor _umbracoContextAccessor;
    protected IUmbracoContext UmbracoContext { get; }
    public RenderController(ILogger`1<RenderController> logger, ICompositeViewEngine compositeViewEngine, IUmbracoContextAccessor umbracoContextAccessor);
    protected IUmbracoContext get_UmbracoContext();
    public virtual IActionResult Index();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Controllers.RenderController/<OnActionExecutionAsync>d__6")]
public virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
    protected virtual IActionResult CurrentTemplate(T model);
    private PublishedContentNotFoundResult GetNoTemplateResult(IPublishedRequest pcr);
}
[ObsoleteAttribute("WARNING
The UmbracoAPIController does not work exactly as in previous versions of Umbraco because serialization is now done using System.Text.Json.
Please verify your API responses still work as expect.

We recommend using regular ASP.NET Core ApiControllers for your APIs so that OpenAPI specifications are generated.
Read more about this here: https://learn.microsoft.com/en-us/aspnet/core/web-api/

UmbracoAPIController will be removed in Umbraco 15.")]
public abstract class Umbraco.Cms.Web.Common.Controllers.UmbracoApiController : UmbracoApiControllerBase {
}
[AuthorizeAttribute]
[UmbracoApiControllerAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public abstract class Umbraco.Cms.Web.Common.Controllers.UmbracoApiControllerBase : ControllerBase {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public class Umbraco.Cms.Web.Common.Controllers.UmbracoApiControllerTypeCollectionBuilder : TypeCollectionBuilderBase`3<UmbracoApiControllerTypeCollectionBuilder, UmbracoApiControllerTypeCollection, UmbracoApiController> {
    protected UmbracoApiControllerTypeCollectionBuilder This { get; }
    protected virtual UmbracoApiControllerTypeCollectionBuilder get_This();
}
[AuthorizeAttribute]
[DisableBrowserCacheAttribute]
public abstract class Umbraco.Cms.Web.Common.Controllers.UmbracoAuthorizedController : ControllerBase {
}
public abstract class Umbraco.Cms.Web.Common.Controllers.UmbracoController : Controller {
    [CompilerGeneratedAttribute]
private Guid <InstanceId>k__BackingField;
    internal Guid InstanceId { get; }
    [CompilerGeneratedAttribute]
internal Guid get_InstanceId();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Web.Common.Controllers.UmbracoPageController : UmbracoController {
    private ICompositeViewEngine _compositeViewEngine;
    private ILogger`1<UmbracoPageController> _logger;
    [NullableAttribute("2")]
private UmbracoRouteValues _umbracoRouteValues;
    protected UmbracoRouteValues UmbracoRouteValues { get; }
    [NullableAttribute("2")]
protected IPublishedContent CurrentPage { get; }
    protected UmbracoPageController(ILogger`1<UmbracoPageController> logger, ICompositeViewEngine compositeViewEngine);
    protected virtual UmbracoRouteValues get_UmbracoRouteValues();
    [NullableContextAttribute("2")]
protected virtual IPublishedContent get_CurrentPage();
    protected virtual IActionResult CurrentTemplate(T model);
    [NullableContextAttribute("2")]
protected bool EnsurePhsyicalViewExists(string template);
}
internal class Umbraco.Cms.Web.Common.DependencyInjection.ScopedServiceProvider : object {
    [NullableAttribute("1")]
private IHttpContextAccessor _accessor;
    [NullableAttribute("2")]
public IServiceProvider ServiceProvider { get; }
    [NullableContextAttribute("1")]
public ScopedServiceProvider(IHttpContextAccessor accessor);
    [NullableContextAttribute("2")]
public sealed virtual IServiceProvider get_ServiceProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Events.ActionExecutedEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private Controller <Controller>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Model>k__BackingField;
    public Controller Controller { get; public set; }
    public object Model { get; public set; }
    public ActionExecutedEventArgs(Controller controller, object model);
    [CompilerGeneratedAttribute]
public Controller get_Controller();
    [CompilerGeneratedAttribute]
public void set_Controller(Controller value);
    [CompilerGeneratedAttribute]
public object get_Model();
    [CompilerGeneratedAttribute]
public void set_Model(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Exceptions.HttpUmbracoFormRouteStringException : Exception {
    public HttpUmbracoFormRouteStringException(string message);
    public HttpUmbracoFormRouteStringException(string message, Exception innerException);
    private HttpUmbracoFormRouteStringException(SerializationInfo info, StreamingContext context);
}
[ExtensionAttribute]
public static class Umbraco.Cms.Web.Common.Extensions.EndpointDataSourceExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Endpoint GetEndpointByPath(EndpointDataSource endpointDatasource, LinkParser linkParser, PathString path, RouteValueDictionary& routeValues);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Cms.Web.Common.Extensions.EndpointExtensions : object {
    [ExtensionAttribute]
public static ControllerActionDescriptor GetControllerActionDescriptor(Endpoint endpoint);
    [ExtensionAttribute]
public static RouteNameMetadata GetRouteNameMetadata(Endpoint endpoint);
    [ExtensionAttribute]
public static string GetRouteName(Endpoint endpoint);
}
[ExtensionAttribute]
public static class Umbraco.Cms.Web.Common.Extensions.LinkParserExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static RouteValueDictionary ParsePathByEndpoint(LinkParser linkParser, Endpoint endpoint, PathString path);
}
public class Umbraco.Cms.Web.Common.FileProviders.ContentAndWebRootFileProviderFactory : object {
    [NullableAttribute("1")]
private IWebHostEnvironment _webHostEnvironment;
    [NullableContextAttribute("1")]
public ContentAndWebRootFileProviderFactory(IWebHostEnvironment webHostEnvironment);
    [NullableContextAttribute("1")]
public sealed virtual IFileProvider Create();
}
public class Umbraco.Cms.Web.Common.FileProviders.WebRootFileProviderFactory : object {
    [NullableAttribute("1")]
private IWebHostEnvironment _webHostEnvironment;
    [NullableContextAttribute("1")]
public WebRootFileProviderFactory(IWebHostEnvironment webHostEnvironment);
    [NullableContextAttribute("1")]
public sealed virtual IFileProvider Create();
}
public class Umbraco.Cms.Web.Common.Filters.BackOfficeCultureFilter : object {
    [NullableContextAttribute("1")]
public sealed virtual void OnActionExecuted(ActionExecutedContext context);
    [NullableContextAttribute("1")]
public sealed virtual void OnActionExecuting(ActionExecutingContext context);
    [NullableContextAttribute("1")]
private static void SetCurrentThreadCulture(CultureInfo culture);
}
public class Umbraco.Cms.Web.Common.Filters.DisableBrowserCacheAttribute : ActionFilterAttribute {
    [NullableContextAttribute("1")]
public virtual void OnResultExecuting(ResultExecutingContext context);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Filters.ExceptionViewModel : object {
    [CompilerGeneratedAttribute]
private string <ExceptionMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <ExceptionType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <StackTrace>k__BackingField;
    public string ExceptionMessage { get; public set; }
    public Type ExceptionType { get; public set; }
    public string StackTrace { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ExceptionMessage();
    [CompilerGeneratedAttribute]
public void set_ExceptionMessage(string value);
    [CompilerGeneratedAttribute]
public Type get_ExceptionType();
    [CompilerGeneratedAttribute]
public void set_ExceptionType(Type value);
    [CompilerGeneratedAttribute]
public string get_StackTrace();
    [CompilerGeneratedAttribute]
public void set_StackTrace(string value);
}
public class Umbraco.Cms.Web.Common.Filters.ModelBindingExceptionAttribute : TypeFilterAttribute {
}
public class Umbraco.Cms.Web.Common.Filters.StatusCodeResultAttribute : ActionFilterAttribute {
    private HttpStatusCode _statusCode;
    public StatusCodeResultAttribute(HttpStatusCode statusCode);
    [NullableContextAttribute("1")]
public virtual void OnActionExecuted(ActionExecutedContext context);
}
public class Umbraco.Cms.Web.Common.Filters.UmbracoMemberAuthorizeAttribute : TypeFilterAttribute {
    [NullableContextAttribute("1")]
public UmbracoMemberAuthorizeAttribute(string allowType, string allowGroup, string allowMembers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Filters.UmbracoMemberAuthorizeFilter : object {
    [CompilerGeneratedAttribute]
private string <AllowType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllowGroup>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AllowMembers>k__BackingField;
    public string AllowType { get; private set; }
    public string AllowGroup { get; private set; }
    public string AllowMembers { get; private set; }
    public UmbracoMemberAuthorizeFilter(string allowType, string allowGroup, string allowMembers);
    [CompilerGeneratedAttribute]
public string get_AllowType();
    [CompilerGeneratedAttribute]
private void set_AllowType(string value);
    [CompilerGeneratedAttribute]
public string get_AllowGroup();
    [CompilerGeneratedAttribute]
private void set_AllowGroup(string value);
    [CompilerGeneratedAttribute]
public string get_AllowMembers();
    [CompilerGeneratedAttribute]
private void set_AllowMembers(string value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Filters.UmbracoMemberAuthorizeFilter/<OnAuthorizationAsync>d__14")]
public sealed virtual Task OnAuthorizationAsync(AuthorizationFilterContext context);
    private bool HasAllowAnonymous(AuthorizationFilterContext context);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Filters.UmbracoMemberAuthorizeFilter/<IsAuthorizedAsync>d__16")]
private Task`1<bool> IsAuthorizedAsync(IMemberManager memberManager);
}
public class Umbraco.Cms.Web.Common.Filters.UmbracoUserTimeoutFilterAttribute : TypeFilterAttribute {
}
public class Umbraco.Cms.Web.Common.Filters.UmbracoVirtualPageFilterAttribute : Attribute {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Filters.UmbracoVirtualPageFilterAttribute/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
public class Umbraco.Cms.Web.Common.Filters.ValidateUmbracoFormRouteStringAttribute : TypeFilterAttribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Helpers.OAuthOptionsHelper : object {
    private static IReadOnlyCollection`1<string> _oathCallbackErrorParams;
    private IOptions`1<SecuritySettings> _securitySettings;
    public OAuthOptionsHelper(IOptions`1<SecuritySettings> securitySettings);
    private static OAuthOptionsHelper();
    public T SetDefaultErrorEventHandling(T oAuthOptions, string providerFriendlyName);
    private Task HandleResponseWithDefaultUmbracoRedirect(HandleRequestContext`1<RemoteAuthenticationOptions> context, string providerFriendlyName, string eventName);
    public T SetUmbracoRedirectWithFilteredParams(T context, string providerFriendlyName, string eventName);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Hosting.IBackOfficePathGenerator {
    public string BackOfficePath { get; }
    public string BackOfficeCacheBustHash { get; }
    public string BackOfficeVirtualDirectory { get; }
    public string BackOfficeAssetsPath { get; }
    public abstract virtual string get_BackOfficePath();
    public abstract virtual string get_BackOfficeCacheBustHash();
    public abstract virtual string get_BackOfficeVirtualDirectory();
    public abstract virtual string get_BackOfficeAssetsPath();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Hosting.UmbracoBackOfficePathGenerator : object {
    [NullableAttribute("2")]
private string _backofficeAssetsPath;
    [NullableAttribute("2")]
private string _backOfficeVirtualDirectory;
    [CompilerGeneratedAttribute]
private string <BackOfficePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BackOfficeCacheBustHash>k__BackingField;
    public string BackOfficePath { get; }
    public string BackOfficeCacheBustHash { get; }
    public string BackOfficeVirtualDirectory { get; }
    public string BackOfficeAssetsPath { get; }
    public UmbracoBackOfficePathGenerator(IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion, IOptions`1<GlobalSettings> globalSettings);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BackOfficePath();
    [CompilerGeneratedAttribute]
public sealed virtual string get_BackOfficeCacheBustHash();
    public sealed virtual string get_BackOfficeVirtualDirectory();
    public sealed virtual string get_BackOfficeAssetsPath();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Hosting.UmbracoHostBuilderDecorator : object {
    private IHostBuilder _inner;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private Action`1<IHost> _onBuild;
    public IDictionary`2<object, object> Properties { get; }
    public UmbracoHostBuilderDecorator(IHostBuilder inner, Action`1<IHost> onBuild);
    public sealed virtual IDictionary`2<object, object> get_Properties();
    public sealed virtual IHostBuilder ConfigureAppConfiguration(Action`2<HostBuilderContext, IConfigurationBuilder> configureDelegate);
    public sealed virtual IHostBuilder ConfigureContainer(Action`2<HostBuilderContext, TContainerBuilder> configureDelegate);
    public sealed virtual IHostBuilder ConfigureHostConfiguration(Action`1<IConfigurationBuilder> configureDelegate);
    public sealed virtual IHostBuilder ConfigureServices(Action`2<HostBuilderContext, IServiceCollection> configureDelegate);
    public sealed virtual IHostBuilder UseServiceProviderFactory(IServiceProviderFactory`1<TContainerBuilder> factory);
    public sealed virtual IHostBuilder UseServiceProviderFactory(Func`2<HostBuilderContext, IServiceProviderFactory`1<TContainerBuilder>> factory);
    public sealed virtual IHost Build();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.IUmbracoHelperAccessor {
    public abstract virtual bool TryGetUmbracoHelper(UmbracoHelper& umbracoHelper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Umbraco.Cms.Web.Common.Localization.DynamicRequestCultureProviderBase : RequestCultureProvider {
    private RequestLocalizationOptions _options;
    private object _lockerSupportedCultures;
    private object _lockerSupportedUICultures;
    protected DynamicRequestCultureProviderBase(RequestLocalizationOptions requestLocalizationOptions);
    public virtual Task`1<ProviderCultureResult> DetermineProviderCultureResult(HttpContext httpContext);
    protected abstract virtual ProviderCultureResult GetProviderCultureResult(HttpContext httpContext);
    private static void TryAddLocked(IEnumerable`1<CultureInfo> supportedCultures, IEnumerable`1<StringSegment> cultures, object locker, Action`1<StringSegment> addAction);
    [CompilerGeneratedAttribute]
private void <DetermineProviderCultureResult>b__4_0(StringSegment culture);
    [CompilerGeneratedAttribute]
private void <DetermineProviderCultureResult>b__4_1(StringSegment culture);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Localization.UmbracoBackOfficeIdentityCultureProvider : DynamicRequestCultureProviderBase {
    public UmbracoBackOfficeIdentityCultureProvider(RequestLocalizationOptions localizationOptions);
    protected sealed virtual ProviderCultureResult GetProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Localization.UmbracoPublishedContentCultureProvider : DynamicRequestCultureProviderBase {
    public UmbracoPublishedContentCultureProvider(RequestLocalizationOptions localizationOptions);
    protected sealed virtual ProviderCultureResult GetProviderCultureResult(HttpContext httpContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Localization.UmbracoRequestLocalizationOptions : object {
    private GlobalSettings _globalSettings;
    public UmbracoRequestLocalizationOptions(IOptions`1<GlobalSettings> globalSettings);
    public sealed virtual void Configure(RequestLocalizationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Logging.Enrichers.ApplicationIdEnricher : object {
    public static string ApplicationIdProperty;
    private IApplicationDiscriminator _applicationDiscriminator;
    public ApplicationIdEnricher(IApplicationDiscriminator applicationDiscriminator);
    public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
internal class Umbraco.Cms.Web.Common.Logging.Enrichers.NoopEnricher : object {
    [NullableContextAttribute("1")]
public sealed virtual void Enrich(LogEvent logEvent, ILogEventPropertyFactory propertyFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Logging.RegisteredReloadableLogger : object {
    private static object FrozenLock;
    private static bool frozen;
    private ReloadableLogger _logger;
    public ILogger Logger { get; }
    [NullableContextAttribute("2")]
public RegisteredReloadableLogger(ReloadableLogger logger);
    private static RegisteredReloadableLogger();
    public ILogger get_Logger();
    public void Reload(Func`2<LoggerConfiguration, LoggerConfiguration> cfg);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Media.MediaPrependBasePathFileProvider : object {
    private PathString _basePath;
    private IFileProvider _underlyingFileProvider;
    private IFileInfo _baseDirectoryFileInfo;
    private static Char[] _splitChar;
    public MediaPrependBasePathFileProvider(string basePath, IFileProvider underlyingFileProvider);
    private static MediaPrependBasePathFileProvider();
    protected virtual bool TryMapSubPath(string originalSubPath, PathString& newSubPath);
    public sealed virtual IDirectoryContents GetDirectoryContents(string subpath);
    public sealed virtual IFileInfo GetFileInfo(string subpath);
    public sealed virtual IChangeToken Watch(string filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Middleware.BootFailedMiddleware : object {
    private IHostingEnvironment _hostingEnvironment;
    private IWebHostEnvironment _webHostEnvironment;
    private IRuntimeState _runtimeState;
    public BootFailedMiddleware(IRuntimeState runtimeState, IHostingEnvironment hostingEnvironment, IWebHostEnvironment webHostEnvironment);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Middleware.BootFailedMiddleware/<InvokeAsync>d__4")]
public sealed virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
    [NullableContextAttribute("2")]
private IFileInfo GetBootErrorFileInfo();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Middleware.PreviewAuthenticationMiddleware : object {
    private ILogger`1<PreviewAuthenticationMiddleware> _logger;
    private IPreviewTokenGenerator _previewTokenGenerator;
    private IPreviewService _previewService;
    public PreviewAuthenticationMiddleware(ILogger`1<PreviewAuthenticationMiddleware> logger, IPreviewTokenGenerator previewTokenGenerator, IPreviewService previewService);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Middleware.PreviewAuthenticationMiddleware/<InvokeAsync>d__4")]
public sealed virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Middleware.UmbracoRequestLoggingMiddleware : object {
    private HttpRequestIdEnricher _requestIdEnricher;
    private HttpRequestNumberEnricher _requestNumberEnricher;
    private HttpSessionIdEnricher _sessionIdEnricher;
    public UmbracoRequestLoggingMiddleware(HttpSessionIdEnricher sessionIdEnricher, HttpRequestNumberEnricher requestNumberEnricher, HttpRequestIdEnricher requestIdEnricher);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Middleware.UmbracoRequestLoggingMiddleware/<InvokeAsync>d__4")]
public sealed virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Middleware.UmbracoRequestMiddleware : object {
    private IDefaultCultureAccessor _defaultCultureAccessor;
    private IEventAggregator _eventAggregator;
    private IHostingEnvironment _hostingEnvironment;
    private ILogger`1<UmbracoRequestMiddleware> _logger;
    [NullableAttribute("2")]
private WebProfiler _profiler;
    private IRequestCache _requestCache;
    private IRuntimeState _runtimeState;
    private IUmbracoContextFactory _umbracoContextFactory;
    private IOptions`1<UmbracoRequestOptions> _umbracoRequestOptions;
    private IVariationContextAccessor _variationContextAccessor;
    private static bool s_firstBackOfficeRequest;
    private static bool s_firstBackOfficeReqestFlag;
    public UmbracoRequestMiddleware(ILogger`1<UmbracoRequestMiddleware> logger, IUmbracoContextFactory umbracoContextFactory, IRequestCache requestCache, IEventAggregator eventAggregator, IProfiler profiler, IHostingEnvironment hostingEnvironment, IRuntimeState runtimeState, IVariationContextAccessor variationContextAccessor, IDefaultCultureAccessor defaultCultureAccessor, IOptions`1<UmbracoRequestOptions> umbracoRequestOptions);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Middleware.UmbracoRequestMiddleware/<InvokeAsync>d__11")]
public sealed virtual Task InvokeAsync(HttpContext context, RequestDelegate next);
    private Uri GetApplicationUrlFromCurrentRequest(HttpRequest request);
    private void DisposeHttpContextItems(HttpRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ModelBinders.ContentModelBinder : object {
    private IEventAggregator _eventAggregator;
    public ContentModelBinder(IEventAggregator eventAggregator);
    public sealed virtual Task BindModelAsync(ModelBindingContext bindingContext);
    public void BindModel(ModelBindingContext bindingContext, object source, Type modelType);
    private void ThrowModelBindingException(bool sourceContent, bool modelContent, Type sourceType, Type modelType);
}
public class Umbraco.Cms.Web.Common.ModelBinders.ContentModelBinderProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IModelBinder GetBinder(ModelBinderProviderContext context);
}
public class Umbraco.Cms.Web.Common.ModelBinders.HttpQueryStringModelBinder : object {
    [NullableContextAttribute("1")]
public sealed virtual Task BindModelAsync(ModelBindingContext bindingContext);
    [NullableContextAttribute("1")]
private Dictionary`2<string, StringValues> GetQueryAsDictionary(IQueryCollection query);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.ModelBinders.ModelBindingException : Exception {
    public ModelBindingException(string message);
    public ModelBindingException(string message, Exception innerException);
    protected ModelBindingException(SerializationInfo info, StreamingContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Models.LoginModel : PostRedirectModel {
    [CompilerGeneratedAttribute]
private string <Username>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RememberMe>k__BackingField;
    [RequiredAttribute]
[DisplayAttribute]
public string Username { get; public set; }
    [RequiredAttribute]
[DataTypeAttribute("11")]
[DisplayAttribute]
[StringLengthAttribute("256")]
public string Password { get; public set; }
    [DisplayAttribute]
public bool RememberMe { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Username();
    [CompilerGeneratedAttribute]
public void set_Username(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
    [CompilerGeneratedAttribute]
public bool get_RememberMe();
    [CompilerGeneratedAttribute]
public void set_RememberMe(bool value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Models.PostRedirectModel : object {
    [CompilerGeneratedAttribute]
private string <RedirectUrl>k__BackingField;
    public string RedirectUrl { get; public set; }
    [CompilerGeneratedAttribute]
public string get_RedirectUrl();
    [CompilerGeneratedAttribute]
public void set_RedirectUrl(string value);
}
[NullableContextAttribute("2")]
public interface Umbraco.Cms.Web.Common.ModelsBuilder.IModelsBuilderDashboardProvider {
    public abstract virtual string GetUrl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.ChecksumValidator : object {
    public static bool IsRecompilationSupported(RazorCompiledItem item);
    public static bool IsItemValid(RazorProjectFileSystem fileSystem, RazorCompiledItem item);
    private static bool ChecksumsEqual(string checksum, Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.CollectibleRuntimeViewCompiler : object {
    private object _cacheLock;
    private Dictionary`2<string, CompiledViewDescriptor> _precompiledViews;
    private ConcurrentDictionary`2<string, string> _normalizedPathCache;
    private IFileProvider _fileProvider;
    private RazorProjectEngine _projectEngine;
    private IMemoryCache _cache;
    private ILogger`1<CollectibleRuntimeViewCompiler> _logger;
    private UmbracoRazorReferenceManager _referenceManager;
    private CompilationOptionsProvider _compilationOptionsProvider;
    private InMemoryAssemblyLoadContextManager _loadContextManager;
    public CollectibleRuntimeViewCompiler(IFileProvider fileProvider, RazorProjectEngine projectEngine, IList`1<CompiledViewDescriptor> precompiledViews, ILogger`1<CollectibleRuntimeViewCompiler> logger, UmbracoRazorReferenceManager referenceManager, CompilationOptionsProvider compilationOptionsProvider, InMemoryAssemblyLoadContextManager loadContextManager);
    internal void ClearCache();
    public sealed virtual Task`1<CompiledViewDescriptor> CompileAsync(string relativePath);
    private Task`1<CompiledViewDescriptor> OnCacheMiss(string normalizedPath);
    private ViewCompilerWorkItem CreatePrecompiledWorkItem(string normalizedPath, CompiledViewDescriptor precompiledView);
    private ViewCompilerWorkItem CreateRuntimeCompilationWorkItem(string normalizedPath);
    private IList`1<IChangeToken> GetExpirationTokens(CompiledViewDescriptor precompiledView);
    private void GetChangeTokensFromImports(IList`1<IChangeToken> expirationTokens, RazorProjectItem projectItem);
    protected virtual CompiledViewDescriptor CompileAndEmit(string relativePath);
    internal Assembly CompileAndEmit(RazorCodeDocument codeDocument, string generatedCode);
    private void LogCompilationFailure(UmbracoCompilationException compilationException);
    private CSharpCompilation CreateCompilation(string compilationContent, string assemblyName);
    private string GetNormalizedPath(string relativePath);
    private string NormalizePath(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.CompilationExceptionFactory : object {
    public static UmbracoCompilationException Create(RazorCodeDocument codeDocument, IEnumerable`1<RazorDiagnostic> diagnostics);
    public static UmbracoCompilationException Create(RazorCodeDocument codeDocument, string compilationContent, string assemblyName, IEnumerable`1<Diagnostic> diagnostics);
    private static string ReadContent(RazorCodeDocument codeDocument, string filePath);
    private static DiagnosticMessage GetDiagnosticMessage(Diagnostic diagnostic);
    private static string GetFilePath(RazorCodeDocument codeDocument, Diagnostic diagnostic);
    private static DiagnosticMessage CreateDiagnosticMessage(RazorDiagnostic razorDiagnostic, string filePath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.CompilationOptionsProvider : object {
    private IWebHostEnvironment _hostingEnvironment;
    [NullableAttribute("2")]
private CSharpParseOptions _parseOptions;
    [NullableAttribute("2")]
private CSharpCompilationOptions _compilationOptions;
    private bool _emitPdb;
    [NullableAttribute("2")]
private EmitOptions _emitOptions;
    private bool _optionsInitialized;
    public CSharpParseOptions ParseOptions { get; }
    public CSharpCompilationOptions CSharpCompilationOptions { get; }
    public bool EmitPdb { get; }
    public EmitOptions EmitOptions { get; }
    public CompilationOptionsProvider(IWebHostEnvironment hostingEnvironment);
    public virtual CSharpParseOptions get_ParseOptions();
    public virtual CSharpCompilationOptions get_CSharpCompilationOptions();
    public virtual bool get_EmitPdb();
    public virtual EmitOptions get_EmitOptions();
    [MemberNotNullAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private void EnsureOptions();
    private CompilationOptions GetDependencyContextCompilationOptions();
    private EmitOptions GetEmitOptions(CompilationOptions dependencyContextOptions);
    private static CSharpCompilationOptions GetCompilationOptions(IWebHostEnvironment hostingEnvironment, CompilationOptions dependencyContextOptions);
    private static CSharpParseOptions GetParseOptions(IWebHostEnvironment hostingEnvironment, CompilationOptions dependencyContextOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.InMemoryAssemblyLoadContextManager : object {
    [NullableAttribute("2")]
private UmbracoAssemblyLoadContext _currentAssemblyLoadContext;
    [NullableAttribute("2")]
private string _modelsAssemblyLocation;
    [NullableAttribute("2")]
public string ModelsAssemblyLocation { get; }
    [NullableContextAttribute("2")]
public string get_ModelsAssemblyLocation();
    private Assembly OnResolvingDefaultAssemblyLoadContext(AssemblyLoadContext assemblyLoadContext, AssemblyName assemblyName);
    internal void RenewAssemblyLoadContext();
    public Assembly LoadCollectibleAssemblyFromStream(Stream assembly, Stream assemblySymbols);
    public Assembly LoadCollectibleAssemblyFromPath(string path);
    public Assembly LoadModelsAssembly(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.InMemoryModelFactory : object {
    private static Regex s_usingRegex;
    private static Regex s_aattrRegex;
    private static Regex s_assemblyVersionRegex;
    private static String[] s_ourFiles;
    private ReaderWriterLockSlim _locker;
    private IProfilingLogger _profilingLogger;
    private ILogger`1<InMemoryModelFactory> _logger;
    [NullableAttribute("2")]
private FileSystemWatcher _watcher;
    private Lazy`1<UmbracoServices> _umbracoServices;
    private IHostingEnvironment _hostingEnvironment;
    private IApplicationShutdownRegistry _hostingLifetime;
    private ModelsGenerationError _errors;
    private IPublishedValueFallback _publishedValueFallback;
    private InMemoryAssemblyLoadContextManager _loadContextManager;
    private RuntimeCompilationCacheBuster _runtimeCompilationCacheBuster;
    private Lazy`1<string> _pureLiveDirectory;
    private int _debugLevel;
    private Infos _infos;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) _hasModels;
    private bool _pendingRebuild;
    private int _ver;
    private Nullable`1<int> _skipver;
    [NullableAttribute("2")]
private RoslynCompiler _roslynCompiler;
    private ModelsBuilderSettings _config;
    private bool _disposedValue;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Assembly <CurrentModelsAssembly>k__BackingField;
    [CompilerGeneratedAttribute]
private object <SyncRoot>k__BackingField;
    [NullableAttribute("2")]
public Assembly CurrentModelsAssembly { get; private set; }
    public object SyncRoot { get; }
    private UmbracoServices UmbracoServices { get; }
    private RoslynCompiler RoslynCompiler { get; }
    public bool Enabled { get; }
    public InMemoryModelFactory(Lazy`1<UmbracoServices> umbracoServices, IProfilingLogger profilingLogger, ILogger`1<InMemoryModelFactory> logger, IOptionsMonitor`1<ModelsBuilderSettings> config, IHostingEnvironment hostingEnvironment, IApplicationShutdownRegistry hostingLifetime, IPublishedValueFallback publishedValueFallback, InMemoryAssemblyLoadContextManager loadContextManager, RuntimeCompilationCacheBuster runtimeCompilationCacheBuster);
    private static InMemoryModelFactory();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Assembly get_CurrentModelsAssembly();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_CurrentModelsAssembly(Assembly value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_SyncRoot();
    private UmbracoServices get_UmbracoServices();
    private RoslynCompiler get_RoslynCompiler();
    public sealed virtual bool get_Enabled();
    public sealed virtual IPublishedElement CreateModel(IPublishedElement element);
    public sealed virtual Type GetModelType(string alias);
    public sealed virtual Type MapModelType(Type type);
    public sealed virtual IList CreateModelList(string alias);
    public sealed virtual void Reset();
    private void ResetModels();
    internal Infos EnsureModels();
    public string PureLiveDirectoryAbsolute();
    private Assembly ReloadAssembly(string pathToAssembly);
    private Assembly GetModelsAssembly(bool forceRebuild);
    private void TryDeleteUnusedAssemblies(string dllPathFile);
    private string GetOutputAssemblyPath(string currentHash);
    private void ClearOnFailingToCompile(string dllPathFile, string modelsHashFile, string projFile);
    private static Infos RegisterModels(IEnumerable`1<Type> types);
    private string GenerateModelsCode(IList`1<TypeModel> typeModels);
    private static string GenerateModelsProj(IDictionary`2<string, string> files);
    private void WatcherOnChanged(object sender, FileSystemEventArgs args);
    public sealed virtual void Stop(bool immediate);
    protected virtual void Dispose(bool disposing);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__25_0(ModelsBuilderSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.RuntimeCompilationCacheBuster : object {
    private IViewCompilerProvider _viewCompilerProvider;
    private IRazorViewEngine _razorViewEngine;
    private RazorViewEngine ViewEngine { get; }
    private CollectibleRuntimeViewCompiler ViewCompiler { get; }
    public RuntimeCompilationCacheBuster(IViewCompilerProvider viewCompilerProvider, IRazorViewEngine razorViewEngine);
    private RazorViewEngine get_ViewEngine();
    private CollectibleRuntimeViewCompiler get_ViewCompiler();
    public void BustCache();
}
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.UmbracoAssemblyLoadContext : AssemblyLoadContext {
    [NullableContextAttribute("1")]
protected virtual Assembly Load(AssemblyName assemblyName);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.UmbracoCompilationException : Exception {
    [CompilerGeneratedAttribute]
private IEnumerable`1<CompilationFailure> <CompilationFailures>k__BackingField;
    public IEnumerable`1<CompilationFailure> CompilationFailures { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IEnumerable`1<CompilationFailure> get_CompilationFailures();
    [CompilerGeneratedAttribute]
public Void modreq(System.Runtime.CompilerServices.IsExternalInit) set_CompilationFailures(IEnumerable`1<CompilationFailure> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.UmbracoRazorReferenceManager : object {
    private ApplicationPartManager _partManager;
    private MvcRazorRuntimeCompilationOptions _options;
    private object _compilationReferencesLock;
    private bool _compilationReferencesInitialized;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private IReadOnlyList`1<MetadataReference> _compilationReferences;
    public IReadOnlyList`1<MetadataReference> CompilationReferences { get; }
    public UmbracoRazorReferenceManager(ApplicationPartManager partManager, IOptions`1<MvcRazorRuntimeCompilationOptions> options);
    public virtual IReadOnlyList`1<MetadataReference> get_CompilationReferences();
    private IReadOnlyList`1<MetadataReference> GetCompilationReferences();
    internal IEnumerable`1<string> GetReferencePaths();
    private static MetadataReference CreateMetadataReference(string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.InMemoryAuto.UmbracoViewCompilerProvider : object {
    private RazorProjectEngine _razorProjectEngine;
    private UmbracoRazorReferenceManager _umbracoRazorReferenceManager;
    private CompilationOptionsProvider _compilationOptionsProvider;
    private InMemoryAssemblyLoadContextManager _loadContextManager;
    private ApplicationPartManager _applicationPartManager;
    private ILogger`1<CollectibleRuntimeViewCompiler> _logger;
    private Func`1<IViewCompiler> _createCompiler;
    private object _initializeLock;
    private bool _initialized;
    [NullableAttribute("2")]
private IViewCompiler _compiler;
    private MvcRazorRuntimeCompilationOptions _options;
    public UmbracoViewCompilerProvider(ApplicationPartManager applicationPartManager, RazorProjectEngine razorProjectEngine, ILoggerFactory loggerFactory, IOptions`1<MvcRazorRuntimeCompilationOptions> options, UmbracoRazorReferenceManager umbracoRazorReferenceManager, CompilationOptionsProvider compilationOptionsProvider, InMemoryAssemblyLoadContextManager loadContextManager);
    public sealed virtual IViewCompiler GetCompiler();
    private IViewCompiler CreateCompiler();
    private static IFileProvider GetCompositeFileProvider(MvcRazorRuntimeCompilationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.ModelsBuilder.ModelsBuilderNotificationHandler : object {
    private ModelsBuilderSettings _config;
    private IDefaultViewContentProvider _defaultViewContentProvider;
    private IModelsBuilderDashboardProvider _modelsBuilderDashboardProvider;
    private IShortStringHelper _shortStringHelper;
    public ModelsBuilderNotificationHandler(IOptions`1<ModelsBuilderSettings> config, IShortStringHelper shortStringHelper, IModelsBuilderDashboardProvider modelsBuilderDashboardProvider, IDefaultViewContentProvider defaultViewContentProvider);
    public sealed virtual void Handle(ModelBindingErrorNotification notification);
    public sealed virtual void Handle(ServerVariablesParsingNotification notification);
    public sealed virtual void Handle(TemplateSavingNotification notification);
    private Dictionary`2<string, object> GetModelsBuilderSettings();
}
public class Umbraco.Cms.Web.Common.ModelsBuilder.NoopModelsBuilderDashboardProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual string GetUrl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Mvc.HtmlStringUtilities : object {
    public IHtmlContent ReplaceLineBreaks(string text);
    public HtmlString StripHtmlTags(string html, String[] tags);
    public string Join(string separator, Object[] args);
    public string Concatenate(Object[] args);
    public string Coalesce(Object[] args);
    public IHtmlContent Truncate(string html, int length, bool addElipsis, bool treatTagsAsContent);
    public int WordsToLength(string html, int words);
}
public class Umbraco.Cms.Web.Common.Mvc.IpAddressUtilities : object {
    [NullableContextAttribute("1")]
public sealed virtual bool IsAllowListed(IPAddress clientIpAddress, string allowedIpString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Mvc.UmbracoMvcConfigureOptions : object {
    private GlobalSettings _globalSettings;
    public UmbracoMvcConfigureOptions(IOptions`1<GlobalSettings> globalSettings);
    public sealed virtual void Configure(MvcOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Plugins.UmbracoPluginPhysicalFileProvider : PhysicalFileProvider {
    private UmbracoPluginSettings _options;
    public UmbracoPluginPhysicalFileProvider(string root, IOptionsMonitor`1<UmbracoPluginSettings> options, ExclusionFilters filters);
    public sealed virtual IFileInfo GetFileInfo(string subpath);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__1_0(UmbracoPluginSettings x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Preview.UserBasedPreviewTokenGenerator : object {
    private IDataProtectionProvider _dataProtectionProvider;
    private IUserService _userService;
    private ILogger`1<UserBasedPreviewTokenGenerator> _logger;
    public UserBasedPreviewTokenGenerator(IDataProtectionProvider dataProtectionProvider, IUserService userService, ILogger`1<UserBasedPreviewTokenGenerator> logger);
    public sealed virtual Task`1<Attempt`1<string>> GenerateTokenAsync(Guid userKey);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Preview.UserBasedPreviewTokenGenerator/<VerifyAsync>d__5")]
public sealed virtual Task`1<Attempt`1<Nullable`1<Guid>>> VerifyAsync(string token);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Profiler.ConfigureMiniProfilerOptions : object {
    private string _backOfficePath;
    public ConfigureMiniProfilerOptions(IOptions`1<GlobalSettings> globalSettings, IHostingEnvironment hostingEnvironment);
    public sealed virtual void Configure(MiniProfilerOptions options);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Profiler.ConfigureMiniProfilerOptions/<IsBackofficeUserAuthorized>d__3")]
private Task`1<bool> IsBackofficeUserAuthorized(HttpRequest request);
}
public class Umbraco.Cms.Web.Common.Profiler.InitializeWebProfiling : object {
    private bool _profile;
    [NullableAttribute("2")]
private WebProfiler _profiler;
    [NullableContextAttribute("1")]
public InitializeWebProfiling(IProfiler profiler, ILogger`1<InitializeWebProfiling> logger);
    [NullableContextAttribute("1")]
public sealed virtual void Handle(UmbracoApplicationStartingNotification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Profiler.WebProfiler : object {
    private IHttpContextAccessor _httpContextAccessor;
    public static AsyncLocal`1<MiniProfiler> MiniProfilerContext;
    private static string WebProfileCookieKey;
    private int _first;
    [NullableAttribute("2")]
private MiniProfiler _startupProfiler;
    private bool IsEnabled { get; }
    public WebProfiler(IHttpContextAccessor httpContextAccessor);
    private static WebProfiler();
    public sealed virtual IDisposable Step(string name);
    private bool get_IsEnabled();
    public sealed virtual void Start();
    public sealed virtual void Stop(bool discardResults);
    public void StartBoot();
    public void StopBoot();
    public void UmbracoApplicationBeginRequest(HttpContext context, RuntimeLevel runtimeLevel);
    public void UmbracoApplicationEndRequest(HttpContext context, RuntimeLevel runtimeLevel);
    private static ICookieManager GetCookieManager(HttpContext context);
    private bool ShouldProfile(HttpRequest request);
    private void AddSubProfiler(MiniProfiler subProfiler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Profiler.WebProfilerHtml : object {
    private IHttpContextAccessor _httpContextAccessor;
    public WebProfilerHtml(IHttpContextAccessor httpContextAccessor);
    public sealed virtual string Render();
}
internal class Umbraco.Cms.Web.Common.PublishedModels.DummyClassSoThatPublishedModelsNamespaceExists : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Repositories.WebProfilerRepository : object {
    private static string CookieName;
    private static string HeaderName;
    private static string QueryName;
    private IHttpContextAccessor _httpContextAccessor;
    public WebProfilerRepository(IHttpContextAccessor httpContextAccessor);
    public sealed virtual void SetStatus(int userId, bool status);
    public sealed virtual bool GetStatus(int userId);
}
public class Umbraco.Cms.Web.Common.Routing.BackOfficeRouteAttribute : RouteAttribute {
    [NullableContextAttribute("1")]
public BackOfficeRouteAttribute(string template);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Routing.CustomRouteContentFinderDelegate : object {
    private Func`2<ActionExecutingContext, IPublishedContent> _findContent;
    public CustomRouteContentFinderDelegate(Func`2<ActionExecutingContext, IPublishedContent> findContent);
    public IPublishedContent FindContent(ActionExecutingContext actionExecutingContext);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Routing.IAreaRoutes {
    public abstract virtual void CreateRoutes(IEndpointRouteBuilder endpoints);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Routing.IRoutableDocumentFilter {
    public abstract virtual bool IsDocumentRequest(string absPath);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Routing.IUmbracoVirtualPageRoute {
    public abstract virtual Task SetupVirtualPageRoute(HttpContext httpContext);
    public abstract virtual IPublishedContent FindContent(Endpoint endpoint, HttpContext httpContext, RouteValueDictionary routeValues, ControllerActionDescriptor controllerActionDescriptor, object controller);
    public abstract virtual IPublishedContent FindContent(Endpoint endpoint, ActionExecutingContext actionExecutingContext);
    public abstract virtual Task`1<IPublishedRequest> CreatePublishedRequest(HttpContext httpContext, IPublishedContent publishedContent);
    public abstract virtual Task SetRouteValues(HttpContext httpContext, IPublishedContent publishedContent, ControllerActionDescriptor controllerActionDescriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Routing.RoutableDocumentFilter : object {
    private EndpointDataSource _endpointDataSource;
    private GlobalSettings _globalSettings;
    private IHostingEnvironment _hostingEnvironment;
    private ConcurrentDictionary`2<string, bool> _routeChecks;
    private object _routeLocker;
    private WebRoutingSettings _routingSettings;
    private object _initLocker;
    private bool _isInit;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private HashSet`1<string> _reservedList;
    public RoutableDocumentFilter(IOptions`1<GlobalSettings> globalSettings, IOptions`1<WebRoutingSettings> routingSettings, IHostingEnvironment hostingEnvironment, EndpointDataSource endpointDataSource);
    public sealed virtual bool IsDocumentRequest(string absPath);
    [NullableContextAttribute("2")]
private void EndpointsChanged(object value);
    private bool IsReservedPathOrUrl(string absPath);
    private IEnumerable`1<string> NormalizePaths(string paths, bool ensureTrailingSlash);
    private bool MatchesEndpoint(string absPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Routing.UmbracoBackofficeToken : object {
    private string _umbracoPath;
    private string _tokenRegex;
    public UmbracoBackofficeToken(string tokenName, string umbracoPath);
    public sealed virtual void Apply(ApplicationModel application);
    private void UpdateSelectors(IEnumerable`1<SelectorModel> selectors, string tokenValue);
    [NullableContextAttribute("2")]
private string InsertTokenValue(string template, string tokenValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Routing.UmbracoRequestOptions : object {
    [CompilerGeneratedAttribute]
private Func`2<HttpRequest, bool> <HandleAsServerSideRequest>k__BackingField;
    public Func`2<HttpRequest, bool> HandleAsServerSideRequest { get; public set; }
    [CompilerGeneratedAttribute]
public Func`2<HttpRequest, bool> get_HandleAsServerSideRequest();
    [CompilerGeneratedAttribute]
public void set_HandleAsServerSideRequest(Func`2<HttpRequest, bool> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Routing.UmbracoRouteValues : object {
    public static string DefaultActionName;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <TemplateName>k__BackingField;
    [CompilerGeneratedAttribute]
private ControllerActionDescriptor <ControllerActionDescriptor>k__BackingField;
    [CompilerGeneratedAttribute]
private IPublishedRequest <PublishedRequest>k__BackingField;
    public string ControllerName { get; }
    public string ActionName { get; }
    [NullableAttribute("2")]
public string TemplateName { get; }
    public Type ControllerType { get; }
    public ControllerActionDescriptor ControllerActionDescriptor { get; }
    public IPublishedRequest PublishedRequest { get; }
    public UmbracoRouteValues(IPublishedRequest publishedRequest, ControllerActionDescriptor controllerActionDescriptor, string templateName);
    public string get_ControllerName();
    public string get_ActionName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_TemplateName();
    public Type get_ControllerType();
    [CompilerGeneratedAttribute]
public ControllerActionDescriptor get_ControllerActionDescriptor();
    [CompilerGeneratedAttribute]
public IPublishedRequest get_PublishedRequest();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Routing.UmbracoVirtualPageRoute : object {
    private EndpointDataSource _endpointDataSource;
    private LinkParser _linkParser;
    private UriUtility _uriUtility;
    private IPublishedRouter _publishedRouter;
    public UmbracoVirtualPageRoute(EndpointDataSource endpointDataSource, LinkParser linkParser, UriUtility uriUtility, IPublishedRouter publishedRouter);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Routing.UmbracoVirtualPageRoute/<SetupVirtualPageRoute>d__5")]
public sealed virtual Task SetupVirtualPageRoute(HttpContext httpContext);
    public sealed virtual IPublishedContent FindContent(Endpoint endpoint, HttpContext httpContext, RouteValueDictionary routeValues, ControllerActionDescriptor controllerActionDescriptor, object controller);
    public sealed virtual IPublishedContent FindContent(Endpoint endpoint, ActionExecutingContext actionExecutingContext);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Routing.UmbracoVirtualPageRoute/<CreatePublishedRequest>d__8")]
public sealed virtual Task`1<IPublishedRequest> CreatePublishedRequest(HttpContext httpContext, IPublishedContent publishedContent);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Routing.UmbracoVirtualPageRoute/<SetRouteValues>d__9")]
public sealed virtual Task SetRouteValues(HttpContext httpContext, IPublishedContent publishedContent, ControllerActionDescriptor controllerActionDescriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.BackOfficeSecurity : object {
    private object _currentUserLock;
    private IHttpContextAccessor _httpContextAccessor;
    private IUserService _userService;
    [NullableAttribute("2")]
private IUser _currentUser;
    [NullableAttribute("2")]
public IUser CurrentUser { get; }
    public BackOfficeSecurity(IUserService userService, IHttpContextAccessor httpContextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual IUser get_CurrentUser();
    [NullableContextAttribute("0")]
private Attempt`1<Guid> GetUserKey();
    [NullableContextAttribute("0")]
public sealed virtual Attempt`1<int> GetUserId();
    public sealed virtual bool IsAuthenticated();
    public sealed virtual bool UserHasSectionAccess(string section, IUser user);
}
public class Umbraco.Cms.Web.Common.Security.BackOfficeSecurityAccessor : object {
    [NullableAttribute("1")]
private IHttpContextAccessor _httpContextAccessor;
    [NullableAttribute("2")]
public IBackOfficeSecurity BackOfficeSecurity { get; }
    [NullableContextAttribute("1")]
public BackOfficeSecurityAccessor(IHttpContextAccessor httpContextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual IBackOfficeSecurity get_BackOfficeSecurity();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.BackOfficeUserManager : UmbracoUserManager`2<BackOfficeIdentityUser, UserPasswordConfigurationSettings> {
    private IBackOfficeUserPasswordChecker _backOfficeUserPasswordChecker;
    private GlobalSettings _globalSettings;
    private IEventAggregator _eventAggregator;
    private IHttpContextAccessor _httpContextAccessor;
    public BackOfficeUserManager(IIpResolver ipResolver, IUserStore`1<BackOfficeIdentityUser> store, IOptions`1<BackOfficeIdentityOptions> optionsAccessor, IPasswordHasher`1<BackOfficeIdentityUser> passwordHasher, IEnumerable`1<IUserValidator`1<BackOfficeIdentityUser>> userValidators, IEnumerable`1<IPasswordValidator`1<BackOfficeIdentityUser>> passwordValidators, BackOfficeErrorDescriber errors, IServiceProvider services, IHttpContextAccessor httpContextAccessor, ILogger`1<UserManager`1<BackOfficeIdentityUser>> logger, IOptions`1<UserPasswordConfigurationSettings> passwordConfiguration, IEventAggregator eventAggregator, IBackOfficeUserPasswordChecker backOfficeUserPasswordChecker, IOptions`1<GlobalSettings> globalSettings);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<IsLockedOutAsync>d__5")]
public virtual Task`1<bool> IsLockedOutAsync(BackOfficeIdentityUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<AccessFailedAsync>d__6")]
public virtual Task`1<IdentityResult> AccessFailedAsync(BackOfficeIdentityUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<ChangePasswordWithResetAsync>d__7")]
public virtual Task`1<IdentityResult> ChangePasswordWithResetAsync(string userId, string token, string newPassword);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<ChangePasswordAsync>d__8")]
public virtual Task`1<IdentityResult> ChangePasswordAsync(BackOfficeIdentityUser user, string currentPassword, string newPassword);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<SetLockoutEndDateAsync>d__9")]
public virtual Task`1<IdentityResult> SetLockoutEndDateAsync(BackOfficeIdentityUser user, Nullable`1<DateTimeOffset> lockoutEnd);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<UnlockUser>d__10")]
public sealed virtual Task`1<Attempt`2<UserUnlockResult, UserOperationStatus>> UnlockUser(IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<ResetAccessFailedCountAsync>d__11")]
public virtual Task`1<IdentityResult> ResetAccessFailedCountAsync(BackOfficeIdentityUser user);
    public sealed virtual void NotifyForgotPasswordRequested(IPrincipal currentUser, string userId);
    public sealed virtual void NotifyForgotPasswordChanged(IPrincipal currentUser, string userId);
    public sealed virtual SignOutSuccessResult NotifyLogoutSuccess(IPrincipal currentUser, string userId);
    [NullableContextAttribute("2")]
public void NotifyAccountLocked(IPrincipal currentUser, string userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<VerifyPasswordAsync>d__16")]
protected virtual Task`1<PasswordVerificationResult> VerifyPasswordAsync(IUserPasswordStore`1<BackOfficeIdentityUser> store, BackOfficeIdentityUser user, string password);
    private string GetCurrentUserId(IPrincipal currentUser);
    public void NotifyAccountUnlocked(IPrincipal currentUser, string userId);
    public void NotifyLoginFailed(IPrincipal currentUser, string userId);
    public void NotifyLoginRequiresVerification(IPrincipal currentUser, string userId);
    public void NotifyLoginSuccess(IPrincipal currentUser, string userId);
    public void NotifyPasswordChanged(IPrincipal currentUser, string userId);
    public void NotifyPasswordReset(IPrincipal currentUser, string userId);
    public void NotifyResetAccessFailedCount(IPrincipal currentUser, string userId);
    private T Notify(IPrincipal currentUser, Func`3<string, string, T> createNotification);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<CreateForInvite>d__26")]
public sealed virtual Task`1<IdentityCreationResult> CreateForInvite(UserCreateModel createModel);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<CreateAsync>d__27")]
public sealed virtual Task`1<IdentityCreationResult> CreateAsync(UserCreateModel createModel);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<GeneratePasswordResetTokenAsync>d__28")]
public sealed virtual Task`1<Attempt`2<string, UserOperationStatus>> GeneratePasswordResetTokenAsync(IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<GenerateEmailConfirmationTokenAsync>d__29")]
public sealed virtual Task`1<Attempt`2<string, UserOperationStatus>> GenerateEmailConfirmationTokenAsync(IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<GetLoginsAsync>d__30")]
public sealed virtual Task`1<Attempt`2<ICollection`1<IIdentityUserLogin>, UserOperationStatus>> GetLoginsAsync(IUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<IsEmailConfirmationTokenValidAsync>d__31")]
public sealed virtual Task`1<bool> IsEmailConfirmationTokenValidAsync(IUser user, string token);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.BackOfficeUserManager/<IsResetPasswordTokenValidAsync>d__32")]
public sealed virtual Task`1<bool> IsResetPasswordTokenValidAsync(IUser user, string token);
    private sealed virtual override string Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.BackOfficeIdentityUser>.GeneratePassword();
    private sealed virtual override Task`1<IdentityResult> Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.BackOfficeIdentityUser>.ValidatePasswordAsync(string password);
    private sealed virtual override Task`1<bool> Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.BackOfficeIdentityUser>.ValidateCredentialsAsync(string username, string password);
    private sealed virtual override string Umbraco.Cms.Core.Security.ICoreBackOfficeUserManager.GeneratePassword();
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<bool> <>n__0(BackOfficeIdentityUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__1(BackOfficeIdentityUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__2(string userId, string token, string newPassword);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__3(BackOfficeIdentityUser user, string currentPassword, string newPassword);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__4(BackOfficeIdentityUser user, Nullable`1<DateTimeOffset> lockoutEnd);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<IdentityResult> <>n__5(BackOfficeIdentityUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<PasswordVerificationResult> <>n__6(IUserPasswordStore`1<BackOfficeIdentityUser> store, BackOfficeIdentityUser user, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.ConfigureFormOptions : object {
    private IOptions`1<RuntimeSettings> _runtimeSettings;
    public ConfigureFormOptions(IOptions`1<RuntimeSettings> runtimeSettings);
    public sealed virtual void Configure(FormOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.ConfigureKestrelServerOptions : object {
    private IOptions`1<RuntimeSettings> _runtimeSettings;
    public ConfigureKestrelServerOptions(IOptions`1<RuntimeSettings> runtimeSettings);
    public sealed virtual void Configure(KestrelServerOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.ConfigureMemberCookieOptions : object {
    private IRuntimeState _runtimeState;
    private UmbracoRequestPaths _umbracoRequestPaths;
    public ConfigureMemberCookieOptions(IRuntimeState runtimeState, UmbracoRequestPaths umbracoRequestPaths);
    public sealed virtual void Configure(string name, CookieAuthenticationOptions options);
    public sealed virtual void Configure(CookieAuthenticationOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.ConfigureMemberIdentityOptions : object {
    private MemberPasswordConfigurationSettings _memberPasswordConfiguration;
    private SecuritySettings _securitySettings;
    public ConfigureMemberIdentityOptions(IOptions`1<MemberPasswordConfigurationSettings> memberPasswordConfiguration, IOptions`1<SecuritySettings> securitySettings);
    public sealed virtual void Configure(IdentityOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.ConfigureSecurityStampOptions : object {
    private SecuritySettings _securitySettings;
    public ConfigureSecurityStampOptions(IOptions`1<SecuritySettings> securitySettings);
    public static void ConfigureOptions(SecurityStampValidatorOptions options, SecuritySettings securitySettings);
    public sealed virtual void Configure(SecurityStampValidatorOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.EncryptionHelper : object {
    public static string Decrypt(string encryptedString, IDataProtectionProvider dataProtectionProvider);
    private static IDataProtector CreateDataProtector(IDataProtectionProvider dataProtectionProvider);
    public static string Encrypt(string plainString, IDataProtectionProvider dataProtectionProvider);
    public static string CreateEncryptedRouteString(IDataProtectionProvider dataProtectionProvider, string controllerName, string controllerAction, string area, object additionalRouteVals);
    public static bool DecryptAndValidateEncryptedRouteString(IDataProtectionProvider dataProtectionProvider, string encryptedString, IDictionary`2& parts);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Security.IBackOfficeSignInManager {
    public abstract virtual AuthenticationProperties ConfigureExternalAuthenticationProperties(string provider, string redirectUrl, string userId);
    public abstract virtual Task`1<SignInResult> ExternalLoginSignInAsync(ExternalLoginInfo loginInfo, bool isPersistent, bool bypassTwoFactor);
    public abstract virtual Task`1<IEnumerable`1<AuthenticationScheme>> GetExternalAuthenticationSchemesAsync();
    [NullableContextAttribute("2")]
public abstract virtual Task`1<ExternalLoginInfo> GetExternalLoginInfoAsync(string expectedXsrf);
    public abstract virtual Task`1<BackOfficeIdentityUser> GetTwoFactorAuthenticationUserAsync();
    public abstract virtual Task`1<SignInResult> PasswordSignInAsync(string userName, string password, bool isPersistent, bool lockoutOnFailure);
    public abstract virtual Task SignOutAsync();
    public abstract virtual Task SignInAsync(BackOfficeIdentityUser user, bool isPersistent, string authenticationMethod);
    public abstract virtual Task`1<ClaimsPrincipal> CreateUserPrincipalAsync(BackOfficeIdentityUser user);
    public abstract virtual Task`1<SignInResult> TwoFactorSignInAsync(string provider, string code, bool isPersistent, bool rememberClient);
    public abstract virtual Task`1<IdentityResult> UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo externalLogin);
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Security.IMemberExternalLoginProviders {
    public abstract virtual Task`1<MemberExternalLoginProviderScheme> GetAsync(string authenticationType);
    public abstract virtual Task`1<IEnumerable`1<MemberExternalLoginProviderScheme>> GetMemberProvidersAsync();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Security.IMemberRoleManager {
    public IEnumerable`1<UmbracoIdentityRole> Roles { get; }
    public abstract virtual IEnumerable`1<UmbracoIdentityRole> get_Roles();
}
[NullableContextAttribute("1")]
public interface Umbraco.Cms.Web.Common.Security.IMemberSignInManager {
    public abstract virtual Task`1<SignInResult> PasswordSignInAsync(string userName, string password, bool isPersistent, bool lockoutOnFailure);
    public abstract virtual Task SignInAsync(MemberIdentityUser user, bool isPersistent, string authenticationMethod);
    public abstract virtual Task SignOutAsync();
    [NullableContextAttribute("2")]
public abstract virtual AuthenticationProperties ConfigureExternalAuthenticationProperties(string provider, string redirectUrl, string userId);
    [NullableContextAttribute("2")]
public abstract virtual Task`1<ExternalLoginInfo> GetExternalLoginInfoAsync(string expectedXsrf);
    public abstract virtual Task`1<IdentityResult> UpdateExternalAuthenticationTokensAsync(ExternalLoginInfo externalLogin);
    public abstract virtual Task`1<SignInResult> ExternalLoginSignInAsync(ExternalLoginInfo loginInfo, bool isPersistent, bool bypassTwoFactor);
    public abstract virtual Task`1<MemberIdentityUser> GetTwoFactorAuthenticationUserAsync();
    public abstract virtual Task`1<SignInResult> TwoFactorSignInAsync(string provider, string code, bool isPersistent, bool rememberClient);
    public virtual Task`1<ClaimsPrincipal> CreateUserPrincipalAsync(MemberIdentityUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.MemberClaimsPrincipalFactory : UserClaimsPrincipalFactory`1<MemberIdentityUser> {
    protected string AuthenticationType { get; }
    public MemberClaimsPrincipalFactory(UserManager`1<MemberIdentityUser> userManager, IOptions`1<IdentityOptions> optionsAccessor);
    protected virtual string get_AuthenticationType();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberClaimsPrincipalFactory/<GenerateClaimsAsync>d__3")]
protected virtual Task`1<ClaimsIdentity> GenerateClaimsAsync(MemberIdentityUser user);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<ClaimsIdentity> <>n__0(MemberIdentityUser user);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberCookieManager : ChunkingCookieManager {
    private IRuntimeState _runtime;
    private UmbracoRequestPaths _umbracoRequestPaths;
    public MemberCookieManager(IRuntimeState runtime, UmbracoRequestPaths umbracoRequestPaths);
    private sealed virtual override string Microsoft.AspNetCore.Authentication.Cookies.ICookieManager.GetRequestCookie(HttpContext context, string key);
    public bool ShouldAuthenticateRequest(string absPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberExternalLoginProvider : object {
    [CompilerGeneratedAttribute]
private string <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private MemberExternalLoginProviderOptions <Options>k__BackingField;
    public string AuthenticationType { get; }
    public MemberExternalLoginProviderOptions Options { get; }
    public MemberExternalLoginProvider(string authenticationType, IOptionsMonitor`1<MemberExternalLoginProviderOptions> properties);
    [CompilerGeneratedAttribute]
public string get_AuthenticationType();
    [CompilerGeneratedAttribute]
public MemberExternalLoginProviderOptions get_Options();
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(MemberExternalLoginProvider other);
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberExternalLoginProviderOptions : object {
    [CompilerGeneratedAttribute]
private MemberExternalSignInAutoLinkOptions <AutoLinkOptions>k__BackingField;
    public MemberExternalSignInAutoLinkOptions AutoLinkOptions { get; public set; }
    [NullableContextAttribute("2")]
public MemberExternalLoginProviderOptions(MemberExternalSignInAutoLinkOptions autoLinkOptions, bool autoRedirectLoginToExternalProvider, string customBackOfficeView);
    [CompilerGeneratedAttribute]
public MemberExternalSignInAutoLinkOptions get_AutoLinkOptions();
    [CompilerGeneratedAttribute]
public void set_AutoLinkOptions(MemberExternalSignInAutoLinkOptions value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberExternalLoginProviders : object {
    private IAuthenticationSchemeProvider _authenticationSchemeProvider;
    private Dictionary`2<string, MemberExternalLoginProvider> _externalLogins;
    public MemberExternalLoginProviders(IEnumerable`1<MemberExternalLoginProvider> externalLogins, IAuthenticationSchemeProvider authenticationSchemeProvider);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberExternalLoginProviders/<GetAsync>d__3")]
public sealed virtual Task`1<MemberExternalLoginProviderScheme> GetAsync(string authenticationType);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberExternalLoginProviders/<GetMemberProvidersAsync>d__4")]
public sealed virtual Task`1<IEnumerable`1<MemberExternalLoginProviderScheme>> GetMemberProvidersAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberExternalLoginProviderScheme : object {
    [CompilerGeneratedAttribute]
private MemberExternalLoginProvider <ExternalLoginProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private AuthenticationScheme <AuthenticationScheme>k__BackingField;
    public MemberExternalLoginProvider ExternalLoginProvider { get; }
    public AuthenticationScheme AuthenticationScheme { get; }
    public MemberExternalLoginProviderScheme(MemberExternalLoginProvider externalLoginProvider, AuthenticationScheme authenticationScheme);
    [CompilerGeneratedAttribute]
public MemberExternalLoginProvider get_ExternalLoginProvider();
    [CompilerGeneratedAttribute]
public AuthenticationScheme get_AuthenticationScheme();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.MemberExternalSignInAutoLinkOptions : object {
    [NullableAttribute("2")]
private string _defaultCulture;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<MemberIdentityUser, ExternalLoginInfo> <OnAutoLinking>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<MemberIdentityUser, ExternalLoginInfo, bool> <OnExternalLogin>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoLinkExternalAccount>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultMemberTypeAlias>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DefaultIsApproved>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<string> <DefaultMemberGroups>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[IgnoreDataMemberAttribute]
public Action`2<MemberIdentityUser, ExternalLoginInfo> OnAutoLinking { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[IgnoreDataMemberAttribute]
public Func`3<MemberIdentityUser, ExternalLoginInfo, bool> OnExternalLogin { get; public set; }
    public bool AutoLinkExternalAccount { get; }
    public string DefaultMemberTypeAlias { get; }
    public bool DefaultIsApproved { get; }
    public IEnumerable`1<string> DefaultMemberGroups { get; }
    public MemberExternalSignInAutoLinkOptions(bool autoLinkExternalAccount, bool defaultIsApproved, string defaultMemberTypeAlias, string defaultCulture, IEnumerable`1<string> defaultMemberGroups);
    [CompilerGeneratedAttribute]
public Action`2<MemberIdentityUser, ExternalLoginInfo> get_OnAutoLinking();
    [CompilerGeneratedAttribute]
public void set_OnAutoLinking(Action`2<MemberIdentityUser, ExternalLoginInfo> value);
    [CompilerGeneratedAttribute]
public Func`3<MemberIdentityUser, ExternalLoginInfo, bool> get_OnExternalLogin();
    [CompilerGeneratedAttribute]
public void set_OnExternalLogin(Func`3<MemberIdentityUser, ExternalLoginInfo, bool> value);
    [CompilerGeneratedAttribute]
public bool get_AutoLinkExternalAccount();
    [CompilerGeneratedAttribute]
public string get_DefaultMemberTypeAlias();
    [CompilerGeneratedAttribute]
public bool get_DefaultIsApproved();
    [CompilerGeneratedAttribute]
public IEnumerable`1<string> get_DefaultMemberGroups();
    public string GetUserAutoLinkCulture(GlobalSettings globalSettings);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.MemberManager : UmbracoUserManager`2<MemberIdentityUser, MemberPasswordConfigurationSettings> {
    private IHttpContextAccessor _httpContextAccessor;
    private IPublicAccessService _publicAccessService;
    private IMemberUserStore _store;
    [NullableAttribute("2")]
private MemberIdentityUser _currentMember;
    public MemberManager(IIpResolver ipResolver, IMemberUserStore store, IOptions`1<IdentityOptions> optionsAccessor, IPasswordHasher`1<MemberIdentityUser> passwordHasher, IEnumerable`1<IUserValidator`1<MemberIdentityUser>> userValidators, IEnumerable`1<IPasswordValidator`1<MemberIdentityUser>> passwordValidators, IdentityErrorDescriber errors, IServiceProvider services, ILogger`1<UserManager`1<MemberIdentityUser>> logger, IOptionsSnapshot`1<MemberPasswordConfigurationSettings> passwordConfiguration, IPublicAccessService publicAccessService, IHttpContextAccessor httpContextAccessor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<IsMemberAuthorizedAsync>d__5")]
public virtual Task`1<bool> IsMemberAuthorizedAsync(IEnumerable`1<string> allowTypes, IEnumerable`1<string> allowGroups, IEnumerable`1<int> allowMembers);
    public virtual bool IsLoggedIn();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<MemberHasAccessAsync>d__7")]
public virtual Task`1<bool> MemberHasAccessAsync(string path);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<MemberHasAccessAsync>d__8")]
public virtual Task`1<IReadOnlyDictionary`2<string, bool>> MemberHasAccessAsync(IEnumerable`1<string> paths);
    public virtual Task`1<bool> IsProtectedAsync(string path);
    public virtual Task`1<IReadOnlyDictionary`2<string, bool>> IsProtectedAsync(IEnumerable`1<string> paths);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<GetCurrentMemberAsync>d__11")]
public virtual Task`1<MemberIdentityUser> GetCurrentMemberAsync();
    public virtual IPublishedContent AsPublishedMember(MemberIdentityUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<HasAccessAsync>d__13")]
private Task`1<bool> HasAccessAsync(string path);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberManager/<HasAccessAsync>d__14")]
private Task`1<IReadOnlyDictionary`2<string, bool>> HasAccessAsync(IEnumerable`1<string> paths);
    private sealed virtual override string Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.MemberIdentityUser>.GeneratePassword();
    private sealed virtual override Task`1<IdentityResult> Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.MemberIdentityUser>.ValidatePasswordAsync(string password);
    private sealed virtual override Task`1<bool> Umbraco.Cms.Core.Security.IUmbracoUserManager<Umbraco.Cms.Core.Security.MemberIdentityUser>.ValidateCredentialsAsync(string username, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.MemberRoleManager : RoleManager`1<UmbracoIdentityRole> {
    private IEnumerable`1<UmbracoIdentityRole> Umbraco.Cms.Web.Common.Security.IMemberRoleManager.Roles { get; }
    public MemberRoleManager(IRoleStore`1<UmbracoIdentityRole> store, IEnumerable`1<IRoleValidator`1<UmbracoIdentityRole>> roleValidators, IdentityErrorDescriber errors, ILogger`1<MemberRoleManager> logger);
    private sealed virtual override IEnumerable`1<UmbracoIdentityRole> Umbraco.Cms.Web.Common.Security.IMemberRoleManager.get_Roles();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.MemberSecurityStampValidator : SecurityStampValidator`1<MemberIdentityUser> {
    public MemberSecurityStampValidator(IOptions`1<MemberSecurityStampValidatorOptions> options, MemberSignInManager signInManager, ILoggerFactory logger);
    public virtual Task ValidateAsync(CookieValidatePrincipalContext context);
}
public class Umbraco.Cms.Web.Common.Security.MemberSecurityStampValidatorOptions : SecurityStampValidatorOptions {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Umbraco.Cms.Web.Common.Security.MemberSignInManager : UmbracoSignInManager`1<MemberIdentityUser> {
    private IEventAggregator _eventAggregator;
    private IMemberExternalLoginProviders _memberExternalLoginProviders;
    protected string AuthenticationType { get; }
    protected string ExternalAuthenticationType { get; }
    protected string TwoFactorAuthenticationType { get; }
    protected string TwoFactorRememberMeAuthenticationType { get; }
    public MemberSignInManager(UserManager`1<MemberIdentityUser> memberManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory`1<MemberIdentityUser> claimsFactory, IOptions`1<IdentityOptions> optionsAccessor, ILogger`1<SignInManager`1<MemberIdentityUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation`1<MemberIdentityUser> confirmation, IMemberExternalLoginProviders memberExternalLoginProviders, IEventAggregator eventAggregator, IOptions`1<SecuritySettings> securitySettings, IRequestCache requestCache);
    [ObsoleteAttribute("Use non-obsolete constructor. This is scheduled for removal in V15.")]
public MemberSignInManager(UserManager`1<MemberIdentityUser> memberManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory`1<MemberIdentityUser> claimsFactory, IOptions`1<IdentityOptions> optionsAccessor, ILogger`1<SignInManager`1<MemberIdentityUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation`1<MemberIdentityUser> confirmation, IMemberExternalLoginProviders memberExternalLoginProviders, IEventAggregator eventAggregator, IOptions`1<SecuritySettings> securitySettings);
    protected virtual string get_AuthenticationType();
    protected virtual string get_ExternalAuthenticationType();
    protected virtual string get_TwoFactorAuthenticationType();
    protected virtual string get_TwoFactorRememberMeAuthenticationType();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberSignInManager/<GetExternalLoginInfoAsync>d__12")]
public virtual Task`1<ExternalLoginInfo> GetExternalLoginInfoAsync(string expectedXsrf);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberSignInManager/<ExternalLoginSignInAsync>d__13")]
public virtual Task`1<SignInResult> ExternalLoginSignInAsync(ExternalLoginInfo loginInfo, bool isPersistent, bool bypassTwoFactor);
    [NullableContextAttribute("2")]
public virtual AuthenticationProperties ConfigureExternalAuthenticationProperties(string provider, string redirectUrl, string userId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberSignInManager/<SignInOrTwoFactorAsync>d__15")]
protected virtual Task`1<SignInResult> SignInOrTwoFactorAsync(MemberIdentityUser user, bool isPersistent, string loginProvider, bool bypassTwoFactor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberSignInManager/<AutoLinkAndSignInExternalAccount>d__16")]
private Task`1<SignInResult> AutoLinkAndSignInExternalAccount(ExternalLoginInfo loginInfo, MemberExternalSignInAutoLinkOptions autoLinkOptions);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.MemberSignInManager/<LinkUser>d__17")]
private Task`1<SignInResult> LinkUser(MemberIdentityUser autoLinkUser, ExternalLoginInfo loginInfo);
    protected Task`1<AutoLinkSignInResult> HandleFailedLinkingUser(MemberIdentityUser autoLinkUser, IdentityResult linkResult);
    private void LogFailedExternalLogin(ExternalLoginInfo loginInfo, MemberIdentityUser user);
    protected void NotifyRequiresTwoFactor(MemberIdentityUser user);
    private T Notify(MemberIdentityUser currentUser, Func`2<MemberIdentityUser, T> createNotification);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<SignInResult> <>n__0(MemberIdentityUser user, bool isPersistent, string loginProvider, bool bypassTwoFactor);
}
public class Umbraco.Cms.Web.Common.Security.NoopBackOfficeUserPasswordChecker : object {
    [NullableContextAttribute("1")]
public sealed virtual Task`1<BackOfficeUserPasswordCheckerResult> CheckPasswordAsync(BackOfficeIdentityUser user, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.Security.PublicAccessChecker : object {
    private IContentService _contentService;
    private IHttpContextAccessor _httpContextAccessor;
    private IPublicAccessService _publicAccessService;
    public PublicAccessChecker(IHttpContextAccessor httpContextAccessor, IPublicAccessService publicAccessService, IContentService contentService);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.PublicAccessChecker/<HasMemberAccessToContentAsync>d__4")]
public sealed virtual Task`1<PublicAccessStatus> HasMemberAccessToContentAsync(int publishedContentId);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.PublicAccessChecker/<HasMemberAccessToContentAsync>d__5")]
public sealed virtual Task`1<PublicAccessStatus> HasMemberAccessToContentAsync(int publishedContentId, ClaimsPrincipal claimsPrincipal);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.PublicAccessChecker/<HasMemberAccessToContentAsync>d__6")]
private Task`1<PublicAccessStatus> HasMemberAccessToContentAsync(int publishedContentId, Func`2<HttpContext, ClaimsPrincipal> getClaimsPrincipal);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1 : SignInManager`1<TUser> {
    private IRequestCache _requestCache;
    private SecuritySettings _securitySettings;
    protected static string UmbracoSignInMgrLoginProviderKey;
    protected static string UmbracoSignInMgrXsrfKey;
    protected string AuthenticationType { get; }
    protected string ExternalAuthenticationType { get; }
    protected string TwoFactorAuthenticationType { get; }
    protected string TwoFactorRememberMeAuthenticationType { get; }
    [ObsoleteAttribute("Use non-obsolete constructor. This is scheduled for removal in V15.")]
public UmbracoSignInManager`1(UserManager`1<TUser> userManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory`1<TUser> claimsFactory, IOptions`1<IdentityOptions> optionsAccessor, ILogger`1<SignInManager`1<TUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation`1<TUser> confirmation, IOptions`1<SecuritySettings> securitySettingsOptions);
    public UmbracoSignInManager`1(UserManager`1<TUser> userManager, IHttpContextAccessor contextAccessor, IUserClaimsPrincipalFactory`1<TUser> claimsFactory, IOptions`1<IdentityOptions> optionsAccessor, ILogger`1<SignInManager`1<TUser>> logger, IAuthenticationSchemeProvider schemes, IUserConfirmation`1<TUser> confirmation, IOptions`1<SecuritySettings> securitySettingsOptions, IRequestCache requestCache);
    protected abstract virtual string get_AuthenticationType();
    protected abstract virtual string get_ExternalAuthenticationType();
    protected abstract virtual string get_TwoFactorAuthenticationType();
    protected abstract virtual string get_TwoFactorRememberMeAuthenticationType();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<PasswordSignInAsync>d__14")]
public virtual Task`1<SignInResult> PasswordSignInAsync(TUser user, string password, bool isPersistent, bool lockoutOnFailure);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<CreateUserPrincipalAsync>d__15")]
public virtual Task`1<ClaimsPrincipal> CreateUserPrincipalAsync(Guid userKey);
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<GetExternalLoginInfoAsync>d__16")]
public virtual Task`1<ExternalLoginInfo> GetExternalLoginInfoAsync(string expectedXsrf);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<GetTwoFactorAuthenticationUserAsync>d__17")]
public virtual Task`1<TUser> GetTwoFactorAuthenticationUserAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<PasswordSignInAsync>d__18")]
public virtual Task`1<SignInResult> PasswordSignInAsync(string userName, string password, bool isPersistent, bool lockoutOnFailure);
    public virtual bool IsSignedIn(ClaimsPrincipal principal);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<TwoFactorSignInAsync>d__20")]
public virtual Task`1<SignInResult> TwoFactorSignInAsync(string provider, string code, bool isPersistent, bool rememberClient);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<RefreshSignInAsync>d__21")]
public virtual Task RefreshSignInAsync(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<SignInWithClaimsAsync>d__22")]
public virtual Task SignInWithClaimsAsync(TUser user, AuthenticationProperties authenticationProperties, IEnumerable`1<Claim> additionalClaims);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<SignOutAsync>d__23")]
public virtual Task SignOutAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<IsTwoFactorClientRememberedAsync>d__24")]
public virtual Task`1<bool> IsTwoFactorClientRememberedAsync(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<RememberTwoFactorClientAsync>d__25")]
public virtual Task RememberTwoFactorClientAsync(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<TwoFactorRecoveryCodeSignInAsync>d__26")]
public virtual Task`1<SignInResult> TwoFactorRecoveryCodeSignInAsync(string recoveryCode);
    public virtual Task ForgetTwoFactorClientAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<HandleSignIn>d__28")]
protected virtual Task`1<SignInResult> HandleSignIn(TUser user, string username, SignInResult result);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<SignInOrTwoFactorAsync>d__29")]
protected virtual Task`1<SignInResult> SignInOrTwoFactorAsync(TUser user, bool isPersistent, string loginProvider, bool bypassTwoFactor);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<IsTfaEnabled>d__30")]
private Task`1<bool> IsTfaEnabled(TUser user);
    private ClaimsPrincipal StoreTwoFactorInfo(string userId, string loginProvider);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<StoreRememberClient>d__32")]
private Task`1<ClaimsPrincipal> StoreRememberClient(TUser user);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<RetrieveTwoFactorInfoAsync>d__33")]
private Task`1<TwoFactorAuthenticationInfo<TUser>> RetrieveTwoFactorInfoAsync();
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Security.UmbracoSignInManager`1/<DoTwoFactorSignInAsync>d__34")]
private Task DoTwoFactorSignInAsync(TUser user, TwoFactorAuthenticationInfo<TUser> twoFactorInfo, bool isPersistent, bool rememberClient);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task`1<SignInResult> <>n__0(TUser user, string password, bool isPersistent, bool lockoutOnFailure);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <IsSignedIn>b__19_0(ClaimsIdentity i);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Umbraco.Cms.Web.Common.Templates.TemplateRenderer : object {
    private IFileService _fileService;
    private IHttpContextAccessor _httpContextAccessor;
    private ILocalizationService _languageService;
    private IModelMetadataProvider _modelMetadataProvider;
    private IPublishedRouter _publishedRouter;
    private ITempDataDictionaryFactory _tempDataDictionaryFactory;
    private IUmbracoContextAccessor _umbracoContextAccessor;
    private ICompositeViewEngine _viewEngine;
    private WebRoutingSettings _webRoutingSettings;
    public TemplateRenderer(IUmbracoContextAccessor umbracoContextAccessor, IPublishedRouter publishedRouter, IFileService fileService, ILocalizationService textService, IOptionsMonitor`1<WebRoutingSettings> webRoutingSettings, IHttpContextAccessor httpContextAccessor, ICompositeViewEngine viewEngine, IModelMetadataProvider modelMetadataProvider, ITempDataDictionaryFactory tempDataDictionaryFactory);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.Templates.TemplateRenderer/<RenderAsync>d__10")]
public sealed virtual Task RenderAsync(int pageId, Nullable`1<int> altTemplateId, StringWriter writer);
    private void ExecuteTemplateRendering(TextWriter sw, IPublishedRequest request);
    private void SetNewItemsOnContextObjects(IPublishedRequest request);
    [NullableContextAttribute("2")]
private void SaveExistingItems(IPublishedRequest& oldPublishedRequest);
    [NullableContextAttribute("2")]
private void RestoreItems(IPublishedRequest oldPublishedRequest);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <.ctor>b__9_0(WebRoutingSettings x);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.UmbracoContext.UmbracoContext : DisposableObjectSlim {
    [NullableAttribute("1")]
private ICookieManager _cookieManager;
    [NullableAttribute("1")]
private IHostingEnvironment _hostingEnvironment;
    [NullableAttribute("1")]
private IHttpContextAccessor _httpContextAccessor;
    [NullableAttribute("1")]
private IWebProfilerService _webProfilerService;
    [NullableAttribute("1")]
private Lazy`1<IPublishedSnapshot> _publishedSnapshot;
    [NullableAttribute("1")]
private UmbracoRequestPaths _umbracoRequestPaths;
    [NullableAttribute("1")]
private UriUtility _uriUtility;
    private Uri _cleanedUmbracoUrl;
    private Uri _originalRequestUrl;
    private Nullable`1<bool> _previewing;
    private string _previewToken;
    private Uri _requestUrl;
    [CompilerGeneratedAttribute]
private DateTime <ObjectCreated>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <UmbracoRequestId>k__BackingField;
    [CompilerGeneratedAttribute]
private IPublishedRequest <PublishedRequest>k__BackingField;
    public DateTime ObjectCreated { get; }
    internal Guid UmbracoRequestId { get; }
    internal string PreviewToken { get; }
    private Uri RequestUrl { get; }
    [NullableAttribute("1")]
public Uri OriginalRequestUrl { get; }
    [NullableAttribute("1")]
public Uri CleanedUmbracoUrl { get; }
    [NullableAttribute("1")]
public IPublishedSnapshot PublishedSnapshot { get; }
    public IPublishedContentCache Content { get; }
    public IPublishedMediaCache Media { get; }
    public IDomainCache Domains { get; }
    public IPublishedRequest PublishedRequest { get; public set; }
    public bool IsDebug { get; }
    public bool InPreviewMode { get; private set; }
    [NullableContextAttribute("1")]
internal UmbracoContext(IPublishedSnapshotService publishedSnapshotService, UmbracoRequestPaths umbracoRequestPaths, IHostingEnvironment hostingEnvironment, UriUtility uriUtility, ICookieManager cookieManager, IHttpContextAccessor httpContextAccessor, IWebProfilerService webProfilerService);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_ObjectCreated();
    [CompilerGeneratedAttribute]
internal Guid get_UmbracoRequestId();
    internal string get_PreviewToken();
    private Uri get_RequestUrl();
    [NullableContextAttribute("1")]
public sealed virtual Uri get_OriginalRequestUrl();
    [NullableContextAttribute("1")]
public sealed virtual Uri get_CleanedUmbracoUrl();
    [NullableContextAttribute("1")]
public sealed virtual IPublishedSnapshot get_PublishedSnapshot();
    public sealed virtual IPublishedContentCache get_Content();
    public sealed virtual IPublishedMediaCache get_Media();
    public sealed virtual IDomainCache get_Domains();
    [CompilerGeneratedAttribute]
public sealed virtual IPublishedRequest get_PublishedRequest();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PublishedRequest(IPublishedRequest value);
    public sealed virtual bool get_IsDebug();
    public sealed virtual bool get_InPreviewMode();
    private void set_InPreviewMode(bool value);
    [NullableContextAttribute("1")]
public sealed virtual IDisposable ForcedPreview(bool preview);
    protected virtual void DisposeResources();
    private void DetectPreviewMode();
    [CompilerGeneratedAttribute]
private void <ForcedPreview>b__44_0(bool orig);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.UmbracoContext.UmbracoContextFactory : object {
    private ICookieManager _cookieManager;
    private IHostingEnvironment _hostingEnvironment;
    private IHttpContextAccessor _httpContextAccessor;
    private IWebProfilerService _webProfilerService;
    private IPublishedSnapshotService _publishedSnapshotService;
    private IUmbracoContextAccessor _umbracoContextAccessor;
    private UmbracoRequestPaths _umbracoRequestPaths;
    private UriUtility _uriUtility;
    [ObsoleteAttribute("Use non-obsolete ctor. This will be removed in Umbraco 15.")]
public UmbracoContextFactory(IUmbracoContextAccessor umbracoContextAccessor, IPublishedSnapshotService publishedSnapshotService, UmbracoRequestPaths umbracoRequestPaths, IHostingEnvironment hostingEnvironment, UriUtility uriUtility, ICookieManager cookieManager, IHttpContextAccessor httpContextAccessor);
    public UmbracoContextFactory(IUmbracoContextAccessor umbracoContextAccessor, IPublishedSnapshotService publishedSnapshotService, UmbracoRequestPaths umbracoRequestPaths, IHostingEnvironment hostingEnvironment, UriUtility uriUtility, ICookieManager cookieManager, IHttpContextAccessor httpContextAccessor, IWebProfilerService webProfilerService);
    public sealed virtual UmbracoContextReference EnsureUmbracoContext();
    private IUmbracoContext CreateUmbracoContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.UmbracoHelper : object {
    private IUmbracoComponentRenderer _componentRenderer;
    private ICultureDictionaryFactory _cultureDictionaryFactory;
    private IPublishedContentQuery _publishedContentQuery;
    private Dictionary`2<CultureInfo, ICultureDictionary> _cultureDictionaries;
    [NullableAttribute("2")]
private IPublishedContent _currentPage;
    public IPublishedContent AssignedContentItem { get; public set; }
    public ICultureDictionary CultureDictionary { get; }
    public UmbracoHelper(ICultureDictionaryFactory cultureDictionary, IUmbracoComponentRenderer componentRenderer, IPublishedContentQuery publishedContentQuery);
    public IPublishedContent get_AssignedContentItem();
    public void set_AssignedContentItem(IPublishedContent value);
    [AsyncStateMachineAttribute("Umbraco.Cms.Web.Common.UmbracoHelper/<RenderTemplateAsync>d__10")]
public Task`1<IHtmlEncodedString> RenderTemplateAsync(int contentId, Nullable`1<int> altTemplateId);
    public string GetDictionaryValue(string key);
    public string GetDictionaryValue(string key, CultureInfo specificCulture);
    public string GetDictionaryValueOrDefault(string key, string defaultValue);
    public string GetDictionaryValueOrDefault(string key, CultureInfo specificCulture, string defaultValue);
    public ICultureDictionary get_CultureDictionary();
    public ICultureDictionary GetCultureDictionary(CultureInfo specificCulture);
    internal void CreateCultureDictionary(CultureInfo specificCulture);
    public IPublishedContent Content(object id);
    private IPublishedContent ContentForObject(object id);
    [NullableContextAttribute("2")]
public IPublishedContent Content(int id);
    [NullableContextAttribute("2")]
public IPublishedContent Content(Guid id);
    public IPublishedContent Content(string id);
    public IPublishedContent Content(Udi id);
    public IEnumerable`1<IPublishedContent> Content(Object[] ids);
    public IEnumerable`1<IPublishedContent> Content(Udi[] ids);
    public IEnumerable`1<IPublishedContent> Content(GuidUdi[] ids);
    public IEnumerable`1<IPublishedContent> Content(Int32[] ids);
    public IEnumerable`1<IPublishedContent> Content(Guid[] ids);
    public IEnumerable`1<IPublishedContent> Content(String[] ids);
    public IEnumerable`1<IPublishedContent> Content(IEnumerable`1<object> ids);
    public IEnumerable`1<IPublishedContent> Content(IEnumerable`1<Udi> ids);
    public IEnumerable`1<IPublishedContent> Content(IEnumerable`1<GuidUdi> ids);
    public IEnumerable`1<IPublishedContent> Content(IEnumerable`1<string> ids);
    public IEnumerable`1<IPublishedContent> Content(IEnumerable`1<int> ids);
    public IEnumerable`1<IPublishedContent> ContentAtRoot();
    public IPublishedContent Media(Udi id);
    [NullableContextAttribute("2")]
public IPublishedContent Media(Guid id);
    public IPublishedContent Media(object id);
    private IPublishedContent MediaForObject(object id);
    [NullableContextAttribute("2")]
public IPublishedContent Media(int id);
    public IPublishedContent Media(string id);
    public IEnumerable`1<IPublishedContent> Media(Object[] ids);
    public IEnumerable`1<IPublishedContent> Media(Int32[] ids);
    public IEnumerable`1<IPublishedContent> Media(String[] ids);
    public IEnumerable`1<IPublishedContent> Media(Udi[] ids);
    public IEnumerable`1<IPublishedContent> Media(GuidUdi[] ids);
    public IEnumerable`1<IPublishedContent> Media(IEnumerable`1<object> ids);
    public IEnumerable`1<IPublishedContent> Media(IEnumerable`1<int> ids);
    public IEnumerable`1<IPublishedContent> Media(IEnumerable`1<Udi> ids);
    public IEnumerable`1<IPublishedContent> Media(IEnumerable`1<GuidUdi> ids);
    public IEnumerable`1<IPublishedContent> Media(IEnumerable`1<string> ids);
    public IEnumerable`1<IPublishedContent> MediaAtRoot();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Umbraco.Cms.Web.Common.UmbracoHelperAccessor : object {
    private IHttpContextAccessor _httpContextAccessor;
    public UmbracoHelperAccessor(IHttpContextAccessor httpContextAccessor);
    public sealed virtual bool TryGetUmbracoHelper(UmbracoHelper& umbracoHelper);
}
internal class Umbraco.Cms.Web.Common.Validators.BypassRenderingModelValidationMetadataProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual void CreateValidationMetadata(ValidationMetadataProviderContext context);
}
internal class Umbraco.Cms.Web.Common.Validators.BypassRenderingModelValidatorProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual void CreateValidators(ModelValidatorProviderContext context);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Web.Common.Views.UmbracoViewPage : UmbracoViewPage`1<IPublishedContent> {
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Umbraco.Cms.Web.Common.Views.UmbracoViewPage`1 : RazorPage`1<TModel> {
    [NullableAttribute("2")]
private UmbracoHelper _helper;
    public UmbracoHelper Umbraco { get; }
    public ViewContext ViewContext { get; public set; }
    [NullableAttribute("2")]
protected IUmbracoContext UmbracoContext { get; }
    private IUmbracoContextAccessor UmbracoContextAccessor { get; }
    private GlobalSettings GlobalSettings { get; }
    private ContentSettings ContentSettings { get; }
    private IProfilerHtml ProfilerHtml { get; }
    private IHostingEnvironment HostingEnvironment { get; }
    public UmbracoHelper get_Umbraco();
    public virtual ViewContext get_ViewContext();
    public virtual void set_ViewContext(ViewContext value);
    [NullableContextAttribute("2")]
protected IUmbracoContext get_UmbracoContext();
    private IUmbracoContextAccessor get_UmbracoContextAccessor();
    private GlobalSettings get_GlobalSettings();
    private ContentSettings get_ContentSettings();
    private IProfilerHtml get_ProfilerHtml();
    private IHostingEnvironment get_HostingEnvironment();
    [NullableContextAttribute("2")]
public virtual void Write(object value);
    public void WriteUmbracoContent(TagHelperOutput tagHelperOutput);
    public HtmlString RenderSection(string name, string defaultContents);
    public HtmlString RenderSection(string name, HtmlString defaultContents);
    protected ViewDataDictionary BindViewData(ContentModelBinder contentModelBinder, ViewDataDictionary viewData);
    private static ViewDataDictionary MapViewDataDictionary(ViewDataDictionary viewData, Type modelType);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.ActionResultExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsSuccessStatusCode(ActionResult actionResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IUmbracoApplicationBuilder UseUmbraco(IApplicationBuilder app);
    [ExtensionAttribute]
public static bool UmbracoCanBoot(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoCore(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoRouting(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoRequestLogging(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoPluginsStaticFiles(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoMediaFileProvider(IApplicationBuilder app);
    [ExtensionAttribute]
public static IApplicationBuilder UseUmbracoBackOfficeRewrites(IApplicationBuilder builder);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.ApplicationDiscriminatorExtensions : object {
    [NullableAttribute("2")]
private static string applicationId;
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string GetApplicationId(IApplicationDiscriminator applicationDiscriminator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.BlockGridTemplateExtensions : object {
    public static string DefaultFolder;
    public static string DefaultTemplate;
    public static string DefaultItemsTemplate;
    public static string DefaultItemAreasTemplate;
    public static string DefaultItemAreaTemplate;
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridHtmlAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridHtmlAsync(IHtmlHelper html, BlockGridModel model, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridHtmlAsync>d__6")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridHtmlAsync(IHtmlHelper html, IPublishedProperty property, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridHtmlAsync>d__7")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridHtmlAsync(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridHtmlAsync>d__8")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridHtmlAsync(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridItemsHtmlAsync>d__9")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridItemsHtmlAsync(IHtmlHelper html, IEnumerable`1<BlockGridItem> items, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridItemAreasHtmlAsync>d__10")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridItemAreasHtmlAsync(IHtmlHelper html, BlockGridItem item, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridItemAreaHtmlAsync>d__11")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridItemAreaHtmlAsync(IHtmlHelper html, BlockGridArea area, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockGridTemplateExtensions/<GetBlockGridItemAreaHtmlAsync>d__12")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockGridItemAreaHtmlAsync(IHtmlHelper html, BlockGridItem item, string areaAlias, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridHtml(IHtmlHelper html, BlockGridModel model, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridHtml(IHtmlHelper html, IPublishedProperty property, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridHtml(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridHtml(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridItemsHtml(IHtmlHelper html, IEnumerable`1<BlockGridItem> items, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridItemAreasHtml(IHtmlHelper html, BlockGridItem item, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridItemAreaHtml(IHtmlHelper html, BlockGridArea area, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockGridItemAreaHtml(IHtmlHelper html, BlockGridItem item, string areaAlias, string template);
    private static string DefaultFolderTemplate(string template);
    private static IPublishedProperty GetRequiredProperty(IPublishedContent contentItem, string propertyAlias);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.BlockListTemplateExtensions : object {
    public static string DefaultFolder;
    public static string DefaultTemplate;
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockListTemplateExtensions/<GetBlockListHtmlAsync>d__2")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockListHtmlAsync(IHtmlHelper html, BlockListModel model, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockListTemplateExtensions/<GetBlockListHtmlAsync>d__3")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockListHtmlAsync(IHtmlHelper html, IPublishedProperty property, string template);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockListTemplateExtensions/<GetBlockListHtmlAsync>d__4")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockListHtmlAsync(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias);
    [AsyncStateMachineAttribute("Umbraco.Extensions.BlockListTemplateExtensions/<GetBlockListHtmlAsync>d__5")]
[ExtensionAttribute]
public static Task`1<IHtmlContent> GetBlockListHtmlAsync(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockListHtml(IHtmlHelper html, BlockListModel model, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockListHtml(IHtmlHelper html, IPublishedProperty property, string template);
    [ExtensionAttribute]
public static IHtmlContent GetBlockListHtml(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias);
    [ExtensionAttribute]
public static IHtmlContent GetBlockListHtml(IHtmlHelper html, IPublishedContent contentItem, string propertyAlias, string template);
    private static string DefaultFolderTemplate(string template);
    private static IPublishedProperty GetRequiredProperty(IPublishedContent contentItem, string propertyAlias);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.CacheHelperExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IHtmlContent CachedPartialView(AppCaches appCaches, IHostingEnvironment hostingEnvironment, IUmbracoContext umbracoContext, IHtmlHelper htmlHelper, string partialViewName, object model, TimeSpan cacheTimeout, string cacheKey, ViewDataDictionary viewData);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.ControllerActionEndpointConventionBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ForUmbracoPage(ControllerActionEndpointConventionBuilder builder, Func`2<ActionExecutingContext, IPublishedContent> findContent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ControllerExtensions : object {
    [AsyncStateMachineAttribute("Umbraco.Extensions.ControllerExtensions/<AuthenticateBackOfficeAsync>d__0")]
[ExtensionAttribute]
public static Task`1<AuthenticateResult> AuthenticateBackOfficeAsync(ControllerBase controller);
    public static string GetControllerName(Type controllerType);
    [ExtensionAttribute]
public static string GetControllerName(Controller controllerInstance);
    public static string GetControllerName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.EndpointRouteBuilderExtensions : object {
    [ExtensionAttribute]
public static void MapUmbracoRoute(IEndpointRouteBuilder endpoints, Type controllerType, string rootSegment, string areaName, string prefixPathSegment, string defaultAction, bool includeControllerNameInRoute, object constraints);
    [ExtensionAttribute]
public static void MapUmbracoRoute(IEndpointRouteBuilder endpoints, string rootSegment, string areaName, string prefixPathSegment, string defaultAction, bool includeControllerNameInRoute, object constraints);
    [ExtensionAttribute]
public static void MapUmbracoApiRoute(IEndpointRouteBuilder endpoints, string rootSegment, string areaName, bool isBackOffice, string defaultAction, object constraints);
    [ExtensionAttribute]
public static void MapUmbracoApiRoute(IEndpointRouteBuilder endpoints, Type controllerType, string rootSegment, string areaName, bool isBackOffice, string defaultAction, object constraints);
    [ExtensionAttribute]
public static void MapUmbracoSurfaceRoute(IEndpointRouteBuilder endpoints, Type controllerType, string rootSegment, string areaName, string defaultAction, bool includeControllerNameInRoute, object constraints);
}
[ExtensionAttribute]
internal static class Umbraco.Extensions.FileProviderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IFileProvider ConcatComposite(IFileProvider fileProvider, IFileProvider[] fileProviders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.FormCollectionExtensions : object {
    [ExtensionAttribute]
public static string ToQueryString(FormCollection items, String[] keysToIgnore);
    [ExtensionAttribute]
public static IDictionary`2<string, object> ToDictionary(FormCollection items);
    [ExtensionAttribute]
public static string GetRequiredString(FormCollection items, string key);
    [ExtensionAttribute]
public static bool HasKey(FormCollection items, string key);
    [ExtensionAttribute]
public static T GetValue(FormCollection items, string key);
    [ExtensionAttribute]
public static T GetRequiredValue(FormCollection items, string key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.FriendlyImageCropperTemplateExtensions : object {
    [CompilerGeneratedAttribute]
private static IImageUrlGenerator <ImageUrlGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback <PublishedValueFallback>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPublishedUrlProvider <PublishedUrlProvider>k__BackingField;
    private static IImageUrlGenerator ImageUrlGenerator { get; }
    private static IPublishedValueFallback PublishedValueFallback { get; }
    private static IPublishedUrlProvider PublishedUrlProvider { get; }
    private static FriendlyImageCropperTemplateExtensions();
    [CompilerGeneratedAttribute]
private static IImageUrlGenerator get_ImageUrlGenerator();
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback get_PublishedValueFallback();
    [CompilerGeneratedAttribute]
private static IPublishedUrlProvider get_PublishedUrlProvider();
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, string cropAlias, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, string cropAlias, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, ImageCropperValue imageCropperValue, string cropAlias, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, string propertyAlias, string cropAlias, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, string propertyAlias, string cropAlias, UrlMode urlMode);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, UrlMode urlMode);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, UrlMode urlMode);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(string imageUrl, Nullable`1<int> width, Nullable`1<int> height, string imageCropperValue, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, string cacheBusterValue, string furtherOptions);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(string imageUrl, ImageCropperValue cropDataSet, Nullable`1<int> width, Nullable`1<int> height, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, string cacheBusterValue, string furtherOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.FriendlyPublishedContentExtensions : object {
    [CompilerGeneratedAttribute]
private static IVariationContextAccessor <VariationContextAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPublishedModelFactory <PublishedModelFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPublishedUrlProvider <PublishedUrlProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private static IUserService <UserService>k__BackingField;
    [CompilerGeneratedAttribute]
private static IUmbracoContextAccessor <UmbracoContextAccessor>k__BackingField;
    [CompilerGeneratedAttribute]
private static ISiteDomainMapper <SiteDomainHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private static IExamineManager <ExamineManager>k__BackingField;
    [CompilerGeneratedAttribute]
private static IFileService <FileService>k__BackingField;
    [CompilerGeneratedAttribute]
private static IOptions`1<WebRoutingSettings> <WebRoutingSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private static IContentTypeService <ContentTypeService>k__BackingField;
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback <PublishedValueFallback>k__BackingField;
    [CompilerGeneratedAttribute]
private static IMediaTypeService <MediaTypeService>k__BackingField;
    [CompilerGeneratedAttribute]
private static IMemberTypeService <MemberTypeService>k__BackingField;
    private static IVariationContextAccessor VariationContextAccessor { get; }
    private static IPublishedModelFactory PublishedModelFactory { get; }
    private static IPublishedUrlProvider PublishedUrlProvider { get; }
    private static IUserService UserService { get; }
    private static IUmbracoContextAccessor UmbracoContextAccessor { get; }
    private static ISiteDomainMapper SiteDomainHelper { get; }
    private static IExamineManager ExamineManager { get; }
    private static IFileService FileService { get; }
    private static IOptions`1<WebRoutingSettings> WebRoutingSettings { get; }
    private static IContentTypeService ContentTypeService { get; }
    private static IPublishedValueFallback PublishedValueFallback { get; }
    [NullableAttribute("2")]
private static IPublishedSnapshot PublishedSnapshot { get; }
    private static IMediaTypeService MediaTypeService { get; }
    private static IMemberTypeService MemberTypeService { get; }
    private static FriendlyPublishedContentExtensions();
    [CompilerGeneratedAttribute]
private static IVariationContextAccessor get_VariationContextAccessor();
    [CompilerGeneratedAttribute]
private static IPublishedModelFactory get_PublishedModelFactory();
    [CompilerGeneratedAttribute]
private static IPublishedUrlProvider get_PublishedUrlProvider();
    [CompilerGeneratedAttribute]
private static IUserService get_UserService();
    [CompilerGeneratedAttribute]
private static IUmbracoContextAccessor get_UmbracoContextAccessor();
    [CompilerGeneratedAttribute]
private static ISiteDomainMapper get_SiteDomainHelper();
    [CompilerGeneratedAttribute]
private static IExamineManager get_ExamineManager();
    [CompilerGeneratedAttribute]
private static IFileService get_FileService();
    [CompilerGeneratedAttribute]
private static IOptions`1<WebRoutingSettings> get_WebRoutingSettings();
    [CompilerGeneratedAttribute]
private static IContentTypeService get_ContentTypeService();
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback get_PublishedValueFallback();
    [NullableContextAttribute("2")]
private static IPublishedSnapshot get_PublishedSnapshot();
    [CompilerGeneratedAttribute]
private static IMediaTypeService get_MediaTypeService();
    [CompilerGeneratedAttribute]
private static IMemberTypeService get_MemberTypeService();
    [ExtensionAttribute]
public static IPublishedContent CreateModel(IPublishedContent content);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string Name(IPublishedContent content, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string UrlSegment(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static DateTime CultureDate(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static string GetTemplateAlias(IPublishedContent content);
    [ExtensionAttribute]
public static bool IsAllowedTemplate(IPublishedContent content, int templateId);
    [ExtensionAttribute]
public static bool IsAllowedTemplate(IPublishedContent content, string templateAlias);
    [ExtensionAttribute]
public static bool IsAllowedTemplate(IPublishedContent content, bool disableAlternativeTemplates, bool validateAlternativeTemplates, int templateId);
    [ExtensionAttribute]
public static bool IsAllowedTemplate(IPublishedContent content, bool disableAlternativeTemplates, bool validateAlternativeTemplates, string templateAlias);
    [ExtensionAttribute]
public static bool HasValue(IPublishedContent content, string alias, string culture, string segment, Fallback fallback);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object Value(IPublishedContent content, string alias, string culture, string segment, Fallback fallback, object defaultValue);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Value(IPublishedContent content, string alias, string culture, string segment, Fallback fallback, T defaultValue);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> DescendantsOrSelfOfType(IEnumerable`1<IPublishedContent> parentNodes, string docTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> DescendantsOrSelf(IEnumerable`1<IPublishedContent> parentNodes, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> Descendants(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> Descendants(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> DescendantsOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> Descendants(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> Descendants(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> DescendantsOrSelf(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> DescendantsOrSelf(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> DescendantsOrSelfOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> DescendantsOrSelf(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> DescendantsOrSelf(IPublishedContent content, int level, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IPublishedContent Descendant(IPublishedContent content, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IPublishedContent Descendant(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IPublishedContent DescendantOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static T Descendant(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static T Descendant(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IPublishedContent DescendantOrSelf(IPublishedContent content, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IPublishedContent DescendantOrSelf(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IPublishedContent DescendantOrSelfOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static T DescendantOrSelf(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static T DescendantOrSelf(IPublishedContent content, int level, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> Children(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> Children(IPublishedContent content, Func`2<IPublishedContent, bool> predicate, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> ChildrenOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> Children(IPublishedContent content, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IPublishedContent FirstChild(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IPublishedContent FirstChildOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IPublishedContent FirstChild(IPublishedContent content, Func`2<IPublishedContent, bool> predicate, string culture);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static IPublishedContent FirstChild(IPublishedContent content, Guid uniqueId, string culture);
    [ExtensionAttribute]
public static T FirstChild(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static T FirstChild(IPublishedContent content, Func`2<T, bool> predicate, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> Siblings(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> SiblingsOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> Siblings(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> SiblingsAndSelf(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<IPublishedContent> SiblingsAndSelfOfType(IPublishedContent content, string contentTypeAlias, string culture);
    [ExtensionAttribute]
public static IEnumerable`1<T> SiblingsAndSelf(IPublishedContent content, string culture);
    [ExtensionAttribute]
public static string Url(IPublishedContent content, string culture, UrlMode mode);
    [ExtensionAttribute]
public static DataTable ChildrenAsTable(IPublishedContent content, string contentTypeAliasFilter, string culture);
    [ExtensionAttribute]
public static string MediaUrl(IPublishedContent content, string culture, UrlMode mode, string propertyAlias);
    [ExtensionAttribute]
public static string CreatorName(IPublishedContent content);
    [ExtensionAttribute]
public static string WriterName(IPublishedContent content);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCultureFromDomains(IPublishedContent content, Uri current);
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> SearchDescendants(IPublishedContent content, string term, string indexName);
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> SearchChildren(IPublishedContent content, string term, string indexName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.FriendlyPublishedElementExtensions : object {
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback <PublishedValueFallback>k__BackingField;
    private static IPublishedValueFallback PublishedValueFallback { get; }
    private static FriendlyPublishedElementExtensions();
    [CompilerGeneratedAttribute]
private static IPublishedValueFallback get_PublishedValueFallback();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static object Value(IPublishedElement content, string alias, string culture, string segment, Fallback fallback, object defaultValue);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static T Value(IPublishedElement content, string alias, string culture, string segment, Fallback fallback, T defaultValue);
    [ExtensionAttribute]
public static bool IsVisible(IPublishedElement content);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static TValue ValueFor(TModel model, Expression`1<Func`2<TModel, TValue>> property, string culture, string segment, Fallback fallback, TValue defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.FriendlyUrlHelperExtensions : object {
    [CompilerGeneratedAttribute]
private static IDataProtectionProvider <DataProtectionProvider>k__BackingField;
    private static IUmbracoContext UmbracoContext { get; }
    private static IDataProtectionProvider DataProtectionProvider { get; }
    private static FriendlyUrlHelperExtensions();
    private static IUmbracoContext get_UmbracoContext();
    [CompilerGeneratedAttribute]
private static IDataProtectionProvider get_DataProtectionProvider();
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, string action, string controllerName);
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, string action, string controllerName, object additionalRouteVals);
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, string action, string controllerName, string area, object additionalRouteVals);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.HtmlContentExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string ToHtmlString(IHtmlContent content);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.HttpContextAccessorExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static HttpContext GetRequiredHttpContext(IHttpContextAccessor httpContextAccessor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.HttpContextExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool TryGetBasicAuthCredentials(HttpContext httpContext, String& username, String& password);
    [AsyncStateMachineAttribute("Umbraco.Extensions.HttpContextExtensions/<AuthenticateBackOfficeAsync>d__1")]
[ExtensionAttribute]
public static Task`1<AuthenticateResult> AuthenticateBackOfficeAsync(HttpContext httpContext);
    [ExtensionAttribute]
public static string GetRequestValue(HttpContext context, string key);
    [ExtensionAttribute]
public static void SetPrincipalForRequest(HttpContext context, ClaimsPrincipal principal);
    [ExtensionAttribute]
public static void SetReasonPhrase(HttpContext httpContext, string reasonPhrase);
    [ExtensionAttribute]
public static ClaimsIdentity GetCurrentIdentity(HttpContext http);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.HttpRequestExtensions : object {
    [ExtensionAttribute]
public static bool HasPreviewCookie(HttpRequest request);
    [ExtensionAttribute]
public static bool IsBackOfficeRequest(HttpRequest request);
    [ExtensionAttribute]
public static bool IsClientSideRequest(HttpRequest request);
    [ExtensionAttribute]
public static string ClientCulture(HttpRequest request);
    [ExtensionAttribute]
public static string ClientSegment(HttpRequest request);
    [ExtensionAttribute]
public static bool IsLocal(HttpRequest request);
    [ExtensionAttribute]
public static string GetRawBodyString(HttpRequest request, Encoding encoding);
    [AsyncStateMachineAttribute("Umbraco.Extensions.HttpRequestExtensions/<GetRawBodyStringAsync>d__7")]
[ExtensionAttribute]
public static Task`1<string> GetRawBodyStringAsync(HttpRequest request, Encoding encoding);
    [ExtensionAttribute]
public static Uri GetApplicationUri(HttpRequest request, WebRoutingSettings routingSettings);
    [ExtensionAttribute]
public static string GetUfprt(HttpRequest request);
    [ExtensionAttribute]
private static bool IsSet(IPAddress address);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.IdentityBuilderExtensions : object {
    [ExtensionAttribute]
public static IdentityBuilder AddMemberManager(IdentityBuilder identityBuilder);
    [ExtensionAttribute]
public static IdentityBuilder AddRoleManager(IdentityBuilder identityBuilder);
    [ExtensionAttribute]
public static IdentityBuilder AddSignInManager(IdentityBuilder identityBuilder);
    [ExtensionAttribute]
public static IdentityBuilder AddUserStore(IdentityBuilder identityBuilder, Func`2<IServiceProvider, TStore> implementationFactory);
    [ExtensionAttribute]
public static MemberIdentityBuilder AddTwoFactorProvider(MemberIdentityBuilder identityBuilder, string providerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ImageCropperTemplateCoreExtensions : object {
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, string cropAlias, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, string cropAlias, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, ImageCropperValue imageCropperValue, string cropAlias, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, string propertyAlias, string cropAlias, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, string propertyAlias, string cropAlias, IImageUrlGenerator imageUrlGenerator, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(IPublishedContent mediaItem, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, UrlMode urlMode);
    [ExtensionAttribute]
public static string GetCropUrl(MediaWithCrops mediaWithCrops, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, UrlMode urlMode);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(string imageUrl, IImageUrlGenerator imageUrlGenerator, Nullable`1<int> width, Nullable`1<int> height, string imageCropperValue, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, string cacheBusterValue, string furtherOptions);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static string GetCropUrl(string imageUrl, IImageUrlGenerator imageUrlGenerator, ImageCropperValue cropDataSet, Nullable`1<int> width, Nullable`1<int> height, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, string cacheBusterValue, string furtherOptions);
    [ExtensionAttribute]
private static string GetCropUrl(IPublishedContent mediaItem, IImageUrlGenerator imageUrlGenerator, IPublishedValueFallback publishedValueFallback, IPublishedUrlProvider publishedUrlProvider, ImageCropperValue localCrops, bool localCropsOnly, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, UrlMode urlMode);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.ImageCropperTemplateExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static ImageCropperValue DeserializeImageCropperValue(string json);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.LinkGeneratorExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(LinkGenerator linkGenerator, string actionName, object id);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(LinkGenerator linkGenerator, string actionName, IDictionary`2<string, object> values);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiServiceBaseUrl(LinkGenerator linkGenerator, Expression`1<Func`2<T, object>> methodSelector);
    [ExtensionAttribute]
public static string GetUmbracoControllerUrl(LinkGenerator linkGenerator, string actionName, string controllerName, string area, IDictionary`2<string, object> dict);
    [ExtensionAttribute]
public static string GetUmbracoControllerUrl(LinkGenerator linkGenerator, string actionName, Type controllerType, IDictionary`2<string, object> values);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(LinkGenerator linkGenerator, Expression`1<Func`2<T, object>> methodSelector);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ModelStateExtensions : object {
    [ExtensionAttribute]
public static bool IsValid(ModelStateDictionary state, string prefix);
    [ExtensionAttribute]
public static IDictionary`2<string, object> ToErrorDictionary(ModelStateDictionary modelState);
    [ExtensionAttribute]
public static JsonResult ToJsonErrors(ModelStateDictionary state);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.PasswordConfigurationExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void ConfigurePasswordOptions(PasswordOptions output, IPasswordConfiguration input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.PublishedContentExtensions : object {
    [ExtensionAttribute]
public static string GetCultureFromDomains(IPublishedContent content, IUmbracoContextAccessor umbracoContextAccessor, ISiteDomainMapper siteDomainHelper, Uri current);
    [ExtensionAttribute]
public static string CreatorName(IPublishedContent content, IUserService userService);
    [ExtensionAttribute]
public static string WriterName(IPublishedContent content, IUserService userService);
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> SearchDescendants(IPublishedContent content, IExamineManager examineManager, IUmbracoContextAccessor umbracoContextAccessor, string term, string indexName);
    [ExtensionAttribute]
public static IEnumerable`1<PublishedSearchResult> SearchChildren(IPublishedContent content, IExamineManager examineManager, IUmbracoContextAccessor umbracoContextAccessor, string term, string indexName);
    [ExtensionAttribute]
public static IHtmlContent IsEqual(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsEqual(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
    [ExtensionAttribute]
public static IHtmlContent IsNotEqual(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsNotEqual(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
    [ExtensionAttribute]
public static IHtmlContent IsDescendant(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsDescendant(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
    [ExtensionAttribute]
public static IHtmlContent IsDescendantOrSelf(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsDescendantOrSelf(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
    [ExtensionAttribute]
public static IHtmlContent IsAncestor(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsAncestor(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
    [ExtensionAttribute]
public static IHtmlContent IsAncestorOrSelf(IPublishedContent content, IPublishedContent other, string valueIfTrue);
    [ExtensionAttribute]
public static IHtmlContent IsAncestorOrSelf(IPublishedContent content, IPublishedContent other, string valueIfTrue, string valueIfFalse);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.RazorPageExtensions : object {
    [ExtensionAttribute]
public static HtmlString RenderSection(RazorPage webPage, string name, HtmlString defaultContents);
    [ExtensionAttribute]
public static HtmlString RenderSection(RazorPage webPage, string name, string defaultContents);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ServiceCollectionExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use the extension method that takes an IHostEnvironment instance instead.")]
public static IServiceCollection AddLogger(IServiceCollection services, IHostingEnvironment hostingEnvironment, ILoggingConfiguration loggingConfiguration, IConfiguration configuration);
    [ExtensionAttribute]
public static IServiceCollection AddLogger(IServiceCollection services, IHostEnvironment hostEnvironment, IConfiguration configuration);
    private static LoggingSettings GetLoggerSettings(IConfiguration configuration);
    [ExtensionAttribute]
[ObsoleteAttribute("Please use alternative extension method.")]
public static TypeLoader AddTypeLoader(IServiceCollection services, Assembly entryAssembly, IHostingEnvironment hostingEnvironment, ILoggerFactory loggerFactory, AppCaches appCaches, IConfiguration configuration, IProfiler profiler);
    [ExtensionAttribute]
public static TypeLoader AddTypeLoader(IServiceCollection services, Assembly entryAssembly, ILoggerFactory loggerFactory, IConfiguration configuration);
}
[ExtensionAttribute]
internal static class Umbraco.Extensions.TypeExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsRenderingModel(Type type);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.TypeLoaderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IEnumerable`1<Type> GetUmbracoApiControllers(TypeLoader typeLoader);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoApplicationBuilderExtensions : object {
    [ExtensionAttribute]
public static IUmbracoBuilder SetBackOfficeUserManager(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetBackOfficeUserStore(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetMemberManager(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetMemberSignInManager(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder SetMemberUserStore(IUmbracoBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoBuilderDependencyInjectionExtensions : object {
    [ExtensionAttribute]
public static IUmbracoBuilder AddModelsBuilder(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddInMemoryModelsRazorEngine(IUmbracoBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UmbracoBuilderExtensions : object {
    [ExtensionAttribute]
public static IUmbracoBuilder AddMembersIdentity(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddUmbraco(IServiceCollection services, IWebHostEnvironment webHostEnvironment, IConfiguration config);
    [ExtensionAttribute]
public static IUmbracoBuilder AddUmbracoCore(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddRecurringBackgroundJobs(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddUmbracoProfiler(IUmbracoBuilder builder);
    [ExtensionAttribute]
private static IUmbracoBuilder AddHttpClients(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddMvcAndRazor(IUmbracoBuilder builder, Action`1<IMvcBuilder> mvcBuilding);
    [ExtensionAttribute]
public static IUmbracoBuilder AddWebComponents(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddHelpers(IUmbracoBuilder builder);
    [ExtensionAttribute]
public static IUmbracoBuilder AddWebServer(IUmbracoBuilder builder);
    private static IProfiler GetWebProfiler(IConfiguration config, IHttpContextAccessor httpContextAccessor);
    private static IHostingEnvironment GetTemporaryHostingEnvironment(IWebHostEnvironment webHostEnvironment, IConfiguration config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.UrlHelperExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(IUrlHelper url, UmbracoApiControllerTypeCollection umbracoApiControllerTypeCollection, string actionName, object id);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(IUrlHelper url, UmbracoApiControllerTypeCollection umbracoApiControllerTypeCollection, Expression`1<Func`2<T, object>> methodSelector);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiService(IUrlHelper url, UmbracoApiControllerTypeCollection umbracoApiControllerTypeCollection, string actionName, Type apiControllerType, object id);
    [ExtensionAttribute]
public static string GetUmbracoApiService(IUrlHelper url, string actionName, string controllerName, object id);
    [ExtensionAttribute]
public static string GetUmbracoApiService(IUrlHelper url, string actionName, string controllerName, string area, object id);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiServiceBaseUrl(IUrlHelper url, UmbracoApiControllerTypeCollection umbracoApiControllerTypeCollection, string actionName);
    [ExtensionAttribute]
[ObsoleteAttribute("This will be removed in Umbraco 15.")]
public static string GetUmbracoApiServiceBaseUrl(IUrlHelper url, UmbracoApiControllerTypeCollection umbracoApiControllerTypeCollection, Expression`1<Func`2<T, object>> methodSelector);
    [ExtensionAttribute]
public static string GetUrlWithCacheBust(IUrlHelper url, string actionName, string controllerName, RouteValueDictionary routeVals, IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion);
    public static string GetCacheBustHash(IHostingEnvironment hostingEnvironment, IUmbracoVersion umbracoVersion);
    [ExtensionAttribute]
public static IHtmlContent GetCropUrl(IUrlHelper urlHelper, IPublishedContent mediaItem, string cropAlias, bool htmlEncode, UrlMode urlMode);
    [ExtensionAttribute]
public static IHtmlContent GetCropUrl(IUrlHelper urlHelper, IPublishedContent mediaItem, string propertyAlias, string cropAlias, bool htmlEncode, UrlMode urlMode);
    [ExtensionAttribute]
public static IHtmlContent GetCropUrl(IUrlHelper urlHelper, IPublishedContent mediaItem, Nullable`1<int> width, Nullable`1<int> height, string propertyAlias, string cropAlias, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, bool cacheBuster, string furtherOptions, bool htmlEncode, UrlMode urlMode);
    [ExtensionAttribute]
public static IHtmlContent GetCropUrl(IUrlHelper urlHelper, ImageCropperValue imageCropperValue, string cropAlias, Nullable`1<int> width, Nullable`1<int> height, Nullable`1<int> quality, Nullable`1<ImageCropMode> imageCropMode, Nullable`1<ImageCropAnchor> imageCropAnchor, bool preferFocalPoint, bool useCropDimensions, string cacheBusterValue, string furtherOptions, bool htmlEncode);
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, IUmbracoContext umbracoContext, IDataProtectionProvider dataProtectionProvider, string action, string controllerName);
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, IUmbracoContext umbracoContext, IDataProtectionProvider dataProtectionProvider, string action, string controllerName, object additionalRouteVals);
    [ExtensionAttribute]
public static string SurfaceAction(IUrlHelper url, IUmbracoContext umbracoContext, IDataProtectionProvider dataProtectionProvider, string action, string controllerName, string area, object additionalRouteVals);
    private static IHtmlContent CreateHtmlString(string url, bool htmlEncode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ViewContextExtensions : object {
    [ExtensionAttribute]
public static ViewContext CopyWithModel(ViewContext vc, object model);
    [ExtensionAttribute]
public static ViewContext Clone(ViewContext vc);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Umbraco.Extensions.ViewDataExtensions : object {
    public static string TokenUmbracoPath;
    public static string TokenInstallApiBaseUrl;
    public static string TokenUmbracoBaseFolder;
    public static string TokenUmbracoVersion;
    public static string TokenExternalSignInError;
    public static string TokenPasswordResetCode;
    public static string TokenTwoFactorRequired;
    [ExtensionAttribute]
public static bool FromTempData(ViewDataDictionary viewData, ITempDataDictionary tempData, string token);
    [ExtensionAttribute]
public static bool FromBase64CookieData(ViewDataDictionary viewData, HttpContext httpContext, string cookieName, IJsonSerializer serializer);
    [ExtensionAttribute]
public static string GetUmbracoPath(ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void SetUmbracoPath(ViewDataDictionary viewData, string value);
    [ExtensionAttribute]
public static string GetInstallApiBaseUrl(ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void SetInstallApiBaseUrl(ViewDataDictionary viewData, string value);
    [ExtensionAttribute]
public static string GetUmbracoBaseFolder(ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void SetUmbracoBaseFolder(ViewDataDictionary viewData, string value);
    [ExtensionAttribute]
public static void SetUmbracoVersion(ViewDataDictionary viewData, SemVersion version);
    [ExtensionAttribute]
public static SemVersion GetUmbracoVersion(ViewDataDictionary viewData);
    [ExtensionAttribute]
public static BackOfficeExternalLoginProviderErrors GetExternalSignInProviderErrors(ViewDataDictionary viewData);
    [ExtensionAttribute]
public static void SetExternalSignInProviderErrors(ViewDataDictionary viewData, BackOfficeExternalLoginProviderErrors errors);
    [ExtensionAttribute]
[ObsoleteAttribute("This is deprecated and will be removed in V15")]
public static string GetPasswordResetCode(ViewDataDictionary viewData);
    [ExtensionAttribute]
[ObsoleteAttribute("This is deprecated and will be removed in V15")]
public static void SetPasswordResetCode(ViewDataDictionary viewData, string value);
    [ExtensionAttribute]
public static void SetTwoFactorProviderNames(ViewDataDictionary viewData, IEnumerable`1<string> providerNames);
    [ExtensionAttribute]
public static bool TryGetTwoFactorProviderNames(ViewDataDictionary viewData, IEnumerable`1& providerNames);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.WebApplicationBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IUmbracoBuilder CreateUmbracoBuilder(WebApplicationBuilder builder);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.WebApplicationExtensions : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Umbraco.Extensions.WebApplicationExtensions/<BootUmbracoAsync>d__0")]
[ExtensionAttribute]
public static Task BootUmbracoAsync(WebApplication app);
}
[ExtensionAttribute]
public static class Umbraco.Extensions.WebHostEnvironmentExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string MapPathWebRoot(IWebHostEnvironment webHostEnvironment, string path);
}
