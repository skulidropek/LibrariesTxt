[ExtensionAttribute]
public static class Microsoft.Extensions.Configuration.ConfigurationExtensions : object {
    [ExtensionAttribute]
public static string GetConnectionString(IConfiguration configuration, string name);
    [ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration);
    [IteratorStateMachineAttribute("Microsoft.Extensions.Configuration.ConfigurationExtensions/<AsEnumerable>d__2")]
[ExtensionAttribute]
public static IEnumerable`1<KeyValuePair`2<string, string>> AsEnumerable(IConfiguration configuration, bool makePathsRelative);
}
public static class Microsoft.Extensions.Configuration.ConfigurationPath : object {
    public static string KeyDelimiter;
    private static ConfigurationPath();
    public static string Combine(String[] pathSegments);
    public static string Combine(IEnumerable`1<string> pathSegments);
    public static string GetSectionKey(string path);
    public static string GetParentPath(string path);
}
[DefaultMemberAttribute("Item")]
public interface Microsoft.Extensions.Configuration.IConfiguration {
    public string Item { get; public set; }
    public abstract virtual string get_Item(string key);
    public abstract virtual void set_Item(string key, string value);
    public abstract virtual IConfigurationSection GetSection(string key);
    public abstract virtual IEnumerable`1<IConfigurationSection> GetChildren();
    public abstract virtual IChangeToken GetReloadToken();
}
public interface Microsoft.Extensions.Configuration.IConfigurationBuilder {
    public Dictionary`2<string, object> Properties { get; }
    public IEnumerable`1<IConfigurationSource> Sources { get; }
    public abstract virtual Dictionary`2<string, object> get_Properties();
    public abstract virtual IEnumerable`1<IConfigurationSource> get_Sources();
    public abstract virtual IConfigurationBuilder Add(IConfigurationSource source);
    public abstract virtual IConfigurationRoot Build();
}
public interface Microsoft.Extensions.Configuration.IConfigurationProvider {
    public abstract virtual bool TryGet(string key, String& value);
    public abstract virtual void Set(string key, string value);
    public abstract virtual IChangeToken GetReloadToken();
    public abstract virtual void Load();
    public abstract virtual IEnumerable`1<string> GetChildKeys(IEnumerable`1<string> earlierKeys, string parentPath);
}
public interface Microsoft.Extensions.Configuration.IConfigurationRoot {
    public abstract virtual void Reload();
}
public interface Microsoft.Extensions.Configuration.IConfigurationSection {
    public string Key { get; }
    public string Path { get; }
    public string Value { get; public set; }
    public abstract virtual string get_Key();
    public abstract virtual string get_Path();
    public abstract virtual string get_Value();
    public abstract virtual void set_Value(string value);
}
public interface Microsoft.Extensions.Configuration.IConfigurationSource {
    public abstract virtual IConfigurationProvider Build(IConfigurationBuilder builder);
}
