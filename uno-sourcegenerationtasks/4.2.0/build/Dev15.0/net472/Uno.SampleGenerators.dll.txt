[GeneratorAttribute]
public class Uno.SampleGenerators.AdditionalFilesGenerator : object {
    public sealed virtual void Initialize(GeneratorInitializationContext context);
    public sealed virtual void Execute(GeneratorExecutionContext context);
}
[GenerateAfterAttribute("Uno.SampleGenerators.MyCustomSourceGenerator")]
public class Uno.SampleGenerators.AdditionalPropertiesGenerator : GeneratorBaseClass {
    public virtual void Execute(SourceGeneratorContext context);
}
[GenerateAfterAttribute("Uno.SampleGenerators.MyCustomSourceGenerator")]
public class Uno.SampleGenerators.AnotherCustomSourceGenerator : GeneratorBaseClass {
    public virtual void Execute(SourceGeneratorContext context);
}
public abstract class Uno.SampleGenerators.GeneratorBaseClass : SourceGenerator {
}
public class Uno.SampleGenerators.MyCustomSourceGenerator : SourceGenerator {
    private static string DependentTypeName;
    private static string LinkedTypeName;
    private string SystemObject;
    public virtual void Execute(SourceGeneratorContext context);
    private static string BuildVariableFromType(SourceGeneratorContext context, string typeName, string variable);
}
[GenerateAfterAttribute("Uno.SampleGenerators.MyCustomSourceGenerator")]
[GeneratorAttribute]
public class Uno.SampleGenerators.RoslynCompatGenerator : object {
    public sealed virtual void Initialize(GeneratorInitializationContext context);
    public sealed virtual void Execute(GeneratorExecutionContext context);
}
[GenerateBeforeAttribute("Uno.SampleGenerators.AnotherCustomSourceGenerator")]
public class Uno.SampleGenerators.UselessGenerator : SourceGenerator {
    public virtual void Execute(SourceGeneratorContext context);
}
public class Uno.SampleGenerators.WithDependencyGenerator : SourceGenerator {
    public virtual void Execute(SourceGeneratorContext context);
}
