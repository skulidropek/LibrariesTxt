[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Uno.AndroidResourceNameEncoder : object {
    private static string NumberPrefix;
    public static string Encode(string key);
    public static string EncodeFileSystemPath(string path, string prefix);
    public static string EncodeResourcePath(string path);
    public static string EncodeDrawablePath(string path);
    private static string EncodePath(string path, char separator);
}
internal static class Uno.UI.SourceGenerators.BindableTypeProviders.LinkerHintsHelpers : object {
    internal static string GetPropertyAvailableName(string name);
    internal static string GetLinkerHintsClassName(string defaultNamespace);
    internal static string GetLinkerHintsClassName();
}
public class Uno.UI.Tasks.Assets.ExpandPackageAssets_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <MarkerFiles>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <Assets>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] MarkerFiles { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputAttribute]
public ITaskItem[] Assets { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_MarkerFiles();
    [CompilerGeneratedAttribute]
public void set_MarkerFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Assets();
    [CompilerGeneratedAttribute]
public void set_Assets(ITaskItem[] value);
    public virtual bool Execute();
}
public class Uno.UI.Tasks.Assets.RetargetAssets_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    private static int HighDPIThresholdScale;
    [CompilerGeneratedAttribute]
private bool <UseHighDPIResources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateOutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AndroidAssetsPrefix>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IosAppManifest>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <ContentItems>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Assets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <RetargetedAssets>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <PartialAppManifests>k__BackingField;
    private static string PListHeader;
    private static string PListFooter;
    [RequiredAttribute]
public bool UseHighDPIResources { get; public set; }
    [RequiredAttribute]
public string TargetPlatform { get; public set; }
    [RequiredAttribute]
public string IntermediateOutputPath { get; public set; }
    public string AndroidAssetsPrefix { get; public set; }
    public string IosAppManifest { get; public set; }
    [RequiredAttribute]
public string DefaultLanguage { get; public set; }
    [RequiredAttribute]
public ITaskItem[] ContentItems { get; public set; }
    [OutputAttribute]
public ITaskItem[] Assets { get; public set; }
    [OutputAttribute]
public ITaskItem[] RetargetedAssets { get; public set; }
    [OutputAttribute]
public ITaskItem[] PartialAppManifests { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_UseHighDPIResources();
    [CompilerGeneratedAttribute]
public void set_UseHighDPIResources(bool value);
    [CompilerGeneratedAttribute]
public string get_TargetPlatform();
    [CompilerGeneratedAttribute]
public void set_TargetPlatform(string value);
    [CompilerGeneratedAttribute]
public string get_IntermediateOutputPath();
    [CompilerGeneratedAttribute]
public void set_IntermediateOutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_AndroidAssetsPrefix();
    [CompilerGeneratedAttribute]
public void set_AndroidAssetsPrefix(string value);
    [CompilerGeneratedAttribute]
public string get_IosAppManifest();
    [CompilerGeneratedAttribute]
public void set_IosAppManifest(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultLanguage();
    [CompilerGeneratedAttribute]
public void set_DefaultLanguage(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ContentItems();
    [CompilerGeneratedAttribute]
public void set_ContentItems(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Assets();
    [CompilerGeneratedAttribute]
public void set_Assets(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_RetargetedAssets();
    [CompilerGeneratedAttribute]
public void set_RetargetedAssets(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_PartialAppManifests();
    [CompilerGeneratedAttribute]
public void set_PartialAppManifests(ITaskItem[] value);
    public virtual bool Execute();
    private void ProcessContentItems(ITaskItem[] assets, Func`2<ResourceCandidate, string> resourceToTargetPath, Func`2<string, string> pathEncoder);
    private bool IsFontAsset(string path);
    private static bool IsImageAsset(string path);
    private static string AlignPath(string path);
    private ITaskItem[] GenerateFontPartialManifest(List`1<string> fontAssets, string iOSAppManifest);
    private String[] EnumerateFontsFromPList(string iosAppManifest);
    [CompilerGeneratedAttribute]
private string <Execute>b__41_0(ResourceCandidate resource);
    [CompilerGeneratedAttribute]
private string <Execute>b__41_2(ResourceCandidate resource);
    [CompilerGeneratedAttribute]
private string <Execute>b__41_3(string s);
}
public class Uno.UI.Tasks.BatchMerge.BatchMergeXaml : CustomTask {
    [CompilerGeneratedAttribute]
private ITaskItem[] <Pages>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MergedXamlFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TlogReadFilesOutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TlogWriteFilesOutputPath>k__BackingField;
    private List`1<string> filesWritten;
    [RequiredAttribute]
public ITaskItem[] Pages { get; public set; }
    [RequiredAttribute]
public string MergedXamlFile { get; public set; }
    [RequiredAttribute]
public string TlogReadFilesOutputPath { get; public set; }
    [RequiredAttribute]
public string TlogWriteFilesOutputPath { get; public set; }
    [OutputAttribute]
public String[] FilesWritten { get; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Pages();
    [CompilerGeneratedAttribute]
public void set_Pages(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_MergedXamlFile();
    [CompilerGeneratedAttribute]
public void set_MergedXamlFile(string value);
    [CompilerGeneratedAttribute]
public string get_TlogReadFilesOutputPath();
    [CompilerGeneratedAttribute]
public void set_TlogReadFilesOutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_TlogWriteFilesOutputPath();
    [CompilerGeneratedAttribute]
public void set_TlogWriteFilesOutputPath(string value);
    public String[] get_FilesWritten();
    public virtual bool Execute();
}
public abstract class Uno.UI.Tasks.BatchMerge.CustomTask : Task {
    private bool hasLoggedErrors;
    protected bool HasLoggedErrors { get; }
    protected bool get_HasLoggedErrors();
    protected void LogMessage(string message);
    protected void LogWarning(string message);
    protected void LogWarning(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, string message);
    protected void LogError(string message);
    protected void LogError(string subcategory, string code, string helpKeyword, string file, int lineNumber, int columnNumber, string message);
}
public class Uno.UI.Tasks.BatchMerge.MergedDictionary : object {
    private static Dictionary`2<string, string> standardNameDictionary;
    private static string _conditionalXamlPattern;
    private XmlElement xmlElement;
    private XmlDocument owningDocument;
    private List`1<XmlNode> nodeList;
    private List`1<int> nodeListNodesToIgnore;
    private Dictionary`2<string, int> nodeKeyToNodeListIndexDictionary;
    private Dictionary`2<string, MergedDictionary> mergedThemeDictionaryByKeyDictionary;
    private List`1<string> namespaceList;
    private MergedDictionary parentDictionary;
    private MergedDictionary(XmlDocument document);
    private MergedDictionary(XmlDocument document, MergedDictionary parentDictionary);
    private static MergedDictionary();
    public static MergedDictionary CreateMergedDicionary();
    public virtual string ToString();
    public void MergeContent(string content);
    public void FinalizeXaml();
    private void AddNamespace(string xmlnsString, string namespaceString);
    private void AddNode(XmlNode node, Dictionary`2<string, string> xmlnsReplacementDictionary);
    private XmlNode GetXaml();
    private static void ReplaceNamespacePrefix(XmlNode currentNode, Dictionary`2<string, string> xmlnsReplacementDictionary);
    private static string GetKey(XmlNode node);
    private static string GetStandardNamespace(string name, string value);
    private static void GenerateStandardNameSpaces(XmlDocument document, Dictionary`2<string, string> standardNamespaceDictionary, Dictionary`2<string, string> toBeReplacedDictionary);
    private void RemoveAncestorNodesWithKey(string key);
}
internal class Uno.UI.Tasks.BatchMerge.Utils : object {
    public static string UnEscapeAmpersand(string s);
    public static string EscapeAmpersand(string s);
    public static string DocumentToString(Action`1<XmlWriter> action);
    public static string RewriteFileIfNecessary(string path, string contents);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.EmbeddedResourceInjector.EmbeddedResourceInjectorTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    private static MessageImportance DefaultLogMessageLevel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <EmbeddedResources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetAssembly>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <ReferencePath>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] EmbeddedResources { get; public set; }
    [RequiredAttribute]
public string TargetAssembly { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] ReferencePath { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_EmbeddedResources();
    [CompilerGeneratedAttribute]
public void set_EmbeddedResources(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_TargetAssembly();
    [CompilerGeneratedAttribute]
public void set_TargetAssembly(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ReferencePath();
    [CompilerGeneratedAttribute]
public void set_ReferencePath(ITaskItem[] value);
    public virtual bool Execute();
    private String[] BuildReferencesPaths();
    private void WaitForUnlockedFile(string filePath);
}
internal class Uno.UI.Tasks.Helpers.PathHelper : object {
    private static int FILE_ATTRIBUTE_DIRECTORY;
    private static int FILE_ATTRIBUTE_NORMAL;
    public static string GetRelativePath(string fromPath, string toPath);
    private static int GetPathAttribute(string path);
    private static int PathRelativePathTo(StringBuilder pszPath, string pszFrom, int dwAttrFrom, string pszTo, int dwAttrTo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.LinkerHintsGenerator.LinkerDefinitionMergerTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    private static MessageImportance DefaultLogMessageLevel;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <DefinitionFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetDefinitionFile>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] DefinitionFiles { get; public set; }
    [RequiredAttribute]
public string TargetDefinitionFile { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_DefinitionFiles();
    [CompilerGeneratedAttribute]
public void set_DefinitionFiles(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_TargetDefinitionFile();
    [CompilerGeneratedAttribute]
public void set_TargetDefinitionFile(string value);
    public virtual bool Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.LinkerHintsGenerator.LinkerHintGeneratorTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    private static MessageImportance DefaultLogMessageLevel;
    private List`1<string> _referencedAssemblies;
    [NullableAttribute("2")]
private DefaultAssemblyResolver _assemblyResolver;
    [CompilerGeneratedAttribute]
private string <AssemblyPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CurrentProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ILLinkerPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFramework>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFrameworkVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnoUIPackageBasePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnoRuntimeIdentifier>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <ReferencePath>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <OutputFeatures>k__BackingField;
    [RequiredAttribute]
public string AssemblyPath { get; public set; }
    [RequiredAttribute]
public string CurrentProjectPath { get; public set; }
    [RequiredAttribute]
public string ILLinkerPath { get; public set; }
    [RequiredAttribute]
public string TargetFramework { get; public set; }
    [RequiredAttribute]
public string TargetFrameworkVersion { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    [RequiredAttribute]
public string UnoUIPackageBasePath { get; public set; }
    public string UnoRuntimeIdentifier { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] ReferencePath { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputAttribute]
public ITaskItem[] OutputFeatures { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AssemblyPath();
    [CompilerGeneratedAttribute]
public void set_AssemblyPath(string value);
    [CompilerGeneratedAttribute]
public string get_CurrentProjectPath();
    [CompilerGeneratedAttribute]
public void set_CurrentProjectPath(string value);
    [CompilerGeneratedAttribute]
public string get_ILLinkerPath();
    [CompilerGeneratedAttribute]
public void set_ILLinkerPath(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFramework();
    [CompilerGeneratedAttribute]
public void set_TargetFramework(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkVersion();
    [CompilerGeneratedAttribute]
public void set_TargetFrameworkVersion(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
public void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_UnoUIPackageBasePath();
    [CompilerGeneratedAttribute]
public void set_UnoUIPackageBasePath(string value);
    [CompilerGeneratedAttribute]
public string get_UnoRuntimeIdentifier();
    [CompilerGeneratedAttribute]
public void set_UnoRuntimeIdentifier(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ReferencePath();
    [CompilerGeneratedAttribute]
public void set_ReferencePath(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_OutputFeatures();
    [CompilerGeneratedAttribute]
public void set_OutputFeatures(ITaskItem[] value);
    public virtual bool Execute();
    private static string FormatFeaturesForLinker(Dictionary`2<string, string> currrentPassFeatures);
    private static ValueTuple`2[] ToOrderedFeatureArray(Dictionary`2<string, string> features);
    private void RunLinker(string outputPath, string features);
    private Dictionary`2<string, string> BuildResultingFeaturesList(string resultPath);
    private bool IsDependencyObject(TypeDefinition type);
    private string BuildLinkerFeaturesList();
    private List`1<string> FindAvailableLinkerHintsFromOriginalList();
    private static List`1<string> FindAvailableLinkerHints(List`1<AssemblyDefinition> assemblySearchList);
    private static HashSet`1<string> BuildAvailableTypes(List`1<AssemblyDefinition> assemblySearchList);
    private List`1<AssemblyDefinition> BuildOriginalResourceSearchList();
    private AssemblyDefinition ReadAssembly(string asmPath);
    private void BuildReferences();
    private static bool HasConcreteAssemblyForReferenceAssembly(ITaskItem other, ITaskItem referenceAssembly);
    private string AlignPath(string outputPath);
    private ValueTuple`3<int, string, string> StartProcess(string executable, string parameters, string workingDirectory);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private <>f__AnonymousType0`2<string, AssemblyDefinition> <BuildResultingFeaturesList>b__47_0(string asmPath);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private <>f__AnonymousType0`2<string, AssemblyDefinition> <BuildOriginalResourceSearchList>b__53_0(string asmPath);
    [CompilerGeneratedAttribute]
private string <BuildReferences>g__RewriteReferencePath|55_0(string referencePath, string unoUIPackageBasePath, string unoRuntimeIdentifier);
}
public static class Uno.UI.Tasks.ResourcesGenerator.AndroidResourcesWriter : object {
    public static void Write(Dictionary`2<string, string> resources, string path, string comment);
    private static string Sanitize(string value);
}
public static class Uno.UI.Tasks.ResourcesGenerator.iOSResourcesWriter : object {
    public static void Write(Dictionary`2<string, string> resources, string path, string comment);
    private static string Sanitize(string value);
}
public class Uno.UI.Tasks.ResourcesGenerator.ResourcesGenerationTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    private static string CommentPattern;
    [CompilerGeneratedAttribute]
private ITaskItem[] <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetPlatform>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableTraceLogging>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUnoHead>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetProjectDirectory>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultLanguage>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem[] <GeneratedFiles>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] Resources { get; public set; }
    public string TargetPlatform { get; public set; }
    public bool EnableTraceLogging { get; public set; }
    public bool IsUnoHead { get; public set; }
    [RequiredAttribute]
public string ProjectName { get; public set; }
    [RequiredAttribute]
public string TargetProjectDirectory { get; public set; }
    [RequiredAttribute]
public string OutputPath { get; public set; }
    [RequiredAttribute]
public string DefaultLanguage { get; public set; }
    [OutputAttribute]
public ITaskItem[] GeneratedFiles { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_TargetPlatform();
    [CompilerGeneratedAttribute]
public void set_TargetPlatform(string value);
    [CompilerGeneratedAttribute]
public bool get_EnableTraceLogging();
    [CompilerGeneratedAttribute]
public void set_EnableTraceLogging(bool value);
    [CompilerGeneratedAttribute]
public bool get_IsUnoHead();
    [CompilerGeneratedAttribute]
public void set_IsUnoHead(bool value);
    [CompilerGeneratedAttribute]
public string get_ProjectName();
    [CompilerGeneratedAttribute]
public void set_ProjectName(string value);
    [CompilerGeneratedAttribute]
public string get_TargetProjectDirectory();
    [CompilerGeneratedAttribute]
public void set_TargetProjectDirectory(string value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
public void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
public string get_DefaultLanguage();
    [CompilerGeneratedAttribute]
public void set_DefaultLanguage(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_GeneratedFiles();
    [CompilerGeneratedAttribute]
public void set_GeneratedFiles(ITaskItem[] value);
    public virtual bool Execute();
    [IteratorStateMachineAttribute("Uno.UI.Tasks.ResourcesGenerator.ResourcesGenerationTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b/<GetResourcesForItem>d__38")]
private IEnumerable`1<ITaskItem> GetResourcesForItem(ITaskItem resource);
    private ITaskItem GenerateUnoPRIResources(string language, DateTime sourceLastWriteTime, Dictionary`2<string, string> resources, string comment, ITaskItem resource);
    private ITaskItem GenerateiOSResources(string language, DateTime sourceLastWriteTime, Dictionary`2<string, string> resources, string comment);
    private ITaskItem GenerateAndroidResources(string language, DateTime sourceLastWriteTime, Dictionary`2<string, string> resources, string comment, ITaskItem resource);
    private void TraceLog(string message);
    private void TraceWarning(string warningCode, string message);
    [CompilerGeneratedAttribute]
private string <GenerateUnoPRIResources>g__buildBasePath|39_0(<>c__DisplayClass39_0& );
}
internal class Uno.UI.Tasks.ResourcesGenerator.UnoPRIResourcesWriter : object {
    internal static void Write(string resourceMapName, string language, Dictionary`2<string, string> resources, string actualTargetPath, string comment);
}
public class Uno.UI.Tasks.ResourcesGenerator.UpriFeaturesGeneratorTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <Languages>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <OutputFeatures>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ITaskItem[] Languages { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputAttribute]
public ITaskItem[] OutputFeatures { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Languages();
    [CompilerGeneratedAttribute]
public void set_Languages(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_OutputFeatures();
    [CompilerGeneratedAttribute]
public void set_OutputFeatures(ITaskItem[] value);
    public virtual bool Execute();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.ResourcesGenerator.UpriSubstitutionsGeneratorTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    [CompilerGeneratedAttribute]
private string <AssemblyName>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputFile>k__BackingField;
    [RequiredAttribute]
public string AssemblyName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] Resources { get; public set; }
    [RequiredAttribute]
public string OutputFile { get; public set; }
    [CompilerGeneratedAttribute]
public string get_AssemblyName();
    [CompilerGeneratedAttribute]
public void set_AssemblyName(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Resources();
    [CompilerGeneratedAttribute]
public void set_Resources(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_OutputFile();
    [CompilerGeneratedAttribute]
public void set_OutputFile(string value);
    public virtual bool Execute();
}
public static class Uno.UI.Tasks.ResourcesGenerator.WindowsResourcesReader : object {
    public static Dictionary`2<string, string> Read(string filePath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.RuntimeAssetsSelector.RuntimeAssetsSelectorTask_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <UnoRuntimeEnabledPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UnoRuntimeIdentifier>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TargetFrameworkVersion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <Assemblies>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ITaskItem[] <DebugSymbols>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RequiredAttribute]
public ITaskItem[] UnoRuntimeEnabledPackage { get; public set; }
    [RequiredAttribute]
public string UnoRuntimeIdentifier { get; public set; }
    public string TargetFrameworkVersion { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputAttribute]
public ITaskItem[] Assemblies { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[OutputAttribute]
public ITaskItem[] DebugSymbols { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_UnoRuntimeEnabledPackage();
    [CompilerGeneratedAttribute]
public void set_UnoRuntimeEnabledPackage(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public string get_UnoRuntimeIdentifier();
    [CompilerGeneratedAttribute]
public void set_UnoRuntimeIdentifier(string value);
    [CompilerGeneratedAttribute]
public string get_TargetFrameworkVersion();
    [CompilerGeneratedAttribute]
public void set_TargetFrameworkVersion(string value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_Assemblies();
    [CompilerGeneratedAttribute]
public void set_Assemblies(ITaskItem[] value);
    [CompilerGeneratedAttribute]
public ITaskItem[] get_DebugSymbols();
    [CompilerGeneratedAttribute]
public void set_DebugSymbols(ITaskItem[] value);
    public virtual bool Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Uno.UI.Tasks.WinAppSDKValidations.ValidateWinAppSDKReferences_v5c5e1effbcdda031daf8d30febdf47fe76b8a96b : Task {
    [CompilerGeneratedAttribute]
private ITaskItem[] <ReferencedProjects>k__BackingField;
    [RequiredAttribute]
public ITaskItem[] ReferencedProjects { get; public set; }
    [CompilerGeneratedAttribute]
public ITaskItem[] get_ReferencedProjects();
    [CompilerGeneratedAttribute]
public void set_ReferencedProjects(ITaskItem[] value);
    public virtual bool Execute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Windows.ApplicationModel.Resources.Core.AndroidResourceConverter : object {
    public static string Convert(ResourceCandidate resourceCandidate, string defaultLanguage);
    private static void ValidatePlatform(ResourceCandidate resourceCandidate);
    private static string GetLanguage(string language, string defaultLanguage);
    private static string GetDpi(string scale);
    private static string GetTheme(string theme);
}
internal static class Windows.ApplicationModel.Resources.Core.iOSResourceConverter : object {
    public static string Convert(ResourceCandidate resourceCandidate, string defaultLanguage);
    private static void ValidatePlatform(ResourceCandidate resourceCandidate);
    private static string GetLanguage(ResourceCandidate resourceCandidate);
    private static string GetScale(ResourceCandidate resourceCandidate);
}
public class Windows.ApplicationModel.Resources.Core.ResourceCandidate : object {
    private static Char[] _dotArray;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<ResourceQualifier> <Qualifiers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ValueAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LogicalPath>k__BackingField;
    public IReadOnlyList`1<ResourceQualifier> Qualifiers { get; }
    public string ValueAsString { get; }
    internal string LogicalPath { get; }
    internal ResourceCandidate(IReadOnlyList`1<ResourceQualifier> qualifiers, string valueAsString, string logicalPath);
    private static ResourceCandidate();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<ResourceQualifier> get_Qualifiers();
    [CompilerGeneratedAttribute]
public string get_ValueAsString();
    [CompilerGeneratedAttribute]
internal string get_LogicalPath();
    public string GetQualifierValue(string qualifierName);
    internal static ResourceCandidate Parse(string fullPath, string relativePath);
    private static string GetLogicalPath(string path);
}
public class Windows.ApplicationModel.Resources.Core.ResourceQualifier : object {
    private static Char[] _dashArray;
    [CompilerGeneratedAttribute]
private string <QualifierName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <QualifierValue>k__BackingField;
    private static HashSet`1<string> _languageTags;
    public string QualifierName { get; }
    public string QualifierValue { get; }
    private static HashSet`1<string> LanguageTags { get; }
    internal ResourceQualifier(string name, string value);
    private static ResourceQualifier();
    [CompilerGeneratedAttribute]
public string get_QualifierName();
    [CompilerGeneratedAttribute]
public string get_QualifierValue();
    internal static ResourceQualifier Parse(string str);
    private static HashSet`1<string> get_LanguageTags();
    private static bool IsLanguageTag(string str);
}
