internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFF_V : MulticastDelegate {
    public _JniMarshal_PPFF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIZ_V : MulticastDelegate {
    public _JniMarshal_PPIIZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, bool p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIZ_Z : MulticastDelegate {
    public _JniMarshal_PPIZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, bool p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_I : MulticastDelegate {
    public _JniMarshal_PPL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_V : MulticastDelegate {
    public _JniMarshal_PPLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLZ_Z : MulticastDelegate {
    public _JniMarshal_PPLLZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZIIIIZ_V : MulticastDelegate {
    public _JniMarshal_PPZIIIIZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4, bool p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4, bool p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
}
[RegisterAttribute("Uno/UI/BorderLayerRendererNative")]
public class Uno.UI.BorderLayerRendererNative : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BorderLayerRendererNative(IntPtr javaReference, JniHandleOwnership transfer);
    private static BorderLayerRendererNative();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildBorderCornerRadius", "(Landroid/graphics/drawable/PaintDrawable;Landroid/graphics/Path;Landroid/graphics/Paint;FF)V", "")]
public static void BuildBorderCornerRadius(PaintDrawable drawable, Path borderPath, Paint strokePaint, float width, float height);
}
[RegisterAttribute("Uno/UI/BrushNative")]
public class Uno.UI.BrushNative : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BrushNative(IntPtr javaReference, JniHandleOwnership transfer);
    private static BrushNative();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildBackgroundCornerRadius", "(Landroid/graphics/drawable/PaintDrawable;Landroid/graphics/Path;Landroid/graphics/Paint;ZFF)V", "")]
public static void BuildBackgroundCornerRadius(PaintDrawable drawable, Path maskingPath, Paint fillPaint, bool antiAlias, float width, float height);
    [RegisterAttribute("resetPaintForFill", "(Landroid/graphics/Paint;)V", "")]
public static void ResetPaintForFill(Paint paint);
    [RegisterAttribute("resetPaintForStroke", "(Landroid/graphics/Paint;)V", "")]
public static void ResetPaintForStroke(Paint paint);
}
[RegisterAttribute("Uno/UI/TextPaintPoolNative")]
public class Uno.UI.TextPaintPoolNative : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TextPaintPoolNative(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextPaintPoolNative();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildPaint", "(FFFLandroid/graphics/Typeface;IZZZLandroid/graphics/Shader;)Landroid/text/TextPaint;", "")]
public static TextPaint BuildPaint(float density, float size, float letterSpacing, Typeface typeface, int color, bool underline, bool strikethrough, bool superscript, Shader shader);
}
[RegisterAttribute("Uno/UI/TextPaintSpan")]
public class Uno.UI.TextPaintSpan : MetricAffectingSpan {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TextPaintSpan(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/text/TextPaint;)V", "")]
public TextPaintSpan(TextPaint paint);
    private static TextPaintSpan();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("updateDrawState", "(Landroid/text/TextPaint;)V", "")]
public sealed virtual void UpdateDrawState(TextPaint tp);
    [RegisterAttribute("updateMeasureState", "(Landroid/text/TextPaint;)V", "")]
public sealed virtual void UpdateMeasureState(TextPaint p);
}
[RegisterAttribute("Uno/UI/UIElementNative")]
public class Uno.UI.UIElementNative : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UIElementNative(IntPtr javaReference, JniHandleOwnership transfer);
    private static UIElementNative();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("adjustCornerRadius", "(Landroid/graphics/Canvas;[F)V", "")]
public static void AdjustCornerRadius(Canvas canvas, Single[] radii);
}
[RegisterAttribute("Uno/UI/UnoRecyclerView")]
public abstract class Uno.UI.UnoRecyclerView : RecyclerView {
    private static JniPeerMembers _members;
    private static Delegate cb_onNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected bool IsNativeMotionEventsEnabled { get; }
    protected bool IsNativeMotionEventsInterceptForbidden { get; }
    protected UnoRecyclerView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
protected UnoRecyclerView(Context context);
    private static UnoRecyclerView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getIsNativeMotionEventsEnabled", "()Z", "")]
protected bool get_IsNativeMotionEventsEnabled();
    [RegisterAttribute("getIsNativeMotionEventsInterceptForbidden", "()Z", "")]
protected bool get_IsNativeMotionEventsInterceptForbidden();
    [RegisterAttribute("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "")]
public sealed virtual bool DispatchGenericMotionEvent(MotionEvent e);
    [RegisterAttribute("dispatchTouchEvent", "(Landroid/view/MotionEvent;)Z", "")]
public sealed virtual bool DispatchTouchEvent(MotionEvent e);
    private static Delegate GetOnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_ZHandler();
    private static bool n_OnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_e, IntPtr native_originalSource, bool isInView);
    [RegisterAttribute("onNativeMotionEvent", "(Landroid/view/MotionEvent;Landroid/view/View;Z)Z", "GetOnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_ZHandler")]
protected virtual bool OnNativeMotionEvent(MotionEvent e, View originalSource, bool isInView);
    [RegisterAttribute("setNativeIsEnabled", "(Z)V", "")]
public void SetNativeIsEnabled(bool isEnabled);
}
[RegisterAttribute("Uno/UI/UnoRecyclerView")]
internal class Uno.UI.UnoRecyclerViewInvoker : UnoRecyclerView {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public UnoRecyclerViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static UnoRecyclerViewInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("Uno/UI/UnoScrollViewScaleGestureDetector")]
public class Uno.UI.UnoScrollViewScaleGestureDetector : ScaleGestureDetector {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnoScrollViewScaleGestureDetector(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;LUno/UI/UnoScrollViewScaleGestureDetector$UnoScaleGestureListener;)V", "")]
public UnoScrollViewScaleGestureDetector(Context context, UnoScaleGestureListener listener);
    private static UnoScrollViewScaleGestureDetector();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("Uno/UI/UnoSpannableString")]
public class Uno.UI.UnoSpannableString : SpannableString {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnoSpannableString(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public UnoSpannableString(string text);
    private static UnoSpannableString();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("BuildFromString", "(Ljava/lang/String;)LUno/UI/UnoSpannableString;", "")]
public static UnoSpannableString BuildFromString(string text);
    [RegisterAttribute("setPaintSpan", "(Landroid/text/TextPaint;II)V", "")]
public void SetPaintSpan(TextPaint paint, int start, int end);
    [RegisterAttribute("setSpan", "(Ljava/lang/Object;III)V", "")]
public sealed virtual void SetSpan(Object what, int start, int end, SpanTypes flags);
}
[RegisterAttribute("Uno/UI/UnoSpannableStringBuilder")]
public class Uno.UI.UnoSpannableStringBuilder : SpannableStringBuilder {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnoSpannableStringBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public UnoSpannableStringBuilder(string text);
    private static UnoSpannableStringBuilder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("length", "()I", "")]
public sealed virtual int Length();
    [RegisterAttribute("setSpan", "(Ljava/lang/Object;III)V", "")]
public sealed virtual void SetSpan(Object what, int start, int end, SpanTypes flags);
}
[RegisterAttribute("Uno/UI/UnoStaticLayoutBuilder")]
public class Uno.UI.UnoStaticLayoutBuilder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnoStaticLayoutBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnoStaticLayoutBuilder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Build", "(Ljava/lang/CharSequence;Landroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZLandroid/text/TextUtils$TruncateAt;II)Landroid/text/StaticLayout;", "")]
public static StaticLayout Build(ICharSequence source, TextPaint paint, int outerwidth, Alignment align, float spacingmult, float spacingadd, bool includepad, TruncateAt ellipsize, int ellipsizedWidth, int maxLines);
    public static StaticLayout Build(string source, TextPaint paint, int outerwidth, Alignment align, float spacingmult, float spacingadd, bool includepad, TruncateAt ellipsize, int ellipsizedWidth, int maxLines);
}
[RegisterAttribute("Uno/UI/UnoTwoDScrollView")]
public class Uno.UI.UnoTwoDScrollView : FrameLayout {
    private static JniPeerMembers _members;
    private static Delegate cb_getMaxScrollAmountHorizontal;
    private static Delegate cb_getMaxScrollAmountVertical;
    private static Delegate cb_arrowScroll_IZ;
    private static Delegate cb_computeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_;
    private static Delegate cb_executeKeyEvent_Landroid_view_KeyEvent_;
    private static Delegate cb_fling_II;
    private static Delegate cb_fullScroll_IZ;
    private static Delegate cb_onScrollChanged_IIZ;
    private static Delegate cb_onZoomScaleChanged_FF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool BringIntoViewOnFocusChange { get; public set; }
    public bool IsScrollingEnabled { get; public set; }
    public bool IsZoomEnabled { get; public set; }
    public int MaxScrollAmountHorizontal { get; }
    public int MaxScrollAmountVertical { get; }
    public float MaximumZoomScale { get; public set; }
    public float MinimumZoomScale { get; public set; }
    public float ZoomScale { get; public set; }
    protected UnoTwoDScrollView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public UnoTwoDScrollView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public UnoTwoDScrollView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public UnoTwoDScrollView(Context context, IAttributeSet attrs, int defStyle);
    private static UnoTwoDScrollView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBringIntoViewOnFocusChange", "()Z", "")]
public bool get_BringIntoViewOnFocusChange();
    [RegisterAttribute("setBringIntoViewOnFocusChange", "(Z)V", "")]
public void set_BringIntoViewOnFocusChange(bool value);
    [RegisterAttribute("getIsScrollingEnabled", "()Z", "")]
public bool get_IsScrollingEnabled();
    [RegisterAttribute("setIsScrollingEnabled", "(Z)V", "")]
public void set_IsScrollingEnabled(bool value);
    [RegisterAttribute("getIsZoomEnabled", "()Z", "")]
public bool get_IsZoomEnabled();
    [RegisterAttribute("setIsZoomEnabled", "(Z)V", "")]
public void set_IsZoomEnabled(bool value);
    private static Delegate GetGetMaxScrollAmountHorizontalHandler();
    private static int n_GetMaxScrollAmountHorizontal(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxScrollAmountHorizontal", "()I", "GetGetMaxScrollAmountHorizontalHandler")]
public virtual int get_MaxScrollAmountHorizontal();
    private static Delegate GetGetMaxScrollAmountVerticalHandler();
    private static int n_GetMaxScrollAmountVertical(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxScrollAmountVertical", "()I", "GetGetMaxScrollAmountVerticalHandler")]
public virtual int get_MaxScrollAmountVertical();
    [RegisterAttribute("getMaximumZoomScale", "()F", "")]
public float get_MaximumZoomScale();
    [RegisterAttribute("setMaximumZoomScale", "(F)V", "")]
public void set_MaximumZoomScale(float value);
    [RegisterAttribute("getMinimumZoomScale", "()F", "")]
public float get_MinimumZoomScale();
    [RegisterAttribute("setMinimumZoomScale", "(F)V", "")]
public void set_MinimumZoomScale(float value);
    [RegisterAttribute("getZoomScale", "()F", "")]
public float get_ZoomScale();
    [RegisterAttribute("setZoomScale", "(F)V", "")]
public void set_ZoomScale(float value);
    private static Delegate GetArrowScroll_IZHandler();
    private static bool n_ArrowScroll_IZ(IntPtr jnienv, IntPtr native__this, int direction, bool horizontal);
    [RegisterAttribute("arrowScroll", "(IZ)Z", "GetArrowScroll_IZHandler")]
public virtual bool ArrowScroll(int direction, bool horizontal);
    private static Delegate GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler();
    private static int n_ComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [RegisterAttribute("computeScrollDeltaToGetChildRectOnScreen", "(Landroid/graphics/Rect;)I", "GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler")]
protected virtual int ComputeScrollDeltaToGetChildRectOnScreen(Rect rect);
    private static Delegate GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_ExecuteKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [RegisterAttribute("executeKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool ExecuteKeyEvent(KeyEvent e);
    private static Delegate GetFling_IIHandler();
    private static void n_Fling_II(IntPtr jnienv, IntPtr native__this, int velocityX, int velocityY);
    [RegisterAttribute("fling", "(II)V", "GetFling_IIHandler")]
public virtual void Fling(int velocityX, int velocityY);
    private static Delegate GetFullScroll_IZHandler();
    private static bool n_FullScroll_IZ(IntPtr jnienv, IntPtr native__this, int direction, bool horizontal);
    [RegisterAttribute("fullScroll", "(IZ)Z", "GetFullScroll_IZHandler")]
public virtual bool FullScroll(int direction, bool horizontal);
    private static Delegate GetOnScrollChanged_IIZHandler();
    private static void n_OnScrollChanged_IIZ(IntPtr jnienv, IntPtr native__this, int scrollX, int scrollY, bool isIntermediate);
    [RegisterAttribute("onScrollChanged", "(IIZ)V", "GetOnScrollChanged_IIZHandler")]
protected virtual void OnScrollChanged(int scrollX, int scrollY, bool isIntermediate);
    private static Delegate GetOnZoomScaleChanged_FFHandler();
    private static void n_OnZoomScaleChanged_FF(IntPtr jnienv, IntPtr native__this, float oldZoomScale, float newZoomScale);
    [RegisterAttribute("onZoomScaleChanged", "(FF)V", "GetOnZoomScaleChanged_FFHandler")]
protected virtual void OnZoomScaleChanged(float oldZoomScale, float newZoomScale);
    [RegisterAttribute("smoothScrollBy", "(II)V", "")]
public void SmoothScrollBy(int dx, int dy);
    [RegisterAttribute("smoothScrollTo", "(II)V", "")]
public void SmoothScrollTo(int x, int y);
}
[RegisterAttribute("Uno/UI/UnoViewGroup")]
public abstract class Uno.UI.UnoViewGroup : ViewGroup {
    private static JniPeerMembers _members;
    private static Delegate cb_getText;
    private static Delegate cb_getViewDepth;
    private static Delegate cb_nativeHitCheck;
    private static Delegate cb_nativeRequestLayout;
    private static Delegate cb_onLayoutCore_ZIIIIZ;
    private static Delegate cb_onLocalViewAdded_Landroid_view_View_I;
    private static Delegate cb_onLocalViewRemoved_Landroid_view_View_;
    private static Delegate cb_onNativeLoaded;
    private static Delegate cb_onNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_Z;
    private static Delegate cb_onNativeUnloaded;
    private static Delegate cb_onRemovedFromParent;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Alpha { get; public set; }
    public bool Enabled { get; public set; }
    public bool IsLayoutRequested { get; }
    public bool IsManagedLoaded { get; public set; }
    public bool IsNativeLoaded { get; }
    protected bool IsNativeMotionEventsEnabled { get; protected set; }
    protected bool IsNativeMotionEventsInterceptForbidden { get; protected set; }
    protected string UIAutomationText { get; }
    public int ViewDepth { get; }
    public ViewStates Visibility { get; public set; }
    protected UnoViewGroup(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public UnoViewGroup(Context ctx);
    private static UnoViewGroup();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAlpha", "()F", "")]
public virtual float get_Alpha();
    [RegisterAttribute("setAlpha", "(F)V", "")]
public virtual void set_Alpha(float value);
    [RegisterAttribute("isEnabled", "()Z", "")]
public virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "")]
public virtual void set_Enabled(bool value);
    [RegisterAttribute("isLayoutRequested", "()Z", "")]
public virtual bool get_IsLayoutRequested();
    [RegisterAttribute("getIsManagedLoaded", "()Z", "")]
public bool get_IsManagedLoaded();
    [RegisterAttribute("setIsManagedLoaded", "(Z)V", "")]
public void set_IsManagedLoaded(bool value);
    [RegisterAttribute("getIsNativeLoaded", "()Z", "")]
public bool get_IsNativeLoaded();
    [RegisterAttribute("getIsNativeMotionEventsEnabled", "()Z", "")]
protected bool get_IsNativeMotionEventsEnabled();
    [RegisterAttribute("setIsNativeMotionEventsEnabled", "(Z)V", "")]
protected void set_IsNativeMotionEventsEnabled(bool value);
    [RegisterAttribute("getIsNativeMotionEventsInterceptForbidden", "()Z", "")]
protected bool get_IsNativeMotionEventsInterceptForbidden();
    [RegisterAttribute("setIsNativeMotionEventsInterceptForbidden", "(Z)V", "")]
protected void set_IsNativeMotionEventsInterceptForbidden(bool value);
    private static Delegate GetGetTextHandler();
    private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getText", "()Ljava/lang/String;", "GetGetTextHandler")]
protected virtual string get_UIAutomationText();
    private static Delegate GetGetViewDepthHandler();
    private static int n_GetViewDepth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getViewDepth", "()I", "GetGetViewDepthHandler")]
public virtual int get_ViewDepth();
    [RegisterAttribute("getVisibility", "()I", "")]
public virtual ViewStates get_Visibility();
    [RegisterAttribute("setVisibility", "(I)V", "")]
public virtual void set_Visibility(ViewStates value);
    [RegisterAttribute("addViewFast", "(Landroid/view/View;)V", "")]
protected void AddViewFast(View view);
    [RegisterAttribute("addViewFast", "(Landroid/view/View;I)V", "")]
protected void AddViewFast(View view, int position);
    [RegisterAttribute("dispatchGenericMotionEvent", "(Landroid/view/MotionEvent;)Z", "")]
public sealed virtual bool DispatchGenericMotionEvent(MotionEvent e);
    [RegisterAttribute("endLayoutingFromMeasure", "()V", "")]
public static void EndLayoutingFromMeasure();
    [RegisterAttribute("getChildStaticTransformation", "(Landroid/view/View;Landroid/view/animation/Transformation;)Z", "")]
protected sealed virtual bool GetChildStaticTransformation(View child, Transformation outTransform);
    [RegisterAttribute("getMeasuredDimensions", "(Landroid/view/View;)J", "")]
public static long GetMeasuredDimensions(View view);
    [RegisterAttribute("invalidate", "()V", "")]
public sealed virtual void Invalidate();
    [RegisterAttribute("measureBeforeLayout", "()V", "")]
public static void MeasureBeforeLayout();
    [RegisterAttribute("measureChild", "(Landroid/view/View;II)V", "")]
protected sealed virtual void MeasureChild(View view, int widthSpec, int heightSpec);
    [RegisterAttribute("nativeFinishLayoutOverride", "()V", "")]
public void NativeFinishLayoutOverride();
    private static Delegate GetNativeHitCheckHandler();
    private static bool n_NativeHitCheck(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nativeHitCheck", "()Z", "GetNativeHitCheckHandler")]
protected abstract virtual bool NativeHitCheck();
    private static Delegate GetNativeRequestLayoutHandler();
    private static bool n_NativeRequestLayout(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("nativeRequestLayout", "()Z", "GetNativeRequestLayoutHandler")]
protected abstract virtual bool NativeRequestLayout();
    [RegisterAttribute("nativeStartLayoutOverride", "(IIII)V", "")]
public void NativeStartLayoutOverride(int left, int top, int right, int bottom);
    [RegisterAttribute("onAttachedToWindow", "()V", "")]
protected sealed virtual void OnAttachedToWindow();
    [RegisterAttribute("onDetachedFromWindow", "()V", "")]
protected sealed virtual void OnDetachedFromWindow();
    [RegisterAttribute("onLayout", "(ZIIII)V", "")]
protected sealed virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private static Delegate GetOnLayoutCore_ZIIIIZHandler();
    private static void n_OnLayoutCore_ZIIIIZ(IntPtr jnienv, IntPtr native__this, bool p0, int p1, int p2, int p3, int p4, bool p5);
    [RegisterAttribute("onLayoutCore", "(ZIIIIZ)V", "GetOnLayoutCore_ZIIIIZHandler")]
protected abstract virtual void OnLayoutCore(bool p0, int p1, int p2, int p3, int p4, bool p5);
    private static Delegate GetOnLocalViewAdded_Landroid_view_View_IHandler();
    private static void n_OnLocalViewAdded_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_view, int index);
    [RegisterAttribute("onLocalViewAdded", "(Landroid/view/View;I)V", "GetOnLocalViewAdded_Landroid_view_View_IHandler")]
protected abstract virtual void OnLocalViewAdded(View view, int index);
    private static Delegate GetOnLocalViewRemoved_Landroid_view_View_Handler();
    private static void n_OnLocalViewRemoved_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onLocalViewRemoved", "(Landroid/view/View;)V", "GetOnLocalViewRemoved_Landroid_view_View_Handler")]
protected abstract virtual void OnLocalViewRemoved(View view);
    private static Delegate GetOnNativeLoadedHandler();
    private static void n_OnNativeLoaded(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onNativeLoaded", "()V", "GetOnNativeLoadedHandler")]
protected abstract virtual void OnNativeLoaded();
    private static Delegate GetOnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_ZHandler();
    private static bool n_OnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_e, IntPtr native_originalSource, bool isInView);
    [RegisterAttribute("onNativeMotionEvent", "(Landroid/view/MotionEvent;Landroid/view/View;Z)Z", "GetOnNativeMotionEvent_Landroid_view_MotionEvent_Landroid_view_View_ZHandler")]
protected virtual bool OnNativeMotionEvent(MotionEvent e, View originalSource, bool isInView);
    private static Delegate GetOnNativeUnloadedHandler();
    private static void n_OnNativeUnloaded(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onNativeUnloaded", "()V", "GetOnNativeUnloadedHandler")]
protected abstract virtual void OnNativeUnloaded();
    private static Delegate GetOnRemovedFromParentHandler();
    private static void n_OnRemovedFromParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onRemovedFromParent", "()V", "GetOnRemovedFromParentHandler")]
protected abstract virtual void OnRemovedFromParent();
    [RegisterAttribute("removeChildRenderTransform", "(Landroid/view/View;)V", "")]
protected void RemoveChildRenderTransform(View child);
    [RegisterAttribute("removeViewAtFast", "(I)V", "")]
protected void RemoveViewAtFast(int position);
    [RegisterAttribute("removeViewFast", "(Landroid/view/View;)V", "")]
protected void RemoveViewFast(View view);
    [RegisterAttribute("requestLayout", "()V", "")]
public sealed virtual void RequestLayout();
    [RegisterAttribute("setBackgroundColor", "(I)V", "")]
public sealed virtual void SetBackgroundColor(Color color);
    [RegisterAttribute("setChildRenderTransform", "(Landroid/view/View;Landroid/graphics/Matrix;)V", "")]
protected void SetChildRenderTransform(View child, Matrix transform);
    [RegisterAttribute("setNativeIsEnabled", "(Z)V", "")]
public void SetNativeIsEnabled(bool isEnabled);
    [RegisterAttribute("setNativeIsHitTestVisible", "(Z)V", "")]
public void SetNativeIsHitTestVisible(bool hitTestVisible);
    [RegisterAttribute("setNativeTextBlockLayout", "(Landroid/text/Layout;II)V", "")]
public void SetNativeTextBlockLayout(Layout layout, int leftPadding, int topPadding);
    [RegisterAttribute("startLayoutingFromMeasure", "()V", "")]
public static void StartLayoutingFromMeasure();
    [RegisterAttribute("tryFastRequestLayout", "(Landroid/view/View;Z)V", "")]
public static void TryFastRequestLayout(View view, bool needsForceLayout);
}
[RegisterAttribute("Uno/UI/UnoViewGroup")]
internal class Uno.UI.UnoViewGroupInvoker : UnoViewGroup {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public UnoViewGroupInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static UnoViewGroupInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("nativeHitCheck", "()Z", "GetNativeHitCheckHandler")]
protected virtual bool NativeHitCheck();
    [RegisterAttribute("nativeRequestLayout", "()Z", "GetNativeRequestLayoutHandler")]
protected virtual bool NativeRequestLayout();
    [RegisterAttribute("onLayoutCore", "(ZIIIIZ)V", "GetOnLayoutCore_ZIIIIZHandler")]
protected virtual void OnLayoutCore(bool p0, int p1, int p2, int p3, int p4, bool p5);
    [RegisterAttribute("onLocalViewAdded", "(Landroid/view/View;I)V", "GetOnLocalViewAdded_Landroid_view_View_IHandler")]
protected virtual void OnLocalViewAdded(View view, int index);
    [RegisterAttribute("onLocalViewRemoved", "(Landroid/view/View;)V", "GetOnLocalViewRemoved_Landroid_view_View_Handler")]
protected virtual void OnLocalViewRemoved(View view);
    [RegisterAttribute("onNativeLoaded", "()V", "GetOnNativeLoadedHandler")]
protected virtual void OnNativeLoaded();
    [RegisterAttribute("onNativeUnloaded", "()V", "GetOnNativeUnloadedHandler")]
protected virtual void OnNativeUnloaded();
    [RegisterAttribute("onRemovedFromParent", "()V", "GetOnRemovedFromParentHandler")]
protected virtual void OnRemovedFromParent();
}
