[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("748")]
internal class System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute : Attribute {
}
[AttributeUsageAttribute("10624")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("96")]
internal class System.Runtime.TargetedPatchingOptOutAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Reason>k__BackingField;
    public string Reason { get; }
    public TargetedPatchingOptOutAttribute(string reason);
    [CompilerGeneratedAttribute]
public string get_Reason();
}
[GeneratedCodeAttribute("Nerdbank.GitVersioning.Tasks", "3.4.244.2758")]
[ExcludeFromCodeCoverageAttribute]
internal static class ThisAssembly : object {
    internal static string AssemblyConfiguration;
    internal static string AssemblyFileVersion;
    internal static string AssemblyInformationalVersion;
    internal static string AssemblyName;
    internal static string AssemblyTitle;
    internal static string AssemblyVersion;
    internal static DateTime GitCommitDate;
    internal static string GitCommitId;
    internal static bool IsPrerelease;
    internal static bool IsPublicRelease;
    internal static string PublicKey;
    internal static string PublicKeyToken;
    internal static string RootNamespace;
    private static ThisAssembly();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Validation.Assumes : object {
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void NotNull(T value);
    [NullableContextAttribute("0")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void NotNull(Nullable`1<T> value);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(string value);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(ICollection`1<T> values);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(IEnumerable`1<T> values);
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void Null(T value);
    [NullableContextAttribute("0")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void Null(Nullable`1<T> value);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void Is(object value);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void False(bool condition, string message);
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void False(bool condition, string unformattedMessage, object arg1);
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void False(bool condition, string unformattedMessage, Object[] args);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void True(bool condition, string message);
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void True(bool condition, string unformattedMessage, object arg1);
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static void True(bool condition, string unformattedMessage, Object[] args);
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception NotReachable();
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static T NotReachable();
    [DebuggerStepThroughAttribute]
public static void Present(T component);
    [DebuggerStepThroughAttribute]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use Fail(string) instead.")]
[DoesNotReturnAttribute]
public static Exception Fail(string message, bool showAssert);
    [NullableContextAttribute("2")]
[EditorBrowsableAttribute("1")]
[ObsoleteAttribute("Use Fail(string, Exception) instead.")]
[DoesNotReturnAttribute]
public static Exception Fail(string message, Exception innerException, bool showAssert);
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception Fail(string message);
    [NullableContextAttribute("2")]
[DoesNotReturnAttribute]
public static Exception Fail(string message, Exception innerException);
    private static string Format(string format, Object[] arguments);
}
[ExtensionAttribute]
public static class Validation.ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static T AddData(T exception, string key, Object[] values);
}
public interface Validation.IDisposableObservable {
    public bool IsDisposed { get; }
    public abstract virtual bool get_IsDisposed();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Validation.PrivateErrorHelpers : object {
    internal static Type TrimGenericWrapper(Type type, Type wrapper);
    internal static string Format(string format, Object[] arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Validation.Report : object {
    [ConditionalAttribute("DEBUG")]
public static void IfNotPresent(T part);
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void If(bool condition, string message);
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void IfNot(bool condition, string message);
    [ConditionalAttribute("DEBUG")]
public static void IfNot(bool condition, string message, object arg1);
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void IfNot(bool condition, string message, object arg1, object arg2);
    [ConditionalAttribute("DEBUG")]
public static void IfNot(bool condition, string message, Object[] args);
    [NullableContextAttribute("2")]
[ConditionalAttribute("DEBUG")]
public static void Fail(string message);
    [ConditionalAttribute("DEBUG")]
public static void Fail(string message, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Validation.Requires : object {
    [DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static T NotNull(T value, string parameterName);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[TargetedPatchingOptOutAttribute("Performance critical to inline across NGen image boundaries")]
public static IntPtr NotNull(IntPtr value, string parameterName);
    [DebuggerStepThroughAttribute]
public static T NotNullAllowStructs(T value, string parameterName);
    [DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(string value, string parameterName);
    [DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(IEnumerable values, string parameterName);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void NotNullOrEmpty(IEnumerable`1<T> values, string parameterName);
    [DebuggerStepThroughAttribute]
public static void NotNullEmptyOrNullElements(IEnumerable`1<T> values, string parameterName);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void NullOrNotNullElements(IEnumerable`1<T> values, string parameterName);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void Range(bool condition, string parameterName, string message);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception FailRange(string parameterName, string message);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, string message);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, string message, object arg1);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, string message, object arg1, object arg2);
    [DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, string message, Object[] args);
    [DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, ResourceManager resourceManager, string resourceName);
    public static void Argument(bool condition, string parameterName, ResourceManager resourceManager, string unformattedMessageResourceName, object arg1);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, ResourceManager resourceManager, string unformattedMessageResourceName, object arg1, object arg2);
    [DebuggerStepThroughAttribute]
public static void Argument(bool condition, string parameterName, ResourceManager resourceManager, string unformattedMessageResourceName, Object[] args);
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception Fail(string message);
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception Fail(string unformattedMessage, Object[] args);
    [DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception Fail(Exception innerException, string unformattedMessage, Object[] args);
    [NullableContextAttribute("0")]
[DebuggerStepThroughAttribute]
public static void NotDefault(T value, string parameterName);
    [DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use Argument(bool, string, string, object[]) instead.")]
public static void That(bool condition, string parameterName, string unformattedMessage, Object[] args);
    [NullableContextAttribute("2")]
[DebuggerStepThroughAttribute]
public static void ValidElements(IEnumerable`1<T> values, Predicate`1<T> predicate, string parameterName, string message);
    [DebuggerStepThroughAttribute]
public static void ValidElements(IEnumerable`1<T> values, Predicate`1<T> predicate, string parameterName, string unformattedMessage, Object[] args);
    [DebuggerStepThroughAttribute]
[ObsoleteAttribute("Use Verify.Operation(bool, string) instead.")]
public static void ValidState(bool condition, string message);
    private static string Format(string format, Object[] arguments);
}
[GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
[DebuggerNonUserCodeAttribute]
[CompilerGeneratedAttribute]
internal class Validation.Strings : object {
    private static ResourceManager resourceMan;
    private static CultureInfo resourceCulture;
    [EditorBrowsableAttribute("2")]
internal static ResourceManager ResourceManager { get; }
    [EditorBrowsableAttribute("2")]
internal static CultureInfo Culture { get; internal set; }
    internal static string Argument_EmptyArray { get; }
    internal static string Argument_EmptyString { get; }
    internal static string Argument_EnumNotDefined { get; }
    internal static string Argument_NotEnum { get; }
    internal static string Argument_NullElement { get; }
    internal static string Argument_StructIsDefault { get; }
    internal static string Argument_Whitespace { get; }
    internal static string InternalExceptionMessage { get; }
    internal static string InvalidEnumArgument { get; }
    internal static string ServiceMissing { get; }
    internal static ResourceManager get_ResourceManager();
    internal static CultureInfo get_Culture();
    internal static void set_Culture(CultureInfo value);
    internal static string get_Argument_EmptyArray();
    internal static string get_Argument_EmptyString();
    internal static string get_Argument_EnumNotDefined();
    internal static string get_Argument_NotEnum();
    internal static string get_Argument_NullElement();
    internal static string get_Argument_StructIsDefault();
    internal static string get_Argument_Whitespace();
    internal static string get_InternalExceptionMessage();
    internal static string get_InvalidEnumArgument();
    internal static string get_ServiceMissing();
}
[AttributeUsageAttribute("2048")]
public class Validation.ValidatedNotNullAttribute : Attribute {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public static class Validation.Verify : object {
    [DebuggerStepThroughAttribute]
public static void Operation(bool condition, string message);
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public static void Operation(bool condition, string unformattedMessage, object arg1);
    [DebuggerStepThroughAttribute]
public static void Operation(bool condition, string unformattedMessage, object arg1, object arg2);
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public static void Operation(bool condition, string unformattedMessage, Object[] args);
    [DebuggerStepThroughAttribute]
public static void OperationWithHelp(bool condition, string message, string helpLink);
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
[DoesNotReturnAttribute]
public static Exception FailOperation(string message, Object[] args);
    [NullableContextAttribute("1")]
[DebuggerStepThroughAttribute]
public static void NotDisposed(IDisposableObservable disposedValue, string message);
    [DebuggerStepThroughAttribute]
public static void NotDisposed(bool condition, object disposedValue, string message);
    [DebuggerStepThroughAttribute]
public static void NotDisposed(bool condition, string message);
    [DebuggerStepThroughAttribute]
[SecurityCriticalAttribute]
public static void HResult(int hresult, bool ignorePreviousComCalls);
}
