[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpAspNetCoreMvcUiBundlingModule : AbpModule {
    [NullableContextAttribute("1")]
public virtual void ConfigureServices(ServiceConfigurationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.AbpBundleContributorOptions : object {
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, BundleContributorCollection> <AllExtensions>k__BackingField;
    public ConcurrentDictionary`2<Type, BundleContributorCollection> AllExtensions { get; }
    [CompilerGeneratedAttribute]
public ConcurrentDictionary`2<Type, BundleContributorCollection> get_AllExtensions();
    public BundleContributorCollection Extensions();
    public BundleContributorCollection Extensions(Type contributorType);
}
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleCache : object {
    [NullableAttribute("1")]
private ConcurrentDictionary`2<string, BundleCacheItem> _cache;
    [NullableContextAttribute("1")]
public sealed virtual BundleCacheItem GetOrAdd(string bundleName, Func`1<BundleCacheItem> factory);
    [NullableContextAttribute("1")]
public sealed virtual bool Remove(string bundleName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleCacheItem : object {
    [CompilerGeneratedAttribute]
private List`1<BundleFile> <Files>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IDisposable> <WatchDisposeHandles>k__BackingField;
    public List`1<BundleFile> Files { get; }
    public List`1<IDisposable> WatchDisposeHandles { get; }
    public BundleCacheItem(List`1<BundleFile> files);
    [CompilerGeneratedAttribute]
public List`1<BundleFile> get_Files();
    [CompilerGeneratedAttribute]
public List`1<IDisposable> get_WatchDisposeHandles();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager : object {
    [CompilerGeneratedAttribute]
private ILogger`1<BundleManager> <Logger>k__BackingField;
    protected AbpBundlingOptions Options;
    protected AbpBundleContributorOptions ContributorOptions;
    protected IWebHostEnvironment HostingEnvironment;
    protected IScriptBundler ScriptBundler;
    protected IStyleBundler StyleBundler;
    protected IServiceProvider ServiceProvider;
    protected IDynamicFileProvider DynamicFileProvider;
    protected IBundleCache BundleCache;
    protected IWebRequestResources RequestResources;
    public ILogger`1<BundleManager> Logger { get; public set; }
    public BundleManager(IOptions`1<AbpBundlingOptions> options, IOptions`1<AbpBundleContributorOptions> contributorOptions, IScriptBundler scriptBundler, IStyleBundler styleBundler, IWebHostEnvironment hostingEnvironment, IServiceProvider serviceProvider, IDynamicFileProvider dynamicFileProvider, IBundleCache bundleCache, IWebRequestResources requestResources);
    [CompilerGeneratedAttribute]
public ILogger`1<BundleManager> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<BundleManager> value);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager/<GetStyleBundleFilesAsync>d__14")]
public virtual Task`1<IReadOnlyList`1<BundleFile>> GetStyleBundleFilesAsync(string bundleName);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager/<GetScriptBundleFilesAsync>d__15")]
public virtual Task`1<IReadOnlyList`1<BundleFile>> GetScriptBundleFilesAsync(string bundleName);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager/<GetBundleFilesAsync>d__16")]
protected virtual Task`1<IReadOnlyList`1<BundleFile>> GetBundleFilesAsync(BundleConfigurationCollection bundles, string bundleName, IBundler bundler);
    private BundleCacheItem AddToBundleCache(string bundleName, IBundler bundler, List`1<string> bundleFiles);
    private void WatchChanges(BundleCacheItem cacheValue, List`1<string> files, string bundleRelativePath);
    protected virtual void SaveBundleResult(string bundleRelativePath, BundleResult bundleResult);
    protected virtual bool IsBundlingEnabled();
    protected virtual bool IsMinficationEnabled();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager/<GetBundleFilesAsync>d__22")]
protected Task`1<List`1<BundleFile>> GetBundleFilesAsync(List`1<IBundleContributor> contributors);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleManager/<GetDynamicResourcesAsync>d__23")]
protected virtual Task`1<List`1<BundleFile>> GetDynamicResourcesAsync(List`1<IBundleContributor> contributors);
    protected virtual BundleConfigurationContext CreateBundleConfigurationContext();
    protected virtual List`1<IBundleContributor> GetContributors(BundleConfigurationCollection bundles, string bundleName);
    protected virtual void AddContributorsWithBaseBundles(List`1<IBundleContributor> contributors, BundleConfigurationCollection bundles, string bundleName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundlerBase : object {
    private static String[] _minFileSuffixes;
    [CompilerGeneratedAttribute]
private ILogger`1<BundlerBase> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebHostEnvironment <HostEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private IMinifier <Minifier>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpBundlingOptions <BundlingOptions>k__BackingField;
    public ILogger`1<BundlerBase> Logger { get; public set; }
    protected IWebHostEnvironment HostEnvironment { get; }
    protected IMinifier Minifier { get; }
    protected AbpBundlingOptions BundlingOptions { get; }
    public string FileExtension { get; }
    protected BundlerBase(IWebHostEnvironment hostEnvironment, IMinifier minifier, IOptions`1<AbpBundlingOptions> bundlingOptions);
    private static BundlerBase();
    [CompilerGeneratedAttribute]
public ILogger`1<BundlerBase> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<BundlerBase> value);
    [CompilerGeneratedAttribute]
protected IWebHostEnvironment get_HostEnvironment();
    [CompilerGeneratedAttribute]
protected IMinifier get_Minifier();
    [CompilerGeneratedAttribute]
protected AbpBundlingOptions get_BundlingOptions();
    public abstract virtual string get_FileExtension();
    public sealed virtual BundleResult Bundle(IBundlerContext context);
    private void AddFileToBundle(IBundlerContext context, StringBuilder bundleContentBuilder, string fileName);
    private string GetFileContentConsideringMinification(IBundlerContext context, string fileName);
    private string GetAndMinifyFileContent(IBundlerContext context, string fileName);
    protected virtual IFileInfo GetFileInfo(IBundlerContext context, string file);
    protected virtual bool IsMinFile(string fileName);
    protected virtual IFileInfo GetMinFileInfoOrNull(string file);
    protected virtual string ProcessBeforeAddingToTheBundle(IBundlerContext context, string filePath, string fileContent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundlerContext : object {
    [CompilerGeneratedAttribute]
private string <BundleRelativePath>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyList`1<string> <ContentFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsMinificationEnabled>k__BackingField;
    public string BundleRelativePath { get; }
    public IReadOnlyList`1<string> ContentFiles { get; }
    public bool IsMinificationEnabled { get; }
    public BundlerContext(string bundleRelativePath, IReadOnlyList`1<string> contentFiles, bool isMinificationEnabled);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BundleRelativePath();
    [CompilerGeneratedAttribute]
public sealed virtual IReadOnlyList`1<string> get_ContentFiles();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsMinificationEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.BundleResult : object {
    [CompilerGeneratedAttribute]
private string <Content>k__BackingField;
    public string Content { get; }
    public BundleResult(string content);
    [CompilerGeneratedAttribute]
public string get_Content();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.CachedBundleDynamicFileProvider : DynamicFileProvider {
    [CompilerGeneratedAttribute]
private IDistributedCache`1<InMemoryFileInfoCacheItem> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptions`1<AbpBundlingOptions> <BundlingOptions>k__BackingField;
    protected IDistributedCache`1<InMemoryFileInfoCacheItem> Cache { get; }
    protected IOptions`1<AbpBundlingOptions> BundlingOptions { get; }
    public CachedBundleDynamicFileProvider(IDistributedCache`1<InMemoryFileInfoCacheItem> cache, IOptions`1<AbpBundlingOptions> bundlingOptions);
    [CompilerGeneratedAttribute]
protected IDistributedCache`1<InMemoryFileInfoCacheItem> get_Cache();
    [CompilerGeneratedAttribute]
protected IOptions`1<AbpBundlingOptions> get_BundlingOptions();
    public virtual IFileInfo GetFileInfo(string subpath);
    public virtual void AddOrUpdate(IFileInfo fileInfo);
    public virtual bool Delete(string filePath);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.IBundleCache {
    public abstract virtual BundleCacheItem GetOrAdd(string bundleName, Func`1<BundleCacheItem> factory);
    public abstract virtual bool Remove(string bundleName);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.IBundleManager {
    public abstract virtual Task`1<IReadOnlyList`1<BundleFile>> GetStyleBundleFilesAsync(string bundleName);
    public abstract virtual Task`1<IReadOnlyList`1<BundleFile>> GetScriptBundleFilesAsync(string bundleName);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.IBundler {
    public string FileExtension { get; }
    public abstract virtual string get_FileExtension();
    public abstract virtual BundleResult Bundle(IBundlerContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.IBundlerContext {
    public string BundleRelativePath { get; }
    public IReadOnlyList`1<string> ContentFiles { get; }
    public bool IsMinificationEnabled { get; }
    public abstract virtual string get_BundleRelativePath();
    public abstract virtual IReadOnlyList`1<string> get_ContentFiles();
    public abstract virtual bool get_IsMinificationEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[IgnoreMultiTenancyAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.InMemoryFileInfoCacheItem : object {
    [CompilerGeneratedAttribute]
private string <DynamicPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <FileContent>k__BackingField;
    public string DynamicPath { get; public set; }
    public string Name { get; public set; }
    public Byte[] FileContent { get; public set; }
    public InMemoryFileInfoCacheItem(string dynamicPath, Byte[] fileContent, string name);
    [CompilerGeneratedAttribute]
public string get_DynamicPath();
    [CompilerGeneratedAttribute]
public void set_DynamicPath(string value);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_FileContent();
    [CompilerGeneratedAttribute]
public void set_FileContent(Byte[] value);
}
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.Scripts.IScriptBundler {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.Scripts.ScriptBundler : BundlerBase {
    public string FileExtension { get; }
    public ScriptBundler(IWebHostEnvironment hostEnvironment, IJavascriptMinifier minifier, IOptions`1<AbpBundlingOptions> bundlingOptions);
    public virtual string get_FileExtension();
    protected virtual string ProcessBeforeAddingToTheBundle(IBundlerContext context, string filePath, string fileContent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class Volo.Abp.AspNetCore.Mvc.UI.Bundling.Styles.CssRelativePath : object {
    private static Regex _rxUrl;
    private static string _protocol;
    private static CssRelativePath();
    public static string Adjust(string cssFileContents, string absoluteInputFilePath, string absoluteOutputPath);
    private static string GetAbsolutePath(string cssFilePath, string pathOnly);
    private static string MakeRelative(string baseFile, string file);
}
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.Styles.IStyleBundler {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.Styles.StyleBundler : BundlerBase {
    private IWebHostEnvironment _hostingEnvironment;
    public string FileExtension { get; }
    public StyleBundler(IWebHostEnvironment hostEnvironment, ICssMinifier minifier, IOptions`1<AbpBundlingOptions> bundlingOptions);
    public virtual string get_FileExtension();
    public string GetAbsolutePath(string relativePath);
    protected virtual string ProcessBeforeAddingToTheBundle(IBundlerContext context, string filePath, string fileContent);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleItemTagHelper`2 : AbpTagHelper`2<TTagHelper, TTagHelperService> {
    [CompilerGeneratedAttribute]
private string <Src>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public string Src { get; public set; }
    public Type Type { get; public set; }
    [NullableContextAttribute("1")]
protected AbpBundleItemTagHelper`2(TTagHelperService service);
    [CompilerGeneratedAttribute]
public string get_Src();
    [CompilerGeneratedAttribute]
public void set_Src(string value);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(Type value);
    [NullableContextAttribute("1")]
public sealed virtual string GetNameOrNull();
    [NullableContextAttribute("1")]
public sealed virtual BundleTagHelperItem CreateBundleTagHelperItem();
    [NullableContextAttribute("1")]
protected abstract virtual string GetFileExtension();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleItemTagHelperService`2 : AbpTagHelperService`1<TTagHelper> {
    [CompilerGeneratedAttribute]
private AbpTagHelperResourceService <ResourceService>k__BackingField;
    protected AbpTagHelperResourceService ResourceService { get; }
    protected AbpBundleItemTagHelperService`2(AbpTagHelperResourceService resourceService);
    [CompilerGeneratedAttribute]
protected AbpTagHelperResourceService get_ResourceService();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleItemTagHelperService`2/<ProcessAsync>d__4")]
public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleTagHelper`2 : AbpTagHelper`2<TTagHelper, TService> {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [NullableContextAttribute("1")]
protected AbpBundleTagHelper`2(TService service);
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    public virtual string GetNameOrNull();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleTagHelperService`2 : AbpTagHelperService`1<TTagHelper> {
    [CompilerGeneratedAttribute]
private AbpTagHelperResourceService <ResourceService>k__BackingField;
    protected AbpTagHelperResourceService ResourceService { get; }
    protected AbpBundleTagHelperService`2(AbpTagHelperResourceService resourceService);
    [CompilerGeneratedAttribute]
protected AbpTagHelperResourceService get_ResourceService();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleTagHelperService`2/<ProcessAsync>d__4")]
public virtual Task ProcessAsync(TagHelperContext context, TagHelperOutput output);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpBundleTagHelperService`2/<GetBundleItems>d__5")]
protected virtual Task`1<List`1<BundleTagHelperItem>> GetBundleItems(TagHelperContext context, TagHelperOutput output);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HtmlTargetElementAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpScriptBundleTagHelper : AbpBundleTagHelper`2<AbpScriptBundleTagHelper, AbpScriptBundleTagHelperService> {
    [CompilerGeneratedAttribute]
private bool <Defer>k__BackingField;
    [HtmlAttributeNameAttribute("defer")]
public bool Defer { get; public set; }
    [NullableContextAttribute("1")]
public AbpScriptBundleTagHelper(AbpScriptBundleTagHelperService service);
    [CompilerGeneratedAttribute]
public bool get_Defer();
    [CompilerGeneratedAttribute]
public void set_Defer(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpScriptBundleTagHelperService : AbpBundleTagHelperService`2<AbpScriptBundleTagHelper, AbpScriptBundleTagHelperService> {
    public AbpScriptBundleTagHelperService(AbpTagHelperScriptService resourceHelper);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HtmlTargetElementAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpScriptTagHelper : AbpBundleItemTagHelper`2<AbpScriptTagHelper, AbpScriptTagHelperService> {
    [CompilerGeneratedAttribute]
private bool <Defer>k__BackingField;
    [HtmlAttributeNameAttribute("defer")]
public bool Defer { get; public set; }
    [NullableContextAttribute("1")]
public AbpScriptTagHelper(AbpScriptTagHelperService service);
    [CompilerGeneratedAttribute]
public bool get_Defer();
    [CompilerGeneratedAttribute]
public void set_Defer(bool value);
    [NullableContextAttribute("1")]
protected virtual string GetFileExtension();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpScriptTagHelperService : AbpBundleItemTagHelperService`2<AbpScriptTagHelper, AbpScriptTagHelperService> {
    public AbpScriptTagHelperService(AbpTagHelperScriptService resourceService);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HtmlTargetElementAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpStyleBundleTagHelper : AbpBundleTagHelper`2<AbpStyleBundleTagHelper, AbpStyleBundleTagHelperService> {
    [CompilerGeneratedAttribute]
private bool <Preload>k__BackingField;
    [HtmlAttributeNameAttribute("preload")]
public bool Preload { get; public set; }
    [NullableContextAttribute("1")]
public AbpStyleBundleTagHelper(AbpStyleBundleTagHelperService service);
    [CompilerGeneratedAttribute]
public bool get_Preload();
    [CompilerGeneratedAttribute]
public void set_Preload(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpStyleBundleTagHelperService : AbpBundleTagHelperService`2<AbpStyleBundleTagHelper, AbpStyleBundleTagHelperService> {
    public AbpStyleBundleTagHelperService(AbpTagHelperStyleService resourceHelper);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[HtmlTargetElementAttribute]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpStyleTagHelper : AbpBundleItemTagHelper`2<AbpStyleTagHelper, AbpStyleTagHelperService> {
    [CompilerGeneratedAttribute]
private bool <Preload>k__BackingField;
    [HtmlAttributeNameAttribute("preload")]
public bool Preload { get; public set; }
    [NullableContextAttribute("1")]
public AbpStyleTagHelper(AbpStyleTagHelperService service);
    [CompilerGeneratedAttribute]
public bool get_Preload();
    [CompilerGeneratedAttribute]
public void set_Preload(bool value);
    [NullableContextAttribute("1")]
protected virtual string GetFileExtension();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpStyleTagHelperService : AbpBundleItemTagHelperService`2<AbpStyleTagHelper, AbpStyleTagHelperService> {
    public AbpStyleTagHelperService(AbpTagHelperStyleService resourceService);
}
public static class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperConsts : object {
    [NullableAttribute("1")]
public static string ContextBundleItemListKey;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperResourceService : object {
    [CompilerGeneratedAttribute]
private ILogger`1<AbpTagHelperResourceService> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IBundleManager <BundleManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IWebHostEnvironment <HostingEnvironment>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpBundlingOptions <Options>k__BackingField;
    public ILogger`1<AbpTagHelperResourceService> Logger { get; public set; }
    protected IBundleManager BundleManager { get; }
    protected IWebHostEnvironment HostingEnvironment { get; }
    protected AbpBundlingOptions Options { get; }
    protected AbpTagHelperResourceService(IBundleManager bundleManager, IOptions`1<AbpBundlingOptions> options, IWebHostEnvironment hostingEnvironment);
    [CompilerGeneratedAttribute]
public ILogger`1<AbpTagHelperResourceService> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<AbpTagHelperResourceService> value);
    [CompilerGeneratedAttribute]
protected IBundleManager get_BundleManager();
    [CompilerGeneratedAttribute]
protected IWebHostEnvironment get_HostingEnvironment();
    [CompilerGeneratedAttribute]
protected AbpBundlingOptions get_Options();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperResourceService/<ProcessAsync>d__14")]
public virtual Task ProcessAsync(ViewContext viewContext, TagHelper tagHelper, TagHelperContext context, TagHelperOutput output, List`1<BundleTagHelperItem> bundleItems, string bundleName);
    protected abstract virtual void CreateBundle(string bundleName, List`1<BundleTagHelperItem> bundleItems);
    protected abstract virtual Task`1<IReadOnlyList`1<BundleFile>> GetBundleFilesAsync(string bundleName);
    protected abstract virtual void AddHtmlTag(ViewContext viewContext, TagHelper tagHelper, TagHelperContext context, TagHelperOutput output, BundleFile file, IFileInfo fileInfo);
    protected virtual void AddErrorScript(ViewContext viewContext, TagHelper tagHelper, TagHelperContext context, TagHelperOutput output, BundleFile file, string bundleName);
    protected virtual string GenerateBundleName(List`1<BundleTagHelperItem> bundleItems);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperScriptService : AbpTagHelperResourceService {
    public AbpTagHelperScriptService(IBundleManager bundleManager, IOptions`1<AbpBundlingOptions> options, IWebHostEnvironment hostingEnvironment);
    protected virtual void CreateBundle(string bundleName, List`1<BundleTagHelperItem> bundleItems);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperScriptService/<GetBundleFilesAsync>d__2")]
protected virtual Task`1<IReadOnlyList`1<BundleFile>> GetBundleFilesAsync(string bundleName);
    protected virtual void AddHtmlTag(ViewContext viewContext, TagHelper tagHelper, TagHelperContext context, TagHelperOutput output, BundleFile file, IFileInfo fileInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperStyleService : AbpTagHelperResourceService {
    protected AbpSecurityHeadersOptions SecurityHeadersOptions;
    public AbpTagHelperStyleService(IBundleManager bundleManager, IOptions`1<AbpBundlingOptions> options, IWebHostEnvironment hostingEnvironment, IOptions`1<AbpSecurityHeadersOptions> securityHeadersOptions);
    protected virtual void CreateBundle(string bundleName, List`1<BundleTagHelperItem> bundleItems);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.AbpTagHelperStyleService/<GetBundleFilesAsync>d__3")]
protected virtual Task`1<IReadOnlyList`1<BundleFile>> GetBundleFilesAsync(string bundleName);
    protected virtual void AddHtmlTag(ViewContext viewContext, TagHelper tagHelper, TagHelperContext context, TagHelperOutput output, BundleFile file, IFileInfo fileInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.BundleTagHelperContributorTypeItem : BundleTagHelperItem {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    public Type Type { get; }
    public BundleTagHelperContributorTypeItem(Type type);
    [CompilerGeneratedAttribute]
public Type get_Type();
    public virtual string ToString();
    public virtual void AddToConfiguration(BundleConfiguration configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.BundleTagHelperFileItem : BundleTagHelperItem {
    [CompilerGeneratedAttribute]
private BundleFile <File>k__BackingField;
    public BundleFile File { get; }
    public BundleTagHelperFileItem(BundleFile file);
    [CompilerGeneratedAttribute]
public BundleFile get_File();
    public virtual string ToString();
    public virtual void AddToConfiguration(BundleConfiguration configuration);
}
public abstract class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.BundleTagHelperItem : object {
    [NullableContextAttribute("1")]
public abstract virtual void AddToConfiguration(BundleConfiguration configuration);
}
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.IBundleItemTagHelper {
    [NullableContextAttribute("1")]
public abstract virtual BundleTagHelperItem CreateBundleTagHelperItem();
}
[NullableContextAttribute("2")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.IBundleTagHelper {
    public abstract virtual string GetNameOrNull();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[HtmlTargetElementAttribute("script")]
[HtmlTargetElementAttribute("body")]
public class Volo.Abp.AspNetCore.Mvc.UI.Bundling.TagHelpers.ScriptNonceTagHelper : AbpTagHelper {
    [CompilerGeneratedAttribute]
private ViewContext <ViewContext>k__BackingField;
    [HtmlAttributeNotBoundAttribute]
[ViewContextAttribute]
public ViewContext ViewContext { get; public set; }
    [CompilerGeneratedAttribute]
public ViewContext get_ViewContext();
    [CompilerGeneratedAttribute]
public void set_ViewContext(ViewContext value);
    public virtual void Process(TagHelperContext context, TagHelperOutput output);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.UI.Resources.IWebRequestResources {
    public abstract virtual List`1<BundleFile> TryAdd(List`1<BundleFile> resources);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.UI.Resources.WebRequestResources : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<BundleFile>> <Resources>k__BackingField;
    [CompilerGeneratedAttribute]
private IHttpContextAccessor <HttpContextAccessor>k__BackingField;
    protected Dictionary`2<string, List`1<BundleFile>> Resources { get; }
    protected IHttpContextAccessor HttpContextAccessor { get; }
    public WebRequestResources(IHttpContextAccessor httpContextAccessor);
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, List`1<BundleFile>> get_Resources();
    [CompilerGeneratedAttribute]
protected IHttpContextAccessor get_HttpContextAccessor();
    public sealed virtual List`1<BundleFile> TryAdd(List`1<BundleFile> resources);
}
internal class VoloAbpAspNetCoreMvcUIBundling_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
