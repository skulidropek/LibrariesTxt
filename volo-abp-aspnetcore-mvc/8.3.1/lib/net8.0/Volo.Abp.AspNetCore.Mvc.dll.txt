[ExtensionAttribute]
public static class Microsoft.AspNetCore.Builder.AbpAspNetCoreMvcApplicationBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
[ObsoleteAttribute("Use app.UseConfiguredEndpoints(...) extension method instead!")]
public static IApplicationBuilder UseMvcWithDefaultRouteAndArea(IApplicationBuilder app, Action`1<IEndpointRouteBuilder> additionalConfigurationAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Http.AbpFormFileExtensions : object {
    [ExtensionAttribute]
public static Byte[] GetAllBytes(IFormFile file);
    [AsyncStateMachineAttribute("Microsoft.AspNetCore.Http.AbpFormFileExtensions/<GetAllBytesAsync>d__1")]
[ExtensionAttribute]
public static Task`1<Byte[]> GetAllBytesAsync(IFormFile file);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.Abstractions.ActionDescriptorExtensions : object {
    [ExtensionAttribute]
public static ControllerActionDescriptor AsControllerActionDescriptor(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static MethodInfo GetMethodInfo(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static Type GetReturnType(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static bool HasObjectResult(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static bool IsControllerAction(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static bool IsPageAction(ActionDescriptor actionDescriptor);
    [ExtensionAttribute]
public static PageActionDescriptor AsPageAction(ActionDescriptor actionDescriptor);
}
[ExtensionAttribute]
public static class Microsoft.AspNetCore.Mvc.ViewFeatures.ViewContextExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IUrlHelper GetUrlHelper(ViewContext viewContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AbpApiVersioningExtensions : object {
    [ExtensionAttribute]
public static IApiVersioningBuilder AddAbpApiVersioning(IServiceCollection services, Action`1<ApiVersioningOptions> apiVersioningOptionsSetupAction, Action`1<MvcApiVersioningOptions> mvcApiVersioningOptionsSetupAction);
    [ExtensionAttribute]
public static void ConfigureAbp(MvcApiVersioningOptions options, AbpAspNetCoreMvcOptions mvcOptions);
    private static void ConfigureApiVersionsByConvention(MvcApiVersioningOptions options, ConventionalControllerSetting setting);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.AbpMvcBuilderExtensions : object {
    [ExtensionAttribute]
public static void AddApplicationPartIfNotExists(IMvcBuilder mvcBuilder, Assembly assembly);
    [ExtensionAttribute]
public static void AddApplicationPartIfNotExists(IMvcCoreBuilder mvcCoreBuilder, Assembly assembly);
    [ExtensionAttribute]
public static void AddIfNotContains(IList`1<ApplicationPart> applicationParts, Assembly assembly);
    [ExtensionAttribute]
public static void AddAbpRazorRuntimeCompilation(IMvcCoreBuilder mvcCoreBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.AspNetCore.Mvc.AbpActionContextExtensions : object {
    [ExtensionAttribute]
public static T GetRequiredService(FilterContext context);
    [ExtensionAttribute]
public static T GetService(FilterContext context, T defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcModule : AbpModule {
    public virtual void PreConfigureServices(ServiceConfigurationContext context);
    public virtual void ConfigureServices(ServiceConfigurationContext context);
    public virtual void PostConfigureServices(ServiceConfigurationContext context);
    public virtual void OnApplicationInitialization(ApplicationInitializationContext context);
    private static void AddApplicationParts(ApplicationInitializationContext context);
    private static void AddToApplicationParts(ApplicationPartManager partManager, IEnumerable`1<Assembly> moduleAssemblies);
    private static void CheckLibs(ApplicationInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AbpAspNetCoreMvcOptions : object {
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <MinifyGeneratedScript>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpConventionalControllerOptions <ConventionalControllers>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <IgnoredControllersOnModelExclusion>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <ControllersToRemove>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ExposeIntegrationServices>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoModelValidation>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <EnableRazorRuntimeCompilationOnDevelopment>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ChangeControllerModelApiExplorerGroupName>k__BackingField;
    public Nullable`1<bool> MinifyGeneratedScript { get; public set; }
    public AbpConventionalControllerOptions ConventionalControllers { get; }
    public HashSet`1<Type> IgnoredControllersOnModelExclusion { get; }
    public HashSet`1<Type> ControllersToRemove { get; }
    public bool ExposeIntegrationServices { get; public set; }
    public bool AutoModelValidation { get; public set; }
    public bool EnableRazorRuntimeCompilationOnDevelopment { get; public set; }
    public bool ChangeControllerModelApiExplorerGroupName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_MinifyGeneratedScript();
    [CompilerGeneratedAttribute]
public void set_MinifyGeneratedScript(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public AbpConventionalControllerOptions get_ConventionalControllers();
    [CompilerGeneratedAttribute]
public HashSet`1<Type> get_IgnoredControllersOnModelExclusion();
    [CompilerGeneratedAttribute]
public HashSet`1<Type> get_ControllersToRemove();
    [CompilerGeneratedAttribute]
public bool get_ExposeIntegrationServices();
    [CompilerGeneratedAttribute]
public void set_ExposeIntegrationServices(bool value);
    [CompilerGeneratedAttribute]
public bool get_AutoModelValidation();
    [CompilerGeneratedAttribute]
public void set_AutoModelValidation(bool value);
    [CompilerGeneratedAttribute]
public bool get_EnableRazorRuntimeCompilationOnDevelopment();
    [CompilerGeneratedAttribute]
public void set_EnableRazorRuntimeCompilationOnDevelopment(bool value);
    [CompilerGeneratedAttribute]
public bool get_ChangeControllerModelApiExplorerGroupName();
    [CompilerGeneratedAttribute]
public void set_ChangeControllerModelApiExplorerGroupName(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.AbpController : Controller {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <ObjectMapperContext>k__BackingField;
    [NullableAttribute("2")]
private IStringLocalizer _localizer;
    [NullableAttribute("2")]
private Type _localizationResource;
    [CompilerGeneratedAttribute]
private List`1<string> <AppliedCrossCuttingConcerns>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    [ObsoleteAttribute("Use LazyServiceProvider instead.")]
public IServiceProvider ServiceProvider { get; public set; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    [NullableAttribute("2")]
protected Type ObjectMapperContext { get; protected set; }
    protected IObjectMapper ObjectMapper { get; }
    protected IGuidGenerator GuidGenerator { get; }
    protected ILoggerFactory LoggerFactory { get; }
    protected ILogger Logger { get; }
    protected ICurrentUser CurrentUser { get; }
    protected ICurrentTenant CurrentTenant { get; }
    protected IAuthorizationService AuthorizationService { get; }
    [NullableAttribute("2")]
protected IUnitOfWork CurrentUnitOfWork { get; }
    protected IClock Clock { get; }
    protected IModelStateValidator ModelValidator { get; }
    protected IFeatureChecker FeatureChecker { get; }
    protected IAppUrlProvider AppUrlProvider { get; }
    protected IStringLocalizerFactory StringLocalizerFactory { get; }
    protected IStringLocalizer L { get; }
    [NullableAttribute("2")]
protected Type LocalizationResource { get; protected set; }
    public List`1<string> AppliedCrossCuttingConcerns { get; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    protected IUnitOfWorkManager get_UnitOfWorkManager();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected Type get_ObjectMapperContext();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_ObjectMapperContext(Type value);
    protected IObjectMapper get_ObjectMapper();
    protected IGuidGenerator get_GuidGenerator();
    protected ILoggerFactory get_LoggerFactory();
    protected ILogger get_Logger();
    protected ICurrentUser get_CurrentUser();
    protected ICurrentTenant get_CurrentTenant();
    protected IAuthorizationService get_AuthorizationService();
    [NullableContextAttribute("2")]
protected IUnitOfWork get_CurrentUnitOfWork();
    protected IClock get_Clock();
    protected IModelStateValidator get_ModelValidator();
    protected IFeatureChecker get_FeatureChecker();
    protected IAppUrlProvider get_AppUrlProvider();
    protected IStringLocalizerFactory get_StringLocalizerFactory();
    protected IStringLocalizer get_L();
    [NullableContextAttribute("2")]
protected Type get_LocalizationResource();
    [NullableContextAttribute("2")]
protected void set_LocalizationResource(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_AppliedCrossCuttingConcerns();
    protected virtual void ValidateModel();
    protected virtual IStringLocalizer CreateLocalizer();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.AbpController/<RedirectSafelyAsync>d__52")]
protected virtual Task`1<RedirectResult> RedirectSafelyAsync(string returnUrl, string returnUrlHash);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.AbpController/<GetRedirectUrlAsync>d__53")]
protected virtual Task`1<string> GetRedirectUrlAsync(string returnUrl, string returnUrlHash);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.AbpController/<NormalizeReturnUrlAsync>d__54")]
protected virtual Task`1<string> NormalizeReturnUrlAsync(string returnUrl);
    protected virtual Task`1<string> GetAppHomeUrlAsync();
    [CompilerGeneratedAttribute]
private object <get_ObjectMapper>b__15_0(IServiceProvider provider);
    [CompilerGeneratedAttribute]
private object <get_Logger>b__21_0(IServiceProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.AbpControllerBase : ControllerBase {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <ObjectMapperContext>k__BackingField;
    [NullableAttribute("2")]
private IStringLocalizer _localizer;
    [NullableAttribute("2")]
private Type _localizationResource;
    [CompilerGeneratedAttribute]
private List`1<string> <AppliedCrossCuttingConcerns>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    [NullableAttribute("2")]
protected Type ObjectMapperContext { get; protected set; }
    protected IObjectMapper ObjectMapper { get; }
    protected IGuidGenerator GuidGenerator { get; }
    protected ILoggerFactory LoggerFactory { get; }
    protected ILogger Logger { get; }
    protected ICurrentUser CurrentUser { get; }
    protected ICurrentTenant CurrentTenant { get; }
    protected IAuthorizationService AuthorizationService { get; }
    [NullableAttribute("2")]
protected IUnitOfWork CurrentUnitOfWork { get; }
    protected IClock Clock { get; }
    protected IModelStateValidator ModelValidator { get; }
    protected IFeatureChecker FeatureChecker { get; }
    protected IStringLocalizerFactory StringLocalizerFactory { get; }
    protected IStringLocalizer L { get; }
    [NullableAttribute("2")]
protected Type LocalizationResource { get; protected set; }
    public List`1<string> AppliedCrossCuttingConcerns { get; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    protected IUnitOfWorkManager get_UnitOfWorkManager();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected Type get_ObjectMapperContext();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_ObjectMapperContext(Type value);
    protected IObjectMapper get_ObjectMapper();
    protected IGuidGenerator get_GuidGenerator();
    protected ILoggerFactory get_LoggerFactory();
    protected ILogger get_Logger();
    protected ICurrentUser get_CurrentUser();
    protected ICurrentTenant get_CurrentTenant();
    protected IAuthorizationService get_AuthorizationService();
    [NullableContextAttribute("2")]
protected IUnitOfWork get_CurrentUnitOfWork();
    protected IClock get_Clock();
    protected IModelStateValidator get_ModelValidator();
    protected IFeatureChecker get_FeatureChecker();
    protected IStringLocalizerFactory get_StringLocalizerFactory();
    protected IStringLocalizer get_L();
    [NullableContextAttribute("2")]
protected Type get_LocalizationResource();
    [NullableContextAttribute("2")]
protected void set_LocalizationResource(Type value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_AppliedCrossCuttingConcerns();
    protected virtual IStringLocalizer CreateLocalizer();
    protected virtual void ValidateModel();
    [CompilerGeneratedAttribute]
private object <get_ObjectMapper>b__11_0(IServiceProvider provider);
    [CompilerGeneratedAttribute]
private object <get_Logger>b__17_0(IServiceProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AbpDataAnnotationAutoLocalizationMetadataDetailsProvider : object {
    private static string PropertyLocalizationKeyPrefix;
    private Lazy`1<IStringLocalizerFactory> _stringLocalizerFactory;
    private Lazy`1<IOptions`1<MvcDataAnnotationsLocalizationOptions>> _localizationOptions;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ConcurrentDictionary`2<DisplayMetadataProviderContext, string> _displayNameKeys;
    public AbpDataAnnotationAutoLocalizationMetadataDetailsProvider(IServiceCollection services);
    public virtual void CreateDisplayMetadata(DisplayMetadataProviderContext context);
    protected virtual string GetDisplayNameKey(DisplayMetadataProviderContext context, IStringLocalizer localizer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Volo.Abp.AspNetCore.Mvc.AbpMvcOptionsExtensions : object {
    [ExtensionAttribute]
public static void AddAbp(MvcOptions options, IServiceCollection services);
    private static void AddFormatters(MvcOptions options);
    private static void AddConventions(MvcOptions options, IServiceCollection services);
    private static void AddActionFilters(MvcOptions options);
    private static void AddPageFilters(MvcOptions options);
    private static void AddModelBinders(MvcOptions options);
    private static void AddMetadataProviders(MvcOptions options, IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.AbpViewComponent : ViewComponent {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <ObjectMapperContext>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    [ObsoleteAttribute("Use LazyServiceProvider instead.")]
public IServiceProvider ServiceProvider { get; public set; }
    [NullableAttribute("2")]
protected Type ObjectMapperContext { get; protected set; }
    protected IObjectMapper ObjectMapper { get; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected Type get_ObjectMapperContext();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected void set_ObjectMapperContext(Type value);
    protected IObjectMapper get_ObjectMapper();
    [CompilerGeneratedAttribute]
private object <get_ObjectMapper>b__13_0(IServiceProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.AspNetCore.Mvc.ActionResultHelper : object {
    [CompilerGeneratedAttribute]
private static List`1<Type> <ObjectResultTypes>k__BackingField;
    public static List`1<Type> ObjectResultTypes { get; }
    private static ActionResultHelper();
    [CompilerGeneratedAttribute]
public static List`1<Type> get_ObjectResultTypes();
    public static bool IsObjectResult(Type returnType, Type[] excludeTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpAntiForgeryCookieNameProvider : object {
    private IOptionsMonitor`1<CookieAuthenticationOptions> _namedOptionsAccessor;
    private AbpAntiForgeryOptions _abpAntiForgeryOptions;
    public AbpAntiForgeryCookieNameProvider(IOptionsMonitor`1<CookieAuthenticationOptions> namedOptionsAccessor, IOptions`1<AbpAntiForgeryOptions> abpAntiForgeryOptions);
    [NullableContextAttribute("2")]
public virtual string GetAuthCookieNameOrNull();
    [NullableContextAttribute("2")]
public virtual string GetAntiForgeryCookieNameOrNull();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpAntiForgeryOptions : object {
    [CompilerGeneratedAttribute]
private CookieBuilder <TokenCookie>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <AuthCookieSchemaName>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AutoValidate>k__BackingField;
    private Predicate`1<Type> _autoValidateFilter;
    private HashSet`1<string> _autoValidateIgnoredHttpMethods;
    public CookieBuilder TokenCookie { get; }
    [NullableAttribute("2")]
public string AuthCookieSchemaName { get; public set; }
    public bool AutoValidate { get; public set; }
    public Predicate`1<Type> AutoValidateFilter { get; public set; }
    public HashSet`1<string> AutoValidateIgnoredHttpMethods { get; public set; }
    [CompilerGeneratedAttribute]
public CookieBuilder get_TokenCookie();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_AuthCookieSchemaName();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_AuthCookieSchemaName(string value);
    [CompilerGeneratedAttribute]
public bool get_AutoValidate();
    [CompilerGeneratedAttribute]
public void set_AutoValidate(bool value);
    public Predicate`1<Type> get_AutoValidateFilter();
    public void set_AutoValidateFilter(Predicate`1<Type> value);
    public HashSet`1<string> get_AutoValidateIgnoredHttpMethods();
    public void set_AutoValidateIgnoredHttpMethods(HashSet`1<string> value);
}
[AttributeUsageAttribute("68")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpAutoValidateAntiforgeryTokenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    public bool IsReusable { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    public sealed virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpAutoValidateAntiforgeryTokenAuthorizationFilter : AbpValidateAntiforgeryTokenAuthorizationFilter {
    private AbpAntiForgeryOptions _options;
    public AbpAutoValidateAntiforgeryTokenAuthorizationFilter(IAntiforgery antiforgery, AbpAntiForgeryCookieNameProvider antiForgeryCookieNameProvider, IOptions`1<AbpAntiForgeryOptions> options, ILogger`1<AbpValidateAntiforgeryTokenAuthorizationFilter> logger);
    protected virtual bool ShouldValidate(AuthorizationFilterContext context);
    protected virtual bool IsIgnoredHttpMethod(AuthorizationFilterContext context);
}
[AttributeUsageAttribute("68")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpValidateAntiForgeryTokenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Order>k__BackingField;
    public int Order { get; public set; }
    public bool IsReusable { get; }
    [CompilerGeneratedAttribute]
public sealed virtual int get_Order();
    [CompilerGeneratedAttribute]
public void set_Order(int value);
    public sealed virtual bool get_IsReusable();
    [NullableContextAttribute("1")]
public sealed virtual IFilterMetadata CreateInstance(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpValidateAntiforgeryTokenAuthorizationFilter : object {
    private IAntiforgery _antiforgery;
    private AbpAntiForgeryCookieNameProvider _antiForgeryCookieNameProvider;
    private ILogger`1<AbpValidateAntiforgeryTokenAuthorizationFilter> _logger;
    public AbpValidateAntiforgeryTokenAuthorizationFilter(IAntiforgery antiforgery, AbpAntiForgeryCookieNameProvider antiForgeryCookieNameProvider, ILogger`1<AbpValidateAntiforgeryTokenAuthorizationFilter> logger);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.AntiForgery.AbpValidateAntiforgeryTokenAuthorizationFilter/<OnAuthorizationAsync>d__4")]
public sealed virtual Task OnAuthorizationAsync(AuthorizationFilterContext context);
    protected virtual bool ShouldValidate(AuthorizationFilterContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AntiForgery.AspNetCoreAbpAntiForgeryManager : object {
    [CompilerGeneratedAttribute]
private AbpAntiForgeryOptions <Options>k__BackingField;
    private IAntiforgery _antiforgery;
    private IHttpContextAccessor _httpContextAccessor;
    protected AbpAntiForgeryOptions Options { get; }
    protected HttpContext HttpContext { get; }
    public AspNetCoreAbpAntiForgeryManager(IAntiforgery antiforgery, IHttpContextAccessor httpContextAccessor, IOptions`1<AbpAntiForgeryOptions> options);
    [CompilerGeneratedAttribute]
protected AbpAntiForgeryOptions get_Options();
    protected HttpContext get_HttpContext();
    public virtual void SetCookie();
    public virtual string GenerateToken();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.AntiForgery.IAbpAntiForgeryManager {
    public abstract virtual void SetCookie();
    public abstract virtual string GenerateToken();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.AspNetCore.Mvc.ApiDescriptionExtensions : object {
    [ExtensionAttribute]
public static bool IsRemoteService(ApiDescription apiDescriptor);
    [ExtensionAttribute]
public static bool IsIntegrationService(ApiDescription apiDescriptor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AreaAttribute("abp")]
[RemoteServiceAttribute("True")]
[RouteAttribute("api/abp/api-definition")]
public class Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpApiDefinitionController : AbpController {
    protected IApiDescriptionModelProvider ModelProvider;
    public AbpApiDefinitionController(IApiDescriptionModelProvider modelProvider);
    [HttpGetAttribute]
public virtual ApplicationApiDescriptionModel Get(ApplicationApiDescriptionModelRequestDto model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpRemoteServiceApiDescriptionProvider : object {
    private IModelMetadataProvider _modelMetadataProvider;
    private MvcOptions _mvcOptions;
    private AbpRemoteServiceApiDescriptionProviderOptions _options;
    public int Order { get; }
    public AbpRemoteServiceApiDescriptionProvider(IModelMetadataProvider modelMetadataProvider, IOptions`1<MvcOptions> mvcOptionsAccessor, IOptions`1<AbpRemoteServiceApiDescriptionProviderOptions> optionsAccessor);
    public sealed virtual void OnProvidersExecuted(ApiDescriptionProviderContext context);
    public sealed virtual int get_Order();
    public sealed virtual void OnProvidersExecuting(ApiDescriptionProviderContext context);
    protected virtual IEnumerable`1<ApiResponseType> GetApiResponseTypes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApiExploring.AbpRemoteServiceApiDescriptionProviderOptions : object {
    [CompilerGeneratedAttribute]
private HashSet`1<ApiResponseType> <SupportedResponseTypes>k__BackingField;
    public HashSet`1<ApiResponseType> SupportedResponseTypes { get; public set; }
    [CompilerGeneratedAttribute]
public HashSet`1<ApiResponseType> get_SupportedResponseTypes();
    [CompilerGeneratedAttribute]
public void set_SupportedResponseTypes(HashSet`1<ApiResponseType> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService : ApplicationService {
    private AbpLocalizationOptions _localizationOptions;
    private AbpMultiTenancyOptions _multiTenancyOptions;
    private IServiceProvider _serviceProvider;
    private IAbpAuthorizationPolicyProvider _abpAuthorizationPolicyProvider;
    private IPermissionDefinitionManager _permissionDefinitionManager;
    private DefaultAuthorizationPolicyProvider _defaultAuthorizationPolicyProvider;
    private IPermissionChecker _permissionChecker;
    private IAuthorizationService _authorizationService;
    private ICurrentUser _currentUser;
    private ISettingProvider _settingProvider;
    private ISettingDefinitionManager _settingDefinitionManager;
    private IFeatureDefinitionManager _featureDefinitionManager;
    private ILanguageProvider _languageProvider;
    private ITimezoneProvider _timezoneProvider;
    private AbpClockOptions _abpClockOptions;
    private ICachedObjectExtensionsDtoService _cachedObjectExtensionsDtoService;
    private AbpApplicationConfigurationOptions _options;
    public AbpApplicationConfigurationAppService(IOptions`1<AbpLocalizationOptions> localizationOptions, IOptions`1<AbpMultiTenancyOptions> multiTenancyOptions, IServiceProvider serviceProvider, IAbpAuthorizationPolicyProvider abpAuthorizationPolicyProvider, IPermissionDefinitionManager permissionDefinitionManager, DefaultAuthorizationPolicyProvider defaultAuthorizationPolicyProvider, IPermissionChecker permissionChecker, IAuthorizationService authorizationService, ICurrentUser currentUser, ISettingProvider settingProvider, ISettingDefinitionManager settingDefinitionManager, IFeatureDefinitionManager featureDefinitionManager, ILanguageProvider languageProvider, ITimezoneProvider timezoneProvider, IOptions`1<AbpClockOptions> abpClockOptions, ICachedObjectExtensionsDtoService cachedObjectExtensionsDtoService, IOptions`1<AbpApplicationConfigurationOptions> options);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetAsync>d__18")]
public virtual Task`1<ApplicationConfigurationDto> GetAsync(ApplicationConfigurationRequestOptions options);
    protected virtual CurrentTenantDto GetCurrentTenant();
    protected virtual MultiTenancyInfoDto GetMultiTenancy();
    protected virtual CurrentUserDto GetCurrentUser();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetAuthConfigAsync>d__22")]
protected virtual Task`1<ApplicationAuthConfigurationDto> GetAuthConfigAsync();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetLocalizationConfigAsync>d__23")]
protected virtual Task`1<ApplicationLocalizationConfigurationDto> GetLocalizationConfigAsync(ApplicationConfigurationRequestOptions options);
    private static CurrentCultureDto GetCurrentCultureInfo();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetSettingConfigAsync>d__25")]
private Task`1<ApplicationSettingConfigurationDto> GetSettingConfigAsync();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetFeaturesConfigAsync>d__26")]
protected virtual Task`1<ApplicationFeatureConfigurationDto> GetFeaturesConfigAsync();
    protected virtual Task`1<ApplicationGlobalFeatureConfigurationDto> GetGlobalFeaturesConfigAsync();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationAppService/<GetTimingConfigAsync>d__28")]
protected virtual Task`1<TimingDto> GetTimingConfigAsync();
    protected virtual ClockDto GetClockConfig();
}
[AreaAttribute("abp")]
[RemoteServiceAttribute("True")]
[RouteAttribute("api/abp/application-configuration")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController : AbpControllerBase {
    [NullableAttribute("1")]
protected IAbpApplicationConfigurationAppService ApplicationConfigurationAppService;
    [NullableAttribute("1")]
protected IAbpAntiForgeryManager AntiForgeryManager;
    [NullableContextAttribute("1")]
public AbpApplicationConfigurationController(IAbpApplicationConfigurationAppService applicationConfigurationAppService, IAbpAntiForgeryManager antiForgeryManager);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationController/<GetAsync>d__3")]
[HttpGetAttribute]
public virtual Task`1<ApplicationConfigurationDto> GetAsync(ApplicationConfigurationRequestOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AreaAttribute("Abp")]
[RouteAttribute("Abp/ApplicationConfigurationScript")]
[DisableAuditingAttribute]
[RemoteServiceAttribute("False")]
[ApiExplorerSettingsAttribute]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController : AbpController {
    protected AbpApplicationConfigurationAppService ConfigurationAppService;
    protected IJsonSerializer JsonSerializer;
    protected AbpAspNetCoreMvcOptions Options;
    protected IJavascriptMinifier JavascriptMinifier;
    protected IAbpAntiForgeryManager AntiForgeryManager;
    public AbpApplicationConfigurationScriptController(AbpApplicationConfigurationAppService configurationAppService, IJsonSerializer jsonSerializer, IOptions`1<AbpAspNetCoreMvcOptions> options, IJavascriptMinifier javascriptMinifier, IAbpAntiForgeryManager antiForgeryManager);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationConfigurationScriptController/<Get>d__6")]
[HttpGetAttribute]
[ProducesAttribute("application/javascript", "Mono.Cecil.CustomAttributeArgument[]")]
public virtual Task`1<ActionResult> Get();
    protected virtual string CreateAbpExtendScript(ApplicationConfigurationDto config);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationAppService : ApplicationService {
    [CompilerGeneratedAttribute]
private IExternalLocalizationStore <ExternalLocalizationStore>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpLocalizationOptions <LocalizationOptions>k__BackingField;
    protected IExternalLocalizationStore ExternalLocalizationStore { get; }
    protected AbpLocalizationOptions LocalizationOptions { get; }
    public AbpApplicationLocalizationAppService(IExternalLocalizationStore externalLocalizationStore, IOptions`1<AbpLocalizationOptions> localizationOptions);
    [CompilerGeneratedAttribute]
protected IExternalLocalizationStore get_ExternalLocalizationStore();
    [CompilerGeneratedAttribute]
protected AbpLocalizationOptions get_LocalizationOptions();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationAppService/<GetAsync>d__7")]
public virtual Task`1<ApplicationLocalizationDto> GetAsync(ApplicationLocalizationRequestDto input);
}
[AreaAttribute("abp")]
[RemoteServiceAttribute("True")]
[RouteAttribute("api/abp/application-localization")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController : AbpControllerBase {
    [NullableAttribute("1")]
private IAbpApplicationLocalizationAppService _localizationAppService;
    [NullableContextAttribute("1")]
public AbpApplicationLocalizationController(IAbpApplicationLocalizationAppService localizationAppService);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.AbpApplicationLocalizationController/<GetAsync>d__2")]
[HttpGetAttribute]
public virtual Task`1<ApplicationLocalizationDto> GetAsync(ApplicationLocalizationRequestDto input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.CachedObjectExtensionsDtoService : object {
    [CompilerGeneratedAttribute]
private IExtensionPropertyAttributeDtoFactory <ExtensionPropertyAttributeDtoFactory>k__BackingField;
    [NullableAttribute("2")]
protected ObjectExtensionsDto modreq(System.Runtime.CompilerServices.IsVolatile) CachedValue;
    protected object SyncLock;
    protected IExtensionPropertyAttributeDtoFactory ExtensionPropertyAttributeDtoFactory { get; }
    public CachedObjectExtensionsDtoService(IExtensionPropertyAttributeDtoFactory extensionPropertyAttributeDtoFactory);
    [CompilerGeneratedAttribute]
protected IExtensionPropertyAttributeDtoFactory get_ExtensionPropertyAttributeDtoFactory();
    public virtual ObjectExtensionsDto Get();
    protected virtual ObjectExtensionsDto GenerateCacheValue();
    protected virtual ModuleExtensionDto CreateModuleExtensionDto(ModuleExtensionConfiguration moduleConfig);
    protected virtual EntityExtensionDto GetEntityExtensionDto(EntityExtensionConfiguration entityConfig);
    protected virtual ExtensionPropertyDto CreateExtensionPropertyDto(ExtensionPropertyConfiguration propertyConfig);
    protected virtual string GetSimpleTypeName(ExtensionPropertyConfiguration propertyConfig);
    protected virtual LocalizableStringDto CreateDisplayNameDto(ExtensionPropertyConfiguration propertyConfig);
    protected virtual void FillEnums(ObjectExtensionsDto objectExtensionsDto);
    protected virtual ExtensionEnumDto CreateExtensionEnumDto(ExtensionPropertyConfiguration enumProperty);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ExtensionPropertyAttributeDtoFactory : object {
    public virtual ExtensionPropertyAttributeDto Create(Attribute attribute);
    protected virtual string GetSimplifiedName(Attribute attribute);
    protected virtual Dictionary`2<string, object> CreateConfiguration(Attribute attribute);
    protected virtual void AddPropertiesToConfiguration(Attribute attribute, Dictionary`2<string, object> configuration);
    protected virtual bool IgnoreProperty(Attribute attribute, PropertyInfo property);
    protected virtual object GetPropertyValue(Attribute attribute, PropertyInfo property);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.ICachedObjectExtensionsDtoService {
    public abstract virtual ObjectExtensionsDto Get();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.ApplicationConfigurations.ObjectExtending.IExtensionPropertyAttributeDtoFactory {
    public abstract virtual ExtensionPropertyAttributeDto Create(Attribute attribute);
}
public class Volo.Abp.AspNetCore.Mvc.ApplicationModels.AbpMvcActionDescriptorProvider : object {
    public int Order { get; }
    public virtual int get_Order();
    [NullableContextAttribute("1")]
public virtual void OnProvidersExecuting(ActionDescriptorProviderContext context);
    [NullableContextAttribute("1")]
public virtual void OnProvidersExecuted(ActionDescriptorProviderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.AspNetCore.Mvc.ApplicationPartSorter : object {
    public static void Sort(ApplicationPartManager partManager, IModuleContainer moduleContainer);
    private static Dictionary`2<ApplicationPart, List`1<ApplicationPart>> CreateDependencyDictionary(ApplicationPartManager partManager, IModuleContainer moduleContainer);
    private static List`1<ApplicationPart> CreateDependencyList(ApplicationPart applicationPart, ApplicationPartManager partManager, IModuleContainer moduleContainer);
    private static void AddDependencies(List`1<ApplicationPart> list, AssemblyPart assemblyPart, ApplicationPartManager partManager, IModuleContainer moduleContainer);
    private static void AddDependencies(List`1<ApplicationPart> list, CompiledRazorAssemblyPart compiledRazorAssemblyPart, ApplicationPartManager partManager, IModuleContainer moduleContainer);
    private static AssemblyPart[] GetDependedAssemblyParts(ApplicationPartManager partManager, IModuleContainer moduleContainer, AssemblyPart assemblyPart);
    private static CompiledRazorAssemblyPart GetViewsPartOrNull(ApplicationPartManager partManager, ApplicationPart assemblyPart);
    private static AssemblyPart GetOriginalAssemblyPartOrNull(CompiledRazorAssemblyPart compiledRazorAssemblyPart, ApplicationPartManager partManager);
    private static IAbpModuleDescriptor GetModuleDescriptorForAssemblyOrNull(IModuleContainer moduleContainer, Assembly assembly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AspNetCoreApiDescriptionModelProvider : object {
    [CompilerGeneratedAttribute]
private ILogger`1<AspNetCoreApiDescriptionModelProvider> <Logger>k__BackingField;
    private AspNetCoreApiDescriptionModelProviderOptions _options;
    private IApiDescriptionGroupCollectionProvider _descriptionProvider;
    private AbpAspNetCoreMvcOptions _abpAspNetCoreMvcOptions;
    private AbpApiDescriptionModelOptions _modelOptions;
    public ILogger`1<AspNetCoreApiDescriptionModelProvider> Logger { get; public set; }
    public AspNetCoreApiDescriptionModelProvider(IOptions`1<AspNetCoreApiDescriptionModelProviderOptions> options, IApiDescriptionGroupCollectionProvider descriptionProvider, IOptions`1<AbpAspNetCoreMvcOptions> abpAspNetCoreMvcOptions, IOptions`1<AbpApiDescriptionModelOptions> modelOptions);
    [CompilerGeneratedAttribute]
public ILogger`1<AspNetCoreApiDescriptionModelProvider> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<AspNetCoreApiDescriptionModelProvider> value);
    public sealed virtual ApplicationApiDescriptionModel CreateApiModel(ApplicationApiDescriptionModelRequestDto input);
    private void AddApiDescriptionToModel(ApiDescription apiDescription, ApplicationApiDescriptionModel applicationModel, ApplicationApiDescriptionModelRequestDto input);
    private static List`1<string> GetSupportedVersions(Type controllerType, MethodInfo method, ConventionalControllerSetting setting);
    private void AddCustomTypesToModel(ApplicationApiDescriptionModel applicationModel, MethodInfo method);
    private static void AddCustomTypesToModel(ApplicationApiDescriptionModel applicationModel, Type type);
    private static string CalculateTypeName(Type type);
    private void AddParameterDescriptionsToModel(ActionApiDescriptionModel actionModel, MethodInfo method, ApiDescription apiDescription);
    private static bool IsNotFromServicesParameter(ParameterInfo parameterInfo);
    public string GetMethodParamName(ParameterInfo parameterInfo);
    private static string GetRootPath(Type controllerType, ActionDescriptor actionDescriptor, ConventionalControllerSetting setting);
    private string GetRemoteServiceName(Type controllerType, ConventionalControllerSetting setting);
    private string FindGroupName(Type controllerType);
    private ConventionalControllerSetting FindSetting(Type controllerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.AspNetCoreApiDescriptionModelProviderOptions : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<Type, ConventionalControllerSetting, string> <ControllerNameGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<MethodInfo, string> <ActionNameGenerator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<ApiParameterDescription, string> <ApiParameterNameGenerator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`3<Type, ConventionalControllerSetting, string> ControllerNameGenerator { get; public set; }
    public Func`2<MethodInfo, string> ActionNameGenerator { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ApiParameterDescription, string> ApiParameterNameGenerator { get; public set; }
    [CompilerGeneratedAttribute]
public Func`3<Type, ConventionalControllerSetting, string> get_ControllerNameGenerator();
    [CompilerGeneratedAttribute]
public void set_ControllerNameGenerator(Func`3<Type, ConventionalControllerSetting, string> value);
    [CompilerGeneratedAttribute]
public Func`2<MethodInfo, string> get_ActionNameGenerator();
    [CompilerGeneratedAttribute]
public void set_ActionNameGenerator(Func`2<MethodInfo, string> value);
    [CompilerGeneratedAttribute]
public Func`2<ApiParameterDescription, string> get_ApiParameterNameGenerator();
    [CompilerGeneratedAttribute]
public void set_ApiParameterNameGenerator(Func`2<ApiParameterDescription, string> value);
}
public class Volo.Abp.AspNetCore.Mvc.Auditing.AbpAuditActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Auditing.AbpAuditActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
    [NullableContextAttribute("2")]
private bool ShouldSaveAudit(ActionExecutingContext context, AuditLogInfo& auditLog, AuditLogActionInfo& auditLogAction);
    [NullableContextAttribute("1")]
private static bool GetDefaultAuditBehavior(AbpAuditingOptions abpAuditingOptions, ActionDescriptor actionDescriptor);
}
public class Volo.Abp.AspNetCore.Mvc.Auditing.AbpAuditPageFilter : object {
    [NullableContextAttribute("1")]
public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Auditing.AbpAuditPageFilter/<OnPageHandlerExecutionAsync>d__1")]
public sealed virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
    [NullableContextAttribute("2")]
private bool ShouldSaveAudit(PageHandlerExecutingContext context, AuditLogInfo& auditLog, AuditLogActionInfo& auditLogAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.AspNetCore.Mvc.Authentication.ChallengeAccountController : AbpController {
    [CompilerGeneratedAttribute]
private String[] <ChallengeAuthenticationSchemas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AuthenticationType>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <ForbidSchemes>k__BackingField;
    protected String[] ChallengeAuthenticationSchemas { get; }
    protected string AuthenticationType { get; }
    protected String[] ForbidSchemes { get; }
    protected ChallengeAccountController(String[] challengeAuthenticationSchemas);
    [CompilerGeneratedAttribute]
protected String[] get_ChallengeAuthenticationSchemas();
    [CompilerGeneratedAttribute]
protected string get_AuthenticationType();
    [CompilerGeneratedAttribute]
protected String[] get_ForbidSchemes();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Authentication.ChallengeAccountController/<LoginAsync>d__10")]
[HttpGetAttribute]
public virtual Task`1<ActionResult> LoginAsync(string returnUrl, string returnUrlHash);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Authentication.ChallengeAccountController/<LogoutAsync>d__11")]
[HttpGetAttribute]
public virtual Task`1<ActionResult> LogoutAsync(string returnUrl, string returnUrlHash);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Authentication.ChallengeAccountController/<FrontChannelLogoutAsync>d__12")]
[HttpGetAttribute]
public virtual Task`1<IActionResult> FrontChannelLogoutAsync(string sid);
    [HttpGetAttribute]
public virtual Task`1<IActionResult> AccessDeniedAsync();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Authentication.ChallengeAccountController/<ChallengeAsync>d__14")]
[HttpGetAttribute]
public virtual Task`1<ActionResult> ChallengeAsync(string returnUrl, string returnUrlHash);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ContentFormatters.AbpRemoteStreamContentModelBinder`1 : object {
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ContentFormatters.AbpRemoteStreamContentModelBinder`1/<BindModelAsync>d__0")]
public sealed virtual Task BindModelAsync(ModelBindingContext bindingContext);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ContentFormatters.AbpRemoteStreamContentModelBinder`1/<GetFormFilesAsync>d__1")]
private Task GetFormFilesAsync(string modelName, ModelBindingContext bindingContext, ICollection`1<TRemoteStreamContent> postedFiles);
    private static ICollection`1<T> GetCompatibleCollection(ModelBindingContext bindingContext);
}
public class Volo.Abp.AspNetCore.Mvc.ContentFormatters.AbpRemoteStreamContentModelBinderProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IModelBinder GetBinder(ModelBinderProviderContext context);
}
public class Volo.Abp.AspNetCore.Mvc.ContentFormatters.RemoteStreamContentOutputFormatter : OutputFormatter {
    [NullableContextAttribute("2")]
protected virtual bool CanWriteType(Type type);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ContentFormatters.RemoteStreamContentOutputFormatter/<WriteResponseBodyAsync>d__2")]
public virtual Task WriteResponseBodyAsync(OutputFormatterWriteContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.AbpConventionalApiControllerSpecification : object {
    private AbpAspNetCoreMvcOptions _options;
    public AbpConventionalApiControllerSpecification(IOptions`1<AbpAspNetCoreMvcOptions> options);
    public sealed virtual bool IsSatisfiedBy(ControllerModel controller);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.AbpConventionalControllerFeatureProvider : ControllerFeatureProvider {
    private IAbpApplication _application;
    public AbpConventionalControllerFeatureProvider(IAbpApplication application);
    protected virtual bool IsController(TypeInfo typeInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.AbpConventionalControllerOptions : object {
    [CompilerGeneratedAttribute]
private ConventionalControllerSettingList <ConventionalControllerSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Type> <FormBodyBindingIgnoredTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseV3UrlStyle>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <IgnoredUrlSuffixesInControllerNames>k__BackingField;
    public ConventionalControllerSettingList ConventionalControllerSettings { get; }
    public List`1<Type> FormBodyBindingIgnoredTypes { get; }
    public bool UseV3UrlStyle { get; public set; }
    public String[] IgnoredUrlSuffixesInControllerNames { get; public set; }
    [CompilerGeneratedAttribute]
public ConventionalControllerSettingList get_ConventionalControllerSettings();
    [CompilerGeneratedAttribute]
public List`1<Type> get_FormBodyBindingIgnoredTypes();
    [CompilerGeneratedAttribute]
public bool get_UseV3UrlStyle();
    [CompilerGeneratedAttribute]
public void set_UseV3UrlStyle(bool value);
    [CompilerGeneratedAttribute]
public String[] get_IgnoredUrlSuffixesInControllerNames();
    [CompilerGeneratedAttribute]
public void set_IgnoredUrlSuffixesInControllerNames(String[] value);
    public AbpConventionalControllerOptions Create(Assembly assembly, Action`1<ConventionalControllerSetting> optionsAction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.AbpServiceConvention : object {
    [CompilerGeneratedAttribute]
private ILogger`1<AbpServiceConvention> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpAspNetCoreMvcOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IConventionalRouteBuilder <ConventionalRouteBuilder>k__BackingField;
    public ILogger`1<AbpServiceConvention> Logger { get; public set; }
    protected AbpAspNetCoreMvcOptions Options { get; }
    protected IConventionalRouteBuilder ConventionalRouteBuilder { get; }
    public AbpServiceConvention(IOptions`1<AbpAspNetCoreMvcOptions> options, IConventionalRouteBuilder conventionalRouteBuilder);
    [CompilerGeneratedAttribute]
public ILogger`1<AbpServiceConvention> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<AbpServiceConvention> value);
    [CompilerGeneratedAttribute]
protected AbpAspNetCoreMvcOptions get_Options();
    [CompilerGeneratedAttribute]
protected IConventionalRouteBuilder get_ConventionalRouteBuilder();
    public sealed virtual void Apply(ApplicationModel application);
    protected virtual void ApplyForControllers(ApplicationModel application);
    protected virtual void RemoveIntegrationControllersIfNotExposed(ApplicationModel application);
    protected virtual IList`1<ControllerModel> GetControllers(ApplicationModel application);
    protected virtual void RemoveDuplicateControllers(ApplicationModel application);
    protected virtual void ConfigureRemoteService(ControllerModel controller, ConventionalControllerSetting configuration);
    protected virtual void ConfigureParameters(ControllerModel controller);
    protected virtual bool CanUseFormBodyBinding(ActionModel action, ParameterModel parameter);
    protected virtual void ConfigureApiExplorer(ControllerModel controller);
    protected virtual void ConfigureApiExplorer(ActionModel action);
    protected virtual void ConfigureSelector(ControllerModel controller, ConventionalControllerSetting configuration);
    protected virtual void ConfigureSelector(string rootPath, string controllerName, ActionModel action, ConventionalControllerSetting configuration);
    protected virtual void AddAbpServiceSelector(string rootPath, string controllerName, ActionModel action, ConventionalControllerSetting configuration);
    protected virtual string SelectHttpMethod(ActionModel action, ConventionalControllerSetting configuration);
    protected virtual void NormalizeSelectorRoutes(string rootPath, string controllerName, ActionModel action, ConventionalControllerSetting configuration);
    protected virtual string GetRootPathOrDefault(Type controllerType);
    protected virtual ConventionalControllerSetting GetControllerSettingOrNull(Type controllerType);
    protected virtual AttributeRouteModel CreateAbpServiceAttributeRouteModel(string rootPath, string controllerName, ActionModel action, string httpMethod, ConventionalControllerSetting configuration);
    protected virtual void RemoveEmptySelectors(IList`1<SelectorModel> selectors);
    protected virtual bool IsEmptySelector(SelectorModel selector);
    protected virtual bool ImplementsRemoteServiceInterface(Type controllerType);
    protected virtual bool IsVisibleRemoteService(Type controllerType);
    protected virtual Nullable`1<bool> IsVisibleRemoteServiceMethod(MethodInfo method);
    protected virtual bool IsGlobalFeatureEnabled(Type controllerType);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <RemoveDuplicateControllers>b__15_0(ControllerModel cm);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DisableConventionalRegistrationAttribute]
public class Volo.Abp.AspNetCore.Mvc.Conventions.AbpServiceConventionWrapper : object {
    private Lazy`1<IAbpServiceConvention> _convention;
    public AbpServiceConventionWrapper(IServiceCollection services);
    public sealed virtual void Apply(ApplicationModel application);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.ConventionalControllerSetting : object {
    [CompilerGeneratedAttribute]
private Assembly <Assembly>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<Type> <ControllerTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseV3UrlStyle>k__BackingField;
    private string _rootPath;
    private string _remoteServiceName;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<Type, bool> <TypePredicate>k__BackingField;
    [CompilerGeneratedAttribute]
private ApplicationServiceTypes <ApplicationServiceTypes>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<ControllerModel> <ControllerModelConfigurer>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<UrlControllerNameNormalizerContext, string> <UrlControllerNameNormalizer>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<UrlActionNameNormalizerContext, string> <UrlActionNameNormalizer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ApiVersion> <ApiVersions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<MvcApiVersioningOptions> <MvcApiVersioningConfigurer>k__BackingField;
    public Assembly Assembly { get; }
    internal HashSet`1<Type> ControllerTypes { get; }
    public Nullable`1<bool> UseV3UrlStyle { get; public set; }
    public string RootPath { get; public set; }
    public string RemoteServiceName { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<Type, bool> TypePredicate { get; public set; }
    public ApplicationServiceTypes ApplicationServiceTypes { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ControllerModel> ControllerModelConfigurer { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<UrlControllerNameNormalizerContext, string> UrlControllerNameNormalizer { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<UrlActionNameNormalizerContext, string> UrlActionNameNormalizer { get; public set; }
    public List`1<ApiVersion> ApiVersions { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<MvcApiVersioningOptions> MvcApiVersioningConfigurer { get; public set; }
    public ConventionalControllerSetting(Assembly assembly, string rootPath, string remoteServiceName);
    [CompilerGeneratedAttribute]
public Assembly get_Assembly();
    [CompilerGeneratedAttribute]
internal HashSet`1<Type> get_ControllerTypes();
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseV3UrlStyle();
    [CompilerGeneratedAttribute]
public void set_UseV3UrlStyle(Nullable`1<bool> value);
    public string get_RootPath();
    public void set_RootPath(string value);
    public string get_RemoteServiceName();
    public void set_RemoteServiceName(string value);
    [CompilerGeneratedAttribute]
public Func`2<Type, bool> get_TypePredicate();
    [CompilerGeneratedAttribute]
public void set_TypePredicate(Func`2<Type, bool> value);
    [CompilerGeneratedAttribute]
public ApplicationServiceTypes get_ApplicationServiceTypes();
    [CompilerGeneratedAttribute]
public void set_ApplicationServiceTypes(ApplicationServiceTypes value);
    [CompilerGeneratedAttribute]
public Action`1<ControllerModel> get_ControllerModelConfigurer();
    [CompilerGeneratedAttribute]
public void set_ControllerModelConfigurer(Action`1<ControllerModel> value);
    [CompilerGeneratedAttribute]
public Func`2<UrlControllerNameNormalizerContext, string> get_UrlControllerNameNormalizer();
    [CompilerGeneratedAttribute]
public void set_UrlControllerNameNormalizer(Func`2<UrlControllerNameNormalizerContext, string> value);
    [CompilerGeneratedAttribute]
public Func`2<UrlActionNameNormalizerContext, string> get_UrlActionNameNormalizer();
    [CompilerGeneratedAttribute]
public void set_UrlActionNameNormalizer(Func`2<UrlActionNameNormalizerContext, string> value);
    [CompilerGeneratedAttribute]
public List`1<ApiVersion> get_ApiVersions();
    [CompilerGeneratedAttribute]
public Action`1<MvcApiVersioningOptions> get_MvcApiVersioningConfigurer();
    [CompilerGeneratedAttribute]
public void set_MvcApiVersioningConfigurer(Action`1<MvcApiVersioningOptions> value);
    public void Initialize();
    public IReadOnlyList`1<Type> GetControllerTypes();
    private static bool IsRemoteService(Type type);
    private bool IsPreferredApplicationServiceType(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.ConventionalControllerSettingList : List`1<ConventionalControllerSetting> {
    public ConventionalControllerSetting GetSettingOrNull(Type controllerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.ConventionalRouteBuilder : object {
    [CompilerGeneratedAttribute]
private AbpConventionalControllerOptions <Options>k__BackingField;
    protected AbpConventionalControllerOptions Options { get; }
    public ConventionalRouteBuilder(IOptions`1<AbpConventionalControllerOptions> options);
    [CompilerGeneratedAttribute]
protected AbpConventionalControllerOptions get_Options();
    public virtual string Build(string rootPath, string controllerName, ActionModel action, string httpMethod, ConventionalControllerSetting configuration);
    protected virtual string GetApiRoutePrefix(ActionModel actionModel, ConventionalControllerSetting configuration);
    protected virtual string NormalizeUrlActionName(string rootPath, string controllerName, ActionModel action, string httpMethod, ConventionalControllerSetting configuration);
    protected virtual string NormalizeUrlControllerName(string rootPath, string controllerName, ActionModel action, string httpMethod, ConventionalControllerSetting configuration);
    protected virtual string NormalizeControllerNameCase(string controllerName, ConventionalControllerSetting configuration);
    protected virtual string NormalizeActionNameCase(string actionName, ConventionalControllerSetting configuration);
    protected virtual string NormalizeIdPropertyNameCase(PropertyInfo property, ConventionalControllerSetting configuration);
    protected virtual string NormalizeSecondaryIdNameCase(ParameterModel secondaryId, ConventionalControllerSetting configuration);
}
public interface Volo.Abp.AspNetCore.Mvc.Conventions.IAbpServiceConvention {
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.Conventions.IConventionalRouteBuilder {
    public abstract virtual string Build(string rootPath, string controllerName, ActionModel action, string httpMethod, ConventionalControllerSetting configuration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.UrlActionNameNormalizerContext : object {
    [CompilerGeneratedAttribute]
private string <RootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ControllerName>k__BackingField;
    [CompilerGeneratedAttribute]
private ActionModel <Action>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ActionNameInUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpMethod>k__BackingField;
    public string RootPath { get; }
    public string ControllerName { get; }
    public ActionModel Action { get; }
    public string ActionNameInUrl { get; }
    public string HttpMethod { get; }
    public UrlActionNameNormalizerContext(string rootPath, string controllerName, ActionModel action, string actionNameInUrl, string httpMethod);
    [CompilerGeneratedAttribute]
public string get_RootPath();
    [CompilerGeneratedAttribute]
public string get_ControllerName();
    [CompilerGeneratedAttribute]
public ActionModel get_Action();
    [CompilerGeneratedAttribute]
public string get_ActionNameInUrl();
    [CompilerGeneratedAttribute]
public string get_HttpMethod();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Conventions.UrlControllerNameNormalizerContext : object {
    [CompilerGeneratedAttribute]
private string <RootPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ControllerName>k__BackingField;
    public string RootPath { get; }
    public string ControllerName { get; }
    public UrlControllerNameNormalizerContext(string rootPath, string controllerName);
    [CompilerGeneratedAttribute]
public string get_RootPath();
    [CompilerGeneratedAttribute]
public string get_ControllerName();
}
public class Volo.Abp.AspNetCore.Mvc.DataAnnotations.AbpValidationAttributeAdapterProvider : object {
    [NullableAttribute("1")]
private ValidationAttributeAdapterProvider _defaultAdapter;
    [NullableContextAttribute("1")]
public AbpValidationAttributeAdapterProvider(ValidationAttributeAdapterProvider defaultAdapter);
    [NullableContextAttribute("2")]
public virtual IAttributeAdapter GetAttributeAdapter(ValidationAttribute attribute, IStringLocalizer stringLocalizer);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.DataAnnotations.DynamicMaxLengthAttributeAdapter : AttributeAdapterBase`1<DynamicMaxLengthAttribute> {
    private string _max;
    public DynamicMaxLengthAttributeAdapter(DynamicMaxLengthAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
    public virtual void AddValidation(ClientModelValidationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.DataAnnotations.DynamicRangeAttributeAdapter : AttributeAdapterBase`1<DynamicRangeAttribute> {
    private string _max;
    private string _min;
    public DynamicRangeAttributeAdapter(DynamicRangeAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.DataAnnotations.DynamicStringLengthAttributeAdapter : AttributeAdapterBase`1<DynamicStringLengthAttribute> {
    private string _max;
    private string _min;
    public DynamicStringLengthAttributeAdapter(DynamicStringLengthAttribute attribute, IStringLocalizer stringLocalizer);
    public virtual void AddValidation(ClientModelValidationContext context);
    public virtual string GetErrorMessage(ModelValidationContextBase validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.DependencyInjection.AbpAspNetCoreMvcConventionalRegistrar : DefaultConventionalRegistrar {
    protected virtual bool IsConventionalRegistrationDisabled(Type type);
    protected virtual bool IsMvcService(Type type);
    private static bool IsPageModel(Type type);
    private static bool IsController(Type type);
    private static bool IsViewComponent(Type type);
    protected virtual Nullable`1<ServiceLifetime> GetDefaultLifeTimeOrNull(Type type);
}
public class Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionFilter/<OnExceptionAsync>d__0")]
public virtual Task OnExceptionAsync(ExceptionContext context);
    [NullableContextAttribute("1")]
protected virtual bool ShouldHandleException(ExceptionContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionFilter/<HandleAndWrapException>d__2")]
protected virtual Task HandleAndWrapException(ExceptionContext context);
    [NullableContextAttribute("1")]
protected virtual void LogException(ExceptionContext context, RemoteServiceErrorInfo& remoteServiceErrorInfo);
}
public class Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionPageFilter : object {
    [NullableContextAttribute("1")]
public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionPageFilter/<OnPageHandlerExecutionAsync>d__1")]
public virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
    [NullableContextAttribute("1")]
protected virtual bool ShouldHandleException(PageHandlerExecutingContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ExceptionHandling.AbpExceptionPageFilter/<HandleAndWrapException>d__3")]
protected virtual Task HandleAndWrapException(PageHandlerExecutedContext context);
}
public class Volo.Abp.AspNetCore.Mvc.Features.AbpFeatureActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Features.AbpFeatureActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
public class Volo.Abp.AspNetCore.Mvc.Features.AbpFeaturePageFilter : object {
    [NullableContextAttribute("1")]
public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Features.AbpFeaturePageFilter/<OnPageHandlerExecutionAsync>d__1")]
public sealed virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
}
public class Volo.Abp.AspNetCore.Mvc.GlobalFeatures.GlobalFeatureActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.GlobalFeatures.GlobalFeatureActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
public class Volo.Abp.AspNetCore.Mvc.GlobalFeatures.GlobalFeaturePageFilter : object {
    [NullableContextAttribute("1")]
public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.GlobalFeatures.GlobalFeaturePageFilter/<OnPageHandlerExecutionAsync>d__1")]
public sealed virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Infrastructure.AbpMemoryPoolHttpResponseStreamWriterFactory : object {
    public static int DefaultBufferSize;
    private ArrayPool`1<byte> _bytePool;
    private ArrayPool`1<char> _charPool;
    public AbpMemoryPoolHttpResponseStreamWriterFactory(ArrayPool`1<byte> bytePool, ArrayPool`1<char> charPool);
    public sealed virtual TextWriter CreateWriter(Stream stream, Encoding encoding);
}
[ExtensionAttribute]
public static class Volo.Abp.AspNetCore.Mvc.Json.MvcCoreBuilderExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static IMvcCoreBuilder AddAbpJson(IMvcCoreBuilder builder);
}
public class Volo.Abp.AspNetCore.Mvc.Libs.AbpMvcLibsOptions : object {
    [CompilerGeneratedAttribute]
private bool <CheckLibs>k__BackingField;
    public bool CheckLibs { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_CheckLibs();
    [CompilerGeneratedAttribute]
public void set_CheckLibs(bool value);
}
public class Volo.Abp.AspNetCore.Mvc.Libs.AbpMvcLibsService : object {
    [NullableAttribute("2")]
private Task`1<bool> _checkLibsTask;
    [NullableContextAttribute("1")]
public virtual void CheckLibs(ApplicationInitializationContext context);
    [NullableContextAttribute("1")]
protected virtual Task`1<bool> CheckLibsAsyncOnceAsync(HttpContext httpContext);
    [NullableContextAttribute("1")]
protected virtual Task`1<bool> CheckLibsAsync(HttpContext httpContext);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Libs.AbpMvcLibsService/<<CheckLibs>b__1_0>d")]
[CompilerGeneratedAttribute]
private Task <CheckLibs>b__1_0(HttpContext httpContext, RequestDelegate next);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.Libs.IAbpMvcLibsService {
    public abstract virtual void CheckLibs(ApplicationInitializationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AreaAttribute("Abp")]
[RouteAttribute("Abp/ApplicationLocalizationScript")]
[DisableAuditingAttribute]
[RemoteServiceAttribute("False")]
[ApiExplorerSettingsAttribute]
public class Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController : AbpController {
    [CompilerGeneratedAttribute]
private AbpApplicationLocalizationAppService <LocalizationAppService>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpAspNetCoreMvcOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IJsonSerializer <JsonSerializer>k__BackingField;
    [CompilerGeneratedAttribute]
private IJavascriptMinifier <JavascriptMinifier>k__BackingField;
    protected AbpApplicationLocalizationAppService LocalizationAppService { get; }
    protected AbpAspNetCoreMvcOptions Options { get; }
    protected IJsonSerializer JsonSerializer { get; }
    protected IJavascriptMinifier JavascriptMinifier { get; }
    public AbpApplicationLocalizationScriptController(AbpApplicationLocalizationAppService localizationAppService, IOptions`1<AbpAspNetCoreMvcOptions> options, IJsonSerializer jsonSerializer, IJavascriptMinifier javascriptMinifier);
    [CompilerGeneratedAttribute]
protected AbpApplicationLocalizationAppService get_LocalizationAppService();
    [CompilerGeneratedAttribute]
protected AbpAspNetCoreMvcOptions get_Options();
    [CompilerGeneratedAttribute]
protected IJsonSerializer get_JsonSerializer();
    [CompilerGeneratedAttribute]
protected IJavascriptMinifier get_JavascriptMinifier();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Localization.AbpApplicationLocalizationScriptController/<GetAsync>d__13")]
[HttpGetAttribute]
[ProducesAttribute("application/javascript", "Mono.Cecil.CustomAttributeArgument[]")]
public virtual Task`1<ActionResult> GetAsync(ApplicationLocalizationRequestDto input);
    protected virtual string CreateScript(ApplicationLocalizationDto localizationDto);
}
public class Volo.Abp.AspNetCore.Mvc.Localization.AbpAspNetCoreMvcQueryStringCultureReplacement : object {
    [NullableContextAttribute("1")]
public virtual Task ReplaceAsync(QueryStringCultureReplacementContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AreaAttribute("Abp")]
[RouteAttribute("Abp/Languages/[action]")]
[DisableAuditingAttribute]
[RemoteServiceAttribute("False")]
[ApiExplorerSettingsAttribute]
public class Volo.Abp.AspNetCore.Mvc.Localization.AbpLanguagesController : AbpController {
    [CompilerGeneratedAttribute]
private IQueryStringCultureReplacement <QueryStringCultureReplacement>k__BackingField;
    protected IQueryStringCultureReplacement QueryStringCultureReplacement { get; }
    public AbpLanguagesController(IQueryStringCultureReplacement queryStringCultureReplacement);
    [CompilerGeneratedAttribute]
protected IQueryStringCultureReplacement get_QueryStringCultureReplacement();
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Localization.AbpLanguagesController/<Switch>d__4")]
[HttpGetAttribute]
public virtual Task`1<IActionResult> Switch(string culture, string uiCulture, string returnUrl);
    protected virtual string GetRedirectUrl(string returnUrl);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
public class Volo.Abp.AspNetCore.Mvc.Localization.AbpMvcAttributeValidationResultProvider : DefaultAttributeValidationResultProvider {
    private AbpMvcDataAnnotationsLocalizationOptions _abpMvcDataAnnotationsLocalizationOptions;
    private IStringLocalizerFactory _stringLocalizerFactory;
    public AbpMvcAttributeValidationResultProvider(IOptions`1<AbpMvcDataAnnotationsLocalizationOptions> abpMvcDataAnnotationsLocalizationOptions, IStringLocalizerFactory stringLocalizerFactory);
    public virtual ValidationResult GetOrDefault(ValidationAttribute validationAttribute, object validatingObject, ValidationContext validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Localization.AbpMvcDataAnnotationsLocalizationOptions : object {
    [CompilerGeneratedAttribute]
private IDictionary`2<Assembly, Type> <AssemblyResources>k__BackingField;
    public IDictionary`2<Assembly, Type> AssemblyResources { get; }
    [CompilerGeneratedAttribute]
public IDictionary`2<Assembly, Type> get_AssemblyResources();
    public void AddAssemblyResource(Type resourceType, Assembly[] assemblies);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.Localization.IQueryStringCultureReplacement {
    public abstract virtual Task ReplaceAsync(QueryStringCultureReplacementContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Localization.QueryStringCultureReplacementContext : object {
    [CompilerGeneratedAttribute]
private HttpContext <HttpContext>k__BackingField;
    [CompilerGeneratedAttribute]
private RequestCulture <RequestCulture>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ReturnUrl>k__BackingField;
    public HttpContext HttpContext { get; }
    public RequestCulture RequestCulture { get; }
    public string ReturnUrl { get; public set; }
    public QueryStringCultureReplacementContext(HttpContext httpContext, RequestCulture requestCulture, string returnUrl);
    [CompilerGeneratedAttribute]
public HttpContext get_HttpContext();
    [CompilerGeneratedAttribute]
public RequestCulture get_RequestCulture();
    [CompilerGeneratedAttribute]
public string get_ReturnUrl();
    [CompilerGeneratedAttribute]
public void set_ReturnUrl(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ModelBinding.AbpDateTimeModelBinder : object {
    private DateTimeModelBinder _dateTimeModelBinder;
    private IClock _clock;
    public AbpDateTimeModelBinder(IClock clock, DateTimeModelBinder dateTimeModelBinder);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.ModelBinding.AbpDateTimeModelBinder/<BindModelAsync>d__3")]
public sealed virtual Task BindModelAsync(ModelBindingContext bindingContext);
}
public class Volo.Abp.AspNetCore.Mvc.ModelBinding.AbpDateTimeModelBinderProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IModelBinder GetBinder(ModelBinderProviderContext context);
    [NullableContextAttribute("1")]
protected virtual AbpDateTimeModelBinder CreateAbpDateTimeModelBinder(ModelBinderProviderContext context);
}
public class Volo.Abp.AspNetCore.Mvc.ModelBinding.AbpExtraPropertiesDictionaryModelBinderProvider : object {
    [NullableContextAttribute("1")]
public sealed virtual IModelBinder GetBinder(ModelBinderProviderContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ModelBinding.AbpExtraPropertyModelBinder : object {
    [CompilerGeneratedAttribute]
private Type <ExtensibleObjectType>k__BackingField;
    public Type ExtensibleObjectType { get; }
    public AbpExtraPropertyModelBinder(Type extensibleObjectType);
    [CompilerGeneratedAttribute]
public Type get_ExtensibleObjectType();
    public virtual Task BindModelAsync(ModelBindingContext bindingContext);
    [NullableContextAttribute("2")]
protected virtual object ConvertStringToPropertyType(ModelBindingContext bindingContext, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.AspNetCore.Mvc.ModelBinding.ExtraPropertyBindingHelper : object {
    public static string ExtractExtraPropertyName(string expression);
    public static string ExtractContainerName(string expression);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
[ExposeServicesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.ModelBinding.Metadata.AbpModelMetadataProvider : DefaultModelMetadataProvider {
    public AbpModelMetadataProvider(ICompositeMetadataDetailsProvider detailsProvider);
    public AbpModelMetadataProvider(ICompositeMetadataDetailsProvider detailsProvider, IOptions`1<MvcOptions> optionsAccessor);
    protected virtual DefaultMetadataDetails[] CreatePropertyDetails(ModelMetadataIdentity key);
    private void NormalizeMetadataDetail(DefaultMetadataDetails detail);
    protected virtual void NormalizeValidationAttribute(ValidationAttribute validationAttribute);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AreaAttribute("Abp")]
[RouteAttribute("Abp/ServiceProxyScript")]
[DisableAuditingAttribute]
[RemoteServiceAttribute("False")]
[ApiExplorerSettingsAttribute]
public class Volo.Abp.AspNetCore.Mvc.ProxyScripting.AbpServiceProxyScriptController : AbpController {
    protected IProxyScriptManager ProxyScriptManager;
    protected AbpAspNetCoreMvcOptions Options;
    protected IJavascriptMinifier JavascriptMinifier;
    public AbpServiceProxyScriptController(IProxyScriptManager proxyScriptManager, IOptions`1<AbpAspNetCoreMvcOptions> options, IJavascriptMinifier javascriptMinifier);
    [HttpGetAttribute]
[ProducesAttribute("application/javascript", "Mono.Cecil.CustomAttributeArgument[]")]
public virtual ActionResult GetAll(ServiceProxyGenerationModel model);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.ProxyScripting.ServiceProxyGenerationModel : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCache>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Modules>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Controllers>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Actions>k__BackingField;
    public string Type { get; public set; }
    public bool UseCache { get; public set; }
    public string Modules { get; public set; }
    public string Controllers { get; public set; }
    public string Actions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [CompilerGeneratedAttribute]
public bool get_UseCache();
    [CompilerGeneratedAttribute]
public void set_UseCache(bool value);
    [CompilerGeneratedAttribute]
public string get_Modules();
    [CompilerGeneratedAttribute]
public void set_Modules(string value);
    [CompilerGeneratedAttribute]
public string get_Controllers();
    [CompilerGeneratedAttribute]
public void set_Controllers(string value);
    [CompilerGeneratedAttribute]
public string get_Actions();
    [CompilerGeneratedAttribute]
public void set_Actions(string value);
    public void Normalize();
    [NullableContextAttribute("1")]
public ProxyScriptingModel CreateOptions();
}
public class Volo.Abp.AspNetCore.Mvc.Response.AbpNoContentActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Response.AbpNoContentActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
public class Volo.Abp.AspNetCore.Mvc.Uow.AbpUowActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
    [NullableContextAttribute("1")]
private AbpUnitOfWorkOptions CreateOptions(ActionExecutingContext context, UnitOfWorkAttribute unitOfWorkAttribute);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowActionFilter/<RollbackAsync>d__2")]
private Task RollbackAsync(ActionExecutingContext context, IUnitOfWorkManager unitOfWorkManager);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowActionFilter/<SaveChangesAsync>d__3")]
private Task SaveChangesAsync(ActionExecutingContext context, IUnitOfWorkManager unitOfWorkManager);
    [NullableContextAttribute("1")]
private static bool Succeed(ActionExecutedContext result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.AspNetCore.Mvc.Uow.AbpUowPageFilter : object {
    public sealed virtual Task OnPageHandlerSelectionAsync(PageHandlerSelectedContext context);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowPageFilter/<OnPageHandlerExecutionAsync>d__1")]
public sealed virtual Task OnPageHandlerExecutionAsync(PageHandlerExecutingContext context, PageHandlerExecutionDelegate next);
    private AbpUnitOfWorkOptions CreateOptions(PageHandlerExecutingContext context, UnitOfWorkAttribute unitOfWorkAttribute);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowPageFilter/<RollbackAsync>d__3")]
private Task RollbackAsync(PageHandlerExecutingContext context, IUnitOfWorkManager unitOfWorkManager);
    [AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Uow.AbpUowPageFilter/<SaveChangesAsync>d__4")]
private Task SaveChangesAsync(PageHandlerExecutingContext context, IUnitOfWorkManager unitOfWorkManager);
    private static bool Succeed(PageHandlerExecutedContext result);
}
internal static class Volo.Abp.AspNetCore.Mvc.Utils.ArrayMatcher : object {
    [NullableContextAttribute("1")]
public static T[] Match(T[] sourceArray, T[] destinationArray);
}
public class Volo.Abp.AspNetCore.Mvc.Validation.AbpValidationActionFilter : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.AspNetCore.Mvc.Validation.AbpValidationActionFilter/<OnActionExecutionAsync>d__0")]
public sealed virtual Task OnActionExecutionAsync(ActionExecutingContext context, ActionExecutionDelegate next);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.AspNetCore.Mvc.Validation.IModelStateValidator {
    public abstract virtual void Validate(ModelStateDictionary modelState);
    public abstract virtual void AddErrors(IAbpValidationResult validationResult, ModelStateDictionary modelState);
}
public class Volo.Abp.AspNetCore.Mvc.Validation.ModelStateValidator : object {
    [NullableContextAttribute("1")]
public virtual void Validate(ModelStateDictionary modelState);
    [NullableContextAttribute("1")]
public virtual void AddErrors(IAbpValidationResult validationResult, ModelStateDictionary modelState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.AspNetCore.Mvc.Validation.ValidationAttributeHelper : object {
    private static PropertyInfo ValidationAttributeErrorMessageStringProperty;
    private static PropertyInfo ValidationAttributeCustomErrorMessageSetProperty;
    private static ValidationAttributeHelper();
    public static void SetDefaultErrorMessage(ValidationAttribute validationAttribute);
}
public class Volo.Abp.AspNetCore.Mvc.Versioning.HttpContextRequestedApiVersion : object {
    [NullableAttribute("1")]
private IHttpContextAccessor _httpContextAccessor;
    [NullableAttribute("2")]
public string Current { get; }
    [NullableContextAttribute("1")]
public HttpContextRequestedApiVersion(IHttpContextAccessor httpContextAccessor);
    [NullableContextAttribute("2")]
public sealed virtual string get_Current();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
[ExposeServicesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.AspNetCore.Mvc.ViewFeatures.AbpValidationHtmlAttributeProvider : DefaultValidationHtmlAttributeProvider {
    private IModelMetadataProvider _metadataProvider;
    private IStringLocalizerFactory _stringLocalizerFactory;
    private IStringLocalizer`1<AbpValidationResource> _validationStringLocalizer;
    private IValidationAttributeAdapterProvider _validationAttributeAdapterProvider;
    public AbpValidationHtmlAttributeProvider(IOptions`1<MvcViewOptions> optionsAccessor, IModelMetadataProvider metadataProvider, ClientValidatorCache clientValidatorCache, IValidationAttributeAdapterProvider validationAttributeAdapterProvider, IStringLocalizerFactory stringLocalizerFactory, IStringLocalizer`1<AbpValidationResource> validationStringLocalizer);
    public virtual void AddValidationAttributes(ViewContext viewContext, ModelExplorer modelExplorer, IDictionary`2<string, string> attributes);
    protected virtual void AddExtraPropertyValidationsAttributes(ViewContext viewContext, ModelExplorer modelExplorer, IDictionary`2<string, string> attributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.ObjectExtending.ObjectExtensionPropertyInfoAspNetCoreMvcExtensions : object {
    private static Type[] DateTimeTypes;
    private static ObjectExtensionPropertyInfoAspNetCoreMvcExtensions();
    [ExtensionAttribute]
public static bool IsDate(IBasicObjectExtensionPropertyInfo property);
    [ExtensionAttribute]
public static bool IsDateTime(IBasicObjectExtensionPropertyInfo property);
    [ExtensionAttribute]
public static Nullable`1<DataType> GetDataTypeOrNull(IBasicObjectExtensionPropertyInfo property);
    [ExtensionAttribute]
public static string GetDataFormatStringOrNull(IBasicObjectExtensionPropertyInfo property);
}
internal class VoloAbpAspNetCoreMvc_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
