[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.AbpBackgroundJobOptions : object {
    private Dictionary`2<Type, BackgroundJobConfiguration> _jobConfigurationsByArgsType;
    private Dictionary`2<string, BackgroundJobConfiguration> _jobConfigurationsByName;
    [CompilerGeneratedAttribute]
private bool <IsJobExecutionEnabled>k__BackingField;
    public bool IsJobExecutionEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsJobExecutionEnabled();
    [CompilerGeneratedAttribute]
public void set_IsJobExecutionEnabled(bool value);
    public BackgroundJobConfiguration GetJob();
    public BackgroundJobConfiguration GetJob(Type argsType);
    public BackgroundJobConfiguration GetJob(string name);
    public IReadOnlyList`1<BackgroundJobConfiguration> GetJobs();
    [NullableContextAttribute("2")]
public void AddJob();
    public void AddJob(Type jobType);
    public void AddJob(BackgroundJobConfiguration jobConfiguration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.BackgroundJobs.AbpBackgroundJobsAbstractionsModule : AbpModule {
    public virtual void PreConfigureServices(ServiceConfigurationContext context);
    private static void RegisterJobs(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.BackgroundJobs.AsyncBackgroundJob`1 : object {
    [CompilerGeneratedAttribute]
private ILogger`1<AsyncBackgroundJob`1<TArgs>> <Logger>k__BackingField;
    public ILogger`1<AsyncBackgroundJob`1<TArgs>> Logger { get; public set; }
    [CompilerGeneratedAttribute]
public ILogger`1<AsyncBackgroundJob`1<TArgs>> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<AsyncBackgroundJob`1<TArgs>> value);
    public abstract virtual Task ExecuteAsync(TArgs args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.BackgroundJobs.BackgroundJob`1 : object {
    [CompilerGeneratedAttribute]
private ILogger`1<BackgroundJob`1<TArgs>> <Logger>k__BackingField;
    public ILogger`1<BackgroundJob`1<TArgs>> Logger { get; public set; }
    [CompilerGeneratedAttribute]
public ILogger`1<BackgroundJob`1<TArgs>> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<BackgroundJob`1<TArgs>> value);
    public abstract virtual void Execute(TArgs args);
}
public static class Volo.Abp.BackgroundJobs.BackgroundJobArgsHelper : object {
    [NullableContextAttribute("1")]
public static Type GetJobArgsType(Type jobType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.BackgroundJobConfiguration : object {
    [CompilerGeneratedAttribute]
private Type <ArgsType>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JobName>k__BackingField;
    public Type ArgsType { get; }
    public Type JobType { get; }
    public string JobName { get; }
    public BackgroundJobConfiguration(Type jobType);
    [CompilerGeneratedAttribute]
public Type get_ArgsType();
    [CompilerGeneratedAttribute]
public Type get_JobType();
    [CompilerGeneratedAttribute]
public string get_JobName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.BackgroundJobExecuter : object {
    [CompilerGeneratedAttribute]
private ILogger`1<BackgroundJobExecuter> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpBackgroundJobOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ICurrentTenant <CurrentTenant>k__BackingField;
    protected ILogger`1<BackgroundJobExecuter> Logger { get; public set; }
    protected AbpBackgroundJobOptions Options { get; }
    protected ICurrentTenant CurrentTenant { get; }
    public BackgroundJobExecuter(IOptions`1<AbpBackgroundJobOptions> options, ICurrentTenant currentTenant);
    [CompilerGeneratedAttribute]
protected ILogger`1<BackgroundJobExecuter> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<BackgroundJobExecuter> value);
    [CompilerGeneratedAttribute]
protected AbpBackgroundJobOptions get_Options();
    [CompilerGeneratedAttribute]
protected ICurrentTenant get_CurrentTenant();
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundJobs.BackgroundJobExecuter/<ExecuteAsync>d__11")]
public virtual Task ExecuteAsync(JobExecutionContext context);
    protected virtual Nullable`1<Guid> GetJobArgsTenantId(object jobArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.BackgroundJobExecutionException : AbpException {
    [CompilerGeneratedAttribute]
private string <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <JobArgs>k__BackingField;
    public string JobType { get; public set; }
    public object JobArgs { get; public set; }
    public BackgroundJobExecutionException(string message, Exception innerException);
    [CompilerGeneratedAttribute]
public string get_JobType();
    [CompilerGeneratedAttribute]
public void set_JobType(string value);
    [CompilerGeneratedAttribute]
public object get_JobArgs();
    [CompilerGeneratedAttribute]
public void set_JobArgs(object value);
}
[ExtensionAttribute]
public static class Volo.Abp.BackgroundJobs.BackgroundJobManagerExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsAvailable(IBackgroundJobManager backgroundJobManager);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.BackgroundJobNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public BackgroundJobNameAttribute(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public static string GetName();
    public static string GetName(Type jobArgsType);
}
public enum Volo.Abp.BackgroundJobs.BackgroundJobPriority : Enum {
    public byte value__;
    public static BackgroundJobPriority Low;
    public static BackgroundJobPriority BelowNormal;
    public static BackgroundJobPriority Normal;
    public static BackgroundJobPriority AboveNormal;
    public static BackgroundJobPriority High;
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundJobs.IAsyncBackgroundJob`1 {
    public abstract virtual Task ExecuteAsync(TArgs args);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundJobs.IBackgroundJob`1 {
    public abstract virtual void Execute(TArgs args);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundJobs.IBackgroundJobExecuter {
    public abstract virtual Task ExecuteAsync(JobExecutionContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundJobs.IBackgroundJobManager {
    public abstract virtual Task`1<string> EnqueueAsync(TArgs args, BackgroundJobPriority priority, Nullable`1<TimeSpan> delay);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundJobs.IBackgroundJobNameProvider {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundJobs.JobExecutionContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <JobType>k__BackingField;
    [CompilerGeneratedAttribute]
private object <JobArgs>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public IServiceProvider ServiceProvider { get; }
    public Type JobType { get; }
    public object JobArgs { get; }
    public CancellationToken CancellationToken { get; }
    public JobExecutionContext(IServiceProvider serviceProvider, Type jobType, object jobArgs, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public Type get_JobType();
    [CompilerGeneratedAttribute]
public object get_JobArgs();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
}
public enum Volo.Abp.BackgroundJobs.JobExecutionResult : Enum {
    public int value__;
    public static JobExecutionResult Success;
    public static JobExecutionResult Failed;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
public class Volo.Abp.BackgroundJobs.NullBackgroundJobManager : object {
    [CompilerGeneratedAttribute]
private ILogger`1<NullBackgroundJobManager> <Logger>k__BackingField;
    public ILogger`1<NullBackgroundJobManager> Logger { get; public set; }
    [CompilerGeneratedAttribute]
public ILogger`1<NullBackgroundJobManager> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<NullBackgroundJobManager> value);
    public virtual Task`1<string> EnqueueAsync(TArgs args, BackgroundJobPriority priority, Nullable`1<TimeSpan> delay);
}
internal class VoloAbpBackgroundJobsAbstractions_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
