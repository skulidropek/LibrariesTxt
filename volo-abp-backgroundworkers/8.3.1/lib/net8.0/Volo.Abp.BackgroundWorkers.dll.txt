public class Volo.Abp.BackgroundWorkers.AbpBackgroundWorkerOptions : object {
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule : AbpModule {
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule/<OnApplicationInitializationAsync>d__0")]
public virtual Task OnApplicationInitializationAsync(ApplicationInitializationContext context);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AbpBackgroundWorkersModule/<OnApplicationShutdownAsync>d__1")]
public virtual Task OnApplicationShutdownAsync(ApplicationShutdownContext context);
    public virtual void OnApplicationInitialization(ApplicationInitializationContext context);
    public virtual void OnApplicationShutdown(ApplicationShutdownContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase : BackgroundWorkerBase {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpAsyncTimer <Timer>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <StartCancellationToken>k__BackingField;
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    protected AbpAsyncTimer Timer { get; }
    protected CancellationToken StartCancellationToken { get; protected set; }
    protected AsyncPeriodicBackgroundWorkerBase(AbpAsyncTimer timer, IServiceScopeFactory serviceScopeFactory);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected AbpAsyncTimer get_Timer();
    [CompilerGeneratedAttribute]
protected CancellationToken get_StartCancellationToken();
    [CompilerGeneratedAttribute]
protected void set_StartCancellationToken(CancellationToken value);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase/<StartAsync>d__11")]
public virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase/<StopAsync>d__12")]
public virtual Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase/<Timer_Elapsed>d__13")]
private Task Timer_Elapsed(AbpAsyncTimer timer);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.AsyncPeriodicBackgroundWorkerBase/<DoWorkAsync>d__14")]
private Task DoWorkAsync(CancellationToken cancellationToken);
    protected abstract virtual Task DoWorkAsync(PeriodicBackgroundWorkerContext workerContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__1(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.BackgroundWorkers.BackgroundWorkerBase : object {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationTokenSource <StoppingTokenSource>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <StoppingToken>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    public IServiceProvider ServiceProvider { get; public set; }
    protected ILoggerFactory LoggerFactory { get; }
    protected ILogger Logger { get; }
    protected CancellationTokenSource StoppingTokenSource { get; protected set; }
    protected CancellationToken StoppingToken { get; protected set; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    protected ILoggerFactory get_LoggerFactory();
    protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
protected CancellationTokenSource get_StoppingTokenSource();
    [CompilerGeneratedAttribute]
protected void set_StoppingTokenSource(CancellationTokenSource value);
    [CompilerGeneratedAttribute]
protected CancellationToken get_StoppingToken();
    [CompilerGeneratedAttribute]
protected void set_StoppingToken(CancellationToken value);
    public virtual Task StartAsync(CancellationToken cancellationToken);
    public virtual Task StopAsync(CancellationToken cancellationToken);
    public virtual string ToString();
    [CompilerGeneratedAttribute]
private object <get_Logger>b__11_0(IServiceProvider provider);
}
public class Volo.Abp.BackgroundWorkers.BackgroundWorkerManager : object {
    [CompilerGeneratedAttribute]
private bool <IsRunning>k__BackingField;
    private bool _isDisposed;
    [NullableAttribute("1")]
private List`1<IBackgroundWorker> _backgroundWorkers;
    protected bool IsRunning { get; private set; }
    [CompilerGeneratedAttribute]
protected bool get_IsRunning();
    [CompilerGeneratedAttribute]
private void set_IsRunning(bool value);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.BackgroundWorkerManager/<AddAsync>d__7")]
public virtual Task AddAsync(IBackgroundWorker worker, CancellationToken cancellationToken);
    public virtual void Dispose();
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.BackgroundWorkerManager/<StartAsync>d__9")]
public virtual Task StartAsync(CancellationToken cancellationToken);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.BackgroundWorkerManager/<StopAsync>d__10")]
public virtual Task StopAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundWorkers.BackgroundWorkerNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public BackgroundWorkerNameAttribute(string name);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Name();
    public static string GetName();
    public static string GetName(Type workerType);
    [NullableContextAttribute("2")]
public static string GetNameOrNull();
    public static string GetNameOrNull(Type workerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.BackgroundWorkers.BackgroundWorkersApplicationInitializationContextExtensions : object {
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.BackgroundWorkersApplicationInitializationContextExtensions/<AddBackgroundWorkerAsync>d__0`1")]
[ExtensionAttribute]
public static Task`1<ApplicationInitializationContext> AddBackgroundWorkerAsync(ApplicationInitializationContext context, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.BackgroundWorkersApplicationInitializationContextExtensions/<AddBackgroundWorkerAsync>d__1")]
[ExtensionAttribute]
public static Task`1<ApplicationInitializationContext> AddBackgroundWorkerAsync(ApplicationInitializationContext context, Type workerType, CancellationToken cancellationToken);
}
public interface Volo.Abp.BackgroundWorkers.IBackgroundWorker {
}
public interface Volo.Abp.BackgroundWorkers.IBackgroundWorkerManager {
    [NullableContextAttribute("1")]
public abstract virtual Task AddAsync(IBackgroundWorker worker, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.BackgroundWorkers.IBackgroundWorkerNameProvider {
    public string Name { get; }
    public abstract virtual string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerBase : BackgroundWorkerBase {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpTimer <Timer>k__BackingField;
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    protected AbpTimer Timer { get; }
    protected PeriodicBackgroundWorkerBase(AbpTimer timer, IServiceScopeFactory serviceScopeFactory);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected AbpTimer get_Timer();
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerBase/<StartAsync>d__7")]
public virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerBase/<StopAsync>d__8")]
public virtual Task StopAsync(CancellationToken cancellationToken);
    private void Timer_Elapsed(object sender, EventArgs e);
    protected abstract virtual void DoWork(PeriodicBackgroundWorkerContext workerContext);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__1(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.BackgroundWorkers.PeriodicBackgroundWorkerContext : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <CancellationToken>k__BackingField;
    public IServiceProvider ServiceProvider { get; }
    public CancellationToken CancellationToken { get; }
    public PeriodicBackgroundWorkerContext(IServiceProvider serviceProvider);
    public PeriodicBackgroundWorkerContext(IServiceProvider serviceProvider, CancellationToken cancellationToken);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public CancellationToken get_CancellationToken();
}
internal class VoloAbpBackgroundWorkers_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
