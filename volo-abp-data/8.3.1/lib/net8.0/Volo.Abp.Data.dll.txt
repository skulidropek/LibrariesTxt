[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.Data.AbpCommonDbProperties : object {
    [CompilerGeneratedAttribute]
private static string <DbTablePrefix>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private static string <DbSchema>k__BackingField;
    public static string DbTablePrefix { get; public set; }
    [NullableAttribute("2")]
public static string DbSchema { get; public set; }
    private static AbpCommonDbProperties();
    [CompilerGeneratedAttribute]
public static string get_DbTablePrefix();
    [CompilerGeneratedAttribute]
public static void set_DbTablePrefix(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static string get_DbSchema();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public static void set_DbSchema(string value);
}
public class Volo.Abp.Data.AbpConnectionStringCheckResult : object {
    [CompilerGeneratedAttribute]
private bool <Connected>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DatabaseExists>k__BackingField;
    public bool Connected { get; public set; }
    public bool DatabaseExists { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Connected();
    [CompilerGeneratedAttribute]
public void set_Connected(bool value);
    [CompilerGeneratedAttribute]
public bool get_DatabaseExists();
    [CompilerGeneratedAttribute]
public void set_DatabaseExists(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.AbpDatabaseInfo : object {
    [CompilerGeneratedAttribute]
private string <DatabaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <MappedConnections>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsUsedByTenants>k__BackingField;
    public string DatabaseName { get; }
    public HashSet`1<string> MappedConnections { get; }
    public bool IsUsedByTenants { get; public set; }
    internal AbpDatabaseInfo(string databaseName);
    [CompilerGeneratedAttribute]
public string get_DatabaseName();
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_MappedConnections();
    [CompilerGeneratedAttribute]
public bool get_IsUsedByTenants();
    [CompilerGeneratedAttribute]
public void set_IsUsedByTenants(bool value);
    public void MapConnection(String[] connectionNames);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Data.AbpDatabaseInfoDictionary : Dictionary`2<string, AbpDatabaseInfo> {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AbpDatabaseInfo> <ConnectionIndex>k__BackingField;
    private Dictionary`2<string, AbpDatabaseInfo> ConnectionIndex { get; private set; }
    [CompilerGeneratedAttribute]
private Dictionary`2<string, AbpDatabaseInfo> get_ConnectionIndex();
    [CompilerGeneratedAttribute]
private void set_ConnectionIndex(Dictionary`2<string, AbpDatabaseInfo> value);
    public AbpDatabaseInfo GetMappedDatabaseOrNull(string connectionStringName);
    public AbpDatabaseInfoDictionary Configure(string databaseName, Action`1<AbpDatabaseInfo> configureAction);
    public void RefreshIndexes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.AbpDataFilterOptions : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, DataFilterState> <DefaultStates>k__BackingField;
    public Dictionary`2<Type, DataFilterState> DefaultStates { get; }
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, DataFilterState> get_DefaultStates();
}
public class Volo.Abp.Data.AbpDataMigrationEnvironment : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Data.AbpDataMigrationEnvironmentExtensions : object {
    [ExtensionAttribute]
public static void AddDataMigrationEnvironment(AbpApplicationCreationOptions options, AbpDataMigrationEnvironment environment);
    [ExtensionAttribute]
public static void AddDataMigrationEnvironment(IServiceCollection services, AbpDataMigrationEnvironment environment);
    [ExtensionAttribute]
public static AbpDataMigrationEnvironment GetDataMigrationEnvironment(IServiceCollection services);
    [ExtensionAttribute]
public static bool IsDataMigrationEnvironment(IServiceCollection services);
    [ExtensionAttribute]
public static AbpDataMigrationEnvironment GetDataMigrationEnvironment(IServiceProvider serviceProvider);
    [ExtensionAttribute]
public static bool IsDataMigrationEnvironment(IServiceProvider serviceProvider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Data.AbpDataModule : AbpModule {
    public virtual void PreConfigureServices(ServiceConfigurationContext context);
    public virtual void ConfigureServices(ServiceConfigurationContext context);
    public virtual void PostConfigureServices(ServiceConfigurationContext context);
    private static void AutoAddDataSeedContributors(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.AbpDataSeedOptions : object {
    [CompilerGeneratedAttribute]
private DataSeedContributorList <Contributors>k__BackingField;
    public DataSeedContributorList Contributors { get; }
    [CompilerGeneratedAttribute]
public DataSeedContributorList get_Contributors();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.AbpDbConcurrencyException : AbpException {
    public AbpDbConcurrencyException(string message);
    public AbpDbConcurrencyException(string message, Exception innerException);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.AbpDbConnectionOptions : object {
    [CompilerGeneratedAttribute]
private ConnectionStrings <ConnectionStrings>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDatabaseInfoDictionary <Databases>k__BackingField;
    public ConnectionStrings ConnectionStrings { get; public set; }
    public AbpDatabaseInfoDictionary Databases { get; public set; }
    [CompilerGeneratedAttribute]
public ConnectionStrings get_ConnectionStrings();
    [CompilerGeneratedAttribute]
public void set_ConnectionStrings(ConnectionStrings value);
    [CompilerGeneratedAttribute]
public AbpDatabaseInfoDictionary get_Databases();
    [CompilerGeneratedAttribute]
public void set_Databases(AbpDatabaseInfoDictionary value);
    public string GetConnectionStringOrNull(string connectionStringName, bool fallbackToDatabaseMappings, bool fallbackToDefault);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventNameAttribute("abp.data.applied_database_migrations")]
public class Volo.Abp.Data.AppliedDatabaseMigrationsEto : object {
    [CompilerGeneratedAttribute]
private string <DatabaseName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TenantId>k__BackingField;
    public string DatabaseName { get; public set; }
    public Nullable`1<Guid> TenantId { get; public set; }
    [CompilerGeneratedAttribute]
public string get_DatabaseName();
    [CompilerGeneratedAttribute]
public void set_DatabaseName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Nullable`1<Guid> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[EventNameAttribute("abp.data.apply_database_migrations")]
public class Volo.Abp.Data.ApplyDatabaseMigrationsEto : EtoBase {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DatabaseName>k__BackingField;
    public Nullable`1<Guid> TenantId { get; public set; }
    public string DatabaseName { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_DatabaseName();
    [CompilerGeneratedAttribute]
public void set_DatabaseName(string value);
}
[ExtensionAttribute]
public static class Volo.Abp.Data.ConcurrencyStampExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void SetConcurrencyStampIfNotNull(IHasConcurrencyStamp entity, string concurrencyStamp);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.ConnectionStringNameAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; }
    public ConnectionStringNameAttribute(string name);
    [CompilerGeneratedAttribute]
public string get_Name();
    public static string GetConnStringName();
    public static string GetConnStringName(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Data.ConnectionStringResolverExtensions : object {
    [ExtensionAttribute]
[ObsoleteAttribute("Use ResolveAsync method")]
public static string Resolve(IConnectionStringResolver resolver);
    [ExtensionAttribute]
public static Task`1<string> ResolveAsync(IConnectionStringResolver resolver);
    [ExtensionAttribute]
[ObsoleteAttribute("Use ResolveAsync method")]
public static string Resolve(IConnectionStringResolver resolver, Type type);
    [ExtensionAttribute]
public static Task`1<string> ResolveAsync(IConnectionStringResolver resolver, Type type);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Data.ConnectionStrings : Dictionary`2<string, string> {
    [NullableAttribute("1")]
public static string DefaultConnectionStringName;
    public string Default { get; public set; }
    public string get_Default();
    public void set_Default(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.DataFilter : object {
    private ConcurrentDictionary`2<Type, object> _filters;
    private IServiceProvider _serviceProvider;
    public DataFilter(IServiceProvider serviceProvider);
    public sealed virtual IDisposable Enable();
    public sealed virtual IDisposable Disable();
    public sealed virtual bool IsEnabled();
    private IDataFilter`1<TFilter> GetFilter();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private object <GetFilter>b__6_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.DataFilter`1 : object {
    private AbpDataFilterOptions _options;
    private AsyncLocal`1<DataFilterState> _filter;
    public bool IsEnabled { get; }
    public DataFilter`1(IOptions`1<AbpDataFilterOptions> options);
    public sealed virtual bool get_IsEnabled();
    public sealed virtual IDisposable Enable();
    public sealed virtual IDisposable Disable();
    private void EnsureInitialized();
    [CompilerGeneratedAttribute]
private void <Enable>b__5_0();
    [CompilerGeneratedAttribute]
private void <Disable>b__6_0();
}
public class Volo.Abp.Data.DataFilterState : object {
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; public set; }
    public DataFilterState(bool isEnabled);
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [NullableContextAttribute("1")]
public DataFilterState Clone();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DefaultMemberAttribute("Item")]
public class Volo.Abp.Data.DataSeedContext : object {
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TenantId>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    public Nullable`1<Guid> TenantId { get; public set; }
    [NullableAttribute("2")]
public object Item { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, object> Properties { get; }
    public DataSeedContext(Nullable`1<Guid> tenantId);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Nullable`1<Guid> value);
    public object get_Item(string name);
    public void set_Item(string name, object value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    public virtual DataSeedContext WithProperty(string key, object value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Data.DataSeedContributorList : TypeList`1<IDataSeedContributor> {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.DataSeeder : object {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDataSeedOptions <Options>k__BackingField;
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    protected AbpDataSeedOptions Options { get; }
    public DataSeeder(IOptions`1<AbpDataSeedOptions> options, IServiceScopeFactory serviceScopeFactory);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected AbpDataSeedOptions get_Options();
    [AsyncStateMachineAttribute("Volo.Abp.Data.DataSeeder/<SeedAsync>d__7")]
[UnitOfWorkAttribute]
public virtual Task SeedAsync(DataSeedContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Data.DataSeederExtensions : object {
    public static string SeedInSeparateUow;
    public static string SeedInSeparateUowOptions;
    public static string SeedInSeparateUowRequiresNew;
    [ExtensionAttribute]
public static Task SeedAsync(IDataSeeder seeder, Nullable`1<Guid> tenantId);
    [ExtensionAttribute]
public static Task SeedInSeparateUowAsync(IDataSeeder seeder, Nullable`1<Guid> tenantId, AbpUnitOfWorkOptions options, bool requiresNew);
}
public class Volo.Abp.Data.DefaultConnectionStringChecker : object {
    [NullableContextAttribute("1")]
public sealed virtual Task`1<AbpConnectionStringCheckResult> CheckAsync(string connectionString);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Data.DefaultConnectionStringResolver : object {
    [CompilerGeneratedAttribute]
private AbpDbConnectionOptions <Options>k__BackingField;
    protected AbpDbConnectionOptions Options { get; }
    public DefaultConnectionStringResolver(IOptionsMonitor`1<AbpDbConnectionOptions> options);
    [CompilerGeneratedAttribute]
protected AbpDbConnectionOptions get_Options();
    [ObsoleteAttribute("Use ResolveAsync method.")]
public virtual string Resolve(string connectionStringName);
    public virtual Task`1<string> ResolveAsync(string connectionStringName);
    [NullableContextAttribute("2")]
private string ResolveInternal(string connectionStringName);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IConnectionStringChecker {
    public abstract virtual Task`1<AbpConnectionStringCheckResult> CheckAsync(string connectionString);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IConnectionStringResolver {
    [ObsoleteAttribute("Use ResolveAsync method.")]
public abstract virtual string Resolve(string connectionStringName);
    public abstract virtual Task`1<string> ResolveAsync(string connectionStringName);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IDataFilter {
    public abstract virtual IDisposable Enable();
    public abstract virtual IDisposable Disable();
    public abstract virtual bool IsEnabled();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IDataFilter`1 {
    public bool IsEnabled { get; }
    public abstract virtual IDisposable Enable();
    public abstract virtual IDisposable Disable();
    public abstract virtual bool get_IsEnabled();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IDataSeedContributor {
    public abstract virtual Task SeedAsync(DataSeedContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Data.IDataSeeder {
    public abstract virtual Task SeedAsync(DataSeedContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Entities.IHasConcurrencyStamp {
    public string ConcurrencyStamp { get; public set; }
    public abstract virtual string get_ConcurrencyStamp();
    public abstract virtual void set_ConcurrencyStamp(string value);
}
internal class VoloAbpData_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
