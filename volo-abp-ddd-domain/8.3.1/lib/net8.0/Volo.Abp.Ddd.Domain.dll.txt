[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Microsoft.Extensions.DependencyInjection.ServiceCollectionRepositoryExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddDefaultRepository(IServiceCollection services, Type entityType, Type repositoryImplementationType, bool replaceExisting);
    private static void RegisterService(IServiceCollection services, Type serviceType, Type implementationType, bool replaceExisting, bool isReadOnlyRepository);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Auditing.EntityHistorySelectorListExtensions : object {
    public static string AllEntitiesSelectorName;
    [ExtensionAttribute]
public static void AddAllEntities(IEntityHistorySelectorList selectors);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.DependencyInjection.AbpCommonDbContextRegistrationOptions : object {
    [CompilerGeneratedAttribute]
private Type <OriginalDbContextType>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceCollection <Services>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<MultiTenantDbContextType, Type> <ReplacedDbContextTypes>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <DefaultRepositoryDbContextType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <DefaultRepositoryImplementationType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Type <DefaultRepositoryImplementationTypeWithoutKey>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <RegisterDefaultRepositories>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IncludeAllEntitiesForDefaultRepositories>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<Type, Type> <CustomRepositories>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Type> <SpecifiedDefaultRepositories>k__BackingField;
    public Type OriginalDbContextType { get; }
    public IServiceCollection Services { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<MultiTenantDbContextType, Type> ReplacedDbContextTypes { get; }
    public Type DefaultRepositoryDbContextType { get; protected set; }
    [NullableAttribute("2")]
public Type DefaultRepositoryImplementationType { get; private set; }
    [NullableAttribute("2")]
public Type DefaultRepositoryImplementationTypeWithoutKey { get; private set; }
    public bool RegisterDefaultRepositories { get; private set; }
    public bool IncludeAllEntitiesForDefaultRepositories { get; private set; }
    public Dictionary`2<Type, Type> CustomRepositories { get; }
    public List`1<Type> SpecifiedDefaultRepositories { get; }
    public bool SpecifiedDefaultRepositoryTypes { get; }
    protected AbpCommonDbContextRegistrationOptions(Type originalDbContextType, IServiceCollection services);
    [CompilerGeneratedAttribute]
public Type get_OriginalDbContextType();
    [CompilerGeneratedAttribute]
public sealed virtual IServiceCollection get_Services();
    [CompilerGeneratedAttribute]
public Dictionary`2<MultiTenantDbContextType, Type> get_ReplacedDbContextTypes();
    [CompilerGeneratedAttribute]
public Type get_DefaultRepositoryDbContextType();
    [CompilerGeneratedAttribute]
protected void set_DefaultRepositoryDbContextType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_DefaultRepositoryImplementationType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_DefaultRepositoryImplementationType(Type value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public Type get_DefaultRepositoryImplementationTypeWithoutKey();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_DefaultRepositoryImplementationTypeWithoutKey(Type value);
    [CompilerGeneratedAttribute]
public bool get_RegisterDefaultRepositories();
    [CompilerGeneratedAttribute]
private void set_RegisterDefaultRepositories(bool value);
    [CompilerGeneratedAttribute]
public bool get_IncludeAllEntitiesForDefaultRepositories();
    [CompilerGeneratedAttribute]
private void set_IncludeAllEntitiesForDefaultRepositories(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<Type, Type> get_CustomRepositories();
    [CompilerGeneratedAttribute]
public List`1<Type> get_SpecifiedDefaultRepositories();
    public bool get_SpecifiedDefaultRepositoryTypes();
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(MultiTenancySides multiTenancySides);
    [NullableContextAttribute("2")]
public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(MultiTenancySides multiTenancySides);
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(Type otherDbContextType, Type targetDbContextType, MultiTenancySides multiTenancySides);
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(bool includeAllEntities);
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(Type defaultRepositoryDbContextType, bool includeAllEntities);
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(bool includeAllEntities);
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepository();
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepository(Type entityType);
    [NullableContextAttribute("2")]
public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder AddRepository();
    public sealed virtual IAbpCommonDbContextRegistrationOptionsBuilder SetDefaultRepositoryClasses(Type repositoryImplementationType, Type repositoryImplementationTypeWithoutKey);
    private void AddCustomRepository(Type entityType, Type repositoryType);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.DependencyInjection.IAbpCommonDbContextRegistrationOptionsBuilder {
    public IServiceCollection Services { get; }
    public abstract virtual IServiceCollection get_Services();
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(bool includeAllEntities);
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(bool includeAllEntities);
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepositories(Type defaultRepositoryDbContextType, bool includeAllEntities);
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepository();
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddDefaultRepository(Type entityType);
    [NullableContextAttribute("2")]
public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder AddRepository();
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder SetDefaultRepositoryClasses(Type repositoryImplementationType, Type repositoryImplementationTypeWithoutKey);
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(MultiTenancySides multiTenancySides);
    [NullableContextAttribute("2")]
public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(MultiTenancySides multiTenancySides);
    public abstract virtual IAbpCommonDbContextRegistrationOptionsBuilder ReplaceDbContext(Type otherDbContextType, Type targetDbContextType, MultiTenancySides multiTenancySides);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.DependencyInjection.MultiTenantDbContextType : object {
    [CompilerGeneratedAttribute]
private Type <Type>k__BackingField;
    [CompilerGeneratedAttribute]
private MultiTenancySides <MultiTenancySide>k__BackingField;
    public Type Type { get; }
    public MultiTenancySides MultiTenancySide { get; }
    public MultiTenantDbContextType(Type type, MultiTenancySides multiTenancySide);
    [CompilerGeneratedAttribute]
public Type get_Type();
    [CompilerGeneratedAttribute]
public MultiTenancySides get_MultiTenancySide();
    [NullableContextAttribute("2")]
public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("4")]
public class Volo.Abp.DependencyInjection.ReplaceDbContextAttribute : Attribute {
    [CompilerGeneratedAttribute]
private MultiTenantDbContextType[] <ReplacedDbContextTypes>k__BackingField;
    public MultiTenantDbContextType[] ReplacedDbContextTypes { get; }
    public ReplaceDbContextAttribute(Type[] replacedDbContextTypes);
    public ReplaceDbContextAttribute(Type replacedDbContextType, MultiTenancySides side);
    [CompilerGeneratedAttribute]
public MultiTenantDbContextType[] get_ReplacedDbContextTypes();
}
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.AbpDddDomainModule : AbpModule {
    [NullableContextAttribute("1")]
public virtual void PreConfigureServices(ServiceConfigurationContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.Domain.ChangeTracking.ChangeTrackingHelper : object {
    public static bool IsEntityChangeTrackingType(TypeInfo implementationType);
    public static bool IsEntityChangeTrackingMethod(MethodInfo methodInfo, EntityChangeTrackingAttribute& entityChangeTrackingAttribute);
    private static bool AnyMethodHasEntityChangeTrackingAttribute(TypeInfo implementationType);
    private static bool HasEntityChangeTrackingAttribute(MemberInfo memberInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.ChangeTracking.ChangeTrackingInterceptor : AbpInterceptor {
    private IEntityChangeTrackingProvider _entityChangeTrackingProvider;
    public ChangeTrackingInterceptor(IEntityChangeTrackingProvider entityChangeTrackingProvider);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.ChangeTracking.ChangeTrackingInterceptor/<InterceptAsync>d__2")]
public virtual Task InterceptAsync(IAbpMethodInvocation invocation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.ChangeTracking.ChangeTrackingInterceptorRegistrar : object {
    public static void RegisterIfNeeded(IOnServiceRegistredContext context);
    private static bool ShouldIntercept(Type type);
}
[AttributeUsageAttribute("68")]
public class Volo.Abp.Domain.ChangeTracking.DisableEntityChangeTrackingAttribute : EntityChangeTrackingAttribute {
}
[AttributeUsageAttribute("68")]
public class Volo.Abp.Domain.ChangeTracking.EnableEntityChangeTrackingAttribute : EntityChangeTrackingAttribute {
}
[AttributeUsageAttribute("68")]
public abstract class Volo.Abp.Domain.ChangeTracking.EntityChangeTrackingAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    public bool IsEnabled { get; public set; }
    public EntityChangeTrackingAttribute(bool isEnabled);
    [CompilerGeneratedAttribute]
public virtual bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public virtual void set_IsEnabled(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.AggregateRoot : BasicAggregateRoot {
    [CompilerGeneratedAttribute]
private ExtraPropertyDictionary <ExtraProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcurrencyStamp>k__BackingField;
    public ExtraPropertyDictionary ExtraProperties { get; protected set; }
    [DisableAuditingAttribute]
public string ConcurrencyStamp { get; public set; }
    [CompilerGeneratedAttribute]
public virtual ExtraPropertyDictionary get_ExtraProperties();
    [CompilerGeneratedAttribute]
protected virtual void set_ExtraProperties(ExtraPropertyDictionary value);
    [CompilerGeneratedAttribute]
public virtual string get_ConcurrencyStamp();
    [CompilerGeneratedAttribute]
public virtual void set_ConcurrencyStamp(string value);
    public virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.AggregateRoot`1 : BasicAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private ExtraPropertyDictionary <ExtraProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ConcurrencyStamp>k__BackingField;
    public ExtraPropertyDictionary ExtraProperties { get; protected set; }
    [DisableAuditingAttribute]
public string ConcurrencyStamp { get; public set; }
    protected AggregateRoot`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual ExtraPropertyDictionary get_ExtraProperties();
    [CompilerGeneratedAttribute]
protected virtual void set_ExtraProperties(ExtraPropertyDictionary value);
    [CompilerGeneratedAttribute]
public virtual string get_ConcurrencyStamp();
    [CompilerGeneratedAttribute]
public virtual void set_ConcurrencyStamp(string value);
    public virtual IEnumerable`1<ValidationResult> Validate(ValidationContext validationContext);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot : CreationAuditedAggregateRoot {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModificationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <LastModifierId>k__BackingField;
    public Nullable`1<DateTime> LastModificationTime { get; public set; }
    public Nullable`1<Guid> LastModifierId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_LastModificationTime();
    [CompilerGeneratedAttribute]
public virtual void set_LastModificationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_LastModifierId();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifierId(Nullable`1<Guid> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRoot`1 : CreationAuditedAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModificationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <LastModifierId>k__BackingField;
    public Nullable`1<DateTime> LastModificationTime { get; public set; }
    public Nullable`1<Guid> LastModifierId { get; public set; }
    [NullableContextAttribute("1")]
protected AuditedAggregateRoot`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_LastModificationTime();
    [CompilerGeneratedAttribute]
public virtual void set_LastModificationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_LastModifierId();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifierId(Nullable`1<Guid> value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`1 : AuditedAggregateRoot {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    [NullableAttribute("2")]
public TUser Creator { get; protected set; }
    [NullableAttribute("2")]
public TUser LastModifier { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedAggregateRootWithUser`2 : AuditedAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    public TUser Creator { get; protected set; }
    public TUser LastModifier { get; public set; }
    [NullableContextAttribute("1")]
protected AuditedAggregateRootWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedEntity : CreationAuditedEntity {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModificationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <LastModifierId>k__BackingField;
    public Nullable`1<DateTime> LastModificationTime { get; public set; }
    public Nullable`1<Guid> LastModifierId { get; public set; }
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_LastModificationTime();
    [CompilerGeneratedAttribute]
public virtual void set_LastModificationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_LastModifierId();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifierId(Nullable`1<Guid> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedEntity`1 : CreationAuditedEntity`1<TKey> {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastModificationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <LastModifierId>k__BackingField;
    public Nullable`1<DateTime> LastModificationTime { get; public set; }
    public Nullable`1<Guid> LastModifierId { get; public set; }
    [NullableContextAttribute("1")]
protected AuditedEntity`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_LastModificationTime();
    [CompilerGeneratedAttribute]
public virtual void set_LastModificationTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_LastModifierId();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifierId(Nullable`1<Guid> value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`1 : AuditedEntity {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    [NullableAttribute("2")]
public TUser Creator { get; protected set; }
    [NullableAttribute("2")]
public TUser LastModifier { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.AuditedEntityWithUser`2 : AuditedEntity`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    public TUser Creator { get; protected set; }
    public TUser LastModifier { get; public set; }
    [NullableContextAttribute("1")]
protected AuditedEntityWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot : AggregateRoot {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <CreatorId>k__BackingField;
    public DateTime CreationTime { get; protected set; }
    public Nullable`1<Guid> CreatorId { get; protected set; }
    [CompilerGeneratedAttribute]
public virtual DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
protected virtual void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_CreatorId();
    [CompilerGeneratedAttribute]
protected virtual void set_CreatorId(Nullable`1<Guid> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRoot`1 : AggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <CreatorId>k__BackingField;
    public DateTime CreationTime { get; public set; }
    public Nullable`1<Guid> CreatorId { get; public set; }
    [NullableContextAttribute("1")]
protected CreationAuditedAggregateRoot`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public virtual void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_CreatorId();
    [CompilerGeneratedAttribute]
public virtual void set_CreatorId(Nullable`1<Guid> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`1 : CreationAuditedAggregateRoot {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    public TUser Creator { get; protected set; }
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedAggregateRootWithUser`2 : CreationAuditedAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    public TUser Creator { get; protected set; }
    [NullableContextAttribute("1")]
protected CreationAuditedAggregateRootWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity : Entity {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <CreatorId>k__BackingField;
    public DateTime CreationTime { get; protected set; }
    public Nullable`1<Guid> CreatorId { get; protected set; }
    [CompilerGeneratedAttribute]
public virtual DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
protected virtual void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_CreatorId();
    [CompilerGeneratedAttribute]
protected virtual void set_CreatorId(Nullable`1<Guid> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntity`1 : Entity`1<TKey> {
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <CreatorId>k__BackingField;
    public DateTime CreationTime { get; protected set; }
    public Nullable`1<Guid> CreatorId { get; protected set; }
    [NullableContextAttribute("1")]
protected CreationAuditedEntity`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
protected virtual void set_CreationTime(DateTime value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_CreatorId();
    [CompilerGeneratedAttribute]
protected virtual void set_CreatorId(Nullable`1<Guid> value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`1 : CreationAuditedEntity {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    public TUser Creator { get; protected set; }
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.CreationAuditedEntityWithUser`2 : CreationAuditedEntity`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    public TUser Creator { get; protected set; }
    [NullableContextAttribute("1")]
protected CreationAuditedEntityWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot : AuditedAggregateRoot {
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <DeleterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTime>k__BackingField;
    public bool IsDeleted { get; public set; }
    public Nullable`1<Guid> DeleterId { get; public set; }
    public Nullable`1<DateTime> DeletionTime { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public virtual void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_DeleterId();
    [CompilerGeneratedAttribute]
public virtual void set_DeleterId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_DeletionTime();
    [CompilerGeneratedAttribute]
public virtual void set_DeletionTime(Nullable`1<DateTime> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRoot`1 : AuditedAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <DeleterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTime>k__BackingField;
    public bool IsDeleted { get; public set; }
    public Nullable`1<Guid> DeleterId { get; public set; }
    public Nullable`1<DateTime> DeletionTime { get; public set; }
    [NullableContextAttribute("1")]
protected FullAuditedAggregateRoot`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public virtual void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_DeleterId();
    [CompilerGeneratedAttribute]
public virtual void set_DeleterId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_DeletionTime();
    [CompilerGeneratedAttribute]
public virtual void set_DeletionTime(Nullable`1<DateTime> value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`1 : FullAuditedAggregateRoot {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Deleter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    [NullableAttribute("2")]
public TUser Deleter { get; public set; }
    [NullableAttribute("2")]
public TUser Creator { get; protected set; }
    [NullableAttribute("2")]
public TUser LastModifier { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Deleter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Deleter(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedAggregateRootWithUser`2 : FullAuditedAggregateRoot`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Deleter>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    public TUser Deleter { get; public set; }
    public TUser Creator { get; protected set; }
    public TUser LastModifier { get; public set; }
    [NullableContextAttribute("1")]
protected FullAuditedAggregateRootWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Deleter();
    [CompilerGeneratedAttribute]
public virtual void set_Deleter(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity : AuditedEntity {
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <DeleterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTime>k__BackingField;
    public bool IsDeleted { get; public set; }
    public Nullable`1<Guid> DeleterId { get; public set; }
    public Nullable`1<DateTime> DeletionTime { get; public set; }
    [CompilerGeneratedAttribute]
public virtual bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public virtual void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_DeleterId();
    [CompilerGeneratedAttribute]
public virtual void set_DeleterId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_DeletionTime();
    [CompilerGeneratedAttribute]
public virtual void set_DeletionTime(Nullable`1<DateTime> value);
}
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedEntity`1 : AuditedEntity`1<TKey> {
    [CompilerGeneratedAttribute]
private bool <IsDeleted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <DeleterId>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <DeletionTime>k__BackingField;
    public bool IsDeleted { get; public set; }
    public Nullable`1<Guid> DeleterId { get; public set; }
    public Nullable`1<DateTime> DeletionTime { get; public set; }
    [NullableContextAttribute("1")]
protected FullAuditedEntity`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual bool get_IsDeleted();
    [CompilerGeneratedAttribute]
public virtual void set_IsDeleted(bool value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<Guid> get_DeleterId();
    [CompilerGeneratedAttribute]
public virtual void set_DeleterId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public virtual Nullable`1<DateTime> get_DeletionTime();
    [CompilerGeneratedAttribute]
public virtual void set_DeletionTime(Nullable`1<DateTime> value);
}
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`1 : FullAuditedEntity {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Deleter>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    [NullableAttribute("2")]
public TUser Deleter { get; public set; }
    [NullableAttribute("2")]
public TUser Creator { get; protected set; }
    [NullableAttribute("2")]
public TUser LastModifier { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Deleter();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_Deleter(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
[NullableContextAttribute("2")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Auditing.FullAuditedEntityWithUser`2 : FullAuditedEntity`1<TKey> {
    [CompilerGeneratedAttribute]
private TUser <Deleter>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <Creator>k__BackingField;
    [CompilerGeneratedAttribute]
private TUser <LastModifier>k__BackingField;
    public TUser Deleter { get; public set; }
    public TUser Creator { get; protected set; }
    public TUser LastModifier { get; public set; }
    [NullableContextAttribute("1")]
protected FullAuditedEntityWithUser`2(TKey id);
    [CompilerGeneratedAttribute]
public virtual TUser get_Deleter();
    [CompilerGeneratedAttribute]
public virtual void set_Deleter(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_Creator();
    [CompilerGeneratedAttribute]
protected virtual void set_Creator(TUser value);
    [CompilerGeneratedAttribute]
public virtual TUser get_LastModifier();
    [CompilerGeneratedAttribute]
public virtual void set_LastModifier(TUser value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.BasicAggregateRoot : Entity {
    private ICollection`1<DomainEventRecord> _distributedEvents;
    private ICollection`1<DomainEventRecord> _localEvents;
    public virtual IEnumerable`1<DomainEventRecord> GetLocalEvents();
    public virtual IEnumerable`1<DomainEventRecord> GetDistributedEvents();
    public virtual void ClearLocalEvents();
    public virtual void ClearDistributedEvents();
    protected virtual void AddLocalEvent(object eventData);
    protected virtual void AddDistributedEvent(object eventData);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.BasicAggregateRoot`1 : Entity`1<TKey> {
    private ICollection`1<DomainEventRecord> _distributedEvents;
    private ICollection`1<DomainEventRecord> _localEvents;
    protected BasicAggregateRoot`1(TKey id);
    public virtual IEnumerable`1<DomainEventRecord> GetLocalEvents();
    public virtual IEnumerable`1<DomainEventRecord> GetDistributedEvents();
    public virtual void ClearLocalEvents();
    public virtual void ClearDistributedEvents();
    protected virtual void AddLocalEvent(object eventData);
    protected virtual void AddDistributedEvent(object eventData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3 : object {
    [CompilerGeneratedAttribute]
private IReadOnlyRepository`2<TEntity, TKey> <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private IDistributedCache`2<TEntityCacheItem, TKey> <Cache>k__BackingField;
    [CompilerGeneratedAttribute]
private IUnitOfWorkManager <UnitOfWorkManager>k__BackingField;
    protected IReadOnlyRepository`2<TEntity, TKey> Repository { get; }
    protected IDistributedCache`2<TEntityCacheItem, TKey> Cache { get; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    protected EntityCacheBase`3(IReadOnlyRepository`2<TEntity, TKey> repository, IDistributedCache`2<TEntityCacheItem, TKey> cache, IUnitOfWorkManager unitOfWorkManager);
    [CompilerGeneratedAttribute]
protected IReadOnlyRepository`2<TEntity, TKey> get_Repository();
    [CompilerGeneratedAttribute]
protected IDistributedCache`2<TEntityCacheItem, TKey> get_Cache();
    [CompilerGeneratedAttribute]
protected IUnitOfWorkManager get_UnitOfWorkManager();
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3/<FindAsync>d__10")]
public virtual Task`1<TEntityCacheItem> FindAsync(TKey id);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3/<GetAsync>d__11")]
public virtual Task`1<TEntityCacheItem> GetAsync(TKey id);
    protected virtual bool HasObjectExtensionInfo();
    [NullableContextAttribute("2")]
protected abstract virtual TEntityCacheItem MapToCacheItem(TEntity entity);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Caching.EntityCacheBase`3/<HandleEventAsync>d__14")]
public sealed virtual Task HandleEventAsync(EntityChangedEventData`1<TEntity> eventData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Domain.Entities.Caching.EntityCacheServiceCollectionExtensions : object {
    [ExtensionAttribute]
public static IServiceCollection AddEntityCache(IServiceCollection services, DistributedCacheEntryOptions cacheOptions);
    [ExtensionAttribute]
public static IServiceCollection AddEntityCache(IServiceCollection services, DistributedCacheEntryOptions cacheOptions);
    [ExtensionAttribute]
public static IServiceCollection AddEntityCache(IServiceCollection services, DistributedCacheEntryOptions cacheOptions);
    private static DistributedCacheEntryOptions GetDefaultCacheOptions();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapper`3 : EntityCacheBase`3<TEntity, TEntityCacheItem, TKey> {
    [CompilerGeneratedAttribute]
private IObjectMapper <ObjectMapper>k__BackingField;
    protected IObjectMapper ObjectMapper { get; }
    public EntityCacheWithObjectMapper`3(IReadOnlyRepository`2<TEntity, TKey> repository, IDistributedCache`2<TEntityCacheItem, TKey> cache, IUnitOfWorkManager unitOfWorkManager, IObjectMapper objectMapper);
    [CompilerGeneratedAttribute]
protected IObjectMapper get_ObjectMapper();
    [NullableContextAttribute("2")]
protected virtual TEntityCacheItem MapToCacheItem(TEntity entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Caching.EntityCacheWithObjectMapperContext`4 : EntityCacheWithObjectMapper`3<TEntity, TEntityCacheItem, TKey> {
    public EntityCacheWithObjectMapperContext`4(IReadOnlyRepository`2<TEntity, TKey> repository, IDistributedCache`2<TEntityCacheItem, TKey> cache, IUnitOfWorkManager unitOfWorkManager, IObjectMapper objectMapper);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Caching.EntityCacheWithoutCacheItem`2 : EntityCacheBase`3<TEntity, TEntity, TKey> {
    public EntityCacheWithoutCacheItem`2(IReadOnlyRepository`2<TEntity, TKey> repository, IDistributedCache`2<TEntity, TKey> cache, IUnitOfWorkManager unitOfWorkManager);
    [NullableContextAttribute("2")]
protected virtual TEntity MapToCacheItem(TEntity entity);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Entities.Caching.IEntityCache`2 {
    public abstract virtual Task`1<TEntityCacheItem> FindAsync(TKey id);
    public abstract virtual Task`1<TEntityCacheItem> GetAsync(TKey id);
}
public static class Volo.Abp.Domain.Entities.ConcurrencyStampConsts : object {
    public static int MaxLength;
}
public class Volo.Abp.Domain.Entities.DisableIdGenerationAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.DomainEventRecord : object {
    [CompilerGeneratedAttribute]
private object <EventData>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EventOrder>k__BackingField;
    public object EventData { get; }
    public long EventOrder { get; }
    public DomainEventRecord(object eventData, long eventOrder);
    [CompilerGeneratedAttribute]
public object get_EventData();
    [CompilerGeneratedAttribute]
public long get_EventOrder();
}
public abstract class Volo.Abp.Domain.Entities.Entity : object {
    [NullableContextAttribute("1")]
public virtual string ToString();
    public abstract virtual Object[] GetKeys();
    [NullableContextAttribute("1")]
public bool EntityEquals(IEntity other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.Entity`1 : Entity {
    [CompilerGeneratedAttribute]
private TKey <Id>k__BackingField;
    public TKey Id { get; protected set; }
    protected Entity`1(TKey id);
    [CompilerGeneratedAttribute]
public virtual TKey get_Id();
    [CompilerGeneratedAttribute]
protected virtual void set_Id(TKey value);
    public virtual Object[] GetKeys();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.Domain.Entities.EntityHelper : object {
    public static Func`2<Type, bool> IsValueObjectPredicate;
    private static EntityHelper();
    [NullableContextAttribute("0")]
public static bool IsMultiTenant();
    public static bool IsMultiTenant(Type type);
    [NullableContextAttribute("2")]
public static bool EntityEquals(IEntity entity1, IEntity entity2);
    public static bool IsEntity(Type type);
    public static bool IsValueObject(Type type);
    [NullableContextAttribute("2")]
public static bool IsValueObject(object obj);
    public static void CheckEntity(Type type);
    public static bool IsEntityWithId(Type type);
    public static bool HasDefaultId(IEntity`1<TKey> entity);
    [NullableContextAttribute("2")]
private static bool IsDefaultKeyValue(object value);
    public static bool HasDefaultKeys(IEntity entity);
    [NullableContextAttribute("0")]
public static Type FindPrimaryKeyType();
    public static Type FindPrimaryKeyType(Type entityType);
    public static Expression`1<Func`2<TEntity, bool>> CreateEqualityExpressionForId(TKey id);
    public static void TrySetId(IEntity`1<TKey> entity, Func`1<TKey> idFactory, bool checkForDisableIdGenerationAttribute);
    public static void TrySetTenantId(IEntity entity);
}
public class Volo.Abp.Domain.Entities.Events.AbpEntityChangeOptions : object {
    [CompilerGeneratedAttribute]
private bool <PublishEntityUpdatedEventWhenNavigationChanges>k__BackingField;
    public bool PublishEntityUpdatedEventWhenNavigationChanges { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_PublishEntityUpdatedEventWhenNavigationChanges();
    [CompilerGeneratedAttribute]
public void set_PublishEntityUpdatedEventWhenNavigationChanges(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Domain.Entities.Events.Distributed.AutoEntityDistributedEventSelectorListExtensions : object {
    public static string AllEntitiesSelectorName;
    [ExtensionAttribute]
public static void AddNamespace(IAutoEntityDistributedEventSelectorList selectors, string namespaceName);
    [ExtensionAttribute]
public static void Add(IAutoEntityDistributedEventSelectorList selectors);
    [ExtensionAttribute]
public static void Remove(IAutoEntityDistributedEventSelectorList selectors);
    [ExtensionAttribute]
public static void AddAll(IAutoEntityDistributedEventSelectorList selectors);
    [ExtensionAttribute]
public static void Add(IAutoEntityDistributedEventSelectorList selectors, string selectorName, Func`2<Type, bool> predicate);
    [ExtensionAttribute]
public static void Add(IAutoEntityDistributedEventSelectorList selectors, Func`2<Type, bool> predicate);
    [ExtensionAttribute]
public static bool RemoveByName(IAutoEntityDistributedEventSelectorList selectors, string name);
    [ExtensionAttribute]
public static bool IsMatch(IAutoEntityDistributedEventSelectorList selectors, Type entityType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2 : object {
    [CompilerGeneratedAttribute]
private IObjectMapper <ObjectMapper>k__BackingField;
    [CompilerGeneratedAttribute]
private IRepository`1<TEntity> <Repository>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreEntityCreatedEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreEntityUpdatedEvent>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreEntityDeletedEvent>k__BackingField;
    protected IObjectMapper ObjectMapper { get; }
    protected IRepository`1<TEntity> Repository { get; }
    protected bool IgnoreEntityCreatedEvent { get; protected set; }
    protected bool IgnoreEntityUpdatedEvent { get; protected set; }
    protected bool IgnoreEntityDeletedEvent { get; protected set; }
    public EntitySynchronizer`2(IObjectMapper objectMapper, IRepository`1<TEntity> repository);
    [CompilerGeneratedAttribute]
protected IObjectMapper get_ObjectMapper();
    [CompilerGeneratedAttribute]
protected IRepository`1<TEntity> get_Repository();
    [CompilerGeneratedAttribute]
protected bool get_IgnoreEntityCreatedEvent();
    [CompilerGeneratedAttribute]
protected void set_IgnoreEntityCreatedEvent(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IgnoreEntityUpdatedEvent();
    [CompilerGeneratedAttribute]
protected void set_IgnoreEntityUpdatedEvent(bool value);
    [CompilerGeneratedAttribute]
protected bool get_IgnoreEntityDeletedEvent();
    [CompilerGeneratedAttribute]
protected void set_IgnoreEntityDeletedEvent(bool value);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2/<HandleEventAsync>d__19")]
public virtual Task HandleEventAsync(EntityCreatedEto`1<TSourceEntityEto> eventData);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2/<HandleEventAsync>d__20")]
public virtual Task HandleEventAsync(EntityUpdatedEto`1<TSourceEntityEto> eventData);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2/<HandleEventAsync>d__21")]
public virtual Task HandleEventAsync(EntityDeletedEto`1<TSourceEntityEto> eventData);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2/<TryCreateOrUpdateEntityAsync>d__22")]
[UnitOfWorkAttribute]
protected virtual Task`1<bool> TryCreateOrUpdateEntityAsync(TSourceEntityEto eto);
    protected virtual Task`1<TEntity> MapToEntityAsync(TSourceEntityEto eto);
    protected virtual Task MapToEntityAsync(TSourceEntityEto eto, TEntity localEntity);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`2/<TryDeleteEntityAsync>d__25")]
[UnitOfWorkAttribute]
protected virtual Task`1<bool> TryDeleteEntityAsync(TSourceEntityEto eto);
    protected abstract virtual Task`1<TEntity> FindLocalEntityAsync(TSourceEntityEto eto);
    protected virtual Task`1<bool> IsEtoNewerAsync(TSourceEntityEto eto, TEntity localEntity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Entities.Events.Distributed.EntitySynchronizer`3 : EntitySynchronizer`2<TEntity, TSourceEntityEto> {
    [CompilerGeneratedAttribute]
private IRepository`2<TEntity, TKey> <Repository>k__BackingField;
    protected IRepository`2<TEntity, TKey> Repository { get; }
    protected EntitySynchronizer`3(IObjectMapper objectMapper, IRepository`2<TEntity, TKey> repository);
    [CompilerGeneratedAttribute]
protected IRepository`2<TEntity, TKey> get_Repository();
    protected virtual Task`1<TEntity> FindLocalEntityAsync(TSourceEntityEto eto);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.Distributed.EntityToEtoMapper : object {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <HybridServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDistributedEntityEventOptions <Options>k__BackingField;
    protected IServiceScopeFactory HybridServiceScopeFactory { get; }
    protected AbpDistributedEntityEventOptions Options { get; }
    public EntityToEtoMapper(IOptions`1<AbpDistributedEntityEventOptions> options, IServiceScopeFactory hybridServiceScopeFactory);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_HybridServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected AbpDistributedEntityEventOptions get_Options();
    public sealed virtual object Map(object entityObj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.DomainEventEntry : object {
    [CompilerGeneratedAttribute]
private object <SourceEntity>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EventData>k__BackingField;
    [CompilerGeneratedAttribute]
private long <EventOrder>k__BackingField;
    public object SourceEntity { get; }
    public object EventData { get; }
    public long EventOrder { get; }
    public DomainEventEntry(object sourceEntity, object eventData, long eventOrder);
    [CompilerGeneratedAttribute]
public object get_SourceEntity();
    [CompilerGeneratedAttribute]
public object get_EventData();
    [CompilerGeneratedAttribute]
public long get_EventOrder();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Events.EntityChangedEventData`1 : EntityEventData`1<TEntity> {
    public EntityChangedEventData`1(TEntity entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.EntityChangeEntry : object {
    [CompilerGeneratedAttribute]
private object <Entity>k__BackingField;
    [CompilerGeneratedAttribute]
private EntityChangeType <ChangeType>k__BackingField;
    public object Entity { get; public set; }
    public EntityChangeType ChangeType { get; public set; }
    public EntityChangeEntry(object entity, EntityChangeType changeType);
    [CompilerGeneratedAttribute]
public object get_Entity();
    [CompilerGeneratedAttribute]
public void set_Entity(object value);
    [CompilerGeneratedAttribute]
public EntityChangeType get_ChangeType();
    [CompilerGeneratedAttribute]
public void set_ChangeType(EntityChangeType value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.EntityChangeEventHelper : object {
    private static string UnitOfWorkEventRecordEntityPropName;
    [CompilerGeneratedAttribute]
private ILogger`1<EntityChangeEventHelper> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocalEventBus <LocalEventBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IDistributedEventBus <DistributedEventBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IUnitOfWorkManager <UnitOfWorkManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IEntityToEtoMapper <EntityToEtoMapper>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDistributedEntityEventOptions <DistributedEntityEventOptions>k__BackingField;
    public ILogger`1<EntityChangeEventHelper> Logger { get; public set; }
    public ILocalEventBus LocalEventBus { get; public set; }
    public IDistributedEventBus DistributedEventBus { get; public set; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    protected IEntityToEtoMapper EntityToEtoMapper { get; }
    protected AbpDistributedEntityEventOptions DistributedEntityEventOptions { get; }
    public EntityChangeEventHelper(IUnitOfWorkManager unitOfWorkManager, IEntityToEtoMapper entityToEtoMapper, IOptions`1<AbpDistributedEntityEventOptions> distributedEntityEventOptions);
    [CompilerGeneratedAttribute]
public ILogger`1<EntityChangeEventHelper> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<EntityChangeEventHelper> value);
    [CompilerGeneratedAttribute]
public ILocalEventBus get_LocalEventBus();
    [CompilerGeneratedAttribute]
public void set_LocalEventBus(ILocalEventBus value);
    [CompilerGeneratedAttribute]
public IDistributedEventBus get_DistributedEventBus();
    [CompilerGeneratedAttribute]
public void set_DistributedEventBus(IDistributedEventBus value);
    [CompilerGeneratedAttribute]
protected IUnitOfWorkManager get_UnitOfWorkManager();
    [CompilerGeneratedAttribute]
protected IEntityToEtoMapper get_EntityToEtoMapper();
    [CompilerGeneratedAttribute]
protected AbpDistributedEntityEventOptions get_DistributedEntityEventOptions();
    public virtual void PublishEntityCreatedEvent(object entity);
    private bool ShouldPublishDistributedEventForEntity(object entity);
    public virtual void PublishEntityUpdatedEvent(object entity);
    public virtual void PublishEntityDeletedEvent(object entity);
    protected virtual void TriggerEventWithEntity(IEventBus eventPublisher, Type genericEventType, object entityOrEto, object originalEntity);
    public bool IsSameEntityEventRecord(UnitOfWorkEventRecord record1, UnitOfWorkEventRecord record2);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Events.EntityCreatedEventData`1 : EntityChangedEventData`1<TEntity> {
    public EntityCreatedEventData`1(TEntity entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Events.EntityDeletedEventData`1 : EntityChangedEventData`1<TEntity> {
    public EntityDeletedEventData`1(TEntity entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.EntityEventData`1 : object {
    [CompilerGeneratedAttribute]
private TEntity <Entity>k__BackingField;
    public TEntity Entity { get; }
    public EntityEventData`1(TEntity entity);
    [CompilerGeneratedAttribute]
public TEntity get_Entity();
    public virtual Object[] GetConstructorArgs();
    public virtual bool IsMultiTenant(Nullable`1& tenantId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.EntityEventReport : object {
    [CompilerGeneratedAttribute]
private List`1<DomainEventEntry> <DomainEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<DomainEventEntry> <DistributedEvents>k__BackingField;
    public List`1<DomainEventEntry> DomainEvents { get; }
    public List`1<DomainEventEntry> DistributedEvents { get; }
    [CompilerGeneratedAttribute]
public List`1<DomainEventEntry> get_DomainEvents();
    [CompilerGeneratedAttribute]
public List`1<DomainEventEntry> get_DistributedEvents();
    public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Domain.Entities.Events.EntityUpdatedEventData`1 : EntityChangedEventData`1<TEntity> {
    public EntityUpdatedEventData`1(TEntity entity);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Entities.Events.IEntityChangeEventHelper {
    public abstract virtual void PublishEntityCreatedEvent(object entity);
    public abstract virtual void PublishEntityUpdatedEvent(object entity);
    public abstract virtual void PublishEntityDeletedEvent(object entity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Entities.Events.NullEntityChangeEventHelper : object {
    [CompilerGeneratedAttribute]
private static NullEntityChangeEventHelper <Instance>k__BackingField;
    public static NullEntityChangeEventHelper Instance { get; }
    private static NullEntityChangeEventHelper();
    [CompilerGeneratedAttribute]
public static NullEntityChangeEventHelper get_Instance();
    public sealed virtual void PublishEntityCreatedEvent(object entity);
    public sealed virtual void PublishEntityUpdatedEvent(object entity);
    public sealed virtual void PublishEntityDeletedEvent(object entity);
}
public interface Volo.Abp.Domain.Entities.IAggregateRoot {
}
public interface Volo.Abp.Domain.Entities.IAggregateRoot`1 {
}
public interface Volo.Abp.Domain.Entities.IEntity {
    public abstract virtual Object[] GetKeys();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Entities.IEntity`1 {
    public TKey Id { get; }
    public abstract virtual TKey get_Id();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Entities.IGeneratesDomainEvents {
    public abstract virtual IEnumerable`1<DomainEventRecord> GetLocalEvents();
    public abstract virtual IEnumerable`1<DomainEventRecord> GetDistributedEvents();
    public abstract virtual void ClearLocalEvents();
    public abstract virtual void ClearDistributedEvents();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Domain.Repositories.AbpRepositoryConventionalRegistrar : DefaultConventionalRegistrar {
    [CompilerGeneratedAttribute]
private static bool <ExposeRepositoryClasses>k__BackingField;
    public static bool ExposeRepositoryClasses { get; public set; }
    [CompilerGeneratedAttribute]
public static bool get_ExposeRepositoryClasses();
    [CompilerGeneratedAttribute]
public static void set_ExposeRepositoryClasses(bool value);
    protected virtual bool IsConventionalRegistrationDisabled(Type type);
    protected virtual List`1<Type> GetExposedServiceTypes(Type type);
    protected virtual Nullable`1<ServiceLifetime> GetDefaultLifeTimeOrNull(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Repositories.BasicRepositoryBase`1 : object {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <IsChangeTrackingEnabled>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    public IServiceProvider ServiceProvider { get; public set; }
    public IDataFilter DataFilter { get; }
    public ICurrentTenant CurrentTenant { get; }
    public IAsyncQueryableExecuter AsyncExecuter { get; }
    public IUnitOfWorkManager UnitOfWorkManager { get; }
    public ICancellationTokenProvider CancellationTokenProvider { get; }
    [NullableAttribute("2")]
public ILoggerFactory LoggerFactory { get; }
    public ILogger Logger { get; }
    public IEntityChangeTrackingProvider EntityChangeTrackingProvider { get; }
    public Nullable`1<bool> IsChangeTrackingEnabled { get; protected set; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    [CompilerGeneratedAttribute]
public sealed virtual IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    public IDataFilter get_DataFilter();
    public ICurrentTenant get_CurrentTenant();
    public sealed virtual IAsyncQueryableExecuter get_AsyncExecuter();
    public sealed virtual IUnitOfWorkManager get_UnitOfWorkManager();
    public ICancellationTokenProvider get_CancellationTokenProvider();
    [NullableContextAttribute("2")]
public ILoggerFactory get_LoggerFactory();
    public ILogger get_Logger();
    public IEntityChangeTrackingProvider get_EntityChangeTrackingProvider();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_IsChangeTrackingEnabled();
    [CompilerGeneratedAttribute]
protected void set_IsChangeTrackingEnabled(Nullable`1<bool> value);
    public abstract virtual Task`1<TEntity> InsertAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`1/<InsertManyAsync>d__30")]
public virtual Task InsertManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    protected virtual Task SaveChangesAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> UpdateAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`1/<UpdateManyAsync>d__33")]
public virtual Task UpdateManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`1/<DeleteManyAsync>d__35")]
public virtual Task DeleteManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TEntity>> GetListAsync(bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TEntity>> GetListAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<long> GetCountAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TEntity>> GetPagedListAsync(int skipCount, int maxResultCount, string sorting, bool includeDetails, CancellationToken cancellationToken);
    protected virtual CancellationToken GetCancellationToken(CancellationToken preferredValue);
    protected virtual bool ShouldTrackingEntityChange();
    [CompilerGeneratedAttribute]
private object <get_Logger>b__21_0(IServiceProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Repositories.BasicRepositoryBase`2 : BasicRepositoryBase`1<TEntity> {
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`2/<GetAsync>d__0")]
public virtual Task`1<TEntity> GetAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> FindAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`2/<DeleteAsync>d__2")]
public virtual Task DeleteAsync(TKey id, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.BasicRepositoryBase`2/<DeleteManyAsync>d__3")]
public sealed virtual Task DeleteManyAsync(IEnumerable`1<TKey> ids, bool autoSave, CancellationToken cancellationToken);
}
public class Volo.Abp.Domain.Repositories.EntityChangeTrackingProvider : object {
    [NullableAttribute("1")]
private AsyncLocal`1<Nullable`1<bool>> _current;
    public Nullable`1<bool> Enabled { get; }
    public sealed virtual Nullable`1<bool> get_Enabled();
    [NullableContextAttribute("1")]
public sealed virtual IDisposable Change(Nullable`1<bool> enabled);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IBasicRepository`1 {
    public abstract virtual Task`1<TEntity> InsertAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task InsertManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> UpdateAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task UpdateManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(TEntity entity, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteManyAsync(IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IBasicRepository`2 {
    public abstract virtual Task DeleteAsync(TKey id, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteManyAsync(IEnumerable`1<TKey> ids, bool autoSave, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IEntityChangeTrackingProvider {
    public Nullable`1<bool> Enabled { get; }
    public abstract virtual Nullable`1<bool> get_Enabled();
    public abstract virtual IDisposable Change(Nullable`1<bool> enabled);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`1 {
    public abstract virtual Task`1<List`1<TEntity>> GetListAsync(bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<long> GetCountAsync(CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TEntity>> GetPagedListAsync(int skipCount, int maxResultCount, string sorting, bool includeDetails, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IReadOnlyBasicRepository`2 {
    public abstract virtual Task`1<TEntity> GetAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> FindAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IReadOnlyRepository`1 {
    public IAsyncQueryableExecuter AsyncExecuter { get; }
    public abstract virtual IAsyncQueryableExecuter get_AsyncExecuter();
    [ObsoleteAttribute("Use WithDetailsAsync method.")]
public abstract virtual IQueryable`1<TEntity> WithDetails();
    [ObsoleteAttribute("Use WithDetailsAsync method.")]
public abstract virtual IQueryable`1<TEntity> WithDetails(Expression`1[] propertySelectors);
    public abstract virtual Task`1<IQueryable`1<TEntity>> WithDetailsAsync();
    public abstract virtual Task`1<IQueryable`1<TEntity>> WithDetailsAsync(Expression`1[] propertySelectors);
    public abstract virtual Task`1<IQueryable`1<TEntity>> GetQueryableAsync();
    public abstract virtual Task`1<List`1<TEntity>> GetListAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IReadOnlyRepository`2 {
}
public interface Volo.Abp.Domain.Repositories.IRepository {
    public Nullable`1<bool> IsChangeTrackingEnabled { get; }
    public abstract virtual Nullable`1<bool> get_IsChangeTrackingEnabled();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IRepository`1 {
    public abstract virtual Task`1<TEntity> FindAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> GetAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteDirectAsync(Expression`1<Func`2<TEntity, bool>> predicate, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.IRepository`2 {
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Domain.Repositories.ISupportsExplicitLoading`1 {
    public abstract virtual Task EnsureCollectionLoadedAsync(TEntity entity, Expression`1<Func`2<TEntity, IEnumerable`1<TProperty>>> propertyExpression, CancellationToken cancellationToken);
    public abstract virtual Task EnsurePropertyLoadedAsync(TEntity entity, Expression`1<Func`2<TEntity, TProperty>> propertyExpression, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions : object {
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<ContainsAsync>d__0`1")]
[ExtensionAttribute]
public static Task`1<bool> ContainsAsync(IReadOnlyRepository`1<T> repository, T item, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AnyAsync>d__1`1")]
[ExtensionAttribute]
public static Task`1<bool> AnyAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AnyAsync>d__2`1")]
[ExtensionAttribute]
public static Task`1<bool> AnyAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AllAsync>d__3`1")]
[ExtensionAttribute]
public static Task`1<bool> AllAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<CountAsync>d__4`1")]
[ExtensionAttribute]
public static Task`1<int> CountAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<CountAsync>d__5`1")]
[ExtensionAttribute]
public static Task`1<int> CountAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LongCountAsync>d__6`1")]
[ExtensionAttribute]
public static Task`1<long> LongCountAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LongCountAsync>d__7`1")]
[ExtensionAttribute]
public static Task`1<long> LongCountAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<FirstAsync>d__8`1")]
[ExtensionAttribute]
public static Task`1<T> FirstAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<FirstAsync>d__9`1")]
[ExtensionAttribute]
public static Task`1<T> FirstAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<FirstOrDefaultAsync>d__10`1")]
[ExtensionAttribute]
public static Task`1<T> FirstOrDefaultAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<FirstOrDefaultAsync>d__11`1")]
[ExtensionAttribute]
public static Task`1<T> FirstOrDefaultAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LastAsync>d__12`1")]
[ExtensionAttribute]
public static Task`1<T> LastAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LastAsync>d__13`1")]
[ExtensionAttribute]
public static Task`1<T> LastAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LastOrDefaultAsync>d__14`1")]
[ExtensionAttribute]
public static Task`1<T> LastOrDefaultAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<LastOrDefaultAsync>d__15`1")]
[ExtensionAttribute]
public static Task`1<T> LastOrDefaultAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SingleAsync>d__16`1")]
[ExtensionAttribute]
public static Task`1<T> SingleAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SingleAsync>d__17`1")]
[ExtensionAttribute]
public static Task`1<T> SingleAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SingleOrDefaultAsync>d__18`1")]
[ExtensionAttribute]
public static Task`1<T> SingleOrDefaultAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SingleOrDefaultAsync>d__19`1")]
[ExtensionAttribute]
public static Task`1<T> SingleOrDefaultAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, bool>> predicate, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<MinAsync>d__20`1")]
[ExtensionAttribute]
public static Task`1<T> MinAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<MinAsync>d__21`2")]
[ExtensionAttribute]
public static Task`1<TResult> MinAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, TResult>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<MaxAsync>d__22`1")]
[ExtensionAttribute]
public static Task`1<T> MaxAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<MaxAsync>d__23`2")]
[ExtensionAttribute]
public static Task`1<TResult> MaxAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, TResult>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__24`1")]
[ExtensionAttribute]
public static Task`1<decimal> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, decimal>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__25`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<decimal>> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__26`1")]
[ExtensionAttribute]
public static Task`1<int> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, int>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__27`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<int>> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__28`1")]
[ExtensionAttribute]
public static Task`1<long> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, long>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__29`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<long>> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__30`1")]
[ExtensionAttribute]
public static Task`1<double> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, double>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__31`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<double>> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__32`1")]
[ExtensionAttribute]
public static Task`1<float> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, float>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<SumAsync>d__33`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<float>> SumAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__34`1")]
[ExtensionAttribute]
public static Task`1<decimal> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, decimal>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__35`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<decimal>> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<decimal>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__36`1")]
[ExtensionAttribute]
public static Task`1<double> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, int>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__37`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<double>> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<int>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__38`1")]
[ExtensionAttribute]
public static Task`1<double> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, long>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__39`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<double>> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<long>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__40`1")]
[ExtensionAttribute]
public static Task`1<double> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, double>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__41`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<double>> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<double>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<AverageAsync>d__42`1")]
[ExtensionAttribute]
public static Task`1<Nullable`1<float>> AverageAsync(IReadOnlyRepository`1<T> repository, Expression`1<Func`2<T, Nullable`1<float>>> selector, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<ToListAsync>d__43`1")]
[ExtensionAttribute]
public static Task`1<List`1<T>> ToListAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryAsyncExtensions/<ToArrayAsync>d__44`1")]
[ExtensionAttribute]
public static Task`1<T[]> ToArrayAsync(IReadOnlyRepository`1<T> repository, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Repositories.RepositoryBase`1 : BasicRepositoryBase`1<TEntity> {
    [ObsoleteAttribute("Use WithDetailsAsync method.")]
public virtual IQueryable`1<TEntity> WithDetails();
    [ObsoleteAttribute("Use WithDetailsAsync method.")]
public virtual IQueryable`1<TEntity> WithDetails(Expression`1[] propertySelectors);
    public virtual Task`1<IQueryable`1<TEntity>> WithDetailsAsync();
    public virtual Task`1<IQueryable`1<TEntity>> WithDetailsAsync(Expression`1[] propertySelectors);
    [ObsoleteAttribute("Use GetQueryableAsync method.")]
protected abstract virtual IQueryable`1<TEntity> GetQueryable();
    public abstract virtual Task`1<IQueryable`1<TEntity>> GetQueryableAsync();
    public abstract virtual Task`1<TEntity> FindAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryBase`1/<GetAsync>d__7")]
public sealed virtual Task`1<TEntity> GetAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task DeleteAsync(Expression`1<Func`2<TEntity, bool>> predicate, bool autoSave, CancellationToken cancellationToken);
    public abstract virtual Task DeleteDirectAsync(Expression`1<Func`2<TEntity, bool>> predicate, CancellationToken cancellationToken);
    protected virtual TQueryable ApplyDataFilters(TQueryable query);
    protected virtual TQueryable ApplyDataFilters(TQueryable query);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Volo.Abp.Domain.Repositories.RepositoryBase`2 : RepositoryBase`1<TEntity> {
    public abstract virtual Task`1<TEntity> GetAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
    public abstract virtual Task`1<TEntity> FindAsync(TKey id, bool includeDetails, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryBase`2/<DeleteAsync>d__2")]
public virtual Task DeleteAsync(TKey id, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryBase`2/<DeleteManyAsync>d__3")]
public sealed virtual Task DeleteManyAsync(IEnumerable`1<TKey> ids, bool autoSave, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Domain.Repositories.RepositoryExtensions : object {
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<EnsureCollectionLoadedAsync>d__0`2")]
[ExtensionAttribute]
public static Task EnsureCollectionLoadedAsync(IBasicRepository`1<TEntity> repository, TEntity entity, Expression`1<Func`2<TEntity, IEnumerable`1<TProperty>>> propertyExpression, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<EnsurePropertyLoadedAsync>d__1`3")]
[ExtensionAttribute]
public static Task EnsurePropertyLoadedAsync(IBasicRepository`2<TEntity, TKey> repository, TEntity entity, Expression`1<Func`2<TEntity, TProperty>> propertyExpression, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<EnsureExistsAsync>d__2`2")]
[ExtensionAttribute]
public static Task EnsureExistsAsync(IRepository`2<TEntity, TKey> repository, TKey id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<EnsureExistsAsync>d__3`1")]
[ExtensionAttribute]
public static Task EnsureExistsAsync(IRepository`1<TEntity> repository, Expression`1<Func`2<TEntity, bool>> expression, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteAsync>d__4`1")]
[ExtensionAttribute]
public static Task HardDeleteAsync(IRepository`1<TEntity> repository, Expression`1<Func`2<TEntity, bool>> predicate, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteAsync>d__5`1")]
[ExtensionAttribute]
public static Task HardDeleteAsync(IBasicRepository`1<TEntity> repository, IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteAsync>d__6`1")]
[ExtensionAttribute]
public static Task HardDeleteAsync(IBasicRepository`1<TEntity> repository, TEntity entity, bool autoSave, CancellationToken cancellationToken);
    [ExtensionAttribute]
public static IDisposable DisableTracking(IRepository repository);
    [ExtensionAttribute]
public static IDisposable EnableTracking(IRepository repository);
    [ExtensionAttribute]
private static IDisposable Tracking(IRepository repository, bool enabled);
    [ExtensionAttribute]
private static IUnitOfWorkManager GetUnitOfWorkManager(IBasicRepository`1<TEntity> repository, string callingMethodName);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteWithUnitOfWorkAsync>d__11`1")]
private static Task HardDeleteWithUnitOfWorkAsync(IRepository`1<TEntity> repository, Expression`1<Func`2<TEntity, bool>> predicate, bool autoSave, CancellationToken cancellationToken, IUnitOfWork currentUow);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteWithUnitOfWorkAsync>d__12`1")]
private static Task HardDeleteWithUnitOfWorkAsync(IBasicRepository`1<TEntity> repository, IEnumerable`1<TEntity> entities, bool autoSave, CancellationToken cancellationToken, IUnitOfWork currentUow);
    [AsyncStateMachineAttribute("Volo.Abp.Domain.Repositories.RepositoryExtensions/<HardDeleteWithUnitOfWorkAsync>d__13`1")]
private static Task HardDeleteWithUnitOfWorkAsync(IBasicRepository`1<TEntity> repository, TEntity entity, bool autoSave, CancellationToken cancellationToken, IUnitOfWork currentUow);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Repositories.RepositoryRegistrarBase`1 : object {
    [CompilerGeneratedAttribute]
private TOptions <Options>k__BackingField;
    public TOptions Options { get; }
    protected RepositoryRegistrarBase`1(TOptions options);
    [CompilerGeneratedAttribute]
public TOptions get_Options();
    public virtual void AddRepositories();
    protected virtual void RegisterCustomRepositories();
    protected virtual void RegisterDefaultRepositories();
    protected virtual void RegisterSpecifiedDefaultRepositories();
    protected virtual void RegisterDefaultRepository(Type entityType);
    protected virtual Type GetDefaultRepositoryImplementationType(Type entityType);
    protected virtual bool ShouldRegisterDefaultRepositoryFor(Type entityType);
    protected abstract virtual IEnumerable`1<Type> GetEntityTypes(Type dbContextType);
    protected abstract virtual Type GetRepositoryType(Type dbContextType, Type entityType);
    protected abstract virtual Type GetRepositoryType(Type dbContextType, Type entityType, Type primaryKeyType);
}
public static class Volo.Abp.Domain.Repositories.UnitOfWorkItemNames : object {
    [NullableAttribute("1")]
public static string HardDeletedEntities;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Services.DomainService : object {
    [CompilerGeneratedAttribute]
private IAbpLazyServiceProvider <LazyServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    public IAbpLazyServiceProvider LazyServiceProvider { get; public set; }
    [ObsoleteAttribute("Use LazyServiceProvider instead.")]
public IServiceProvider ServiceProvider { get; public set; }
    protected IClock Clock { get; }
    protected IGuidGenerator GuidGenerator { get; }
    protected ILoggerFactory LoggerFactory { get; }
    protected ICurrentTenant CurrentTenant { get; }
    protected IAsyncQueryableExecuter AsyncExecuter { get; }
    protected ILogger Logger { get; }
    [CompilerGeneratedAttribute]
public IAbpLazyServiceProvider get_LazyServiceProvider();
    [CompilerGeneratedAttribute]
public void set_LazyServiceProvider(IAbpLazyServiceProvider value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ServiceProvider(IServiceProvider value);
    protected IClock get_Clock();
    protected IGuidGenerator get_GuidGenerator();
    protected ILoggerFactory get_LoggerFactory();
    protected ICurrentTenant get_CurrentTenant();
    protected IAsyncQueryableExecuter get_AsyncExecuter();
    protected ILogger get_Logger();
    [CompilerGeneratedAttribute]
private object <get_Logger>b__19_0(IServiceProvider provider);
}
public interface Volo.Abp.Domain.Services.IDomainService {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Domain.Values.ValueObject : object {
    protected abstract virtual IEnumerable`1<object> GetAtomicValues();
    public bool ValueEquals(object obj);
}
internal class VoloAbpDddDomain_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
