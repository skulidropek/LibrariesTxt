[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.EventBus.AbpEventBusModule : AbpModule {
    public virtual void PreConfigureServices(ServiceConfigurationContext context);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.AbpEventBusModule/<OnApplicationInitializationAsync>d__1")]
public virtual Task OnApplicationInitializationAsync(ApplicationInitializationContext context);
    public virtual void OnApplicationInitialization(ApplicationInitializationContext context);
    private static void AddEventHandlers(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.ActionEventHandler`1 : object {
    [CompilerGeneratedAttribute]
private Func`2<TEvent, Task> <Action>k__BackingField;
    public Func`2<TEvent, Task> Action { get; }
    public ActionEventHandler`1(Func`2<TEvent, Task> handler);
    [CompilerGeneratedAttribute]
public Func`2<TEvent, Task> get_Action();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.ActionEventHandler`1/<HandleEventAsync>d__4")]
public sealed virtual Task HandleEventAsync(TEvent eventData);
}
[ExtensionAttribute]
public static class Volo.Abp.EventBus.Distributed.AbpDistributedEventBusExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static ISupportsEventBoxes AsSupportsEventBoxes(IDistributedEventBus eventBus);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.AbpDistributedEventBusOptions : object {
    [CompilerGeneratedAttribute]
private ITypeList`1<IEventHandler> <Handlers>k__BackingField;
    [CompilerGeneratedAttribute]
private OutboxConfigDictionary <Outboxes>k__BackingField;
    [CompilerGeneratedAttribute]
private InboxConfigDictionary <Inboxes>k__BackingField;
    public ITypeList`1<IEventHandler> Handlers { get; }
    public OutboxConfigDictionary Outboxes { get; }
    public InboxConfigDictionary Inboxes { get; }
    [CompilerGeneratedAttribute]
public ITypeList`1<IEventHandler> get_Handlers();
    [CompilerGeneratedAttribute]
public OutboxConfigDictionary get_Outboxes();
    [CompilerGeneratedAttribute]
public InboxConfigDictionary get_Inboxes();
}
public class Volo.Abp.EventBus.Distributed.AbpEventBusBoxesOptions : object {
    [CompilerGeneratedAttribute]
private TimeSpan <CleanOldEventTimeIntervalSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InboxWaitingEventMaxCount>k__BackingField;
    [CompilerGeneratedAttribute]
private int <OutboxWaitingEventMaxCount>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PeriodTimeSpan>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <DistributedLockWaitDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <WaitTimeToDeleteProcessedInboxEvents>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <BatchPublishOutboxEvents>k__BackingField;
    public TimeSpan CleanOldEventTimeIntervalSpan { get; public set; }
    public int InboxWaitingEventMaxCount { get; public set; }
    public int OutboxWaitingEventMaxCount { get; public set; }
    public TimeSpan PeriodTimeSpan { get; public set; }
    public TimeSpan DistributedLockWaitDuration { get; public set; }
    public TimeSpan WaitTimeToDeleteProcessedInboxEvents { get; public set; }
    public bool BatchPublishOutboxEvents { get; public set; }
    [CompilerGeneratedAttribute]
public TimeSpan get_CleanOldEventTimeIntervalSpan();
    [CompilerGeneratedAttribute]
public void set_CleanOldEventTimeIntervalSpan(TimeSpan value);
    [CompilerGeneratedAttribute]
public int get_InboxWaitingEventMaxCount();
    [CompilerGeneratedAttribute]
public void set_InboxWaitingEventMaxCount(int value);
    [CompilerGeneratedAttribute]
public int get_OutboxWaitingEventMaxCount();
    [CompilerGeneratedAttribute]
public void set_OutboxWaitingEventMaxCount(int value);
    [CompilerGeneratedAttribute]
public TimeSpan get_PeriodTimeSpan();
    [CompilerGeneratedAttribute]
public void set_PeriodTimeSpan(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_DistributedLockWaitDuration();
    [CompilerGeneratedAttribute]
public void set_DistributedLockWaitDuration(TimeSpan value);
    [CompilerGeneratedAttribute]
public TimeSpan get_WaitTimeToDeleteProcessedInboxEvents();
    [CompilerGeneratedAttribute]
public void set_WaitTimeToDeleteProcessedInboxEvents(TimeSpan value);
    [CompilerGeneratedAttribute]
public bool get_BatchPublishOutboxEvents();
    [CompilerGeneratedAttribute]
public void set_BatchPublishOutboxEvents(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.EventBus.Distributed.DistributedEventBusBase : EventBusBase {
    [CompilerGeneratedAttribute]
private IGuidGenerator <GuidGenerator>k__BackingField;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDistributedEventBusOptions <AbpDistributedEventBusOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ILocalEventBus <LocalEventBus>k__BackingField;
    [CompilerGeneratedAttribute]
private ICorrelationIdProvider <CorrelationIdProvider>k__BackingField;
    protected IGuidGenerator GuidGenerator { get; }
    protected IClock Clock { get; }
    protected AbpDistributedEventBusOptions AbpDistributedEventBusOptions { get; }
    protected ILocalEventBus LocalEventBus { get; }
    protected ICorrelationIdProvider CorrelationIdProvider { get; }
    protected DistributedEventBusBase(IServiceScopeFactory serviceScopeFactory, ICurrentTenant currentTenant, IUnitOfWorkManager unitOfWorkManager, IOptions`1<AbpDistributedEventBusOptions> abpDistributedEventBusOptions, IGuidGenerator guidGenerator, IClock clock, IEventHandlerInvoker eventHandlerInvoker, ILocalEventBus localEventBus, ICorrelationIdProvider correlationIdProvider);
    [CompilerGeneratedAttribute]
protected IGuidGenerator get_GuidGenerator();
    [CompilerGeneratedAttribute]
protected IClock get_Clock();
    [CompilerGeneratedAttribute]
protected AbpDistributedEventBusOptions get_AbpDistributedEventBusOptions();
    [CompilerGeneratedAttribute]
protected ILocalEventBus get_LocalEventBus();
    [CompilerGeneratedAttribute]
protected ICorrelationIdProvider get_CorrelationIdProvider();
    public sealed virtual IDisposable Subscribe(IDistributedEventHandler`1<TEvent> handler);
    public virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete, bool useOutbox);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<PublishAsync>d__19")]
public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete, bool useOutbox);
    public abstract virtual Task PublishFromOutboxAsync(OutgoingEventInfo outgoingEvent, OutboxConfig outboxConfig);
    public abstract virtual Task PublishManyFromOutboxAsync(IEnumerable`1<OutgoingEventInfo> outgoingEvents, OutboxConfig outboxConfig);
    public abstract virtual Task ProcessFromInboxAsync(IncomingEventInfo incomingEvent, InboxConfig inboxConfig);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<AddToOutboxAsync>d__23")]
protected virtual Task`1<bool> AddToOutboxAsync(Type eventType, object eventData);
    protected virtual Task OnAddToOutboxAsync(string eventName, Type eventType, object eventData);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<AddToInboxAsync>d__25")]
protected Task`1<bool> AddToInboxAsync(string messageId, string eventName, Type eventType, object eventData, string correlationId);
    protected abstract virtual Byte[] Serialize(object eventData);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<TriggerHandlersDirectAsync>d__27")]
protected virtual Task TriggerHandlersDirectAsync(Type eventType, object eventData);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<TriggerHandlersFromInboxAsync>d__28")]
protected virtual Task TriggerHandlersFromInboxAsync(Type eventType, object eventData, List`1<Exception> exceptions, InboxConfig inboxConfig);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<TriggerDistributedEventSentAsync>d__29")]
public virtual Task TriggerDistributedEventSentAsync(DistributedEventSent distributedEvent);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.DistributedEventBusBase/<TriggerDistributedEventReceivedAsync>d__30")]
public virtual Task TriggerDistributedEventReceivedAsync(DistributedEventReceived distributedEvent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.InboxProcessManager : object {
    [CompilerGeneratedAttribute]
private AbpDistributedEventBusOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IInboxProcessor> <Processors>k__BackingField;
    protected AbpDistributedEventBusOptions Options { get; }
    protected IServiceProvider ServiceProvider { get; }
    protected List`1<IInboxProcessor> Processors { get; }
    public InboxProcessManager(IOptions`1<AbpDistributedEventBusOptions> options, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
protected AbpDistributedEventBusOptions get_Options();
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
protected List`1<IInboxProcessor> get_Processors();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.InboxProcessManager/<StartAsync>d__10")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.InboxProcessManager/<StopAsync>d__11")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.InboxProcessor : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpAsyncTimer <Timer>k__BackingField;
    [CompilerGeneratedAttribute]
private IDistributedEventBus <DistributedEventBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpDistributedLock <DistributedLock>k__BackingField;
    [CompilerGeneratedAttribute]
private IUnitOfWorkManager <UnitOfWorkManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IClock <Clock>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventInbox <Inbox>k__BackingField;
    [CompilerGeneratedAttribute]
private InboxConfig <InboxConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpEventBusBoxesOptions <EventBusBoxesOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <LastCleanTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DistributedLockName>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<InboxProcessor> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationTokenSource <StoppingTokenSource>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <StoppingToken>k__BackingField;
    protected IServiceProvider ServiceProvider { get; }
    protected AbpAsyncTimer Timer { get; }
    protected IDistributedEventBus DistributedEventBus { get; }
    protected IAbpDistributedLock DistributedLock { get; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    protected IClock Clock { get; }
    protected IEventInbox Inbox { get; private set; }
    protected InboxConfig InboxConfig { get; private set; }
    protected AbpEventBusBoxesOptions EventBusBoxesOptions { get; }
    protected Nullable`1<DateTime> LastCleanTime { get; protected set; }
    protected string DistributedLockName { get; private set; }
    public ILogger`1<InboxProcessor> Logger { get; public set; }
    protected CancellationTokenSource StoppingTokenSource { get; }
    protected CancellationToken StoppingToken { get; }
    public InboxProcessor(IServiceProvider serviceProvider, AbpAsyncTimer timer, IDistributedEventBus distributedEventBus, IAbpDistributedLock distributedLock, IUnitOfWorkManager unitOfWorkManager, IClock clock, IOptions`1<AbpEventBusBoxesOptions> eventBusBoxesOptions);
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
protected AbpAsyncTimer get_Timer();
    [CompilerGeneratedAttribute]
protected IDistributedEventBus get_DistributedEventBus();
    [CompilerGeneratedAttribute]
protected IAbpDistributedLock get_DistributedLock();
    [CompilerGeneratedAttribute]
protected IUnitOfWorkManager get_UnitOfWorkManager();
    [CompilerGeneratedAttribute]
protected IClock get_Clock();
    [CompilerGeneratedAttribute]
protected IEventInbox get_Inbox();
    [CompilerGeneratedAttribute]
private void set_Inbox(IEventInbox value);
    [CompilerGeneratedAttribute]
protected InboxConfig get_InboxConfig();
    [CompilerGeneratedAttribute]
private void set_InboxConfig(InboxConfig value);
    [CompilerGeneratedAttribute]
protected AbpEventBusBoxesOptions get_EventBusBoxesOptions();
    [CompilerGeneratedAttribute]
protected Nullable`1<DateTime> get_LastCleanTime();
    [CompilerGeneratedAttribute]
protected void set_LastCleanTime(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
protected string get_DistributedLockName();
    [CompilerGeneratedAttribute]
private void set_DistributedLockName(string value);
    [CompilerGeneratedAttribute]
public ILogger`1<InboxProcessor> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<InboxProcessor> value);
    [CompilerGeneratedAttribute]
protected CancellationTokenSource get_StoppingTokenSource();
    [CompilerGeneratedAttribute]
protected CancellationToken get_StoppingToken();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.InboxProcessor/<TimerOnElapsed>d__48")]
private Task TimerOnElapsed(AbpAsyncTimer arg);
    public sealed virtual Task StartAsync(InboxConfig inboxConfig, CancellationToken cancellationToken);
    public sealed virtual Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.InboxProcessor/<RunAsync>d__51")]
protected virtual Task RunAsync();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.InboxProcessor/<DeleteOldEventsAsync>d__52")]
protected virtual Task DeleteOldEventsAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
[ExposeServicesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.EventBus.Distributed.LocalDistributedEventBus : object {
    private ILocalEventBus _localEventBus;
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpDistributedEventBusOptions <AbpDistributedEventBusOptions>k__BackingField;
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    protected AbpDistributedEventBusOptions AbpDistributedEventBusOptions { get; }
    public LocalDistributedEventBus(ILocalEventBus localEventBus, IServiceScopeFactory serviceScopeFactory, IOptions`1<AbpDistributedEventBusOptions> distributedEventBusOptions);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected AbpDistributedEventBusOptions get_AbpDistributedEventBusOptions();
    public virtual void Subscribe(ITypeList`1<IEventHandler> handlers);
    public virtual IDisposable Subscribe(IDistributedEventHandler`1<TEvent> handler);
    public sealed virtual IDisposable Subscribe(Func`2<TEvent, Task> action);
    public IDisposable Subscribe(ILocalEventHandler`1<TEvent> handler);
    public sealed virtual IDisposable Subscribe();
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandler handler);
    public sealed virtual IDisposable Subscribe(IEventHandlerFactory factory);
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Func`2<TEvent, Task> action);
    public sealed virtual void Unsubscribe(ILocalEventHandler`1<TEvent> handler);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandler handler);
    public sealed virtual void Unsubscribe(IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void UnsubscribeAll();
    public sealed virtual void UnsubscribeAll(Type eventType);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete, bool useOutbox);
    public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete, bool useOutbox);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.NullDistributedEventBus : object {
    [CompilerGeneratedAttribute]
private static NullDistributedEventBus <Instance>k__BackingField;
    public static NullDistributedEventBus Instance { get; }
    private static NullDistributedEventBus();
    [CompilerGeneratedAttribute]
public static NullDistributedEventBus get_Instance();
    public sealed virtual IDisposable Subscribe(Func`2<TEvent, Task> action);
    public sealed virtual IDisposable Subscribe(IDistributedEventHandler`1<TEvent> handler);
    public sealed virtual IDisposable Subscribe();
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandler handler);
    public sealed virtual IDisposable Subscribe(IEventHandlerFactory factory);
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Func`2<TEvent, Task> action);
    public sealed virtual void Unsubscribe(ILocalEventHandler`1<TEvent> handler);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandler handler);
    public sealed virtual void Unsubscribe(IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void UnsubscribeAll();
    public sealed virtual void UnsubscribeAll(Type eventType);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete, bool useOutbox);
    public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete, bool useOutbox);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.OutboxSender : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpAsyncTimer <Timer>k__BackingField;
    [CompilerGeneratedAttribute]
private IDistributedEventBus <DistributedEventBus>k__BackingField;
    [CompilerGeneratedAttribute]
private IAbpDistributedLock <DistributedLock>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventOutbox <Outbox>k__BackingField;
    [CompilerGeneratedAttribute]
private OutboxConfig <OutboxConfig>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpEventBusBoxesOptions <EventBusBoxesOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DistributedLockName>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<OutboxSender> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationTokenSource <StoppingTokenSource>k__BackingField;
    [CompilerGeneratedAttribute]
private CancellationToken <StoppingToken>k__BackingField;
    protected IServiceProvider ServiceProvider { get; }
    protected AbpAsyncTimer Timer { get; }
    protected IDistributedEventBus DistributedEventBus { get; }
    protected IAbpDistributedLock DistributedLock { get; }
    protected IEventOutbox Outbox { get; private set; }
    protected OutboxConfig OutboxConfig { get; private set; }
    protected AbpEventBusBoxesOptions EventBusBoxesOptions { get; }
    protected string DistributedLockName { get; private set; }
    public ILogger`1<OutboxSender> Logger { get; public set; }
    protected CancellationTokenSource StoppingTokenSource { get; }
    protected CancellationToken StoppingToken { get; }
    public OutboxSender(IServiceProvider serviceProvider, AbpAsyncTimer timer, IDistributedEventBus distributedEventBus, IAbpDistributedLock distributedLock, IOptions`1<AbpEventBusBoxesOptions> eventBusBoxesOptions);
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
protected AbpAsyncTimer get_Timer();
    [CompilerGeneratedAttribute]
protected IDistributedEventBus get_DistributedEventBus();
    [CompilerGeneratedAttribute]
protected IAbpDistributedLock get_DistributedLock();
    [CompilerGeneratedAttribute]
protected IEventOutbox get_Outbox();
    [CompilerGeneratedAttribute]
private void set_Outbox(IEventOutbox value);
    [CompilerGeneratedAttribute]
protected OutboxConfig get_OutboxConfig();
    [CompilerGeneratedAttribute]
private void set_OutboxConfig(OutboxConfig value);
    [CompilerGeneratedAttribute]
protected AbpEventBusBoxesOptions get_EventBusBoxesOptions();
    [CompilerGeneratedAttribute]
protected string get_DistributedLockName();
    [CompilerGeneratedAttribute]
private void set_DistributedLockName(string value);
    [CompilerGeneratedAttribute]
public ILogger`1<OutboxSender> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<OutboxSender> value);
    [CompilerGeneratedAttribute]
protected CancellationTokenSource get_StoppingTokenSource();
    [CompilerGeneratedAttribute]
protected CancellationToken get_StoppingToken();
    public virtual Task StartAsync(OutboxConfig outboxConfig, CancellationToken cancellationToken);
    public virtual Task StopAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSender/<TimerOnElapsed>d__40")]
private Task TimerOnElapsed(AbpAsyncTimer arg);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSender/<RunAsync>d__41")]
protected virtual Task RunAsync();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSender/<PublishOutgoingMessagesAsync>d__42")]
protected virtual Task PublishOutgoingMessagesAsync(List`1<OutgoingEventInfo> waitingEvents);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSender/<PublishOutgoingMessagesInBatchAsync>d__43")]
protected virtual Task PublishOutgoingMessagesInBatchAsync(List`1<OutgoingEventInfo> waitingEvents);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Distributed.OutboxSenderManager : object {
    [CompilerGeneratedAttribute]
private AbpDistributedEventBusOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<IOutboxSender> <Senders>k__BackingField;
    protected AbpDistributedEventBusOptions Options { get; }
    protected IServiceProvider ServiceProvider { get; }
    protected List`1<IOutboxSender> Senders { get; }
    public OutboxSenderManager(IOptions`1<AbpDistributedEventBusOptions> options, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
protected AbpDistributedEventBusOptions get_Options();
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
protected List`1<IOutboxSender> get_Senders();
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSenderManager/<StartAsync>d__10")]
public sealed virtual Task StartAsync(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Distributed.OutboxSenderManager/<StopAsync>d__11")]
public sealed virtual Task StopAsync(CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.DistributedEventHandlerMethodExecutor`1 : object {
    public EventHandlerMethodExecutorAsync ExecutorAsync { get; }
    public sealed virtual EventHandlerMethodExecutorAsync get_ExecutorAsync();
    public Task ExecuteAsync(IEventHandler target, TEvent parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.EventBus.EventBusBase : object {
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ServiceScopeFactory>k__BackingField;
    [CompilerGeneratedAttribute]
private ICurrentTenant <CurrentTenant>k__BackingField;
    [CompilerGeneratedAttribute]
private IUnitOfWorkManager <UnitOfWorkManager>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventHandlerInvoker <EventHandlerInvoker>k__BackingField;
    protected IServiceScopeFactory ServiceScopeFactory { get; }
    protected ICurrentTenant CurrentTenant { get; }
    protected IUnitOfWorkManager UnitOfWorkManager { get; }
    protected IEventHandlerInvoker EventHandlerInvoker { get; }
    protected EventBusBase(IServiceScopeFactory serviceScopeFactory, ICurrentTenant currentTenant, IUnitOfWorkManager unitOfWorkManager, IEventHandlerInvoker eventHandlerInvoker);
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ServiceScopeFactory();
    [CompilerGeneratedAttribute]
protected ICurrentTenant get_CurrentTenant();
    [CompilerGeneratedAttribute]
protected IUnitOfWorkManager get_UnitOfWorkManager();
    [CompilerGeneratedAttribute]
protected IEventHandlerInvoker get_EventHandlerInvoker();
    public virtual IDisposable Subscribe(Func`2<TEvent, Task> action);
    public virtual IDisposable Subscribe();
    public virtual IDisposable Subscribe(Type eventType, IEventHandler handler);
    public virtual IDisposable Subscribe(IEventHandlerFactory factory);
    public abstract virtual IDisposable Subscribe(Type eventType, IEventHandlerFactory factory);
    public abstract virtual void Unsubscribe(Func`2<TEvent, Task> action);
    public virtual void Unsubscribe(ILocalEventHandler`1<TEvent> handler);
    public abstract virtual void Unsubscribe(Type eventType, IEventHandler handler);
    public virtual void Unsubscribe(IEventHandlerFactory factory);
    public abstract virtual void Unsubscribe(Type eventType, IEventHandlerFactory factory);
    public virtual void UnsubscribeAll();
    public abstract virtual void UnsubscribeAll(Type eventType);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.EventBusBase/<PublishAsync>d__26")]
public virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
    protected abstract virtual Task PublishToEventBusAsync(Type eventType, object eventData);
    protected abstract virtual void AddToUnitOfWork(IUnitOfWork unitOfWork, UnitOfWorkEventRecord eventRecord);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.EventBusBase/<TriggerHandlersAsync>d__29")]
public virtual Task TriggerHandlersAsync(Type eventType, object eventData);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.EventBusBase/<TriggerHandlersAsync>d__30")]
protected virtual Task TriggerHandlersAsync(Type eventType, object eventData, List`1<Exception> exceptions, InboxConfig inboxConfig);
    protected void ThrowOriginalExceptions(Type eventType, List`1<Exception> exceptions);
    protected virtual void SubscribeHandlers(ITypeList`1<IEventHandler> handlers);
    protected abstract virtual IEnumerable`1<EventTypeWithEventHandlerFactories> GetHandlerFactories(Type eventType);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.EventBusBase/<TriggerHandlerAsync>d__34")]
protected virtual Task TriggerHandlerAsync(IEventHandlerFactory asyncHandlerFactory, Type eventType, object eventData, List`1<Exception> exceptions, InboxConfig inboxConfig);
    protected virtual Task InvokeEventHandlerAsync(IEventHandler eventHandler, object eventData, Type eventType);
    protected virtual Nullable`1<Guid> GetEventDataTenantId(object eventData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.EventHandlerDisposeWrapper : object {
    [CompilerGeneratedAttribute]
private IEventHandler <EventHandler>k__BackingField;
    [NullableAttribute("2")]
private Action _disposeAction;
    public IEventHandler EventHandler { get; }
    public EventHandlerDisposeWrapper(IEventHandler eventHandler, Action disposeAction);
    [CompilerGeneratedAttribute]
public sealed virtual IEventHandler get_EventHandler();
    public sealed virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.EventHandlerFactoryUnregistrar : object {
    private IEventBus _eventBus;
    private Type _eventType;
    private IEventHandlerFactory _factory;
    public EventHandlerFactoryUnregistrar(IEventBus eventBus, Type eventType, IEventHandlerFactory factory);
    public sealed virtual void Dispose();
}
public class Volo.Abp.EventBus.EventHandlerInvoker : object {
    [NullableAttribute("1")]
private ConcurrentDictionary`2<string, EventHandlerInvokerCacheItem> _cache;
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.EventBus.EventHandlerInvoker/<InvokeAsync>d__2")]
public sealed virtual Task InvokeAsync(IEventHandler eventHandler, object eventData, Type eventType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.EventHandlerInvokerCacheItem : object {
    [CompilerGeneratedAttribute]
private IEventHandlerMethodExecutor <Local>k__BackingField;
    [CompilerGeneratedAttribute]
private IEventHandlerMethodExecutor <Distributed>k__BackingField;
    public IEventHandlerMethodExecutor Local { get; public set; }
    public IEventHandlerMethodExecutor Distributed { get; public set; }
    [CompilerGeneratedAttribute]
public IEventHandlerMethodExecutor get_Local();
    [CompilerGeneratedAttribute]
public void set_Local(IEventHandlerMethodExecutor value);
    [CompilerGeneratedAttribute]
public IEventHandlerMethodExecutor get_Distributed();
    [CompilerGeneratedAttribute]
public void set_Distributed(IEventHandlerMethodExecutor value);
}
public class Volo.Abp.EventBus.EventHandlerMethodExecutorAsync : MulticastDelegate {
    public EventHandlerMethodExecutorAsync(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual Task Invoke(IEventHandler target, object parameter);
    public virtual IAsyncResult BeginInvoke(IEventHandler target, object parameter, AsyncCallback callback, object object);
    public virtual Task EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.EventBus.IEventHandlerMethodExecutor {
    public EventHandlerMethodExecutorAsync ExecutorAsync { get; }
    public abstract virtual EventHandlerMethodExecutorAsync get_ExecutorAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.IocEventHandlerFactory : object {
    [CompilerGeneratedAttribute]
private Type <HandlerType>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceScopeFactory <ScopeFactory>k__BackingField;
    public Type HandlerType { get; }
    protected IServiceScopeFactory ScopeFactory { get; }
    public IocEventHandlerFactory(IServiceScopeFactory scopeFactory, Type handlerType);
    [CompilerGeneratedAttribute]
public Type get_HandlerType();
    [CompilerGeneratedAttribute]
protected IServiceScopeFactory get_ScopeFactory();
    public sealed virtual IEventHandlerDisposeWrapper GetHandler();
    public sealed virtual bool IsInFactories(List`1<IEventHandlerFactory> handlerFactories);
    public sealed virtual void Dispose();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <IsInFactories>b__8_0(IocEventHandlerFactory f);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Local.AbpLocalEventBusOptions : object {
    [CompilerGeneratedAttribute]
private ITypeList`1<IEventHandler> <Handlers>k__BackingField;
    public ITypeList`1<IEventHandler> Handlers { get; }
    [CompilerGeneratedAttribute]
public ITypeList`1<IEventHandler> get_Handlers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExposeServicesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.EventBus.Local.LocalEventBus : EventBusBase {
    [CompilerGeneratedAttribute]
private ILogger`1<LocalEventBus> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpLocalEventBusOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Type, List`1<IEventHandlerFactory>> <HandlerFactories>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<Type, object, Task> <OnEventHandleInvoking>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`3<Type, object, Task> <OnPublishing>k__BackingField;
    public ILogger`1<LocalEventBus> Logger { get; public set; }
    protected AbpLocalEventBusOptions Options { get; }
    protected ConcurrentDictionary`2<Type, List`1<IEventHandlerFactory>> HandlerFactories { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Func`3<Type, object, Task> OnEventHandleInvoking { get; internal set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal Func`3<Type, object, Task> OnPublishing { get; internal set; }
    public LocalEventBus(IOptions`1<AbpLocalEventBusOptions> options, IServiceScopeFactory serviceScopeFactory, ICurrentTenant currentTenant, IUnitOfWorkManager unitOfWorkManager, IEventHandlerInvoker eventHandlerInvoker);
    [CompilerGeneratedAttribute]
public ILogger`1<LocalEventBus> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<LocalEventBus> value);
    [CompilerGeneratedAttribute]
protected AbpLocalEventBusOptions get_Options();
    [CompilerGeneratedAttribute]
protected ConcurrentDictionary`2<Type, List`1<IEventHandlerFactory>> get_HandlerFactories();
    public virtual IDisposable Subscribe(ILocalEventHandler`1<TEvent> handler);
    public virtual IDisposable Subscribe(Type eventType, IEventHandlerFactory factory);
    public virtual void Unsubscribe(Func`2<TEvent, Task> action);
    public virtual void Unsubscribe(Type eventType, IEventHandler handler);
    public virtual void Unsubscribe(Type eventType, IEventHandlerFactory factory);
    public virtual void UnsubscribeAll(Type eventType);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Local.LocalEventBus/<PublishToEventBusAsync>d__17")]
protected virtual Task PublishToEventBusAsync(Type eventType, object eventData);
    protected virtual void AddToUnitOfWork(IUnitOfWork unitOfWork, UnitOfWorkEventRecord eventRecord);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Local.LocalEventBus/<PublishAsync>d__19")]
public virtual Task PublishAsync(LocalEventMessage localEventMessage);
    protected virtual IEnumerable`1<EventTypeWithEventHandlerFactories> GetHandlerFactories(Type eventType);
    private List`1<IEventHandlerFactory> GetOrCreateHandlerFactories(Type eventType);
    private static bool ShouldTriggerEventForHandler(Type targetEventType, Type handlerEventType);
    [CompilerGeneratedAttribute]
internal Func`3<Type, object, Task> get_OnEventHandleInvoking();
    [CompilerGeneratedAttribute]
internal void set_OnEventHandleInvoking(Func`3<Type, object, Task> value);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Local.LocalEventBus/<InvokeEventHandlerAsync>d__27")]
protected virtual Task InvokeEventHandlerAsync(IEventHandler eventHandler, object eventData, Type eventType);
    [CompilerGeneratedAttribute]
internal Func`3<Type, object, Task> get_OnPublishing();
    [CompilerGeneratedAttribute]
internal void set_OnPublishing(Func`3<Type, object, Task> value);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.Local.LocalEventBus/<PublishAsync>d__32")]
public virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private Task <>n__0(IEventHandler eventHandler, object eventData, Type eventType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Local.LocalEventMessage : object {
    [CompilerGeneratedAttribute]
private Guid <MessageId>k__BackingField;
    [CompilerGeneratedAttribute]
private object <EventData>k__BackingField;
    [CompilerGeneratedAttribute]
private Type <EventType>k__BackingField;
    public Guid MessageId { get; }
    public object EventData { get; }
    public Type EventType { get; }
    public LocalEventMessage(Guid messageId, object eventData, Type eventType);
    [CompilerGeneratedAttribute]
public Guid get_MessageId();
    [CompilerGeneratedAttribute]
public object get_EventData();
    [CompilerGeneratedAttribute]
public Type get_EventType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.Local.NullLocalEventBus : object {
    [CompilerGeneratedAttribute]
private static NullLocalEventBus <Instance>k__BackingField;
    public static NullLocalEventBus Instance { get; }
    private static NullLocalEventBus();
    [CompilerGeneratedAttribute]
public static NullLocalEventBus get_Instance();
    public sealed virtual IDisposable Subscribe(Func`2<TEvent, Task> action);
    public sealed virtual IDisposable Subscribe(ILocalEventHandler`1<TEvent> handler);
    public sealed virtual IDisposable Subscribe();
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandler handler);
    public sealed virtual IDisposable Subscribe(IEventHandlerFactory factory);
    public sealed virtual IDisposable Subscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Func`2<TEvent, Task> action);
    public sealed virtual void Unsubscribe(ILocalEventHandler`1<TEvent> handler);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandler handler);
    public sealed virtual void Unsubscribe(IEventHandlerFactory factory);
    public sealed virtual void Unsubscribe(Type eventType, IEventHandlerFactory factory);
    public sealed virtual void UnsubscribeAll();
    public sealed virtual void UnsubscribeAll(Type eventType);
    public sealed virtual Task PublishAsync(TEvent eventData, bool onUnitOfWorkComplete);
    public sealed virtual Task PublishAsync(Type eventType, object eventData, bool onUnitOfWorkComplete);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.LocalEventHandlerMethodExecutor`1 : object {
    public EventHandlerMethodExecutorAsync ExecutorAsync { get; }
    public sealed virtual EventHandlerMethodExecutorAsync get_ExecutorAsync();
    public Task ExecuteAsync(IEventHandler target, TEvent parameters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.SingleInstanceHandlerFactory : object {
    [CompilerGeneratedAttribute]
private IEventHandler <HandlerInstance>k__BackingField;
    public IEventHandler HandlerInstance { get; }
    public SingleInstanceHandlerFactory(IEventHandler handler);
    [CompilerGeneratedAttribute]
public IEventHandler get_HandlerInstance();
    public sealed virtual IEventHandlerDisposeWrapper GetHandler();
    public sealed virtual bool IsInFactories(List`1<IEventHandlerFactory> handlerFactories);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <IsInFactories>b__5_0(SingleInstanceHandlerFactory f);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.EventBus.TransientEventHandlerFactory : object {
    [CompilerGeneratedAttribute]
private Type <HandlerType>k__BackingField;
    public Type HandlerType { get; }
    public TransientEventHandlerFactory(Type handlerType);
    [CompilerGeneratedAttribute]
public Type get_HandlerType();
    public virtual IEventHandlerDisposeWrapper GetHandler();
    public sealed virtual bool IsInFactories(List`1<IEventHandlerFactory> handlerFactories);
    protected virtual IEventHandler CreateHandler();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <IsInFactories>b__5_0(TransientEventHandlerFactory f);
}
public class Volo.Abp.EventBus.TransientEventHandlerFactory`1 : TransientEventHandlerFactory {
    [NullableContextAttribute("1")]
protected virtual IEventHandler CreateHandler();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
public class Volo.Abp.EventBus.UnitOfWorkEventPublisher : object {
    private ILocalEventBus _localEventBus;
    private IDistributedEventBus _distributedEventBus;
    public UnitOfWorkEventPublisher(ILocalEventBus localEventBus, IDistributedEventBus distributedEventBus);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.UnitOfWorkEventPublisher/<PublishLocalEventsAsync>d__3")]
public sealed virtual Task PublishLocalEventsAsync(IEnumerable`1<UnitOfWorkEventRecord> localEvents);
    [AsyncStateMachineAttribute("Volo.Abp.EventBus.UnitOfWorkEventPublisher/<PublishDistributedEventsAsync>d__4")]
public sealed virtual Task PublishDistributedEventsAsync(IEnumerable`1<UnitOfWorkEventRecord> distributedEvents);
}
internal class VoloAbpEventBus_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
