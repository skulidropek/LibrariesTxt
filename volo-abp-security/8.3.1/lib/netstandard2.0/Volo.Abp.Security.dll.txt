[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class System.Security.Principal.AbpClaimsIdentityExtensions : object {
    [ExtensionAttribute]
public static Nullable`1<Guid> FindUserId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindUserId(IIdentity identity);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindTenantId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindTenantId(IIdentity identity);
    [ExtensionAttribute]
public static string FindClientId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static string FindClientId(IIdentity identity);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindEditionId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindEditionId(IIdentity identity);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorTenantId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorTenantId(IIdentity identity);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorUserId(ClaimsPrincipal principal);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorUserId(IIdentity identity);
    [ExtensionAttribute]
public static ClaimsIdentity AddIfNotContains(ClaimsIdentity claimsIdentity, Claim claim);
    [ExtensionAttribute]
public static ClaimsIdentity RemoveAll(ClaimsIdentity claimsIdentity, string claimType);
    [ExtensionAttribute]
public static ClaimsIdentity AddOrReplace(ClaimsIdentity claimsIdentity, Claim claim);
    [ExtensionAttribute]
public static ClaimsPrincipal AddIdentityIfNotContains(ClaimsPrincipal principal, ClaimsIdentity identity);
    [ExtensionAttribute]
public static string FindSessionId(IIdentity identity);
    [ExtensionAttribute]
public static string FindSessionId(ClaimsPrincipal principal);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.Authorization.AbpAuthorizationException : AbpException {
    [CompilerGeneratedAttribute]
private LogLevel <LogLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Code>k__BackingField;
    public LogLevel LogLevel { get; public set; }
    public string Code { get; }
    [NullableContextAttribute("1")]
public AbpAuthorizationException(string message);
    [NullableContextAttribute("1")]
public AbpAuthorizationException(string message, Exception innerException);
    public AbpAuthorizationException(string message, string code, Exception innerException);
    [CompilerGeneratedAttribute]
public sealed virtual LogLevel get_LogLevel();
    [CompilerGeneratedAttribute]
public sealed virtual void set_LogLevel(LogLevel value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Code();
    [NullableContextAttribute("1")]
public AbpAuthorizationException WithData(string name, object value);
}
public class Volo.Abp.Clients.CurrentClient : object {
    [NullableAttribute("1")]
private ICurrentPrincipalAccessor _principalAccessor;
    [NullableAttribute("2")]
public string Id { get; }
    public bool IsAuthenticated { get; }
    [NullableContextAttribute("1")]
public CurrentClient(ICurrentPrincipalAccessor principalAccessor);
    [NullableContextAttribute("2")]
public virtual string get_Id();
    public virtual bool get_IsAuthenticated();
}
[NullableContextAttribute("2")]
public interface Volo.Abp.Clients.ICurrentClient {
    public string Id { get; }
    public bool IsAuthenticated { get; }
    public abstract virtual string get_Id();
    public abstract virtual bool get_IsAuthenticated();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.AbpSecurityModule : AbpModule {
    public virtual void PostConfigureServices(ServiceConfigurationContext context);
    public virtual void ConfigureServices(ServiceConfigurationContext context);
    private static void AutoAddClaimsPrincipalContributors(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Claims.AbpClaimsPrincipalContributorContext : object {
    [CompilerGeneratedAttribute]
private ClaimsPrincipal <ClaimsPrincipal>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    public ClaimsPrincipal ClaimsPrincipal { get; public set; }
    public IServiceProvider ServiceProvider { get; }
    public AbpClaimsPrincipalContributorContext(ClaimsPrincipal claimsIdentity, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
public ClaimsPrincipal get_ClaimsPrincipal();
    [CompilerGeneratedAttribute]
public void set_ClaimsPrincipal(ClaimsPrincipal value);
    [CompilerGeneratedAttribute]
public IServiceProvider get_ServiceProvider();
    public virtual T GetRequiredService();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpClaimsPrincipalFactoryOptions <Options>k__BackingField;
    public static string AuthenticationType { get; }
    protected IServiceProvider ServiceProvider { get; }
    protected AbpClaimsPrincipalFactoryOptions Options { get; }
    public AbpClaimsPrincipalFactory(IServiceProvider serviceProvider, IOptions`1<AbpClaimsPrincipalFactoryOptions> abpClaimOptions);
    public static string get_AuthenticationType();
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
protected AbpClaimsPrincipalFactoryOptions get_Options();
    [AsyncStateMachineAttribute("Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory/<CreateAsync>d__9")]
public virtual Task`1<ClaimsPrincipal> CreateAsync(ClaimsPrincipal existsClaimsPrincipal);
    [AsyncStateMachineAttribute("Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory/<CreateDynamicAsync>d__10")]
public virtual Task`1<ClaimsPrincipal> CreateDynamicAsync(ClaimsPrincipal existsClaimsPrincipal);
    [AsyncStateMachineAttribute("Volo.Abp.Security.Claims.AbpClaimsPrincipalFactory/<InternalCreateAsync>d__11")]
public virtual Task`1<ClaimsPrincipal> InternalCreateAsync(AbpClaimsPrincipalFactoryOptions options, ClaimsPrincipal existsClaimsPrincipal, bool isDynamic);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Claims.AbpClaimsPrincipalFactoryOptions : object {
    [CompilerGeneratedAttribute]
private ITypeList`1<IAbpClaimsPrincipalContributor> <Contributors>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeList`1<IAbpDynamicClaimsPrincipalContributor> <DynamicContributors>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <DynamicClaims>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsRemoteRefreshEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RemoteRefreshUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<string>> <ClaimsMap>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsDynamicClaimsEnabled>k__BackingField;
    public ITypeList`1<IAbpClaimsPrincipalContributor> Contributors { get; }
    public ITypeList`1<IAbpDynamicClaimsPrincipalContributor> DynamicContributors { get; }
    public List`1<string> DynamicClaims { get; }
    public bool IsRemoteRefreshEnabled { get; public set; }
    public string RemoteRefreshUrl { get; public set; }
    public Dictionary`2<string, List`1<string>> ClaimsMap { get; public set; }
    public bool IsDynamicClaimsEnabled { get; public set; }
    [CompilerGeneratedAttribute]
public ITypeList`1<IAbpClaimsPrincipalContributor> get_Contributors();
    [CompilerGeneratedAttribute]
public ITypeList`1<IAbpDynamicClaimsPrincipalContributor> get_DynamicContributors();
    [CompilerGeneratedAttribute]
public List`1<string> get_DynamicClaims();
    [CompilerGeneratedAttribute]
public bool get_IsRemoteRefreshEnabled();
    [CompilerGeneratedAttribute]
public void set_IsRemoteRefreshEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_RemoteRefreshUrl();
    [CompilerGeneratedAttribute]
public void set_RemoteRefreshUrl(string value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, List`1<string>> get_ClaimsMap();
    [CompilerGeneratedAttribute]
public void set_ClaimsMap(Dictionary`2<string, List`1<string>> value);
    [CompilerGeneratedAttribute]
public bool get_IsDynamicClaimsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsDynamicClaimsEnabled(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class Volo.Abp.Security.Claims.AbpClaimTypes : object {
    [CompilerGeneratedAttribute]
private static string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <SurName>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Role>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Email>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <EmailVerified>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <PhoneNumber>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <PhoneNumberVerified>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <EditionId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ImpersonatorTenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ImpersonatorUserId>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ImpersonatorTenantName>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <ImpersonatorUserName>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <Picture>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <RememberMe>k__BackingField;
    [CompilerGeneratedAttribute]
private static string <SessionId>k__BackingField;
    public static string UserName { get; public set; }
    public static string Name { get; public set; }
    public static string SurName { get; public set; }
    public static string UserId { get; public set; }
    public static string Role { get; public set; }
    public static string Email { get; public set; }
    public static string EmailVerified { get; public set; }
    public static string PhoneNumber { get; public set; }
    public static string PhoneNumberVerified { get; public set; }
    public static string TenantId { get; public set; }
    public static string EditionId { get; public set; }
    public static string ClientId { get; public set; }
    public static string ImpersonatorTenantId { get; public set; }
    public static string ImpersonatorUserId { get; public set; }
    public static string ImpersonatorTenantName { get; public set; }
    public static string ImpersonatorUserName { get; public set; }
    public static string Picture { get; public set; }
    public static string RememberMe { get; public set; }
    public static string SessionId { get; public set; }
    private static AbpClaimTypes();
    [CompilerGeneratedAttribute]
public static string get_UserName();
    [CompilerGeneratedAttribute]
public static void set_UserName(string value);
    [CompilerGeneratedAttribute]
public static string get_Name();
    [CompilerGeneratedAttribute]
public static void set_Name(string value);
    [CompilerGeneratedAttribute]
public static string get_SurName();
    [CompilerGeneratedAttribute]
public static void set_SurName(string value);
    [CompilerGeneratedAttribute]
public static string get_UserId();
    [CompilerGeneratedAttribute]
public static void set_UserId(string value);
    [CompilerGeneratedAttribute]
public static string get_Role();
    [CompilerGeneratedAttribute]
public static void set_Role(string value);
    [CompilerGeneratedAttribute]
public static string get_Email();
    [CompilerGeneratedAttribute]
public static void set_Email(string value);
    [CompilerGeneratedAttribute]
public static string get_EmailVerified();
    [CompilerGeneratedAttribute]
public static void set_EmailVerified(string value);
    [CompilerGeneratedAttribute]
public static string get_PhoneNumber();
    [CompilerGeneratedAttribute]
public static void set_PhoneNumber(string value);
    [CompilerGeneratedAttribute]
public static string get_PhoneNumberVerified();
    [CompilerGeneratedAttribute]
public static void set_PhoneNumberVerified(string value);
    [CompilerGeneratedAttribute]
public static string get_TenantId();
    [CompilerGeneratedAttribute]
public static void set_TenantId(string value);
    [CompilerGeneratedAttribute]
public static string get_EditionId();
    [CompilerGeneratedAttribute]
public static void set_EditionId(string value);
    [CompilerGeneratedAttribute]
public static string get_ClientId();
    [CompilerGeneratedAttribute]
public static void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public static string get_ImpersonatorTenantId();
    [CompilerGeneratedAttribute]
public static void set_ImpersonatorTenantId(string value);
    [CompilerGeneratedAttribute]
public static string get_ImpersonatorUserId();
    [CompilerGeneratedAttribute]
public static void set_ImpersonatorUserId(string value);
    [CompilerGeneratedAttribute]
public static string get_ImpersonatorTenantName();
    [CompilerGeneratedAttribute]
public static void set_ImpersonatorTenantName(string value);
    [CompilerGeneratedAttribute]
public static string get_ImpersonatorUserName();
    [CompilerGeneratedAttribute]
public static void set_ImpersonatorUserName(string value);
    [CompilerGeneratedAttribute]
public static string get_Picture();
    [CompilerGeneratedAttribute]
public static void set_Picture(string value);
    [CompilerGeneratedAttribute]
public static string get_RememberMe();
    [CompilerGeneratedAttribute]
public static void set_RememberMe(string value);
    [CompilerGeneratedAttribute]
public static string get_SessionId();
    [CompilerGeneratedAttribute]
public static void set_SessionId(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Claims.AbpDynamicClaim : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    public string Type { get; public set; }
    [NullableAttribute("2")]
public string Value { get; public set; }
    public AbpDynamicClaim(string type, string value);
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Value();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Value(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Claims.AbpDynamicClaimCacheItem : object {
    [CompilerGeneratedAttribute]
private List`1<AbpDynamicClaim> <Claims>k__BackingField;
    public List`1<AbpDynamicClaim> Claims { get; public set; }
    public AbpDynamicClaimCacheItem(List`1<AbpDynamicClaim> claims);
    [CompilerGeneratedAttribute]
public List`1<AbpDynamicClaim> get_Claims();
    [CompilerGeneratedAttribute]
public void set_Claims(List`1<AbpDynamicClaim> value);
    public static string CalculateCacheKey(Guid userId, Nullable`1<Guid> tenantId);
}
public abstract class Volo.Abp.Security.Claims.AbpDynamicClaimsPrincipalContributorBase : object {
    [NullableContextAttribute("1")]
public abstract virtual Task ContributeAsync(AbpClaimsPrincipalContributorContext context);
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.Security.Claims.AbpDynamicClaimsPrincipalContributorBase/<AddDynamicClaimsAsync>d__1")]
protected virtual Task AddDynamicClaimsAsync(AbpClaimsPrincipalContributorContext context, ClaimsIdentity identity, List`1<AbpDynamicClaim> dynamicClaims);
    [NullableContextAttribute("1")]
protected virtual Task MapClaimAsync(ClaimsIdentity identity, List`1<AbpDynamicClaim> dynamicClaims, string targetClaimType, String[] sourceClaimTypes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Security.Claims.CurrentPrincipalAccessorBase : object {
    private AsyncLocal`1<ClaimsPrincipal> _currentPrincipal;
    public ClaimsPrincipal Principal { get; }
    public sealed virtual ClaimsPrincipal get_Principal();
    protected abstract virtual ClaimsPrincipal GetClaimsPrincipal();
    public virtual IDisposable Change(ClaimsPrincipal principal);
    private IDisposable SetCurrent(ClaimsPrincipal principal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Security.Claims.CurrentPrincipalAccessorExtensions : object {
    [ExtensionAttribute]
public static IDisposable Change(ICurrentPrincipalAccessor currentPrincipalAccessor, Claim claim);
    [ExtensionAttribute]
public static IDisposable Change(ICurrentPrincipalAccessor currentPrincipalAccessor, IEnumerable`1<Claim> claims);
    [ExtensionAttribute]
public static IDisposable Change(ICurrentPrincipalAccessor currentPrincipalAccessor, ClaimsIdentity claimsIdentity);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Security.Claims.IAbpClaimsPrincipalContributor {
    public abstract virtual Task ContributeAsync(AbpClaimsPrincipalContributorContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Security.Claims.IAbpClaimsPrincipalFactory {
    public abstract virtual Task`1<ClaimsPrincipal> CreateAsync(ClaimsPrincipal existsClaimsPrincipal);
    public abstract virtual Task`1<ClaimsPrincipal> CreateDynamicAsync(ClaimsPrincipal existsClaimsPrincipal);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Security.Claims.IAbpDynamicClaimsPrincipalContributor {
    public abstract virtual Task ContributeAsync(AbpClaimsPrincipalContributorContext context);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Security.Claims.ICurrentPrincipalAccessor {
    public ClaimsPrincipal Principal { get; }
    public abstract virtual ClaimsPrincipal get_Principal();
    public abstract virtual IDisposable Change(ClaimsPrincipal principal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Security.Claims.RemoteDynamicClaimsPrincipalContributorBase`2 : AbpDynamicClaimsPrincipalContributorBase {
    [AsyncStateMachineAttribute("Volo.Abp.Security.Claims.RemoteDynamicClaimsPrincipalContributorBase`2/<ContributeAsync>d__0")]
public virtual Task ContributeAsync(AbpClaimsPrincipalContributorContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Security.Claims.RemoteDynamicClaimsPrincipalContributorCacheBase`1 : object {
    [CompilerGeneratedAttribute]
private ILogger`1<TContributorCache> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private IOptions`1<AbpClaimsPrincipalFactoryOptions> <AbpClaimsPrincipalFactoryOptions>k__BackingField;
    public ILogger`1<TContributorCache> Logger { get; public set; }
    protected IOptions`1<AbpClaimsPrincipalFactoryOptions> AbpClaimsPrincipalFactoryOptions { get; }
    protected RemoteDynamicClaimsPrincipalContributorCacheBase`1(IOptions`1<AbpClaimsPrincipalFactoryOptions> abpClaimsPrincipalFactoryOptions);
    [CompilerGeneratedAttribute]
public ILogger`1<TContributorCache> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<TContributorCache> value);
    [CompilerGeneratedAttribute]
protected IOptions`1<AbpClaimsPrincipalFactoryOptions> get_AbpClaimsPrincipalFactoryOptions();
    [AsyncStateMachineAttribute("Volo.Abp.Security.Claims.RemoteDynamicClaimsPrincipalContributorCacheBase`1/<GetAsync>d__8")]
public Task`1<AbpDynamicClaimCacheItem> GetAsync(Guid userId, Nullable`1<Guid> tenantId);
    protected abstract virtual Task`1<AbpDynamicClaimCacheItem> GetCacheAsync(Guid userId, Nullable`1<Guid> tenantId);
    protected abstract virtual Task RefreshAsync(Guid userId, Nullable`1<Guid> tenantId);
}
public class Volo.Abp.Security.Claims.ThreadCurrentPrincipalAccessor : CurrentPrincipalAccessorBase {
    [NullableContextAttribute("1")]
protected virtual ClaimsPrincipal GetClaimsPrincipal();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Encryption.AbpStringEncryptionOptions : object {
    [CompilerGeneratedAttribute]
private int <Keysize>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DefaultPassPhrase>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <InitVectorBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <DefaultSalt>k__BackingField;
    public int Keysize { get; public set; }
    public string DefaultPassPhrase { get; public set; }
    public Byte[] InitVectorBytes { get; public set; }
    public Byte[] DefaultSalt { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Keysize();
    [CompilerGeneratedAttribute]
public void set_Keysize(int value);
    [CompilerGeneratedAttribute]
public string get_DefaultPassPhrase();
    [CompilerGeneratedAttribute]
public void set_DefaultPassPhrase(string value);
    [CompilerGeneratedAttribute]
public Byte[] get_InitVectorBytes();
    [CompilerGeneratedAttribute]
public void set_InitVectorBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public Byte[] get_DefaultSalt();
    [CompilerGeneratedAttribute]
public void set_DefaultSalt(Byte[] value);
}
[NullableContextAttribute("2")]
public interface Volo.Abp.Security.Encryption.IStringEncryptionService {
    public abstract virtual string Encrypt(string plainText, string passPhrase, Byte[] salt);
    public abstract virtual string Decrypt(string cipherText, string passPhrase, Byte[] salt);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Security.Encryption.StringEncryptionService : object {
    [CompilerGeneratedAttribute]
private AbpStringEncryptionOptions <Options>k__BackingField;
    protected AbpStringEncryptionOptions Options { get; }
    public StringEncryptionService(IOptions`1<AbpStringEncryptionOptions> options);
    [CompilerGeneratedAttribute]
protected AbpStringEncryptionOptions get_Options();
    [NullableContextAttribute("2")]
public virtual string Encrypt(string plainText, string passPhrase, Byte[] salt);
    [NullableContextAttribute("2")]
public virtual string Decrypt(string cipherText, string passPhrase, Byte[] salt);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.SecurityLog.AbpSecurityLogOptions : object {
    [CompilerGeneratedAttribute]
private bool <IsEnabled>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    public bool IsEnabled { get; public set; }
    public string ApplicationName { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_IsEnabled();
    [CompilerGeneratedAttribute]
public void set_IsEnabled(bool value);
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
public void set_ApplicationName(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.SecurityLog.DefaultSecurityLogManager : object {
    [CompilerGeneratedAttribute]
private AbpSecurityLogOptions <SecurityLogOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ISecurityLogStore <SecurityLogStore>k__BackingField;
    protected AbpSecurityLogOptions SecurityLogOptions { get; }
    protected ISecurityLogStore SecurityLogStore { get; }
    public DefaultSecurityLogManager(IOptions`1<AbpSecurityLogOptions> securityLogOptions, ISecurityLogStore securityLogStore);
    [CompilerGeneratedAttribute]
protected AbpSecurityLogOptions get_SecurityLogOptions();
    [CompilerGeneratedAttribute]
protected ISecurityLogStore get_SecurityLogStore();
    [AsyncStateMachineAttribute("Volo.Abp.SecurityLog.DefaultSecurityLogManager/<SaveAsync>d__7")]
public sealed virtual Task SaveAsync(Action`1<SecurityLogInfo> saveAction);
    protected virtual Task`1<SecurityLogInfo> CreateAsync();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.SecurityLog.ISecurityLogManager {
    public abstract virtual Task SaveAsync(Action`1<SecurityLogInfo> saveAction);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.SecurityLog.ISecurityLogStore {
    public abstract virtual Task SaveAsync(SecurityLogInfo securityLogInfo);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.SecurityLog.SecurityLogInfo : object {
    [CompilerGeneratedAttribute]
private string <ApplicationName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Identity>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Action>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, object> <ExtraProperties>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <UserId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <TenantId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TenantName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CorrelationId>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ClientIpAddress>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BrowserInfo>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <CreationTime>k__BackingField;
    public string ApplicationName { get; public set; }
    public string Identity { get; public set; }
    public string Action { get; public set; }
    [NullableAttribute("1")]
public Dictionary`2<string, object> ExtraProperties { get; }
    public Nullable`1<Guid> UserId { get; public set; }
    public string UserName { get; public set; }
    public Nullable`1<Guid> TenantId { get; public set; }
    public string TenantName { get; public set; }
    public string ClientId { get; public set; }
    public string CorrelationId { get; public set; }
    public string ClientIpAddress { get; public set; }
    public string BrowserInfo { get; public set; }
    public DateTime CreationTime { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ApplicationName();
    [CompilerGeneratedAttribute]
public void set_ApplicationName(string value);
    [CompilerGeneratedAttribute]
public string get_Identity();
    [CompilerGeneratedAttribute]
public void set_Identity(string value);
    [CompilerGeneratedAttribute]
public string get_Action();
    [CompilerGeneratedAttribute]
public void set_Action(string value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_ExtraProperties();
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_UserId();
    [CompilerGeneratedAttribute]
public void set_UserId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<Guid> get_TenantId();
    [CompilerGeneratedAttribute]
public void set_TenantId(Nullable`1<Guid> value);
    [CompilerGeneratedAttribute]
public string get_TenantName();
    [CompilerGeneratedAttribute]
public void set_TenantName(string value);
    [CompilerGeneratedAttribute]
public string get_ClientId();
    [CompilerGeneratedAttribute]
public void set_ClientId(string value);
    [CompilerGeneratedAttribute]
public string get_CorrelationId();
    [CompilerGeneratedAttribute]
public void set_CorrelationId(string value);
    [CompilerGeneratedAttribute]
public string get_ClientIpAddress();
    [CompilerGeneratedAttribute]
public void set_ClientIpAddress(string value);
    [CompilerGeneratedAttribute]
public string get_BrowserInfo();
    [CompilerGeneratedAttribute]
public void set_BrowserInfo(string value);
    [CompilerGeneratedAttribute]
public DateTime get_CreationTime();
    [CompilerGeneratedAttribute]
public void set_CreationTime(DateTime value);
    [NullableContextAttribute("1")]
public virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.SecurityLog.SimpleSecurityLogStore : object {
    [CompilerGeneratedAttribute]
private ILogger`1<SimpleSecurityLogStore> <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpSecurityLogOptions <SecurityLogOptions>k__BackingField;
    public ILogger`1<SimpleSecurityLogStore> Logger { get; public set; }
    protected AbpSecurityLogOptions SecurityLogOptions { get; }
    public SimpleSecurityLogStore(ILogger`1<SimpleSecurityLogStore> logger, IOptions`1<AbpSecurityLogOptions> securityLogOptions);
    [CompilerGeneratedAttribute]
public ILogger`1<SimpleSecurityLogStore> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<SimpleSecurityLogStore> value);
    [CompilerGeneratedAttribute]
protected AbpSecurityLogOptions get_SecurityLogOptions();
    public sealed virtual Task SaveAsync(SecurityLogInfo securityLogInfo);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Volo.Abp.Users.CurrentUser : object {
    [NullableAttribute("1")]
private static Claim[] EmptyClaimsArray;
    [NullableAttribute("1")]
private ICurrentPrincipalAccessor _principalAccessor;
    public bool IsAuthenticated { get; }
    public Nullable`1<Guid> Id { get; }
    public string UserName { get; }
    public string Name { get; }
    public string SurName { get; }
    public string PhoneNumber { get; }
    public bool PhoneNumberVerified { get; }
    public string Email { get; }
    public bool EmailVerified { get; }
    public Nullable`1<Guid> TenantId { get; }
    [NullableAttribute("1")]
public String[] Roles { get; }
    [NullableContextAttribute("1")]
public CurrentUser(ICurrentPrincipalAccessor principalAccessor);
    private static CurrentUser();
    public virtual bool get_IsAuthenticated();
    public virtual Nullable`1<Guid> get_Id();
    public virtual string get_UserName();
    public virtual string get_Name();
    public virtual string get_SurName();
    public virtual string get_PhoneNumber();
    public virtual bool get_PhoneNumberVerified();
    public virtual string get_Email();
    public virtual bool get_EmailVerified();
    public virtual Nullable`1<Guid> get_TenantId();
    [NullableContextAttribute("1")]
public virtual String[] get_Roles();
    [NullableContextAttribute("1")]
public virtual Claim FindClaim(string claimType);
    [NullableContextAttribute("1")]
public virtual Claim[] FindClaims(string claimType);
    [NullableContextAttribute("1")]
public virtual Claim[] GetAllClaims();
    [NullableContextAttribute("1")]
public virtual bool IsInRole(string roleName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Volo.Abp.Users.CurrentUserExtensions : object {
    [ExtensionAttribute]
public static string FindClaimValue(ICurrentUser currentUser, string claimType);
    [NullableContextAttribute("0")]
[ExtensionAttribute]
public static T FindClaimValue(ICurrentUser currentUser, string claimType);
    [ExtensionAttribute]
public static Guid GetId(ICurrentUser currentUser);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorTenantId(ICurrentUser currentUser);
    [ExtensionAttribute]
public static Nullable`1<Guid> FindImpersonatorUserId(ICurrentUser currentUser);
    [ExtensionAttribute]
public static string FindImpersonatorTenantName(ICurrentUser currentUser);
    [ExtensionAttribute]
public static string FindImpersonatorUserName(ICurrentUser currentUser);
    [ExtensionAttribute]
public static string GetSessionId(ICurrentUser currentUser);
    [ExtensionAttribute]
public static string FindSessionId(ICurrentUser currentUser);
}
[NullableContextAttribute("2")]
public interface Volo.Abp.Users.ICurrentUser {
    public bool IsAuthenticated { get; }
    public Nullable`1<Guid> Id { get; }
    public string UserName { get; }
    public string Name { get; }
    public string SurName { get; }
    public string PhoneNumber { get; }
    public bool PhoneNumberVerified { get; }
    public string Email { get; }
    public bool EmailVerified { get; }
    public Nullable`1<Guid> TenantId { get; }
    [NullableAttribute("1")]
public String[] Roles { get; }
    public abstract virtual bool get_IsAuthenticated();
    public abstract virtual Nullable`1<Guid> get_Id();
    public abstract virtual string get_UserName();
    public abstract virtual string get_Name();
    public abstract virtual string get_SurName();
    public abstract virtual string get_PhoneNumber();
    public abstract virtual bool get_PhoneNumberVerified();
    public abstract virtual string get_Email();
    public abstract virtual bool get_EmailVerified();
    public abstract virtual Nullable`1<Guid> get_TenantId();
    [NullableContextAttribute("1")]
public abstract virtual String[] get_Roles();
    [NullableContextAttribute("1")]
public abstract virtual Claim FindClaim(string claimType);
    [NullableContextAttribute("1")]
public abstract virtual Claim[] FindClaims(string claimType);
    [NullableContextAttribute("1")]
public abstract virtual Claim[] GetAllClaims();
    [NullableContextAttribute("1")]
public abstract virtual bool IsInRole(string roleName);
}
internal class VoloAbpSecurity_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
