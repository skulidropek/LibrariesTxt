[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.AbpSettingOptions : object {
    [CompilerGeneratedAttribute]
private ITypeList`1<ISettingDefinitionProvider> <DefinitionProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private ITypeList`1<ISettingValueProvider> <ValueProviders>k__BackingField;
    [CompilerGeneratedAttribute]
private HashSet`1<string> <DeletedSettings>k__BackingField;
    public ITypeList`1<ISettingDefinitionProvider> DefinitionProviders { get; }
    public ITypeList`1<ISettingValueProvider> ValueProviders { get; }
    public HashSet`1<string> DeletedSettings { get; }
    [CompilerGeneratedAttribute]
public ITypeList`1<ISettingDefinitionProvider> get_DefinitionProviders();
    [CompilerGeneratedAttribute]
public ITypeList`1<ISettingValueProvider> get_ValueProviders();
    [CompilerGeneratedAttribute]
public HashSet`1<string> get_DeletedSettings();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Settings.AbpSettingsModule : AbpModule {
    public virtual void PreConfigureServices(ServiceConfigurationContext context);
    public virtual void ConfigureServices(ServiceConfigurationContext context);
    private static void AutoAddDefinitionProviders(IServiceCollection services);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.ConfigurationSettingValueProvider : object {
    public static string ConfigurationNamePrefix;
    public static string ProviderName;
    [CompilerGeneratedAttribute]
private IConfiguration <Configuration>k__BackingField;
    public string Name { get; }
    protected IConfiguration Configuration { get; }
    public ConfigurationSettingValueProvider(IConfiguration configuration);
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
protected IConfiguration get_Configuration();
    public virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    public sealed virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private SettingValue <GetAllAsync>b__9_0(SettingDefinition x);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.DefaultValueSettingValueProvider : SettingValueProvider {
    public static string ProviderName;
    public string Name { get; }
    public DefaultValueSettingValueProvider(ISettingStore settingStore);
    public virtual string get_Name();
    public virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    public virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.GlobalSettingValueProvider : SettingValueProvider {
    public static string ProviderName;
    public string Name { get; }
    public GlobalSettingValueProvider(ISettingStore settingStore);
    public virtual string get_Name();
    public virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    public virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.IDynamicSettingDefinitionStore {
    public abstract virtual Task`1<SettingDefinition> GetAsync(string name);
    public abstract virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
    public abstract virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingDefinitionContext {
    public abstract virtual SettingDefinition GetOrNull(string name);
    public abstract virtual IReadOnlyList`1<SettingDefinition> GetAll();
    public abstract virtual void Add(SettingDefinition[] definitions);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingDefinitionManager {
    public abstract virtual Task`1<SettingDefinition> GetAsync(string name);
    public abstract virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
    public abstract virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingDefinitionProvider {
    public abstract virtual void Define(ISettingDefinitionContext context);
}
[NullableContextAttribute("2")]
public interface Volo.Abp.Settings.ISettingEncryptionService {
    public abstract virtual string Encrypt(SettingDefinition settingDefinition, string plainValue);
    public abstract virtual string Decrypt(SettingDefinition settingDefinition, string encryptedValue);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingProvider {
    public abstract virtual Task`1<string> GetOrNullAsync(string name);
    public abstract virtual Task`1<List`1<SettingValue>> GetAllAsync(String[] names);
    public abstract virtual Task`1<List`1<SettingValue>> GetAllAsync();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingStore {
    [NullableContextAttribute("2")]
public abstract virtual Task`1<string> GetOrNullAsync(string name, string providerName, string providerKey);
    public abstract virtual Task`1<List`1<SettingValue>> GetAllAsync(String[] names, string providerName, string providerKey);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingValueProvider {
    public string Name { get; }
    public abstract virtual string get_Name();
    public abstract virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    public abstract virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.ISettingValueProviderManager {
    public List`1<ISettingValueProvider> Providers { get; }
    public abstract virtual List`1<ISettingValueProvider> get_Providers();
}
[NullableContextAttribute("1")]
public interface Volo.Abp.Settings.IStaticSettingDefinitionStore {
    public abstract virtual Task`1<SettingDefinition> GetAsync(string name);
    public abstract virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
    public abstract virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.NullDynamicSettingDefinitionStore : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Task`1<SettingDefinition> CachedNullableSettingResult;
    private static Task`1<SettingDefinition> CachedSettingResult;
    private static Task`1<IReadOnlyList`1<SettingDefinition>> CachedSettingsResult;
    private static NullDynamicSettingDefinitionStore();
    public sealed virtual Task`1<SettingDefinition> GetAsync(string name);
    public sealed virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
    public sealed virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[DependencyAttribute]
public class Volo.Abp.Settings.NullSettingStore : object {
    [CompilerGeneratedAttribute]
private ILogger`1<NullSettingStore> <Logger>k__BackingField;
    public ILogger`1<NullSettingStore> Logger { get; public set; }
    [CompilerGeneratedAttribute]
public ILogger`1<NullSettingStore> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<NullSettingStore> value);
    [NullableContextAttribute("2")]
public sealed virtual Task`1<string> GetOrNullAsync(string name, string providerName, string providerKey);
    public sealed virtual Task`1<List`1<SettingValue>> GetAllAsync(String[] names, string providerName, string providerKey);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingDefinition : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    private ILocalizableString _displayName;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ILocalizableString <Description>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DefaultValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsVisibleToClients>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Providers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsInherited>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, object> <Properties>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsEncrypted>k__BackingField;
    public string Name { get; }
    public ILocalizableString DisplayName { get; public set; }
    [NullableAttribute("2")]
public ILocalizableString Description { get; public set; }
    [NullableAttribute("2")]
public string DefaultValue { get; public set; }
    public bool IsVisibleToClients { get; public set; }
    public List`1<string> Providers { get; }
    public bool IsInherited { get; public set; }
    public Dictionary`2<string, object> Properties { get; }
    public bool IsEncrypted { get; public set; }
    [NullableContextAttribute("2")]
public SettingDefinition(string name, string defaultValue, ILocalizableString displayName, ILocalizableString description, bool isVisibleToClients, bool isInherited, bool isEncrypted);
    [CompilerGeneratedAttribute]
public string get_Name();
    public ILocalizableString get_DisplayName();
    public void set_DisplayName(ILocalizableString value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ILocalizableString get_Description();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Description(ILocalizableString value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_DefaultValue();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_DefaultValue(string value);
    [CompilerGeneratedAttribute]
public bool get_IsVisibleToClients();
    [CompilerGeneratedAttribute]
public void set_IsVisibleToClients(bool value);
    [CompilerGeneratedAttribute]
public List`1<string> get_Providers();
    [CompilerGeneratedAttribute]
public bool get_IsInherited();
    [CompilerGeneratedAttribute]
public void set_IsInherited(bool value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, object> get_Properties();
    [CompilerGeneratedAttribute]
public bool get_IsEncrypted();
    [CompilerGeneratedAttribute]
public void set_IsEncrypted(bool value);
    public virtual SettingDefinition WithProperty(string key, object value);
    public virtual SettingDefinition WithProviders(String[] providers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingDefinitionContext : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, SettingDefinition> <Settings>k__BackingField;
    protected Dictionary`2<string, SettingDefinition> Settings { get; }
    public SettingDefinitionContext(Dictionary`2<string, SettingDefinition> settings);
    [CompilerGeneratedAttribute]
protected Dictionary`2<string, SettingDefinition> get_Settings();
    public virtual SettingDefinition GetOrNull(string name);
    public virtual IReadOnlyList`1<SettingDefinition> GetAll();
    public virtual void Add(SettingDefinition[] definitions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingDefinitionManager : object {
    protected IStaticSettingDefinitionStore StaticStore;
    protected IDynamicSettingDefinitionStore DynamicStore;
    public SettingDefinitionManager(IStaticSettingDefinitionStore staticStore, IDynamicSettingDefinitionStore dynamicStore);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingDefinitionManager/<GetAsync>d__3")]
public virtual Task`1<SettingDefinition> GetAsync(string name);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingDefinitionManager/<GetOrNullAsync>d__4")]
public virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingDefinitionManager/<GetAllAsync>d__5")]
public virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
}
public abstract class Volo.Abp.Settings.SettingDefinitionProvider : object {
    [NullableContextAttribute("1")]
public abstract virtual void Define(ISettingDefinitionContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingEncryptionService : object {
    [CompilerGeneratedAttribute]
private IStringEncryptionService <StringEncryptionService>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<SettingEncryptionService> <Logger>k__BackingField;
    protected IStringEncryptionService StringEncryptionService { get; }
    public ILogger`1<SettingEncryptionService> Logger { get; public set; }
    public SettingEncryptionService(IStringEncryptionService stringEncryptionService);
    [CompilerGeneratedAttribute]
protected IStringEncryptionService get_StringEncryptionService();
    [CompilerGeneratedAttribute]
public ILogger`1<SettingEncryptionService> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<SettingEncryptionService> value);
    [NullableContextAttribute("2")]
public virtual string Encrypt(SettingDefinition settingDefinition, string plainValue);
    [NullableContextAttribute("2")]
public virtual string Decrypt(SettingDefinition settingDefinition, string encryptedValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingProvider : object {
    [CompilerGeneratedAttribute]
private ISettingDefinitionManager <SettingDefinitionManager>k__BackingField;
    [CompilerGeneratedAttribute]
private ISettingEncryptionService <SettingEncryptionService>k__BackingField;
    [CompilerGeneratedAttribute]
private ISettingValueProviderManager <SettingValueProviderManager>k__BackingField;
    protected ISettingDefinitionManager SettingDefinitionManager { get; }
    protected ISettingEncryptionService SettingEncryptionService { get; }
    protected ISettingValueProviderManager SettingValueProviderManager { get; }
    public SettingProvider(ISettingDefinitionManager settingDefinitionManager, ISettingEncryptionService settingEncryptionService, ISettingValueProviderManager settingValueProviderManager);
    [CompilerGeneratedAttribute]
protected ISettingDefinitionManager get_SettingDefinitionManager();
    [CompilerGeneratedAttribute]
protected ISettingEncryptionService get_SettingEncryptionService();
    [CompilerGeneratedAttribute]
protected ISettingValueProviderManager get_SettingValueProviderManager();
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProvider/<GetOrNullAsync>d__10")]
public virtual Task`1<string> GetOrNullAsync(string name);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProvider/<GetAllAsync>d__11")]
public virtual Task`1<List`1<SettingValue>> GetAllAsync(String[] names);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProvider/<GetAllAsync>d__12")]
public virtual Task`1<List`1<SettingValue>> GetAllAsync();
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProvider/<GetOrNullValueFromProvidersAsync>d__13")]
protected virtual Task`1<string> GetOrNullValueFromProvidersAsync(IEnumerable`1<ISettingValueProvider> providers, SettingDefinition setting);
}
[ExtensionAttribute]
public static class Volo.Abp.Settings.SettingProviderExtensions : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProviderExtensions/<IsTrueAsync>d__0")]
[ExtensionAttribute]
public static Task`1<bool> IsTrueAsync(ISettingProvider settingProvider, string name);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.SettingProviderExtensions/<GetAsync>d__1`1")]
[ExtensionAttribute]
public static Task`1<T> GetAsync(ISettingProvider settingProvider, string name, T defaultValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Settings.SettingValue : NameValue`1<string> {
    public SettingValue(string name, string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class Volo.Abp.Settings.SettingValueProvider : object {
    [CompilerGeneratedAttribute]
private ISettingStore <SettingStore>k__BackingField;
    public string Name { get; }
    protected ISettingStore SettingStore { get; }
    protected SettingValueProvider(ISettingStore settingStore);
    public abstract virtual string get_Name();
    [CompilerGeneratedAttribute]
protected ISettingStore get_SettingStore();
    public abstract virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    public abstract virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.SettingValueProviderManager : object {
    [CompilerGeneratedAttribute]
private AbpSettingOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    private Lazy`1<List`1<ISettingValueProvider>> _lazyProviders;
    public List`1<ISettingValueProvider> Providers { get; }
    protected AbpSettingOptions Options { get; }
    protected IServiceProvider ServiceProvider { get; }
    public SettingValueProviderManager(IServiceProvider serviceProvider, IOptions`1<AbpSettingOptions> options);
    public sealed virtual List`1<ISettingValueProvider> get_Providers();
    [CompilerGeneratedAttribute]
protected AbpSettingOptions get_Options();
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    protected virtual List`1<ISettingValueProvider> GetProviders();
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private ISettingValueProvider <GetProviders>b__10_0(Type type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.StaticSettingDefinitionStore : object {
    [CompilerGeneratedAttribute]
private Lazy`1<IDictionary`2<string, SettingDefinition>> <SettingDefinitions>k__BackingField;
    [CompilerGeneratedAttribute]
private AbpSettingOptions <Options>k__BackingField;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    protected Lazy`1<IDictionary`2<string, SettingDefinition>> SettingDefinitions { get; }
    protected AbpSettingOptions Options { get; }
    protected IServiceProvider ServiceProvider { get; }
    public StaticSettingDefinitionStore(IOptions`1<AbpSettingOptions> options, IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
protected Lazy`1<IDictionary`2<string, SettingDefinition>> get_SettingDefinitions();
    [CompilerGeneratedAttribute]
protected AbpSettingOptions get_Options();
    [CompilerGeneratedAttribute]
protected IServiceProvider get_ServiceProvider();
    [AsyncStateMachineAttribute("Volo.Abp.Settings.StaticSettingDefinitionStore/<GetAsync>d__10")]
public virtual Task`1<SettingDefinition> GetAsync(string name);
    public virtual Task`1<IReadOnlyList`1<SettingDefinition>> GetAllAsync();
    public virtual Task`1<SettingDefinition> GetOrNullAsync(string name);
    protected virtual IDictionary`2<string, SettingDefinition> CreateSettingDefinitions();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Volo.Abp.Settings.UserSettingValueProvider : SettingValueProvider {
    public static string ProviderName;
    [CompilerGeneratedAttribute]
private ICurrentUser <CurrentUser>k__BackingField;
    public string Name { get; }
    protected ICurrentUser CurrentUser { get; }
    public UserSettingValueProvider(ISettingStore settingStore, ICurrentUser currentUser);
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
protected ICurrentUser get_CurrentUser();
    [AsyncStateMachineAttribute("Volo.Abp.Settings.UserSettingValueProvider/<GetOrNullAsync>d__7")]
public virtual Task`1<string> GetOrNullAsync(SettingDefinition setting);
    [AsyncStateMachineAttribute("Volo.Abp.Settings.UserSettingValueProvider/<GetAllAsync>d__8")]
public virtual Task`1<List`1<SettingValue>> GetAllAsync(SettingDefinition[] settings);
}
internal class VoloAbpSettings_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
