[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[ExtensionAttribute]
public static class Volo.Abp.Users.AbpUserExtensions : object {
    [ExtensionAttribute]
public static IUserData ToAbpUserData(IUser user);
}
[DependsOnAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Volo.Abp.Users.AbpUsersDomainModule : AbpModule {
}
public interface Volo.Abp.Users.IUpdateUserData {
    public abstract virtual bool Update(IUserData user);
}
public interface Volo.Abp.Users.IUser {
    public string UserName { get; }
    public string Email { get; }
    public string Name { get; }
    public string Surname { get; }
    public bool IsActive { get; }
    public bool EmailConfirmed { get; }
    public string PhoneNumber { get; }
    public bool PhoneNumberConfirmed { get; }
    public abstract virtual string get_UserName();
    public abstract virtual string get_Email();
    public abstract virtual string get_Name();
    public abstract virtual string get_Surname();
    public abstract virtual bool get_IsActive();
    public abstract virtual bool get_EmailConfirmed();
    public abstract virtual string get_PhoneNumber();
    public abstract virtual bool get_PhoneNumberConfirmed();
}
public interface Volo.Abp.Users.IUserLookupService`1 {
    public abstract virtual Task`1<TUser> FindByIdAsync(Guid id, CancellationToken cancellationToken);
    public abstract virtual Task`1<TUser> FindByUserNameAsync(string userName, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<IUserData>> SearchAsync(string sorting, string filter, int maxResultCount, int skipCount, CancellationToken cancellationToken);
    public abstract virtual Task`1<long> GetCountAsync(string filter, CancellationToken cancellationToken);
}
public interface Volo.Abp.Users.IUserRepository`1 {
    public abstract virtual Task`1<TUser> FindByUserNameAsync(string userName, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TUser>> GetListAsync(IEnumerable`1<Guid> ids, CancellationToken cancellationToken);
    public abstract virtual Task`1<List`1<TUser>> SearchAsync(string sorting, int maxResultCount, int skipCount, string filter, CancellationToken cancellationToken);
    public abstract virtual Task`1<long> GetCountAsync(string filter, CancellationToken cancellationToken);
}
public abstract class Volo.Abp.Users.UserLookupService`2 : object {
    [CompilerGeneratedAttribute]
private bool <SkipExternalLookupIfLocalUserExists>k__BackingField;
    [CompilerGeneratedAttribute]
private IExternalUserLookupServiceProvider <ExternalUserLookupServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private ILogger`1<UserLookupService`2<TUser, TUserRepository>> <Logger>k__BackingField;
    private TUserRepository _userRepository;
    private IUnitOfWorkManager _unitOfWorkManager;
    protected bool SkipExternalLookupIfLocalUserExists { get; protected set; }
    public IExternalUserLookupServiceProvider ExternalUserLookupServiceProvider { get; public set; }
    public ILogger`1<UserLookupService`2<TUser, TUserRepository>> Logger { get; public set; }
    protected UserLookupService`2(TUserRepository userRepository, IUnitOfWorkManager unitOfWorkManager);
    [CompilerGeneratedAttribute]
protected bool get_SkipExternalLookupIfLocalUserExists();
    [CompilerGeneratedAttribute]
protected void set_SkipExternalLookupIfLocalUserExists(bool value);
    [CompilerGeneratedAttribute]
public IExternalUserLookupServiceProvider get_ExternalUserLookupServiceProvider();
    [CompilerGeneratedAttribute]
public void set_ExternalUserLookupServiceProvider(IExternalUserLookupServiceProvider value);
    [CompilerGeneratedAttribute]
public ILogger`1<UserLookupService`2<TUser, TUserRepository>> get_Logger();
    [CompilerGeneratedAttribute]
public void set_Logger(ILogger`1<UserLookupService`2<TUser, TUserRepository>> value);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupService`2/<FindByIdAsync>d__15")]
public sealed virtual Task`1<TUser> FindByIdAsync(Guid id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupService`2/<FindByUserNameAsync>d__16")]
public sealed virtual Task`1<TUser> FindByUserNameAsync(string userName, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupService`2/<SearchAsync>d__17")]
public sealed virtual Task`1<List`1<IUserData>> SearchAsync(string sorting, string filter, int maxResultCount, int skipCount, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupService`2/<GetCountAsync>d__18")]
public sealed virtual Task`1<long> GetCountAsync(string filter, CancellationToken cancellationToken);
    protected abstract virtual TUser CreateUser(IUserData externalUser);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupService`2/<WithNewUowAsync>d__20")]
private Task WithNewUowAsync(Func`1<Task> func);
}
[ExtensionAttribute]
public static class Volo.Abp.Users.UserLookupServiceExtensions : object {
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupServiceExtensions/<GetByIdAsync>d__0`1")]
[ExtensionAttribute]
public static Task`1<TUser> GetByIdAsync(IUserLookupService`1<TUser> userLookupService, Guid id, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Volo.Abp.Users.UserLookupServiceExtensions/<GetByUserNameAsync>d__1`1")]
[ExtensionAttribute]
public static Task`1<TUser> GetByUserNameAsync(IUserLookupService`1<TUser> userLookupService, string userName, CancellationToken cancellationToken);
}
internal class VoloAbpUsersDomain_ProcessedByFody : object {
    internal static string FodyVersion;
    internal static string ConfigureAwait;
}
