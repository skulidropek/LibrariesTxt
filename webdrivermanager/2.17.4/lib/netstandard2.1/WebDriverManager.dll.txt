public static class WebDriverManager.Clients.ChromeForTestingClient : object {
    private static string BaseUrl;
    private static HttpClient _httpClient;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private static IWebProxy <Proxy>k__BackingField;
    private static HttpClient HttpClient { get; }
    public static IWebProxy Proxy { get; public set; }
    private static ChromeForTestingClient();
    private static HttpClient get_HttpClient();
    [CompilerGeneratedAttribute]
public static IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public static void set_Proxy(IWebProxy value);
    public static ChromeVersions GetKnownGoodVersionsWithDownloads();
    public static ChromeVersions GetLastKnownGoodVersions();
    private static TResult GetResultFromHttpTask(Task`1<HttpResponseMessage> taskToRun);
}
public interface WebDriverManager.DriverConfigs.IDriverConfig {
    public abstract virtual string GetName();
    public abstract virtual string GetUrl32();
    public abstract virtual string GetUrl64();
    public abstract virtual string GetBinaryName();
    public abstract virtual string GetLatestVersion();
    public abstract virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.ChromeConfig : object {
    private static string BaseVersionPatternUrl;
    private static string ExactReleaseVersionPatternUrl;
    private static Version MinChromeForTestingDriverVersion;
    private static Version MinArm64ExtensionVersion;
    private ChromeVersionInfo _chromeVersionInfo;
    private string _chromeVersion;
    private static ChromeConfig();
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    private string GetUrl(Architecture architecture);
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
    private static string GetVersionFromChromeStorage(string url);
    private string GetUrlFromChromeStorage(Architecture architecture);
    private ChromeVersionInfo GetVersionFromChromeForTestingApi(string version);
    private string GetUrlFromChromeForTestingApi(Architecture architecture);
    private string GetRawBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.EdgeConfig : object {
    private static string BaseVersionPatternUrl;
    private static string LatestReleaseVersionUrl;
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetLatestVersion(string url);
    public sealed virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.FirefoxConfig : object {
    private static string DownloadUrl;
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
    private static string GetUrl(Architecture architecture);
}
public class WebDriverManager.DriverConfigs.Impl.InternetExplorerConfig : object {
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.LegacyEdgeConfig : object {
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.OperaConfig : object {
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverConfigs.Impl.PhantomConfig : object {
    public virtual string GetName();
    public virtual string GetUrl32();
    public virtual string GetUrl64();
    public virtual string GetBinaryName();
    public virtual string GetLatestVersion();
    public virtual string GetMatchingBrowserVersion();
}
public class WebDriverManager.DriverManager : object {
    private static object Object;
    private IBinaryService _binaryService;
    private IVariableService _variableService;
    private string _downloadDirectory;
    public DriverManager(string downloadDirectory);
    public DriverManager(IBinaryService binaryService, IVariableService variableService);
    private static DriverManager();
    public DriverManager WithProxy(IWebProxy proxy);
    [ObsoleteAttribute("binaryName parameter is redundant, use SetUpDriver(url, binaryPath)")]
public string SetUpDriver(string url, string binaryPath, string binaryName);
    public string SetUpDriver(string url, string binaryPath);
    public string SetUpDriver(IDriverConfig config, string version, Architecture architecture);
    private string SetUpDriverImpl(string url, string binaryPath);
    private static string GetVersionToDownload(IDriverConfig config, string version);
}
public enum WebDriverManager.Helpers.Architecture : Enum {
    public int value__;
    public static Architecture X32;
    public static Architecture X64;
    public static Architecture Auto;
}
public static class WebDriverManager.Helpers.ArchitectureHelper : object {
    public static Architecture GetArchitecture();
}
internal static class WebDriverManager.Helpers.ArchiveHelper : object {
    public static Byte[] UnpackGzip(Byte[] compressedData);
}
public static class WebDriverManager.Helpers.FileHelper : object {
    public static string GetZipDestination(string url);
    public static string GetBinDestination(string driverName, string version, Architecture architecture, string binName);
    public static void CreateDestinationDirectory(string path);
}
public static class WebDriverManager.Helpers.RegistryHelper : object {
    public static string GetInstalledBrowserVersionLinux(string executableFileName, string arguments);
    public static string GetInstalledBrowserVersionLinux(String[] executableAndArgumentsPairs);
    public static string GetInstalledBrowserVersionOsx(string executableFileName, string arguments);
    public static string GetInstalledBrowserVersionWin(string executableFileName);
    private static string GetFullPath(string fileName);
}
public static class WebDriverManager.Helpers.UrlHelper : object {
    public static string BuildUrl(string url, string version);
}
public static class WebDriverManager.Helpers.VersionHelper : object {
    public static string GetVersionWithoutRevision(string version);
    [AsyncStateMachineAttribute("WebDriverManager.Helpers.VersionHelper/<GetVersionFromProcess>d__1")]
[DebuggerStepThroughAttribute]
public static Task`1<string> GetVersionFromProcess(string executableFileName, string arguments);
}
public static class WebDriverManager.Helpers.VersionResolveStrategy : object {
    public static string Latest;
    public static string MatchingBrowser;
}
public class WebDriverManager.Models.Chrome.ChromeDownload : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ChromePlatformInfo> <ChromeDriver>k__BackingField;
    public IEnumerable`1<ChromePlatformInfo> ChromeDriver { get; public set; }
    [CompilerGeneratedAttribute]
public IEnumerable`1<ChromePlatformInfo> get_ChromeDriver();
    [CompilerGeneratedAttribute]
public void set_ChromeDriver(IEnumerable`1<ChromePlatformInfo> value);
}
public class WebDriverManager.Models.Chrome.ChromePlatformInfo : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Platform>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Url>k__BackingField;
    public string Platform { get; public set; }
    public string Url { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Platform();
    [CompilerGeneratedAttribute]
public void set_Platform(string value);
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
}
public class WebDriverManager.Models.Chrome.ChromeReleaseChannels : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeReleaseTrack <Stable>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeReleaseTrack <Beta>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeReleaseTrack <Dev>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeReleaseTrack <Canary>k__BackingField;
    public ChromeReleaseTrack Stable { get; public set; }
    public ChromeReleaseTrack Beta { get; public set; }
    public ChromeReleaseTrack Dev { get; public set; }
    public ChromeReleaseTrack Canary { get; public set; }
    [CompilerGeneratedAttribute]
public ChromeReleaseTrack get_Stable();
    [CompilerGeneratedAttribute]
public void set_Stable(ChromeReleaseTrack value);
    [CompilerGeneratedAttribute]
public ChromeReleaseTrack get_Beta();
    [CompilerGeneratedAttribute]
public void set_Beta(ChromeReleaseTrack value);
    [CompilerGeneratedAttribute]
public ChromeReleaseTrack get_Dev();
    [CompilerGeneratedAttribute]
public void set_Dev(ChromeReleaseTrack value);
    [CompilerGeneratedAttribute]
public ChromeReleaseTrack get_Canary();
    [CompilerGeneratedAttribute]
public void set_Canary(ChromeReleaseTrack value);
}
public class WebDriverManager.Models.Chrome.ChromeReleaseTrack : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Channel>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeDownload <Downloads>k__BackingField;
    public string Channel { get; public set; }
    public string Version { get; public set; }
    public string Revision { get; public set; }
    public ChromeDownload Downloads { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Channel();
    [CompilerGeneratedAttribute]
public void set_Channel(string value);
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(string value);
    [CompilerGeneratedAttribute]
public ChromeDownload get_Downloads();
    [CompilerGeneratedAttribute]
public void set_Downloads(ChromeDownload value);
}
public class WebDriverManager.Models.Chrome.ChromeVersionInfo : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Version>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeDownload <Downloads>k__BackingField;
    public string Version { get; public set; }
    public string Revision { get; public set; }
    public ChromeDownload Downloads { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
    [CompilerGeneratedAttribute]
public string get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(string value);
    [CompilerGeneratedAttribute]
public ChromeDownload get_Downloads();
    [CompilerGeneratedAttribute]
public void set_Downloads(ChromeDownload value);
}
public class WebDriverManager.Models.Chrome.ChromeVersions : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private string <Timestamp>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private ChromeReleaseChannels <Channels>k__BackingField;
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IEnumerable`1<ChromeVersionInfo> <Versions>k__BackingField;
    public string Timestamp { get; public set; }
    public ChromeReleaseChannels Channels { get; public set; }
    public IEnumerable`1<ChromeVersionInfo> Versions { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Timestamp();
    [CompilerGeneratedAttribute]
public void set_Timestamp(string value);
    [CompilerGeneratedAttribute]
public ChromeReleaseChannels get_Channels();
    [CompilerGeneratedAttribute]
public void set_Channels(ChromeReleaseChannels value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ChromeVersionInfo> get_Versions();
    [CompilerGeneratedAttribute]
public void set_Versions(IEnumerable`1<ChromeVersionInfo> value);
}
public interface WebDriverManager.Services.IBinaryService {
    [ObsoleteAttribute("binaryName parameter is redundant, use SetupBinary(url, zipDestination, binDestination)")]
public abstract virtual string SetupBinary(string url, string zipDestination, string binDestination, string binaryName);
    public abstract virtual string SetupBinary(string url, string zipDestination, string binDestination);
}
public class WebDriverManager.Services.Impl.BinaryService : object {
    [CompilerGeneratedAttribute]
[DebuggerBrowsableAttribute("0")]
private IWebProxy <Proxy>k__BackingField;
    public IWebProxy Proxy { get; public set; }
    [CompilerGeneratedAttribute]
public IWebProxy get_Proxy();
    [CompilerGeneratedAttribute]
public void set_Proxy(IWebProxy value);
    [ObsoleteAttribute("binaryName parameter is redundant, use SetupBinary(url, zipDestination, binDestination)")]
public sealed virtual string SetupBinary(string url, string zipDestination, string binDestination, string binaryName);
    public sealed virtual string SetupBinary(string url, string zipPath, string binaryPath);
    public string DownloadZip(string url, string destination);
    protected void CheckProxySystemVariables();
    protected string UnZip(string path, string destination, string name);
    protected void UnZipTgz(string gzArchiveName, string destination);
    protected void RemoveZip(string path);
}
public class WebDriverManager.Services.Impl.VariableService : object {
    public sealed virtual void SetupVariable(string path);
    protected void UpdatePath(string path);
}
public interface WebDriverManager.Services.IVariableService {
    public abstract virtual void SetupVariable(string path);
}
