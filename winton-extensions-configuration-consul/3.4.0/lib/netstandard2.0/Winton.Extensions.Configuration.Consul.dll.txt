[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class Winton.Extensions.Configuration.Consul.ConfigurationBuilderExtensions : object {
    [ExtensionAttribute]
public static IConfigurationBuilder AddConsul(IConfigurationBuilder builder, string key);
    [ExtensionAttribute]
public static IConfigurationBuilder AddConsul(IConfigurationBuilder builder, string key, Action`1<IConsulConfigurationSource> options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Winton.Extensions.Configuration.Consul.ConsulClientFactory : object {
    private IConsulConfigurationSource _consulConfigSource;
    public ConsulClientFactory(IConsulConfigurationSource consulConfigSource);
    public sealed virtual IConsulClient Create();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Winton.Extensions.Configuration.Consul.ConsulConfigurationProvider : ConfigurationProvider {
    private CancellationTokenSource _cancellationTokenSource;
    private IConsulClientFactory _consulClientFactory;
    private IConsulConfigurationSource _source;
    private ulong _lastIndex;
    [NullableAttribute("2")]
private Task _pollTask;
    private bool _disposed;
    public ConsulConfigurationProvider(IConsulConfigurationSource source, IConsulClientFactory consulClientFactory);
    public sealed virtual void Dispose();
    public virtual void Load();
    [AsyncStateMachineAttribute("Winton.Extensions.Configuration.Consul.ConsulConfigurationProvider/<DoLoad>d__9")]
private Task DoLoad(CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Winton.Extensions.Configuration.Consul.ConsulConfigurationProvider/<GetKvPairs>d__10")]
private Task`1<QueryResult`1<KVPair[]>> GetKvPairs(bool waitForChange, CancellationToken cancellationToken);
    [AsyncStateMachineAttribute("Winton.Extensions.Configuration.Consul.ConsulConfigurationProvider/<PollingLoop>d__11")]
private Task PollingLoop(CancellationToken cancellationToken);
    private void SetLastIndex(QueryResult result);
    [CompilerGeneratedAttribute]
private void <.ctor>b__6_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Winton.Extensions.Configuration.Consul.ConsulConfigurationSource : object {
    [NullableAttribute("2")]
private string _keyToRemove;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<ConsulClientConfiguration> <ConsulConfigurationOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<HttpClientHandler> <ConsulHttpClientHandlerOptions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<HttpClient> <ConsulHttpClientOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> <ConvertConsulKVPairToConfig>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<ConsulLoadExceptionContext> <OnLoadException>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<ConsulWatchExceptionContext, TimeSpan> <OnWatchException>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private CancellationTokenSource <WatchCancellationTokenSource>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Optional>k__BackingField;
    [CompilerGeneratedAttribute]
private IConfigurationParser <Parser>k__BackingField;
    [CompilerGeneratedAttribute]
private TimeSpan <PollWaitTime>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ReloadOnChange>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ConsulClientConfiguration> ConsulConfigurationOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<HttpClientHandler> ConsulHttpClientHandlerOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<HttpClient> ConsulHttpClientOptions { get; public set; }
    public string Key { get; }
    public string KeyToRemove { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> ConvertConsulKVPairToConfig { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ConsulLoadExceptionContext> OnLoadException { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ConsulWatchExceptionContext, TimeSpan> OnWatchException { get; public set; }
    [NullableAttribute("2")]
public CancellationTokenSource WatchCancellationTokenSource { get; public set; }
    public bool Optional { get; public set; }
    public IConfigurationParser Parser { get; public set; }
    public TimeSpan PollWaitTime { get; public set; }
    public bool ReloadOnChange { get; public set; }
    public ConsulConfigurationSource(string key);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<ConsulClientConfiguration> get_ConsulConfigurationOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsulConfigurationOptions(Action`1<ConsulClientConfiguration> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<HttpClientHandler> get_ConsulHttpClientHandlerOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsulHttpClientHandlerOptions(Action`1<HttpClientHandler> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<HttpClient> get_ConsulHttpClientOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConsulHttpClientOptions(Action`1<HttpClient> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Key();
    public sealed virtual string get_KeyToRemove();
    public sealed virtual void set_KeyToRemove(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> get_ConvertConsulKVPairToConfig();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ConvertConsulKVPairToConfig(Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<ConsulLoadExceptionContext> get_OnLoadException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnLoadException(Action`1<ConsulLoadExceptionContext> value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<ConsulWatchExceptionContext, TimeSpan> get_OnWatchException();
    [CompilerGeneratedAttribute]
public sealed virtual void set_OnWatchException(Func`2<ConsulWatchExceptionContext, TimeSpan> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual CancellationTokenSource get_WatchCancellationTokenSource();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_WatchCancellationTokenSource(CancellationTokenSource value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_Optional();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Optional(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IConfigurationParser get_Parser();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Parser(IConfigurationParser value);
    [CompilerGeneratedAttribute]
public sealed virtual TimeSpan get_PollWaitTime();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PollWaitTime(TimeSpan value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ReloadOnChange();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ReloadOnChange(bool value);
    public sealed virtual IConfigurationProvider Build(IConfigurationBuilder builder);
    private IEnumerable`1<KeyValuePair`2<string, string>> DefaultConvertConsulKVPairToConfigStrategy(KVPair consulKvPair);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Winton.Extensions.Configuration.Consul.ConsulLoadExceptionContext : object {
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Ignore>k__BackingField;
    [CompilerGeneratedAttribute]
private IConsulConfigurationSource <Source>k__BackingField;
    public Exception Exception { get; }
    public bool Ignore { get; public set; }
    public IConsulConfigurationSource Source { get; }
    internal ConsulLoadExceptionContext(IConsulConfigurationSource source, Exception exception);
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public bool get_Ignore();
    [CompilerGeneratedAttribute]
public void set_Ignore(bool value);
    [CompilerGeneratedAttribute]
public IConsulConfigurationSource get_Source();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Winton.Extensions.Configuration.Consul.ConsulWatchExceptionContext : object {
    [CompilerGeneratedAttribute]
private int <ConsecutiveFailureCount>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    [CompilerGeneratedAttribute]
private IConsulConfigurationSource <Source>k__BackingField;
    public int ConsecutiveFailureCount { get; }
    public Exception Exception { get; }
    public IConsulConfigurationSource Source { get; }
    internal ConsulWatchExceptionContext(Exception exception, int consecutiveFailureCount, IConsulConfigurationSource source);
    [CompilerGeneratedAttribute]
public int get_ConsecutiveFailureCount();
    [CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public IConsulConfigurationSource get_Source();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class Winton.Extensions.Configuration.Consul.Extensions.KVPairExtensions : object {
    [ExtensionAttribute]
internal static IEnumerable`1<KeyValuePair`2<string, string>> ConvertToConfig(KVPair kvPair, string keyToRemove, IConfigurationParser parser);
    [ExtensionAttribute]
internal static bool HasValue(KVPair kvPair);
    [ExtensionAttribute]
internal static bool IsLeafNode(KVPair kvPair);
    [ExtensionAttribute]
private static string RemoveStart(string s, string toRemove);
}
[ExtensionAttribute]
internal static class Winton.Extensions.Configuration.Consul.Extensions.KVPairQueryResultExtensions : object {
    [ExtensionAttribute]
internal static bool HasValue(QueryResult`1<KVPair[]> result);
    [NullableContextAttribute("1")]
[ExtensionAttribute]
internal static Dictionary`2<string, string> ToConfigDictionary(QueryResult`1<KVPair[]> result, Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> convertConsulKVPairToConfig);
}
[NullableContextAttribute("1")]
internal interface Winton.Extensions.Configuration.Consul.IConsulClientFactory {
    public abstract virtual IConsulClient Create();
}
[NullableContextAttribute("1")]
public interface Winton.Extensions.Configuration.Consul.IConsulConfigurationSource {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ConsulClientConfiguration> ConsulConfigurationOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> ConvertConsulKVPairToConfig { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<HttpClientHandler> ConsulHttpClientHandlerOptions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<HttpClient> ConsulHttpClientOptions { get; public set; }
    public string Key { get; }
    public string KeyToRemove { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<ConsulLoadExceptionContext> OnLoadException { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<ConsulWatchExceptionContext, TimeSpan> OnWatchException { get; public set; }
    [NullableAttribute("2")]
public CancellationTokenSource WatchCancellationTokenSource { get; public set; }
    public bool Optional { get; public set; }
    public IConfigurationParser Parser { get; public set; }
    public TimeSpan PollWaitTime { get; public set; }
    public bool ReloadOnChange { get; public set; }
    public abstract virtual Action`1<ConsulClientConfiguration> get_ConsulConfigurationOptions();
    public abstract virtual void set_ConsulConfigurationOptions(Action`1<ConsulClientConfiguration> value);
    public abstract virtual Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> get_ConvertConsulKVPairToConfig();
    public abstract virtual void set_ConvertConsulKVPairToConfig(Func`2<KVPair, IEnumerable`1<KeyValuePair`2<string, string>>> value);
    public abstract virtual Action`1<HttpClientHandler> get_ConsulHttpClientHandlerOptions();
    public abstract virtual void set_ConsulHttpClientHandlerOptions(Action`1<HttpClientHandler> value);
    public abstract virtual Action`1<HttpClient> get_ConsulHttpClientOptions();
    public abstract virtual void set_ConsulHttpClientOptions(Action`1<HttpClient> value);
    public abstract virtual string get_Key();
    public abstract virtual string get_KeyToRemove();
    public abstract virtual void set_KeyToRemove(string value);
    public abstract virtual Action`1<ConsulLoadExceptionContext> get_OnLoadException();
    public abstract virtual void set_OnLoadException(Action`1<ConsulLoadExceptionContext> value);
    public abstract virtual Func`2<ConsulWatchExceptionContext, TimeSpan> get_OnWatchException();
    public abstract virtual void set_OnWatchException(Func`2<ConsulWatchExceptionContext, TimeSpan> value);
    [NullableContextAttribute("2")]
public abstract virtual CancellationTokenSource get_WatchCancellationTokenSource();
    [NullableContextAttribute("2")]
public abstract virtual void set_WatchCancellationTokenSource(CancellationTokenSource value);
    public abstract virtual bool get_Optional();
    public abstract virtual void set_Optional(bool value);
    public abstract virtual IConfigurationParser get_Parser();
    public abstract virtual void set_Parser(IConfigurationParser value);
    public abstract virtual TimeSpan get_PollWaitTime();
    public abstract virtual void set_PollWaitTime(TimeSpan value);
    public abstract virtual bool get_ReloadOnChange();
    public abstract virtual void set_ReloadOnChange(bool value);
}
[NullableContextAttribute("1")]
public interface Winton.Extensions.Configuration.Consul.Parsers.IConfigurationParser {
    public abstract virtual IDictionary`2<string, string> Parse(Stream stream);
}
public class Winton.Extensions.Configuration.Consul.Parsers.JsonConfigurationParser : object {
    [NullableContextAttribute("1")]
public sealed virtual IDictionary`2<string, string> Parse(Stream stream);
}
public class Winton.Extensions.Configuration.Consul.Parsers.SimpleConfigurationParser : object {
    [NullableContextAttribute("1")]
public sealed virtual IDictionary`2<string, string> Parse(Stream stream);
}
