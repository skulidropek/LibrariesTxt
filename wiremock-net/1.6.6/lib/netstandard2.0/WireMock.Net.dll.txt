[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.AllowNullAttribute : Attribute {
}
[AttributeUsageAttribute("2432")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DisallowNullAttribute : Attribute {
}
[AttributeUsageAttribute("64")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ParameterValue>k__BackingField;
    public bool ParameterValue { get; }
    public DoesNotReturnIfAttribute(bool parameterValue);
    [CompilerGeneratedAttribute]
public bool get_ParameterValue();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullAttribute : Attribute {
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public MaybeNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public String[] Members { get; }
    public MemberNotNullAttribute(string member);
    public MemberNotNullAttribute(String[] members);
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("192")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Members>k__BackingField;
    public bool ReturnValue { get; }
    public String[] Members { get; }
    public MemberNotNullWhenAttribute(bool returnValue, string member);
    public MemberNotNullWhenAttribute(bool returnValue, String[] members);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
    [CompilerGeneratedAttribute]
public String[] get_Members();
}
[AttributeUsageAttribute("10624")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[AttributeUsageAttribute("10368")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <ParameterName>k__BackingField;
    public string ParameterName { get; }
    public NotNullIfNotNullAttribute(string parameterName);
    [CompilerGeneratedAttribute]
public string get_ParameterName();
}
[AttributeUsageAttribute("2048")]
[ExcludeFromCodeCoverageAttribute]
[DebuggerNonUserCodeAttribute]
internal class System.Diagnostics.CodeAnalysis.NotNullWhenAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <ReturnValue>k__BackingField;
    public bool ReturnValue { get; }
    public NotNullWhenAttribute(bool returnValue);
    [CompilerGeneratedAttribute]
public bool get_ReturnValue();
}
internal static class System.EmptyArray`1 : object {
    [NullableAttribute("1")]
public static T[] Value;
    private static EmptyArray`1();
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class System.Runtime.CompilerServices.IsReadOnlyAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("27524")]
internal class System.Runtime.CompilerServices.NullableAttribute : Attribute {
    public Byte[] NullableFlags;
    public NullableAttribute(byte );
    public NullableAttribute(Byte[] );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("5196")]
internal class System.Runtime.CompilerServices.NullableContextAttribute : Attribute {
    public byte Flag;
    public NullableContextAttribute(byte );
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
[ExtensionAttribute]
internal static class System.StringExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static string Replace(string text, string oldValue, string newValue, StringComparison stringComparison);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Authentication.AzureADAuthenticationMatcher : object {
    private static string BearerPrefix;
    private string _audience;
    private string _stsDiscoveryEndpoint;
    public string Name { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public MatchOperator MatchOperator { get; }
    public AzureADAuthenticationMatcher(string tenant, string audience);
    public sealed virtual string get_Name();
    public sealed virtual MatchBehaviour get_MatchBehaviour();
    public sealed virtual AnyOf`2[] GetPatterns();
    public sealed virtual MatchOperator get_MatchOperator();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Authentication.BasicAuthenticationMatcher : RegexMatcher {
    public string Name { get; }
    public BasicAuthenticationMatcher(string username, string password);
    public virtual string get_Name();
    private static string BuildPattern(string username, string password);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Constants.WireMockConstants : object {
    internal static TimeSpan DefaultRegexTimeout;
    internal static int AdminPriority;
    internal static int MinPriority;
    internal static int ProxyPriority;
    internal static string ContentTypeJson;
    internal static string ContentTypeTextPlain;
    internal static string NoMatchingFound;
    private static WireMockConstants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Exceptions.WireMockException : Exception {
    public WireMockException(string message);
    public WireMockException(string message, Exception inner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class WireMock.Extensions.AnyOfExtensions : object {
    [ExtensionAttribute]
public static string GetPattern(AnyOf`2<string, StringPattern> value);
    [ExtensionAttribute]
public static AnyOf`2[] ToAnyOfPatterns(IEnumerable`1<string> patterns);
    [ExtensionAttribute]
public static AnyOf`2<string, StringPattern> ToAnyOfPattern(string pattern);
}
[ExtensionAttribute]
internal static class WireMock.Extensions.DictionaryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool TryGetStringValue(IDictionary dictionary, string key, String& value);
}
[ExtensionAttribute]
internal static class WireMock.Extensions.EnumExtensions : object {
    [ExtensionAttribute]
public static string GetFullyQualifiedEnumValue(T enumValue);
}
[ExtensionAttribute]
internal static class WireMock.Extensions.ExceptionExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static Exception ToException(Exception[] exceptions);
}
[ExtensionAttribute]
internal static class WireMock.Extensions.TimeSettingsExtensions : object {
    [NullableContextAttribute("2")]
[ExtensionAttribute]
public static bool IsValid(ITimeSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Handlers.LocalFileSystemHandler : object {
    private static string AdminMappingsFolder;
    private static string UnmatchedRequestsFolder;
    private string _rootFolder;
    public LocalFileSystemHandler(string rootFolder);
    private static LocalFileSystemHandler();
    public virtual bool FolderExists(string path);
    public virtual void CreateFolder(string path);
    public virtual IEnumerable`1<string> EnumerateFiles(string path, bool includeSubdirectories);
    public virtual string GetMappingFolder();
    public virtual string ReadMappingFile(string path);
    public virtual void WriteMappingFile(string path, string text);
    public virtual Byte[] ReadResponseBodyAsFile(string path);
    public virtual string ReadResponseBodyAsString(string path);
    public virtual bool FileExists(string filename);
    public virtual void WriteFile(string filename, Byte[] bytes);
    public virtual void WriteFile(string folder, string filename, Byte[] bytes);
    public virtual void DeleteFile(string filename);
    public virtual Byte[] ReadFile(string filename);
    public virtual string ReadFileAsString(string filename);
    public virtual string GetUnmatchedRequestsFolder();
    public virtual void WriteUnmatchedRequest(string filename, string text);
    private string AdjustPathForMappingFolder(string filename);
}
internal static class WireMock.Http.ByteArrayContentHelper : object {
    [NullableContextAttribute("1")]
internal static ByteArrayContent Create(Byte[] content, MediaTypeHeaderValue contentType);
}
internal static class WireMock.Http.HttpClientBuilder : object {
    [NullableContextAttribute("1")]
public static HttpClient Build(HttpClientSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Http.HttpClientFactory2 : object {
    public static HttpClient Create(DelegatingHandler[] handlers);
    public static HttpClient Create(HttpMessageHandler innerHandler, DelegatingHandler[] handlers);
    private static HttpMessageHandler CreateHandlerPipeline(HttpMessageHandler handler, DelegatingHandler[] delegatingHandlers);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Http.HttpKnownHeaderNames : object {
    private static String[] RestrictedResponseHeaders;
    public static string Accept;
    public static string AcceptCharset;
    public static string AcceptEncoding;
    public static string AcceptLanguage;
    public static string AcceptPatch;
    public static string AcceptRanges;
    public static string AccessControlAllowCredentials;
    public static string AccessControlAllowHeaders;
    public static string AccessControlAllowMethods;
    public static string AccessControlAllowOrigin;
    public static string AccessControlExposeHeaders;
    public static string AccessControlMaxAge;
    public static string Age;
    public static string Allow;
    public static string AltSvc;
    public static string Authorization;
    public static string CacheControl;
    public static string Connection;
    public static string ContentDisposition;
    public static string ContentEncoding;
    public static string ContentLanguage;
    public static string ContentLength;
    public static string ContentLocation;
    public static string ContentMD5;
    public static string ContentRange;
    public static string ContentSecurityPolicy;
    public static string ContentType;
    public static string Cookie;
    public static string Cookie2;
    public static string Date;
    public static string ETag;
    public static string Expect;
    public static string Expires;
    public static string From;
    public static string Host;
    public static string IfMatch;
    public static string IfModifiedSince;
    public static string IfNoneMatch;
    public static string IfRange;
    public static string IfUnmodifiedSince;
    public static string KeepAlive;
    public static string LastModified;
    public static string Link;
    public static string Location;
    public static string MaxForwards;
    public static string Origin;
    public static string P3P;
    public static string Pragma;
    public static string ProxyAuthenticate;
    public static string ProxyAuthorization;
    public static string ProxyConnection;
    public static string PublicKeyPins;
    public static string Range;
    public static string Referer;
    public static string RetryAfter;
    public static string SecWebSocketAccept;
    public static string SecWebSocketExtensions;
    public static string SecWebSocketKey;
    public static string SecWebSocketProtocol;
    public static string SecWebSocketVersion;
    public static string Server;
    public static string SetCookie;
    public static string SetCookie2;
    public static string StrictTransportSecurity;
    public static string TE;
    public static string TSV;
    public static string Trailer;
    public static string TransferEncoding;
    public static string Upgrade;
    public static string UpgradeInsecureRequests;
    public static string UserAgent;
    public static string Vary;
    public static string Via;
    public static string WWWAuthenticate;
    public static string Warning;
    public static string XAspNetVersion;
    public static string XContentDuration;
    public static string XContentTypeOptions;
    public static string XFrameOptions;
    public static string XMSEdgeRef;
    public static string XPoweredBy;
    public static string XRequestID;
    public static string XUACompatible;
    private static HttpKnownHeaderNames();
    public static bool IsRestrictedResponseHeader(string headerName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Http.HttpRequestMessageHelper : object {
    private static IDictionary`2<string, bool> ContentLengthHeaderAllowed;
    private static HttpRequestMessageHelper();
    internal static HttpRequestMessage Create(IRequestMessage requestMessage, string url);
}
internal static class WireMock.Http.HttpResponseMessageHelper : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("WireMock.Http.HttpResponseMessageHelper/<CreateAsync>d__0")]
public static Task`1<ResponseMessage> CreateAsync(HttpResponseMessage httpResponseMessage, Uri requiredUri, Uri originalUri, bool deserializeJson, bool decompressGzipAndDeflate, bool deserializeFormUrlEncoded);
}
internal static class WireMock.Http.StringContentHelper : object {
    [NullableContextAttribute("1")]
internal static StringContent Create(string content, MediaTypeHeaderValue contentType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Http.WebhookSender : object {
    private static string ClientIp;
    private static ThreadLocal`1<Random> Random;
    private WireMockServerSettings _settings;
    public WebhookSender(WireMockServerSettings settings);
    private static WebhookSender();
    [AsyncStateMachineAttribute("WireMock.Http.WebhookSender/<SendAsync>d__4")]
public Task`1<HttpResponseMessage> SendAsync(HttpClient client, IMapping mapping, IWebhookRequest webhookRequest, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage);
    private static bool TryGetDelay(IWebhookRequest webhookRequest, Nullable`1& delay);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.HttpsCertificate.CertificateLoader : object {
    private static string ExtensionPem;
    [NullableContextAttribute("2")]
public static X509Certificate2 LoadCertificate(string storeName, string storeLocation, string thumbprintOrSubjectName, string filePath, string passwordOrKey, string host);
    public static X509Certificate2 LoadCertificate(string thumbprintOrSubjectName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.HttpsCertificate.PublicCertificateHelper : object {
    private static string Data;
    public static X509Certificate2 GetX509Certificate2();
}
[NullableContextAttribute("2")]
public interface WireMock.IMapping {
    public Guid Guid { get; }
    public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public ITimeSettings TimeSettings { get; }
    public string Title { get; }
    public string Description { get; }
    public string Path { get; public set; }
    public int Priority { get; }
    public string Scenario { get; }
    public string ExecutionConditionState { get; }
    public string NextState { get; }
    public Nullable`1<int> StateTimes { get; }
    [NullableAttribute("1")]
public IRequestMatcher RequestMatcher { get; }
    [NullableAttribute("1")]
public IResponseProvider Provider { get; }
    [NullableAttribute("1")]
public WireMockServerSettings Settings { get; }
    public bool IsStartState { get; }
    public bool IsAdminInterface { get; }
    public bool IsProxy { get; }
    public bool LogMapping { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IWebhook[] Webhooks { get; }
    public Nullable`1<bool> UseWebhooksFireAndForget { get; }
    public object Data { get; }
    public Nullable`1<double> Probability { get; }
    public Nullable`1<IdOrText> ProtoDefinition { get; }
    public abstract virtual Guid get_Guid();
    public abstract virtual Nullable`1<DateTime> get_UpdatedAt();
    public abstract virtual void set_UpdatedAt(Nullable`1<DateTime> value);
    public abstract virtual ITimeSettings get_TimeSettings();
    public abstract virtual string get_Title();
    public abstract virtual string get_Description();
    public abstract virtual string get_Path();
    public abstract virtual void set_Path(string value);
    public abstract virtual int get_Priority();
    public abstract virtual string get_Scenario();
    public abstract virtual string get_ExecutionConditionState();
    public abstract virtual string get_NextState();
    public abstract virtual Nullable`1<int> get_StateTimes();
    [NullableContextAttribute("1")]
public abstract virtual IRequestMatcher get_RequestMatcher();
    [NullableContextAttribute("1")]
public abstract virtual IResponseProvider get_Provider();
    [NullableContextAttribute("1")]
public abstract virtual WireMockServerSettings get_Settings();
    public abstract virtual bool get_IsStartState();
    public abstract virtual bool get_IsAdminInterface();
    public abstract virtual bool get_IsProxy();
    public abstract virtual bool get_LogMapping();
    public abstract virtual IWebhook[] get_Webhooks();
    public abstract virtual Nullable`1<bool> get_UseWebhooksFireAndForget();
    public abstract virtual object get_Data();
    public abstract virtual Nullable`1<double> get_Probability();
    public abstract virtual Nullable`1<IdOrText> get_ProtoDefinition();
    [NullableContextAttribute("1")]
public abstract virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IRequestMessage requestMessage);
    [NullableContextAttribute("1")]
public abstract virtual IRequestMatchResult GetRequestMatchResult(IRequestMessage requestMessage, string nextState);
    [NullableContextAttribute("1")]
public abstract virtual IMapping WithScenario(string scenario);
    [NullableContextAttribute("1")]
public abstract virtual IMapping WithProbability(double probability);
    [NullableContextAttribute("1")]
public abstract virtual IMapping WithProtoDefinition(IdOrText protoDefinition);
}
[NullableContextAttribute("1")]
public interface WireMock.IMappingBuilder {
    public abstract virtual IRespondWithAProvider Given(IRequestMatcher requestMatcher, bool saveToFile);
    public abstract virtual MappingModel[] GetMappings();
    public abstract virtual string ToJson();
    public abstract virtual void SaveMappingsToFile(string path);
    public abstract virtual void SaveMappingsToFolder(string folder);
    [NullableContextAttribute("2")]
public abstract virtual string ToCSharpCode(Guid guid, MappingConverterType converterType);
    public abstract virtual string ToCSharpCode(MappingConverterType converterType);
}
internal class WireMock.Json.DynamicJsonClassOptions : object {
    [CompilerGeneratedAttribute]
private IntegerBehavior <IntegerConvertBehavior>k__BackingField;
    [CompilerGeneratedAttribute]
private FloatBehavior <FloatConvertBehavior>k__BackingField;
    public IntegerBehavior IntegerConvertBehavior { get; public set; }
    public FloatBehavior FloatConvertBehavior { get; public set; }
    [CompilerGeneratedAttribute]
public IntegerBehavior get_IntegerConvertBehavior();
    [CompilerGeneratedAttribute]
public void set_IntegerConvertBehavior(IntegerBehavior value);
    [CompilerGeneratedAttribute]
public FloatBehavior get_FloatConvertBehavior();
    [CompilerGeneratedAttribute]
public void set_FloatConvertBehavior(FloatBehavior value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class WireMock.Json.DynamicPropertyWithValue : DynamicProperty {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public object Value { get; }
    [NullableContextAttribute("1")]
public DynamicPropertyWithValue(string name, object value);
    [CompilerGeneratedAttribute]
public object get_Value();
}
internal enum WireMock.Json.FloatBehavior : Enum {
    public int value__;
    public static FloatBehavior UseDouble;
    public static FloatBehavior UseFloat;
    public static FloatBehavior UseDecimal;
}
internal enum WireMock.Json.IntegerBehavior : Enum {
    public int value__;
    public static IntegerBehavior UseInt;
    public static IntegerBehavior UseLong;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class WireMock.Json.JObjectExtensions : object {
    private static JTokenResolvers Resolvers;
    private static MethodInfo ConvertToTypedArrayGenericMethod;
    private static JObjectExtensions();
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static DynamicClass ToDynamicJsonClass(JObject src, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
[ExtensionAttribute]
internal static IEnumerable ToDynamicClassArray(JArray src, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static object ConvertJObject(JToken arg, DynamicJsonClassOptions options);
    private static object PassThrough(JToken arg, DynamicJsonClassOptions options);
    private static Func`3<JToken, DynamicJsonClassOptions, object> GetResolverFor(JToken arg);
    private static object ConvertJTokenFloat(JToken arg, DynamicJsonClassOptions options);
    private static object ConvertJTokenInteger(JToken arg, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static object ConvertJTokenProperty(JToken arg, DynamicJsonClassOptions options);
    private static IEnumerable ConvertJTokenArray(JToken arg, DynamicJsonClassOptions options);
    [NullableContextAttribute("2")]
private static Type FindSameTypeOf(IEnumerable`1<object> src);
    private static IEnumerable ConvertToTypedArray(IEnumerable`1<object> src, Type newType);
    private static T[] ConvertToTypedArrayGeneric(IEnumerable`1<object> src);
    public static DynamicClass CreateInstance(IList`1<DynamicPropertyWithValue> dynamicPropertiesWithValue, bool createParameterCtor);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Logging.LogEntry : object {
    [CompilerGeneratedAttribute]
private Guid <Guid>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestMessage <RequestMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IResponseMessage <ResponseMessage>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestMatchResult <RequestMatchResult>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <MappingGuid>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <MappingTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<Guid> <PartialMappingGuid>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <PartialMappingTitle>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestMatchResult <PartialMatchResult>k__BackingField;
    public Guid Guid { get; public set; }
    public IRequestMessage RequestMessage { get; public set; }
    public IResponseMessage ResponseMessage { get; public set; }
    public IRequestMatchResult RequestMatchResult { get; public set; }
    public Nullable`1<Guid> MappingGuid { get; public set; }
    [NullableAttribute("2")]
public string MappingTitle { get; public set; }
    public Nullable`1<Guid> PartialMappingGuid { get; public set; }
    [NullableAttribute("2")]
public string PartialMappingTitle { get; public set; }
    public IRequestMatchResult PartialMatchResult { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Guid();
    [CompilerGeneratedAttribute]
public void set_Guid(Guid value);
    [CompilerGeneratedAttribute]
public sealed virtual IRequestMessage get_RequestMessage();
    [CompilerGeneratedAttribute]
public void set_RequestMessage(IRequestMessage value);
    [CompilerGeneratedAttribute]
public sealed virtual IResponseMessage get_ResponseMessage();
    [CompilerGeneratedAttribute]
public void set_ResponseMessage(IResponseMessage value);
    [CompilerGeneratedAttribute]
public sealed virtual IRequestMatchResult get_RequestMatchResult();
    [CompilerGeneratedAttribute]
public void set_RequestMatchResult(IRequestMatchResult value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_MappingGuid();
    [CompilerGeneratedAttribute]
public void set_MappingGuid(Nullable`1<Guid> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_MappingTitle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_MappingTitle(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<Guid> get_PartialMappingGuid();
    [CompilerGeneratedAttribute]
public void set_PartialMappingGuid(Nullable`1<Guid> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_PartialMappingTitle();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PartialMappingTitle(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IRequestMatchResult get_PartialMatchResult();
    [CompilerGeneratedAttribute]
public void set_PartialMatchResult(IRequestMatchResult value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Logging.WireMockConsoleLogger : object {
    public sealed virtual void Debug(string formatString, Object[] args);
    public sealed virtual void Info(string formatString, Object[] args);
    public sealed virtual void Warn(string formatString, Object[] args);
    public sealed virtual void Error(string formatString, Object[] args);
    public sealed virtual void Error(string formatString, Exception exception);
    public sealed virtual void DebugRequestResponse(LogEntryModel logEntryModel, bool isAdminRequest);
    private static string Format(string level, string formatString, Object[] args);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Logging.WireMockNullLogger : object {
    public sealed virtual void Debug(string formatString, Object[] args);
    public sealed virtual void Info(string formatString, Object[] args);
    public sealed virtual void Warn(string formatString, Object[] args);
    public sealed virtual void Error(string formatString, Object[] args);
    public sealed virtual void Error(string formatString, Exception exception);
    public sealed virtual void DebugRequestResponse(LogEntryModel logEntryModel, bool isAdminRequest);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Mapping : object {
    [CompilerGeneratedAttribute]
private Guid <Guid>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <UpdatedAt>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Title>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Priority>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scenario>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutionConditionState>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NextState>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <StateTimes>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IRequestMatcher <RequestMatcher>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IResponseProvider <Provider>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private WireMockServerSettings <Settings>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IWebhook[] <Webhooks>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseWebhooksFireAndForget>k__BackingField;
    [CompilerGeneratedAttribute]
private ITimeSettings <TimeSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <Probability>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<IdOrText> <ProtoDefinition>k__BackingField;
    public Guid Guid { get; }
    public Nullable`1<DateTime> UpdatedAt { get; public set; }
    public string Title { get; }
    public string Description { get; }
    public string Path { get; public set; }
    public int Priority { get; }
    public string Scenario { get; private set; }
    public string ExecutionConditionState { get; }
    public string NextState { get; }
    public Nullable`1<int> StateTimes { get; }
    [NullableAttribute("1")]
public IRequestMatcher RequestMatcher { get; }
    [NullableAttribute("1")]
public IResponseProvider Provider { get; }
    [NullableAttribute("1")]
public WireMockServerSettings Settings { get; }
    public bool IsStartState { get; }
    public bool IsAdminInterface { get; }
    public bool IsProxy { get; }
    public bool LogMapping { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IWebhook[] Webhooks { get; }
    public Nullable`1<bool> UseWebhooksFireAndForget { get; }
    public ITimeSettings TimeSettings { get; }
    public object Data { get; }
    public Nullable`1<double> Probability { get; private set; }
    public Nullable`1<IdOrText> ProtoDefinition { get; private set; }
    public Mapping(Guid guid, DateTime updatedAt, string title, string description, string path, WireMockServerSettings settings, IRequestMatcher requestMatcher, IResponseProvider provider, int priority, string scenario, string executionConditionState, string nextState, Nullable`1<int> stateTimes, IWebhook[] webhooks, Nullable`1<bool> useWebhooksFireAndForget, ITimeSettings timeSettings, object data);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Guid();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_UpdatedAt();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UpdatedAt(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Title();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Description();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Path(string value);
    [CompilerGeneratedAttribute]
public sealed virtual int get_Priority();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Scenario();
    [CompilerGeneratedAttribute]
private void set_Scenario(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ExecutionConditionState();
    [CompilerGeneratedAttribute]
public sealed virtual string get_NextState();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_StateTimes();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual IRequestMatcher get_RequestMatcher();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual IResponseProvider get_Provider();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual WireMockServerSettings get_Settings();
    public sealed virtual bool get_IsStartState();
    public sealed virtual bool get_IsAdminInterface();
    public sealed virtual bool get_IsProxy();
    public sealed virtual bool get_LogMapping();
    [CompilerGeneratedAttribute]
public sealed virtual IWebhook[] get_Webhooks();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_UseWebhooksFireAndForget();
    [CompilerGeneratedAttribute]
public sealed virtual ITimeSettings get_TimeSettings();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Data();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_Probability();
    [CompilerGeneratedAttribute]
private void set_Probability(Nullable`1<double> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<IdOrText> get_ProtoDefinition();
    [CompilerGeneratedAttribute]
private void set_ProtoDefinition(Nullable`1<IdOrText> value);
    [NullableContextAttribute("1")]
public sealed virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IRequestMessage requestMessage);
    [NullableContextAttribute("1")]
public sealed virtual IRequestMatchResult GetRequestMatchResult(IRequestMessage requestMessage, string nextState);
    [NullableContextAttribute("1")]
public sealed virtual IMapping WithProbability(double probability);
    [NullableContextAttribute("1")]
public sealed virtual IMapping WithScenario(string scenario);
    [NullableContextAttribute("1")]
public sealed virtual IMapping WithProtoDefinition(IdOrText protoDefinition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.MappingBuilder : object {
    private WireMockServerSettings _settings;
    private IWireMockMiddlewareOptions _options;
    private MappingConverter _mappingConverter;
    private MappingToFileSaver _mappingToFileSaver;
    private IGuidUtils _guidUtils;
    private IDateTimeUtils _dateTimeUtils;
    [NullableContextAttribute("2")]
public MappingBuilder(WireMockServerSettings settings);
    internal MappingBuilder(WireMockServerSettings settings, IWireMockMiddlewareOptions options, MappingConverter mappingConverter, MappingToFileSaver mappingToFileSaver, IGuidUtils guidUtils, IDateTimeUtils dateTimeUtils);
    public sealed virtual IRespondWithAProvider Given(IRequestMatcher requestMatcher, bool saveToFile);
    public sealed virtual MappingModel[] GetMappings();
    public sealed virtual string ToJson();
    [NullableContextAttribute("2")]
public sealed virtual string ToCSharpCode(Guid guid, MappingConverterType converterType);
    public sealed virtual string ToCSharpCode(MappingConverterType converterType);
    public sealed virtual void SaveMappingsToFile(string path);
    [NullableContextAttribute("2")]
public sealed virtual void SaveMappingsToFolder(string folder);
    private IMapping[] GetNonAdminMappings();
    private void RegisterMapping(IMapping mapping, bool saveToFile);
    private static string ToJson(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class WireMock.Matchers.AbstractJsonPartialMatcher : JsonMatcher {
    protected AbstractJsonPartialMatcher(string value, bool ignoreCase, bool regex);
    protected AbstractJsonPartialMatcher(object value, bool ignoreCase, bool regex);
    protected AbstractJsonPartialMatcher(MatchBehaviour matchBehaviour, object value, bool ignoreCase, bool regex);
    protected virtual bool IsMatch(JToken value, JToken input);
    protected abstract virtual bool IsMatch(string value, string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.ContentTypeMatcher : WildcardMatcher {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    public string Name { get; }
    public ContentTypeMatcher(AnyOf`2<string, StringPattern> pattern, bool ignoreCase);
    public ContentTypeMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern, bool ignoreCase);
    public ContentTypeMatcher(AnyOf`2[] patterns, bool ignoreCase);
    public ContentTypeMatcher(MatchBehaviour matchBehaviour, AnyOf`2[] patterns, bool ignoreCase);
    [NullableContextAttribute("2")]
public virtual MatchResult IsMatch(string input);
    public virtual AnyOf`2[] GetPatterns();
    public virtual string get_Name();
    public virtual string GetCSharpCodeArguments();
}
public class WireMock.Matchers.ExactMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _values;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public MatchOperator MatchOperator { get; }
    [NullableAttribute("1")]
public string Name { get; }
    public bool IgnoreCase { get; }
    [NullableContextAttribute("1")]
public ExactMatcher(MatchBehaviour matchBehaviour, string value);
    public ExactMatcher(AnyOf`2[] values);
    public ExactMatcher(bool ignoreCase, AnyOf`2[] values);
    public ExactMatcher(MatchBehaviour matchBehaviour, bool ignoreCase, MatchOperator matchOperator, AnyOf`2[] values);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    [NullableContextAttribute("1")]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreCase();
    [NullableContextAttribute("1")]
public sealed virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.ExactObjectMatcher : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    public object Value { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public string Name { get; }
    public ExactObjectMatcher(object value);
    public ExactObjectMatcher(MatchBehaviour matchBehaviour, object value);
    public ExactObjectMatcher(Byte[] value);
    public ExactObjectMatcher(MatchBehaviour matchBehaviour, Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
}
public class WireMock.Matchers.FormUrlEncodedMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private List`1<ValueTuple`2<WildcardMatcher, WildcardMatcher>> _pairs;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    [NullableAttribute("1")]
public string Name { get; }
    public bool IgnoreCase { get; }
    public MatchOperator MatchOperator { get; }
    public FormUrlEncodedMatcher(AnyOf`2<string, StringPattern> pattern, bool ignoreCase, MatchOperator matchOperator);
    public FormUrlEncodedMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern, bool ignoreCase, MatchOperator matchOperator);
    public FormUrlEncodedMatcher(AnyOf`2[] patterns, bool ignoreCase, MatchOperator matchOperator);
    public FormUrlEncodedMatcher(MatchBehaviour matchBehaviour, AnyOf`2[] patterns, bool ignoreCase, MatchOperator matchOperator);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    [NullableContextAttribute("1")]
private Boolean[] GetMatches(IDictionary`2<string, string> inputNameValueCollection);
    public virtual AnyOf`2[] GetPatterns();
    [NullableContextAttribute("1")]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    [NullableContextAttribute("1")]
public sealed virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.GraphQLMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    private ISchema _schema;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, Type> <CustomScalars>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, Type> CustomScalars { get; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public GraphQLMatcher(AnyOf`3<string, StringPattern, ISchema> schema, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    public GraphQLMatcher(AnyOf`3<string, StringPattern, ISchema> schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Type> get_CustomScalars();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
    private static bool TryGetGraphQLRequest(string input, GraphQLRequest& graphQLRequest);
    private ISchema BuildSchema(string typeDefinitions);
}
internal static class WireMock.Matchers.Helpers.BodyDataMatchScoreCalculator : object {
    [NullableContextAttribute("1")]
public static MatchResult CalculateMatchScore(IBodyData requestMessage, IMatcher matcher);
}
public interface WireMock.Matchers.IBytesMatcher {
    [NullableContextAttribute("1")]
public abstract virtual Task`1<MatchResult> IsMatchAsync(Byte[] input, CancellationToken cancellationToken);
}
public interface WireMock.Matchers.ICSharpCodeMatcher {
}
[NullableContextAttribute("2")]
public interface WireMock.Matchers.IDecodeBytesMatcher {
    public abstract virtual Task`1<object> DecodeAsync(Byte[] input, CancellationToken cancellationToken);
}
public interface WireMock.Matchers.IIgnoreCaseMatcher {
    public bool IgnoreCase { get; }
    public abstract virtual bool get_IgnoreCase();
}
public interface WireMock.Matchers.IJsonMatcher {
}
[NullableContextAttribute("1")]
public interface WireMock.Matchers.IMatcher {
    public string Name { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public abstract virtual string get_Name();
    public abstract virtual MatchBehaviour get_MatchBehaviour();
    public abstract virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
public interface WireMock.Matchers.IObjectMatcher {
    public object Value { get; }
    public abstract virtual object get_Value();
    [NullableContextAttribute("2")]
public abstract virtual MatchResult IsMatch(object input);
}
public interface WireMock.Matchers.IProtoBufMatcher {
}
public interface WireMock.Matchers.IStringMatcher {
    public MatchOperator MatchOperator { get; }
    [NullableContextAttribute("2")]
public abstract virtual MatchResult IsMatch(string input);
    public abstract virtual AnyOf`2[] GetPatterns();
    public abstract virtual MatchOperator get_MatchOperator();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.JmesPathMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public object Value { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public JmesPathMatcher(String[] patterns);
    public JmesPathMatcher(AnyOf`2[] patterns);
    public JmesPathMatcher(MatchOperator matchOperator, AnyOf`2[] patterns);
    public JmesPathMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, AnyOf`2[] patterns);
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.JsonMatcher : object {
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Regex>k__BackingField;
    private JToken _valueAsJToken;
    public string Name { get; }
    public object Value { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public bool IgnoreCase { get; }
    public bool Regex { get; }
    public JsonMatcher(string value, bool ignoreCase, bool regex);
    public JsonMatcher(object value, bool ignoreCase, bool regex);
    public JsonMatcher(MatchBehaviour matchBehaviour, object value, bool ignoreCase, bool regex);
    public virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public bool get_Regex();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    public virtual string GetCSharpCodeArguments();
    protected virtual bool IsMatch(JToken value, JToken input);
    private JToken RenameJToken(JToken input);
    private JProperty RenameJProperty(JProperty property);
    private JArray RenameJArray(JArray array);
    private JObject RenameJObject(JObject obj);
    [NullableContextAttribute("2")]
private static string ToUpper(string input);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.JsonPartialMatcher : AbstractJsonPartialMatcher {
    public string Name { get; }
    public JsonPartialMatcher(string value, bool ignoreCase, bool regex);
    public JsonPartialMatcher(object value, bool ignoreCase, bool regex);
    public JsonPartialMatcher(MatchBehaviour matchBehaviour, object value, bool ignoreCase, bool regex);
    public virtual string get_Name();
    protected virtual bool IsMatch(string value, string input);
    public virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.JsonPartialWildcardMatcher : AbstractJsonPartialMatcher {
    public string Name { get; }
    public JsonPartialWildcardMatcher(string value, bool ignoreCase, bool regex);
    public JsonPartialWildcardMatcher(object value, bool ignoreCase, bool regex);
    public JsonPartialWildcardMatcher(MatchBehaviour matchBehaviour, object value, bool ignoreCase, bool regex);
    public virtual string get_Name();
    protected virtual bool IsMatch(string value, string input);
    public virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.JsonPathMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public object Value { get; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public JsonPathMatcher(String[] patterns);
    public JsonPathMatcher(AnyOf`2[] patterns);
    public JsonPathMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, AnyOf`2[] patterns);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
    private double IsMatch(JToken jToken);
    private static JToken ConvertJTokenToJArrayIfNeeded(JToken jToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.LinqMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public object Value { get; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public LinqMatcher(AnyOf`2<string, StringPattern> pattern);
    public LinqMatcher(AnyOf`2[] patterns);
    public LinqMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern);
    public LinqMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, AnyOf`2[] patterns);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
}
public enum WireMock.Matchers.MatchBehaviour : Enum {
    public int value__;
    public static MatchBehaviour AcceptOnMatch;
    public static MatchBehaviour RejectOnMatch;
}
internal static class WireMock.Matchers.MatchBehaviourHelper : object {
    internal static double Convert(MatchBehaviour matchBehaviour, double match);
    internal static MatchResult Convert(MatchBehaviour matchBehaviour, MatchResult result);
}
public enum WireMock.Matchers.MatchOperator : Enum {
    public int value__;
    public static MatchOperator Or;
    public static MatchOperator And;
    public static MatchOperator Average;
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Matchers.MatchResult : ValueType {
    [CompilerGeneratedAttribute]
private double <Score>k__BackingField;
    [CompilerGeneratedAttribute]
private Exception <Exception>k__BackingField;
    public double Score { get; public set; }
    public Exception Exception { get; public set; }
    public MatchResult(double score, Exception exception);
    [NullableContextAttribute("1")]
public MatchResult(Exception exception);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public double get_Score();
    [CompilerGeneratedAttribute]
public void set_Score(double value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public Exception get_Exception();
    [CompilerGeneratedAttribute]
public void set_Exception(Exception value);
    public static MatchResult op_Implicit(double score);
    public bool IsPerfect();
    [NullableContextAttribute("1")]
public static MatchResult From(IReadOnlyList`1<MatchResult> matchResults, MatchOperator matchOperator);
    public ValueTuple`2<double, Exception> Expand();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class WireMock.Matchers.MatchScores : object {
    public static double Tolerance;
    public static double Mismatch;
    public static double Perfect;
    public static double AlmostPerfect;
    public static bool IsPerfect(double value);
    public static double ToScore(bool value);
    public static double ToScore(IReadOnlyCollection`1<bool> values, MatchOperator matchOperator);
    public static double ToScore(IReadOnlyCollection`1<double> values, MatchOperator matchOperator);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Matchers.MimePartMatcher : object {
    [NullableAttribute("1")]
private Func`2[] _funcs;
    [CompilerGeneratedAttribute]
private IStringMatcher <ContentTypeMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private IStringMatcher <ContentDispositionMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private IStringMatcher <ContentTransferEncodingMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private IMatcher <ContentMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [NullableAttribute("1")]
public string Name { get; }
    public IStringMatcher ContentTypeMatcher { get; }
    public IStringMatcher ContentDispositionMatcher { get; }
    public IStringMatcher ContentTransferEncodingMatcher { get; }
    public IMatcher ContentMatcher { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public MimePartMatcher(MatchBehaviour matchBehaviour, IStringMatcher contentTypeMatcher, IStringMatcher contentDispositionMatcher, IStringMatcher contentTransferEncodingMatcher, IMatcher contentMatcher);
    [NullableContextAttribute("1")]
public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public IStringMatcher get_ContentTypeMatcher();
    [CompilerGeneratedAttribute]
public IStringMatcher get_ContentDispositionMatcher();
    [CompilerGeneratedAttribute]
public IStringMatcher get_ContentTransferEncodingMatcher();
    [CompilerGeneratedAttribute]
public IMatcher get_ContentMatcher();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("1")]
public MatchResult IsMatch(MimePart mimePart);
    [NullableContextAttribute("1")]
public sealed virtual string GetCSharpCodeArguments();
    [NullableContextAttribute("1")]
private MatchResult MatchOnContent(MimePart mimePart);
    private static string GetContentTypeAsString(ContentType contentType);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private MatchResult <.ctor>b__18_0(MimePart mp);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private MatchResult <.ctor>b__18_1(MimePart mp);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
private MatchResult <.ctor>b__18_2(MimePart mp);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class WireMock.Matchers.Models.WireMockCustomScalarGraphType`1 : ScalarGraphType {
    public virtual object ParseValue(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.NotNullOrEmptyMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Value>k__BackingField;
    public string Name { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public object Value { get; }
    public MatchOperator MatchOperator { get; }
    public NotNullOrEmptyMatcher(MatchBehaviour matchBehaviour);
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public sealed virtual object get_Value();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(object input);
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public sealed virtual AnyOf`2[] GetPatterns();
    public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string GetCSharpCodeArguments();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.ProtoBufMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IdOrText> <ProtoDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <MessageType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IObjectMatcher <Matcher>k__BackingField;
    private static Converter ProtoBufToJsonConverter;
    public string Name { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public Func`1<IdOrText> ProtoDefinition { get; }
    public string MessageType { get; }
    [NullableAttribute("2")]
public IObjectMatcher Matcher { get; }
    public ProtoBufMatcher(Func`1<IdOrText> protoDefinition, string messageType, MatchBehaviour matchBehaviour, IObjectMatcher matcher);
    private static ProtoBufMatcher();
    public sealed virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public Func`1<IdOrText> get_ProtoDefinition();
    [CompilerGeneratedAttribute]
public string get_MessageType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IObjectMatcher get_Matcher();
    [AsyncStateMachineAttribute("WireMock.Matchers.ProtoBufMatcher/<IsMatchAsync>d__16")]
public sealed virtual Task`1<MatchResult> IsMatchAsync(Byte[] input, CancellationToken cancellationToken);
    [NullableContextAttribute("2")]
public sealed virtual Task`1<object> DecodeAsync(Byte[] input, CancellationToken cancellationToken);
    public sealed virtual string GetCSharpCodeArguments();
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("WireMock.Matchers.ProtoBufMatcher/<DecodeAsync>d__19")]
private Task`1<object> DecodeAsync(Byte[] input, bool throwException, CancellationToken cancellationToken);
}
public class WireMock.Matchers.RegexMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [NullableAttribute("1")]
private Regex[] _expressions;
    private bool _useRegexExtended;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    [NullableAttribute("1")]
public string Name { get; }
    public bool IgnoreCase { get; }
    public MatchOperator MatchOperator { get; }
    public RegexMatcher(AnyOf`2<string, StringPattern> pattern, bool ignoreCase, bool useRegexExtended, MatchOperator matchOperator);
    public RegexMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern, bool ignoreCase, bool useRegexExtended, MatchOperator matchOperator);
    public RegexMatcher(MatchBehaviour matchBehaviour, AnyOf`2[] patterns, bool ignoreCase, bool useRegexExtended, MatchOperator matchOperator);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public virtual MatchResult IsMatch(string input);
    public virtual AnyOf`2[] GetPatterns();
    [NullableContextAttribute("1")]
public virtual string get_Name();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    [NullableContextAttribute("1")]
public virtual string GetCSharpCodeArguments();
}
public enum WireMock.Matchers.Request.CompositeMatcherType : Enum {
    public int value__;
    public static CompositeMatcherType And;
    public static CompositeMatcherType Or;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMatchResult : object {
    [CompilerGeneratedAttribute]
private IList`1<MatchDetail> <MatchDetails>k__BackingField;
    public double TotalScore { get; }
    public int TotalNumber { get; }
    public bool IsPerfectMatch { get; }
    public double AverageTotalScore { get; }
    public IList`1<MatchDetail> MatchDetails { get; }
    public sealed virtual double get_TotalScore();
    public sealed virtual int get_TotalNumber();
    public sealed virtual bool get_IsPerfectMatch();
    public sealed virtual double get_AverageTotalScore();
    [CompilerGeneratedAttribute]
public sealed virtual IList`1<MatchDetail> get_MatchDetails();
    public sealed virtual double AddScore(Type matcherType, double score, Exception exception);
    [NullableContextAttribute("2")]
public sealed virtual int CompareTo(object obj);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageBodyMatcher : object {
    [CompilerGeneratedAttribute]
private Func`2<string, bool> <Func>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<Byte[], bool> <DataFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<object, bool> <JsonFunc>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<IBodyData, bool> <BodyDataFunc>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<IDictionary`2<string, string>, bool> <FormUrlEncodedFunc>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IMatcher[] <Matchers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public Func`2<string, bool> Func { get; }
    public Func`2<Byte[], bool> DataFunc { get; }
    public Func`2<object, bool> JsonFunc { get; }
    public Func`2<IBodyData, bool> BodyDataFunc { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<IDictionary`2<string, string>, bool> FormUrlEncodedFunc { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IMatcher[] Matchers { get; }
    public MatchOperator MatchOperator { get; }
    [NullableContextAttribute("1")]
public RequestMessageBodyMatcher(MatchBehaviour matchBehaviour, string body);
    [NullableContextAttribute("1")]
public RequestMessageBodyMatcher(MatchBehaviour matchBehaviour, Byte[] body);
    [NullableContextAttribute("1")]
public RequestMessageBodyMatcher(MatchBehaviour matchBehaviour, object body);
    public RequestMessageBodyMatcher(Func`2<string, bool> func);
    public RequestMessageBodyMatcher(Func`2<Byte[], bool> func);
    public RequestMessageBodyMatcher(Func`2<object, bool> func);
    public RequestMessageBodyMatcher(Func`2<IBodyData, bool> func);
    public RequestMessageBodyMatcher(Func`2<IDictionary`2<string, string>, bool> func);
    [NullableContextAttribute("1")]
public RequestMessageBodyMatcher(IMatcher[] matchers);
    [NullableContextAttribute("1")]
public RequestMessageBodyMatcher(MatchOperator matchOperator, IMatcher[] matchers);
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_Func();
    [CompilerGeneratedAttribute]
public Func`2<Byte[], bool> get_DataFunc();
    [CompilerGeneratedAttribute]
public Func`2<object, bool> get_JsonFunc();
    [CompilerGeneratedAttribute]
public Func`2<IBodyData, bool> get_BodyDataFunc();
    [CompilerGeneratedAttribute]
public Func`2<IDictionary`2<string, string>, bool> get_FormUrlEncodedFunc();
    [CompilerGeneratedAttribute]
public IMatcher[] get_Matchers();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    [NullableContextAttribute("1")]
public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    [NullableContextAttribute("1")]
private MatchResult CalculateMatchScore(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageClientIPMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<IStringMatcher> <Matchers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <Behaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IStringMatcher> Matchers { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public MatchBehaviour Behaviour { get; }
    public MatchOperator MatchOperator { get; }
    public RequestMessageClientIPMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] clientIPs);
    public RequestMessageClientIPMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, IStringMatcher[] matchers);
    public RequestMessageClientIPMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IStringMatcher> get_Matchers();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public MatchBehaviour get_Behaviour();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public abstract class WireMock.Matchers.Request.RequestMessageCompositeMatcher : object {
    private CompositeMatcherType _type;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IRequestMatcher> <RequestMatchers>k__BackingField;
    private IEnumerable`1<IRequestMatcher> RequestMatchers { get; }
    protected RequestMessageCompositeMatcher(IEnumerable`1<IRequestMatcher> requestMatchers, CompositeMatcherType type);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IRequestMatcher> get_RequestMatchers();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageCookieMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IStringMatcher[] <Matchers>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public bool IgnoreCase { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public string Name { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IStringMatcher[] Matchers { get; }
    public RequestMessageCookieMatcher(MatchBehaviour matchBehaviour, string name, string pattern, bool ignoreCase);
    public RequestMessageCookieMatcher(MatchBehaviour matchBehaviour, string name, bool ignoreCase, String[] patterns);
    public RequestMessageCookieMatcher(MatchBehaviour matchBehaviour, string name, bool ignoreCase, IStringMatcher[] matchers);
    public RequestMessageCookieMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IStringMatcher[] get_Matchers();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageGraphQLMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IMatcher[] <Matchers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IMatcher[] Matchers { get; }
    public MatchOperator MatchOperator { get; }
    public RequestMessageGraphQLMatcher(MatchBehaviour matchBehaviour, string schema, IDictionary`2<string, Type> customScalars);
    public RequestMessageGraphQLMatcher(MatchBehaviour matchBehaviour, ISchema schema, IDictionary`2<string, Type> customScalars);
    public RequestMessageGraphQLMatcher(IMatcher[] matchers);
    public RequestMessageGraphQLMatcher(MatchOperator matchOperator, IMatcher[] matchers);
    [CompilerGeneratedAttribute]
public IMatcher[] get_Matchers();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private static MatchResult CalculateMatchResult(IRequestMessage requestMessage, IMatcher matcher);
    private IReadOnlyList`1<MatchResult> CalculateMatchResults(IRequestMessage requestMessage);
    private static IMatcher[] CreateMatcherArray(MatchBehaviour matchBehaviour, AnyOf`3<string, StringPattern, ISchema> schema, IDictionary`2<string, Type> customScalars);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageHeaderMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IStringMatcher[] <Matchers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public bool IgnoreCase { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public string Name { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IStringMatcher[] Matchers { get; }
    public MatchOperator MatchOperator { get; }
    public RequestMessageHeaderMatcher(MatchBehaviour matchBehaviour, string name, string pattern, bool ignoreCase);
    public RequestMessageHeaderMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, string name, bool ignoreCase, String[] patterns);
    public RequestMessageHeaderMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, string name, bool ignoreCase, IStringMatcher[] matchers);
    public RequestMessageHeaderMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public IStringMatcher[] get_Matchers();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageHttpVersionMatcher : object {
    [CompilerGeneratedAttribute]
private IStringMatcher <Matcher>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<string, bool> <Func>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <Behaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpVersion>k__BackingField;
    public IStringMatcher Matcher { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2<string, bool> Func { get; }
    public MatchBehaviour Behaviour { get; }
    public string HttpVersion { get; }
    [NullableContextAttribute("1")]
public RequestMessageHttpVersionMatcher(MatchBehaviour matchBehaviour, string httpVersion);
    [NullableContextAttribute("1")]
public RequestMessageHttpVersionMatcher(MatchBehaviour matchBehaviour, IStringMatcher matcher);
    [NullableContextAttribute("1")]
public RequestMessageHttpVersionMatcher(Func`2<string, bool> func);
    [CompilerGeneratedAttribute]
public IStringMatcher get_Matcher();
    [CompilerGeneratedAttribute]
public Func`2<string, bool> get_Func();
    [CompilerGeneratedAttribute]
public MatchBehaviour get_Behaviour();
    [CompilerGeneratedAttribute]
public string get_HttpVersion();
    [NullableContextAttribute("1")]
public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    [NullableContextAttribute("1")]
private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Matchers.Request.RequestMessageMethodMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Methods>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public MatchOperator MatchOperator { get; }
    public String[] Methods { get; }
    public RequestMessageMethodMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] methods);
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    [CompilerGeneratedAttribute]
public String[] get_Methods();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageMultiPartMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IMatcher[] <Matchers>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IMatcher[] Matchers { get; }
    public MatchOperator MatchOperator { get; }
    public MatchBehaviour MatchBehaviour { get; }
    public RequestMessageMultiPartMatcher(IMatcher[] matchers);
    public RequestMessageMultiPartMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, IMatcher[] matchers);
    [CompilerGeneratedAttribute]
public IMatcher[] get_Matchers();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageParamMatcher : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Key>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<IStringMatcher> <Matchers>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public string Key { get; }
    public bool IgnoreCase { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IStringMatcher> Matchers { get; }
    public RequestMessageParamMatcher(MatchBehaviour matchBehaviour, string key, bool ignoreCase);
    public RequestMessageParamMatcher(MatchBehaviour matchBehaviour, string key, bool ignoreCase, String[] values);
    public RequestMessageParamMatcher(MatchBehaviour matchBehaviour, string key, bool ignoreCase, IStringMatcher[] matchers);
    public RequestMessageParamMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public string get_Key();
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IStringMatcher> get_Matchers();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private double GetMatchScore(IRequestMessage requestMessage);
    private static double CalculateScore(IReadOnlyList`1<IStringMatcher> matchers, WireMockList`1<string> valuesPresentInRequestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessagePathMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<IStringMatcher> <Matchers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <Behaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IStringMatcher> Matchers { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public MatchBehaviour Behaviour { get; }
    public MatchOperator MatchOperator { get; }
    public RequestMessagePathMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] paths);
    public RequestMessagePathMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, IStringMatcher[] matchers);
    public RequestMessagePathMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IStringMatcher> get_Matchers();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public MatchBehaviour get_Behaviour();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageProtoBufMatcher : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IProtoBufMatcher <Matcher>k__BackingField;
    [NullableAttribute("2")]
public IProtoBufMatcher Matcher { get; }
    public RequestMessageProtoBufMatcher(MatchBehaviour matchBehaviour, Func`1<IdOrText> protoDefinition, string messageType, IObjectMatcher matcher);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IProtoBufMatcher get_Matcher();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class WireMock.Matchers.Request.RequestMessageScenarioAndStateMatcher : object {
    private string _executionConditionState;
    private string _nextState;
    public RequestMessageScenarioAndStateMatcher(string nextState, string executionConditionState);
    [NullableContextAttribute("1")]
public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private double GetScore();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.Request.RequestMessageUrlMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IReadOnlyList`1<IStringMatcher> <Matchers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2[] <Funcs>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchBehaviour <Behaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IReadOnlyList`1<IStringMatcher> Matchers { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Func`2[] Funcs { get; }
    public MatchBehaviour Behaviour { get; }
    public MatchOperator MatchOperator { get; }
    public RequestMessageUrlMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] urls);
    public RequestMessageUrlMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, IStringMatcher[] matchers);
    public RequestMessageUrlMatcher(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public IReadOnlyList`1<IStringMatcher> get_Matchers();
    [CompilerGeneratedAttribute]
public Func`2[] get_Funcs();
    [CompilerGeneratedAttribute]
public MatchBehaviour get_Behaviour();
    [CompilerGeneratedAttribute]
public MatchOperator get_MatchOperator();
    public sealed virtual double GetMatchingScore(IRequestMessage requestMessage, IRequestMatchResult requestMatchResult);
    private MatchResult GetMatchResult(IRequestMessage requestMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.SimMetricsMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    private SimMetricType _simMetricType;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public SimMetricsMatcher(AnyOf`2<string, StringPattern> pattern, SimMetricType simMetricType);
    public SimMetricsMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern, SimMetricType simMetricType);
    public SimMetricsMatcher(String[] patterns, SimMetricType simMetricType);
    public SimMetricsMatcher(AnyOf`2[] patterns, SimMetricType simMetricType);
    public SimMetricsMatcher(MatchBehaviour matchBehaviour, AnyOf`2[] patterns, SimMetricType simMetricType, MatchOperator matchOperator);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public virtual string GetCSharpCodeArguments();
    private IStringMetric GetStringMetricType();
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.WildcardMatcher : RegexMatcher {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    public string Name { get; }
    public WildcardMatcher(AnyOf`2<string, StringPattern> pattern, bool ignoreCase);
    public WildcardMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> pattern, bool ignoreCase);
    public WildcardMatcher(AnyOf`2[] patterns, bool ignoreCase);
    public WildcardMatcher(MatchBehaviour matchBehaviour, AnyOf`2[] patterns, bool ignoreCase, MatchOperator matchOperator);
    public virtual AnyOf`2[] GetPatterns();
    public virtual string get_Name();
    public virtual string GetCSharpCodeArguments();
    private static AnyOf`2[] CreateArray(AnyOf`2[] patterns);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Matchers.XPathMatcher : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private AnyOf`2[] _patterns;
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private XmlNamespace[] <XmlNamespaceMap>k__BackingField;
    [CompilerGeneratedAttribute]
private MatchOperator <MatchOperator>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public XmlNamespace[] XmlNamespaceMap { get; private set; }
    public MatchOperator MatchOperator { get; }
    public string Name { get; }
    public XPathMatcher(AnyOf`2[] patterns);
    public XPathMatcher(MatchBehaviour matchBehaviour, MatchOperator matchOperator, XmlNamespace[] xmlNamespaceMap, AnyOf`2[] patterns);
    [CompilerGeneratedAttribute]
public sealed virtual MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public XmlNamespace[] get_XmlNamespaceMap();
    [CompilerGeneratedAttribute]
private void set_XmlNamespaceMap(XmlNamespace[] value);
    [NullableContextAttribute("2")]
public sealed virtual MatchResult IsMatch(string input);
    public sealed virtual AnyOf`2[] GetPatterns();
    [CompilerGeneratedAttribute]
public sealed virtual MatchOperator get_MatchOperator();
    public sealed virtual string get_Name();
    public sealed virtual string GetCSharpCodeArguments();
    [NullableContextAttribute("2")]
private MatchResult CreateMatchResult(double score, Exception exception);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Models.GraphQLSchemaDetails : object {
    [CompilerGeneratedAttribute]
private string <SchemaAsString>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<StringPattern> <SchemaAsStringPattern>k__BackingField;
    [CompilerGeneratedAttribute]
private ISchema <SchemaAsISchema>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, Type> <CustomScalars>k__BackingField;
    public string SchemaAsString { get; public set; }
    public Nullable`1<StringPattern> SchemaAsStringPattern { get; public set; }
    public ISchema SchemaAsISchema { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public Nullable`1<AnyOf`3<string, StringPattern, ISchema>> Schema { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, Type> CustomScalars { get; public set; }
    [CompilerGeneratedAttribute]
public string get_SchemaAsString();
    [CompilerGeneratedAttribute]
public void set_SchemaAsString(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<StringPattern> get_SchemaAsStringPattern();
    [CompilerGeneratedAttribute]
public void set_SchemaAsStringPattern(Nullable`1<StringPattern> value);
    [CompilerGeneratedAttribute]
public ISchema get_SchemaAsISchema();
    [CompilerGeneratedAttribute]
public void set_SchemaAsISchema(ISchema value);
    public Nullable`1<AnyOf`3<string, StringPattern, ISchema>> get_Schema();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Type> get_CustomScalars();
    [CompilerGeneratedAttribute]
public void set_CustomScalars(IDictionary`2<string, Type> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Models.StringPattern : ValueType {
    [CompilerGeneratedAttribute]
private string <Pattern>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <PatternAsFile>k__BackingField;
    public string Pattern { get; public set; }
    [NullableAttribute("2")]
public string PatternAsFile { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Pattern();
    [CompilerGeneratedAttribute]
public void set_Pattern(string value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_PatternAsFile();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_PatternAsFile(string value);
}
public class WireMock.Models.TimeSettings : object {
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <Start>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<DateTime> <End>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <TTL>k__BackingField;
    public Nullable`1<DateTime> Start { get; public set; }
    public Nullable`1<DateTime> End { get; public set; }
    public Nullable`1<int> TTL { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_Start();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Start(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<DateTime> get_End();
    [CompilerGeneratedAttribute]
public sealed virtual void set_End(Nullable`1<DateTime> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_TTL();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TTL(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Models.UrlDetails : object {
    [CompilerGeneratedAttribute]
private Uri <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private Uri <AbsoluteUrl>k__BackingField;
    public Uri Url { get; }
    public Uri AbsoluteUrl { get; }
    public UrlDetails(string url);
    public UrlDetails(Uri url);
    public UrlDetails(Uri absoluteUrl, Uri url);
    [CompilerGeneratedAttribute]
public Uri get_Url();
    [CompilerGeneratedAttribute]
public Uri get_AbsoluteUrl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Models.Webhook : object {
    [CompilerGeneratedAttribute]
private IWebhookRequest <Request>k__BackingField;
    public IWebhookRequest Request { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IWebhookRequest get_Request();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Request(IWebhookRequest value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Models.WebhookRequest : object {
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <Headers>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IBodyData <BodyData>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseTransformer>k__BackingField;
    [CompilerGeneratedAttribute]
private TransformerType <TransformerType>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplaceNodeOptions <TransformerReplaceNodeOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Delay>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumRandomDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumRandomDelay>k__BackingField;
    public string Url { get; public set; }
    public string Method { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> Headers { get; public set; }
    [NullableAttribute("2")]
public IBodyData BodyData { get; public set; }
    public Nullable`1<bool> UseTransformer { get; public set; }
    public TransformerType TransformerType { get; public set; }
    public ReplaceNodeOptions TransformerReplaceNodeOptions { get; public set; }
    public Nullable`1<int> Delay { get; public set; }
    public Nullable`1<int> MinimumRandomDelay { get; public set; }
    public Nullable`1<int> MaximumRandomDelay { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Url(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Method(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, WireMockList`1<string>> value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IBodyData get_BodyData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_BodyData(IBodyData value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_UseTransformer();
    [CompilerGeneratedAttribute]
public sealed virtual void set_UseTransformer(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual TransformerType get_TransformerType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TransformerType(TransformerType value);
    [CompilerGeneratedAttribute]
public sealed virtual ReplaceNodeOptions get_TransformerReplaceNodeOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TransformerReplaceNodeOptions(ReplaceNodeOptions value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_Delay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Delay(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MinimumRandomDelay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MinimumRandomDelay(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaximumRandomDelay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaximumRandomDelay(Nullable`1<int> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.AspNetCoreSelfHost : object {
    private static string CorsPolicyName;
    private CancellationTokenSource _cts;
    private IWireMockMiddlewareOptions _wireMockMiddlewareOptions;
    private IWireMockLogger _logger;
    private HostUrlOptions _urlOptions;
    private Exception _runningException;
    private IWebHost _host;
    [CompilerGeneratedAttribute]
private bool <IsStarted>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<int> <Ports>k__BackingField;
    public bool IsStarted { get; private set; }
    public List`1<string> Urls { get; }
    public List`1<int> Ports { get; }
    public Exception RunningException { get; }
    public AspNetCoreSelfHost(IWireMockMiddlewareOptions wireMockMiddlewareOptions, HostUrlOptions urlOptions);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsStarted();
    [CompilerGeneratedAttribute]
private void set_IsStarted(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual List`1<string> get_Urls();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<int> get_Ports();
    public sealed virtual Exception get_RunningException();
    public sealed virtual Task StartAsync();
    private Task RunHost(CancellationToken token);
    public sealed virtual Task StopAsync();
    private static void SetKestrelOptionsLimits(KestrelServerOptions options);
    private static void SetHttpsAndUrls(KestrelServerOptions kestrelOptions, IWireMockMiddlewareOptions wireMockMiddlewareOptions, IEnumerable`1<HostUrlDetails> urlDetails);
    private static void Listen(KestrelServerOptions kestrelOptions, HostUrlDetails urlDetail, Action`1<ListenOptions> configure);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <StartAsync>b__20_0(IServiceCollection services);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <StartAsync>b__20_1(IApplicationBuilder appBuilder);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private void <StartAsync>b__20_2(KestrelServerOptions options);
    [CompilerGeneratedAttribute]
private void <RunHost>b__21_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.GlobalExceptionMiddleware : object {
    private IWireMockMiddlewareOptions _options;
    private IOwinResponseMapper _responseMapper;
    [CompilerGeneratedAttribute]
private RequestDelegate <Next>k__BackingField;
    public RequestDelegate Next { get; }
    public GlobalExceptionMiddleware(RequestDelegate next, IWireMockMiddlewareOptions options, IOwinResponseMapper responseMapper);
    [CompilerGeneratedAttribute]
public RequestDelegate get_Next();
    public Task Invoke(HttpContext ctx);
    [AsyncStateMachineAttribute("WireMock.Owin.GlobalExceptionMiddleware/<InvokeInternalAsync>d__7")]
private Task InvokeInternalAsync(HttpContext ctx);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.HostUrlDetails : ValueType {
    [CompilerGeneratedAttribute]
private bool <IsHttps>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IsHttp2>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Scheme>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    public bool IsHttps { get; public set; }
    public bool IsHttp2 { get; public set; }
    public string Url { get; public set; }
    public string Scheme { get; public set; }
    public string Host { get; public set; }
    public int Port { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_IsHttps();
    [CompilerGeneratedAttribute]
public void set_IsHttps(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public bool get_IsHttp2();
    [CompilerGeneratedAttribute]
public void set_IsHttp2(bool value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Scheme();
    [CompilerGeneratedAttribute]
public void set_Scheme(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public string get_Host();
    [CompilerGeneratedAttribute]
public void set_Host(string value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public int get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.HostUrlOptions : object {
    private static string Star;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ICollection`1<string> <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private HostingScheme <HostingScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseHttp2>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Urls { get; public set; }
    public Nullable`1<int> Port { get; public set; }
    public HostingScheme HostingScheme { get; public set; }
    public Nullable`1<bool> UseHttp2 { get; public set; }
    [CompilerGeneratedAttribute]
public ICollection`1<string> get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(ICollection`1<string> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public HostingScheme get_HostingScheme();
    [CompilerGeneratedAttribute]
public void set_HostingScheme(HostingScheme value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseHttp2();
    [CompilerGeneratedAttribute]
public void set_UseHttp2(Nullable`1<bool> value);
    public IReadOnlyList`1<HostUrlDetails> GetDetails();
    private static int FindFreeTcpPort();
}
[NullableContextAttribute("1")]
internal interface WireMock.Owin.IMappingMatcher {
    public abstract virtual ValueTuple`2<MappingMatcherResult, MappingMatcherResult> FindBestMatch(RequestMessage request);
}
[NullableContextAttribute("1")]
internal interface WireMock.Owin.IOwinSelfHost {
    public bool IsStarted { get; }
    public List`1<string> Urls { get; }
    public List`1<int> Ports { get; }
    [NullableAttribute("2")]
public Exception RunningException { get; }
    public abstract virtual bool get_IsStarted();
    public abstract virtual List`1<string> get_Urls();
    public abstract virtual List`1<int> get_Ports();
    [NullableContextAttribute("2")]
public abstract virtual Exception get_RunningException();
    public abstract virtual Task StartAsync();
    public abstract virtual Task StopAsync();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
internal static class WireMock.Owin.IWebHostBuilderExtensions : object {
    [ExtensionAttribute]
internal static IWebHostBuilder ConfigureAppConfigurationUsingEnvironmentVariables(IWebHostBuilder builder);
    [ExtensionAttribute]
internal static IWebHostBuilder ConfigureKestrelServerOptions(IWebHostBuilder builder);
}
[NullableContextAttribute("2")]
internal interface WireMock.Owin.IWireMockMiddlewareOptions {
    [NullableAttribute("1")]
public IWireMockLogger Logger { get; public set; }
    public Nullable`1<TimeSpan> RequestProcessingDelay { get; public set; }
    public IStringMatcher AuthenticationMatcher { get; public set; }
    public Nullable`1<bool> AllowPartialMapping { get; public set; }
    [NullableAttribute("1")]
public ConcurrentDictionary`2<Guid, IMapping> Mappings { get; }
    [NullableAttribute("1")]
public ConcurrentDictionary`2<string, ScenarioState> Scenarios { get; }
    [NullableAttribute("1")]
public ConcurrentObservableCollection`1<LogEntry> LogEntries { get; }
    public Nullable`1<int> RequestLogExpirationDuration { get; public set; }
    public Nullable`1<int> MaxRequestLogCount { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PreWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PostWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IServiceCollection> AdditionalServiceRegistration { get; public set; }
    public Nullable`1<CorsPolicyOptions> CorsPolicyOptions { get; public set; }
    public ClientCertificateMode ClientCertificateMode { get; public set; }
    public bool AcceptAnyClientCertificate { get; public set; }
    public IFileSystemHandler FileSystemHandler { get; public set; }
    public Nullable`1<bool> AllowBodyForAllHttpMethods { get; public set; }
    public Nullable`1<bool> AllowOnlyDefinedHttpStatusCodeInResponse { get; public set; }
    public Nullable`1<bool> DisableJsonBodyParsing { get; public set; }
    public Nullable`1<bool> DisableRequestBodyDecompressing { get; public set; }
    public Nullable`1<bool> HandleRequestsSynchronously { get; public set; }
    public string X509StoreName { get; public set; }
    public string X509StoreLocation { get; public set; }
    public string X509ThumbprintOrSubjectName { get; public set; }
    public string X509CertificateFilePath { get; public set; }
    public string X509CertificatePassword { get; public set; }
    public bool CustomCertificateDefined { get; }
    public Nullable`1<bool> SaveUnmatchedRequests { get; public set; }
    public Nullable`1<bool> DoNotSaveDynamicResponseInLogEntry { get; public set; }
    public Nullable`1<QueryParameterMultipleValueSupport> QueryParameterMultipleValueSupport { get; public set; }
    public bool ProxyAll { get; public set; }
    [NullableContextAttribute("1")]
public abstract virtual IWireMockLogger get_Logger();
    [NullableContextAttribute("1")]
public abstract virtual void set_Logger(IWireMockLogger value);
    public abstract virtual Nullable`1<TimeSpan> get_RequestProcessingDelay();
    public abstract virtual void set_RequestProcessingDelay(Nullable`1<TimeSpan> value);
    public abstract virtual IStringMatcher get_AuthenticationMatcher();
    public abstract virtual void set_AuthenticationMatcher(IStringMatcher value);
    public abstract virtual Nullable`1<bool> get_AllowPartialMapping();
    public abstract virtual void set_AllowPartialMapping(Nullable`1<bool> value);
    [NullableContextAttribute("1")]
public abstract virtual ConcurrentDictionary`2<Guid, IMapping> get_Mappings();
    [NullableContextAttribute("1")]
public abstract virtual ConcurrentDictionary`2<string, ScenarioState> get_Scenarios();
    [NullableContextAttribute("1")]
public abstract virtual ConcurrentObservableCollection`1<LogEntry> get_LogEntries();
    public abstract virtual Nullable`1<int> get_RequestLogExpirationDuration();
    public abstract virtual void set_RequestLogExpirationDuration(Nullable`1<int> value);
    public abstract virtual Nullable`1<int> get_MaxRequestLogCount();
    public abstract virtual void set_MaxRequestLogCount(Nullable`1<int> value);
    public abstract virtual Action`1<IApplicationBuilder> get_PreWireMockMiddlewareInit();
    public abstract virtual void set_PreWireMockMiddlewareInit(Action`1<IApplicationBuilder> value);
    public abstract virtual Action`1<IApplicationBuilder> get_PostWireMockMiddlewareInit();
    public abstract virtual void set_PostWireMockMiddlewareInit(Action`1<IApplicationBuilder> value);
    public abstract virtual Action`1<IServiceCollection> get_AdditionalServiceRegistration();
    public abstract virtual void set_AdditionalServiceRegistration(Action`1<IServiceCollection> value);
    public abstract virtual Nullable`1<CorsPolicyOptions> get_CorsPolicyOptions();
    public abstract virtual void set_CorsPolicyOptions(Nullable`1<CorsPolicyOptions> value);
    public abstract virtual ClientCertificateMode get_ClientCertificateMode();
    public abstract virtual void set_ClientCertificateMode(ClientCertificateMode value);
    public abstract virtual bool get_AcceptAnyClientCertificate();
    public abstract virtual void set_AcceptAnyClientCertificate(bool value);
    public abstract virtual IFileSystemHandler get_FileSystemHandler();
    public abstract virtual void set_FileSystemHandler(IFileSystemHandler value);
    public abstract virtual Nullable`1<bool> get_AllowBodyForAllHttpMethods();
    public abstract virtual void set_AllowBodyForAllHttpMethods(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_AllowOnlyDefinedHttpStatusCodeInResponse();
    public abstract virtual void set_AllowOnlyDefinedHttpStatusCodeInResponse(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisableJsonBodyParsing();
    public abstract virtual void set_DisableJsonBodyParsing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DisableRequestBodyDecompressing();
    public abstract virtual void set_DisableRequestBodyDecompressing(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_HandleRequestsSynchronously();
    public abstract virtual void set_HandleRequestsSynchronously(Nullable`1<bool> value);
    public abstract virtual string get_X509StoreName();
    public abstract virtual void set_X509StoreName(string value);
    public abstract virtual string get_X509StoreLocation();
    public abstract virtual void set_X509StoreLocation(string value);
    public abstract virtual string get_X509ThumbprintOrSubjectName();
    public abstract virtual void set_X509ThumbprintOrSubjectName(string value);
    public abstract virtual string get_X509CertificateFilePath();
    public abstract virtual void set_X509CertificateFilePath(string value);
    public abstract virtual string get_X509CertificatePassword();
    public abstract virtual void set_X509CertificatePassword(string value);
    public abstract virtual bool get_CustomCertificateDefined();
    public abstract virtual Nullable`1<bool> get_SaveUnmatchedRequests();
    public abstract virtual void set_SaveUnmatchedRequests(Nullable`1<bool> value);
    public abstract virtual Nullable`1<bool> get_DoNotSaveDynamicResponseInLogEntry();
    public abstract virtual void set_DoNotSaveDynamicResponseInLogEntry(Nullable`1<bool> value);
    public abstract virtual Nullable`1<QueryParameterMultipleValueSupport> get_QueryParameterMultipleValueSupport();
    public abstract virtual void set_QueryParameterMultipleValueSupport(Nullable`1<QueryParameterMultipleValueSupport> value);
    public abstract virtual bool get_ProxyAll();
    public abstract virtual void set_ProxyAll(bool value);
}
[NullableContextAttribute("1")]
internal interface WireMock.Owin.Mappers.IOwinRequestMapper {
    public abstract virtual Task`1<RequestMessage> MapAsync(HttpRequest request, IWireMockMiddlewareOptions options);
}
[NullableContextAttribute("1")]
internal interface WireMock.Owin.Mappers.IOwinResponseMapper {
    public abstract virtual Task MapAsync(IResponseMessage responseMessage, HttpResponse response);
}
internal class WireMock.Owin.Mappers.OwinRequestMapper : object {
    [NullableContextAttribute("1")]
[AsyncStateMachineAttribute("WireMock.Owin.Mappers.OwinRequestMapper/<MapAsync>d__0")]
public sealed virtual Task`1<RequestMessage> MapAsync(HttpRequest request, IWireMockMiddlewareOptions options);
    [NullableContextAttribute("1")]
private static ValueTuple`2<UrlDetails, string> ParseRequest(HttpRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.Mappers.OwinResponseMapper : object {
    private IRandomizerNumber`1<double> _randomizerDouble;
    private IRandomizerBytes _randomizerBytes;
    private IWireMockMiddlewareOptions _options;
    private Encoding _utf8NoBom;
    private static IDictionary`2<string, Action`3<HttpResponse, bool, WireMockList`1<string>>> ResponseHeadersToFix;
    public OwinResponseMapper(IWireMockMiddlewareOptions options);
    private static OwinResponseMapper();
    [AsyncStateMachineAttribute("WireMock.Owin.Mappers.OwinResponseMapper/<MapAsync>d__6")]
public sealed virtual Task MapAsync(IResponseMessage responseMessage, HttpResponse response);
    private int MapStatusCode(int code);
    private bool IsFault(IResponseMessage responseMessage);
    [AsyncStateMachineAttribute("WireMock.Owin.Mappers.OwinResponseMapper/<GetNormalBodyAsync>d__9")]
private Task`1<Byte[]> GetNormalBodyAsync(IResponseMessage responseMessage);
    private static void SetResponseHeaders(IResponseMessage responseMessage, Byte[] bytes, HttpResponse response);
    private static void SetResponseTrailingHeaders(IResponseMessage responseMessage, HttpResponse response);
    private static void AppendResponseHeader(HttpResponse response, string headerName, String[] values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.MappingMatcher : object {
    private IWireMockMiddlewareOptions _options;
    private IRandomizerDoubleBetween0And1 _randomizerDoubleBetween0And1;
    public MappingMatcher(IWireMockMiddlewareOptions options, IRandomizerDoubleBetween0And1 randomizerDoubleBetween0And1);
    public sealed virtual ValueTuple`2<MappingMatcherResult, MappingMatcherResult> FindBestMatch(RequestMessage request);
    private void LogException(IMapping mapping, Exception ex);
    private string GetNextState(IMapping mapping);
    [NullableContextAttribute("0")]
[CompilerGeneratedAttribute]
private bool <FindBestMatch>b__3_1(IMapping m);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.MappingMatcherResult : object {
    [CompilerGeneratedAttribute]
private IMapping <Mapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestMatchResult <RequestMatchResult>k__BackingField;
    public IMapping Mapping { get; }
    public IRequestMatchResult RequestMatchResult { get; }
    public MappingMatcherResult(IMapping mapping, IRequestMatchResult requestMatchResult);
    [CompilerGeneratedAttribute]
public IMapping get_Mapping();
    [CompilerGeneratedAttribute]
public IRequestMatchResult get_RequestMatchResult();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Owin.WireMockMiddleware : object {
    private object _lock;
    private static Task CompletedTask;
    private IWireMockMiddlewareOptions _options;
    private IOwinRequestMapper _requestMapper;
    private IOwinResponseMapper _responseMapper;
    private IMappingMatcher _mappingMatcher;
    private LogEntryMapper _logEntryMapper;
    private IGuidUtils _guidUtils;
    public WireMockMiddleware(RequestDelegate next, IWireMockMiddlewareOptions options, IOwinRequestMapper requestMapper, IOwinResponseMapper responseMapper, IMappingMatcher mappingMatcher, IGuidUtils guidUtils);
    private static WireMockMiddleware();
    public Task Invoke(HttpContext ctx);
    [AsyncStateMachineAttribute("WireMock.Owin.WireMockMiddleware/<InvokeInternalAsync>d__10")]
private Task InvokeInternalAsync(HttpContext ctx);
    [AsyncStateMachineAttribute("WireMock.Owin.WireMockMiddleware/<SendToWebhooksAsync>d__11")]
private Task SendToWebhooksAsync(IMapping mapping, IRequestMessage request, IResponseMessage response);
    private void UpdateScenarioState(IMapping mapping);
    private void LogRequest(LogEntry entry, bool addRequest);
    private void TryAddLogEntry(LogEntry logEntry);
    private void TryRemoveLogEntry(LogEntry logEntry);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class WireMock.Owin.WireMockMiddlewareOptions : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IWireMockLogger <Logger>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<TimeSpan> <RequestProcessingDelay>k__BackingField;
    [CompilerGeneratedAttribute]
private IStringMatcher <AuthenticationMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPartialMapping>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ConcurrentDictionary`2<Guid, IMapping> <Mappings>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ConcurrentDictionary`2<string, ScenarioState> <Scenarios>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private ConcurrentObservableCollection`1<LogEntry> <LogEntries>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestLogExpirationDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRequestLogCount>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PreWireMockMiddlewareInit>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IApplicationBuilder> <PostWireMockMiddlewareInit>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IServiceCollection> <AdditionalServiceRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CorsPolicyOptions> <CorsPolicyOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientCertificateMode <ClientCertificateMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AcceptAnyClientCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystemHandler <FileSystemHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowBodyForAllHttpMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowOnlyDefinedHttpStatusCodeInResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableJsonBodyParsing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableRequestBodyDecompressing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HandleRequestsSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509StoreName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509StoreLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509ThumbprintOrSubjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509CertificateFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509CertificatePassword>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SaveUnmatchedRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DoNotSaveDynamicResponseInLogEntry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryParameterMultipleValueSupport> <QueryParameterMultipleValueSupport>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProxyAll>k__BackingField;
    [NullableAttribute("1")]
public IWireMockLogger Logger { get; public set; }
    public Nullable`1<TimeSpan> RequestProcessingDelay { get; public set; }
    public IStringMatcher AuthenticationMatcher { get; public set; }
    public Nullable`1<bool> AllowPartialMapping { get; public set; }
    [NullableAttribute("1")]
public ConcurrentDictionary`2<Guid, IMapping> Mappings { get; }
    [NullableAttribute("1")]
public ConcurrentDictionary`2<string, ScenarioState> Scenarios { get; }
    [NullableAttribute("1")]
public ConcurrentObservableCollection`1<LogEntry> LogEntries { get; }
    public Nullable`1<int> RequestLogExpirationDuration { get; public set; }
    public Nullable`1<int> MaxRequestLogCount { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PreWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IApplicationBuilder> PostWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Action`1<IServiceCollection> AdditionalServiceRegistration { get; public set; }
    public Nullable`1<CorsPolicyOptions> CorsPolicyOptions { get; public set; }
    public ClientCertificateMode ClientCertificateMode { get; public set; }
    public bool AcceptAnyClientCertificate { get; public set; }
    public IFileSystemHandler FileSystemHandler { get; public set; }
    public Nullable`1<bool> AllowBodyForAllHttpMethods { get; public set; }
    public Nullable`1<bool> AllowOnlyDefinedHttpStatusCodeInResponse { get; public set; }
    public Nullable`1<bool> DisableJsonBodyParsing { get; public set; }
    public Nullable`1<bool> DisableRequestBodyDecompressing { get; public set; }
    public Nullable`1<bool> HandleRequestsSynchronously { get; public set; }
    public string X509StoreName { get; public set; }
    public string X509StoreLocation { get; public set; }
    public string X509ThumbprintOrSubjectName { get; public set; }
    public string X509CertificateFilePath { get; public set; }
    public string X509CertificatePassword { get; public set; }
    public bool CustomCertificateDefined { get; }
    public Nullable`1<bool> SaveUnmatchedRequests { get; public set; }
    public Nullable`1<bool> DoNotSaveDynamicResponseInLogEntry { get; public set; }
    public Nullable`1<QueryParameterMultipleValueSupport> QueryParameterMultipleValueSupport { get; public set; }
    public bool ProxyAll { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual IWireMockLogger get_Logger();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual void set_Logger(IWireMockLogger value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<TimeSpan> get_RequestProcessingDelay();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestProcessingDelay(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public sealed virtual IStringMatcher get_AuthenticationMatcher();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AuthenticationMatcher(IStringMatcher value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowPartialMapping();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowPartialMapping(Nullable`1<bool> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual ConcurrentDictionary`2<Guid, IMapping> get_Mappings();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual ConcurrentDictionary`2<string, ScenarioState> get_Scenarios();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public sealed virtual ConcurrentObservableCollection`1<LogEntry> get_LogEntries();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_RequestLogExpirationDuration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_RequestLogExpirationDuration(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<int> get_MaxRequestLogCount();
    [CompilerGeneratedAttribute]
public sealed virtual void set_MaxRequestLogCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IApplicationBuilder> get_PreWireMockMiddlewareInit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PreWireMockMiddlewareInit(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IApplicationBuilder> get_PostWireMockMiddlewareInit();
    [CompilerGeneratedAttribute]
public sealed virtual void set_PostWireMockMiddlewareInit(Action`1<IApplicationBuilder> value);
    [CompilerGeneratedAttribute]
public sealed virtual Action`1<IServiceCollection> get_AdditionalServiceRegistration();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AdditionalServiceRegistration(Action`1<IServiceCollection> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<CorsPolicyOptions> get_CorsPolicyOptions();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CorsPolicyOptions(Nullable`1<CorsPolicyOptions> value);
    [CompilerGeneratedAttribute]
public sealed virtual ClientCertificateMode get_ClientCertificateMode();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ClientCertificateMode(ClientCertificateMode value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_AcceptAnyClientCertificate();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AcceptAnyClientCertificate(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual IFileSystemHandler get_FileSystemHandler();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FileSystemHandler(IFileSystemHandler value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowBodyForAllHttpMethods();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowBodyForAllHttpMethods(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_AllowOnlyDefinedHttpStatusCodeInResponse();
    [CompilerGeneratedAttribute]
public sealed virtual void set_AllowOnlyDefinedHttpStatusCodeInResponse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableJsonBodyParsing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableJsonBodyParsing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DisableRequestBodyDecompressing();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DisableRequestBodyDecompressing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_HandleRequestsSynchronously();
    [CompilerGeneratedAttribute]
public sealed virtual void set_HandleRequestsSynchronously(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_X509StoreName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_X509StoreName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_X509StoreLocation();
    [CompilerGeneratedAttribute]
public sealed virtual void set_X509StoreLocation(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_X509ThumbprintOrSubjectName();
    [CompilerGeneratedAttribute]
public sealed virtual void set_X509ThumbprintOrSubjectName(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_X509CertificateFilePath();
    [CompilerGeneratedAttribute]
public sealed virtual void set_X509CertificateFilePath(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_X509CertificatePassword();
    [CompilerGeneratedAttribute]
public sealed virtual void set_X509CertificatePassword(string value);
    public sealed virtual bool get_CustomCertificateDefined();
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_SaveUnmatchedRequests();
    [CompilerGeneratedAttribute]
public sealed virtual void set_SaveUnmatchedRequests(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_DoNotSaveDynamicResponseInLogEntry();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DoNotSaveDynamicResponseInLogEntry(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<QueryParameterMultipleValueSupport> get_QueryParameterMultipleValueSupport();
    [CompilerGeneratedAttribute]
public sealed virtual void set_QueryParameterMultipleValueSupport(Nullable`1<QueryParameterMultipleValueSupport> value);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ProxyAll();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProxyAll(bool value);
}
internal static class WireMock.Owin.WireMockMiddlewareOptionsHelper : object {
    [NullableContextAttribute("1")]
public static IWireMockMiddlewareOptions InitFromSettings(WireMockServerSettings settings, IWireMockMiddlewareOptions options, Action`1<IWireMockMiddlewareOptions> postConfigure);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.Interaction : object {
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Description>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ProviderState>k__BackingField;
    [CompilerGeneratedAttribute]
private PactRequest <Request>k__BackingField;
    [CompilerGeneratedAttribute]
private PactResponse <Response>k__BackingField;
    [NullableAttribute("2")]
public string Description { get; public set; }
    [NullableAttribute("2")]
public string ProviderState { get; public set; }
    public PactRequest Request { get; public set; }
    public PactResponse Response { get; public set; }
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_Description();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_Description(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_ProviderState();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ProviderState(string value);
    [CompilerGeneratedAttribute]
public PactRequest get_Request();
    [CompilerGeneratedAttribute]
public void set_Request(PactRequest value);
    [CompilerGeneratedAttribute]
public PactResponse get_Response();
    [CompilerGeneratedAttribute]
public void set_Response(PactResponse value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.MatchingRule : object {
    [CompilerGeneratedAttribute]
private string <Match>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Min>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Max>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Regex>k__BackingField;
    public string Match { get; public set; }
    public string Min { get; public set; }
    public string Max { get; public set; }
    public string Regex { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Match();
    [CompilerGeneratedAttribute]
public void set_Match(string value);
    [CompilerGeneratedAttribute]
public string get_Min();
    [CompilerGeneratedAttribute]
public void set_Min(string value);
    [CompilerGeneratedAttribute]
public string get_Max();
    [CompilerGeneratedAttribute]
public void set_Max(string value);
    [CompilerGeneratedAttribute]
public string get_Regex();
    [CompilerGeneratedAttribute]
public void set_Regex(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.Metadata : object {
    [CompilerGeneratedAttribute]
private string <PactSpecificationVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private PactSpecification <PactSpecification>k__BackingField;
    public string PactSpecificationVersion { get; public set; }
    public PactSpecification PactSpecification { get; public set; }
    [CompilerGeneratedAttribute]
public string get_PactSpecificationVersion();
    [CompilerGeneratedAttribute]
public void set_PactSpecificationVersion(string value);
    [CompilerGeneratedAttribute]
public PactSpecification get_PactSpecification();
    [CompilerGeneratedAttribute]
public void set_PactSpecification(PactSpecification value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.Pact : object {
    [CompilerGeneratedAttribute]
private Pacticipant <Consumer>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<Interaction> <Interactions>k__BackingField;
    [CompilerGeneratedAttribute]
private Metadata <Metadata>k__BackingField;
    [CompilerGeneratedAttribute]
private Pacticipant <Provider>k__BackingField;
    public Pacticipant Consumer { get; public set; }
    public List`1<Interaction> Interactions { get; public set; }
    public Metadata Metadata { get; public set; }
    public Pacticipant Provider { get; public set; }
    [CompilerGeneratedAttribute]
public Pacticipant get_Consumer();
    [CompilerGeneratedAttribute]
public void set_Consumer(Pacticipant value);
    [CompilerGeneratedAttribute]
public List`1<Interaction> get_Interactions();
    [CompilerGeneratedAttribute]
public void set_Interactions(List`1<Interaction> value);
    [CompilerGeneratedAttribute]
public Metadata get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(Metadata value);
    [CompilerGeneratedAttribute]
public Pacticipant get_Provider();
    [CompilerGeneratedAttribute]
public void set_Provider(Pacticipant value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.Pacticipant : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    public string Name { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.PactRequest : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Query>k__BackingField;
    [CompilerGeneratedAttribute]
private object <Body>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; public set; }
    [NullableAttribute("1")]
public string Method { get; public set; }
    public string Path { get; public set; }
    public string Query { get; public set; }
    public object Body { get; public set; }
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, string> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Method();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Method(string value);
    [CompilerGeneratedAttribute]
public string get_Path();
    [CompilerGeneratedAttribute]
public void set_Path(string value);
    [CompilerGeneratedAttribute]
public string get_Query();
    [CompilerGeneratedAttribute]
public void set_Query(string value);
    [CompilerGeneratedAttribute]
public object get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.PactResponse : object {
    [CompilerGeneratedAttribute]
private object <Body>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Headers>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Status>k__BackingField;
    public object Body { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; public set; }
    public int Status { get; public set; }
    [CompilerGeneratedAttribute]
public object get_Body();
    [CompilerGeneratedAttribute]
public void set_Body(object value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public int get_Status();
    [CompilerGeneratedAttribute]
public void set_Status(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.PactRust : object {
    [CompilerGeneratedAttribute]
private string <Ffi>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Mockserver>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Models>k__BackingField;
    public string Ffi { get; public set; }
    public string Mockserver { get; public set; }
    public string Models { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Ffi();
    [CompilerGeneratedAttribute]
public void set_Ffi(string value);
    [CompilerGeneratedAttribute]
public string get_Mockserver();
    [CompilerGeneratedAttribute]
public void set_Mockserver(string value);
    [CompilerGeneratedAttribute]
public string get_Models();
    [CompilerGeneratedAttribute]
public void set_Models(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.PactSpecification : object {
    [CompilerGeneratedAttribute]
private string <Version>k__BackingField;
    public string Version { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Pact.Models.V2.ProviderState : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Params>k__BackingField;
    public string Name { get; public set; }
    public IDictionary`2<string, string> Params { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, string> get_Params();
    [CompilerGeneratedAttribute]
public void set_Params(IDictionary`2<string, string> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Proxy.ProxyHelper : object {
    private WireMockServerSettings _settings;
    private ProxyMappingConverter _proxyMappingConverter;
    public ProxyHelper(WireMockServerSettings settings);
    [AsyncStateMachineAttribute("WireMock.Proxy.ProxyHelper/<SendAsync>d__3")]
public Task`1<ValueTuple`2<IResponseMessage, IMapping>> SendAsync(IMapping mapping, ProxyAndRecordSettings proxyAndRecordSettings, HttpClient client, IRequestMessage requestMessage, string url);
    private static bool Check(ProxySaveMappingSetting`1<T> saveMappingSetting, Func`1<bool> action);
}
public class WireMock.RegistrationCallback : MulticastDelegate {
    public RegistrationCallback(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual void Invoke(IMapping mapping, bool saveToFile);
    public virtual IAsyncResult BeginInvoke(IMapping mapping, bool saveToFile, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.RegularExpressions.RegexExtended : Regex {
    private static Dictionary`2<string, string> GuidTokenPatterns;
    public RegexExtended(string pattern);
    public RegexExtended(string pattern, RegexOptions options);
    public RegexExtended(string pattern, RegexOptions options, TimeSpan matchTimeout);
    protected RegexExtended(SerializationInfo info, StreamingContext context);
    private static RegexExtended();
    private static string ReplaceGuidPattern(string pattern);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.IBodyRequestBuilder {
    public abstract virtual IRequestBuilder WithBody(IMatcher matcher);
    public abstract virtual IRequestBuilder WithBody(IMatcher[] matchers, MatchOperator matchOperator);
    public abstract virtual IRequestBuilder WithBody(string body, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBody(Byte[] body, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBody(object body, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBodyAsJson(object body, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBody(Func`2<string, bool> func);
    public abstract virtual IRequestBuilder WithBody(Func`2<Byte[], bool> func);
    public abstract virtual IRequestBuilder WithBody(Func`2<object, bool> func);
    public abstract virtual IRequestBuilder WithBody(Func`2<IBodyData, bool> func);
    public abstract virtual IRequestBuilder WithBody(Func`2<IDictionary`2<string, string>, bool> func);
    public abstract virtual IRequestBuilder WithBodyAsGraphQLSchema(string body, MatchBehaviour matchBehaviour);
}
public interface WireMock.RequestBuilders.IClientIPRequestBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithClientIP(IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithClientIP(MatchOperator matchOperator, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithClientIP(String[] clientIPs);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithClientIP(MatchOperator matchOperator, String[] clientIPs);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithClientIP(Func`2[] funcs);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.ICookiesRequestBuilder {
    public abstract virtual IRequestBuilder WithCookie(string name, string pattern, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithCookie(string name, string pattern, bool ignoreCase, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithCookie(string name, String[] patterns, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithCookie(string name, String[] patterns, bool ignoreCase, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithCookie(string name, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithCookie(string name, bool ignoreCase, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithCookie(string name, bool ignoreCase, MatchBehaviour matchBehaviour, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithCookie(Func`2[] funcs);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.IGraphQLRequestBuilder {
    public abstract virtual IRequestBuilder WithGraphQLSchema(string schema, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithGraphQLSchema(string schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBodyAsGraphQL(string schema, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBodyAsGraphQL(string schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithGraphQLSchema(ISchema schema, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithGraphQLSchema(ISchema schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBodyAsGraphQL(ISchema schema, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithBodyAsGraphQL(ISchema schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
}
public interface WireMock.RequestBuilders.IHeadersRequestBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, string pattern, MatchBehaviour matchBehaviour);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, string pattern, bool ignoreCase, MatchBehaviour matchBehaviour);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, String[] patterns, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, String[] patterns, bool ignoreCase, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, bool ignoreCase, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(string name, bool ignoreCase, MatchBehaviour matchBehaviour, MatchOperator matchOperator, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHeader(Func`2[] funcs);
}
public interface WireMock.RequestBuilders.IHttpVersionBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithHttpVersion(string version, MatchBehaviour matchBehaviour);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.IMethodRequestBuilder {
    public abstract virtual IRequestBuilder UsingConnect(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingDelete(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingGet(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingHead(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingPost(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingPatch(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingOptions(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingPut(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingTrace(MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder UsingAnyMethod();
    public abstract virtual IRequestBuilder UsingMethod(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] methods);
    public abstract virtual IRequestBuilder UsingMethod(String[] methods);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.IMultiPartRequestBuilder {
    public abstract virtual IRequestBuilder WithMultiPart(IMatcher matcher);
    public abstract virtual IRequestBuilder WithMultiPart(IMatcher[] matchers, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    public abstract virtual IRequestBuilder WithMultiPart(MatchBehaviour matchBehaviour, IMatcher[] matchers);
}
[NullableContextAttribute("1")]
public interface WireMock.RequestBuilders.IParamsRequestBuilder {
    public abstract virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithParam(string key, bool ignoreCase, MatchBehaviour matchBehaviour);
    public abstract virtual IRequestBuilder WithParam(string key, String[] values);
    public abstract virtual IRequestBuilder WithParam(string key, bool ignoreCase, String[] values);
    public abstract virtual IRequestBuilder WithParam(string key, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithParam(string key, bool ignoreCase, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, String[] values);
    public abstract virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, bool ignoreCase, String[] values);
    public abstract virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, bool ignoreCase, IStringMatcher[] matchers);
    public abstract virtual IRequestBuilder WithParam(Func`2[] funcs);
}
public interface WireMock.RequestBuilders.IProtoBufRequestBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, MatchBehaviour matchBehaviour);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, IObjectMatcher matcher, MatchBehaviour matchBehaviour);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithBodyAsProtoBuf(string messageType, MatchBehaviour matchBehaviour);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithBodyAsProtoBuf(string messageType, IObjectMatcher matcher, MatchBehaviour matchBehaviour);
}
public interface WireMock.RequestBuilders.IRequestBuilder {
}
public interface WireMock.RequestBuilders.IUrlAndPathRequestBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithPath(IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithPath(MatchOperator matchOperator, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithPath(String[] paths);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithPath(MatchOperator matchOperator, String[] paths);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithPath(Func`2[] funcs);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithUrl(IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithUrl(MatchOperator matchOperator, IStringMatcher[] matchers);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithUrl(String[] urls);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithUrl(MatchOperator matchOperator, String[] urls);
    [NullableContextAttribute("1")]
public abstract virtual IRequestBuilder WithUrl(Func`2[] funcs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.RequestBuilders.Request : RequestMessageCompositeMatcher {
    private IList`1<IRequestMatcher> _requestMatchers;
    [CompilerGeneratedAttribute]
private IMapping <Mapping>k__BackingField;
    public IMapping Mapping { get; public set; }
    private Request(IList`1<IRequestMatcher> requestMatchers);
    public sealed virtual IRequestBuilder WithClientIP(IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithClientIP(MatchOperator matchOperator, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithClientIP(String[] clientIPs);
    public sealed virtual IRequestBuilder WithClientIP(MatchOperator matchOperator, String[] clientIPs);
    public sealed virtual IRequestBuilder WithClientIP(Func`2[] funcs);
    [CompilerGeneratedAttribute]
public IMapping get_Mapping();
    [CompilerGeneratedAttribute]
public void set_Mapping(IMapping value);
    public static IRequestBuilder Create();
    public IList`1<T> GetRequestMessageMatchers();
    [NullableContextAttribute("0")]
public T GetRequestMessageMatcher();
    public T GetRequestMessageMatcher(Func`2<T, bool> func);
    private IRequestBuilder Add(T requestMatcher);
    public sealed virtual IRequestBuilder UsingConnect(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingDelete(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingGet(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingHead(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingOptions(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingPost(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingPatch(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingPut(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingTrace(MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder UsingAnyMethod();
    public sealed virtual IRequestBuilder UsingMethod(String[] methods);
    public sealed virtual IRequestBuilder UsingMethod(MatchBehaviour matchBehaviour, MatchOperator matchOperator, String[] methods);
    public sealed virtual IRequestBuilder WithBody(string body, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBody(Byte[] body, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBody(object body, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsJson(object body, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBody(IMatcher matcher);
    public sealed virtual IRequestBuilder WithBody(IMatcher[] matchers, MatchOperator matchOperator);
    public sealed virtual IRequestBuilder WithBody(Func`2<string, bool> func);
    public sealed virtual IRequestBuilder WithBody(Func`2<Byte[], bool> func);
    public sealed virtual IRequestBuilder WithBody(Func`2<object, bool> func);
    public sealed virtual IRequestBuilder WithBody(Func`2<IBodyData, bool> func);
    public sealed virtual IRequestBuilder WithBody(Func`2<IDictionary`2<string, string>, bool> func);
    public sealed virtual IRequestBuilder WithBodyAsGraphQLSchema(string body, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, IObjectMatcher matcher, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsProtoBuf(string messageType, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsProtoBuf(string messageType, IObjectMatcher matcher, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithCookie(string name, string pattern, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithCookie(string name, string pattern, bool ignoreCase, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithCookie(string name, String[] patterns, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithCookie(string name, String[] patterns, bool ignoreCase, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithCookie(string name, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithCookie(string name, bool ignoreCase, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithCookie(string name, bool ignoreCase, MatchBehaviour matchBehaviour, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithCookie(Func`2[] funcs);
    public sealed virtual IRequestBuilder WithGraphQLSchema(string schema, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithGraphQLSchema(string schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsGraphQL(string schema, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsGraphQL(string schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithGraphQLSchema(ISchema schema, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithGraphQLSchema(ISchema schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsGraphQL(ISchema schema, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithBodyAsGraphQL(ISchema schema, IDictionary`2<string, Type> customScalars, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithHeader(string name, string pattern, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithHeader(string name, string pattern, bool ignoreCase, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithHeader(string name, String[] patterns, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    public sealed virtual IRequestBuilder WithHeader(string name, String[] patterns, bool ignoreCase, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    public sealed virtual IRequestBuilder WithHeader(string name, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithHeader(string name, bool ignoreCase, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithHeader(string name, bool ignoreCase, MatchBehaviour matchBehaviour, MatchOperator matchOperator, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithHeader(Func`2[] funcs);
    public sealed virtual IRequestBuilder WithHttpVersion(string version, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithMultiPart(IMatcher matcher);
    public sealed virtual IRequestBuilder WithMultiPart(IMatcher[] matchers, MatchBehaviour matchBehaviour, MatchOperator matchOperator);
    public sealed virtual IRequestBuilder WithMultiPart(MatchBehaviour matchBehaviour, IMatcher[] matchers);
    public sealed virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithParam(string key, bool ignoreCase, MatchBehaviour matchBehaviour);
    public sealed virtual IRequestBuilder WithParam(string key, String[] values);
    public sealed virtual IRequestBuilder WithParam(string key, bool ignoreCase, String[] values);
    public sealed virtual IRequestBuilder WithParam(string key, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithParam(string key, bool ignoreCase, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, String[] values);
    public sealed virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, bool ignoreCase, String[] values);
    public sealed virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithParam(string key, MatchBehaviour matchBehaviour, bool ignoreCase, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithParam(Func`2[] funcs);
    public sealed virtual IRequestBuilder WithPath(IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithPath(MatchOperator matchOperator, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithPath(String[] paths);
    public sealed virtual IRequestBuilder WithPath(MatchOperator matchOperator, String[] paths);
    public sealed virtual IRequestBuilder WithPath(Func`2[] funcs);
    public sealed virtual IRequestBuilder WithUrl(IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithUrl(MatchOperator matchOperator, IStringMatcher[] matchers);
    public sealed virtual IRequestBuilder WithUrl(String[] urls);
    public sealed virtual IRequestBuilder WithUrl(MatchOperator matchOperator, String[] urls);
    public sealed virtual IRequestBuilder WithUrl(Func`2[] funcs);
    [CompilerGeneratedAttribute]
private IdOrText <WithBodyAsProtoBuf>b__42_0();
    [CompilerGeneratedAttribute]
private IdOrText <WithBodyAsProtoBuf>b__43_0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.RequestMessage : object {
    [CompilerGeneratedAttribute]
private string <ClientIP>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AbsoluteUrl>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <ProxyUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private DateTime <DateTime>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AbsolutePath>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <PathSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <AbsolutePathSegments>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Method>k__BackingField;
    [CompilerGeneratedAttribute]
private string <HttpVersion>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <Headers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <Cookies>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <Query>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <QueryIgnoreCase>k__BackingField;
    [CompilerGeneratedAttribute]
private string <RawQuery>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IBodyData <BodyData>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Body>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <BodyAsJson>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private Byte[] <BodyAsBytes>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <BodyAsMimeMessage>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DetectedBodyType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DetectedBodyTypeFromContentType>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <DetectedCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Host>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Protocol>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Origin>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private X509Certificate2 <ClientCertificate>k__BackingField;
    public string ClientIP { get; }
    public string Url { get; }
    public string AbsoluteUrl { get; }
    [NullableAttribute("2")]
public string ProxyUrl { get; public set; }
    public DateTime DateTime { get; public set; }
    public string Path { get; }
    public string AbsolutePath { get; }
    public String[] PathSegments { get; }
    public String[] AbsolutePathSegments { get; }
    public string Method { get; }
    public string HttpVersion { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> Headers { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Cookies { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> Query { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> QueryIgnoreCase { get; }
    public string RawQuery { get; }
    [NullableAttribute("2")]
public IBodyData BodyData { get; }
    [NullableAttribute("2")]
public string Body { get; }
    [NullableAttribute("2")]
public object BodyAsJson { get; public set; }
    [NullableAttribute("2")]
public Byte[] BodyAsBytes { get; }
    [NullableAttribute("2")]
[JsonIgnoreAttribute]
public object BodyAsMimeMessage { get; }
    [NullableAttribute("2")]
public string DetectedBodyType { get; }
    [NullableAttribute("2")]
public string DetectedBodyTypeFromContentType { get; }
    [NullableAttribute("2")]
public string DetectedCompression { get; }
    public string Host { get; }
    public string Protocol { get; }
    public int Port { get; }
    public string Origin { get; }
    [NullableAttribute("2")]
public X509Certificate2 ClientCertificate { get; }
    internal RequestMessage(UrlDetails urlDetails, string method, string clientIP, IBodyData bodyData, IDictionary`2<string, String[]> headers, IDictionary`2<string, string> cookies);
    internal RequestMessage(IWireMockMiddlewareOptions options, UrlDetails urlDetails, string method, string clientIP, IBodyData bodyData, IDictionary`2<string, String[]> headers, IDictionary`2<string, string> cookies, string httpVersion, X509Certificate2 clientCertificate);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ClientIP();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Url();
    [CompilerGeneratedAttribute]
public sealed virtual string get_AbsoluteUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_ProxyUrl();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual void set_ProxyUrl(string value);
    [CompilerGeneratedAttribute]
public sealed virtual DateTime get_DateTime();
    [CompilerGeneratedAttribute]
public void set_DateTime(DateTime value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
public sealed virtual string get_AbsolutePath();
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_PathSegments();
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_AbsolutePathSegments();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Method();
    [CompilerGeneratedAttribute]
public sealed virtual string get_HttpVersion();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_Cookies();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_Query();
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_QueryIgnoreCase();
    [CompilerGeneratedAttribute]
public sealed virtual string get_RawQuery();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual IBodyData get_BodyData();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Body();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual object get_BodyAsJson();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_BodyAsJson(object value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual Byte[] get_BodyAsBytes();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual object get_BodyAsMimeMessage();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DetectedBodyType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DetectedBodyTypeFromContentType();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_DetectedCompression();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Host();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Protocol();
    [CompilerGeneratedAttribute]
public sealed virtual int get_Port();
    [CompilerGeneratedAttribute]
public sealed virtual string get_Origin();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual X509Certificate2 get_ClientCertificate();
    public sealed virtual WireMockList`1<string> GetParameter(string key, bool ignoreCase);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class WireMock.ResponseBuilders.BodyDestinationFormat : object {
    public static string SameAsSource;
    public static string String;
    public static string Bytes;
    public static string Json;
}
[NullableContextAttribute("1")]
public interface WireMock.ResponseBuilders.IBodyResponseBuilder {
    public abstract virtual IResponseBuilder WithBody(string body, string destination, Encoding encoding);
    public abstract virtual IResponseBuilder WithBody(Func`2<IRequestMessage, string> bodyFactory, string destination, Encoding encoding);
    public abstract virtual IResponseBuilder WithBody(Func`2<IRequestMessage, Task`1<string>> bodyFactory, string destination, Encoding encoding);
    public abstract virtual IResponseBuilder WithBody(Byte[] body, string destination, Encoding encoding);
    public abstract virtual IResponseBuilder WithBodyAsJson(object body, Encoding encoding, Nullable`1<bool> indented);
    public abstract virtual IResponseBuilder WithBodyAsJson(object body, bool indented);
    public abstract virtual IResponseBuilder WithBodyAsJson(Func`2<IRequestMessage, object> bodyFactory, Encoding encoding);
    public abstract virtual IResponseBuilder WithBodyAsJson(Func`2<IRequestMessage, Task`1<object>> bodyFactory, Encoding encoding);
    public abstract virtual IResponseBuilder WithBodyFromFile(string filename, bool cache);
    public abstract virtual IResponseBuilder WithBody(object body, IJsonConverter jsonConverter, JsonConverterOptions options);
    public abstract virtual IResponseBuilder WithBody(object body, Encoding encoding, IJsonConverter jsonConverter, JsonConverterOptions options);
    public abstract virtual IResponseBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, object value, IJsonConverter jsonConverter, JsonConverterOptions options);
    public abstract virtual IResponseBuilder WithBodyAsProtoBuf(string messageType, object value, IJsonConverter jsonConverter, JsonConverterOptions options);
}
[NullableContextAttribute("1")]
public interface WireMock.ResponseBuilders.ICallbackResponseBuilder {
    public abstract virtual IResponseBuilder WithCallback(Func`2<IRequestMessage, ResponseMessage> callbackHandler);
    public abstract virtual IResponseBuilder WithCallback(Func`2<IRequestMessage, Task`1<ResponseMessage>> callbackHandler);
}
[NullableContextAttribute("1")]
public interface WireMock.ResponseBuilders.IDelayResponseBuilder {
    public abstract virtual IResponseBuilder WithDelay(TimeSpan delay);
    public abstract virtual IResponseBuilder WithDelay(int milliseconds);
    public abstract virtual IResponseBuilder WithRandomDelay(int minimumMilliseconds, int maximumMilliseconds);
}
public interface WireMock.ResponseBuilders.IFaultResponseBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithFault(FaultType faultType, Nullable`1<double> percentage);
}
[NullableContextAttribute("1")]
public interface WireMock.ResponseBuilders.IHeadersResponseBuilder {
    public abstract virtual IResponseBuilder WithHeader(string name, String[] values);
    public abstract virtual IResponseBuilder WithHeaders(IDictionary`2<string, string> headers);
    public abstract virtual IResponseBuilder WithHeaders(IDictionary`2<string, String[]> headers);
    public abstract virtual IResponseBuilder WithHeaders(IDictionary`2<string, WireMockList`1<string>> headers);
    public abstract virtual IResponseBuilder WithTrailingHeader(string name, String[] values);
    public abstract virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, string> headers);
    public abstract virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, String[]> headers);
    public abstract virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, WireMockList`1<string>> headers);
}
public interface WireMock.ResponseBuilders.IProxyResponseBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithProxy(string proxyUrl, string clientX509Certificate2ThumbprintOrSubjectName);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithProxy(ProxyAndRecordSettings settings);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithProxy(string proxyUrl, X509Certificate2 certificate);
}
public interface WireMock.ResponseBuilders.IResponseBuilder {
}
public interface WireMock.ResponseBuilders.IStatusCodeResponseBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithStatusCode(int code);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithStatusCode(string code);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithStatusCode(HttpStatusCode code);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithSuccess();
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithNotFound();
}
public interface WireMock.ResponseBuilders.ITransformResponseBuilder {
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithTransformer(bool transformContentFromBodyAsFile);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithTransformer(ReplaceNodeOptions options);
    [NullableContextAttribute("1")]
public abstract virtual IResponseBuilder WithTransformer(TransformerType transformerType, bool transformContentFromBodyAsFile, ReplaceNodeOptions options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.ResponseBuilders.Response : object {
    private static ThreadLocal`1<Random> Random;
    private Nullable`1<TimeSpan> _delay;
    [CompilerGeneratedAttribute]
private IMapping <Mapping>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MinimumDelayMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaximumDelayMilliseconds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseTransformer>k__BackingField;
    [CompilerGeneratedAttribute]
private TransformerType <TransformerType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseTransformerForBodyAsFile>k__BackingField;
    [CompilerGeneratedAttribute]
private ReplaceNodeOptions <TransformerReplaceNodeOptions>k__BackingField;
    [CompilerGeneratedAttribute]
private ResponseMessage <ResponseMessage>k__BackingField;
    private bool _bodyFromFileSet;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<IRequestMessage, ResponseMessage> <Callback>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Func`2<IRequestMessage, Task`1<ResponseMessage>> <CallbackAsync>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <WithCallbackUsed>k__BackingField;
    [NullableAttribute("2")]
private HttpClient _httpClientForProxy;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ProxyAndRecordSettings <ProxyAndRecordSettings>k__BackingField;
    public IMapping Mapping { get; public set; }
    public Nullable`1<int> MinimumDelayMilliseconds { get; private set; }
    public Nullable`1<int> MaximumDelayMilliseconds { get; private set; }
    public Nullable`1<TimeSpan> Delay { get; private set; }
    public bool UseTransformer { get; private set; }
    public TransformerType TransformerType { get; private set; }
    public bool UseTransformerForBodyAsFile { get; private set; }
    public ReplaceNodeOptions TransformerReplaceNodeOptions { get; private set; }
    public ResponseMessage ResponseMessage { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
public Func`2<IRequestMessage, ResponseMessage> Callback { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
public Func`2<IRequestMessage, Task`1<ResponseMessage>> CallbackAsync { get; private set; }
    public bool WithCallbackUsed { get; private set; }
    [NullableAttribute("2")]
public ProxyAndRecordSettings ProxyAndRecordSettings { get; private set; }
    private Response(ResponseMessage responseMessage);
    private static Response();
    [CompilerGeneratedAttribute]
public IMapping get_Mapping();
    [CompilerGeneratedAttribute]
public void set_Mapping(IMapping value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MinimumDelayMilliseconds();
    [CompilerGeneratedAttribute]
private void set_MinimumDelayMilliseconds(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaximumDelayMilliseconds();
    [CompilerGeneratedAttribute]
private void set_MaximumDelayMilliseconds(Nullable`1<int> value);
    public Nullable`1<TimeSpan> get_Delay();
    private void set_Delay(Nullable`1<TimeSpan> value);
    [CompilerGeneratedAttribute]
public bool get_UseTransformer();
    [CompilerGeneratedAttribute]
private void set_UseTransformer(bool value);
    [CompilerGeneratedAttribute]
public TransformerType get_TransformerType();
    [CompilerGeneratedAttribute]
private void set_TransformerType(TransformerType value);
    [CompilerGeneratedAttribute]
public bool get_UseTransformerForBodyAsFile();
    [CompilerGeneratedAttribute]
private void set_UseTransformerForBodyAsFile(bool value);
    [CompilerGeneratedAttribute]
public ReplaceNodeOptions get_TransformerReplaceNodeOptions();
    [CompilerGeneratedAttribute]
private void set_TransformerReplaceNodeOptions(ReplaceNodeOptions value);
    [CompilerGeneratedAttribute]
public ResponseMessage get_ResponseMessage();
    public static IResponseBuilder Create(ResponseMessage responseMessage);
    public static IResponseBuilder Create(Func`1<ResponseMessage> func);
    public sealed virtual IResponseBuilder WithStatusCode(int code);
    public sealed virtual IResponseBuilder WithStatusCode(string code);
    public sealed virtual IResponseBuilder WithStatusCode(HttpStatusCode code);
    public sealed virtual IResponseBuilder WithSuccess();
    public sealed virtual IResponseBuilder WithNotFound();
    public sealed virtual IResponseBuilder WithDelay(TimeSpan delay);
    public sealed virtual IResponseBuilder WithDelay(int milliseconds);
    public sealed virtual IResponseBuilder WithRandomDelay(int minimumMilliseconds, int maximumMilliseconds);
    [AsyncStateMachineAttribute("WireMock.ResponseBuilders.Response/<ProvideResponseAsync>d__47")]
public sealed virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IMapping mapping, IRequestMessage requestMessage, WireMockServerSettings settings);
    public sealed virtual IResponseBuilder WithBody(Func`2<IRequestMessage, string> bodyFactory, string destination, Encoding encoding);
    public sealed virtual IResponseBuilder WithBody(Func`2<IRequestMessage, Task`1<string>> bodyFactory, string destination, Encoding encoding);
    public sealed virtual IResponseBuilder WithBody(Byte[] body, string destination, Encoding encoding);
    public sealed virtual IResponseBuilder WithBodyFromFile(string filename, bool cache);
    public sealed virtual IResponseBuilder WithBody(string body, string destination, Encoding encoding);
    public sealed virtual IResponseBuilder WithBodyAsJson(object body, Encoding encoding, Nullable`1<bool> indented);
    public sealed virtual IResponseBuilder WithBodyAsJson(object body, bool indented);
    public sealed virtual IResponseBuilder WithBodyAsJson(Func`2<IRequestMessage, object> bodyFactory, Encoding encoding);
    public sealed virtual IResponseBuilder WithBodyAsJson(Func`2<IRequestMessage, Task`1<object>> bodyFactory, Encoding encoding);
    public sealed virtual IResponseBuilder WithBody(object body, IJsonConverter jsonConverter, JsonConverterOptions options);
    public sealed virtual IResponseBuilder WithBody(object body, Encoding encoding, IJsonConverter jsonConverter, JsonConverterOptions options);
    public sealed virtual IResponseBuilder WithBodyAsProtoBuf(string protoDefinition, string messageType, object value, IJsonConverter jsonConverter, JsonConverterOptions options);
    public sealed virtual IResponseBuilder WithBodyAsProtoBuf(string messageType, object value, IJsonConverter jsonConverter, JsonConverterOptions options);
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
public Func`2<IRequestMessage, ResponseMessage> get_Callback();
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
private void set_Callback(Func`2<IRequestMessage, ResponseMessage> value);
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
public Func`2<IRequestMessage, Task`1<ResponseMessage>> get_CallbackAsync();
    [CompilerGeneratedAttribute]
[MemberNotNullWhenAttribute("True", "WithCallbackUsed")]
private void set_CallbackAsync(Func`2<IRequestMessage, Task`1<ResponseMessage>> value);
    [CompilerGeneratedAttribute]
public bool get_WithCallbackUsed();
    [CompilerGeneratedAttribute]
private void set_WithCallbackUsed(bool value);
    public sealed virtual IResponseBuilder WithCallback(Func`2<IRequestMessage, ResponseMessage> callbackHandler);
    public sealed virtual IResponseBuilder WithCallback(Func`2<IRequestMessage, Task`1<ResponseMessage>> callbackHandler);
    private IResponseBuilder WithCallbackInternal(bool withCallbackUsed, Func`2<IRequestMessage, ResponseMessage> callbackHandler);
    private IResponseBuilder WithCallbackInternal(bool withCallbackUsed, Func`2<IRequestMessage, Task`1<ResponseMessage>> callbackHandler);
    public sealed virtual IResponseBuilder WithFault(FaultType faultType, Nullable`1<double> percentage);
    public sealed virtual IResponseBuilder WithHeader(string name, String[] values);
    public sealed virtual IResponseBuilder WithHeaders(IDictionary`2<string, string> headers);
    public sealed virtual IResponseBuilder WithHeaders(IDictionary`2<string, String[]> headers);
    public sealed virtual IResponseBuilder WithHeaders(IDictionary`2<string, WireMockList`1<string>> headers);
    public sealed virtual IResponseBuilder WithTrailingHeader(string name, String[] values);
    public sealed virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, string> headers);
    public sealed virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, String[]> headers);
    public sealed virtual IResponseBuilder WithTrailingHeaders(IDictionary`2<string, WireMockList`1<string>> headers);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ProxyAndRecordSettings get_ProxyAndRecordSettings();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_ProxyAndRecordSettings(ProxyAndRecordSettings value);
    public sealed virtual IResponseBuilder WithProxy(string proxyUrl, string clientX509Certificate2ThumbprintOrSubjectName);
    public sealed virtual IResponseBuilder WithProxy(ProxyAndRecordSettings settings);
    public sealed virtual IResponseBuilder WithProxy(string proxyUrl, X509Certificate2 certificate);
    public sealed virtual IResponseBuilder WithTransformer(bool transformContentFromBodyAsFile);
    public sealed virtual IResponseBuilder WithTransformer(ReplaceNodeOptions options);
    public sealed virtual IResponseBuilder WithTransformer(TransformerType transformerType, bool transformContentFromBodyAsFile, ReplaceNodeOptions options);
    [CompilerGeneratedAttribute]
internal static string <ProvideResponseAsync>g__RemoveFirstOccurrence|47_0(string source, string find);
    [CompilerGeneratedAttribute]
private IdOrText <WithBodyAsProtoBuf>b__61_0();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.ResponseMessage : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <Headers>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, WireMockList`1<string>> <TrailingHeaders>k__BackingField;
    [CompilerGeneratedAttribute]
private object <StatusCode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BodyOriginal>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BodyDestination>k__BackingField;
    [CompilerGeneratedAttribute]
private IBodyData <BodyData>k__BackingField;
    [CompilerGeneratedAttribute]
private FaultType <FaultType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<double> <FaultPercentage>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> Headers { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, WireMockList`1<string>> TrailingHeaders { get; public set; }
    public object StatusCode { get; public set; }
    public string BodyOriginal { get; public set; }
    public string BodyDestination { get; public set; }
    public IBodyData BodyData { get; public set; }
    public FaultType FaultType { get; public set; }
    public Nullable`1<double> FaultPercentage { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_Headers();
    [CompilerGeneratedAttribute]
public void set_Headers(IDictionary`2<string, WireMockList`1<string>> value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, WireMockList`1<string>> get_TrailingHeaders();
    [CompilerGeneratedAttribute]
public void set_TrailingHeaders(IDictionary`2<string, WireMockList`1<string>> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_StatusCode();
    [CompilerGeneratedAttribute]
public void set_StatusCode(object value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BodyOriginal();
    [CompilerGeneratedAttribute]
public void set_BodyOriginal(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BodyDestination();
    [CompilerGeneratedAttribute]
public void set_BodyDestination(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IBodyData get_BodyData();
    [CompilerGeneratedAttribute]
public void set_BodyData(IBodyData value);
    [CompilerGeneratedAttribute]
public sealed virtual FaultType get_FaultType();
    [CompilerGeneratedAttribute]
public void set_FaultType(FaultType value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<double> get_FaultPercentage();
    [CompilerGeneratedAttribute]
public void set_FaultPercentage(Nullable`1<double> value);
    [NullableContextAttribute("1")]
public sealed virtual void AddHeader(string name, string value);
    [NullableContextAttribute("1")]
public sealed virtual void AddHeader(string name, String[] values);
    [NullableContextAttribute("1")]
public sealed virtual void AddTrailingHeader(string name, string value);
    [NullableContextAttribute("1")]
public sealed virtual void AddTrailingHeader(string name, String[] values);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.ResponseMessageBuilder : object {
    private static IDictionary`2<string, WireMockList`1<string>> ContentTypeJsonHeaders;
    private static ResponseMessageBuilder();
    internal static ResponseMessage Create(HttpStatusCode statusCode, string status, Nullable`1<Guid> guid);
    internal static ResponseMessage Create(int statusCode, string status, Nullable`1<Guid> guid);
    [NullableContextAttribute("2")]
internal static ResponseMessage Create(int statusCode, string status, string error, Nullable`1<Guid> guid);
    internal static ResponseMessage Create(HttpStatusCode statusCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.ResponseProviders.DynamicAsyncResponseProvider : object {
    private Func`2<IRequestMessage, Task`1<IResponseMessage>> _responseMessageFunc;
    public DynamicAsyncResponseProvider(Func`2<IRequestMessage, Task`1<IResponseMessage>> responseMessageFunc);
    [AsyncStateMachineAttribute("WireMock.ResponseProviders.DynamicAsyncResponseProvider/<ProvideResponseAsync>d__2")]
public sealed virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IMapping mapping, IRequestMessage requestMessage, WireMockServerSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.ResponseProviders.DynamicResponseProvider : object {
    private Func`2<IRequestMessage, IResponseMessage> _responseMessageFunc;
    public DynamicResponseProvider(Func`2<IRequestMessage, IResponseMessage> responseMessageFunc);
    public sealed virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IMapping mapping, IRequestMessage requestMessage, WireMockServerSettings settings);
}
[NullableContextAttribute("1")]
public interface WireMock.ResponseProviders.IResponseProvider {
    public abstract virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IMapping mapping, IRequestMessage requestMessage, WireMockServerSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.ResponseProviders.ProxyAsyncResponseProvider : object {
    private Func`3<IRequestMessage, WireMockServerSettings, Task`1<IResponseMessage>> _responseMessageFunc;
    private WireMockServerSettings _settings;
    public ProxyAsyncResponseProvider(Func`3<IRequestMessage, WireMockServerSettings, Task`1<IResponseMessage>> responseMessageFunc, WireMockServerSettings settings);
    [AsyncStateMachineAttribute("WireMock.ResponseProviders.ProxyAsyncResponseProvider/<ProvideResponseAsync>d__3")]
public sealed virtual Task`1<ValueTuple`2<IResponseMessage, IMapping>> ProvideResponseAsync(IMapping mapping, IRequestMessage requestMessage, WireMockServerSettings settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.ScenarioState : object {
    [CompilerGeneratedAttribute]
private string <Name>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <NextState>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Started>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Finished>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Counter>k__BackingField;
    public string Name { get; public set; }
    [NullableAttribute("2")]
public string NextState { get; public set; }
    public bool Started { get; public set; }
    public bool Finished { get; public set; }
    public int Counter { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Name();
    [CompilerGeneratedAttribute]
public void set_Name(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public string get_NextState();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_NextState(string value);
    [CompilerGeneratedAttribute]
public bool get_Started();
    [CompilerGeneratedAttribute]
public void set_Started(bool value);
    [CompilerGeneratedAttribute]
public bool get_Finished();
    [CompilerGeneratedAttribute]
public void set_Finished(bool value);
    [CompilerGeneratedAttribute]
public int get_Counter();
    [CompilerGeneratedAttribute]
public void set_Counter(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Serialization.JsonSerializationConstants : object {
    public static JsonSerializerSettings JsonSerializerSettingsDefault;
    public static JsonSerializerSettings JsonSerializerSettingsIncludeNullValues;
    public static JsonSerializerSettings JsonDeserializerSettingsWithDateParsingNone;
    public static JsonSerializerSettings JsonSerializerSettingsPact;
    private static JsonSerializationConstants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Serialization.LogEntryMapper : object {
    private IWireMockMiddlewareOptions _options;
    public LogEntryMapper(IWireMockMiddlewareOptions options);
    public LogEntryModel Map(ILogEntry logEntry);
    private void MapBody(ILogEntry logEntry, LogResponseModel logResponseModel);
    [NullableContextAttribute("2")]
private static LogRequestMatchModel Map(IRequestMatchResult matchResult);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Serialization.MappingConverter : object {
    private static string AcceptOnMatch;
    private MatcherMapper _mapper;
    public MappingConverter(MatcherMapper mapper);
    private static MappingConverter();
    public string ToCSharpCode(IMapping mapping, MappingConverterSettings settings);
    public MappingModel ToMappingModel(IMapping mapping);
    private static void MapResponse(Response response, MappingModel mappingModel);
    private static string GetString(IStringMatcher stringMatcher);
    private static String[] GetStringArray(IReadOnlyList`1<IStringMatcher> stringMatchers);
    private static string To2Or3Arguments(string key, Nullable`1<MatchBehaviour> matchBehaviour, IReadOnlyList`1<IStringMatcher> matchers);
    private static string To1Or2Or3Arguments(Nullable`1<MatchBehaviour> matchBehaviour, Nullable`1<MatchOperator> matchOperator, String[] values, string defaultValue);
    private static string To1Or2Arguments(Nullable`1<MatchOperator> matchOperator, IReadOnlyList`1<IStringMatcher> matchers);
    private static string To1Or2Arguments(Nullable`1<MatchOperator> matchOperator, String[] values, string defaultValue);
    private static string ToValueArguments(String[] values, string defaultValue);
    private static IDictionary`2<string, object> MapHeaders(IDictionary`2<string, WireMockList`1<string>> dictionary);
}
public class WireMock.Serialization.MappingConverterSettings : object {
    [CompilerGeneratedAttribute]
private MappingConverterType <ConverterType>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AddStart>k__BackingField;
    public MappingConverterType ConverterType { get; public set; }
    public bool AddStart { get; public set; }
    [CompilerGeneratedAttribute]
public MappingConverterType get_ConverterType();
    [CompilerGeneratedAttribute]
public void set_ConverterType(MappingConverterType value);
    [CompilerGeneratedAttribute]
public bool get_AddStart();
    [CompilerGeneratedAttribute]
public void set_AddStart(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Serialization.MappingFileNameSanitizer : object {
    private static char ReplaceChar;
    private WireMockServerSettings _settings;
    public MappingFileNameSanitizer(WireMockServerSettings settings);
    public string BuildSanitizedFileName(IMapping mapping);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Serialization.MappingToFileSaver : object {
    private WireMockServerSettings _settings;
    private MappingConverter _mappingConverter;
    private MappingFileNameSanitizer _fileNameSanitizer;
    public MappingToFileSaver(WireMockServerSettings settings, MappingConverter mappingConverter);
    public void SaveMappingsToFile(IMapping[] mappings, string folder);
    public void SaveMappingToFile(IMapping mapping, string folder);
    private void Save(object value, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Serialization.MatcherMapper : object {
    private WireMockServerSettings _settings;
    public MatcherMapper(WireMockServerSettings settings);
    public IMatcher[] Map(IEnumerable`1<MatcherModel> matchers);
    [NullableContextAttribute("2")]
public IMatcher Map(MatcherModel matcherModel);
    public MatcherModel[] Map(IEnumerable`1<IMatcher> matchers, Action`1<MatcherModel> afterMap);
    [NullableContextAttribute("2")]
public MatcherModel Map(IMatcher matcher, Action`1<MatcherModel> afterMap);
    private AnyOf`2[] ParseStringPatterns(MatcherModel matcher);
    private static ExactObjectMatcher CreateExactObjectMatcher(MatchBehaviour matchBehaviour, AnyOf`2<string, StringPattern> stringPattern);
    private MimePartMatcher CreateMimePartMatcher(MatchBehaviour matchBehaviour, MatcherModel matcher);
    private ProtoBufMatcher CreateProtoBufMatcher(Nullable`1<MatchBehaviour> matchBehaviour, string protoDefinitionOrId, MatcherModel matcher);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Serialization.PactMapper : object {
    private static string DefaultMethod;
    private static int DefaultStatusCode;
    private static string DefaultConsumer;
    private static string DefaultProvider;
    public static ValueTuple`2<string, Byte[]> ToPact(WireMockServer server, string filename);
    private static PactRequest MapRequest(RequestModel request, string path);
    private static PactResponse MapResponse(ResponseModel response);
    [NullableContextAttribute("2")]
private static object MapBody(ResponseModel response);
    [NullableContextAttribute("2")]
private static int MapStatusCode(object statusCode);
    [NullableContextAttribute("2")]
private static string MapQueryParameters(IList`1<ParamModel> queryParameters);
    private static IDictionary`2<string, string> MapRequestHeaders(IList`1<HeaderModel> headers);
    private static IDictionary`2<string, string> MapResponseHeaders(IDictionary`2<string, object> headers);
    [NullableContextAttribute("2")]
private static object MapBody(BodyModel body);
    [NullableContextAttribute("2")]
private static object MapMatcherPattern(MatcherModel matcher);
    [NullableContextAttribute("2")]
private static object TryDeserializeJsonStringAsObject(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Serialization.ProxyMappingConverter : object {
    private WireMockServerSettings _settings;
    private IGuidUtils _guidUtils;
    private IDateTimeUtils _dateTimeUtils;
    public ProxyMappingConverter(WireMockServerSettings settings, IGuidUtils guidUtils, IDateTimeUtils dateTimeUtils);
    public IMapping ToMapping(IMapping mapping, ProxyAndRecordSettings proxyAndRecordSettings, IRequestMessage requestMessage, ResponseMessage responseMessage);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Serialization.SwaggerMapper : object {
    private static string DefaultMethod;
    private static string Generator;
    private static JsonSchema JsonSchemaString;
    private static SwaggerMapper();
    public static string ToSwagger(WireMockServer server);
    private static IReadOnlyList`1<OpenApiParameter> MapRequestQueryParameters(IList`1<ParamModel> queryParameters);
    private static IEnumerable`1<OpenApiParameter> MapRequestHeaders(IList`1<HeaderModel> headers);
    private static IReadOnlyList`1<OpenApiParameter> MapRequestCookies(IList`1<CookieModel> cookies);
    private static ValueTuple`4<JsonSchema, string, string, bool> GetDetailsFromMatcher(MatcherModel matcher);
    private static OpenApiRequestBody MapRequestBody(RequestModel request);
    private static OpenApiResponse MapResponse(ResponseModel response);
    private static JsonSchema GetJsonSchema(object instance);
    [NullableContextAttribute("2")]
private static object MapRequestBody(BodyModel body);
    private static string GetContentType(RequestModel request);
    private static string GetPatternAsStringFromMatchers(IList`1<MatcherModel> matchers, string defaultValue);
    private static string GetPatternAsStringFromMatcher(MatcherModel matcher);
    [NullableContextAttribute("2")]
private static MatcherModel GetMatcher(MatcherModel matcher, MatcherModel[] matchers);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class WireMock.Serialization.TimeSettingsMapper : object {
    public static TimeSettingsModel Map(ITimeSettings settings);
    public static ITimeSettings Map(TimeSettingsModel settings);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Serialization.WebhookMapper : object {
    public static IWebhook Map(WebhookModel model);
    public static WebhookModel Map(IWebhook webhook);
}
[NullableContextAttribute("1")]
public interface WireMock.Server.IRespondWithAProvider {
    public Guid Guid { get; }
    public abstract virtual Guid get_Guid();
    public abstract virtual IRespondWithAProvider WithGuid(Guid guid);
    public abstract virtual IRespondWithAProvider WithGuid(string guid);
    public abstract virtual IRespondWithAProvider DefineGuid(Guid guid);
    public abstract virtual IRespondWithAProvider DefineGuid(string guid);
    public abstract virtual IRespondWithAProvider WithTimeSettings(ITimeSettings timeSettings);
    public abstract virtual IRespondWithAProvider WithTitle(string title);
    public abstract virtual IRespondWithAProvider WithDescription(string description);
    public abstract virtual IRespondWithAProvider WithPath(string path);
    public abstract virtual IRespondWithAProvider AtPriority(int priority);
    public abstract virtual void RespondWith(IResponseProvider provider);
    public abstract virtual void ThenRespondWith(Action`1<IResponseBuilder> action);
    public abstract virtual void ThenRespondWithOK();
    public abstract virtual void ThenRespondWithStatusCode(int code);
    public abstract virtual void ThenRespondWithStatusCode(string code);
    public abstract virtual void ThenRespondWithStatusCode(HttpStatusCode code);
    public abstract virtual IRespondWithAProvider InScenario(string scenario);
    public abstract virtual IRespondWithAProvider InScenario(int scenario);
    public abstract virtual IRespondWithAProvider WhenStateIs(string state);
    public abstract virtual IRespondWithAProvider WhenStateIs(int state);
    public abstract virtual IRespondWithAProvider WillSetStateTo(string state, Nullable`1<int> times);
    public abstract virtual IRespondWithAProvider WillSetStateTo(int state, Nullable`1<int> times);
    public abstract virtual IRespondWithAProvider WithWebhook(IWebhook[] webhooks);
    public abstract virtual IRespondWithAProvider WithWebhookFireAndForget(bool useWebhooksFireAndForget);
    public abstract virtual IRespondWithAProvider WithWebhook(string url, string method, IDictionary`2<string, WireMockList`1<string>> headers, string body, bool useTransformer, TransformerType transformerType);
    public abstract virtual IRespondWithAProvider WithWebhook(string url, string method, IDictionary`2<string, WireMockList`1<string>> headers, object body, bool useTransformer, TransformerType transformerType);
    public abstract virtual IRespondWithAProvider WithData(object data);
    public abstract virtual IRespondWithAProvider WithProbability(double probability);
    public abstract virtual IRespondWithAProvider WithProtoDefinition(string protoDefinitionOrId);
    public abstract virtual IRespondWithAProvider WithGraphQLSchema(string graphQLSchemaOrId, IDictionary`2<string, Type> customScalars);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Server.RespondWithAProvider : object {
    private RegistrationCallback _registrationCallback;
    private IRequestMatcher _requestMatcher;
    private WireMockServerSettings _settings;
    private IDateTimeUtils _dateTimeUtils;
    private bool _saveToFile;
    private int _priority;
    [NullableAttribute("2")]
private string _title;
    [NullableAttribute("2")]
private string _description;
    [NullableAttribute("2")]
private string _path;
    [NullableAttribute("2")]
private string _executionConditionState;
    [NullableAttribute("2")]
private string _nextState;
    [NullableAttribute("2")]
private string _scenario;
    private int _timesInSameState;
    private Nullable`1<bool> _useWebhookFireAndForget;
    private Nullable`1<double> _probability;
    private Nullable`1<IdOrText> _protoDefinition;
    [NullableAttribute("2")]
private GraphQLSchemaDetails _graphQLSchemaDetails;
    [CompilerGeneratedAttribute]
private Guid <Guid>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IWebhook[] <Webhooks>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ITimeSettings <TimeSettings>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private object <Data>k__BackingField;
    public Guid Guid { get; private set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IWebhook[] Webhooks { get; private set; }
    [NullableAttribute("2")]
public ITimeSettings TimeSettings { get; private set; }
    [NullableAttribute("2")]
public object Data { get; private set; }
    public RespondWithAProvider(RegistrationCallback registrationCallback, IRequestMatcher requestMatcher, WireMockServerSettings settings, IGuidUtils guidUtils, IDateTimeUtils dateTimeUtils, bool saveToFile);
    [CompilerGeneratedAttribute]
public sealed virtual Guid get_Guid();
    [CompilerGeneratedAttribute]
private void set_Guid(Guid value);
    [CompilerGeneratedAttribute]
public IWebhook[] get_Webhooks();
    [CompilerGeneratedAttribute]
private void set_Webhooks(IWebhook[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ITimeSettings get_TimeSettings();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_TimeSettings(ITimeSettings value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public object get_Data();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Data(object value);
    public sealed virtual void RespondWith(IResponseProvider provider);
    public sealed virtual void ThenRespondWith(Action`1<IResponseBuilder> action);
    public sealed virtual void ThenRespondWithOK();
    public sealed virtual void ThenRespondWithStatusCode(int code);
    public sealed virtual void ThenRespondWithStatusCode(string code);
    public sealed virtual void ThenRespondWithStatusCode(HttpStatusCode code);
    public sealed virtual IRespondWithAProvider WithData(object data);
    public sealed virtual IRespondWithAProvider WithGuid(string guid);
    public sealed virtual IRespondWithAProvider WithGuid(Guid guid);
    public sealed virtual IRespondWithAProvider DefineGuid(Guid guid);
    public sealed virtual IRespondWithAProvider DefineGuid(string guid);
    public sealed virtual IRespondWithAProvider WithTitle(string title);
    public sealed virtual IRespondWithAProvider WithDescription(string description);
    public sealed virtual IRespondWithAProvider WithPath(string path);
    public sealed virtual IRespondWithAProvider AtPriority(int priority);
    public sealed virtual IRespondWithAProvider InScenario(string scenario);
    public sealed virtual IRespondWithAProvider InScenario(int scenario);
    public sealed virtual IRespondWithAProvider WhenStateIs(string state);
    public sealed virtual IRespondWithAProvider WhenStateIs(int state);
    public sealed virtual IRespondWithAProvider WillSetStateTo(string state, Nullable`1<int> times);
    public sealed virtual IRespondWithAProvider WillSetStateTo(int state, Nullable`1<int> times);
    public sealed virtual IRespondWithAProvider WithTimeSettings(ITimeSettings timeSettings);
    public sealed virtual IRespondWithAProvider WithWebhook(IWebhook[] webhooks);
    public sealed virtual IRespondWithAProvider WithWebhook(string url, string method, IDictionary`2<string, WireMockList`1<string>> headers, string body, bool useTransformer, TransformerType transformerType);
    public sealed virtual IRespondWithAProvider WithWebhook(string url, string method, IDictionary`2<string, WireMockList`1<string>> headers, object body, bool useTransformer, TransformerType transformerType);
    public sealed virtual IRespondWithAProvider WithWebhookFireAndForget(bool useWebhooksFireAndForget);
    public sealed virtual IRespondWithAProvider WithProbability(double probability);
    public sealed virtual IRespondWithAProvider WithProtoDefinition(string protoDefinitionOrId);
    public sealed virtual IRespondWithAProvider WithGraphQLSchema(string graphQLSchemaOrId, IDictionary`2<string, Type> customScalars);
    private static IWebhook InitWebhook(string url, string method, IDictionary`2<string, WireMockList`1<string>> headers, bool useTransformer, TransformerType transformerType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Server.WireMockServer : object {
    private static int EnhancedFileSystemWatcherTimeoutMs;
    private static string DefaultAdminPathPrefix;
    private static string QueryParamReloadStaticMappings;
    private static Guid ProxyMappingGuid;
    private static RegexMatcher AdminRequestContentTypeJson;
    [NullableAttribute("2")]
private EnhancedFileSystemWatcher _enhancedFileSystemWatcher;
    [NullableAttribute("2")]
private AdminPaths _adminPaths;
    private static Encoding[] FileBodyIsString;
    private static int ServerStartDelayInMs;
    private WireMockServerSettings _settings;
    [NullableAttribute("2")]
private IOwinSelfHost _httpServer;
    private IWireMockMiddlewareOptions _options;
    private MappingConverter _mappingConverter;
    private MatcherMapper _matcherMapper;
    private MappingToFileSaver _mappingToFileSaver;
    private MappingBuilder _mappingBuilder;
    private IGuidUtils _guidUtils;
    private IDateTimeUtils _dateTimeUtils;
    [CompilerGeneratedAttribute]
private List`1<int> <Ports>k__BackingField;
    [CompilerGeneratedAttribute]
private String[] <Urls>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Consumer>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private string <Provider>k__BackingField;
    [NullableAttribute("2")]
private NotifyCollectionChangedEventHandler _logEntriesChanged;
    [NullableAttribute("2")]
private HttpClient _httpClientForProxy;
    public bool IsStarted { get; }
    public bool IsStartedWithAdminInterface { get; }
    public List`1<int> Ports { get; }
    public int Port { get; }
    public String[] Urls { get; }
    [NullableAttribute("2")]
public string Url { get; }
    [NullableAttribute("2")]
public string Consumer { get; private set; }
    [NullableAttribute("2")]
public string Provider { get; private set; }
    public IEnumerable`1<IMapping> Mappings { get; }
    public IEnumerable`1<MappingModel> MappingModels { get; }
    public ConcurrentDictionary`2<string, ScenarioState> Scenarios { get; }
    public IEnumerable`1<ILogEntry> LogEntries { get; }
    protected WireMockServer(WireMockServerSettings settings);
    private static WireMockServer();
    private void InitAdmin();
    [NullableContextAttribute("2")]
public sealed virtual void SaveStaticMappings(string folder);
    [NullableContextAttribute("2")]
public sealed virtual void ReadStaticMappings(string folder);
    [NullableContextAttribute("2")]
public sealed virtual void WatchStaticMappings(string folder);
    public sealed virtual bool ReadStaticMappingAndAddOrUpdate(string path);
    private static IResponseMessage HealthGet(IRequestMessage requestMessage);
    private IResponseMessage SettingsGet(IRequestMessage requestMessage);
    private IResponseMessage SettingsUpdate(IRequestMessage requestMessage);
    private IResponseMessage MappingGet(IRequestMessage requestMessage);
    private IResponseMessage MappingCodeGet(IRequestMessage requestMessage);
    private static MappingConverterType GetMappingConverterType(IRequestMessage requestMessage);
    private IMapping FindMappingByGuid(IRequestMessage requestMessage);
    private IResponseMessage MappingPut(IRequestMessage requestMessage);
    private IResponseMessage MappingDelete(IRequestMessage requestMessage);
    private static bool TryParseGuidFromRequestMessage(IRequestMessage requestMessage, Guid& guid);
    private IResponseMessage SwaggerGet(IRequestMessage requestMessage);
    private IResponseMessage MappingsSave(IRequestMessage requestMessage);
    private MappingModel[] ToMappingModels();
    private IResponseMessage MappingsGet(IRequestMessage requestMessage);
    private IResponseMessage MappingsCodeGet(IRequestMessage requestMessage);
    private IResponseMessage MappingsPost(IRequestMessage requestMessage);
    private IResponseMessage MappingsDelete(IRequestMessage requestMessage);
    private IEnumerable`1<Guid> MappingsDeleteMappingFromBody(IRequestMessage requestMessage);
    private IResponseMessage MappingsReset(IRequestMessage requestMessage);
    private IResponseMessage RequestGet(IRequestMessage requestMessage);
    private IResponseMessage RequestDelete(IRequestMessage requestMessage);
    private IResponseMessage RequestsGet(IRequestMessage requestMessage);
    private IResponseMessage RequestsDelete(IRequestMessage requestMessage);
    private IResponseMessage RequestsFind(IRequestMessage requestMessage);
    private IResponseMessage RequestsFindByMappingGuid(IRequestMessage requestMessage);
    private IResponseMessage ScenariosGet(IRequestMessage requestMessage);
    private IResponseMessage ScenariosReset(IRequestMessage requestMessage);
    private IResponseMessage ScenarioReset(IRequestMessage requestMessage);
    public void SavePact(string folder, string filename);
    public void SavePact(Stream stream);
    public WireMockServer WithConsumer(string consumer);
    public WireMockServer WithProvider(string provider);
    private void DisposeEnhancedFileSystemWatcher();
    private void EnhancedFileSystemWatcherCreated(object sender, FileSystemEventArgs args);
    private void EnhancedFileSystemWatcherChanged(object sender, FileSystemEventArgs args);
    private void EnhancedFileSystemWatcherDeleted(object sender, FileSystemEventArgs args);
    [NullableContextAttribute("2")]
private static Encoding ToEncoding(EncodingModel encodingModel);
    private static ResponseMessage ToJson(T result, bool keepNullValues, object statusCode);
    private static ResponseMessage ToResponseMessage(string text);
    private static T DeserializeObject(IRequestMessage requestMessage);
    private static T[] DeserializeRequestMessageToArray(IRequestMessage requestMessage);
    private static T[] DeserializeJsonToArray(string value);
    private static T[] DeserializeObjectToArray(object value);
    private IResponseMessage FilePost(IRequestMessage requestMessage);
    private IResponseMessage FilePut(IRequestMessage requestMessage);
    private IResponseMessage FileGet(IRequestMessage requestMessage);
    private IResponseMessage FileHead(IRequestMessage requestMessage);
    private IResponseMessage FileDelete(IRequestMessage requestMessage);
    private string GetFileNameFromRequestMessage(IRequestMessage requestMessage);
    private void ConvertMappingsAndRegisterAsRespondProvider(IReadOnlyList`1<MappingModel> mappingModels, string path);
    private Guid ConvertMappingAndRegisterAsRespondProvider(MappingModel mappingModel, Nullable`1<Guid> guid, string path);
    private IRequestBuilder InitRequestBuilder(RequestModel requestModel);
    private static IResponseBuilder InitResponseBuilder(ResponseModel responseModel);
    public sealed virtual bool get_IsStarted();
    public sealed virtual bool get_IsStartedWithAdminInterface();
    [CompilerGeneratedAttribute]
public sealed virtual List`1<int> get_Ports();
    public sealed virtual int get_Port();
    [CompilerGeneratedAttribute]
public sealed virtual String[] get_Urls();
    [NullableContextAttribute("2")]
public sealed virtual string get_Url();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Consumer();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Consumer(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public sealed virtual string get_Provider();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
private void set_Provider(string value);
    public IEnumerable`1<IMapping> get_Mappings();
    public sealed virtual IEnumerable`1<MappingModel> get_MappingModels();
    public ConcurrentDictionary`2<string, ScenarioState> get_Scenarios();
    public sealed virtual void Dispose();
    protected virtual void Dispose(bool disposing);
    public HttpClient CreateClient(DelegatingHandler[] handlers);
    public HttpClient CreateClient(HttpMessageHandler innerHandler, DelegatingHandler[] handlers);
    public HttpClient[] CreateClients(HttpMessageHandler innerHandler, DelegatingHandler[] handlers);
    public static WireMockServer Start(WireMockServerSettings settings);
    public static WireMockServer Start(Action`1<WireMockServerSettings> action);
    public static WireMockServer Start(Nullable`1<int> port, bool useSSL, bool useHttp2);
    public static WireMockServer Start(String[] urls);
    public static WireMockServer StartWithAdminInterface(Nullable`1<int> port, bool useSSL, bool useHttp2);
    public static WireMockServer StartWithAdminInterface(String[] urls);
    public static WireMockServer StartWithAdminInterfaceAndReadStaticMappings(String[] urls);
    public sealed virtual void Stop();
    public sealed virtual void AddCatchAllMapping();
    public sealed virtual void Reset();
    public sealed virtual void ResetMappings();
    public sealed virtual bool DeleteMapping(Guid guid);
    private bool DeleteMapping(string path);
    public sealed virtual void AddGlobalProcessingDelay(TimeSpan delay);
    public sealed virtual void AllowPartialMapping(bool allow);
    public sealed virtual void SetAzureADAuthentication(string tenant, string audience);
    public sealed virtual void SetBasicAuthentication(string username, string password);
    public sealed virtual void RemoveAuthentication();
    public sealed virtual void SetMaxRequestLogCount(Nullable`1<int> maxRequestLogCount);
    public sealed virtual void SetRequestLogExpirationDuration(Nullable`1<int> requestLogExpirationDuration);
    public sealed virtual void ResetScenarios();
    public sealed virtual bool ResetScenario(string name);
    public sealed virtual IWireMockServer WithMapping(MappingModel[] mappings);
    public sealed virtual IWireMockServer WithMapping(string mappings);
    public WireMockServer AddProtoDefinition(string id, string protoDefinition);
    public WireMockServer AddGraphQLSchema(string id, AnyOf`2<string, StringPattern> graphQLSchema, Dictionary`2<string, Type> customScalars);
    [NullableContextAttribute("2")]
public sealed virtual string MappingToCSharpCode(Guid guid, MappingConverterType converterType);
    public sealed virtual string MappingsToCSharpCode(MappingConverterType converterType);
    private void InitSettings(WireMockServerSettings settings);
    public IRespondWithAProvider Given(IRequestMatcher requestMatcher, bool saveToFile);
    public IRespondWithAProvider WhenRequest(Action`1<IRequestBuilder> action, bool saveToFile);
    public void ReadStaticWireMockOrgMappingAndAddOrUpdate(string path);
    private IResponseMessage MappingsPostWireMockOrg(IRequestMessage requestMessage);
    private Nullable`1<Guid> ConvertWireMockOrgMappingAndRegisterAsRespondProvider(Mapping mapping, Nullable`1<Guid> guid, string path);
    private void ProcessWireMockOrgJObjectAndConvertToIDictionary(JObject items, Action`1<IDictionary`2<string, string>> action);
    private void ProcessWireMockOrgJObjectAndUseStringMatcher(JObject items, Action`2<string, IStringMatcher> action);
    private static void ProcessWireMockOrgJObjectAndUseIMatcher(JObject items, Action`1<IMatcher> action);
    private static IStringMatcher ProcessAsStringMatcher(JProperty match, string valueAsString);
    public sealed virtual void add_LogEntriesChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual void remove_LogEntriesChanged(NotifyCollectionChangedEventHandler value);
    public sealed virtual IEnumerable`1<ILogEntry> get_LogEntries();
    public IEnumerable`1<LogEntry> FindLogEntries(IRequestMatcher[] matchers);
    public sealed virtual void ResetLogEntries();
    public sealed virtual bool DeleteLogEntry(Guid guid);
    private void LogEntries_CollectionChanged(object sender, NotifyCollectionChangedEventArgs e);
    private IResponseMessage OpenApiConvertToMappings(IRequestMessage requestMessage);
    private IResponseMessage OpenApiSaveToMappings(IRequestMessage requestMessage);
    private void InitProxyAndRecord(WireMockServerSettings settings);
    [AsyncStateMachineAttribute("WireMock.Server.WireMockServer/<ProxyAndRecordAsync>d__163")]
private Task`1<IResponseMessage> ProxyAndRecordAsync(IRequestMessage requestMessage, WireMockServerSettings settings);
    [CompilerGeneratedAttribute]
private void <.ctor>b__117_0(IWireMockMiddlewareOptions o);
}
internal interface WireMock.Services.IRandomizerDoubleBetween0And1 {
    public abstract virtual double Generate();
}
internal class WireMock.Services.RandomizerDoubleBetween0And1 : object {
    [NullableAttribute("1")]
private IRandomizerNumber`1<double> _randomizerDoubleBetween0And1;
    public sealed virtual double Generate();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public abstract class WireMock.Settings.HttpClientSettings : object {
    [CompilerGeneratedAttribute]
private string <ClientX509Certificate2ThumbprintOrSubjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private WebProxySettings <WebProxySettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowAutoRedirect>k__BackingField;
    [CompilerGeneratedAttribute]
private X509Certificate2 <Certificate>k__BackingField;
    public string ClientX509Certificate2ThumbprintOrSubjectName { get; public set; }
    public WebProxySettings WebProxySettings { get; public set; }
    public Nullable`1<bool> AllowAutoRedirect { get; public set; }
    public X509Certificate2 Certificate { get; public set; }
    [CompilerGeneratedAttribute]
public string get_ClientX509Certificate2ThumbprintOrSubjectName();
    [CompilerGeneratedAttribute]
public void set_ClientX509Certificate2ThumbprintOrSubjectName(string value);
    [CompilerGeneratedAttribute]
public WebProxySettings get_WebProxySettings();
    [CompilerGeneratedAttribute]
public void set_WebProxySettings(WebProxySettings value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowAutoRedirect();
    [CompilerGeneratedAttribute]
public void set_AllowAutoRedirect(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public X509Certificate2 get_Certificate();
    [CompilerGeneratedAttribute]
public void set_Certificate(X509Certificate2 value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Settings.ProxyAndRecordSettings : HttpClientSettings {
    public static string DefaultPrefixForSavedMappingFile;
    [CompilerGeneratedAttribute]
private string <Url>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <SaveMappingToFile>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ProxySaveMappingSettings <SaveMappingSettings>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <ExcludedHeaders>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <ExcludedParams>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <ExcludedCookies>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private ProxyUrlReplaceSettings <ReplaceSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseDefinedRequestMatchers>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AppendGuidToSavedMappingFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <PrefixForSavedMappingFile>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ProxyAll>k__BackingField;
    public string Url { get; public set; }
    public bool SaveMapping { get; public set; }
    public bool SaveMappingToFile { get; public set; }
    unknown string SaveMappingForStatusCodePattern {public set; }
    [NullableAttribute("2")]
public ProxySaveMappingSettings SaveMappingSettings { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] ExcludedHeaders { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] ExcludedParams { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] ExcludedCookies { get; public set; }
    [NullableAttribute("2")]
public ProxyUrlReplaceSettings ReplaceSettings { get; public set; }
    public bool UseDefinedRequestMatchers { get; public set; }
    public bool AppendGuidToSavedMappingFile { get; public set; }
    public string PrefixForSavedMappingFile { get; public set; }
    public bool ProxyAll { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Url();
    [CompilerGeneratedAttribute]
public void set_Url(string value);
    [CompilerGeneratedAttribute]
public bool get_SaveMapping();
    [CompilerGeneratedAttribute]
public void set_SaveMapping(bool value);
    [CompilerGeneratedAttribute]
public bool get_SaveMappingToFile();
    [CompilerGeneratedAttribute]
public void set_SaveMappingToFile(bool value);
    public void set_SaveMappingForStatusCodePattern(string value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ProxySaveMappingSettings get_SaveMappingSettings();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_SaveMappingSettings(ProxySaveMappingSettings value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludedHeaders();
    [CompilerGeneratedAttribute]
public void set_ExcludedHeaders(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludedParams();
    [CompilerGeneratedAttribute]
public void set_ExcludedParams(String[] value);
    [CompilerGeneratedAttribute]
public String[] get_ExcludedCookies();
    [CompilerGeneratedAttribute]
public void set_ExcludedCookies(String[] value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public ProxyUrlReplaceSettings get_ReplaceSettings();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_ReplaceSettings(ProxyUrlReplaceSettings value);
    [CompilerGeneratedAttribute]
public bool get_UseDefinedRequestMatchers();
    [CompilerGeneratedAttribute]
public void set_UseDefinedRequestMatchers(bool value);
    [CompilerGeneratedAttribute]
public bool get_AppendGuidToSavedMappingFile();
    [CompilerGeneratedAttribute]
public void set_AppendGuidToSavedMappingFile(bool value);
    [CompilerGeneratedAttribute]
public string get_PrefixForSavedMappingFile();
    [CompilerGeneratedAttribute]
public void set_PrefixForSavedMappingFile(string value);
    [CompilerGeneratedAttribute]
public bool get_ProxyAll();
    [CompilerGeneratedAttribute]
public void set_ProxyAll(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Settings.ProxySaveMappingSetting`1 : object {
    [CompilerGeneratedAttribute]
private MatchBehaviour <MatchBehaviour>k__BackingField;
    [CompilerGeneratedAttribute]
private T <Value>k__BackingField;
    public MatchBehaviour MatchBehaviour { get; }
    public T Value { get; }
    public ProxySaveMappingSetting`1(T value, MatchBehaviour matchBehaviour);
    [CompilerGeneratedAttribute]
public MatchBehaviour get_MatchBehaviour();
    [CompilerGeneratedAttribute]
public T get_Value();
    public static ProxySaveMappingSetting`1<T> op_Implicit(T value);
    public static T op_Implicit(ProxySaveMappingSetting`1<T> instance);
}
public class WireMock.Settings.ProxySaveMappingSettings : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ProxySaveMappingSetting`1<string> <StatusCodePattern>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private ProxySaveMappingSetting`1<String[]> <HttpMethods>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ProxySaveMappingSetting`1<string> StatusCodePattern { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ProxySaveMappingSetting`1<String[]> HttpMethods { get; public set; }
    [CompilerGeneratedAttribute]
public ProxySaveMappingSetting`1<string> get_StatusCodePattern();
    [CompilerGeneratedAttribute]
public void set_StatusCodePattern(ProxySaveMappingSetting`1<string> value);
    [CompilerGeneratedAttribute]
public ProxySaveMappingSetting`1<String[]> get_HttpMethods();
    [CompilerGeneratedAttribute]
public void set_HttpMethods(ProxySaveMappingSetting`1<String[]> value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Settings.ProxyUrlReplaceSettings : object {
    [CompilerGeneratedAttribute]
private string <OldValue>k__BackingField;
    [CompilerGeneratedAttribute]
private string <NewValue>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreCase>k__BackingField;
    public string OldValue { get; public set; }
    public string NewValue { get; public set; }
    public bool IgnoreCase { get; public set; }
    [CompilerGeneratedAttribute]
public string get_OldValue();
    [CompilerGeneratedAttribute]
public void set_OldValue(string value);
    [CompilerGeneratedAttribute]
public string get_NewValue();
    [CompilerGeneratedAttribute]
public void set_NewValue(string value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreCase();
    [CompilerGeneratedAttribute]
public void set_IgnoreCase(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Settings.SimpleSettingsParser : object {
    private static string Sigil;
    private static string Prefix;
    private static int PrefixLength;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> <Arguments>k__BackingField;
    private IDictionary`2<string, String[]> Arguments { get; }
    private static SimpleSettingsParser();
    [CompilerGeneratedAttribute]
private IDictionary`2<string, String[]> get_Arguments();
    public void Parse(String[] arguments, IDictionary environment);
    public bool Contains(string name);
    public String[] GetValues(string name, String[] defaultValue);
    public String[] GetValues(string name);
    public T GetValue(string name, Func`2<String[], T> func, T defaultValue);
    public T GetValue(string name, Func`2<String[], T> func);
    public bool GetBoolValue(string name, bool defaultValue);
    public bool GetBoolSwitchValue(string name);
    public Nullable`1<int> GetIntValue(string name);
    public int GetIntValue(string name, int defaultValue);
    [NullableContextAttribute("0")]
public Nullable`1<TEnum> GetEnumValue(string name);
    [NullableContextAttribute("0")]
public TEnum GetEnumValue(string name, TEnum defaultValue);
    public string GetStringValue(string name, string defaultValue);
    public string GetStringValue(string name);
    [NullableContextAttribute("2")]
public T GetObjectValueFromJson(string name);
}
public class WireMock.Settings.WebhookSettings : HttpClientSettings {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Settings.WebProxySettings : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private string <Address>k__BackingField;
    [CompilerGeneratedAttribute]
private string <UserName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Password>k__BackingField;
    [NullableAttribute("1")]
public string Address { get; public set; }
    public string UserName { get; public set; }
    public string Password { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public string get_Address();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Address(string value);
    [CompilerGeneratedAttribute]
public string get_UserName();
    [CompilerGeneratedAttribute]
public void set_UserName(string value);
    [CompilerGeneratedAttribute]
public string get_Password();
    [CompilerGeneratedAttribute]
public void set_Password(string value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Settings.WireMockCertificateSettings : object {
    [CompilerGeneratedAttribute]
private string <X509StoreName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509StoreLocation>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509StoreThumbprintOrSubjectName>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509CertificateFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <X509CertificatePassword>k__BackingField;
    public string X509StoreName { get; public set; }
    public string X509StoreLocation { get; public set; }
    public string X509StoreThumbprintOrSubjectName { get; public set; }
    public string X509CertificateFilePath { get; public set; }
    public string X509CertificatePassword { get; public set; }
    public bool IsDefined { get; }
    [CompilerGeneratedAttribute]
public string get_X509StoreName();
    [CompilerGeneratedAttribute]
public void set_X509StoreName(string value);
    [CompilerGeneratedAttribute]
public string get_X509StoreLocation();
    [CompilerGeneratedAttribute]
public void set_X509StoreLocation(string value);
    [CompilerGeneratedAttribute]
public string get_X509StoreThumbprintOrSubjectName();
    [CompilerGeneratedAttribute]
public void set_X509StoreThumbprintOrSubjectName(string value);
    [CompilerGeneratedAttribute]
public string get_X509CertificateFilePath();
    [CompilerGeneratedAttribute]
public void set_X509CertificateFilePath(string value);
    [CompilerGeneratedAttribute]
public string get_X509CertificatePassword();
    [CompilerGeneratedAttribute]
public void set_X509CertificatePassword(string value);
    public bool get_IsDefined();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Settings.WireMockServerSettings : object {
    internal static int DefaultStartTimeout;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <Port>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseSSL>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<HostingScheme> <HostingScheme>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseHttp2>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <StartAdminInterface>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <ReadStaticMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WatchStaticMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <WatchStaticMappingsInSubdirectories>k__BackingField;
    [CompilerGeneratedAttribute]
private ProxyAndRecordSettings <ProxyAndRecordSettings>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private String[] <Urls>k__BackingField;
    [CompilerGeneratedAttribute]
private int <StartTimeout>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowPartialMapping>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminUsername>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminPassword>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminAzureADTenant>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminAzureADAudience>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <RequestLogExpirationDuration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<int> <MaxRequestLogCount>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<object> <PreWireMockMiddlewareInit>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<object> <PostWireMockMiddlewareInit>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`1<IServiceCollection> <AdditionalServiceRegistration>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CorsPolicyOptions> <CorsPolicyOptions>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IWireMockLogger <Logger>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private IFileSystemHandler <FileSystemHandler>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Action`2<IHandlebars, IFileSystemHandler> <HandlebarsRegistrationCallback>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowCSharpCodeMatcher>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowBodyForAllHttpMethods>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AllowOnlyDefinedHttpStatusCodeInResponse>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableJsonBodyParsing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableRequestBodyDecompressing>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DisableDeserializeFormUrlEncoded>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <HandleRequestsSynchronously>k__BackingField;
    [CompilerGeneratedAttribute]
private WireMockCertificateSettings <CertificateSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private ClientCertificateMode <ClientCertificateMode>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <AcceptAnyClientCertificate>k__BackingField;
    [CompilerGeneratedAttribute]
private WebhookSettings <WebhookSettings>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseRegexExtended>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <SaveUnmatchedRequests>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <DoNotSaveDynamicResponseInLogEntry>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<QueryParameterMultipleValueSupport> <QueryParameterMultipleValueSupport>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, Func`2<MatcherModel, IMatcher>> <CustomMatcherMappings>k__BackingField;
    [CompilerGeneratedAttribute]
private JsonSerializerSettings <JsonSerializerSettings>k__BackingField;
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private CultureInfo <Culture>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, string> <ProtoDefinitions>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private Dictionary`2<string, GraphQLSchemaDetails> <GraphQLSchemas>k__BackingField;
    [CompilerGeneratedAttribute]
private string <AdminPath>k__BackingField;
    public Nullable`1<int> Port { get; public set; }
    public Nullable`1<bool> UseSSL { get; public set; }
    public Nullable`1<HostingScheme> HostingScheme { get; public set; }
    public Nullable`1<bool> UseHttp2 { get; public set; }
    public Nullable`1<bool> StartAdminInterface { get; public set; }
    public Nullable`1<bool> ReadStaticMappings { get; public set; }
    public Nullable`1<bool> WatchStaticMappings { get; public set; }
    public Nullable`1<bool> WatchStaticMappingsInSubdirectories { get; public set; }
    public ProxyAndRecordSettings ProxyAndRecordSettings { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public String[] Urls { get; public set; }
    public int StartTimeout { get; public set; }
    public Nullable`1<bool> AllowPartialMapping { get; public set; }
    public string AdminUsername { get; public set; }
    public string AdminPassword { get; public set; }
    public string AdminAzureADTenant { get; public set; }
    public string AdminAzureADAudience { get; public set; }
    public Nullable`1<int> RequestLogExpirationDuration { get; public set; }
    public Nullable`1<int> MaxRequestLogCount { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public Action`1<object> PreWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public Action`1<object> PostWireMockMiddlewareInit { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public Action`1<IServiceCollection> AdditionalServiceRegistration { get; public set; }
    public Nullable`1<CorsPolicyOptions> CorsPolicyOptions { get; public set; }
    [NullableAttribute("1")]
[JsonIgnoreAttribute]
public IWireMockLogger Logger { get; public set; }
    [NullableAttribute("1")]
[JsonIgnoreAttribute]
public IFileSystemHandler FileSystemHandler { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public Action`2<IHandlebars, IFileSystemHandler> HandlebarsRegistrationCallback { get; public set; }
    public Nullable`1<bool> AllowCSharpCodeMatcher { get; public set; }
    public Nullable`1<bool> AllowBodyForAllHttpMethods { get; public set; }
    public Nullable`1<bool> AllowOnlyDefinedHttpStatusCodeInResponse { get; public set; }
    public Nullable`1<bool> DisableJsonBodyParsing { get; public set; }
    public Nullable`1<bool> DisableRequestBodyDecompressing { get; public set; }
    public Nullable`1<bool> DisableDeserializeFormUrlEncoded { get; public set; }
    public Nullable`1<bool> HandleRequestsSynchronously { get; public set; }
    public WireMockCertificateSettings CertificateSettings { get; public set; }
    public bool CustomCertificateDefined { get; }
    public ClientCertificateMode ClientCertificateMode { get; public set; }
    public bool AcceptAnyClientCertificate { get; public set; }
    public WebhookSettings WebhookSettings { get; public set; }
    public Nullable`1<bool> UseRegexExtended { get; public set; }
    public Nullable`1<bool> SaveUnmatchedRequests { get; public set; }
    public Nullable`1<bool> DoNotSaveDynamicResponseInLogEntry { get; public set; }
    public Nullable`1<QueryParameterMultipleValueSupport> QueryParameterMultipleValueSupport { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[JsonIgnoreAttribute]
public IDictionary`2<string, Func`2<MatcherModel, IMatcher>> CustomMatcherMappings { get; public set; }
    [JsonIgnoreAttribute]
public JsonSerializerSettings JsonSerializerSettings { get; public set; }
    [NullableAttribute("1")]
[JsonIgnoreAttribute]
public CultureInfo Culture { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, string> ProtoDefinitions { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Dictionary`2<string, GraphQLSchemaDetails> GraphQLSchemas { get; public set; }
    public string AdminPath { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_Port();
    [CompilerGeneratedAttribute]
public void set_Port(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseSSL();
    [CompilerGeneratedAttribute]
public void set_UseSSL(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<HostingScheme> get_HostingScheme();
    [CompilerGeneratedAttribute]
public void set_HostingScheme(Nullable`1<HostingScheme> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseHttp2();
    [CompilerGeneratedAttribute]
public void set_UseHttp2(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_StartAdminInterface();
    [CompilerGeneratedAttribute]
public void set_StartAdminInterface(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_ReadStaticMappings();
    [CompilerGeneratedAttribute]
public void set_ReadStaticMappings(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WatchStaticMappings();
    [CompilerGeneratedAttribute]
public void set_WatchStaticMappings(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_WatchStaticMappingsInSubdirectories();
    [CompilerGeneratedAttribute]
public void set_WatchStaticMappingsInSubdirectories(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public ProxyAndRecordSettings get_ProxyAndRecordSettings();
    [CompilerGeneratedAttribute]
public void set_ProxyAndRecordSettings(ProxyAndRecordSettings value);
    [CompilerGeneratedAttribute]
public String[] get_Urls();
    [CompilerGeneratedAttribute]
public void set_Urls(String[] value);
    [CompilerGeneratedAttribute]
public int get_StartTimeout();
    [CompilerGeneratedAttribute]
public void set_StartTimeout(int value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowPartialMapping();
    [CompilerGeneratedAttribute]
public void set_AllowPartialMapping(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_AdminUsername();
    [CompilerGeneratedAttribute]
public void set_AdminUsername(string value);
    [CompilerGeneratedAttribute]
public string get_AdminPassword();
    [CompilerGeneratedAttribute]
public void set_AdminPassword(string value);
    [CompilerGeneratedAttribute]
public string get_AdminAzureADTenant();
    [CompilerGeneratedAttribute]
public void set_AdminAzureADTenant(string value);
    [CompilerGeneratedAttribute]
public string get_AdminAzureADAudience();
    [CompilerGeneratedAttribute]
public void set_AdminAzureADAudience(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_RequestLogExpirationDuration();
    [CompilerGeneratedAttribute]
public void set_RequestLogExpirationDuration(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Nullable`1<int> get_MaxRequestLogCount();
    [CompilerGeneratedAttribute]
public void set_MaxRequestLogCount(Nullable`1<int> value);
    [CompilerGeneratedAttribute]
public Action`1<object> get_PreWireMockMiddlewareInit();
    [CompilerGeneratedAttribute]
public void set_PreWireMockMiddlewareInit(Action`1<object> value);
    [CompilerGeneratedAttribute]
public Action`1<object> get_PostWireMockMiddlewareInit();
    [CompilerGeneratedAttribute]
public void set_PostWireMockMiddlewareInit(Action`1<object> value);
    [CompilerGeneratedAttribute]
public Action`1<IServiceCollection> get_AdditionalServiceRegistration();
    [CompilerGeneratedAttribute]
public void set_AdditionalServiceRegistration(Action`1<IServiceCollection> value);
    [CompilerGeneratedAttribute]
public Nullable`1<CorsPolicyOptions> get_CorsPolicyOptions();
    [CompilerGeneratedAttribute]
public void set_CorsPolicyOptions(Nullable`1<CorsPolicyOptions> value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IWireMockLogger get_Logger();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Logger(IWireMockLogger value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public IFileSystemHandler get_FileSystemHandler();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_FileSystemHandler(IFileSystemHandler value);
    [CompilerGeneratedAttribute]
public Action`2<IHandlebars, IFileSystemHandler> get_HandlebarsRegistrationCallback();
    [CompilerGeneratedAttribute]
public void set_HandlebarsRegistrationCallback(Action`2<IHandlebars, IFileSystemHandler> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowCSharpCodeMatcher();
    [CompilerGeneratedAttribute]
public void set_AllowCSharpCodeMatcher(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowBodyForAllHttpMethods();
    [CompilerGeneratedAttribute]
public void set_AllowBodyForAllHttpMethods(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AllowOnlyDefinedHttpStatusCodeInResponse();
    [CompilerGeneratedAttribute]
public void set_AllowOnlyDefinedHttpStatusCodeInResponse(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableJsonBodyParsing();
    [CompilerGeneratedAttribute]
public void set_DisableJsonBodyParsing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableRequestBodyDecompressing();
    [CompilerGeneratedAttribute]
public void set_DisableRequestBodyDecompressing(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DisableDeserializeFormUrlEncoded();
    [CompilerGeneratedAttribute]
public void set_DisableDeserializeFormUrlEncoded(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_HandleRequestsSynchronously();
    [CompilerGeneratedAttribute]
public void set_HandleRequestsSynchronously(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public WireMockCertificateSettings get_CertificateSettings();
    [CompilerGeneratedAttribute]
public void set_CertificateSettings(WireMockCertificateSettings value);
    public bool get_CustomCertificateDefined();
    [CompilerGeneratedAttribute]
public ClientCertificateMode get_ClientCertificateMode();
    [CompilerGeneratedAttribute]
public void set_ClientCertificateMode(ClientCertificateMode value);
    [CompilerGeneratedAttribute]
public bool get_AcceptAnyClientCertificate();
    [CompilerGeneratedAttribute]
public void set_AcceptAnyClientCertificate(bool value);
    [CompilerGeneratedAttribute]
public WebhookSettings get_WebhookSettings();
    [CompilerGeneratedAttribute]
public void set_WebhookSettings(WebhookSettings value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseRegexExtended();
    [CompilerGeneratedAttribute]
public void set_UseRegexExtended(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_SaveUnmatchedRequests();
    [CompilerGeneratedAttribute]
public void set_SaveUnmatchedRequests(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_DoNotSaveDynamicResponseInLogEntry();
    [CompilerGeneratedAttribute]
public void set_DoNotSaveDynamicResponseInLogEntry(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<QueryParameterMultipleValueSupport> get_QueryParameterMultipleValueSupport();
    [CompilerGeneratedAttribute]
public void set_QueryParameterMultipleValueSupport(Nullable`1<QueryParameterMultipleValueSupport> value);
    [CompilerGeneratedAttribute]
public IDictionary`2<string, Func`2<MatcherModel, IMatcher>> get_CustomMatcherMappings();
    [CompilerGeneratedAttribute]
public void set_CustomMatcherMappings(IDictionary`2<string, Func`2<MatcherModel, IMatcher>> value);
    [CompilerGeneratedAttribute]
public JsonSerializerSettings get_JsonSerializerSettings();
    [CompilerGeneratedAttribute]
public void set_JsonSerializerSettings(JsonSerializerSettings value);
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public CultureInfo get_Culture();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Culture(CultureInfo value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, string> get_ProtoDefinitions();
    [CompilerGeneratedAttribute]
public void set_ProtoDefinitions(Dictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, GraphQLSchemaDetails> get_GraphQLSchemas();
    [CompilerGeneratedAttribute]
public void set_GraphQLSchemas(Dictionary`2<string, GraphQLSchemaDetails> value);
    [CompilerGeneratedAttribute]
public string get_AdminPath();
    [CompilerGeneratedAttribute]
public void set_AdminPath(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public static class WireMock.Settings.WireMockServerSettingsParser : object {
    [NullableContextAttribute("2")]
public static bool TryParseArguments(String[] args, IDictionary environment, WireMockServerSettings& settings, IWireMockLogger logger);
    private static void ParseLoggerSettings(WireMockServerSettings settings, IWireMockLogger logger, SimpleSettingsParser parser);
    private static void ParseProxyAndRecordSettings(WireMockServerSettings settings, SimpleSettingsParser parser);
    private static void ParsePortSettings(WireMockServerSettings settings, SimpleSettingsParser parser);
    private static void ParseCertificateSettings(WireMockServerSettings settings, SimpleSettingsParser parser);
    private static void ParseWebProxyAddressSettings(ProxyAndRecordSettings settings, SimpleSettingsParser parser);
    private static void ParseProxyUrlReplaceSettings(ProxyAndRecordSettings settings, SimpleSettingsParser parser);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Handlebars.FileHelpers : BaseHelpers {
    private IFileSystemHandler _fileSystemHandler;
    public FileHelpers(IHandlebars context, IFileSystemHandler fileSystemHandler);
    [HandlebarsWriterAttribute]
public string Read(Context context, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Handlebars.HandlebarsContext : object {
    [CompilerGeneratedAttribute]
private IHandlebars <Handlebars>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystemHandler <FileSystemHandler>k__BackingField;
    public IHandlebars Handlebars { get; }
    public IFileSystemHandler FileSystemHandler { get; }
    public HandlebarsContext(IHandlebars handlebars, IFileSystemHandler fileSystemHandler);
    [CompilerGeneratedAttribute]
public sealed virtual IHandlebars get_Handlebars();
    [CompilerGeneratedAttribute]
public sealed virtual IFileSystemHandler get_FileSystemHandler();
    public sealed virtual string ParseAndRender(string text, object model);
    public sealed virtual object ParseAndEvaluate(string text, object model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Handlebars.HandlebarsContextFactory : object {
    private WireMockServerSettings _settings;
    public HandlebarsContextFactory(WireMockServerSettings settings);
    public sealed virtual ITransformerContext Create();
}
[NullableContextAttribute("1")]
internal interface WireMock.Transformers.Handlebars.IHandlebarsContext {
    public IHandlebars Handlebars { get; }
    public abstract virtual IHandlebars get_Handlebars();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Transformers.Handlebars.WireMockHandlebarsHelpers : object {
    public static void Register(IHandlebars handlebarsContext, IFileSystemHandler fileSystemHandler);
    private static string GetBaseDirectory();
}
[NullableContextAttribute("1")]
internal interface WireMock.Transformers.ITransformer {
    public abstract virtual ResponseMessage Transform(IMapping mapping, IRequestMessage requestMessage, IResponseMessage original, bool useTransformerForBodyAsFile, ReplaceNodeOptions options);
    public abstract virtual IBodyData TransformBody(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, IBodyData bodyData, ReplaceNodeOptions options);
    public abstract virtual IDictionary`2<string, WireMockList`1<string>> TransformHeaders(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, IDictionary`2<string, WireMockList`1<string>> headers);
    public abstract virtual string TransformString(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, string value);
}
[NullableContextAttribute("1")]
internal interface WireMock.Transformers.ITransformerContext {
    public IFileSystemHandler FileSystemHandler { get; }
    public abstract virtual IFileSystemHandler get_FileSystemHandler();
    public abstract virtual string ParseAndRender(string text, object model);
    public abstract virtual object ParseAndEvaluate(string text, object model);
}
[NullableContextAttribute("1")]
internal interface WireMock.Transformers.ITransformerContextFactory {
    public abstract virtual ITransformerContext Create();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Scriban.ScribanContext : object {
    private TransformerType _transformerType;
    [CompilerGeneratedAttribute]
private IFileSystemHandler <FileSystemHandler>k__BackingField;
    public IFileSystemHandler FileSystemHandler { get; }
    public ScribanContext(IFileSystemHandler fileSystemHandler, TransformerType transformerType);
    [CompilerGeneratedAttribute]
public sealed virtual IFileSystemHandler get_FileSystemHandler();
    public sealed virtual string ParseAndRender(string text, object model);
    public sealed virtual object ParseAndEvaluate(string text, object model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Scriban.ScribanContextFactory : object {
    private IFileSystemHandler _fileSystemHandler;
    private TransformerType _transformerType;
    public ScribanContextFactory(IFileSystemHandler fileSystemHandler, TransformerType transformerType);
    public sealed virtual ITransformerContext Create();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Scriban.WireMockListAccessor : object {
    public bool HasIndexer { get; }
    public Type IndexType { get; }
    public sealed virtual int GetLength(TemplateContext context, SourceSpan span, object target);
    public sealed virtual object GetValue(TemplateContext context, SourceSpan span, object target, int index);
    public sealed virtual void SetValue(TemplateContext context, SourceSpan span, object target, int index, object value);
    public sealed virtual int GetMemberCount(TemplateContext context, SourceSpan span, object target);
    public sealed virtual IEnumerable`1<string> GetMembers(TemplateContext context, SourceSpan span, object target);
    public sealed virtual bool HasMember(TemplateContext context, SourceSpan span, object target, string member);
    public sealed virtual bool TryGetValue(TemplateContext context, SourceSpan span, object target, string member, Object& value);
    public sealed virtual bool TrySetValue(TemplateContext context, SourceSpan span, object target, string member, object value);
    public sealed virtual bool TryGetItem(TemplateContext context, SourceSpan span, object target, object index, Object& value);
    public sealed virtual bool TrySetItem(TemplateContext context, SourceSpan span, object target, object index, object value);
    public sealed virtual bool get_HasIndexer();
    public sealed virtual Type get_IndexType();
}
internal class WireMock.Transformers.Scriban.WireMockTemplateContext : TemplateContext {
    [NullableContextAttribute("1")]
protected virtual IObjectAccessor GetMemberAccessorImpl(object target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.Transformer : object {
    private JsonSerializer _jsonSerializer;
    private ITransformerContextFactory _factory;
    public Transformer(WireMockServerSettings settings, ITransformerContextFactory factory);
    public sealed virtual IBodyData TransformBody(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, IBodyData bodyData, ReplaceNodeOptions options);
    public sealed virtual IDictionary`2<string, WireMockList`1<string>> TransformHeaders(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, IDictionary`2<string, WireMockList`1<string>> headers);
    public sealed virtual string TransformString(IMapping mapping, IRequestMessage originalRequestMessage, IResponseMessage originalResponseMessage, string value);
    public sealed virtual ResponseMessage Transform(IMapping mapping, IRequestMessage requestMessage, IResponseMessage original, bool useTransformerForBodyAsFile, ReplaceNodeOptions options);
    private ValueTuple`2<ITransformerContext, TransformModel> Create(IMapping mapping, IRequestMessage request, IResponseMessage response);
    private IBodyData TransformBodyData(ITransformerContext transformerContext, ReplaceNodeOptions options, TransformModel model, IBodyData original, bool useTransformerForBodyAsFile);
    private static IDictionary`2<string, WireMockList`1<string>> TransformHeaders(ITransformerContext transformerContext, TransformModel model, IDictionary`2<string, WireMockList`1<string>> original);
    private IBodyData TransformBodyAsJson(ITransformerContext transformerContext, ReplaceNodeOptions options, object model, IBodyData original);
    private JToken ReplaceSingleNode(ITransformerContext transformerContext, ReplaceNodeOptions options, string stringValue, object model);
    private void WalkNode(ITransformerContext transformerContext, ReplaceNodeOptions options, JToken node, object model);
    private void ReplaceNodeValue(ReplaceNodeOptions options, JToken node, object transformedValue);
    private static JToken ParseAsJObject(string stringValue);
    private static ValueTuple`2<bool, object> TryConvert(ReplaceNodeOptions options, object value);
    private static IBodyData TransformBodyAsString(ITransformerContext transformerContext, object model, IBodyData original);
    private static IBodyData TransformBodyAsFile(ITransformerContext transformerContext, object model, IBodyData original, bool useTransformerForBodyAsFile);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class WireMock.Transformers.TransformModel : ValueType {
    [CompilerGeneratedAttribute]
private IMapping <mapping>k__BackingField;
    [CompilerGeneratedAttribute]
private IRequestMessage <request>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private IResponseMessage <response>k__BackingField;
    [CompilerGeneratedAttribute]
private object <data>k__BackingField;
    public IMapping mapping { get; public set; }
    public IRequestMessage request { get; public set; }
    [NullableAttribute("2")]
public IResponseMessage response { get; public set; }
    public object data { get; public set; }
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public IMapping get_mapping();
    [CompilerGeneratedAttribute]
public void set_mapping(IMapping value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public IRequestMessage get_request();
    [CompilerGeneratedAttribute]
public void set_request(IRequestMessage value);
    [IsReadOnlyAttribute]
[NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public IResponseMessage get_response();
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void set_response(IResponseMessage value);
    [IsReadOnlyAttribute]
[CompilerGeneratedAttribute]
public object get_data();
    [CompilerGeneratedAttribute]
public void set_data(object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class WireMock.Util.BodyData : object {
    [CompilerGeneratedAttribute]
private Encoding <Encoding>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BodyAsString>k__BackingField;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[CompilerGeneratedAttribute]
private IDictionary`2<string, string> <BodyAsFormUrlEncoded>k__BackingField;
    [CompilerGeneratedAttribute]
private object <BodyAsJson>k__BackingField;
    [CompilerGeneratedAttribute]
private Byte[] <BodyAsBytes>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BodyAsJsonIndented>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BodyAsFile>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <BodyAsFileIsCached>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BodyType> <DetectedBodyType>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<BodyType> <DetectedBodyTypeFromContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DetectedCompression>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IsFuncUsed>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`1<IdOrText> <ProtoDefinition>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ProtoBufMessageType>k__BackingField;
    public Encoding Encoding { get; public set; }
    public string BodyAsString { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> BodyAsFormUrlEncoded { get; public set; }
    public object BodyAsJson { get; public set; }
    public Byte[] BodyAsBytes { get; public set; }
    public Nullable`1<bool> BodyAsJsonIndented { get; public set; }
    public string BodyAsFile { get; public set; }
    public Nullable`1<bool> BodyAsFileIsCached { get; public set; }
    public Nullable`1<BodyType> DetectedBodyType { get; public set; }
    public Nullable`1<BodyType> DetectedBodyTypeFromContentType { get; public set; }
    public string DetectedCompression { get; public set; }
    public string IsFuncUsed { get; public set; }
    public Func`1<IdOrText> ProtoDefinition { get; public set; }
    public string ProtoBufMessageType { get; public set; }
    [CompilerGeneratedAttribute]
public sealed virtual Encoding get_Encoding();
    [CompilerGeneratedAttribute]
public sealed virtual void set_Encoding(Encoding value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BodyAsString();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsString(string value);
    [CompilerGeneratedAttribute]
public sealed virtual IDictionary`2<string, string> get_BodyAsFormUrlEncoded();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsFormUrlEncoded(IDictionary`2<string, string> value);
    [CompilerGeneratedAttribute]
public sealed virtual object get_BodyAsJson();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsJson(object value);
    [CompilerGeneratedAttribute]
public sealed virtual Byte[] get_BodyAsBytes();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsBytes(Byte[] value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BodyAsJsonIndented();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsJsonIndented(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BodyAsFile();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsFile(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<bool> get_BodyAsFileIsCached();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BodyAsFileIsCached(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<BodyType> get_DetectedBodyType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DetectedBodyType(Nullable`1<BodyType> value);
    [CompilerGeneratedAttribute]
public sealed virtual Nullable`1<BodyType> get_DetectedBodyTypeFromContentType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DetectedBodyTypeFromContentType(Nullable`1<BodyType> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_DetectedCompression();
    [CompilerGeneratedAttribute]
public sealed virtual void set_DetectedCompression(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_IsFuncUsed();
    [CompilerGeneratedAttribute]
public sealed virtual void set_IsFuncUsed(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`1<IdOrText> get_ProtoDefinition();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtoDefinition(Func`1<IdOrText> value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_ProtoBufMessageType();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ProtoBufMessageType(string value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.BodyParser : object {
    private static Encoding DefaultEncoding;
    private static Encoding[] SupportedBodyAsStringEncodingForMultipart;
    private static IDictionary`2<string, bool> BodyAllowedForMethods;
    private static IStringMatcher[] MultipartContentTypesMatchers;
    private static IStringMatcher[] JsonContentTypesMatchers;
    private static IStringMatcher FormUrlEncodedMatcher;
    private static IStringMatcher[] TextContentTypeMatchers;
    private static IStringMatcher[] GrpcContentTypesMatchers;
    private static BodyParser();
    [NullableContextAttribute("2")]
public static bool ShouldParseBody(string httpMethod, bool allowBodyForAllHttpMethods);
    [NullableContextAttribute("2")]
public static BodyType DetectBodyTypeFromContentType(string contentTypeValue);
    [AsyncStateMachineAttribute("WireMock.Util.BodyParser/<ParseAsync>d__10")]
public static Task`1<BodyData> ParseAsync(BodyParserSettings settings);
    [AsyncStateMachineAttribute("WireMock.Util.BodyParser/<ReadBytesAsync>d__11")]
private static Task`1<ValueTuple`2<string, Byte[]>> ReadBytesAsync(Stream stream, string contentEncoding, bool decompressGZipAndDeflate);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class WireMock.Util.BodyParserSettings : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private Stream <Stream>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentType>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ContentEncoding>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DecompressGZipAndDeflate>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeserializeJson>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DeserializeFormUrlEncoded>k__BackingField;
    [NullableAttribute("1")]
public Stream Stream { get; public set; }
    public string ContentType { get; public set; }
    public string ContentEncoding { get; public set; }
    public bool DecompressGZipAndDeflate { get; public set; }
    public bool DeserializeJson { get; public set; }
    public bool DeserializeFormUrlEncoded { get; public set; }
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public Stream get_Stream();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public void set_Stream(Stream value);
    [CompilerGeneratedAttribute]
public string get_ContentType();
    [CompilerGeneratedAttribute]
public void set_ContentType(string value);
    [CompilerGeneratedAttribute]
public string get_ContentEncoding();
    [CompilerGeneratedAttribute]
public void set_ContentEncoding(string value);
    [CompilerGeneratedAttribute]
public bool get_DecompressGZipAndDeflate();
    [CompilerGeneratedAttribute]
public void set_DecompressGZipAndDeflate(bool value);
    [CompilerGeneratedAttribute]
public bool get_DeserializeJson();
    [CompilerGeneratedAttribute]
public void set_DeserializeJson(bool value);
    [CompilerGeneratedAttribute]
public bool get_DeserializeFormUrlEncoded();
    [CompilerGeneratedAttribute]
public void set_DeserializeFormUrlEncoded(bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.BytesEncodingUtils : object {
    public static bool TryGetEncoding(Byte[] bytes, Encoding& encoding);
    private static bool StartsWith(IEnumerable`1<byte> data, IReadOnlyCollection`1<byte> other);
    private static bool IsUtf8(IReadOnlyList`1<byte> buffer, int length);
    private static bool IsValid(IReadOnlyList`1<byte> buffer, int position, int length, Int32& bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.CompressionUtils : object {
    public static Byte[] Compress(string contentEncoding, Byte[] data);
    public static Byte[] Decompress(string contentEncoding, Byte[] data);
    private static Stream Create(string contentEncoding, Stream stream, CompressionMode mode);
}
[NullableContextAttribute("1")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
internal class WireMock.Util.ConcurrentObservableCollection`1 : ObservableCollection`1<T> {
    private object _lockObject;
    public ConcurrentObservableCollection`1(List`1<T> list);
    public ConcurrentObservableCollection`1(IEnumerable`1<T> collection);
    protected virtual void ClearItems();
    protected virtual void RemoveItem(int index);
    protected virtual void InsertItem(int index, T item);
    protected virtual void SetItem(int index, T item);
    protected virtual void MoveItem(int oldIndex, int newIndex);
    public List`1<T> ToList();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.CSharpFormatter : object {
    private static string Null;
    private static HashSet`1<string> CSharpReservedKeywords;
    private static CSharpFormatter();
    public static object ConvertToAnonymousObjectDefinition(object jsonBody, int ind);
    public static string ConvertJsonToAnonymousObjectDefinition(JToken token, int ind);
    public static string ToCSharpBooleanLiteral(bool value);
    public static string ToCSharpStringLiteral(string value);
    public static string FormatPropertyName(string propertyName);
    private static string FormatObject(JObject jObject, int ind);
    private static string FormatArray(JArray jArray, int ind);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.CultureInfoUtils : object {
    public static CultureInfo CultureInfoEnUS;
    private static CultureInfoUtils();
    public static CultureInfo Parse(string value);
}
internal class WireMock.Util.DateTimeUtils : object {
    public DateTime UtcNow { get; }
    public sealed virtual DateTime get_UtcNow();
}
[ExtensionAttribute]
public static class WireMock.Util.DictionaryExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void Loop(IDictionary`2<TKey, TValue> dictionary, Action`2<TKey, TValue> action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class WireMock.Util.EnhancedFileSystemWatcher : FileSystemWatcher {
    private static int DefaultWatchInterval;
    private ConcurrentDictionary`2<string, DateTime> _lastFileEvent;
    private int _interval;
    private TimeSpan _recentTimeSpan;
    [CompilerGeneratedAttribute]
private bool <FilterRecentEvents>k__BackingField;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private FileSystemEventHandler Changed;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private FileSystemEventHandler Created;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private FileSystemEventHandler Deleted;
    [NullableAttribute("2")]
[CompilerGeneratedAttribute]
private RenamedEventHandler Renamed;
    public int Interval { get; public set; }
    public bool FilterRecentEvents { get; public set; }
    public EnhancedFileSystemWatcher(int interval);
    public EnhancedFileSystemWatcher(string path, int interval);
    public EnhancedFileSystemWatcher(string path, string filter, int interval);
    public int get_Interval();
    public void set_Interval(int value);
    [CompilerGeneratedAttribute]
public bool get_FilterRecentEvents();
    [CompilerGeneratedAttribute]
public void set_FilterRecentEvents(bool value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Changed(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Changed(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Created(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Created(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Deleted(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Deleted(FileSystemEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void add_Renamed(RenamedEventHandler value);
    [NullableContextAttribute("2")]
[CompilerGeneratedAttribute]
public void remove_Renamed(RenamedEventHandler value);
    protected virtual void OnChanged(FileSystemEventArgs e);
    protected virtual void OnCreated(FileSystemEventArgs e);
    protected virtual void OnDeleted(FileSystemEventArgs e);
    protected virtual void OnRenamed(RenamedEventArgs e);
    private void InitializeMembers(int interval);
    private bool HasAnotherFileEventOccurredRecently(string fileName);
    private void OnChanged(object sender, FileSystemEventArgs e);
    private void OnCreated(object sender, FileSystemEventArgs e);
    private void OnDeleted(object sender, FileSystemEventArgs e);
    private void OnRenamed(object sender, RenamedEventArgs e);
}
internal static class WireMock.Util.FileHelper : object {
    private static int NumberOfRetries;
    private static int DelayOnRetry;
    [NullableContextAttribute("1")]
public static bool TryReadMappingFileWithRetryAndDelay(IFileSystemHandler handler, string path, String& value);
}
internal class WireMock.Util.GuidUtils : object {
    public sealed virtual Guid NewGuid();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class WireMock.Util.HttpStatusRangeParser : object {
    public static bool IsMatch(string pattern, object httpStatusCode);
    [NullableContextAttribute("1")]
public static bool IsMatch(string pattern, HttpStatusCode httpStatusCode);
    public static bool IsMatch(string pattern, int httpStatusCode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.HttpVersionParser : object {
    private static Regex HttpVersionRegex;
    private static HttpVersionParser();
    internal static string Parse(string protocol);
}
internal interface WireMock.Util.IDateTimeUtils {
    public DateTime UtcNow { get; }
    public abstract virtual DateTime get_UtcNow();
}
internal interface WireMock.Util.IGuidUtils {
    public abstract virtual Guid NewGuid();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.JsonUtils : object {
    [NullableContextAttribute("2")]
public static bool TryParseAsJObject(string strInput, JObject& value);
    public static string Serialize(object value);
    public static Byte[] SerializeAsPactFile(object value);
    public static JToken Parse(string json);
    public static object DeserializeObject(string json);
    public static T DeserializeObject(string json);
    [NullableContextAttribute("2")]
public static T TryDeserializeObject(string json);
    [NullableContextAttribute("2")]
public static T ParseJTokenToObject(object value);
    public static JToken ConvertValueToJToken(object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.MappingConverterUtils : object {
    internal static string ToCSharpCodeArguments(IReadOnlyList`1<IMatcher> matchers);
    internal static string ToCSharpCodeArguments(AnyOf`2[] patterns);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.MimeKitUtils : object {
    public static bool TryGetMimeMessage(IRequestMessage requestMessage, MimeMessage& mimeMessage);
    private static bool StartsWithMultiPart(WireMockList`1<string> contentTypeHeader);
    private static Byte[] FixBytes(Byte[] bytes, WireMockList`1<string> contentType);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal static class WireMock.Util.PathUtils : object {
    public static string CleanPath(string path);
    public static string RemoveLeadingDirectorySeparators(string path);
    [NullableContextAttribute("1")]
public static string Combine(string root, string path);
}
internal static class WireMock.Util.PortUtils : object {
    [NullableAttribute("1")]
private static Regex UrlDetailsRegex;
    private static PortUtils();
    public static int FindFreeTcpPort();
    [NullableContextAttribute("2")]
public static bool TryExtract(string url, Boolean& isHttps, Boolean& isHttp2, String& protocol, String& host, Int32& port);
}
internal static class WireMock.Util.ProtoBufUtils : object {
    [NullableContextAttribute("2")]
[AsyncStateMachineAttribute("WireMock.Util.ProtoBufUtils/<GetProtoBufMessageWithHeaderAsync>d__0")]
internal static Task`1<Byte[]> GetProtoBufMessageWithHeaderAsync(string protoDefinition, string messageType, object value, IJsonConverter jsonConverter, JsonConverterOptions options, CancellationToken cancellationToken);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.QueryStringParser : object {
    private static Dictionary`2<string, WireMockList`1<string>> Empty;
    private static QueryStringParser();
    [NullableContextAttribute("2")]
public static bool TryParse(string queryString, bool caseIgnore, IDictionary`2& nameValueCollection);
    public static IDictionary`2<string, WireMockList`1<string>> Parse(string queryString, Nullable`1<QueryParameterMultipleValueSupport> support);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.ReflectionUtils : object {
    private static string DynamicModuleName;
    private static AssemblyName AssemblyName;
    private static TypeAttributes ClassAttributes;
    private static ConcurrentDictionary`2<string, Type> TypeCache;
    private static ReflectionUtils();
    public static Type CreateType(string typeName, Type parentType);
    public static Type CreateGenericType(string typeName, Type genericTypeDefinition, Type[] typeArguments);
}
internal static class WireMock.Util.RegexUtils : object {
    [NullableContextAttribute("1")]
public static Dictionary`2<string, string> GetNamedGroups(Regex regex, string input);
    public static ValueTuple`2<bool, bool> MatchRegex(string pattern, string input, bool useRegexExtended);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.SingletonFactory`1 : object {
    [NullableAttribute("2")]
private static T _instance;
    public static T GetInstance();
}
internal static class WireMock.Util.SingletonLock : object {
    [NullableAttribute("1")]
public static object Lock;
    private static SingletonLock();
}
internal static class WireMock.Util.StreamUtils : object {
    [NullableContextAttribute("1")]
public static Stream CreateStream(string s);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.StringUtils : object {
    private static String[] ValidUriSchemes;
    [TupleElementNamesAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static Func`2[] ConversionsFunctions;
    private static StringUtils();
    public static ValueTuple`2<bool, object> TryConvertToKnownType(string value);
    [NullableContextAttribute("2")]
public static MatchOperator ParseMatchOperator(string value);
    [NullableContextAttribute("2")]
public static bool TryParseQuotedString(string value, String& result, Char& quote);
}
internal static class WireMock.Util.SystemUtils : object {
    [NullableAttribute("1")]
public static string Version;
    private static SystemUtils();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
internal class WireMock.Util.TinyMapperUtils : object {
    [NullableAttribute("1")]
[CompilerGeneratedAttribute]
private static TinyMapperUtils <Instance>k__BackingField;
    [NullableAttribute("1")]
public static TinyMapperUtils Instance { get; }
    private static TinyMapperUtils();
    [NullableContextAttribute("1")]
[CompilerGeneratedAttribute]
public static TinyMapperUtils get_Instance();
    public ProxyAndRecordSettingsModel Map(ProxyAndRecordSettings instance);
    public ProxyAndRecordSettings Map(ProxyAndRecordSettingsModel model);
    public ProxyUrlReplaceSettingsModel Map(ProxyUrlReplaceSettings instance);
    public ProxyUrlReplaceSettings Map(ProxyUrlReplaceSettingsModel model);
    public WebProxyModel Map(WebProxySettings instance);
    public WebProxySettings Map(WebProxyModel model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.TypeLoader : object {
    private static ConcurrentDictionary`2<string, Type> Assemblies;
    private static TypeLoader();
    public static TInterface Load(Object[] args);
    public static TInterface LoadByFullName(string implementationTypeFullName, Object[] args);
    [NullableContextAttribute("2")]
private static bool TryFindTypeInDlls(string implementationTypeFullName, Type& pluginType);
    [NullableContextAttribute("2")]
private static bool TryGetImplementationTypeByInterfaceAndOptionalFullName(Assembly assembly, string implementationTypeFullName, Type& type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal static class WireMock.Util.UrlUtils : object {
    public static UrlDetails Parse(Uri uri, PathString pathBase);
    private static string RemoveFirst(string text, string search);
}
