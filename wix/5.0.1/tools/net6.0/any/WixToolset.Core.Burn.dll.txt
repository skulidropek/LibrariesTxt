internal class ThisAssembly : object {
}
internal abstract class WixToolset.Core.Burn.BaseSearchFacade : object {
    [CompilerGeneratedAttribute]
private WixSearchSymbol <SearchSymbol>k__BackingField;
    protected WixSearchSymbol SearchSymbol { get; protected set; }
    [CompilerGeneratedAttribute]
protected WixSearchSymbol get_SearchSymbol();
    [CompilerGeneratedAttribute]
protected void set_SearchSymbol(WixSearchSymbol value);
    public virtual void WriteXml(XmlTextWriter writer);
}
internal class WixToolset.Core.Burn.Bind.GenerateManifestDataFromIRCommand : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private IBurnBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> <ExtensionSearchSymbolsById>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private IBurnBackendHelper BackendHelper { get; }
    private IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> ExtensionSearchSymbolsById { get; }
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    public GenerateManifestDataFromIRCommand(IMessaging messaging, IntermediateSection section, IEnumerable`1<IBurnBackendBinderExtension> backendExtensions, IBurnBackendHelper backendHelper, IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> extensionSearchSymbolsById);
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private IBurnBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> get_ExtensionSearchSymbolsById();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    public void Execute();
    private bool IndexBundleCustomDataSymbol(WixBundleCustomDataSymbol wixBundleCustomDataSymbol, Dictionary`2<string, WixBundleCustomDataSymbol> customDataById);
    private void IndexBundleCustomDataCellSymbol(WixBundleCustomDataCellSymbol wixBundleCustomDataCellSymbol, Dictionary`2<string, List`1<WixBundleCustomDataCellSymbol>> cellsByCustomDataAndElementId);
    private void AddIndexedCellSymbols(Dictionary`2<string, WixBundleCustomDataSymbol> customDataById, Dictionary`2<string, List`1<WixBundleCustomDataCellSymbol>> cellsByCustomDataAndElementId);
    private bool AddSymbolFromExtension(IntermediateSymbol symbol);
}
internal class WixToolset.Core.Burn.Bind.NormalizeRelatedBundlesCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleSymbol <BundleSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    private IMessaging Messaging { get; }
    private WixBundleSymbol BundleSymbol { get; }
    private IntermediateSection Section { get; }
    public NormalizeRelatedBundlesCommand(IMessaging messaging, WixBundleSymbol bundleSymbol, IntermediateSection section);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private WixBundleSymbol get_BundleSymbol();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    public void Execute();
    private string NormalizeBundleRelatedBundleId(SourceLineNumber sourceLineNumber, string relatedBundleId, string elementName, string attributeName);
}
internal class WixToolset.Core.Burn.Bind.ProcessBundleSoftwareTagsCommand : object {
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleTagSymbol> <SoftwareTags>k__BackingField;
    private IntermediateSection Section { get; }
    private IEnumerable`1<WixBundleTagSymbol> SoftwareTags { get; }
    public ProcessBundleSoftwareTagsCommand(IntermediateSection section, IEnumerable`1<WixBundleTagSymbol> softwareTags);
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleTagSymbol> get_SoftwareTags();
    public void Execute();
    private static string NormalizeGuid(string guidString);
    private static IEnumerable`1<SoftwareTag> CollectPackageTags(IntermediateSection section);
    private static void CreateTagFile(Stream stream, string uniqueId, string name, string version, string regid, string manufacturer, string persistendId, IEnumerable`1<SoftwareTag> containedTags);
}
internal class WixToolset.Core.Burn.Bind.ProcessDependencyProvidersCommand : object {
    [CompilerGeneratedAttribute]
private string <BundleProviderKey>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <Facades>k__BackingField;
    public string BundleProviderKey { get; private set; }
    private IMessaging Messaging { get; }
    private IBackendHelper BackendHelper { get; }
    private IntermediateSection Section { get; }
    private PackageFacades Facades { get; }
    public ProcessDependencyProvidersCommand(IServiceProvider serviceProvider, IntermediateSection section, PackageFacades facades);
    [CompilerGeneratedAttribute]
public string get_BundleProviderKey();
    [CompilerGeneratedAttribute]
private void set_BundleProviderKey(string value);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private PackageFacades get_Facades();
    public void Execute();
    private HashSet`1<string> GetDependencySymbolsByPackageId(IEnumerable`1<WixDependencyProviderSymbol> dependencySymbols);
    private void ProcessHarvestedProviders();
}
internal class WixToolset.Core.Burn.Bind.ResolveDownloadUrlsCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PayloadsById>k__BackingField;
    private IMessaging Messaging { get; }
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private IEnumerable`1<WixBundleContainerSymbol> Containers { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PayloadsById { get; }
    public ResolveDownloadUrlsCommand(IMessaging messaging, IEnumerable`1<IBurnBackendBinderExtension> backendExtensions, IEnumerable`1<WixBundleContainerSymbol> containers, Dictionary`2<string, WixBundlePayloadSymbol> payloadsById);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> get_Containers();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PayloadsById();
    public void Execute();
    private void ResolveContainerUrls();
    private void ResolvePayloadUrls();
    private string ResolveUrl(string url, string fallbackUrl, string packageId, string payloadId, string fileName);
}
internal class WixToolset.Core.Burn.BindBundleCommand : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper <InternalBurnBackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IPayloadHarvester <PayloadHarvester>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> <DefaultCompressionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IDelayedField> <DelayedFields>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IExpectedExtractFile> <ExpectedEmbeddedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private Intermediate <Output>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPdbPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IFileTransfer> <FileTransfers>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<ITrackedFile> <TrackedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private WixOutput <Wixout>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private IBackendHelper BackendHelper { get; }
    private IInternalBurnBackendHelper InternalBurnBackendHelper { get; }
    private IPayloadHarvester PayloadHarvester { get; }
    private Nullable`1<CompressionLevel> DefaultCompressionLevel { get; }
    public IEnumerable`1<IDelayedField> DelayedFields { get; }
    public IEnumerable`1<IExpectedExtractFile> ExpectedEmbeddedFiles { get; }
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private Intermediate Output { get; }
    private string OutputPath { get; }
    private string OutputPdbPath { get; }
    private string IntermediateFolder { get; }
    public IReadOnlyCollection`1<IFileTransfer> FileTransfers { get; private set; }
    public IReadOnlyCollection`1<ITrackedFile> TrackedFiles { get; private set; }
    public WixOutput Wixout { get; private set; }
    public BindBundleCommand(IBindContext context, IEnumerable`1<IBurnBackendBinderExtension> backedExtensions);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper get_InternalBurnBackendHelper();
    [CompilerGeneratedAttribute]
private IPayloadHarvester get_PayloadHarvester();
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> get_DefaultCompressionLevel();
    [CompilerGeneratedAttribute]
public IEnumerable`1<IDelayedField> get_DelayedFields();
    [CompilerGeneratedAttribute]
public IEnumerable`1<IExpectedExtractFile> get_ExpectedEmbeddedFiles();
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private Intermediate get_Output();
    [CompilerGeneratedAttribute]
private string get_OutputPath();
    [CompilerGeneratedAttribute]
private string get_OutputPdbPath();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<IFileTransfer> get_FileTransfers();
    [CompilerGeneratedAttribute]
private void set_FileTransfers(IReadOnlyCollection`1<IFileTransfer> value);
    [CompilerGeneratedAttribute]
public IReadOnlyCollection`1<ITrackedFile> get_TrackedFiles();
    [CompilerGeneratedAttribute]
private void set_TrackedFiles(IReadOnlyCollection`1<ITrackedFile> value);
    [CompilerGeneratedAttribute]
public WixOutput get_Wixout();
    [CompilerGeneratedAttribute]
private void set_Wixout(WixOutput value);
    public void Execute();
    private void ProcessBundleVersion(WixBundleSymbol bundleSymbol);
    private WixOutput CreateWixout(List`1<ITrackedFile> trackedFiles, Intermediate intermediate, string manifestPath, string baDataPath, string bextDataPath);
    private static void PopulatePackageVariableCache(PackageFacade facade, IDictionary`2<string, string> variableCache);
    private void ResolveBundleInstallScope(IntermediateSection section, WixBundleSymbol bundleSymbol, IEnumerable`1<PackageFacade> facades);
    private void DetectDuplicateCacheIds(IEnumerable`1<PackageFacade> facades);
    private IEnumerable`1<T> GetRequiredSymbols();
    private T GetSingleSymbol(string elementName);
    private static Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> RecalculatePackagesPayloads(Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols, IEnumerable`1<WixGroupSymbol> wixGroupSymbols);
}
internal class WixToolset.Core.Burn.BundleBackend : object {
    public sealed virtual IBindResult Bind(IBindContext context);
}
internal class WixToolset.Core.Burn.Bundles.AutomaticallySlipstreamPatchesCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackageFacades>k__BackingField;
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    private PackageFacades PackageFacades { get; }
    public AutomaticallySlipstreamPatchesCommand(IMessaging messaging, IntermediateSection section, PackageFacades packageFacades);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private PackageFacades get_PackageFacades();
    public void Execute();
    private void TryAddSlipstreamSymbol(HashSet`1<string> slipstreamMspIds, WixBundleMsiPackageSymbol msiPackage, WixBundlePatchTargetCodeSymbol patchTargetCode);
}
internal static class WixToolset.Core.Burn.Bundles.BundleHashAlgorithm : object {
    public static string Hash(FileInfo fileInfo);
}
internal abstract class WixToolset.Core.Burn.Bundles.BurnCommon : object {
    public static string BurnV3Namespace;
    public static string BurnNamespace;
    public static string BurnUXContainerEmbeddedIdFormat;
    public static string BurnAuthoredContainerEmbeddedIdFormat;
    public static string BADataFileName;
    public static string BootstrapperExtensionDataFileName;
    protected static UInt32 IMAGE_DOS_HEADER_SIZE;
    protected static UInt32 IMAGE_DOS_HEADER_OFFSET_MAGIC;
    protected static UInt32 IMAGE_DOS_HEADER_OFFSET_NTHEADER;
    protected static UInt32 IMAGE_NT_HEADER_SIZE;
    protected static UInt32 IMAGE_NT_HEADER_OFFSET_SIGNATURE;
    protected static UInt32 IMAGE_NT_HEADER_OFFSET_MACHINE;
    protected static UInt32 IMAGE_NT_HEADER_OFFSET_NUMBEROFSECTIONS;
    protected static UInt32 IMAGE_NT_HEADER_OFFSET_SIZEOFOPTIONALHEADER;
    protected static UInt32 IMAGE_OPTIONAL_OFFSET_CHECKSUM;
    protected static UInt32 IMAGE_OPTIONAL_NEGATIVE_OFFSET_CERTIFICATETABLE;
    protected static UInt32 IMAGE_SECTION_HEADER_SIZE;
    protected static UInt32 IMAGE_SECTION_HEADER_OFFSET_NAME;
    protected static UInt32 IMAGE_SECTION_HEADER_OFFSET_VIRTUALSIZE;
    protected static UInt32 IMAGE_SECTION_HEADER_OFFSET_SIZEOFRAWDATA;
    protected static UInt32 IMAGE_SECTION_HEADER_OFFSET_POINTERTORAWDATA;
    protected static UInt32 IMAGE_DATA_DIRECTORY_SIZE;
    protected static UInt32 IMAGE_DIRECTORY_ENTRY_SECURITY;
    protected static UInt32 IMAGE_NUMBEROF_DIRECTORY_ENTRIES;
    protected static ushort IMAGE_DOS_SIGNATURE;
    protected static UInt32 IMAGE_NT_SIGNATURE;
    protected static ulong IMAGE_SECTION_WIXBURN_NAME;
    public static ushort IMAGE_FILE_MACHINE_AM33;
    public static ushort IMAGE_FILE_MACHINE_AMD64;
    public static ushort IMAGE_FILE_MACHINE_ARM;
    public static ushort IMAGE_FILE_MACHINE_ARM64;
    public static ushort IMAGE_FILE_MACHINE_ARMNT;
    public static ushort IMAGE_FILE_MACHINE_EBC;
    public static ushort IMAGE_FILE_MACHINE_I386;
    public static ushort IMAGE_FILE_MACHINE_IA64;
    public static ushort IMAGE_FILE_MACHINE_LOONGARCH32;
    public static ushort IMAGE_FILE_MACHINE_LOONGARCH64;
    public static ushort IMAGE_FILE_MACHINE_M32R;
    public static ushort IMAGE_FILE_MACHINE_MIPS16;
    public static ushort IMAGE_FILE_MACHINE_MIPSFPU;
    public static ushort IMAGE_FILE_MACHINE_MIPSFPU16;
    public static ushort IMAGE_FILE_MACHINE_POWERPC;
    public static ushort IMAGE_FILE_MACHINE_POWERPCFP;
    public static ushort IMAGE_FILE_MACHINE_R4000;
    public static ushort IMAGE_FILE_MACHINE_RISCV32;
    public static ushort IMAGE_FILE_MACHINE_RISCV64;
    public static ushort IMAGE_FILE_MACHINE_RISCV128;
    public static ushort IMAGE_FILE_MACHINE_SH3;
    public static ushort IMAGE_FILE_MACHINE_SH3DSP;
    public static ushort IMAGE_FILE_MACHINE_SH4;
    public static ushort IMAGE_FILE_MACHINE_SH5;
    public static ushort IMAGE_FILE_MACHINE_THUMB;
    public static ushort IMAGE_FILE_MACHINE_WCEMIPSV2;
    protected static UInt32 BURN_SECTION_OFFSET_MAGIC;
    protected static UInt32 BURN_SECTION_OFFSET_VERSION;
    protected static UInt32 BURN_SECTION_OFFSET_BUNDLEGUID;
    protected static UInt32 BURN_SECTION_OFFSET_STUBSIZE;
    protected static UInt32 BURN_SECTION_OFFSET_ORIGINALCHECKSUM;
    protected static UInt32 BURN_SECTION_OFFSET_ORIGINALSIGNATUREOFFSET;
    protected static UInt32 BURN_SECTION_OFFSET_ORIGINALSIGNATURESIZE;
    protected static UInt32 BURN_SECTION_OFFSET_FORMAT;
    protected static UInt32 BURN_SECTION_OFFSET_COUNT;
    protected static UInt32 BURN_SECTION_OFFSET_UXSIZE;
    protected static UInt32 BURN_SECTION_OFFSET_ATTACHEDCONTAINERSIZE0;
    protected static UInt32 BURN_SECTION_MIN_SIZE;
    protected static UInt32 BURN_SECTION_MAGIC;
    protected static UInt32 BURN_SECTION_VERSION;
    public static UInt32 BURN_PROTOCOL_VERSION;
    protected string fileExe;
    protected UInt32 peOffset;
    protected ushort sections;
    protected UInt32 firstSectionOffset;
    protected UInt32 checksumOffset;
    protected UInt32 certificateTableSignatureOffset;
    protected UInt32 certificateTableSignatureSize;
    protected UInt32 wixburnDataOffset;
    protected UInt32 wixburnRawDataSize;
    protected UInt32 wixburnMaxContainers;
    [CompilerGeneratedAttribute]
private bool <Invalid>k__BackingField;
    [CompilerGeneratedAttribute]
private ushort <MachineType>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Checksum>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SignatureOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <SignatureSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Guid <BundleId>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <StubSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <OriginalChecksum>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <OriginalSignatureOffset>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <OriginalSignatureSize>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <EngineSize>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ContainerSlot> <AttachedContainers>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    public bool Invalid { get; protected set; }
    public ushort MachineType { get; private set; }
    public UInt32 Checksum { get; protected set; }
    public UInt32 SignatureOffset { get; protected set; }
    public UInt32 SignatureSize { get; protected set; }
    public UInt32 Version { get; protected set; }
    public Guid BundleId { get; protected set; }
    public UInt32 StubSize { get; protected set; }
    public UInt32 OriginalChecksum { get; protected set; }
    public UInt32 OriginalSignatureOffset { get; protected set; }
    public UInt32 OriginalSignatureSize { get; protected set; }
    public UInt32 EngineSize { get; protected set; }
    public UInt32 UXAddress { get; }
    public List`1<ContainerSlot> AttachedContainers { get; protected set; }
    protected IMessaging Messaging { get; }
    public BurnCommon(IMessaging messaging, string fileExe);
    [CompilerGeneratedAttribute]
public bool get_Invalid();
    [CompilerGeneratedAttribute]
protected void set_Invalid(bool value);
    [CompilerGeneratedAttribute]
public ushort get_MachineType();
    [CompilerGeneratedAttribute]
private void set_MachineType(ushort value);
    [CompilerGeneratedAttribute]
public UInt32 get_Checksum();
    [CompilerGeneratedAttribute]
protected void set_Checksum(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_SignatureOffset();
    [CompilerGeneratedAttribute]
protected void set_SignatureOffset(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_SignatureSize();
    [CompilerGeneratedAttribute]
protected void set_SignatureSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Version();
    [CompilerGeneratedAttribute]
protected void set_Version(UInt32 value);
    [CompilerGeneratedAttribute]
public Guid get_BundleId();
    [CompilerGeneratedAttribute]
protected void set_BundleId(Guid value);
    [CompilerGeneratedAttribute]
public UInt32 get_StubSize();
    [CompilerGeneratedAttribute]
protected void set_StubSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_OriginalChecksum();
    [CompilerGeneratedAttribute]
protected void set_OriginalChecksum(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_OriginalSignatureOffset();
    [CompilerGeneratedAttribute]
protected void set_OriginalSignatureOffset(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_OriginalSignatureSize();
    [CompilerGeneratedAttribute]
protected void set_OriginalSignatureSize(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_EngineSize();
    [CompilerGeneratedAttribute]
protected void set_EngineSize(UInt32 value);
    public UInt32 get_UXAddress();
    [CompilerGeneratedAttribute]
public List`1<ContainerSlot> get_AttachedContainers();
    [CompilerGeneratedAttribute]
protected void set_AttachedContainers(List`1<ContainerSlot> value);
    [CompilerGeneratedAttribute]
protected IMessaging get_Messaging();
    public sealed virtual void Dispose();
    protected static int CopyStream(Stream input, Stream output, int size);
    protected void Initialize(BinaryReader reader);
    private bool TryInitialize(BinaryReader reader);
    protected virtual void Dispose(bool disposing);
    private bool GetWixburnSectionInfo(BinaryReader reader);
    private bool EnsureNTHeader(BinaryReader reader);
    private bool EnsureDosHeader(BinaryReader reader);
    internal static Guid ReadGuid(Byte[] bytes, UInt32 offset);
    internal static ushort ReadUInt16(Byte[] bytes, UInt32 offset);
    internal static UInt32 ReadUInt32(Byte[] bytes, UInt32 offset);
    internal static ulong ReadUInt64(Byte[] bytes, UInt32 offset);
}
internal class WixToolset.Core.Burn.Bundles.BurnReader : BurnCommon {
    private bool disposed;
    private BinaryReader binaryReader;
    private List`1<DictionaryEntry> attachedContainerPayloadNames;
    private IFileSystem fileSystem;
    public Stream Stream { get; }
    private BurnReader(IMessaging messaging, IFileSystem fileSystem, string fileExe);
    public Stream get_Stream();
    public static BurnReader Open(IMessaging messaging, IFileSystem fileSystem, string fileExe);
    public bool ExtractUXContainer(string outputDirectory, string tempDirectory);
    public bool ExtractAttachedContainers(string outputDirectory, string tempDirectory);
    protected virtual void Dispose(bool disposing);
}
internal class WixToolset.Core.Burn.Bundles.BurnWriter : BurnCommon {
    private bool disposed;
    private BinaryWriter binaryWriter;
    private IFileSystem fileSystem;
    private BurnWriter(IMessaging messaging, IFileSystem fileSystem, string fileExe);
    public static BurnWriter Open(IMessaging messaging, IFileSystem fileSystem, string fileExe);
    public bool InitializeBundleSectionData(long stubSize, string bundleId);
    public bool AppendContainer(SourceLineNumber sourceLineNumbers, string fileContainer, Container container);
    public bool ReattachContainers(BurnReader reader);
    public bool AppendContainer(Stream containerStream, long containerSize, Container container);
    public void RememberThenResetSignature();
    protected virtual void Dispose(bool disposing);
    private bool AppendContainer(Stream containerStream, UInt32 containerSize, UInt32 burnSectionOffsetSize, UInt32 burnSectionCount);
    private void WriteToBurnSectionOffset(UInt32 offset, UInt32 value);
    private void WriteToOffset(UInt32 offset, UInt32 value);
}
internal static class WixToolset.Core.Burn.Bundles.CacheIdGenerator : object {
    private static int ReasonableCountOfCharsFromCertificateThumbprint;
    private static int ReasonableUpperLimitForCacheId;
    public static string GenerateLocalCacheId(IMessaging messaging, IntermediateSymbol harvestedPackageSymbol, WixBundlePayloadSymbol payloadSymbol, SourceLineNumber sourceLineNumbers, string elementName);
    public static string GenerateRemoteCacheId(IntermediateSymbol harvestedPackageSymbol, WixBundlePayloadSymbol payloadSymbol);
    public static string GenerateDefaultCacheId(IntermediateSymbol harvestedPackageSymbol, WixBundlePayloadSymbol payloadSymbol, Boolean& canTruncate);
    public static string GenerateCacheIdFromGuidAndVersion(string guid, string version);
    public static string GenerateCacheIdFromHash(string hash);
}
internal class WixToolset.Core.Burn.Bundles.ContainerSlot : ValueType {
    [CompilerGeneratedAttribute]
private UInt32 <Size>k__BackingField;
    public UInt32 Size { get; public set; }
    public ContainerSlot(UInt32 size);
    [CompilerGeneratedAttribute]
public UInt32 get_Size();
    [CompilerGeneratedAttribute]
public void set_Size(UInt32 value);
}
internal class WixToolset.Core.Burn.Bundles.CreateBootstrapperApplicationManifestCommand : object {
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleSymbol <BundleSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleRollbackBoundarySymbol> <RollbackBoundaries>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackagesFacades>k__BackingField;
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper <InternalBurnBackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LastUXPayloadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> <PackagesPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <BootstrapperApplicationManifestPayloadRow>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    private IntermediateSection Section { get; }
    private WixBundleSymbol BundleSymbol { get; }
    private IEnumerable`1<WixBundleRollbackBoundarySymbol> RollbackBoundaries { get; }
    private PackageFacades PackagesFacades { get; }
    private IInternalBurnBackendHelper InternalBurnBackendHelper { get; }
    private int LastUXPayloadIndex { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> Payloads { get; }
    private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> PackagesPayloads { get; }
    private string IntermediateFolder { get; }
    public WixBundlePayloadSymbol BootstrapperApplicationManifestPayloadRow { get; private set; }
    public string OutputPath { get; private set; }
    public CreateBootstrapperApplicationManifestCommand(IntermediateSection section, WixBundleSymbol bundleSymbol, IEnumerable`1<WixBundleRollbackBoundarySymbol> boundaries, PackageFacades packageFacades, int lastUXPayloadIndex, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols, Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> packagesPayloads, string intermediateFolder, IInternalBurnBackendHelper internalBurnBackendHelper);
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private WixBundleSymbol get_BundleSymbol();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleRollbackBoundarySymbol> get_RollbackBoundaries();
    [CompilerGeneratedAttribute]
private PackageFacades get_PackagesFacades();
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper get_InternalBurnBackendHelper();
    [CompilerGeneratedAttribute]
private int get_LastUXPayloadIndex();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_Payloads();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> get_PackagesPayloads();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
public WixBundlePayloadSymbol get_BootstrapperApplicationManifestPayloadRow();
    [CompilerGeneratedAttribute]
private void set_BootstrapperApplicationManifestPayloadRow(WixBundlePayloadSymbol value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
private void set_OutputPath(string value);
    public void Execute();
    private string CreateBootstrapperApplicationManifest();
    private void WriteBundleInfo(XmlTextWriter writer);
    private void WriteRollbackBoundaryInfo(XmlTextWriter writer);
    private void WritePackageInfo(XmlTextWriter writer);
    private void WriteFeatureInfo(XmlTextWriter writer);
    private void WritePayloadInfo(XmlTextWriter writer);
    private void WritePayloadInfo(XmlTextWriter writer, WixBundlePayloadSymbol payloadSymbol, string packageId);
    private WixBundlePayloadSymbol CreateBootstrapperApplicationManifestPayloadRow(string baManifestPath);
}
internal class WixToolset.Core.Burn.Bundles.CreateBootstrapperExtensionManifestCommand : object {
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleSymbol <BundleSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper <InternalBurnBackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private int <LastUXPayloadIndex>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <BootstrapperExtensionManifestPayloadRow>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    private IntermediateSection Section { get; }
    private WixBundleSymbol BundleSymbol { get; }
    private IInternalBurnBackendHelper InternalBurnBackendHelper { get; }
    private int LastUXPayloadIndex { get; }
    private string IntermediateFolder { get; }
    public WixBundlePayloadSymbol BootstrapperExtensionManifestPayloadRow { get; private set; }
    public string OutputPath { get; private set; }
    public CreateBootstrapperExtensionManifestCommand(IntermediateSection section, WixBundleSymbol bundleSymbol, int lastUXPayloadIndex, string intermediateFolder, IInternalBurnBackendHelper internalBurnBackendHelper);
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private WixBundleSymbol get_BundleSymbol();
    [CompilerGeneratedAttribute]
private IInternalBurnBackendHelper get_InternalBurnBackendHelper();
    [CompilerGeneratedAttribute]
private int get_LastUXPayloadIndex();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
public WixBundlePayloadSymbol get_BootstrapperExtensionManifestPayloadRow();
    [CompilerGeneratedAttribute]
private void set_BootstrapperExtensionManifestPayloadRow(WixBundlePayloadSymbol value);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
private void set_OutputPath(string value);
    public void Execute();
    private string CreateBootstrapperExtensionManifest();
    private WixBundlePayloadSymbol CreateBootstrapperExtensionManifestPayloadRow(string bextManifestPath);
}
internal class WixToolset.Core.Burn.Bundles.CreateBundleExeCommand : object {
    [CompilerGeneratedAttribute]
private IFileTransfer <Transfer>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleSymbol <BundleSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleContainerSymbol <UXContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> <Containers>k__BackingField;
    public IFileTransfer Transfer { get; private set; }
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private IBackendHelper BackendHelper { get; }
    private string IntermediateFolder { get; }
    private string OutputPath { get; }
    private WixBundleSymbol BundleSymbol { get; }
    private WixBundleContainerSymbol UXContainer { get; }
    private IEnumerable`1<WixBundleContainerSymbol> Containers { get; }
    public CreateBundleExeCommand(IMessaging messaging, IFileSystem fileSystem, IBackendHelper backendHelper, string intermediateFolder, string outputPath, WixBundleSymbol bundleSymbol, WixBundleContainerSymbol uxContainer, IEnumerable`1<WixBundleContainerSymbol> containers);
    [CompilerGeneratedAttribute]
public IFileTransfer get_Transfer();
    [CompilerGeneratedAttribute]
private void set_Transfer(IFileTransfer value);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private string get_OutputPath();
    [CompilerGeneratedAttribute]
private WixBundleSymbol get_BundleSymbol();
    [CompilerGeneratedAttribute]
private WixBundleContainerSymbol get_UXContainer();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> get_Containers();
    public void Execute();
    private Version GetFourPartVersion(WixBundleSymbol bundleSymbol);
    private void UpdateBurnResources(string bundleTempPath, string outputPath, WixBundleSymbol bundleInfo, Version fourPartVersion);
}
internal class WixToolset.Core.Burn.Bundles.CreateBurnManifestCommand : object {
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExecutableName>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleSymbol <BundleSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol <PrimaryBundleApplicationSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol <SecondaryBundleApplicationSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private WixChainSymbol <Chain>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleRollbackBoundarySymbol> <RollbackBoundaries>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackageFacades>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISearchFacade> <OrderedSearches>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> <PackagesPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> <UXContainerPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    public string OutputPath { get; private set; }
    private string ExecutableName { get; }
    private IntermediateSection Section { get; }
    private WixBundleSymbol BundleSymbol { get; }
    private WixBootstrapperApplicationSymbol PrimaryBundleApplicationSymbol { get; }
    private WixBootstrapperApplicationSymbol SecondaryBundleApplicationSymbol { get; }
    private WixChainSymbol Chain { get; }
    private IEnumerable`1<WixBundleRollbackBoundarySymbol> RollbackBoundaries { get; }
    private PackageFacades PackageFacades { get; }
    private IEnumerable`1<ISearchFacade> OrderedSearches { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> Payloads { get; }
    private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> PackagesPayloads { get; }
    private IEnumerable`1<WixBundleContainerSymbol> Containers { get; }
    private IEnumerable`1<WixBundlePayloadSymbol> UXContainerPayloads { get; }
    private string IntermediateFolder { get; }
    public CreateBurnManifestCommand(string executableName, IntermediateSection section, WixBundleSymbol bundleSymbol, WixBootstrapperApplicationSymbol primaryBundleApplicationSymbol, WixBootstrapperApplicationSymbol secondaryBundleApplicationSymbol, IEnumerable`1<WixBundleContainerSymbol> containers, WixChainSymbol chainSymbol, PackageFacades packageFacades, IEnumerable`1<WixBundleRollbackBoundarySymbol> boundaries, IEnumerable`1<WixBundlePayloadSymbol> uxPayloads, Dictionary`2<string, WixBundlePayloadSymbol> allPayloadsById, Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> packagesPayloads, IEnumerable`1<ISearchFacade> orderedSearches, string intermediateFolder);
    [CompilerGeneratedAttribute]
public string get_OutputPath();
    [CompilerGeneratedAttribute]
private void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
private string get_ExecutableName();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private WixBundleSymbol get_BundleSymbol();
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol get_PrimaryBundleApplicationSymbol();
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol get_SecondaryBundleApplicationSymbol();
    [CompilerGeneratedAttribute]
private WixChainSymbol get_Chain();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleRollbackBoundarySymbol> get_RollbackBoundaries();
    [CompilerGeneratedAttribute]
private PackageFacades get_PackageFacades();
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISearchFacade> get_OrderedSearches();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_Payloads();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> get_PackagesPayloads();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> get_Containers();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> get_UXContainerPayloads();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    public void Execute();
    private void WriteBurnManifestContainerAttributes(XmlTextWriter writer, string executableName, WixBundleContainerSymbol container);
    private void WriteBurnManifestPayload(XmlTextWriter writer, WixBundlePayloadSymbol payload);
    private void WriteBurnManifestUXPayload(XmlTextWriter writer, WixBundlePayloadSymbol payload);
}
internal class WixToolset.Core.Burn.Bundles.CreateContainerCommand : object {
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> <CompressionLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ManifestFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Hash>k__BackingField;
    [CompilerGeneratedAttribute]
private long <Size>k__BackingField;
    private Nullable`1<CompressionLevel> CompressionLevel { get; }
    private string ManifestFile { get; }
    private string OutputPath { get; }
    private IEnumerable`1<WixBundlePayloadSymbol> Payloads { get; }
    public string Hash { get; private set; }
    public long Size { get; private set; }
    public CreateContainerCommand(IEnumerable`1<WixBundlePayloadSymbol> payloads, string outputPath, Nullable`1<CompressionLevel> compressionLevel);
    public CreateContainerCommand(string manifestPath, IEnumerable`1<WixBundlePayloadSymbol> payloads, string outputPath, Nullable`1<CompressionLevel> compressionLevel);
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> get_CompressionLevel();
    [CompilerGeneratedAttribute]
private string get_ManifestFile();
    [CompilerGeneratedAttribute]
private string get_OutputPath();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> get_Payloads();
    [CompilerGeneratedAttribute]
public string get_Hash();
    [CompilerGeneratedAttribute]
private void set_Hash(string value);
    [CompilerGeneratedAttribute]
public long get_Size();
    [CompilerGeneratedAttribute]
private void set_Size(long value);
    public void Execute();
}
internal class WixToolset.Core.Burn.Bundles.CreateNonUXContainers : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IFileTransfer> <FileTransfers>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ITrackedFile> <TrackedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleContainerSymbol <UXContainer>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> <UXContainerPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PayloadSymbols>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LayoutFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> <DefaultCompressionLevel>k__BackingField;
    public IEnumerable`1<IFileTransfer> FileTransfers { get; private set; }
    public IEnumerable`1<ITrackedFile> TrackedFiles { get; private set; }
    public WixBundleContainerSymbol UXContainer { get; public set; }
    public IEnumerable`1<WixBundlePayloadSymbol> UXContainerPayloads { get; private set; }
    private IEnumerable`1<WixBundleContainerSymbol> Containers { get; }
    private IBackendHelper BackendHelper { get; }
    private IMessaging Messaging { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PayloadSymbols { get; }
    private string IntermediateFolder { get; }
    private string LayoutFolder { get; }
    private Nullable`1<CompressionLevel> DefaultCompressionLevel { get; }
    public CreateNonUXContainers(IBackendHelper backendHelper, IMessaging messaging, IEnumerable`1<WixBundleContainerSymbol> containerSymbols, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols, string intermediateFolder, string layoutFolder, Nullable`1<CompressionLevel> defaultCompressionLevel);
    [CompilerGeneratedAttribute]
public IEnumerable`1<IFileTransfer> get_FileTransfers();
    [CompilerGeneratedAttribute]
private void set_FileTransfers(IEnumerable`1<IFileTransfer> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ITrackedFile> get_TrackedFiles();
    [CompilerGeneratedAttribute]
private void set_TrackedFiles(IEnumerable`1<ITrackedFile> value);
    [CompilerGeneratedAttribute]
public WixBundleContainerSymbol get_UXContainer();
    [CompilerGeneratedAttribute]
public void set_UXContainer(WixBundleContainerSymbol value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<WixBundlePayloadSymbol> get_UXContainerPayloads();
    [CompilerGeneratedAttribute]
private void set_UXContainerPayloads(IEnumerable`1<WixBundlePayloadSymbol> value);
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleContainerSymbol> get_Containers();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PayloadSymbols();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private string get_LayoutFolder();
    [CompilerGeneratedAttribute]
private Nullable`1<CompressionLevel> get_DefaultCompressionLevel();
    public void Execute();
    private void CreateContainer(WixBundleContainerSymbol container, IEnumerable`1<WixBundlePayloadSymbol> containerPayloads);
}
internal class WixToolset.Core.Burn.Bundles.DetectPayloadCollisionsCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundleContainerSymbol> <Containers>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<PackageFacade> <Packages>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PayloadSymbols>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> <PackagePayloads>k__BackingField;
    private IMessaging Messaging { get; }
    private Dictionary`2<string, WixBundleContainerSymbol> Containers { get; }
    private IEnumerable`1<PackageFacade> Packages { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PayloadSymbols { get; }
    private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> PackagePayloads { get; }
    public DetectPayloadCollisionsCommand(IMessaging messaging, Dictionary`2<string, WixBundleContainerSymbol> containerSymbols, IEnumerable`1<PackageFacade> packages, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols, Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> packagePayloads);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundleContainerSymbol> get_Containers();
    [CompilerGeneratedAttribute]
private IEnumerable`1<PackageFacade> get_Packages();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PayloadSymbols();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, WixBundlePayloadSymbol>> get_PackagePayloads();
    public void Execute();
    public void DetectAttachedContainerCollisions();
    public void DetectExternalCollisions();
    public void DetectPackageCacheCollisions();
}
internal class WixToolset.Core.Burn.Bundles.GetPackageFacadesCommand : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePackageSymbol> <ChainPackageSymbols>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackageFacades>k__BackingField;
    private IEnumerable`1<WixBundlePackageSymbol> ChainPackageSymbols { get; }
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    public PackageFacades PackageFacades { get; private set; }
    public GetPackageFacadesCommand(IMessaging messaging, IEnumerable`1<WixBundlePackageSymbol> chainPackageSymbols, IntermediateSection section);
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePackageSymbol> get_ChainPackageSymbols();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
public PackageFacades get_PackageFacades();
    [CompilerGeneratedAttribute]
private void set_PackageFacades(PackageFacades value);
    public void Execute();
}
internal class WixToolset.Core.Burn.Bundles.HarvestBundlePackageCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <PackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleBundlePackagePayloadSymbol <BundlePackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PackagePayloadsById>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleHarvestedBundlePackageSymbol <HarvestedBundlePackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleHarvestedDependencyProviderSymbol <HarvestedDependencyProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<WixBundlePayloadSymbol> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<WixBundlePackageRelatedBundleSymbol> <RelatedBundles>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ITrackedFile> <TrackedFiles>k__BackingField;
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private IBackendHelper BackendHelper { get; }
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private string IntermediateFolder { get; }
    private WixBundlePayloadSymbol PackagePayload { get; }
    private WixBundleBundlePackagePayloadSymbol BundlePackagePayload { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PackagePayloadsById { get; }
    public WixBundleHarvestedBundlePackageSymbol HarvestedBundlePackage { get; private set; }
    public WixBundleHarvestedDependencyProviderSymbol HarvestedDependencyProvider { get; private set; }
    public List`1<WixBundlePayloadSymbol> Payloads { get; }
    public List`1<WixBundlePackageRelatedBundleSymbol> RelatedBundles { get; }
    public List`1<ITrackedFile> TrackedFiles { get; }
    public HarvestBundlePackageCommand(IServiceProvider serviceProvider, IEnumerable`1<IBurnBackendBinderExtension> backendExtensions, string intermediateFolder, WixBundlePayloadSymbol payloadSymbol, WixBundleBundlePackagePayloadSymbol packagePayloadSymbol, Dictionary`2<string, WixBundlePayloadSymbol> packagePayloadsById);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol get_PackagePayload();
    [CompilerGeneratedAttribute]
private WixBundleBundlePackagePayloadSymbol get_BundlePackagePayload();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PackagePayloadsById();
    [CompilerGeneratedAttribute]
public WixBundleHarvestedBundlePackageSymbol get_HarvestedBundlePackage();
    [CompilerGeneratedAttribute]
private void set_HarvestedBundlePackage(WixBundleHarvestedBundlePackageSymbol value);
    [CompilerGeneratedAttribute]
public WixBundleHarvestedDependencyProviderSymbol get_HarvestedDependencyProvider();
    [CompilerGeneratedAttribute]
private void set_HarvestedDependencyProvider(WixBundleHarvestedDependencyProviderSymbol value);
    [CompilerGeneratedAttribute]
public List`1<WixBundlePayloadSymbol> get_Payloads();
    [CompilerGeneratedAttribute]
public List`1<WixBundlePackageRelatedBundleSymbol> get_RelatedBundles();
    [CompilerGeneratedAttribute]
public List`1<ITrackedFile> get_TrackedFiles();
    public void Execute();
    private int ProcessProtocolVersion(BurnReader burnReader, XmlDocument document);
    private bool ProcessWin64(BurnReader burnReader, XmlDocument document, SourceLineNumber sourceLineNumbers, string sourcePath);
    private long ProcessPackages(XmlDocument document, XmlNamespaceManager namespaceManager);
    private void ProcessPayloads(XmlDocument document, XmlNamespaceManager namespaceManager, BundlePackagePayloadGenerationType payloadGenerationType);
    private string ResolveRelatedFile(string resolvedSource, string unresolvedSource, string relatedSource, string type, SourceLineNumber sourceLineNumbers);
    private void ProcessRelatedBundles(XmlDocument document, XmlNamespaceManager namespaceManager, string sourcePath);
}
internal class WixToolset.Core.Burn.Bundles.OrderPackagesAndRollbackBoundariesCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackageFacades>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundleRollbackBoundarySymbol> <UsedRollbackBoundaries>k__BackingField;
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    private PackageFacades PackageFacades { get; }
    public IEnumerable`1<WixBundleRollbackBoundarySymbol> UsedRollbackBoundaries { get; private set; }
    public OrderPackagesAndRollbackBoundariesCommand(IMessaging messaging, IntermediateSection section, PackageFacades packageFacades);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private PackageFacades get_PackageFacades();
    [CompilerGeneratedAttribute]
public IEnumerable`1<WixBundleRollbackBoundarySymbol> get_UsedRollbackBoundaries();
    [CompilerGeneratedAttribute]
private void set_UsedRollbackBoundaries(IEnumerable`1<WixBundleRollbackBoundarySymbol> value);
    public void Execute();
}
internal class WixToolset.Core.Burn.Bundles.OrderSearchesCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> <ExtensionSearchSymbolsByExtensionId>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ISearchFacade> <OrderedSearchFacades>k__BackingField;
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    public IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> ExtensionSearchSymbolsByExtensionId { get; private set; }
    public IEnumerable`1<ISearchFacade> OrderedSearchFacades { get; private set; }
    public OrderSearchesCommand(IMessaging messaging, IntermediateSection section);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
public IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> get_ExtensionSearchSymbolsByExtensionId();
    [CompilerGeneratedAttribute]
private void set_ExtensionSearchSymbolsByExtensionId(IDictionary`2<string, IEnumerable`1<IntermediateSymbol>> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ISearchFacade> get_OrderedSearchFacades();
    [CompilerGeneratedAttribute]
private void set_OrderedSearchFacades(IEnumerable`1<ISearchFacade> value);
    public void Execute();
    private void FindCircularReference(Constraints constraints);
    private bool FindCircularReference(Constraints constraints, string checkId, string currentId, List`1<string> seenIds, String& chain);
    private void FlattenDependentReferences(Constraints constraints);
    private void AddDependentReferences(Constraints constraints, string currentId, List`1<string> seenIds);
    private ValueTuple`2<IEnumerable`1<ISearchFacade>, Dictionary`2<string, IEnumerable`1<IntermediateSymbol>>> OrderSearches(IEnumerable`1<string> sortedIds, Dictionary`2<string, WixSearchSymbol> searchSymbolDictionary);
}
internal class WixToolset.Core.Burn.Bundles.PackageFacade : object {
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol <PackageSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSymbol <SpecificPackageSymbol>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSymbol <SpecificPackagePayloadSymbol>k__BackingField;
    public string PackageId { get; }
    public WixBundlePackageSymbol PackageSymbol { get; }
    public IntermediateSymbol SpecificPackageSymbol { get; }
    public IntermediateSymbol SpecificPackagePayloadSymbol { get; }
    public PackageFacade(WixBundlePackageSymbol packageSymbol, IntermediateSymbol specificPackageSymbol, IntermediateSymbol specificPackagePayloadSymbol);
    public string get_PackageId();
    [CompilerGeneratedAttribute]
public WixBundlePackageSymbol get_PackageSymbol();
    [CompilerGeneratedAttribute]
public IntermediateSymbol get_SpecificPackageSymbol();
    [CompilerGeneratedAttribute]
public IntermediateSymbol get_SpecificPackagePayloadSymbol();
}
internal class WixToolset.Core.Burn.Bundles.PackageFacades : object {
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PackageFacade> <FacadesByPackageId>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<PackageFacade>> <FacadesByPackagePayloadId>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<PackageFacade> <OrderedFacades>k__BackingField;
    private Dictionary`2<string, PackageFacade> FacadesByPackageId { get; }
    private Dictionary`2<string, List`1<PackageFacade>> FacadesByPackagePayloadId { get; }
    private List`1<PackageFacade> OrderedFacades { get; }
    public IReadOnlyCollection`1<PackageFacade> OrderedValues { get; }
    public IEnumerable`1<PackageFacade> Values { get; }
    [CompilerGeneratedAttribute]
private Dictionary`2<string, PackageFacade> get_FacadesByPackageId();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, List`1<PackageFacade>> get_FacadesByPackagePayloadId();
    [CompilerGeneratedAttribute]
private List`1<PackageFacade> get_OrderedFacades();
    public void Add(PackageFacade item);
    public void AddOrdered(PackageFacade item);
    public IReadOnlyCollection`1<PackageFacade> get_OrderedValues();
    public IEnumerable`1<PackageFacade> get_Values();
    public bool TryGetFacadeByPackageId(string packageId, PackageFacade& facade);
    public bool TryGetFacadesByPackagePayloadId(string packagePayloadId, List`1& facades);
}
internal class WixToolset.Core.Burn.Bundles.PerformBundleBackendValidationCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IBurnBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacades <PackageFacades>k__BackingField;
    private IMessaging Messaging { get; }
    private IBurnBackendHelper BackendHelper { get; }
    private IntermediateSection Section { get; }
    private PackageFacades PackageFacades { get; }
    public PerformBundleBackendValidationCommand(IMessaging messaging, IBurnBackendHelper burnBackendHelper, IntermediateSection section, PackageFacades packageFacades);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IBurnBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private PackageFacades get_PackageFacades();
    public void Execute();
    private void ValidateBundle(WixBundleSymbol symbol);
    private void ValidateChainPackage(WixBundlePackageSymbol symbol, string elementName);
    private void ValidateBundlePackage(WixBundleBundlePackageSymbol symbol, WixBundlePackageSymbol packageSymbol);
    private void ValidateExePackage(WixBundleExePackageSymbol symbol, WixBundlePackageSymbol packageSymbol);
    private void ValidateMsiPackage(WixBundleMsiPackageSymbol symbol, WixBundlePackageSymbol packageSymbol);
    private void ValidateMsiProperty(WixBundleMsiPropertySymbol symbol);
    private void ValidateMspPackage(WixBundleMspPackageSymbol symbol, WixBundlePackageSymbol packageSymbol);
    private void ValidateMsuPackage(WixBundleMsuPackageSymbol symbol, WixBundlePackageSymbol packageSymbol);
    private void ValidatePackageCommandLine(WixBundlePackageCommandLineSymbol symbol);
    private void ValidateSearch(WixSearchSymbol symbol);
    private void ValidateVariable(WixBundleVariableSymbol symbol);
}
internal class WixToolset.Core.Burn.Bundles.ProcessBundlePackageCommand : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PackagePayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol <ChainPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleBundlePackageSymbol <BundlePackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleBundlePackagePayloadSymbol <BundlePackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <PackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<ITrackedFile> <TrackedFiles>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PackagePayloads { get; }
    private WixBundlePackageSymbol ChainPackage { get; }
    private WixBundleBundlePackageSymbol BundlePackage { get; }
    private WixBundleBundlePackagePayloadSymbol BundlePackagePayload { get; }
    private string PackageId { get; }
    private WixBundlePayloadSymbol PackagePayload { get; }
    private IntermediateSection Section { get; }
    private string IntermediateFolder { get; }
    public List`1<ITrackedFile> TrackedFiles { get; }
    public ProcessBundlePackageCommand(IServiceProvider serviceProvider, IEnumerable`1<IBurnBackendBinderExtension> backendExtensions, IntermediateSection section, PackageFacade facade, Dictionary`2<string, WixBundlePayloadSymbol> packagePayloads, string intermediateFolder);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PackagePayloads();
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol get_ChainPackage();
    [CompilerGeneratedAttribute]
private WixBundleBundlePackageSymbol get_BundlePackage();
    [CompilerGeneratedAttribute]
private WixBundleBundlePackagePayloadSymbol get_BundlePackagePayload();
    private string get_PackageId();
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol get_PackagePayload();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
public List`1<ITrackedFile> get_TrackedFiles();
    public void Execute();
    private WixBundleHarvestedBundlePackageSymbol HarvestPackage();
    [CompilerGeneratedAttribute]
private bool <Execute>b__36_0(WixBundleHarvestedBundlePackageSymbol h);
}
internal class WixToolset.Core.Burn.Bundles.ProcessExePackageCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <AuthoredPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacade <Facade>k__BackingField;
    public IMessaging Messaging { get; }
    public Dictionary`2<string, WixBundlePayloadSymbol> AuthoredPayloads { get; }
    public PackageFacade Facade { get; }
    public ProcessExePackageCommand(IMessaging messaging, PackageFacade facade, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols);
    [CompilerGeneratedAttribute]
public IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
public Dictionary`2<string, WixBundlePayloadSymbol> get_AuthoredPayloads();
    [CompilerGeneratedAttribute]
public PackageFacade get_Facade();
    public void Execute();
}
internal class WixToolset.Core.Burn.Bundles.ProcessMsiPackageCommand : object {
    private static string PropertySqlQuery;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IPathResolver <PathResolver>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <PackagePayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol <ChainPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleMsiPackageSymbol <MsiPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <PackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    private IMessaging Messaging { get; }
    private IBackendHelper BackendHelper { get; }
    private IPathResolver PathResolver { get; }
    private IEnumerable`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> PackagePayloads { get; }
    private WixBundlePackageSymbol ChainPackage { get; }
    private WixBundleMsiPackageSymbol MsiPackage { get; }
    private string PackageId { get; }
    private WixBundlePayloadSymbol PackagePayload { get; }
    private IntermediateSection Section { get; }
    public ProcessMsiPackageCommand(IServiceProvider serviceProvider, IEnumerable`1<IBurnBackendBinderExtension> backendExtensions, IntermediateSection section, PackageFacade facade, Dictionary`2<string, WixBundlePayloadSymbol> packagePayloads);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IPathResolver get_PathResolver();
    [CompilerGeneratedAttribute]
private IEnumerable`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_PackagePayloads();
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol get_ChainPackage();
    [CompilerGeneratedAttribute]
private WixBundleMsiPackageSymbol get_MsiPackage();
    private string get_PackageId();
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol get_PackagePayload();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    public void Execute();
    public WixBundleHarvestedMsiPackageSymbol HarvestPackage();
    private ISet`1<string> GetPayloadTargetNames();
    private ISet`1<string> GetMsiPropertyNames();
    private bool IsWin64(string sourcePath, string platformsAndLanguages);
    private void SetPerMachineAppropriately(string allusers);
    private void SetPackageVisibility(string systemComponent, ISet`1<string> msiPropertyNames);
    private void CreateRelatedPackages(Database db);
    private void CreateMsiFeatures(Database db);
    private void ImportExternalCabinetAsPayloads(Database db, ISet`1<string> payloadNames);
    private long ImportExternalFileAsPayloadsAndReturnInstallSize(Database db, bool longNamesInImage, bool compressed, ISet`1<string> payloadNames);
    private void AddMsiProperty(string name, string value);
    private void ImportDependencyProviders(Database db);
    private void ImportDependencyProvidersFromTable(Database db, string tableName);
    private string ResolveRelatedFile(string resolvedSource, string unresolvedSource, string relatedSource, string type, SourceLineNumber sourceLineNumbers);
    private void CheckIfWindowsInstallerFileTooLarge(SourceLineNumber sourceLineNumber, string path, string description);
    private static string GetProperty(View view, string property);
    [CompilerGeneratedAttribute]
private bool <Execute>b__31_0(WixBundleHarvestedMsiPackageSymbol h);
    [CompilerGeneratedAttribute]
private bool <Execute>b__31_1(WixBundlePayloadSymbol p);
    [CompilerGeneratedAttribute]
private bool <GetMsiPropertyNames>b__34_0(WixBundleMsiPropertySymbol p);
}
internal class WixToolset.Core.Burn.Bundles.ProcessMspPackageCommand : object {
    private static string PatchMetadataQuery;
    private static XmlWriterSettings XmlSettings;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol <ChainPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundleMspPackageSymbol <MspPackage>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol <PackagePayload>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    private IMessaging Messaging { get; }
    private WixBundlePackageSymbol ChainPackage { get; }
    private WixBundleMspPackageSymbol MspPackage { get; }
    private WixBundlePayloadSymbol PackagePayload { get; }
    private IntermediateSection Section { get; }
    public ProcessMspPackageCommand(IMessaging messaging, IntermediateSection section, PackageFacade facade, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols);
    private static ProcessMspPackageCommand();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private WixBundlePackageSymbol get_ChainPackage();
    [CompilerGeneratedAttribute]
private WixBundleMspPackageSymbol get_MspPackage();
    [CompilerGeneratedAttribute]
private WixBundlePayloadSymbol get_PackagePayload();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    public void Execute();
    private WixBundleHarvestedMspPackageSymbol HarvestPackage();
    private static string ProcessPatchXml(string sourcePath, IntermediateSection section, SourceLineNumber sourceLineNumbers, Identifier id);
    private static string GetPatchMetadataProperty(View view, string property);
    private static bool TargetsCode(XmlNode node);
    [CompilerGeneratedAttribute]
private bool <Execute>b__18_0(WixBundleHarvestedMspPackageSymbol h);
}
internal class WixToolset.Core.Burn.Bundles.ProcessMsuPackageCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> <AuthoredPayloads>k__BackingField;
    [CompilerGeneratedAttribute]
private PackageFacade <Facade>k__BackingField;
    public IMessaging Messaging { get; }
    private Dictionary`2<string, WixBundlePayloadSymbol> AuthoredPayloads { get; public set; }
    private PackageFacade Facade { get; public set; }
    public ProcessMsuPackageCommand(IMessaging messaging, PackageFacade facade, Dictionary`2<string, WixBundlePayloadSymbol> payloadSymbols);
    [CompilerGeneratedAttribute]
public IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, WixBundlePayloadSymbol> get_AuthoredPayloads();
    [CompilerGeneratedAttribute]
public void set_AuthoredPayloads(Dictionary`2<string, WixBundlePayloadSymbol> value);
    [CompilerGeneratedAttribute]
private PackageFacade get_Facade();
    [CompilerGeneratedAttribute]
public void set_Facade(PackageFacade value);
    public void Execute();
}
internal class WixToolset.Core.Burn.Bundles.ProcessPayloadsCommand : object {
    [CompilerGeneratedAttribute]
private IEnumerable`1<IFileTransfer> <FileTransfers>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<ITrackedFile> <TrackedFiles>k__BackingField;
    [CompilerGeneratedAttribute]
private IBurnBackendHelper <BackendHelper>k__BackingField;
    [CompilerGeneratedAttribute]
private IPayloadHarvester <PayloadHarvester>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> <Payloads>k__BackingField;
    [CompilerGeneratedAttribute]
private PackagingType <DefaultPackaging>k__BackingField;
    [CompilerGeneratedAttribute]
private string <LayoutDirectory>k__BackingField;
    public IEnumerable`1<IFileTransfer> FileTransfers { get; private set; }
    public IEnumerable`1<ITrackedFile> TrackedFiles { get; private set; }
    private IBurnBackendHelper BackendHelper { get; }
    private IPayloadHarvester PayloadHarvester { get; }
    private IEnumerable`1<WixBundlePayloadSymbol> Payloads { get; }
    private PackagingType DefaultPackaging { get; }
    private string LayoutDirectory { get; }
    public ProcessPayloadsCommand(IBurnBackendHelper backendHelper, IPayloadHarvester payloadHarvester, IEnumerable`1<WixBundlePayloadSymbol> payloads, PackagingType defaultPackaging, string layoutDirectory);
    [CompilerGeneratedAttribute]
public IEnumerable`1<IFileTransfer> get_FileTransfers();
    [CompilerGeneratedAttribute]
private void set_FileTransfers(IEnumerable`1<IFileTransfer> value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<ITrackedFile> get_TrackedFiles();
    [CompilerGeneratedAttribute]
private void set_TrackedFiles(IEnumerable`1<ITrackedFile> value);
    [CompilerGeneratedAttribute]
private IBurnBackendHelper get_BackendHelper();
    [CompilerGeneratedAttribute]
private IPayloadHarvester get_PayloadHarvester();
    [CompilerGeneratedAttribute]
private IEnumerable`1<WixBundlePayloadSymbol> get_Payloads();
    [CompilerGeneratedAttribute]
private PackagingType get_DefaultPackaging();
    [CompilerGeneratedAttribute]
private string get_LayoutDirectory();
    public void Execute();
    private void UpdatePayloadPackagingType(WixBundlePayloadSymbol payload);
}
internal static class WixToolset.Core.Burn.BurnBackendErrors : object {
    public static Message BAContainerPayloadCollision(SourceLineNumber sourceLineNumbers, string payloadId, string payloadName);
    public static Message BAContainerPayloadCollision2(SourceLineNumber sourceLineNumbers);
    public static Message BundleMultipleProviders(SourceLineNumber sourceLineNumbers, string extraProviderKey, string originalProviderKey);
    public static Message DuplicateCacheIds(SourceLineNumber originalLineNumber, string cacheId, string packageId);
    public static Message DuplicateCacheIds2(SourceLineNumber duplicateLineNumber);
    public static Message ExternalPayloadCollision(SourceLineNumber sourceLineNumbers, string symbolName, string payloadId, string payloadName);
    public static Message ExternalPayloadCollision2(SourceLineNumber sourceLineNumbers);
    public static Message FailedToUpdateBundleResources(SourceLineNumber sourceLineNumbers, string iconPath, string splashScreenPath, string detail);
    public static Message PackageCachePayloadCollision(SourceLineNumber sourceLineNumbers, string payloadId, string payloadName, string packageId);
    public static Message PackageCachePayloadCollision2(SourceLineNumber sourceLineNumbers);
    public static Message TooManyAttachedContainers(UInt32 maxAllowed);
    public static Message IncompatibleWixBurnSection(string bundleExecutable, long bundleVersion);
    public static Message UnsupportedRemotePackagePayload(string extension, string path);
    public static Message InvalidBundleManifest(SourceLineNumber sourceLineNumbers, string bundleExecutable, string reason);
    public static Message MultipleSingletonSymbolsFound(SourceLineNumber sourceLineNumbers, string friendlyName, SourceLineNumber collisionSourceLineNumbers);
    public static Message MissingPrimaryBootstrapperApplication();
    public static Message TooManyBootstrapperApplications(SourceLineNumber sourceLineNumbers, WixBootstrapperApplicationSymbol symbol);
    public static Message BundleMissingBootstrapperApplicationContainer(SourceLineNumber sourceLineNumbers, string path);
    private static Message Message(SourceLineNumber sourceLineNumber, Ids id, string format, Object[] args);
}
internal class WixToolset.Core.Burn.BurnBackendFactory : object {
    public sealed virtual bool TryCreateBackend(string outputType, string outputFile, IBackend& backend);
}
internal static class WixToolset.Core.Burn.BurnBackendWarnings : object {
    public static Message AttachedContainerPayloadCollision(SourceLineNumber sourceLineNumbers, string payloadId, string payloadName);
    public static Message AttachedContainerPayloadCollision2(SourceLineNumber sourceLineNumbers);
    public static Message CannotParseBundleVersionAsFourPartVersion(SourceLineNumber originalLineNumber, string version);
    public static Message EmptyContainer(SourceLineNumber sourceLineNumbers, string containerId);
    public static Message FailedToExtractAttachedContainers(SourceLineNumber sourceLineNumbers, string message);
    public static Message HiddenBundleNotSupported(SourceLineNumber sourceLineNumbers, string packageId);
    public static Message UnknownBundleRelationAction(SourceLineNumber sourceLineNumbers, string bundleExecutable, string action);
    public static Message UnknownCoffMachineType(SourceLineNumber sourceLineNumbers, string bundleExecutable, ushort machineType);
    public static Message UnknownMsiPackagePlatform(SourceLineNumber sourceLineNumbers, string msiPath, string platform);
    private static Message Message(SourceLineNumber sourceLineNumber, Ids id, string format, Object[] args);
}
internal class WixToolset.Core.Burn.BurnExtensionCommandLine : BaseExtensionCommandLine {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    public BurnExtensionCommandLine(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual bool TryParseCommand(ICommandLineParser parser, string argument, ICommandLineCommand& command);
}
internal class WixToolset.Core.Burn.BurnExtensionFactory : object {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    public BurnExtensionFactory(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    public sealed virtual bool TryCreateExtension(Type extensionType, Object& extension);
}
internal class WixToolset.Core.Burn.CommandLine.BurnCommand : BaseCommandLineCommand {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private BurnSubcommandBase <Subcommand>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private BurnSubcommandBase Subcommand { get; private set; }
    public BurnCommand(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private BurnSubcommandBase get_Subcommand();
    [CompilerGeneratedAttribute]
private void set_Subcommand(BurnSubcommandBase value);
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
    public virtual bool TryParseArgument(ICommandLineParser parser, string argument);
}
internal abstract class WixToolset.Core.Burn.CommandLine.BurnSubcommandBase : object {
    public abstract virtual CommandLineHelp GetCommandLineHelp();
    public abstract virtual bool TryParseArgument(ICommandLineParser parser, string argument);
    public abstract virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
}
internal class WixToolset.Core.Burn.CommandLine.DetachSubcommand : BurnSubcommandBase {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <EngineOutputPath>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private string InputPath { get; private set; }
    private string IntermediateFolder { get; private set; }
    private string EngineOutputPath { get; private set; }
    public DetachSubcommand(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private string get_InputPath();
    [CompilerGeneratedAttribute]
private void set_InputPath(string value);
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private void set_IntermediateFolder(string value);
    [CompilerGeneratedAttribute]
private string get_EngineOutputPath();
    [CompilerGeneratedAttribute]
private void set_EngineOutputPath(string value);
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
    public virtual bool TryParseArgument(ICommandLineParser parser, string argument);
}
internal class WixToolset.Core.Burn.CommandLine.ExtractSubcommand : BurnSubcommandBase {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtractBootstrapperApplicationPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <ExtractContainersPath>k__BackingField;
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private string InputPath { get; private set; }
    private string IntermediateFolder { get; private set; }
    private string ExtractBootstrapperApplicationPath { get; private set; }
    private string ExtractContainersPath { get; private set; }
    public ExtractSubcommand(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private string get_InputPath();
    [CompilerGeneratedAttribute]
private void set_InputPath(string value);
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private void set_IntermediateFolder(string value);
    [CompilerGeneratedAttribute]
private string get_ExtractBootstrapperApplicationPath();
    [CompilerGeneratedAttribute]
private void set_ExtractBootstrapperApplicationPath(string value);
    [CompilerGeneratedAttribute]
private string get_ExtractContainersPath();
    [CompilerGeneratedAttribute]
private void set_ExtractContainersPath(string value);
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
    public virtual bool TryParseArgument(ICommandLineParser parser, string argument);
}
internal class WixToolset.Core.Burn.CommandLine.ReattachSubcommand : BurnSubcommandBase {
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignedEnginePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private string InputPath { get; private set; }
    private string SignedEnginePath { get; private set; }
    private string IntermediateFolder { get; private set; }
    private string OutputPath { get; private set; }
    public ReattachSubcommand(IServiceProvider serviceProvider);
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private string get_InputPath();
    [CompilerGeneratedAttribute]
private void set_InputPath(string value);
    [CompilerGeneratedAttribute]
private string get_SignedEnginePath();
    [CompilerGeneratedAttribute]
private void set_SignedEnginePath(string value);
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private void set_IntermediateFolder(string value);
    [CompilerGeneratedAttribute]
private string get_OutputPath();
    [CompilerGeneratedAttribute]
private void set_OutputPath(string value);
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
    public virtual bool TryParseArgument(ICommandLineParser parser, string argument);
}
internal class WixToolset.Core.Burn.CommandLine.RemotePayloadSubcommand : BurnSubcommandBase {
    private static XName BundlePackageName;
    private static XName ExePackageName;
    private static XName MsuPackageName;
    private static XName BundlePackagePayloadName;
    private static XName ExePackagePayloadName;
    private static XName MsuPackagePayloadName;
    private static XName PayloadName;
    private static XName PayloadGroupName;
    private static XName RemoteBundleName;
    private static XName RemoteRelatedBundleName;
    [CompilerGeneratedAttribute]
private IServiceProvider <ServiceProvider>k__BackingField;
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IPayloadHarvester <PayloadHarvester>k__BackingField;
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IBurnBackendBinderExtension> <BackendExtensions>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <BasePaths>k__BackingField;
    [CompilerGeneratedAttribute]
private string <DownloadUrl>k__BackingField;
    [CompilerGeneratedAttribute]
private List`1<string> <InputPaths>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputPath>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<WixBundlePackageType> <PackageType>k__BackingField;
    [CompilerGeneratedAttribute]
private BundlePackagePayloadGenerationType <BundlePayloadGeneration>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Recurse>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCertificate>k__BackingField;
    private IServiceProvider ServiceProvider { get; }
    private IMessaging Messaging { get; }
    private IPayloadHarvester PayloadHarvester { get; }
    private IReadOnlyCollection`1<IBurnBackendBinderExtension> BackendExtensions { get; }
    private List`1<string> BasePaths { get; }
    private string DownloadUrl { get; private set; }
    private List`1<string> InputPaths { get; }
    private string IntermediateFolder { get; private set; }
    private string OutputPath { get; private set; }
    private Nullable`1<WixBundlePackageType> PackageType { get; private set; }
    private BundlePackagePayloadGenerationType BundlePayloadGeneration { get; private set; }
    private bool Recurse { get; private set; }
    private bool UseCertificate { get; private set; }
    public RemotePayloadSubcommand(IServiceProvider serviceProvider);
    private static RemotePayloadSubcommand();
    [CompilerGeneratedAttribute]
private IServiceProvider get_ServiceProvider();
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IPayloadHarvester get_PayloadHarvester();
    [CompilerGeneratedAttribute]
private IReadOnlyCollection`1<IBurnBackendBinderExtension> get_BackendExtensions();
    [CompilerGeneratedAttribute]
private List`1<string> get_BasePaths();
    [CompilerGeneratedAttribute]
private string get_DownloadUrl();
    [CompilerGeneratedAttribute]
private void set_DownloadUrl(string value);
    [CompilerGeneratedAttribute]
private List`1<string> get_InputPaths();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private void set_IntermediateFolder(string value);
    [CompilerGeneratedAttribute]
private string get_OutputPath();
    [CompilerGeneratedAttribute]
private void set_OutputPath(string value);
    [CompilerGeneratedAttribute]
private Nullable`1<WixBundlePackageType> get_PackageType();
    [CompilerGeneratedAttribute]
private void set_PackageType(Nullable`1<WixBundlePackageType> value);
    [CompilerGeneratedAttribute]
private BundlePackagePayloadGenerationType get_BundlePayloadGeneration();
    [CompilerGeneratedAttribute]
private void set_BundlePayloadGeneration(BundlePackagePayloadGenerationType value);
    [CompilerGeneratedAttribute]
private bool get_Recurse();
    [CompilerGeneratedAttribute]
private void set_Recurse(bool value);
    [CompilerGeneratedAttribute]
private bool get_UseCertificate();
    [CompilerGeneratedAttribute]
private void set_UseCertificate(bool value);
    public virtual CommandLineHelp GetCommandLineHelp();
    public virtual Task`1<int> ExecuteAsync(CancellationToken cancellationToken);
    public virtual bool TryParseArgument(ICommandLineParser parser, string argument);
    private IReadOnlyCollection`1<string> ExpandInputPaths();
    private XElement HarvestPackageElement(IEnumerable`1<string> paths);
    [IteratorStateMachineAttribute("WixToolset.Core.Burn.CommandLine.RemotePayloadSubcommand/<HarvestRemotePayloads>d__62")]
private IEnumerable`1<HarvestedFile> HarvestRemotePayloads(IEnumerable`1<string> paths);
    private Dictionary`2<string, CertificateHashes> GetCertificateHashes(IEnumerable`1<string> paths);
    private HarvestedFile HarvestFile(string path, bool isPackage, Dictionary`2<string, CertificateHashes> certificateHashes);
    private string GetRelativeFileName(string path);
    private void HarvestBundlePackage(HarvestedFile harvestedFile);
    private void HarvestExePackage(HarvestedFile harvestedFile);
    private void HarvestMsuPackage(HarvestedFile harvestedFile);
}
internal class WixToolset.Core.Burn.ExtensibilityServices.BurnBackendHelper : object {
    public static XmlReaderSettings ReaderSettings;
    public static XmlWriterSettings WriterSettings;
    private IBackendHelper backendHelper;
    private IBundleValidator bundleValidator;
    [CompilerGeneratedAttribute]
private ManifestData <BootstrapperApplicationManifestData>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ManifestData> <BootstrapperExtensionDataById>k__BackingField;
    private ManifestData BootstrapperApplicationManifestData { get; }
    private Dictionary`2<string, ManifestData> BootstrapperExtensionDataById { get; }
    public BurnBackendHelper(IServiceProvider serviceProvider);
    private static BurnBackendHelper();
    [CompilerGeneratedAttribute]
private ManifestData get_BootstrapperApplicationManifestData();
    [CompilerGeneratedAttribute]
private Dictionary`2<string, ManifestData> get_BootstrapperExtensionDataById();
    public sealed virtual IFileTransfer CreateFileTransfer(string source, string destination, bool move, SourceLineNumber sourceLineNumbers);
    public sealed virtual string CreateGuid();
    public sealed virtual string CreateGuid(Guid namespaceGuid, string value);
    public sealed virtual IResolvedDirectory CreateResolvedDirectory(string directoryParent, string name);
    public sealed virtual IReadOnlyList`1<ITrackedFile> ExtractEmbeddedFiles(IEnumerable`1<IExpectedExtractFile> embeddedFiles);
    public sealed virtual string GenerateIdentifier(string prefix, String[] args);
    public sealed virtual int GetValidCodePage(string value, bool allowNoChange, bool onlyAnsi, SourceLineNumber sourceLineNumbers);
    public sealed virtual string GetMsiFileName(string value, bool source, bool longName);
    public sealed virtual bool IsValidBinderVariable(string variable);
    public sealed virtual bool IsValidFourPartVersion(string version);
    public sealed virtual bool IsValidIdentifier(string id);
    public sealed virtual bool IsValidMsiProductVersion(string version);
    public sealed virtual bool IsValidWixVersion(string version);
    public sealed virtual bool IsValidLongFilename(string filename, bool allowWildcards, bool allowRelative);
    public sealed virtual bool IsValidShortFilename(string filename, bool allowWildcards);
    public sealed virtual void ResolveDelayedFields(IEnumerable`1<IDelayedField> delayedFields, Dictionary`2<string, string> variableCache);
    public sealed virtual String[] SplitMsiFileName(string value);
    public sealed virtual bool TryParseFourPartVersion(string version, String& parsedVersion);
    public sealed virtual bool TryParseMsiProductVersion(string version, bool strict, String& parsedVersion);
    public sealed virtual ITrackedFile TrackFile(string path, TrackedFileType type, SourceLineNumber sourceLineNumbers);
    public sealed virtual void AddBootstrapperApplicationData(string xml);
    public sealed virtual void AddBootstrapperApplicationData(IntermediateSymbol symbol, bool symbolIdIsIdAttribute);
    public sealed virtual void AddBootstrapperExtensionData(string extensionId, string xml);
    public sealed virtual void AddBootstrapperExtensionData(string extensionId, IntermediateSymbol symbol, bool symbolIdIsIdAttribute);
    public sealed virtual string GetCanonicalRelativePath(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string relativePath);
    public sealed virtual bool ValidateBundleMsiPropertyName(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string propertyName);
    public sealed virtual bool ValidateBundleVariableNameDeclaration(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string variableName);
    public sealed virtual bool ValidateBundleVariableNameValue(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string variableName, BundleVariableNameRule nameRule);
    public sealed virtual bool ValidateBundleVariableNameTarget(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string variableName);
    public sealed virtual bool ValidateBundleCondition(SourceLineNumber sourceLineNumbers, string elementName, string attributeName, string condition, BundleConditionPhase phase);
    public sealed virtual void WriteBootstrapperApplicationData(XmlWriter writer);
    public sealed virtual void WriteBootstrapperExtensionData(XmlWriter writer);
    private ManifestData GetBootstrapperExtensionManifestData(string extensionId);
    private void WriteExtension(XmlWriter writer, string extensionId, ManifestData manifestData);
}
internal class WixToolset.Core.Burn.ExtensibilityServices.PayloadHarvester : object {
    private static Version EmptyVersion;
    private static PayloadHarvester();
    public sealed virtual bool HarvestStandardInformation(WixBundlePayloadSymbol payload);
    private void UpdatePayloadFileInformation(WixBundlePayloadSymbol payload, string filePath);
    private void UpdatePayloadVersionInformation(WixBundlePayloadSymbol payload, string filePath);
}
internal class WixToolset.Core.Burn.ExtensionSearchFacade : BaseSearchFacade {
    public ExtensionSearchFacade(WixSearchSymbol searchSymbol);
    public virtual void WriteXml(XmlTextWriter writer);
}
internal class WixToolset.Core.Burn.GetBootstrapperApplicationSymbolsCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IntermediateSection <Section>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol <Primary>k__BackingField;
    [CompilerGeneratedAttribute]
private WixBootstrapperApplicationSymbol <Secondary>k__BackingField;
    private IMessaging Messaging { get; }
    private IntermediateSection Section { get; }
    public WixBootstrapperApplicationSymbol Primary { get; private set; }
    public WixBootstrapperApplicationSymbol Secondary { get; private set; }
    public GetBootstrapperApplicationSymbolsCommand(IMessaging messaging, IntermediateSection section);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IntermediateSection get_Section();
    [CompilerGeneratedAttribute]
public WixBootstrapperApplicationSymbol get_Primary();
    [CompilerGeneratedAttribute]
private void set_Primary(WixBootstrapperApplicationSymbol value);
    [CompilerGeneratedAttribute]
public WixBootstrapperApplicationSymbol get_Secondary();
    [CompilerGeneratedAttribute]
private void set_Secondary(WixBootstrapperApplicationSymbol value);
    public void Execute();
    public void ReportTooManyBootstrapperApplications(IEnumerable`1<WixBootstrapperApplicationSymbol> symbols);
}
internal interface WixToolset.Core.Burn.IInternalBurnBackendHelper {
    public abstract virtual void WriteBootstrapperApplicationData(XmlWriter writer);
    public abstract virtual void WriteBootstrapperExtensionData(XmlWriter writer);
}
internal class WixToolset.Core.Burn.Inscribe.InscribeBundleCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <SignedEngineFile>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputFile>k__BackingField;
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private string IntermediateFolder { get; }
    private string InputFilePath { get; }
    private string SignedEngineFile { get; }
    private string OutputFile { get; }
    public InscribeBundleCommand(IServiceProvider serviceProvider, string inputPath, string signedEngineFile, string outputPath, string intermediateFolder);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private string get_InputFilePath();
    [CompilerGeneratedAttribute]
private string get_SignedEngineFile();
    [CompilerGeneratedAttribute]
private string get_OutputFile();
    public bool Execute();
}
internal class WixToolset.Core.Burn.Inscribe.InscribeBundleEngineCommand : object {
    [CompilerGeneratedAttribute]
private IMessaging <Messaging>k__BackingField;
    [CompilerGeneratedAttribute]
private IFileSystem <FileSystem>k__BackingField;
    [CompilerGeneratedAttribute]
private string <IntermediateFolder>k__BackingField;
    [CompilerGeneratedAttribute]
private string <InputFilePath>k__BackingField;
    [CompilerGeneratedAttribute]
private string <OutputFile>k__BackingField;
    private IMessaging Messaging { get; }
    private IFileSystem FileSystem { get; }
    private string IntermediateFolder { get; }
    private string InputFilePath { get; }
    private string OutputFile { get; }
    public InscribeBundleEngineCommand(IServiceProvider serviceProvider, string inputPath, string outputPath, string intermediateFolder);
    [CompilerGeneratedAttribute]
private IMessaging get_Messaging();
    [CompilerGeneratedAttribute]
private IFileSystem get_FileSystem();
    [CompilerGeneratedAttribute]
private string get_IntermediateFolder();
    [CompilerGeneratedAttribute]
private string get_InputFilePath();
    [CompilerGeneratedAttribute]
private string get_OutputFile();
    public void Execute();
}
public interface WixToolset.Core.Burn.Interfaces.IPayloadHarvester {
    public abstract virtual bool HarvestStandardInformation(WixBundlePayloadSymbol payload);
}
internal interface WixToolset.Core.Burn.ISearchFacade {
    public abstract virtual void WriteXml(XmlTextWriter writer);
}
internal class WixToolset.Core.Burn.LegacySearchFacade : BaseSearchFacade {
    [CompilerGeneratedAttribute]
private IntermediateSymbol <SearchSpecificSymbol>k__BackingField;
    public IntermediateSymbol SearchSpecificSymbol { get; }
    public LegacySearchFacade(WixSearchSymbol searchSymbol, IntermediateSymbol searchSpecificSymbol);
    [CompilerGeneratedAttribute]
public IntermediateSymbol get_SearchSpecificSymbol();
    public virtual void WriteXml(XmlTextWriter writer);
    private void WriteComponentSearchXml(XmlTextWriter writer, WixComponentSearchSymbol searchSymbol);
    private void WriteFileSearchXml(XmlTextWriter writer, WixFileSearchSymbol searchSymbol);
    private void WriteProductSearchXml(XmlTextWriter writer, WixProductSearchSymbol symbol);
    private void WriteRegistrySearchXml(XmlTextWriter writer, WixRegistrySearchSymbol symbol);
}
[DefaultMemberAttribute("Item")]
internal class WixToolset.Core.Burn.RowIndexedList`1 : object {
    private Dictionary`2<string, T> index;
    private List`1<T> rows;
    private List`1<T> duplicates;
    public IEnumerable`1<T> Duplicates { get; }
    public T Item { get; public set; }
    public int Count { get; }
    public bool IsReadOnly { get; }
    public RowIndexedList`1(IEnumerable`1<T> rows);
    public RowIndexedList`1(Table table);
    public IEnumerable`1<T> get_Duplicates();
    public T Get(int key);
    public T Get(string key);
    public bool TryGet(string key, T& row);
    public bool TryAdd(T row);
    public sealed virtual void Add(T row);
    public sealed virtual int IndexOf(T row);
    public sealed virtual void Insert(int index, T row);
    public sealed virtual void RemoveAt(int index);
    public sealed virtual T get_Item(int index);
    public sealed virtual void set_Item(int index, T value);
    public sealed virtual void Clear();
    public sealed virtual bool Contains(T row);
    public sealed virtual void CopyTo(T[] array, int arrayIndex);
    public sealed virtual int get_Count();
    public sealed virtual bool get_IsReadOnly();
    public sealed virtual bool Remove(T row);
    public sealed virtual IEnumerator`1<T> GetEnumerator();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
}
internal class WixToolset.Core.Burn.SetVariableSearchFacade : BaseSearchFacade {
    [CompilerGeneratedAttribute]
private WixSetVariableSymbol <SetVariableSymbol>k__BackingField;
    private WixSetVariableSymbol SetVariableSymbol { get; }
    public SetVariableSearchFacade(WixSearchSymbol searchSymbol, WixSetVariableSymbol setVariableSymbol);
    [CompilerGeneratedAttribute]
private WixSetVariableSymbol get_SetVariableSymbol();
    public virtual void WriteXml(XmlTextWriter writer);
}
[ExtensionAttribute]
public static class WixToolset.Core.Burn.WixToolsetCoreServiceProviderExtensions : object {
    [ExtensionAttribute]
public static IWixToolsetCoreServiceProvider AddBundleBackend(IWixToolsetCoreServiceProvider coreProvider);
    private static void AddServices(IWixToolsetCoreServiceProvider coreProvider);
    private static T AddSingleton(Dictionary`2<Type, object> singletons, T service);
}
