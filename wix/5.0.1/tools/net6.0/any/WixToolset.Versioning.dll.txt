public class WixToolset.Versioning.WixVersion : object {
    [CompilerGeneratedAttribute]
private Nullable`1<char> <Prefix>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Major>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Minor>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Patch>k__BackingField;
    [CompilerGeneratedAttribute]
private UInt32 <Revision>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <Invalid>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMajor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasMinor>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasPatch>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <HasRevision>k__BackingField;
    [CompilerGeneratedAttribute]
private WixVersionLabel[] <Labels>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Metadata>k__BackingField;
    public Nullable`1<char> Prefix { get; public set; }
    public UInt32 Major { get; public set; }
    public UInt32 Minor { get; public set; }
    public UInt32 Patch { get; public set; }
    public UInt32 Revision { get; public set; }
    public bool Invalid { get; public set; }
    public bool HasMajor { get; public set; }
    public bool HasMinor { get; public set; }
    public bool HasPatch { get; public set; }
    public bool HasRevision { get; public set; }
    public WixVersionLabel[] Labels { get; public set; }
    public string Metadata { get; public set; }
    [CompilerGeneratedAttribute]
public Nullable`1<char> get_Prefix();
    [CompilerGeneratedAttribute]
public void set_Prefix(Nullable`1<char> value);
    [CompilerGeneratedAttribute]
public UInt32 get_Major();
    [CompilerGeneratedAttribute]
public void set_Major(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Minor();
    [CompilerGeneratedAttribute]
public void set_Minor(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Patch();
    [CompilerGeneratedAttribute]
public void set_Patch(UInt32 value);
    [CompilerGeneratedAttribute]
public UInt32 get_Revision();
    [CompilerGeneratedAttribute]
public void set_Revision(UInt32 value);
    [CompilerGeneratedAttribute]
public bool get_Invalid();
    [CompilerGeneratedAttribute]
public void set_Invalid(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasMajor();
    [CompilerGeneratedAttribute]
public void set_HasMajor(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasMinor();
    [CompilerGeneratedAttribute]
public void set_HasMinor(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasPatch();
    [CompilerGeneratedAttribute]
public void set_HasPatch(bool value);
    [CompilerGeneratedAttribute]
public bool get_HasRevision();
    [CompilerGeneratedAttribute]
public void set_HasRevision(bool value);
    [CompilerGeneratedAttribute]
public WixVersionLabel[] get_Labels();
    [CompilerGeneratedAttribute]
public void set_Labels(WixVersionLabel[] value);
    [CompilerGeneratedAttribute]
public string get_Metadata();
    [CompilerGeneratedAttribute]
public void set_Metadata(string value);
    public sealed virtual int CompareTo(WixVersion version);
    public sealed virtual int CompareTo(object version);
    public sealed virtual bool Equals(WixVersion version);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
    public static WixVersion Parse(string parse);
    public static bool TryParse(string parse, WixVersion& version);
    public static bool op_Equality(WixVersion v1, WixVersion v2);
    public static bool op_Inequality(WixVersion v1, WixVersion v2);
    public static bool op_LessThan(WixVersion v1, WixVersion v2);
    public static bool op_GreaterThan(WixVersion v1, WixVersion v2);
    public static bool op_LessThanOrEqual(WixVersion v1, WixVersion v2);
    public static bool op_GreaterThanOrEqual(WixVersion v1, WixVersion v2);
}
public class WixToolset.Versioning.WixVersionComparer : object {
    public static WixVersionComparer Default;
    private static WixVersionComparer();
    public sealed virtual int Compare(WixVersion x, WixVersion y);
    public sealed virtual bool Equals(WixVersion x, WixVersion y);
    public sealed virtual int GetHashCode(WixVersion version);
    private static int CompareReleaseLabel(WixVersionLabel l1, WixVersionLabel l2);
}
public class WixToolset.Versioning.WixVersionLabel : object {
    [CompilerGeneratedAttribute]
private string <Label>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<UInt32> <Numeric>k__BackingField;
    public string Label { get; public set; }
    public Nullable`1<UInt32> Numeric { get; public set; }
    public WixVersionLabel(string label);
    public WixVersionLabel(string label, Nullable`1<UInt32> numeric);
    [CompilerGeneratedAttribute]
public string get_Label();
    [CompilerGeneratedAttribute]
public void set_Label(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<UInt32> get_Numeric();
    [CompilerGeneratedAttribute]
public void set_Numeric(Nullable`1<UInt32> value);
}
