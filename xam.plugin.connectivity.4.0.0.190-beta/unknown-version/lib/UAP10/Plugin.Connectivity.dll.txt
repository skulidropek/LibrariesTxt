public class Plugin.Connectivity.ConnectivityImplementation : BaseConnectivity {
    private bool isConnected;
    private bool disposed;
    public bool IsConnected { get; }
    public IEnumerable`1<ConnectionType> ConnectionTypes { get; }
    public IEnumerable`1<ulong> Bandwidths { get; }
    [AsyncStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<NetworkStatusChanged>d__2")]
private void NetworkStatusChanged(object sender);
    public virtual bool get_IsConnected();
    [AsyncStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<IsReachable>d__5")]
public virtual Task`1<bool> IsReachable(string host, TimeSpan timeout);
    [AsyncStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<IsRemoteReachable>d__6")]
public virtual Task`1<bool> IsRemoteReachable(Uri uri, TimeSpan timeout);
    [IteratorStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<get_ConnectionTypes>d__8")]
public virtual IEnumerable`1<ConnectionType> get_ConnectionTypes();
    [IteratorStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<get_Bandwidths>d__10")]
public virtual IEnumerable`1<ulong> get_Bandwidths();
    public virtual void Dispose(bool disposing);
}
public class Plugin.Connectivity.CrossConnectivity : object {
    private static Lazy`1<IConnectivity> implementation;
    public static bool IsSupported { get; }
    public static IConnectivity Current { get; }
    private static CrossConnectivity();
    public static bool get_IsSupported();
    public static IConnectivity get_Current();
    private static IConnectivity CreateConnectivity();
    internal static Exception NotImplementedInReferenceAssembly();
    public static void Dispose();
}
