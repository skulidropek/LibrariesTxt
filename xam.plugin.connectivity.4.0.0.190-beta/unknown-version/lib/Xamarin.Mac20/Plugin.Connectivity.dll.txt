[PreserveAttribute]
public class Plugin.Connectivity.ConnectivityImplementation : BaseConnectivity {
    private Task initialTask;
    private bool isConnected;
    private NetworkStatus previousInternetStatus;
    private bool disposed;
    public bool IsConnected { get; }
    public IEnumerable`1<ConnectionType> ConnectionTypes { get; }
    public IEnumerable`1<ulong> Bandwidths { get; }
    [AsyncStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<ReachabilityChanged>d__2")]
private void ReachabilityChanged(object sender, EventArgs e);
    private void UpdateConnected(bool triggerChange);
    public virtual bool get_IsConnected();
    public virtual Task`1<bool> IsReachable(string host, TimeSpan timeout);
    public virtual Task`1<bool> IsRemoteReachable(Uri uri, TimeSpan timeout);
    [IteratorStateMachineAttribute("Plugin.Connectivity.ConnectivityImplementation/<get_ConnectionTypes>d__11")]
public virtual IEnumerable`1<ConnectionType> get_ConnectionTypes();
    public virtual IEnumerable`1<ulong> get_Bandwidths();
    public virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
private void <.ctor>b__1_0();
}
public class Plugin.Connectivity.CrossConnectivity : object {
    private static Lazy`1<IConnectivity> implementation;
    public static bool IsSupported { get; }
    public static IConnectivity Current { get; }
    private static CrossConnectivity();
    public static bool get_IsSupported();
    public static IConnectivity get_Current();
    private static IConnectivity CreateConnectivity();
    internal static Exception NotImplementedInReferenceAssembly();
    public static void Dispose();
}
[PreserveAttribute]
public enum Plugin.Connectivity.NetworkStatus : Enum {
    public int value__;
    public static NetworkStatus NotReachable;
    public static NetworkStatus ReachableViaCarrierDataNetwork;
    public static NetworkStatus ReachableViaWiFiNetwork;
}
[PreserveAttribute]
public static class Plugin.Connectivity.Reachability : object {
    public static string HostName;
    [CompilerGeneratedAttribute]
private static EventHandler ReachabilityChanged;
    private static NetworkReachability defaultRouteReachability;
    private static NetworkReachability remoteHostReachability;
    private static Reachability();
    public static bool IsReachableWithoutRequiringConnection(NetworkReachabilityFlags flags);
    public static bool IsHostReachable(Uri uri);
    public static bool IsHostReachable(string host, int port);
    public static bool IsHostReachable(string host);
    [CompilerGeneratedAttribute]
public static void add_ReachabilityChanged(EventHandler value);
    [CompilerGeneratedAttribute]
public static void remove_ReachabilityChanged(EventHandler value);
    [AsyncStateMachineAttribute("Plugin.Connectivity.Reachability/<OnChange>d__8")]
private static void OnChange(NetworkReachabilityFlags flags);
    private static bool IsNetworkAvailable(NetworkReachabilityFlags& flags);
    public static NetworkStatus RemoteHostStatus();
    public static IEnumerable`1<NetworkStatus> GetActiveConnectionType();
    public static NetworkStatus InternetConnectionStatus();
    public static void Dispose();
}
