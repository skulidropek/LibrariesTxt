[RegisterAttribute("android/arch/lifecycle/GenericLifecycleObserver", "", "Android.Arch.Lifecycle.IGenericLifecycleObserverInvoker")]
public interface Android.Arch.Lifecycle.IGenericLifecycleObserver {
    [RegisterAttribute("onStateChanged", "(Landroid/arch/lifecycle/LifecycleOwner;Landroid/arch/lifecycle/Lifecycle$Event;)V", "GetOnStateChanged_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Lifecycle_Event_Handler:Android.Arch.Lifecycle.IGenericLifecycleObserverInvoker, Xamarin.Android.Arch.Lifecycle.Common")]
public abstract virtual void OnStateChanged(ILifecycleOwner p0, Event p1);
}
[RegisterAttribute("android/arch/lifecycle/GenericLifecycleObserver")]
internal class Android.Arch.Lifecycle.IGenericLifecycleObserverInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onStateChanged_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Lifecycle_Event_;
    private IntPtr id_onStateChanged_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Lifecycle_Event_;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IGenericLifecycleObserverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IGenericLifecycleObserverInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IGenericLifecycleObserver GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnStateChanged_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Lifecycle_Event_Handler();
    private static void n_OnStateChanged_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Lifecycle_Event_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void OnStateChanged(ILifecycleOwner p0, Event p1);
}
[RegisterAttribute("android/arch/lifecycle/LifecycleObserver", "", "Android.Arch.Lifecycle.ILifecycleObserverInvoker")]
public interface Android.Arch.Lifecycle.ILifecycleObserver {
}
[RegisterAttribute("android/arch/lifecycle/LifecycleObserver")]
internal class Android.Arch.Lifecycle.ILifecycleObserverInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ILifecycleObserverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILifecycleObserverInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILifecycleObserver GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
}
[RegisterAttribute("android/arch/lifecycle/LifecycleOwner", "", "Android.Arch.Lifecycle.ILifecycleOwnerInvoker")]
public interface Android.Arch.Lifecycle.ILifecycleOwner {
    public Lifecycle Lifecycle { get; }
    [RegisterAttribute("getLifecycle", "()Landroid/arch/lifecycle/Lifecycle;", "GetGetLifecycleHandler:Android.Arch.Lifecycle.ILifecycleOwnerInvoker, Xamarin.Android.Arch.Lifecycle.Common")]
public abstract virtual Lifecycle get_Lifecycle();
}
[RegisterAttribute("android/arch/lifecycle/LifecycleOwner")]
internal class Android.Arch.Lifecycle.ILifecycleOwnerInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getLifecycle;
    private IntPtr id_getLifecycle;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Lifecycle Lifecycle { get; }
    public ILifecycleOwnerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILifecycleOwnerInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILifecycleOwner GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetLifecycleHandler();
    private static IntPtr n_GetLifecycle(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Lifecycle get_Lifecycle();
}
[RegisterAttribute("android/arch/lifecycle/Lifecycle")]
public abstract class Android.Arch.Lifecycle.Lifecycle : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getCurrentState;
    private static Delegate cb_addObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    private static Delegate cb_removeObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public State CurrentState { get; }
    protected Lifecycle(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurrentStateHandler();
    private static IntPtr n_GetCurrentState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentState", "()Landroid/arch/lifecycle/Lifecycle$State;", "GetGetCurrentStateHandler")]
public abstract virtual State get_CurrentState();
    private static Delegate GetAddObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler();
    private static void n_AddObserver_Landroid_arch_lifecycle_LifecycleObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("addObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetAddObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public abstract virtual void AddObserver(ILifecycleObserver p0);
    private static Delegate GetRemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler();
    private static void n_RemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("removeObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetRemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public abstract virtual void RemoveObserver(ILifecycleObserver p0);
}
[RegisterAttribute("android/arch/lifecycle/Lifecycle")]
internal class Android.Arch.Lifecycle.LifecycleInvoker : Lifecycle {
    private static IntPtr id_getCurrentState;
    private static IntPtr id_addObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    private static IntPtr id_removeObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    protected Type ThresholdType { get; }
    public State CurrentState { get; }
    public LifecycleInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrentState", "()Landroid/arch/lifecycle/Lifecycle$State;", "GetGetCurrentStateHandler")]
public virtual State get_CurrentState();
    [RegisterAttribute("addObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetAddObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public virtual void AddObserver(ILifecycleObserver p0);
    [RegisterAttribute("removeObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetRemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public virtual void RemoveObserver(ILifecycleObserver p0);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
