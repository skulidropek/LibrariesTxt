[RegisterAttribute("android/arch/lifecycle/Observer", "", "Android.Arch.Lifecycle.IObserverInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Android.Arch.Lifecycle.IObserver {
    [RegisterAttribute("onChanged", "(Ljava/lang/Object;)V", "GetOnChanged_Ljava_lang_Object_Handler:Android.Arch.Lifecycle.IObserverInvoker, Xamarin.Android.Arch.Lifecycle.LiveData.Core")]
public abstract virtual void OnChanged(Object p0);
}
[RegisterAttribute("android/arch/lifecycle/Observer")]
internal class Android.Arch.Lifecycle.IObserverInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onChanged_Ljava_lang_Object_;
    private IntPtr id_onChanged_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IObserverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IObserverInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IObserver GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnChanged_Ljava_lang_Object_Handler();
    private static void n_OnChanged_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnChanged(Object p0);
}
[RegisterAttribute("android/arch/lifecycle/LiveData")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Arch.Lifecycle.LiveData : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_hasActiveObservers;
    private static Delegate cb_hasObservers;
    private static Delegate cb_getValue;
    private static Delegate cb_observe_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Observer_;
    private static Delegate cb_observeForever_Landroid_arch_lifecycle_Observer_;
    private static Delegate cb_onActive;
    private static Delegate cb_onInactive;
    private static Delegate cb_postValue_Ljava_lang_Object_;
    private static Delegate cb_removeObserver_Landroid_arch_lifecycle_Observer_;
    private static Delegate cb_removeObservers_Landroid_arch_lifecycle_LifecycleOwner_;
    private static Delegate cb_setValue_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasActiveObservers { get; }
    public bool HasObservers { get; }
    public Object Value { get; }
    protected LiveData(IntPtr javaReference, JniHandleOwnership transfer);
    private static LiveData();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasActiveObserversHandler();
    private static bool n_HasActiveObservers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasActiveObservers", "()Z", "GetHasActiveObserversHandler")]
public virtual bool get_HasActiveObservers();
    private static Delegate GetHasObserversHandler();
    private static bool n_HasObservers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasObservers", "()Z", "GetHasObserversHandler")]
public virtual bool get_HasObservers();
    private static Delegate GetGetValueHandler();
    private static IntPtr n_GetValue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getValue", "()Ljava/lang/Object;", "GetGetValueHandler")]
public virtual Object get_Value();
    private static Delegate GetObserve_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Observer_Handler();
    private static void n_Observe_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Observer_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner, IntPtr native_observer);
    [RegisterAttribute("observe", "(Landroid/arch/lifecycle/LifecycleOwner;Landroid/arch/lifecycle/Observer;)V", "GetObserve_Landroid_arch_lifecycle_LifecycleOwner_Landroid_arch_lifecycle_Observer_Handler")]
public virtual void Observe(ILifecycleOwner owner, IObserver observer);
    private static Delegate GetObserveForever_Landroid_arch_lifecycle_Observer_Handler();
    private static void n_ObserveForever_Landroid_arch_lifecycle_Observer_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("observeForever", "(Landroid/arch/lifecycle/Observer;)V", "GetObserveForever_Landroid_arch_lifecycle_Observer_Handler")]
public virtual void ObserveForever(IObserver observer);
    private static Delegate GetOnActiveHandler();
    private static void n_OnActive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onActive", "()V", "GetOnActiveHandler")]
protected virtual void OnActive();
    private static Delegate GetOnInactiveHandler();
    private static void n_OnInactive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onInactive", "()V", "GetOnInactiveHandler")]
protected virtual void OnInactive();
    private static Delegate GetPostValue_Ljava_lang_Object_Handler();
    private static void n_PostValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("postValue", "(Ljava/lang/Object;)V", "GetPostValue_Ljava_lang_Object_Handler")]
protected virtual void PostValue(Object value);
    private static Delegate GetRemoveObserver_Landroid_arch_lifecycle_Observer_Handler();
    private static void n_RemoveObserver_Landroid_arch_lifecycle_Observer_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("removeObserver", "(Landroid/arch/lifecycle/Observer;)V", "GetRemoveObserver_Landroid_arch_lifecycle_Observer_Handler")]
public virtual void RemoveObserver(IObserver observer);
    private static Delegate GetRemoveObservers_Landroid_arch_lifecycle_LifecycleOwner_Handler();
    private static void n_RemoveObservers_Landroid_arch_lifecycle_LifecycleOwner_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner);
    [RegisterAttribute("removeObservers", "(Landroid/arch/lifecycle/LifecycleOwner;)V", "GetRemoveObservers_Landroid_arch_lifecycle_LifecycleOwner_Handler")]
public virtual void RemoveObservers(ILifecycleOwner owner);
    private static Delegate GetSetValue_Ljava_lang_Object_Handler();
    private static void n_SetValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("setValue", "(Ljava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_Handler")]
protected virtual void SetValue(Object value);
}
[RegisterAttribute("android/arch/lifecycle/LiveData")]
internal class Android.Arch.Lifecycle.LiveDataInvoker : LiveData {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public LiveDataInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static LiveDataInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/arch/lifecycle/MutableLiveData")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Arch.Lifecycle.MutableLiveData : LiveData {
    internal static JniPeerMembers _members;
    private static Delegate cb_postValue_Ljava_lang_Object_;
    private static Delegate cb_setValue_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MutableLiveData(IntPtr javaReference, JniHandleOwnership transfer);
    private static MutableLiveData();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetPostValue_Ljava_lang_Object_Handler();
    private static void n_PostValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("postValue", "(Ljava/lang/Object;)V", "GetPostValue_Ljava_lang_Object_Handler")]
public virtual void PostValue(Object value);
    private static Delegate GetSetValue_Ljava_lang_Object_Handler();
    private static void n_SetValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("setValue", "(Ljava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_Handler")]
public virtual void SetValue(Object value);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
