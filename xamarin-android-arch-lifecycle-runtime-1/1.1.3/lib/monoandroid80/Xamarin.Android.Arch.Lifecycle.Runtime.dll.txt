[RegisterAttribute("android/arch/lifecycle/BuildConfig")]
public class Android.Arch.Lifecycle.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/arch/lifecycle/LifecycleRegistry")]
public class Android.Arch.Lifecycle.LifecycleRegistry : Lifecycle {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_arch_lifecycle_LifecycleOwner_;
    private static Delegate cb_getCurrentState;
    private static IntPtr id_getCurrentState;
    private static Delegate cb_getObserverCount;
    private static IntPtr id_getObserverCount;
    private static Delegate cb_addObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    private static IntPtr id_addObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    private static Delegate cb_handleLifecycleEvent_Landroid_arch_lifecycle_Lifecycle_Event_;
    private static IntPtr id_handleLifecycleEvent_Landroid_arch_lifecycle_Lifecycle_Event_;
    private static Delegate cb_markState_Landroid_arch_lifecycle_Lifecycle_State_;
    private static IntPtr id_markState_Landroid_arch_lifecycle_Lifecycle_State_;
    private static Delegate cb_removeObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    private static IntPtr id_removeObserver_Landroid_arch_lifecycle_LifecycleObserver_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public State CurrentState { get; }
    public int ObserverCount { get; }
    protected LifecycleRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/arch/lifecycle/LifecycleOwner;)V", "")]
public LifecycleRegistry(ILifecycleOwner provider);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurrentStateHandler();
    private static IntPtr n_GetCurrentState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentState", "()Landroid/arch/lifecycle/Lifecycle$State;", "GetGetCurrentStateHandler")]
public virtual State get_CurrentState();
    private static Delegate GetGetObserverCountHandler();
    private static int n_GetObserverCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getObserverCount", "()I", "GetGetObserverCountHandler")]
public virtual int get_ObserverCount();
    private static Delegate GetAddObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler();
    private static void n_AddObserver_Landroid_arch_lifecycle_LifecycleObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("addObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetAddObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public virtual void AddObserver(ILifecycleObserver observer);
    private static Delegate GetHandleLifecycleEvent_Landroid_arch_lifecycle_Lifecycle_Event_Handler();
    private static void n_HandleLifecycleEvent_Landroid_arch_lifecycle_Lifecycle_Event_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [RegisterAttribute("handleLifecycleEvent", "(Landroid/arch/lifecycle/Lifecycle$Event;)V", "GetHandleLifecycleEvent_Landroid_arch_lifecycle_Lifecycle_Event_Handler")]
public virtual void HandleLifecycleEvent(Event e);
    private static Delegate GetMarkState_Landroid_arch_lifecycle_Lifecycle_State_Handler();
    private static void n_MarkState_Landroid_arch_lifecycle_Lifecycle_State_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("markState", "(Landroid/arch/lifecycle/Lifecycle$State;)V", "GetMarkState_Landroid_arch_lifecycle_Lifecycle_State_Handler")]
public virtual void MarkState(State state);
    private static Delegate GetRemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler();
    private static void n_RemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("removeObserver", "(Landroid/arch/lifecycle/LifecycleObserver;)V", "GetRemoveObserver_Landroid_arch_lifecycle_LifecycleObserver_Handler")]
public virtual void RemoveObserver(ILifecycleObserver observer);
}
[RegisterAttribute("android/arch/lifecycle/ReportFragment")]
public class Android.Arch.Lifecycle.ReportFragment : Fragment {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_injectIfNeededIn_Landroid_app_Activity_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ReportFragment(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("injectIfNeededIn", "(Landroid/app/Activity;)V", "")]
public static void InjectIfNeededIn(Activity activity);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
