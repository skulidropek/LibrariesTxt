internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_L : MulticastDelegate {
    public _JniMarshal_PPF_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_V : MulticastDelegate {
    public _JniMarshal_PPF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_L : MulticastDelegate {
    public _JniMarshal_PPI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_L : MulticastDelegate {
    public _JniMarshal_PPII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIII_F : MulticastDelegate {
    public _JniMarshal_PPIIII_F(object object, IntPtr method);
    public virtual float Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual float EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIII_L : MulticastDelegate {
    public _JniMarshal_PPIIII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIL_L : MulticastDelegate {
    public _JniMarshal_PPIIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIL_L : MulticastDelegate {
    public _JniMarshal_PPIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_L : MulticastDelegate {
    public _JniMarshal_PPJ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_V : MulticastDelegate {
    public _JniMarshal_PPJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJL_L : MulticastDelegate {
    public _JniMarshal_PPJL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_I : MulticastDelegate {
    public _JniMarshal_PPL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_V : MulticastDelegate {
    public _JniMarshal_PPLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLII_L : MulticastDelegate {
    public _JniMarshal_PPLII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIII_V : MulticastDelegate {
    public _JniMarshal_PPLIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIL_L : MulticastDelegate {
    public _JniMarshal_PPLIIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIL_V : MulticastDelegate {
    public _JniMarshal_PPLIIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_I : MulticastDelegate {
    public _JniMarshal_PPLL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLII_L : MulticastDelegate {
    public _JniMarshal_PPLLII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_Z : MulticastDelegate {
    public _JniMarshal_PPLLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLIILLLLLZZLZZZZLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLIILLLLLZZLZZZZLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, int p3, int p4, IntPtr p5, IntPtr p6, IntPtr p7, IntPtr p8, IntPtr p9, bool p10, bool p11, IntPtr p12, bool p13, bool p14, bool p15, bool p16, IntPtr p17, IntPtr p18);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, int p3, int p4, IntPtr p5, IntPtr p6, IntPtr p7, IntPtr p8, IntPtr p9, bool p10, bool p11, IntPtr p12, bool p13, bool p14, bool p15, bool p16, IntPtr p17, IntPtr p18, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLLZ_Z : MulticastDelegate {
    public _JniMarshal_PPLLLLZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, bool p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, bool p4, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLZ_Z : MulticastDelegate {
    public _JniMarshal_PPLLLZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, bool p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, bool p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLZ_V : MulticastDelegate {
    public _JniMarshal_PPLLZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, bool p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLZ_L : MulticastDelegate {
    public _JniMarshal_PPLZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_L : MulticastDelegate {
    public _JniMarshal_PPZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_Z : MulticastDelegate {
    public _JniMarshal_PPZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZLL_Z : MulticastDelegate {
    public _JniMarshal_PPZLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, bool p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GeneratedAppGlideModule")]
public abstract class Bumptech.Glide.GeneratedAppGlideModule : AppGlideModule {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getExcludedModuleClasses;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManagerFactory;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<Class> ExcludedModuleClasses { get; }
    [NullableAttribute("2")]
public IRequestManagerFactory RequestManagerFactory { get; }
    protected GeneratedAppGlideModule(IntPtr javaReference, JniHandleOwnership transfer);
    private static GeneratedAppGlideModule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetExcludedModuleClassesHandler();
    private static IntPtr n_GetExcludedModuleClasses(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExcludedModuleClasses", "()Ljava/util/Set;", "GetGetExcludedModuleClassesHandler")]
public abstract virtual ICollection`1<Class> get_ExcludedModuleClasses();
    private static Delegate GetGetRequestManagerFactoryHandler();
    private static IntPtr n_GetRequestManagerFactory(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequestManagerFactory", "()Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;", "GetGetRequestManagerFactoryHandler")]
public virtual IRequestManagerFactory get_RequestManagerFactory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GeneratedAppGlideModule")]
internal class Bumptech.Glide.GeneratedAppGlideModuleInvoker : GeneratedAppGlideModule {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<Class> ExcludedModuleClasses { get; }
    public GeneratedAppGlideModuleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static GeneratedAppGlideModuleInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExcludedModuleClasses", "()Ljava/util/Set;", "GetGetExcludedModuleClassesHandler")]
public virtual ICollection`1<Class> get_ExcludedModuleClasses();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GenericTransitionOptions")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.GenericTransitionOptions : TransitionOptions {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GenericTransitionOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static GenericTransitionOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("with", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/GenericTransitionOptions;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static GenericTransitionOptions With(ITransitionFactory transitionFactory);
    [RegisterAttribute("with", "(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)Lcom/bumptech/glide/GenericTransitionOptions;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static GenericTransitionOptions With(IAnimator animator);
    [RegisterAttribute("with", "(I)Lcom/bumptech/glide/GenericTransitionOptions;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static GenericTransitionOptions With(int viewAnimationId);
    [RegisterAttribute("withNoTransition", "()Lcom/bumptech/glide/GenericTransitionOptions;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static GenericTransitionOptions WithNoTransition();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/Glide")]
public class Bumptech.Glide.Glide : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getArrayPool;
    [NullableAttribute("2")]
private static Delegate cb_getBitmapPool;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    [NullableAttribute("2")]
private static Delegate cb_getRegistry;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManagerRetriever;
    [NullableAttribute("2")]
private static Delegate cb_clearDiskCache;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_onConfigurationChanged_Landroid_content_res_Configuration_;
    [NullableAttribute("2")]
private static Delegate cb_onLowMemory;
    [NullableAttribute("2")]
private static Delegate cb_onTrimMemory_I;
    [NullableAttribute("2")]
private static Delegate cb_preFillBitmapPool_arrayLcom_bumptech_glide_load_engine_prefill_PreFillType_Builder_;
    [NullableAttribute("2")]
private static Delegate cb_setMemoryCategory_Lcom_bumptech_glide_MemoryCategory_;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IArrayPool ArrayPool { get; }
    public IBitmapPool BitmapPool { get; }
    public Context Context { get; }
    public static bool IsInitialized { get; }
    public Registry Registry { get; }
    public RequestManagerRetriever RequestManagerRetriever { get; }
    protected Glide(IntPtr javaReference, JniHandleOwnership transfer);
    private static Glide();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetArrayPoolHandler();
    private static IntPtr n_GetArrayPool(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getArrayPool", "()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;", "GetGetArrayPoolHandler")]
public virtual IArrayPool get_ArrayPool();
    private static Delegate GetGetBitmapPoolHandler();
    private static IntPtr n_GetBitmapPool(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBitmapPool", "()Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;", "GetGetBitmapPoolHandler")]
public virtual IBitmapPool get_BitmapPool();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    [RegisterAttribute("isInitialized", "()Z", "")]
public static bool get_IsInitialized();
    private static Delegate GetGetRegistryHandler();
    private static IntPtr n_GetRegistry(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRegistry", "()Lcom/bumptech/glide/Registry;", "GetGetRegistryHandler")]
public virtual Registry get_Registry();
    private static Delegate GetGetRequestManagerRetrieverHandler();
    private static IntPtr n_GetRequestManagerRetriever(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRequestManagerRetriever", "()Lcom/bumptech/glide/manager/RequestManagerRetriever;", "GetGetRequestManagerRetrieverHandler")]
public virtual RequestManagerRetriever get_RequestManagerRetriever();
    private static Delegate GetClearDiskCacheHandler();
    private static void n_ClearDiskCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearDiskCache", "()V", "GetClearDiskCacheHandler")]
public virtual void ClearDiskCache();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler")]
public virtual void ClearMemory();
    [RegisterAttribute("enableHardwareBitmaps", "()V", "")]
public static void EnableHardwareBitmaps();
    [RegisterAttribute("get", "(Landroid/content/Context;)Lcom/bumptech/glide/Glide;", "")]
public static Glide Get(Context context);
    [RegisterAttribute("getPhotoCacheDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetPhotoCacheDir(Context context);
    [RegisterAttribute("getPhotoCacheDir", "(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;", "")]
public static File GetPhotoCacheDir(Context context, string cacheName);
    [RegisterAttribute("init", "(Landroid/content/Context;Lcom/bumptech/glide/GlideBuilder;)V", "")]
public static void Init(Context context, GlideBuilder builder);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("init", "(Lcom/bumptech/glide/Glide;)V", "")]
public static void Init(Glide glide);
    private static Delegate GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler();
    private static void n_OnConfigurationChanged_Landroid_content_res_Configuration_(IntPtr jnienv, IntPtr native__this, IntPtr native_newConfig);
    [NullableContextAttribute("2")]
[RegisterAttribute("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]
public virtual void OnConfigurationChanged(Configuration newConfig);
    private static Delegate GetOnLowMemoryHandler();
    private static void n_OnLowMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onLowMemory", "()V", "GetOnLowMemoryHandler")]
public virtual void OnLowMemory();
    private static Delegate GetOnTrimMemory_IHandler();
    private static void n_OnTrimMemory_I(IntPtr jnienv, IntPtr native__this, int native_level);
    [RegisterAttribute("onTrimMemory", "(I)V", "GetOnTrimMemory_IHandler")]
public virtual void OnTrimMemory(TrimMemory level);
    private static Delegate GetPreFillBitmapPool_arrayLcom_bumptech_glide_load_engine_prefill_PreFillType_Builder_Handler();
    private static void n_PreFillBitmapPool_arrayLcom_bumptech_glide_load_engine_prefill_PreFillType_Builder_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmapAttributeBuilders);
    [RegisterAttribute("preFillBitmapPool", "([Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;)V", "GetPreFillBitmapPool_arrayLcom_bumptech_glide_load_engine_prefill_PreFillType_Builder_Handler")]
public virtual void PreFillBitmapPool(Builder[] bitmapAttributeBuilders);
    private static Delegate GetSetMemoryCategory_Lcom_bumptech_glide_MemoryCategory_Handler();
    private static IntPtr n_SetMemoryCategory_Lcom_bumptech_glide_MemoryCategory_(IntPtr jnienv, IntPtr native__this, IntPtr native_memoryCategory);
    [RegisterAttribute("setMemoryCategory", "(Lcom/bumptech/glide/MemoryCategory;)Lcom/bumptech/glide/MemoryCategory;", "GetSetMemoryCategory_Lcom_bumptech_glide_MemoryCategory_Handler")]
public virtual MemoryCategory SetMemoryCategory(MemoryCategory memoryCategory);
    [RegisterAttribute("tearDown", "()V", "")]
public static void TearDown();
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler")]
public virtual void TrimMemory(int level);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("with", "(Landroid/app/Activity;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(Activity activity);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("with", "(Landroid/app/Fragment;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(Fragment fragment);
    [RegisterAttribute("with", "(Landroid/content/Context;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(Context context);
    [RegisterAttribute("with", "(Landroid/view/View;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(View view);
    [RegisterAttribute("with", "(Landroidx/fragment/app/Fragment;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(Fragment fragment);
    [RegisterAttribute("with", "(Landroidx/fragment/app/FragmentActivity;)Lcom/bumptech/glide/RequestManager;", "")]
public static RequestManager With(FragmentActivity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GlideBuilder")]
public class Bumptech.Glide.GlideBuilder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GlideBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlideBuilder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addGlobalRequestListener", "(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder AddGlobalRequestListener(IRequestListener listener);
    [RegisterAttribute("setAnimationExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetAnimationExecutor(GlideExecutor service);
    [RegisterAttribute("setArrayPool", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetArrayPool(IArrayPool arrayPool);
    [RegisterAttribute("setBitmapPool", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetBitmapPool(IBitmapPool bitmapPool);
    [RegisterAttribute("setConnectivityMonitorFactory", "(Lcom/bumptech/glide/manager/ConnectivityMonitorFactory;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetConnectivityMonitorFactory(IConnectivityMonitorFactory factory);
    [RegisterAttribute("setDefaultRequestOptions", "(Lcom/bumptech/glide/Glide$RequestOptionsFactory;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetDefaultRequestOptions(IRequestOptionsFactory factory);
    [RegisterAttribute("setDefaultRequestOptions", "(Lcom/bumptech/glide/request/RequestOptions;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetDefaultRequestOptions(RequestOptions requestOptions);
    [RegisterAttribute("setDefaultTransitionOptions", "(Ljava/lang/Class;Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/GlideBuilder;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public GlideBuilder SetDefaultTransitionOptions(Class clazz, TransitionOptions options);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setDisableHardwareBitmapsOnO", "(Z)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetDisableHardwareBitmapsOnO(bool disableHardwareBitmapsOnO);
    [RegisterAttribute("setDiskCache", "(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetDiskCache(IDiskCacheFactory diskCacheFactory);
    [RegisterAttribute("setDiskCacheExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetDiskCacheExecutor(GlideExecutor service);
    [NullableContextAttribute("2")]
[RegisterAttribute("setImageDecoderEnabledForBitmaps", "(Z)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetImageDecoderEnabledForBitmaps(bool isEnabled);
    [RegisterAttribute("setIsActiveResourceRetentionAllowed", "(Z)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetIsActiveResourceRetentionAllowed(bool isActiveResourceRetentionAllowed);
    [RegisterAttribute("setLogLevel", "(I)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetLogLevel(int logLevel);
    [NullableContextAttribute("2")]
[RegisterAttribute("setLogRequestOrigins", "(Z)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetLogRequestOrigins(bool isEnabled);
    [RegisterAttribute("setMemoryCache", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetMemoryCache(IMemoryCache memoryCache);
    [RegisterAttribute("setMemorySizeCalculator", "(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetMemorySizeCalculator(MemorySizeCalculator calculator);
    [RegisterAttribute("setMemorySizeCalculator", "(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetMemorySizeCalculator(Builder builder);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setResizeExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetResizeExecutor(GlideExecutor service);
    [RegisterAttribute("setSourceExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;", "")]
public GlideBuilder SetSourceExecutor(GlideExecutor service);
    [RegisterAttribute("build", "(Landroid/content/Context;)Lcom/bumptech/glide/Glide;", "")]
public Glide Build(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GlideContext")]
public class Bumptech.Glide.GlideContext : ContextWrapper {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getArrayPool;
    [NullableAttribute("2")]
private static Delegate cb_getDefaultRequestListeners;
    [NullableAttribute("2")]
private static Delegate cb_getDefaultRequestOptions;
    [NullableAttribute("2")]
private static Delegate cb_getEngine;
    [NullableAttribute("2")]
private static Delegate cb_getExperiments;
    [NullableAttribute("2")]
private static Delegate cb_getLogLevel;
    [NullableAttribute("2")]
private static Delegate cb_getRegistry;
    [NullableAttribute("2")]
private static Delegate cb_buildImageViewTarget_Landroid_widget_ImageView_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getDefaultTransitionOptions_Ljava_lang_Class_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IArrayPool ArrayPool { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<IRequestListener> DefaultRequestListeners { get; }
    [NullableAttribute("2")]
public RequestOptions DefaultRequestOptions { get; }
    public Engine Engine { get; }
    [NullableAttribute("2")]
public GlideExperiments Experiments { get; }
    public int LogLevel { get; }
    public Registry Registry { get; }
    protected GlideContext(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;Lcom/bumptech/glide/request/target/ImageViewTargetFactory;Lcom/bumptech/glide/Glide$RequestOptionsFactory;Ljava/util/Map;Ljava/util/List;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/GlideExperiments;I)V", "")]
public GlideContext(Context context, IArrayPool arrayPool, IGlideSupplier registry, ImageViewTargetFactory imageViewTargetFactory, IRequestOptionsFactory defaultRequestOptionsFactory, IDictionary`2<Class, TransitionOptions> defaultTransitionOptions, IList`1<IRequestListener> defaultRequestListeners, Engine engine, GlideExperiments experiments, int logLevel);
    private static GlideContext();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetArrayPoolHandler();
    private static IntPtr n_GetArrayPool(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getArrayPool", "()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;", "GetGetArrayPoolHandler")]
public virtual IArrayPool get_ArrayPool();
    private static Delegate GetGetDefaultRequestListenersHandler();
    private static IntPtr n_GetDefaultRequestListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDefaultRequestListeners", "()Ljava/util/List;", "GetGetDefaultRequestListenersHandler")]
public virtual IList`1<IRequestListener> get_DefaultRequestListeners();
    private static Delegate GetGetDefaultRequestOptionsHandler();
    private static IntPtr n_GetDefaultRequestOptions(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDefaultRequestOptions", "()Lcom/bumptech/glide/request/RequestOptions;", "GetGetDefaultRequestOptionsHandler")]
public virtual RequestOptions get_DefaultRequestOptions();
    private static Delegate GetGetEngineHandler();
    private static IntPtr n_GetEngine(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEngine", "()Lcom/bumptech/glide/load/engine/Engine;", "GetGetEngineHandler")]
public virtual Engine get_Engine();
    private static Delegate GetGetExperimentsHandler();
    private static IntPtr n_GetExperiments(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getExperiments", "()Lcom/bumptech/glide/GlideExperiments;", "GetGetExperimentsHandler")]
public virtual GlideExperiments get_Experiments();
    private static Delegate GetGetLogLevelHandler();
    private static int n_GetLogLevel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLogLevel", "()I", "GetGetLogLevelHandler")]
public virtual int get_LogLevel();
    private static Delegate GetGetRegistryHandler();
    private static IntPtr n_GetRegistry(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRegistry", "()Lcom/bumptech/glide/Registry;", "GetGetRegistryHandler")]
public virtual Registry get_Registry();
    private static Delegate GetBuildImageViewTarget_Landroid_widget_ImageView_Ljava_lang_Class_Handler();
    private static IntPtr n_BuildImageViewTarget_Landroid_widget_ImageView_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_imageView, IntPtr native_transcodeClass);
    [RegisterAttribute("buildImageViewTarget", "(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/ViewTarget;", "GetBuildImageViewTarget_Landroid_widget_ImageView_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual ViewTarget BuildImageViewTarget(ImageView imageView, Class transcodeClass);
    private static Delegate GetGetDefaultTransitionOptions_Ljava_lang_Class_Handler();
    private static IntPtr n_GetDefaultTransitionOptions_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_transcodeClass);
    [RegisterAttribute("getDefaultTransitionOptions", "(Ljava/lang/Class;)Lcom/bumptech/glide/TransitionOptions;", "GetGetDefaultTransitionOptions_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual TransitionOptions GetDefaultTransitionOptions(Class transcodeClass);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/GlideExperiments")]
public class Bumptech.Glide.GlideExperiments : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isEnabled_Ljava_lang_Class_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected GlideExperiments(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlideExperiments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsEnabled_Ljava_lang_Class_Handler();
    private static bool n_IsEnabled_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_clazz);
    [NullableContextAttribute("2")]
[RegisterAttribute("isEnabled", "(Ljava/lang/Class;)Z", "GetIsEnabled_Ljava_lang_Class_Handler")]
public virtual bool IsEnabled(Class clazz);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/ListPreloader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.ListPreloader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onScroll_Landroid_widget_AbsListView_III;
    [NullableAttribute("2")]
private static Delegate cb_onScrollStateChanged_Landroid_widget_AbsListView_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ListPreloader(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/bumptech/glide/RequestManager;Lcom/bumptech/glide/ListPreloader$PreloadModelProvider;Lcom/bumptech/glide/ListPreloader$PreloadSizeProvider;I)V", "")]
public ListPreloader(RequestManager requestManager, IPreloadModelProvider preloadModelProvider, IPreloadSizeProvider preloadDimensionProvider, int maxPreload);
    private static ListPreloader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnScroll_Landroid_widget_AbsListView_IIIHandler();
    private static void n_OnScroll_Landroid_widget_AbsListView_III(IntPtr jnienv, IntPtr native__this, IntPtr native_absListView, int firstVisible, int visibleCount, int totalCount);
    [NullableContextAttribute("2")]
[RegisterAttribute("onScroll", "(Landroid/widget/AbsListView;III)V", "GetOnScroll_Landroid_widget_AbsListView_IIIHandler")]
public virtual void OnScroll(AbsListView absListView, int firstVisible, int visibleCount, int totalCount);
    private static Delegate GetOnScrollStateChanged_Landroid_widget_AbsListView_IHandler();
    private static void n_OnScrollStateChanged_Landroid_widget_AbsListView_I(IntPtr jnienv, IntPtr native__this, IntPtr native_absListView, int native_scrollState);
    [NullableContextAttribute("2")]
[RegisterAttribute("onScrollStateChanged", "(Landroid/widget/AbsListView;I)V", "GetOnScrollStateChanged_Landroid_widget_AbsListView_IHandler")]
public virtual void OnScrollStateChanged(AbsListView absListView, ScrollState scrollState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/AssetFileDescriptorLocalUriFetcher")]
public class Bumptech.Glide.Load.Data.AssetFileDescriptorLocalUriFetcher : LocalUriFetcher {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    internal AssetFileDescriptorLocalUriFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/ContentResolver;Landroid/net/Uri;)V", "")]
public AssetFileDescriptorLocalUriFetcher(ContentResolver contentResolver, Uri uri);
    private static AssetFileDescriptorLocalUriFetcher();
    protected virtual void Close(Object data);
    protected virtual Object LoadResource(Uri uri, ContentResolver contentResolver);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "")]
public virtual Class get_DataClass();
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Landroid/content/res/AssetFileDescriptor;)V", "")]
private void Close(AssetFileDescriptor data);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/net/Uri;Landroid/content/ContentResolver;)Landroid/content/res/AssetFileDescriptor;", "")]
private AssetFileDescriptor LoadResource_T(Uri uri, ContentResolver contentResolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/AssetPathFetcher")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Load.Data.AssetPathFetcher : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataSource;
    [NullableAttribute("2")]
private static Delegate cb_cancel;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_loadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_content_res_AssetManager_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DataSource DataSource { get; }
    public Class DataClass { get; }
    protected AssetPathFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/AssetManager;Ljava/lang/String;)V", "")]
public AssetPathFetcher(AssetManager assetManager, string assetPath);
    private static AssetPathFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataSourceHandler();
    private static IntPtr n_GetDataSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataSource", "()Lcom/bumptech/glide/load/DataSource;", "GetGetDataSourceHandler")]
public virtual DataSource get_DataSource();
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler")]
public virtual void Cancel();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler")]
public virtual void Cleanup();
    private static Delegate GetClose_Ljava_lang_Object_Handler();
    private static void n_Close_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Object;)V", "GetClose_Ljava_lang_Object_Handler")]
protected abstract virtual void Close(Object p0);
    private static Delegate GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler();
    private static void n_LoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_priority, IntPtr native__callback);
    [RegisterAttribute("loadData", "(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V", "GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler")]
public virtual void LoadData(Priority priority, IDataFetcherDataCallback callback);
    private static Delegate GetLoadResource_Landroid_content_res_AssetManager_Ljava_lang_String_Handler();
    private static IntPtr n_LoadResource_Landroid_content_res_AssetManager_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/lang/Object;", "GetLoadResource_Landroid_content_res_AssetManager_Ljava_lang_String_Handler")]
protected abstract virtual Object LoadResource(AssetManager p0, string p1);
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public abstract virtual Class get_DataClass();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/AssetPathFetcher")]
internal class Bumptech.Glide.Load.Data.AssetPathFetcherInvoker : AssetPathFetcher {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public AssetPathFetcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AssetPathFetcherInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Object;)V", "GetClose_Ljava_lang_Object_Handler")]
protected virtual void Close(Object p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/lang/Object;", "GetLoadResource_Landroid_content_res_AssetManager_Ljava_lang_String_Handler")]
protected virtual Object LoadResource(AssetManager p0, string p1);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/BufferedOutputStream")]
public class Bumptech.Glide.Load.Data.BufferedOutputStream : OutputStream {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BufferedOutputStream(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/OutputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public BufferedOutputStream(Stream out, IArrayPool arrayPool);
    private static BufferedOutputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("write", "(I)V", "")]
public virtual void Write(int b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/DataRewinderRegistry")]
public class Bumptech.Glide.Load.Data.DataRewinderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_register_Lcom_bumptech_glide_load_data_DataRewinder_Factory_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DataRewinderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static DataRewinderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Ljava_lang_Object_Handler();
    private static IntPtr n_Build_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("build", "(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;", "GetBuild_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IDataRewinder Build(Object data);
    private static Delegate GetRegister_Lcom_bumptech_glide_load_data_DataRewinder_Factory_Handler();
    private static void n_Register_Lcom_bumptech_glide_load_data_DataRewinder_Factory_(IntPtr jnienv, IntPtr native__this, IntPtr native_factory);
    [RegisterAttribute("register", "(Lcom/bumptech/glide/load/data/DataRewinder$Factory;)V", "GetRegister_Lcom_bumptech_glide_load_data_DataRewinder_Factory_Handler")]
public virtual void Register(IDataRewinderFactory factory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/ExifOrientationStream")]
public class Bumptech.Glide.Load.Data.ExifOrientationStream : FilterInputStream {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExifOrientationStream(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/io/InputStream;I)V", "")]
public ExifOrientationStream(Stream in, int orientation);
    private static ExifOrientationStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/FileDescriptorAssetPathFetcher")]
public class Bumptech.Glide.Load.Data.FileDescriptorAssetPathFetcher : AssetPathFetcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_close_Landroid_content_res_AssetFileDescriptor_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_content_res_AssetManager_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    protected FileDescriptorAssetPathFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/AssetManager;Ljava/lang/String;)V", "")]
public FileDescriptorAssetPathFetcher(AssetManager assetManager, string assetPath);
    private static FileDescriptorAssetPathFetcher();
    protected virtual void Close(Object data);
    protected virtual Object LoadResource(AssetManager assetManager, string path);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetClose_Landroid_content_res_AssetFileDescriptor_Handler();
    private static void n_Close_Landroid_content_res_AssetFileDescriptor_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Landroid/content/res/AssetFileDescriptor;)V", "GetClose_Landroid_content_res_AssetFileDescriptor_Handler")]
protected virtual void Close(AssetFileDescriptor data);
    private static Delegate GetLoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_Handler();
    private static IntPtr n_LoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetManager, IntPtr native_path);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Landroid/content/res/AssetFileDescriptor;", "GetLoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_Handler")]
protected virtual AssetFileDescriptor LoadResource_T(AssetManager assetManager, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/FileDescriptorLocalUriFetcher")]
public class Bumptech.Glide.Load.Data.FileDescriptorLocalUriFetcher : LocalUriFetcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_close_Landroid_os_ParcelFileDescriptor_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_net_Uri_Landroid_content_ContentResolver_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    protected FileDescriptorLocalUriFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/ContentResolver;Landroid/net/Uri;)V", "")]
public FileDescriptorLocalUriFetcher(ContentResolver contentResolver, Uri uri);
    private static FileDescriptorLocalUriFetcher();
    protected virtual void Close(Object data);
    protected virtual Object LoadResource(Uri uri, ContentResolver contentResolver);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetClose_Landroid_os_ParcelFileDescriptor_Handler();
    private static void n_Close_Landroid_os_ParcelFileDescriptor_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Landroid/os/ParcelFileDescriptor;)V", "GetClose_Landroid_os_ParcelFileDescriptor_Handler")]
protected virtual void Close(ParcelFileDescriptor data);
    private static Delegate GetLoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_Handler();
    private static IntPtr n_LoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_contentResolver);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/net/Uri;Landroid/content/ContentResolver;)Landroid/os/ParcelFileDescriptor;", "GetLoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_Handler")]
protected virtual ParcelFileDescriptor LoadResource_T(Uri uri, ContentResolver contentResolver);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/HttpUrlFetcher")]
public class Bumptech.Glide.Load.Data.HttpUrlFetcher : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_getDataSource;
    [NullableAttribute("2")]
private static Delegate cb_cancel;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_loadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public DataSource DataSource { get; }
    protected HttpUrlFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/GlideUrl;I)V", "")]
public HttpUrlFetcher(GlideUrl glideUrl, int timeout);
    private static HttpUrlFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetGetDataSourceHandler();
    private static IntPtr n_GetDataSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataSource", "()Lcom/bumptech/glide/load/DataSource;", "GetGetDataSourceHandler")]
public virtual DataSource get_DataSource();
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler")]
public virtual void Cancel();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler")]
public virtual void Cleanup();
    private static Delegate GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler();
    private static void n_LoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_priority, IntPtr native__callback);
    [RegisterAttribute("loadData", "(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V", "GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler")]
public virtual void LoadData(Priority priority, IDataFetcherDataCallback callback);
    private sealed virtual override void global::Bumptech.Glide.Load.Data.IDataFetcher.LoadData(Priority p0, IDataFetcherDataCallback p1);
}
[NullableContextAttribute("1")]
[RegisterAttribute("com/bumptech/glide/load/data/DataFetcher", "", "Bumptech.Glide.Load.Data.IDataFetcherInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Data.IDataFetcher {
    public Class DataClass { get; }
    public DataSource DataSource { get; }
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler:Bumptech.Glide.Load.Data.IDataFetcherInvoker, Xamarin.Android.Glide")]
public abstract virtual Class get_DataClass();
    [RegisterAttribute("getDataSource", "()Lcom/bumptech/glide/load/DataSource;", "GetGetDataSourceHandler:Bumptech.Glide.Load.Data.IDataFetcherInvoker, Xamarin.Android.Glide")]
public abstract virtual DataSource get_DataSource();
    [RegisterAttribute("cancel", "()V", "GetCancelHandler:Bumptech.Glide.Load.Data.IDataFetcherInvoker, Xamarin.Android.Glide")]
public abstract virtual void Cancel();
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler:Bumptech.Glide.Load.Data.IDataFetcherInvoker, Xamarin.Android.Glide")]
public abstract virtual void Cleanup();
    [RegisterAttribute("loadData", "(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V", "GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler:Bumptech.Glide.Load.Data.IDataFetcherInvoker, Xamarin.Android.Glide")]
public abstract virtual void LoadData(Priority p0, IDataFetcherDataCallback p1);
}
[RegisterAttribute("com/bumptech/glide/load/data/DataFetcher$DataCallback", "", "Bumptech.Glide.Load.Data.IDataFetcherDataCallbackInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Data.IDataFetcherDataCallback {
    [NullableContextAttribute("2")]
[RegisterAttribute("onDataReady", "(Ljava/lang/Object;)V", "GetOnDataReady_Ljava_lang_Object_Handler:Bumptech.Glide.Load.Data.IDataFetcherDataCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnDataReady(Object p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("onLoadFailed", "(Ljava/lang/Exception;)V", "GetOnLoadFailed_Ljava_lang_Exception_Handler:Bumptech.Glide.Load.Data.IDataFetcherDataCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnLoadFailed(Exception p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/DataFetcher$DataCallback")]
internal class Bumptech.Glide.Load.Data.IDataFetcherDataCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onDataReady_Ljava_lang_Object_;
    private IntPtr id_onDataReady_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Ljava_lang_Exception_;
    private IntPtr id_onLoadFailed_Ljava_lang_Exception_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDataFetcherDataCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDataFetcherDataCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDataFetcherDataCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnDataReady_Ljava_lang_Object_Handler();
    private static void n_OnDataReady_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void OnDataReady(Object p0);
    private static Delegate GetOnLoadFailed_Ljava_lang_Exception_Handler();
    private static void n_OnLoadFailed_Ljava_lang_Exception_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnLoadFailed(Exception p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/DataFetcher")]
internal class Bumptech.Glide.Load.Data.IDataFetcherInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    private IntPtr id_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_getDataSource;
    private IntPtr id_getDataSource;
    [NullableAttribute("2")]
private static Delegate cb_cancel;
    private IntPtr id_cancel;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    private IntPtr id_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_loadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_;
    private IntPtr id_loadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public DataSource DataSource { get; }
    public IDataFetcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDataFetcherInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDataFetcher GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class get_DataClass();
    private static Delegate GetGetDataSourceHandler();
    private static IntPtr n_GetDataSource(IntPtr jnienv, IntPtr native__this);
    public sealed virtual DataSource get_DataSource();
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cancel();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cleanup();
    private static Delegate GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler();
    private static void n_LoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void LoadData(Priority p0, IDataFetcherDataCallback p1);
}
[RegisterAttribute("com/bumptech/glide/load/data/DataRewinder", "", "Bumptech.Glide.Load.Data.IDataRewinderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Data.IDataRewinder {
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler:Bumptech.Glide.Load.Data.IDataRewinderInvoker, Xamarin.Android.Glide")]
public abstract virtual void Cleanup();
    [NullableContextAttribute("1")]
[RegisterAttribute("rewindAndGet", "()Ljava/lang/Object;", "GetRewindAndGetHandler:Bumptech.Glide.Load.Data.IDataRewinderInvoker, Xamarin.Android.Glide")]
public abstract virtual Object RewindAndGet();
}
[RegisterAttribute("com/bumptech/glide/load/data/DataRewinder$Factory", "", "Bumptech.Glide.Load.Data.IDataRewinderFactoryInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Data.IDataRewinderFactory {
    [NullableAttribute("1")]
public Class DataClass { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler:Bumptech.Glide.Load.Data.IDataRewinderFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual Class get_DataClass();
    [NullableContextAttribute("1")]
[RegisterAttribute("build", "(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;", "GetBuild_Ljava_lang_Object_Handler:Bumptech.Glide.Load.Data.IDataRewinderFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual IDataRewinder Build(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/DataRewinder$Factory")]
internal class Bumptech.Glide.Load.Data.IDataRewinderFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    private IntPtr id_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_build_Ljava_lang_Object_;
    private IntPtr id_build_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public IDataRewinderFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDataRewinderFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDataRewinderFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class get_DataClass();
    private static Delegate GetBuild_Ljava_lang_Object_Handler();
    private static IntPtr n_Build_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual IDataRewinder Build(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/DataRewinder")]
internal class Bumptech.Glide.Load.Data.IDataRewinderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    private IntPtr id_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_rewindAndGet;
    private IntPtr id_rewindAndGet;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDataRewinderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDataRewinderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDataRewinder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cleanup();
    private static Delegate GetRewindAndGetHandler();
    private static IntPtr n_RewindAndGet(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object RewindAndGet();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/InputStreamRewinder")]
public class Bumptech.Glide.Load.Data.InputStreamRewinder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InputStreamRewinder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public InputStreamRewinder(Stream is, IArrayPool byteArrayPool);
    private static InputStreamRewinder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("cleanup", "()V", "")]
public void Cleanup();
    [RegisterAttribute("fixMarkLimits", "()V", "")]
public void FixMarkLimits();
    [RegisterAttribute("rewindAndGet", "()Ljava/io/InputStream;", "")]
public Stream RewindAndGet();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/LocalUriFetcher")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Load.Data.LocalUriFetcher : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataSource;
    [NullableAttribute("2")]
private static Delegate cb_cancel;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_net_Uri_Landroid_content_ContentResolver_;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DataSource DataSource { get; }
    public Class DataClass { get; }
    protected LocalUriFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/ContentResolver;Landroid/net/Uri;)V", "")]
public LocalUriFetcher(ContentResolver contentResolver, Uri uri);
    private static LocalUriFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataSourceHandler();
    private static IntPtr n_GetDataSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataSource", "()Lcom/bumptech/glide/load/DataSource;", "GetGetDataSourceHandler")]
public virtual DataSource get_DataSource();
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler")]
public virtual void Cancel();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler")]
public virtual void Cleanup();
    private static Delegate GetClose_Ljava_lang_Object_Handler();
    private static void n_Close_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Object;)V", "GetClose_Ljava_lang_Object_Handler")]
protected abstract virtual void Close(Object p0);
    [RegisterAttribute("loadData", "(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V", "")]
public sealed virtual void LoadData(Priority priority, IDataFetcherDataCallback callback);
    private static Delegate GetLoadResource_Landroid_net_Uri_Landroid_content_ContentResolver_Handler();
    private static IntPtr n_LoadResource_Landroid_net_Uri_Landroid_content_ContentResolver_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/net/Uri;Landroid/content/ContentResolver;)Ljava/lang/Object;", "GetLoadResource_Landroid_net_Uri_Landroid_content_ContentResolver_Handler")]
protected abstract virtual Object LoadResource(Uri p0, ContentResolver p1);
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public abstract virtual Class get_DataClass();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/LocalUriFetcher")]
internal class Bumptech.Glide.Load.Data.LocalUriFetcherInvoker : LocalUriFetcher {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public LocalUriFetcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static LocalUriFetcherInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Object;)V", "GetClose_Ljava_lang_Object_Handler")]
protected virtual void Close(Object p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/net/Uri;Landroid/content/ContentResolver;)Ljava/lang/Object;", "GetLoadResource_Landroid_net_Uri_Landroid_content_ContentResolver_Handler")]
protected virtual Object LoadResource(Uri p0, ContentResolver p1);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
}
[RegisterAttribute("com/bumptech/glide/load/data/mediastore/ThumbnailQuery", "", "Bumptech.Glide.Load.Data.Mediastore.IThumbnailQueryInvoker")]
public interface Bumptech.Glide.Load.Data.Mediastore.IThumbnailQuery {
    [NullableContextAttribute("2")]
[RegisterAttribute("query", "(Landroid/net/Uri;)Landroid/database/Cursor;", "GetQuery_Landroid_net_Uri_Handler:Bumptech.Glide.Load.Data.Mediastore.IThumbnailQueryInvoker, Xamarin.Android.Glide")]
public abstract virtual ICursor Query(Uri p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/mediastore/ThumbnailQuery")]
internal class Bumptech.Glide.Load.Data.Mediastore.IThumbnailQueryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_query_Landroid_net_Uri_;
    private IntPtr id_query_Landroid_net_Uri_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IThumbnailQueryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IThumbnailQueryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IThumbnailQuery GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetQuery_Landroid_net_Uri_Handler();
    private static IntPtr n_Query_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual ICursor Query(Uri p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/mediastore/MediaStoreUtil")]
public class Bumptech.Glide.Load.Data.Mediastore.MediaStoreUtil : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaStoreUtil(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaStoreUtil();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("isAndroidPickerUri", "(Landroid/net/Uri;)Z", "")]
public static bool IsAndroidPickerUri(Uri uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("isMediaStoreImageUri", "(Landroid/net/Uri;)Z", "")]
public static bool IsMediaStoreImageUri(Uri uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("isMediaStoreUri", "(Landroid/net/Uri;)Z", "")]
public static bool IsMediaStoreUri(Uri uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("isMediaStoreVideoUri", "(Landroid/net/Uri;)Z", "")]
public static bool IsMediaStoreVideoUri(Uri uri);
    [RegisterAttribute("isThumbnailSize", "(II)Z", "")]
public static bool IsThumbnailSize(int width, int height);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/mediastore/ThumbFetcher")]
public class Bumptech.Glide.Load.Data.Mediastore.ThumbFetcher : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_getDataSource;
    [NullableAttribute("2")]
private static Delegate cb_cancel;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_loadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    public DataSource DataSource { get; }
    protected ThumbFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static ThumbFetcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetGetDataSourceHandler();
    private static IntPtr n_GetDataSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataSource", "()Lcom/bumptech/glide/load/DataSource;", "GetGetDataSourceHandler")]
public virtual DataSource get_DataSource();
    [NullableContextAttribute("2")]
[RegisterAttribute("buildImageFetcher", "(Landroid/content/Context;Landroid/net/Uri;)Lcom/bumptech/glide/load/data/mediastore/ThumbFetcher;", "")]
public static ThumbFetcher BuildImageFetcher(Context context, Uri uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("buildVideoFetcher", "(Landroid/content/Context;Landroid/net/Uri;)Lcom/bumptech/glide/load/data/mediastore/ThumbFetcher;", "")]
public static ThumbFetcher BuildVideoFetcher(Context context, Uri uri);
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler")]
public virtual void Cancel();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler")]
public virtual void Cleanup();
    private static Delegate GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler();
    private static void n_LoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_priority, IntPtr native__callback);
    [RegisterAttribute("loadData", "(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V", "GetLoadData_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_data_DataFetcher_DataCallback_Handler")]
public virtual void LoadData(Priority priority, IDataFetcherDataCallback callback);
    private sealed virtual override void global::Bumptech.Glide.Load.Data.IDataFetcher.LoadData(Priority p0, IDataFetcherDataCallback p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/ParcelFileDescriptorRewinder")]
public class Bumptech.Glide.Load.Data.ParcelFileDescriptorRewinder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static bool IsSupported { get; }
    internal ParcelFileDescriptorRewinder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/os/ParcelFileDescriptor;)V", "")]
public ParcelFileDescriptorRewinder(ParcelFileDescriptor parcelFileDescriptor);
    private static ParcelFileDescriptorRewinder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isSupported", "()Z", "")]
public static bool get_IsSupported();
    [RegisterAttribute("cleanup", "()V", "")]
public sealed virtual void Cleanup();
    [RegisterAttribute("rewindAndGet", "()Landroid/os/ParcelFileDescriptor;", "")]
public ParcelFileDescriptor RewindAndGet();
    private sealed virtual override Object global::Bumptech.Glide.Load.Data.IDataRewinder.RewindAndGet();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/StreamAssetPathFetcher")]
public class Bumptech.Glide.Load.Data.StreamAssetPathFetcher : AssetPathFetcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_io_InputStream_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_content_res_AssetManager_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    protected StreamAssetPathFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/AssetManager;Ljava/lang/String;)V", "")]
public StreamAssetPathFetcher(AssetManager assetManager, string assetPath);
    private static StreamAssetPathFetcher();
    protected virtual void Close(Object data);
    protected virtual Object LoadResource(AssetManager assetManager, string path);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetClose_Ljava_io_InputStream_Handler();
    private static void n_Close_Ljava_io_InputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/io/InputStream;)V", "GetClose_Ljava_io_InputStream_Handler")]
protected virtual void Close(Stream data);
    private static Delegate GetLoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_Handler();
    private static IntPtr n_LoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_assetManager, IntPtr native_path);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/content/res/AssetManager;Ljava/lang/String;)Ljava/io/InputStream;", "GetLoadResource_T_Landroid_content_res_AssetManager_Ljava_lang_String_Handler")]
protected virtual Stream LoadResource_T(AssetManager assetManager, string path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/data/StreamLocalUriFetcher")]
public class Bumptech.Glide.Load.Data.StreamLocalUriFetcher : LocalUriFetcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_io_InputStream_;
    [NullableAttribute("2")]
private static Delegate cb_loadResource_Landroid_net_Uri_Landroid_content_ContentResolver_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class DataClass { get; }
    protected StreamLocalUriFetcher(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/ContentResolver;Landroid/net/Uri;)V", "")]
public StreamLocalUriFetcher(ContentResolver resolver, Uri uri);
    private static StreamLocalUriFetcher();
    protected virtual void Close(Object data);
    protected virtual Object LoadResource(Uri uri, ContentResolver contentResolver);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
    private static Delegate GetClose_Ljava_io_InputStream_Handler();
    private static void n_Close_Ljava_io_InputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/io/InputStream;)V", "GetClose_Ljava_io_InputStream_Handler")]
protected virtual void Close(Stream data);
    private static Delegate GetLoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_Handler();
    private static IntPtr n_LoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_contentResolver);
    [NullableContextAttribute("2")]
[RegisterAttribute("loadResource", "(Landroid/net/Uri;Landroid/content/ContentResolver;)Ljava/io/InputStream;", "GetLoadResource_T_Landroid_net_Uri_Landroid_content_ContentResolver_Handler")]
protected virtual Stream LoadResource_T(Uri uri, ContentResolver contentResolver);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/DataSource")]
public class Bumptech.Glide.Load.DataSource : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DATA_DISK_CACHE")]
public static DataSource DataDiskCache { get; }
    [RegisterAttribute("LOCAL")]
public static DataSource Local { get; }
    [RegisterAttribute("MEMORY_CACHE")]
public static DataSource MemoryCache { get; }
    [RegisterAttribute("REMOTE")]
public static DataSource Remote { get; }
    [RegisterAttribute("RESOURCE_DISK_CACHE")]
public static DataSource ResourceDiskCache { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DataSource(IntPtr javaReference, JniHandleOwnership transfer);
    private static DataSource();
    public static DataSource get_DataDiskCache();
    public static DataSource get_Local();
    public static DataSource get_MemoryCache();
    public static DataSource get_Remote();
    public static DataSource get_ResourceDiskCache();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/load/DataSource;", "")]
public static DataSource ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/load/DataSource;", "")]
public static DataSource[] Values();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/DecodeFormat")]
public class Bumptech.Glide.Load.DecodeFormat : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DEFAULT")]
public static DecodeFormat Default { get; }
    [RegisterAttribute("PREFER_ARGB_8888")]
public static DecodeFormat PreferArgb8888 { get; }
    [RegisterAttribute("PREFER_RGB_565")]
public static DecodeFormat PreferRgb565 { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DecodeFormat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DecodeFormat();
    public static DecodeFormat get_Default();
    public static DecodeFormat get_PreferArgb8888();
    public static DecodeFormat get_PreferRgb565();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/load/DecodeFormat;", "")]
public static DecodeFormat ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/load/DecodeFormat;", "")]
public static DecodeFormat[] Values();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/EncodeStrategy")]
public class Bumptech.Glide.Load.EncodeStrategy : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("NONE")]
public static EncodeStrategy None { get; }
    [RegisterAttribute("SOURCE")]
public static EncodeStrategy Source { get; }
    [RegisterAttribute("TRANSFORMED")]
public static EncodeStrategy Transformed { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EncodeStrategy(IntPtr javaReference, JniHandleOwnership transfer);
    private static EncodeStrategy();
    public static EncodeStrategy get_None();
    public static EncodeStrategy get_Source();
    public static EncodeStrategy get_Transformed();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/load/EncodeStrategy;", "")]
public static EncodeStrategy ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/load/EncodeStrategy;", "")]
public static EncodeStrategy[] Values();
}
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool")]
public abstract class Bumptech.Glide.Load.Engine.BitmapRecycle.ArrayPool : Object {
    [RegisterAttribute("STANDARD_BUFFER_SIZE_BYTES")]
public static int StandardBufferSizeBytes;
}
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool")]
[ObsoleteAttribute("Use the 'ArrayPool' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Load.Engine.BitmapRecycle.ArrayPoolConsts : ArrayPool {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPool : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_offer_Lcom_bumptech_glide_load_engine_bitmap_recycle_Poolable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BaseKeyPool(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseKeyPool();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_Poolable_Handler();
    private static void n_Offer_Lcom_bumptech_glide_load_engine_bitmap_recycle_Poolable_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [NullableContextAttribute("2")]
[RegisterAttribute("offer", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/Poolable;)V", "GetOffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_Poolable_Handler")]
public virtual void Offer(Object key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/BaseKeyPool")]
internal class Bumptech.Glide.Load.Engine.BitmapRecycle.BaseKeyPoolInvoker : BaseKeyPool {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseKeyPoolInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseKeyPoolInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.BitmapPoolAdapter : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_get_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_getDirty_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_put_Landroid_graphics_Bitmap_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long MaxSize { get; }
    protected BitmapPoolAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static BitmapPoolAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler")]
public virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler")]
public virtual void ClearMemory();
    private static Delegate GetGet_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_Get_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("get", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGet_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual Bitmap Get(int width, int height, Config config);
    private static Delegate GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_GetDirty_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("getDirty", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual Bitmap GetDirty(int width, int height, Config config);
    private static Delegate GetPut_Landroid_graphics_Bitmap_Handler();
    private static void n_Put_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Landroid/graphics/Bitmap;)V", "GetPut_Landroid_graphics_Bitmap_Handler")]
public virtual void Put(Bitmap bitmap);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float sizeMultiplier);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler")]
public virtual void SetSizeMultiplier(float sizeMultiplier);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler")]
public virtual void TrimMemory(int level);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.ByteArrayAdapter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ElementSizeInBytes { get; }
    [NullableAttribute("2")]
public string Tag { get; }
    internal ByteArrayAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static ByteArrayAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getElementSizeInBytes", "()I", "")]
public int get_ElementSizeInBytes();
    [NullableContextAttribute("2")]
[RegisterAttribute("getTag", "()Ljava/lang/String;", "")]
public string get_Tag();
    [NullableContextAttribute("2")]
[RegisterAttribute("getArrayLength", "([B)I", "")]
public int GetArrayLength(Byte[] array);
    [NullableContextAttribute("2")]
[RegisterAttribute("newArray", "(I)[B", "")]
public Byte[] NewArray(int length);
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool", "", "Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker")]
public interface Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPool {
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void ClearMemory();
    [RegisterAttribute("get", "(ILjava/lang/Class;)Ljava/lang/Object;", "GetGet_ILjava_lang_Class_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual Object Get(int p0, Class p1);
    [RegisterAttribute("getExact", "(ILjava/lang/Class;)Ljava/lang/Object;", "GetGetExact_ILjava_lang_Class_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual Object GetExact(int p0, Class p1);
    [RegisterAttribute("put", "(Ljava/lang/Object;)V", "GetPut_Ljava_lang_Object_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Put(Object p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Class;)V", "GetPut_Ljava_lang_Object_Ljava_lang_Class_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Put(Object p0, Class p1);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void TrimMemory(int p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/ArrayPool")]
internal class Bumptech.Glide.Load.Engine.BitmapRecycle.IArrayPoolInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    private IntPtr id_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_get_ILjava_lang_Class_;
    private IntPtr id_get_ILjava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getExact_ILjava_lang_Class_;
    private IntPtr id_getExact_ILjava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Object_;
    private IntPtr id_put_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Object_Ljava_lang_Class_;
    private IntPtr id_put_Ljava_lang_Object_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    private IntPtr id_trimMemory_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IArrayPoolInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IArrayPoolInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IArrayPool GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearMemory();
    private static Delegate GetGet_ILjava_lang_Class_Handler();
    private static IntPtr n_Get_ILjava_lang_Class_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Get(int p0, Class p1);
    private static Delegate GetGetExact_ILjava_lang_Class_Handler();
    private static IntPtr n_GetExact_ILjava_lang_Class_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object GetExact(int p0, Class p1);
    private static Delegate GetPut_Ljava_lang_Object_Handler();
    private static void n_Put_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void Put(Object p0);
    [ObsoleteAttribute]
private static Delegate GetPut_Ljava_lang_Object_Ljava_lang_Class_Handler();
    [ObsoleteAttribute]
private static void n_Put_Ljava_lang_Object_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual void Put(Object p0, Class p1);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void TrimMemory(int p0);
}
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool", "", "Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker")]
public interface Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPool {
    public long MaxSize { get; }
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual long get_MaxSize();
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void ClearMemory();
    [NullableContextAttribute("1")]
[RegisterAttribute("get", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGet_IILandroid_graphics_Bitmap_Config_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual Bitmap Get(int p0, int p1, Config p2);
    [NullableContextAttribute("1")]
[RegisterAttribute("getDirty", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual Bitmap GetDirty(int p0, int p1, Config p2);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Landroid/graphics/Bitmap;)V", "GetPut_Landroid_graphics_Bitmap_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void Put(Bitmap p0);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void SetSizeMultiplier(float p0);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker, Xamarin.Android.Glide")]
public abstract virtual void TrimMemory(int p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/BitmapPool")]
internal class Bumptech.Glide.Load.Engine.BitmapRecycle.IBitmapPoolInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    private IntPtr id_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    private IntPtr id_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_get_IILandroid_graphics_Bitmap_Config_;
    private IntPtr id_get_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_getDirty_IILandroid_graphics_Bitmap_Config_;
    private IntPtr id_getDirty_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_put_Landroid_graphics_Bitmap_;
    private IntPtr id_put_Landroid_graphics_Bitmap_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    private IntPtr id_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    private IntPtr id_trimMemory_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long MaxSize { get; }
    public IBitmapPoolInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IBitmapPoolInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IBitmapPool GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearMemory();
    private static Delegate GetGet_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_Get_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual Bitmap Get(int p0, int p1, Config p2);
    private static Delegate GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_GetDirty_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual Bitmap GetDirty(int p0, int p1, Config p2);
    private static Delegate GetPut_Landroid_graphics_Bitmap_Handler();
    private static void n_Put_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void Put(Bitmap p0);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float p0);
    public sealed virtual void SetSizeMultiplier(float p0);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void TrimMemory(int p0);
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/LruPoolStrategy", "", "Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker")]
public interface Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategy {
    [RegisterAttribute("get", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGet_IILandroid_graphics_Bitmap_Config_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual Bitmap Get(int p0, int p1, Config p2);
    [RegisterAttribute("getSize", "(Landroid/graphics/Bitmap;)I", "GetGetSize_Landroid_graphics_Bitmap_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual int GetSize(Bitmap p0);
    [RegisterAttribute("logBitmap", "(Landroid/graphics/Bitmap;)Ljava/lang/String;", "GetLogBitmap_Landroid_graphics_Bitmap_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual string LogBitmap(Bitmap p0);
    [RegisterAttribute("logBitmap", "(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;", "GetLogBitmap_IILandroid_graphics_Bitmap_Config_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual string LogBitmap(int p0, int p1, Config p2);
    [RegisterAttribute("put", "(Landroid/graphics/Bitmap;)V", "GetPut_Landroid_graphics_Bitmap_Handler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual void Put(Bitmap p0);
    [RegisterAttribute("removeLast", "()Landroid/graphics/Bitmap;", "GetRemoveLastHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker, Xamarin.Android.Glide")]
public abstract virtual Bitmap RemoveLast();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/LruPoolStrategy")]
internal class Bumptech.Glide.Load.Engine.BitmapRecycle.ILruPoolStrategyInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_get_IILandroid_graphics_Bitmap_Config_;
    private IntPtr id_get_IILandroid_graphics_Bitmap_Config_;
    private static Delegate cb_getSize_Landroid_graphics_Bitmap_;
    private IntPtr id_getSize_Landroid_graphics_Bitmap_;
    private static Delegate cb_logBitmap_Landroid_graphics_Bitmap_;
    private IntPtr id_logBitmap_Landroid_graphics_Bitmap_;
    private static Delegate cb_logBitmap_IILandroid_graphics_Bitmap_Config_;
    private IntPtr id_logBitmap_IILandroid_graphics_Bitmap_Config_;
    private static Delegate cb_put_Landroid_graphics_Bitmap_;
    private IntPtr id_put_Landroid_graphics_Bitmap_;
    private static Delegate cb_removeLast;
    private IntPtr id_removeLast;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILruPoolStrategyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILruPoolStrategyInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ILruPoolStrategy GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGet_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_Get_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual Bitmap Get(int p0, int p1, Config p2);
    [NullableContextAttribute("1")]
private static Delegate GetGetSize_Landroid_graphics_Bitmap_Handler();
    private static int n_GetSize_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual int GetSize(Bitmap p0);
    [NullableContextAttribute("1")]
private static Delegate GetLogBitmap_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_LogBitmap_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual string LogBitmap(Bitmap p0);
    [NullableContextAttribute("1")]
private static Delegate GetLogBitmap_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_LogBitmap_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual string LogBitmap(int p0, int p1, Config p2);
    [NullableContextAttribute("1")]
private static Delegate GetPut_Landroid_graphics_Bitmap_Handler();
    private static void n_Put_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Put(Bitmap p0);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveLastHandler();
    private static IntPtr n_RemoveLast(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Bitmap RemoveLast();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.IntegerArrayAdapter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ElementSizeInBytes { get; }
    [NullableAttribute("2")]
public string Tag { get; }
    internal IntegerArrayAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static IntegerArrayAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getElementSizeInBytes", "()I", "")]
public int get_ElementSizeInBytes();
    [NullableContextAttribute("2")]
[RegisterAttribute("getTag", "()Ljava/lang/String;", "")]
public string get_Tag();
    [NullableContextAttribute("2")]
[RegisterAttribute("getArrayLength", "([I)I", "")]
public int GetArrayLength(Int32[] array);
    [NullableContextAttribute("2")]
[RegisterAttribute("newArray", "(I)[I", "")]
public Int32[] NewArray(int length);
}
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/Poolable", "", "Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolableInvoker")]
public interface Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolable {
    [RegisterAttribute("offer", "()V", "GetOfferHandler:Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolableInvoker, Xamarin.Android.Glide")]
public abstract virtual void Offer();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/Poolable")]
internal class Bumptech.Glide.Load.Engine.BitmapRecycle.IPoolableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_offer;
    private IntPtr id_offer;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IPoolableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IPoolableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IPoolable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOfferHandler();
    private static void n_Offer(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Offer();
}
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.LruArrayPool : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LruArrayPool(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public LruArrayPool(int maxSize);
    private static LruArrayPool();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("clearMemory", "()V", "")]
public sealed virtual void ClearMemory();
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(ILjava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual Object Get(int size, Class arrayClass);
    [NullableContextAttribute("2")]
[RegisterAttribute("getExact", "(ILjava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual Object GetExact(int size, Class arrayClass);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Ljava/lang/Object;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual void Put(Object array);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Class;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual void Put(Object array, Class arrayClass);
    [RegisterAttribute("trimMemory", "(I)V", "")]
public sealed virtual void TrimMemory(int level);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.LruBitmapPool : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getCurrentSize;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_evictionCount;
    [NullableAttribute("2")]
private static Delegate cb_get_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_getDirty_IILandroid_graphics_Bitmap_Config_;
    [NullableAttribute("2")]
private static Delegate cb_hitCount;
    [NullableAttribute("2")]
private static Delegate cb_missCount;
    [NullableAttribute("2")]
private static Delegate cb_put_Landroid_graphics_Bitmap_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long CurrentSize { get; }
    public long MaxSize { get; }
    protected LruBitmapPool(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(J)V", "")]
public LruBitmapPool(long maxSize);
    [RegisterAttribute(".ctor", "(JLjava/util/Set;)V", "")]
public LruBitmapPool(long maxSize, ICollection`1<Config> allowedConfigs);
    private static LruBitmapPool();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurrentSizeHandler();
    private static long n_GetCurrentSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentSize", "()J", "GetGetCurrentSizeHandler")]
public virtual long get_CurrentSize();
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler")]
public virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler")]
public virtual void ClearMemory();
    private static Delegate GetEvictionCountHandler();
    private static long n_EvictionCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("evictionCount", "()J", "GetEvictionCountHandler")]
public virtual long EvictionCount();
    private static Delegate GetGet_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_Get_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("get", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGet_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual Bitmap Get(int width, int height, Config config);
    private static Delegate GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_GetDirty_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("getDirty", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGetDirty_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual Bitmap GetDirty(int width, int height, Config config);
    private static Delegate GetHitCountHandler();
    private static long n_HitCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hitCount", "()J", "GetHitCountHandler")]
public virtual long HitCount();
    private static Delegate GetMissCountHandler();
    private static long n_MissCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("missCount", "()J", "GetMissCountHandler")]
public virtual long MissCount();
    private static Delegate GetPut_Landroid_graphics_Bitmap_Handler();
    private static void n_Put_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Landroid/graphics/Bitmap;)V", "GetPut_Landroid_graphics_Bitmap_Handler")]
public virtual void Put(Bitmap bitmap);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float sizeMultiplier);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler")]
public virtual void SetSizeMultiplier(float sizeMultiplier);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler")]
public virtual void TrimMemory(int level);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy")]
public class Bumptech.Glide.Load.Engine.BitmapRecycle.SizeConfigStrategy : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_get_IILandroid_graphics_Bitmap_Config_;
    private static Delegate cb_getSize_Landroid_graphics_Bitmap_;
    private static Delegate cb_logBitmap_Landroid_graphics_Bitmap_;
    private static Delegate cb_logBitmap_IILandroid_graphics_Bitmap_Config_;
    private static Delegate cb_put_Landroid_graphics_Bitmap_;
    private static Delegate cb_removeLast;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SizeConfigStrategy(IntPtr javaReference, JniHandleOwnership transfer);
    private static SizeConfigStrategy();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGet_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_Get_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("get", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "GetGet_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual Bitmap Get(int width, int height, Config config);
    [NullableContextAttribute("1")]
private static Delegate GetGetSize_Landroid_graphics_Bitmap_Handler();
    private static int n_GetSize_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("getSize", "(Landroid/graphics/Bitmap;)I", "GetGetSize_Landroid_graphics_Bitmap_Handler")]
public virtual int GetSize(Bitmap bitmap);
    [NullableContextAttribute("1")]
private static Delegate GetLogBitmap_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_LogBitmap_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("logBitmap", "(Landroid/graphics/Bitmap;)Ljava/lang/String;", "GetLogBitmap_Landroid_graphics_Bitmap_Handler")]
public virtual string LogBitmap(Bitmap bitmap);
    [NullableContextAttribute("1")]
private static Delegate GetLogBitmap_IILandroid_graphics_Bitmap_Config_Handler();
    private static IntPtr n_LogBitmap_IILandroid_graphics_Bitmap_Config_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_config);
    [RegisterAttribute("logBitmap", "(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;", "GetLogBitmap_IILandroid_graphics_Bitmap_Config_Handler")]
public virtual string LogBitmap(int width, int height, Config config);
    [NullableContextAttribute("1")]
private static Delegate GetPut_Landroid_graphics_Bitmap_Handler();
    private static void n_Put_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("put", "(Landroid/graphics/Bitmap;)V", "GetPut_Landroid_graphics_Bitmap_Handler")]
public virtual void Put(Bitmap bitmap);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveLastHandler();
    private static IntPtr n_RemoveLast(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeLast", "()Landroid/graphics/Bitmap;", "GetRemoveLastHandler")]
public virtual Bitmap RemoveLast();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCacheAdapter")]
public class Bumptech.Glide.Load.Engine.Cache.DiskCacheAdapter : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_clear;
    [NullableAttribute("2")]
private static Delegate cb_delete_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DiskCacheAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static DiskCacheAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetDelete_Lcom_bumptech_glide_load_Key_Handler();
    private static void n_Delete_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [NullableContextAttribute("2")]
[RegisterAttribute("delete", "(Lcom/bumptech/glide/load/Key;)V", "GetDelete_Lcom_bumptech_glide_load_Key_Handler")]
public virtual void Delete(IKey key);
    private static Delegate GetGet_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Get_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(Lcom/bumptech/glide/load/Key;)Ljava/io/File;", "GetGet_Lcom_bumptech_glide_load_Key_Handler")]
public virtual File Get(IKey key);
    private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler();
    private static void n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_writer);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler")]
public virtual void Put(IKey key, IDiskCacheWriter writer);
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Factory")]
public abstract class Bumptech.Glide.Load.Engine.Cache.DiskCacheFactory : Object {
    [NullableAttribute("1")]
[RegisterAttribute("DEFAULT_DISK_CACHE_DIR")]
public static string DefaultDiskCacheDir;
    [RegisterAttribute("DEFAULT_DISK_CACHE_SIZE")]
public static int DefaultDiskCacheSize;
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Factory")]
[ObsoleteAttribute("Use the 'DiskCacheFactory' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Load.Engine.Cache.DiskCacheFactoryConsts : DiskCacheFactory {
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskLruCacheFactory")]
public class Bumptech.Glide.Load.Engine.Cache.DiskLruCacheFactory : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DiskLruCacheFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/cache/DiskLruCacheFactory$CacheDirectoryGetter;J)V", "")]
public DiskLruCacheFactory(ICacheDirectoryGetter cacheDirectoryGetter, long diskCacheSize);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/String;J)V", "")]
public DiskLruCacheFactory(string diskCacheFolder, string diskCacheName, long diskCacheSize);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;J)V", "")]
public DiskLruCacheFactory(string diskCacheFolder, long diskCacheSize);
    private static DiskLruCacheFactory();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetBuildHandler();
    private static IntPtr n_Build(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "()Lcom/bumptech/glide/load/engine/cache/DiskCache;", "GetBuildHandler")]
public virtual IDiskCache Build();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskLruCacheWrapper")]
public class Bumptech.Glide.Load.Engine.Cache.DiskLruCacheWrapper : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_clear;
    private static Delegate cb_delete_Lcom_bumptech_glide_load_Key_;
    private static Delegate cb_get_Lcom_bumptech_glide_load_Key_;
    private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DiskLruCacheWrapper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/File;J)V", "")]
[ObsoleteAttribute("deprecated")]
protected DiskLruCacheWrapper(File directory, long maxSize);
    private static DiskLruCacheWrapper();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    [RegisterAttribute("create", "(Ljava/io/File;J)Lcom/bumptech/glide/load/engine/cache/DiskCache;", "")]
public static IDiskCache Create(File directory, long maxSize);
    [NullableContextAttribute("1")]
private static Delegate GetDelete_Lcom_bumptech_glide_load_Key_Handler();
    private static void n_Delete_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("delete", "(Lcom/bumptech/glide/load/Key;)V", "GetDelete_Lcom_bumptech_glide_load_Key_Handler")]
public virtual void Delete(IKey key);
    [NullableContextAttribute("1")]
private static Delegate GetGet_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Get_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("get", "(Lcom/bumptech/glide/load/Key;)Ljava/io/File;", "GetGet_Lcom_bumptech_glide_load_Key_Handler")]
public virtual File Get(IKey key);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("get", "(Ljava/io/File;J)Lcom/bumptech/glide/load/engine/cache/DiskCache;", "")]
public static IDiskCache Get(File directory, long maxSize);
    [NullableContextAttribute("1")]
private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler();
    private static void n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_writer);
    [RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler")]
public virtual void Put(IKey key, IDiskCacheWriter writer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/ExternalCacheDiskCacheFactory")]
public class Bumptech.Glide.Load.Engine.Cache.ExternalCacheDiskCacheFactory : DiskLruCacheFactory {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExternalCacheDiskCacheFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ExternalCacheDiskCacheFactory(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public ExternalCacheDiskCacheFactory(Context context, int diskCacheSize);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;I)V", "")]
public ExternalCacheDiskCacheFactory(Context context, string diskCacheName, int diskCacheSize);
    private static ExternalCacheDiskCacheFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/ExternalPreferredCacheDiskCacheFactory")]
public class Bumptech.Glide.Load.Engine.Cache.ExternalPreferredCacheDiskCacheFactory : DiskLruCacheFactory {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExternalPreferredCacheDiskCacheFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ExternalPreferredCacheDiskCacheFactory(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;J)V", "")]
public ExternalPreferredCacheDiskCacheFactory(Context context, string diskCacheName, long diskCacheSize);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;J)V", "")]
public ExternalPreferredCacheDiskCacheFactory(Context context, long diskCacheSize);
    private static ExternalPreferredCacheDiskCacheFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache", "", "Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker")]
public interface Bumptech.Glide.Load.Engine.Cache.IDiskCache {
    [RegisterAttribute("clear", "()V", "GetClearHandler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void Clear();
    [NullableContextAttribute("2")]
[RegisterAttribute("delete", "(Lcom/bumptech/glide/load/Key;)V", "GetDelete_Lcom_bumptech_glide_load_Key_Handler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void Delete(IKey p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(Lcom/bumptech/glide/load/Key;)Ljava/io/File;", "GetGet_Lcom_bumptech_glide_load_Key_Handler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual File Get(IKey p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void Put(IKey p0, IDiskCacheWriter p1);
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Factory", "", "Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactoryInvoker")]
public interface Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactory {
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "()Lcom/bumptech/glide/load/engine/cache/DiskCache;", "GetBuildHandler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual IDiskCache Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Factory")]
internal class Bumptech.Glide.Load.Engine.Cache.IDiskCacheFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_build;
    private IntPtr id_build;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDiskCacheFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDiskCacheFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDiskCacheFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuildHandler();
    private static IntPtr n_Build(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IDiskCache Build();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache")]
internal class Bumptech.Glide.Load.Engine.Cache.IDiskCacheInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_clear;
    private IntPtr id_clear;
    [NullableAttribute("2")]
private static Delegate cb_delete_Lcom_bumptech_glide_load_Key_;
    private IntPtr id_delete_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lcom_bumptech_glide_load_Key_;
    private IntPtr id_get_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_;
    private IntPtr id_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDiskCacheInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDiskCacheInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDiskCache GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    private static Delegate GetDelete_Lcom_bumptech_glide_load_Key_Handler();
    private static void n_Delete_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void Delete(IKey p0);
    private static Delegate GetGet_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Get_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual File Get(IKey p0);
    private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_Handler();
    private static void n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_cache_DiskCache_Writer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual void Put(IKey p0, IDiskCacheWriter p1);
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Writer", "", "Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriterInvoker")]
public interface Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriter {
    [NullableContextAttribute("1")]
[RegisterAttribute("write", "(Ljava/io/File;)Z", "GetWrite_Ljava_io_File_Handler:Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriterInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Write(File p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/DiskCache$Writer")]
internal class Bumptech.Glide.Load.Engine.Cache.IDiskCacheWriterInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_write_Ljava_io_File_;
    private IntPtr id_write_Ljava_io_File_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDiskCacheWriterInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDiskCacheWriterInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDiskCacheWriter GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetWrite_Ljava_io_File_Handler();
    private static bool n_Write_Ljava_io_File_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool Write(File p0);
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemoryCache", "", "Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker")]
public interface Bumptech.Glide.Load.Engine.Cache.IMemoryCache {
    public long CurrentSize { get; }
    public long MaxSize { get; }
    [RegisterAttribute("getCurrentSize", "()J", "GetGetCurrentSizeHandler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual long get_CurrentSize();
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual long get_MaxSize();
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void ClearMemory();
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual IResource Put(IKey p0, IResource p1);
    [NullableContextAttribute("1")]
[RegisterAttribute("remove", "(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;", "GetRemove_Lcom_bumptech_glide_load_Key_Handler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual IResource Remove(IKey p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("setResourceRemovedListener", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V", "GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void SetResourceRemovedListener(IMemoryCacheResourceRemovedListener p0);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void SetSizeMultiplier(float p0);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker, Xamarin.Android.Glide")]
public abstract virtual void TrimMemory(int p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemoryCache")]
internal class Bumptech.Glide.Load.Engine.Cache.IMemoryCacheInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getCurrentSize;
    private IntPtr id_getCurrentSize;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    private IntPtr id_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    private IntPtr id_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_;
    private IntPtr id_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_remove_Lcom_bumptech_glide_load_Key_;
    private IntPtr id_remove_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_setResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_;
    private IntPtr id_setResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    private IntPtr id_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    private IntPtr id_trimMemory_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long CurrentSize { get; }
    public long MaxSize { get; }
    public IMemoryCacheInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMemoryCacheInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMemoryCache GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCurrentSizeHandler();
    private static long n_GetCurrentSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual long get_CurrentSize();
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearMemory();
    private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static IntPtr n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual IResource Put(IKey p0, IResource p1);
    private static Delegate GetRemove_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Remove_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual IResource Remove(IKey p0);
    private static Delegate GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler();
    private static void n_SetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetResourceRemovedListener(IMemoryCacheResourceRemovedListener p0);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float p0);
    public sealed virtual void SetSizeMultiplier(float p0);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void TrimMemory(int p0);
}
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener", "", "Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListenerInvoker")]
public interface Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListener {
    [NullableContextAttribute("1")]
[RegisterAttribute("onResourceRemoved", "(Lcom/bumptech/glide/load/engine/Resource;)V", "GetOnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_Handler:Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnResourceRemoved(IResource p0);
}
[RegisterAttribute("mono/com/bumptech/glide/load/engine/cache/MemoryCache_ResourceRemovedListenerImplementor")]
internal class Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<MemoryCacheResourceRemovedEventArgs> Handler;
    [NullableContextAttribute("1")]
public IMemoryCacheResourceRemovedListenerImplementor(object sender);
    [NullableContextAttribute("1")]
public sealed virtual void OnResourceRemoved(IResource p0);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IMemoryCacheResourceRemovedListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener")]
internal class Bumptech.Glide.Load.Engine.Cache.IMemoryCacheResourceRemovedListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_;
    private IntPtr id_onResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IMemoryCacheResourceRemovedListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMemoryCacheResourceRemovedListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMemoryCacheResourceRemovedListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static void n_OnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnResourceRemoved(IResource p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory")]
public class Bumptech.Glide.Load.Engine.Cache.InternalCacheDiskCacheFactory : DiskLruCacheFactory {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InternalCacheDiskCacheFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public InternalCacheDiskCacheFactory(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;J)V", "")]
public InternalCacheDiskCacheFactory(Context context, string diskCacheName, long diskCacheSize);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;J)V", "")]
public InternalCacheDiskCacheFactory(Context context, long diskCacheSize);
    private static InternalCacheDiskCacheFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/LruResourceCache")]
public class Bumptech.Glide.Load.Engine.Cache.LruResourceCache : LruCache {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_onItemEvicted_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_remove_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_setResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetResourceRemovedListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LruResourceCache(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(J)V", "")]
public LruResourceCache(long size);
    private static LruResourceCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSize_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static int n_GetSize_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_item);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSize", "(Lcom/bumptech/glide/load/engine/Resource;)I", "GetGetSize_Lcom_bumptech_glide_load_engine_Resource_Handler")]
protected virtual int GetSize(IResource item);
    private static Delegate GetOnItemEvicted_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static void n_OnItemEvicted_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_item);
    [RegisterAttribute("onItemEvicted", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V", "GetOnItemEvicted_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler")]
protected virtual void OnItemEvicted(IKey key, IResource item);
    private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static IntPtr n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler")]
public virtual IResource Put(IKey p0, IResource p1);
    private static Delegate GetRemove_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Remove_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("remove", "(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;", "GetRemove_Lcom_bumptech_glide_load_Key_Handler")]
public virtual IResource Remove(IKey p0);
    private static Delegate GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler();
    private static void n_SetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setResourceRemovedListener", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V", "GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler")]
public virtual void SetResourceRemovedListener(IMemoryCacheResourceRemovedListener listener);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler")]
public virtual void TrimMemory(int level);
    public void add_ResourceRemoved(EventHandler`1<MemoryCacheResourceRemovedEventArgs> value);
    public void remove_ResourceRemoved(EventHandler`1<MemoryCacheResourceRemovedEventArgs> value);
    private IMemoryCacheResourceRemovedListenerImplementor __CreateIMemoryCacheResourceRemovedListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemoryCacheAdapter")]
public class Bumptech.Glide.Load.Engine.Cache.MemoryCacheAdapter : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getCurrentSize;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_remove_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_setResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimMemory_I;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetResourceRemovedListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long CurrentSize { get; }
    public long MaxSize { get; }
    protected MemoryCacheAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static MemoryCacheAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurrentSizeHandler();
    private static long n_GetCurrentSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentSize", "()J", "GetGetCurrentSizeHandler")]
public virtual long get_CurrentSize();
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler")]
public virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler")]
public virtual void ClearMemory();
    private static Delegate GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static IntPtr n_Put_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;", "GetPut_Lcom_bumptech_glide_load_Key_Lcom_bumptech_glide_load_engine_Resource_Handler")]
public virtual IResource Put(IKey key, IResource resource);
    private static Delegate GetRemove_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Remove_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("remove", "(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;", "GetRemove_Lcom_bumptech_glide_load_Key_Handler")]
public virtual IResource Remove(IKey key);
    private static Delegate GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler();
    private static void n_SetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setResourceRemovedListener", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V", "GetSetResourceRemovedListener_Lcom_bumptech_glide_load_engine_cache_MemoryCache_ResourceRemovedListener_Handler")]
public virtual void SetResourceRemovedListener(IMemoryCacheResourceRemovedListener listener);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float multiplier);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler")]
public virtual void SetSizeMultiplier(float multiplier);
    private static Delegate GetTrimMemory_IHandler();
    private static void n_TrimMemory_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("trimMemory", "(I)V", "GetTrimMemory_IHandler")]
public virtual void TrimMemory(int level);
    public void add_ResourceRemoved(EventHandler`1<MemoryCacheResourceRemovedEventArgs> value);
    public void remove_ResourceRemoved(EventHandler`1<MemoryCacheResourceRemovedEventArgs> value);
    private IMemoryCacheResourceRemovedListenerImplementor __CreateIMemoryCacheResourceRemovedListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Bumptech.Glide.Load.Engine.Cache.MemoryCacheResourceRemovedEventArgs : EventArgs {
    private IResource p0;
    public IResource P0 { get; }
    public MemoryCacheResourceRemovedEventArgs(IResource p0);
    public IResource get_P0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/MemorySizeCalculator")]
public class Bumptech.Glide.Load.Engine.Cache.MemorySizeCalculator : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ArrayPoolSizeInBytes { get; }
    public int BitmapPoolSize { get; }
    public int MemoryCacheSize { get; }
    internal MemorySizeCalculator(IntPtr javaReference, JniHandleOwnership transfer);
    private static MemorySizeCalculator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getArrayPoolSizeInBytes", "()I", "")]
public int get_ArrayPoolSizeInBytes();
    [RegisterAttribute("getBitmapPoolSize", "()I", "")]
public int get_BitmapPoolSize();
    [RegisterAttribute("getMemoryCacheSize", "()I", "")]
public int get_MemoryCacheSize();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/cache/SafeKeyGenerator")]
public class Bumptech.Glide.Load.Engine.Cache.SafeKeyGenerator : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getSafeKey_Lcom_bumptech_glide_load_Key_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SafeKeyGenerator(IntPtr javaReference, JniHandleOwnership transfer);
    private static SafeKeyGenerator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSafeKey_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_GetSafeKey_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSafeKey", "(Lcom/bumptech/glide/load/Key;)Ljava/lang/String;", "GetGetSafeKey_Lcom_bumptech_glide_load_Key_Handler")]
public virtual string GetSafeKey(IKey key);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/DecodePath")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Engine.DecodePath : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DecodePath(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Landroidx/core/util/Pools$Pool;)V", "")]
public DecodePath(Class dataClass, Class resourceClass, Class transcodeClass, IList decoders, IResourceTranscoder transcoder, IPool listPool);
    private static DecodePath();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/DiskCacheStrategy")]
public abstract class Bumptech.Glide.Load.Engine.DiskCacheStrategy : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_decodeCachedData;
    private static Delegate cb_decodeCachedResource;
    private static Delegate cb_isDataCacheable_Lcom_bumptech_glide_load_DataSource_;
    private static Delegate cb_isResourceCacheable_ZLcom_bumptech_glide_load_DataSource_Lcom_bumptech_glide_load_EncodeStrategy_;
    [RegisterAttribute("ALL")]
public static DiskCacheStrategy All { get; }
    [RegisterAttribute("AUTOMATIC")]
public static DiskCacheStrategy Automatic { get; }
    [RegisterAttribute("DATA")]
public static DiskCacheStrategy Data { get; }
    [RegisterAttribute("NONE")]
public static DiskCacheStrategy None { get; }
    [RegisterAttribute("RESOURCE")]
public static DiskCacheStrategy Resource { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DiskCacheStrategy(IntPtr javaReference, JniHandleOwnership transfer);
    private static DiskCacheStrategy();
    public static DiskCacheStrategy get_All();
    public static DiskCacheStrategy get_Automatic();
    public static DiskCacheStrategy get_Data();
    public static DiskCacheStrategy get_None();
    public static DiskCacheStrategy get_Resource();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetDecodeCachedDataHandler();
    private static bool n_DecodeCachedData(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("decodeCachedData", "()Z", "GetDecodeCachedDataHandler")]
public abstract virtual bool DecodeCachedData();
    [NullableContextAttribute("1")]
private static Delegate GetDecodeCachedResourceHandler();
    private static bool n_DecodeCachedResource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("decodeCachedResource", "()Z", "GetDecodeCachedResourceHandler")]
public abstract virtual bool DecodeCachedResource();
    [NullableContextAttribute("1")]
private static Delegate GetIsDataCacheable_Lcom_bumptech_glide_load_DataSource_Handler();
    private static bool n_IsDataCacheable_Lcom_bumptech_glide_load_DataSource_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("isDataCacheable", "(Lcom/bumptech/glide/load/DataSource;)Z", "GetIsDataCacheable_Lcom_bumptech_glide_load_DataSource_Handler")]
public abstract virtual bool IsDataCacheable(DataSource p0);
    [NullableContextAttribute("1")]
private static Delegate GetIsResourceCacheable_ZLcom_bumptech_glide_load_DataSource_Lcom_bumptech_glide_load_EncodeStrategy_Handler();
    private static bool n_IsResourceCacheable_ZLcom_bumptech_glide_load_DataSource_Lcom_bumptech_glide_load_EncodeStrategy_(IntPtr jnienv, IntPtr native__this, bool p0, IntPtr native_p1, IntPtr native_p2);
    [RegisterAttribute("isResourceCacheable", "(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z", "GetIsResourceCacheable_ZLcom_bumptech_glide_load_DataSource_Lcom_bumptech_glide_load_EncodeStrategy_Handler")]
public abstract virtual bool IsResourceCacheable(bool p0, DataSource p1, EncodeStrategy p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/DiskCacheStrategy")]
internal class Bumptech.Glide.Load.Engine.DiskCacheStrategyInvoker : DiskCacheStrategy {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DiskCacheStrategyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static DiskCacheStrategyInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decodeCachedData", "()Z", "GetDecodeCachedDataHandler")]
public virtual bool DecodeCachedData();
    [RegisterAttribute("decodeCachedResource", "()Z", "GetDecodeCachedResourceHandler")]
public virtual bool DecodeCachedResource();
    [NullableContextAttribute("2")]
[RegisterAttribute("isDataCacheable", "(Lcom/bumptech/glide/load/DataSource;)Z", "GetIsDataCacheable_Lcom_bumptech_glide_load_DataSource_Handler")]
public virtual bool IsDataCacheable(DataSource p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("isResourceCacheable", "(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z", "GetIsResourceCacheable_ZLcom_bumptech_glide_load_DataSource_Lcom_bumptech_glide_load_EncodeStrategy_Handler")]
public virtual bool IsResourceCacheable(bool p0, DataSource p1, EncodeStrategy p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/Engine")]
public class Bumptech.Glide.Load.Engine.Engine : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_clearDiskCache;
    [NullableAttribute("2")]
private static Delegate cb_load_Lcom_bumptech_glide_GlideContext_Ljava_lang_Object_Lcom_bumptech_glide_load_Key_IILjava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Ljava_util_Map_ZZLcom_bumptech_glide_load_Options_ZZZZLcom_bumptech_glide_request_ResourceCallback_Ljava_util_concurrent_Executor_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_release_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_shutdown;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Engine(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Z)V", "")]
public Engine(IMemoryCache memoryCache, IDiskCacheFactory diskCacheFactory, GlideExecutor diskCacheExecutor, GlideExecutor sourceExecutor, GlideExecutor sourceUnlimitedExecutor, GlideExecutor animationExecutor, bool isActiveResourceRetentionAllowed);
    private static Engine();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetClearDiskCacheHandler();
    private static void n_ClearDiskCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearDiskCache", "()V", "GetClearDiskCacheHandler")]
public virtual void ClearDiskCache();
    private static Delegate GetLoad_Lcom_bumptech_glide_GlideContext_Ljava_lang_Object_Lcom_bumptech_glide_load_Key_IILjava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Ljava_util_Map_ZZLcom_bumptech_glide_load_Options_ZZZZLcom_bumptech_glide_request_ResourceCallback_Ljava_util_concurrent_Executor_Handler();
    private static IntPtr n_Load_Lcom_bumptech_glide_GlideContext_Ljava_lang_Object_Lcom_bumptech_glide_load_Key_IILjava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Ljava_util_Map_ZZLcom_bumptech_glide_load_Options_ZZZZLcom_bumptech_glide_request_ResourceCallback_Ljava_util_concurrent_Executor_(IntPtr jnienv, IntPtr native__this, IntPtr native_glideContext, IntPtr native_model, IntPtr native_signature, int width, int height, IntPtr native_resourceClass, IntPtr native_transcodeClass, IntPtr native_priority, IntPtr native_diskCacheStrategy, IntPtr native_transformations, bool isTransformationRequired, bool isScaleOnlyOrNoTransform, IntPtr native_options, bool isMemoryCacheable, bool useUnlimitedSourceExecutorPool, bool useAnimationPool, bool onlyRetrieveFromCache, IntPtr native_cb, IntPtr native_callbackExecutor);
    [NullableContextAttribute("2")]
[RegisterAttribute("load", "(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/util/Map;ZZLcom/bumptech/glide/load/Options;ZZZZLcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/Engine$LoadStatus;", "GetLoad_Lcom_bumptech_glide_GlideContext_Ljava_lang_Object_Lcom_bumptech_glide_load_Key_IILjava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_Priority_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Ljava_util_Map_ZZLcom_bumptech_glide_load_Options_ZZZZLcom_bumptech_glide_request_ResourceCallback_Ljava_util_concurrent_Executor_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual LoadStatus Load(GlideContext glideContext, Object model, IKey signature, int width, int height, Class resourceClass, Class transcodeClass, Priority priority, DiskCacheStrategy diskCacheStrategy, IDictionary`2<Class, ITransformation> transformations, bool isTransformationRequired, bool isScaleOnlyOrNoTransform, Options options, bool isMemoryCacheable, bool useUnlimitedSourceExecutorPool, bool useAnimationPool, bool onlyRetrieveFromCache, IResourceCallback cb, IExecutor callbackExecutor);
    private static Delegate GetOnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static void n_OnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [RegisterAttribute("onResourceRemoved", "(Lcom/bumptech/glide/load/engine/Resource;)V", "GetOnResourceRemoved_Lcom_bumptech_glide_load_engine_Resource_Handler")]
public virtual void OnResourceRemoved(IResource resource);
    private static Delegate GetRelease_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static void n_Release_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("release", "(Lcom/bumptech/glide/load/engine/Resource;)V", "GetRelease_Lcom_bumptech_glide_load_engine_Resource_Handler")]
public virtual void Release(IResource resource);
    private static Delegate GetShutdownHandler();
    private static void n_Shutdown(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("shutdown", "()V", "GetShutdownHandler")]
public virtual void Shutdown();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/executor/GlideExecutor")]
public class Bumptech.Glide.Load.Engine.Executor.GlideExecutor : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsShutdown { get; }
    public bool IsTerminated { get; }
    internal GlideExecutor(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlideExecutor();
    private sealed virtual override IList Java.Util.Concurrent.IExecutorService.InvokeAll(ICollection tasks);
    private sealed virtual override IList Java.Util.Concurrent.IExecutorService.InvokeAll(ICollection tasks, long timeout, TimeUnit unit);
    private sealed virtual override Object Java.Util.Concurrent.IExecutorService.InvokeAny(ICollection tasks);
    private sealed virtual override Object Java.Util.Concurrent.IExecutorService.InvokeAny(ICollection tasks, long timeout, TimeUnit unit);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isShutdown", "()Z", "")]
public sealed virtual bool get_IsShutdown();
    [RegisterAttribute("isTerminated", "()Z", "")]
public sealed virtual bool get_IsTerminated();
    [RegisterAttribute("awaitTermination", "(JLjava/util/concurrent/TimeUnit;)Z", "")]
public sealed virtual bool AwaitTermination(long timeout, TimeUnit unit);
    [RegisterAttribute("calculateBestThreadCount", "()I", "")]
public static int CalculateBestThreadCount();
    [RegisterAttribute("execute", "(Ljava/lang/Runnable;)V", "")]
public sealed virtual void Execute(IRunnable command);
    [RegisterAttribute("invokeAll", "(Ljava/util/Collection;)Ljava/util/List;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<IFuture> InvokeAll(ICollection`1<ICallable> tasks);
    [RegisterAttribute("invokeAll", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/util/List;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<IFuture> InvokeAll(ICollection`1<ICallable> tasks, long timeout, TimeUnit unit);
    [RegisterAttribute("invokeAny", "(Ljava/util/Collection;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object InvokeAny(ICollection`1<ICallable> tasks);
    [RegisterAttribute("invokeAny", "(Ljava/util/Collection;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object InvokeAny(ICollection`1<ICallable> tasks, long timeout, TimeUnit unit);
    [NullableContextAttribute("2")]
[RegisterAttribute("newAnimationBuilder", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;", "")]
public static Builder NewAnimationBuilder();
    [NullableContextAttribute("2")]
[RegisterAttribute("newAnimationExecutor", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewAnimationExecutor();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newAnimationExecutor", "(ILcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewAnimationExecutor(int threadCount, IUncaughtThrowableStrategy uncaughtThrowableStrategy);
    [NullableContextAttribute("2")]
[RegisterAttribute("newDiskCacheBuilder", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;", "")]
public static Builder NewDiskCacheBuilder();
    [NullableContextAttribute("2")]
[RegisterAttribute("newDiskCacheExecutor", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewDiskCacheExecutor();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newDiskCacheExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewDiskCacheExecutor(IUncaughtThrowableStrategy uncaughtThrowableStrategy);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newDiskCacheExecutor", "(ILjava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewDiskCacheExecutor(int threadCount, string name, IUncaughtThrowableStrategy uncaughtThrowableStrategy);
    [NullableContextAttribute("2")]
[RegisterAttribute("newSourceBuilder", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor$Builder;", "")]
public static Builder NewSourceBuilder();
    [NullableContextAttribute("2")]
[RegisterAttribute("newSourceExecutor", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewSourceExecutor();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newSourceExecutor", "(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewSourceExecutor(IUncaughtThrowableStrategy uncaughtThrowableStrategy);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newSourceExecutor", "(ILjava/lang/String;Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;)Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewSourceExecutor(int threadCount, string name, IUncaughtThrowableStrategy uncaughtThrowableStrategy);
    [NullableContextAttribute("2")]
[RegisterAttribute("newUnlimitedSourceExecutor", "()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;", "")]
public static GlideExecutor NewUnlimitedSourceExecutor();
    [RegisterAttribute("shutdown", "()V", "")]
public sealed virtual void Shutdown();
    [RegisterAttribute("shutdownNow", "()Ljava/util/List;", "")]
public sealed virtual IList`1<IRunnable> ShutdownNow();
    [RegisterAttribute("submit", "(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;", "")]
public sealed virtual IFuture Submit(IRunnable task);
    [RegisterAttribute("submit", "(Ljava/lang/Runnable;Ljava/lang/Object;)Ljava/util/concurrent/Future;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual IFuture Submit(IRunnable task, Object result);
    [RegisterAttribute("submit", "(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual IFuture Submit(ICallable task);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/GlideException")]
public class Bumptech.Glide.Load.Engine.GlideException : Exception {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<Throwable> Causes { get; }
    public Exception Origin { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<Throwable> RootCauses { get; }
    internal GlideException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public GlideException(string message);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public GlideException(string detailMessage, Throwable cause);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/util/List;)V", "")]
public GlideException(string detailMessage, IList`1<Throwable> causes);
    private static GlideException();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCauses", "()Ljava/util/List;", "")]
public IList`1<Throwable> get_Causes();
    [RegisterAttribute("getOrigin", "()Ljava/lang/Exception;", "")]
public Exception get_Origin();
    [RegisterAttribute("setOrigin", "(Ljava/lang/Exception;)V", "")]
public void set_Origin(Exception value);
    [RegisterAttribute("getRootCauses", "()Ljava/util/List;", "")]
public IList`1<Throwable> get_RootCauses();
    [RegisterAttribute("logRootCauses", "(Ljava/lang/String;)V", "")]
public void LogRootCauses(string tag);
}
[RegisterAttribute("com/bumptech/glide/load/engine/Initializable", "", "Bumptech.Glide.Load.Engine.IInitializableInvoker")]
public interface Bumptech.Glide.Load.Engine.IInitializable {
    [RegisterAttribute("initialize", "()V", "GetInitializeHandler:Bumptech.Glide.Load.Engine.IInitializableInvoker, Xamarin.Android.Glide")]
public abstract virtual void Initialize();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/Initializable")]
internal class Bumptech.Glide.Load.Engine.IInitializableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_initialize;
    private IntPtr id_initialize;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IInitializableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IInitializableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IInitializable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetInitializeHandler();
    private static void n_Initialize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Initialize();
}
[RegisterAttribute("com/bumptech/glide/load/engine/Resource", "", "Bumptech.Glide.Load.Engine.IResourceInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Engine.IResource {
    [NullableAttribute("1")]
public Class ResourceClass { get; }
    public int Size { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler:Bumptech.Glide.Load.Engine.IResourceInvoker, Xamarin.Android.Glide")]
public abstract virtual Class get_ResourceClass();
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler:Bumptech.Glide.Load.Engine.IResourceInvoker, Xamarin.Android.Glide")]
public abstract virtual int get_Size();
    [NullableContextAttribute("1")]
[RegisterAttribute("get", "()Ljava/lang/Object;", "GetGetHandler:Bumptech.Glide.Load.Engine.IResourceInvoker, Xamarin.Android.Glide")]
public abstract virtual Object Get();
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler:Bumptech.Glide.Load.Engine.IResourceInvoker, Xamarin.Android.Glide")]
public abstract virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/Resource")]
internal class Bumptech.Glide.Load.Engine.IResourceInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    private IntPtr id_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    private IntPtr id_getSize;
    [NullableAttribute("2")]
private static Delegate cb_get;
    private IntPtr id_get;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    private IntPtr id_recycle;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    public IResourceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResourceInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResource GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_Size();
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object Get();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/LoadPath")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Engine.LoadPath : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDataClass;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Class DataClass { get; }
    protected LoadPath(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Landroidx/core/util/Pools$Pool;)V", "")]
public LoadPath(Class dataClass, Class resourceClass, Class transcodeClass, IList decodePaths, IPool listPool);
    private static LoadPath();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDataClassHandler();
    private static IntPtr n_GetDataClass(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDataClass", "()Ljava/lang/Class;", "GetGetDataClassHandler")]
public virtual Class get_DataClass();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/prefill/BitmapPreFiller")]
public class Bumptech.Glide.Load.Engine.Prefill.BitmapPreFiller : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BitmapPreFiller(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/DecodeFormat;)V", "")]
public BitmapPreFiller(IMemoryCache memoryCache, IBitmapPool bitmapPool, DecodeFormat defaultFormat);
    private static BitmapPreFiller();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("preFill", "([Lcom/bumptech/glide/load/engine/prefill/PreFillType$Builder;)V", "")]
public void PreFill(Builder[] bitmapAttributeBuilders);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/engine/prefill/PreFillType")]
public class Bumptech.Glide.Load.Engine.Prefill.PreFillType : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PreFillType(IntPtr javaReference, JniHandleOwnership transfer);
    private static PreFillType();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/HttpException")]
public class Bumptech.Glide.Load.HttpException : IOException {
    [RegisterAttribute("UNKNOWN")]
public static int Unknown;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int StatusCode { get; }
    internal HttpException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public HttpException(int statusCode);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
[ObsoleteAttribute("deprecated")]
public HttpException(string message);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;I)V", "")]
public HttpException(string message, int statusCode);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;ILjava/lang/Throwable;)V", "")]
public HttpException(string message, int statusCode, Throwable cause);
    private static HttpException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getStatusCode", "()I", "")]
public int get_StatusCode();
}
[RegisterAttribute("com/bumptech/glide/load/Encoder", "", "Bumptech.Glide.Load.IEncoderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.IEncoder {
    [NullableContextAttribute("1")]
[RegisterAttribute("encode", "(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.IEncoderInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Encode(Object p0, File p1, Options p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Encoder")]
internal class Bumptech.Glide.Load.IEncoderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    private IntPtr id_encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IEncoderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IEncoderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IEncoder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetEncode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    public sealed virtual bool Encode(Object p0, File p1, Options p2);
}
[NullableContextAttribute("1")]
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParser", "", "Bumptech.Glide.Load.IImageHeaderParserInvoker")]
public interface Bumptech.Glide.Load.IImageHeaderParser {
    [RegisterAttribute("getOrientation", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "GetGetOrientation_Ljava_io_InputStream_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_Handler:Bumptech.Glide.Load.IImageHeaderParserInvoker, Xamarin.Android.Glide")]
public abstract virtual int GetOrientation(Stream p0, IArrayPool p1);
    [RegisterAttribute("getOrientation", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "GetGetOrientation_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_Handler:Bumptech.Glide.Load.IImageHeaderParserInvoker, Xamarin.Android.Glide")]
public abstract virtual int GetOrientation(ByteBuffer p0, IArrayPool p1);
    [RegisterAttribute("getType", "(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "GetGetType_Ljava_io_InputStream_Handler:Bumptech.Glide.Load.IImageHeaderParserInvoker, Xamarin.Android.Glide")]
public abstract virtual ImageHeaderParserImageType GetType(Stream p0);
    [RegisterAttribute("getType", "(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "GetGetType_Ljava_nio_ByteBuffer_Handler:Bumptech.Glide.Load.IImageHeaderParserInvoker, Xamarin.Android.Glide")]
public abstract virtual ImageHeaderParserImageType GetType(ByteBuffer p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParser")]
internal class Bumptech.Glide.Load.IImageHeaderParserInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getOrientation_Ljava_io_InputStream_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_;
    private IntPtr id_getOrientation_Ljava_io_InputStream_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_;
    [NullableAttribute("2")]
private static Delegate cb_getOrientation_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_;
    private IntPtr id_getOrientation_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_;
    [NullableAttribute("2")]
private static Delegate cb_getType_Ljava_io_InputStream_;
    private IntPtr id_getType_Ljava_io_InputStream_;
    [NullableAttribute("2")]
private static Delegate cb_getType_Ljava_nio_ByteBuffer_;
    private IntPtr id_getType_Ljava_nio_ByteBuffer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IImageHeaderParserInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IImageHeaderParserInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IImageHeaderParser GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetOrientation_Ljava_io_InputStream_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_Handler();
    private static int n_GetOrientation_Ljava_io_InputStream_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual int GetOrientation(Stream p0, IArrayPool p1);
    private static Delegate GetGetOrientation_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_Handler();
    private static int n_GetOrientation_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_engine_bitmap_recycle_ArrayPool_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual int GetOrientation(ByteBuffer p0, IArrayPool p1);
    private static Delegate GetGetType_Ljava_io_InputStream_Handler();
    private static IntPtr n_GetType_Ljava_io_InputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual ImageHeaderParserImageType GetType(Stream p0);
    private static Delegate GetGetType_Ljava_nio_ByteBuffer_Handler();
    private static IntPtr n_GetType_Ljava_nio_ByteBuffer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual ImageHeaderParserImageType GetType(ByteBuffer p0);
}
[RegisterAttribute("com/bumptech/glide/load/Key", "", "Bumptech.Glide.Load.IKeyInvoker")]
public interface Bumptech.Glide.Load.IKey {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("CHARSET")]
public static Charset Charset { get; }
    private static IKey();
    [NullableContextAttribute("2")]
public static Charset get_Charset();
    [NullableContextAttribute("2")]
[RegisterAttribute("equals", "(Ljava/lang/Object;)Z", "GetEquals_Ljava_lang_Object_Handler:Bumptech.Glide.Load.IKeyInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Equals(Object p0);
    [RegisterAttribute("hashCode", "()I", "GetGetHashCodeHandler:Bumptech.Glide.Load.IKeyInvoker, Xamarin.Android.Glide")]
public abstract virtual int GetHashCode();
    [NullableContextAttribute("1")]
[RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler:Bumptech.Glide.Load.IKeyInvoker, Xamarin.Android.Glide")]
public abstract virtual void UpdateDiskCacheKey(MessageDigest p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Key")]
internal class Bumptech.Glide.Load.IKeyInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    private IntPtr id_updateDiskCacheKey_Ljava_security_MessageDigest_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IKeyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IKeyInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IKey GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object p0);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void UpdateDiskCacheKey(MessageDigest p0);
}
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParser")]
public abstract class Bumptech.Glide.Load.ImageHeaderParser : Object {
    [RegisterAttribute("UNKNOWN_ORIENTATION")]
public static int UnknownOrientation;
}
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParser")]
[ObsoleteAttribute("Use the 'ImageHeaderParser' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Load.ImageHeaderParserConsts : ImageHeaderParser {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParser$ImageType")]
public class Bumptech.Glide.Load.ImageHeaderParserImageType : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("ANIMATED_AVIF")]
public static ImageHeaderParserImageType AnimatedAvif { get; }
    [RegisterAttribute("ANIMATED_WEBP")]
public static ImageHeaderParserImageType AnimatedWebp { get; }
    [RegisterAttribute("AVIF")]
public static ImageHeaderParserImageType Avif { get; }
    [RegisterAttribute("GIF")]
public static ImageHeaderParserImageType Gif { get; }
    [RegisterAttribute("JPEG")]
public static ImageHeaderParserImageType Jpeg { get; }
    [RegisterAttribute("PNG")]
public static ImageHeaderParserImageType Png { get; }
    [RegisterAttribute("PNG_A")]
public static ImageHeaderParserImageType PngA { get; }
    [RegisterAttribute("RAW")]
public static ImageHeaderParserImageType Raw { get; }
    [RegisterAttribute("UNKNOWN")]
public static ImageHeaderParserImageType Unknown { get; }
    [RegisterAttribute("WEBP")]
public static ImageHeaderParserImageType Webp { get; }
    [RegisterAttribute("WEBP_A")]
public static ImageHeaderParserImageType WebpA { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasAlpha { get; }
    public bool IsWebp { get; }
    internal ImageHeaderParserImageType(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageHeaderParserImageType();
    public static ImageHeaderParserImageType get_AnimatedAvif();
    public static ImageHeaderParserImageType get_AnimatedWebp();
    public static ImageHeaderParserImageType get_Avif();
    public static ImageHeaderParserImageType get_Gif();
    public static ImageHeaderParserImageType get_Jpeg();
    public static ImageHeaderParserImageType get_Png();
    public static ImageHeaderParserImageType get_PngA();
    public static ImageHeaderParserImageType get_Raw();
    public static ImageHeaderParserImageType get_Unknown();
    public static ImageHeaderParserImageType get_Webp();
    public static ImageHeaderParserImageType get_WebpA();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasAlpha", "()Z", "")]
public bool get_HasAlpha();
    [RegisterAttribute("isWebp", "()Z", "")]
public bool get_IsWebp();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public static ImageHeaderParserImageType ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public static ImageHeaderParserImageType[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/ImageHeaderParserUtils")]
public class Bumptech.Glide.Load.ImageHeaderParserUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ImageHeaderParserUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageHeaderParserUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrientation", "(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public static int GetOrientation(IList`1<IImageHeaderParser> parsers, ParcelFileDescriptorRewinder parcelFileDescriptorRewinder, IArrayPool byteArrayPool);
    [RegisterAttribute("getOrientation", "(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public static int GetOrientation(IList`1<IImageHeaderParser> parsers, Stream is, IArrayPool byteArrayPool);
    [RegisterAttribute("getOrientation", "(Ljava/util/List;Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public static int GetOrientation(IList`1<IImageHeaderParser> parsers, ByteBuffer buffer, IArrayPool arrayPool);
    [RegisterAttribute("getType", "(Ljava/util/List;Lcom/bumptech/glide/load/data/ParcelFileDescriptorRewinder;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public static ImageHeaderParserImageType GetType(IList`1<IImageHeaderParser> parsers, ParcelFileDescriptorRewinder parcelFileDescriptorRewinder, IArrayPool byteArrayPool);
    [RegisterAttribute("getType", "(Ljava/util/List;Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public static ImageHeaderParserImageType GetType(IList`1<IImageHeaderParser> parsers, Stream is, IArrayPool byteArrayPool);
    [RegisterAttribute("getType", "(Ljava/util/List;Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public static ImageHeaderParserImageType GetType(IList`1<IImageHeaderParser> parsers, ByteBuffer buffer);
}
[RegisterAttribute("com/bumptech/glide/load/ResourceDecoder", "", "Bumptech.Glide.Load.IResourceDecoderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.IResourceDecoder {
    [NullableContextAttribute("1")]
[RegisterAttribute("decode", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.IResourceDecoderInvoker, Xamarin.Android.Glide")]
public abstract virtual IResource Decode(Object p0, int p1, int p2, Options p3);
    [NullableContextAttribute("1")]
[RegisterAttribute("handles", "(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.IResourceDecoderInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/ResourceDecoder")]
internal class Bumptech.Glide.Load.IResourceDecoderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    private IntPtr id_decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_;
    private IntPtr id_handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IResourceDecoderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResourceDecoderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResourceDecoder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2, IntPtr native_p3);
    public sealed virtual IResource Decode(Object p0, int p1, int p2, Options p3);
    private static Delegate GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual bool Handles(Object p0, Options p1);
}
[RegisterAttribute("com/bumptech/glide/load/ResourceEncoder", "", "Bumptech.Glide.Load.IResourceEncoderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.IResourceEncoder {
    [NullableContextAttribute("1")]
[RegisterAttribute("getEncodeStrategy", "(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;", "GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.IResourceEncoderInvoker, Xamarin.Android.Glide")]
public abstract virtual EncodeStrategy GetEncodeStrategy(Options p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/ResourceEncoder")]
internal class Bumptech.Glide.Load.IResourceEncoderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getEncodeStrategy_Lcom_bumptech_glide_load_Options_;
    private IntPtr id_getEncodeStrategy_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    private IntPtr id_encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IResourceEncoderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResourceEncoderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResourceEncoder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetEncodeStrategy_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual EncodeStrategy GetEncodeStrategy(Options p0);
    private static Delegate GetEncode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Ljava_lang_Object_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    public sealed virtual bool Encode(Object p0, File p1, Options p2);
}
[RegisterAttribute("com/bumptech/glide/load/Transformation", "", "Bumptech.Glide.Load.ITransformationInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.ITransformation {
    [NullableContextAttribute("1")]
[RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler:Bumptech.Glide.Load.ITransformationInvoker, Xamarin.Android.Glide")]
public abstract virtual IResource Transform(Context p0, IResource p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Transformation")]
internal class Bumptech.Glide.Load.ITransformationInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    private IntPtr id_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    private IntPtr id_updateDiskCacheKey_Ljava_security_MessageDigest_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ITransformationInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITransformationInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITransformation GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler();
    private static IntPtr n_Transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2, int p3);
    public sealed virtual IResource Transform(Context p0, IResource p1, int p2, int p3);
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object p0);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void UpdateDiskCacheKey(MessageDigest p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Key")]
public abstract class Bumptech.Glide.Load.Key : Object {
    [RegisterAttribute("STRING_CHARSET_NAME")]
public static string StringCharsetName;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("CHARSET")]
public static Charset Charset { get; }
    private static Key();
    [NullableContextAttribute("2")]
public static Charset get_Charset();
}
[RegisterAttribute("com/bumptech/glide/load/Key")]
[ObsoleteAttribute("Use the 'Key' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Load.KeyConsts : Key {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/AssetUriLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.AssetUriLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AssetUriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/AssetManager;Lcom/bumptech/glide/load/model/AssetUriLoader$AssetFetcherFactory;)V", "")]
public AssetUriLoader(AssetManager assetManager, IAssetFetcherFactory factory);
    private static AssetUriLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Uri model, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Handler();
    private static bool n_Handles_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "GetHandles_Landroid_net_Uri_Handler")]
public virtual bool Handles(Uri model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ByteArrayLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.ByteArrayLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_arrayBIILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_arrayB;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteArrayLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ByteArrayLoader$Converter;)V", "")]
public ByteArrayLoader(IConverter converter);
    private static ByteArrayLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_arrayBIILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_arrayBIILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "([BIILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_arrayBIILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Byte[] model, int width, int height, Options options);
    private static Delegate GetHandles_arrayBHandler();
    private static bool n_Handles_arrayB(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "([B)Z", "GetHandles_arrayBHandler")]
public virtual bool Handles(Byte[] model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ByteBufferEncoder")]
public class Bumptech.Glide.Load.Model.ByteBufferEncoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_encode_Ljava_nio_ByteBuffer_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteBufferEncoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static ByteBufferEncoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEncode_Ljava_nio_ByteBuffer_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Ljava_nio_ByteBuffer_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_data, IntPtr native_file, IntPtr native_options);
    [RegisterAttribute("encode", "(Ljava/nio/ByteBuffer;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Ljava_nio_ByteBuffer_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Encode(ByteBuffer data, File file, Options options);
    private sealed virtual override bool global::Bumptech.Glide.Load.IEncoder.Encode(Object p0, File p1, Options p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ByteBufferFileLoader")]
public class Bumptech.Glide.Load.Model.ByteBufferFileLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_io_File_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteBufferFileLoader(IntPtr javaReference, JniHandleOwnership transfer);
    private static ByteBufferFileLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_file, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/io/File;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(File file, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_io_File_Handler();
    private static bool n_Handles_Ljava_io_File_(IntPtr jnienv, IntPtr native__this, IntPtr native_file);
    [RegisterAttribute("handles", "(Ljava/io/File;)Z", "GetHandles_Ljava_io_File_Handler")]
public virtual bool Handles(File file);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/DataUrlLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.DataUrlLoader : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DataUrlLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/DataUrlLoader$DataDecoder;)V", "")]
public DataUrlLoader(IDataDecoder dataDecoder);
    private static DataUrlLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildLoadData", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "")]
public sealed virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    [RegisterAttribute("handles", "(Ljava/lang/Object;)Z", "")]
public sealed virtual bool Handles(Object model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/DirectResourceLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.DirectResourceLoader : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DirectResourceLoader(IntPtr javaReference, JniHandleOwnership transfer);
    private static DirectResourceLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("assetFileDescriptorFactory", "(Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "")]
public static IModelLoaderFactory AssetFileDescriptorFactory(Context context);
    [RegisterAttribute("buildLoadData", "(Ljava/lang/Integer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "")]
public sealed virtual ModelLoaderLoadData BuildLoadData(Object resourceId, int width, int height, Options options);
    [NullableContextAttribute("2")]
[RegisterAttribute("drawableFactory", "(Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "")]
public static IModelLoaderFactory DrawableFactory(Context context);
    [RegisterAttribute("handles", "(Ljava/lang/Integer;)Z", "")]
public sealed virtual bool Handles(Object integer);
    [NullableContextAttribute("2")]
[RegisterAttribute("inputStreamFactory", "(Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "")]
public static IModelLoaderFactory InputStreamFactory(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/FileLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.FileLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_io_File_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FileLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/FileLoader$FileOpener;)V", "")]
public FileLoader(IFileOpener fileOpener);
    private static FileLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/io/File;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(File model, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_io_File_Handler();
    private static bool n_Handles_Ljava_io_File_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Ljava/io/File;)Z", "GetHandles_Ljava_io_File_Handler")]
public virtual bool Handles(File model);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/GlideUrl")]
public class Bumptech.Glide.Load.Model.GlideUrl : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getCacheKey;
    private static Delegate cb_getHeaders;
    private static Delegate cb_toStringUrl;
    private static Delegate cb_toURL;
    private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string CacheKey { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; }
    protected GlideUrl(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public GlideUrl(string url);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Lcom/bumptech/glide/load/model/Headers;)V", "")]
public GlideUrl(string url, IHeaders headers);
    [RegisterAttribute(".ctor", "(Ljava/net/URL;)V", "")]
public GlideUrl(URL url);
    [RegisterAttribute(".ctor", "(Ljava/net/URL;Lcom/bumptech/glide/load/model/Headers;)V", "")]
public GlideUrl(URL url, IHeaders headers);
    private static GlideUrl();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetCacheKeyHandler();
    private static IntPtr n_GetCacheKey(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCacheKey", "()Ljava/lang/String;", "GetGetCacheKeyHandler")]
public virtual string get_CacheKey();
    [NullableContextAttribute("1")]
private static Delegate GetGetHeadersHandler();
    private static IntPtr n_GetHeaders(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHeaders", "()Ljava/util/Map;", "GetGetHeadersHandler")]
public virtual IDictionary`2<string, string> get_Headers();
    [NullableContextAttribute("1")]
private static Delegate GetToStringUrlHandler();
    private static IntPtr n_ToStringUrl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toStringUrl", "()Ljava/lang/String;", "GetToStringUrlHandler")]
public virtual string ToStringUrl();
    [NullableContextAttribute("1")]
private static Delegate GetToURLHandler();
    private static IntPtr n_ToURL(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toURL", "()Ljava/net/URL;", "GetToURLHandler")]
public virtual URL ToURL();
    [NullableContextAttribute("1")]
private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [NullableContextAttribute("1")]
[RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/Headers")]
public abstract class Bumptech.Glide.Load.Model.Headers : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DEFAULT")]
public static IHeaders Default { get; }
    [RegisterAttribute("NONE")]
[ObsoleteAttribute("deprecated")]
public static IHeaders None { get; }
    private static Headers();
    public static IHeaders get_Default();
    public static IHeaders get_None();
}
[RegisterAttribute("com/bumptech/glide/load/model/Headers")]
[ObsoleteAttribute("Use the 'Headers' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Load.Model.HeadersConsts : Headers {
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/load/model/Headers", "", "Bumptech.Glide.Load.Model.IHeadersInvoker")]
public interface Bumptech.Glide.Load.Model.IHeaders {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DEFAULT")]
public static IHeaders Default { get; }
    [RegisterAttribute("NONE")]
[ObsoleteAttribute("deprecated")]
public static IHeaders None { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; }
    private static IHeaders();
    public static IHeaders get_Default();
    public static IHeaders get_None();
    [RegisterAttribute("getHeaders", "()Ljava/util/Map;", "GetGetHeadersHandler:Bumptech.Glide.Load.Model.IHeadersInvoker, Xamarin.Android.Glide")]
public abstract virtual IDictionary`2<string, string> get_Headers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/Headers")]
internal class Bumptech.Glide.Load.Model.IHeadersInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getHeaders;
    private IntPtr id_getHeaders;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; }
    public IHeadersInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IHeadersInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IHeaders GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetHeadersHandler();
    private static IntPtr n_GetHeaders(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IDictionary`2<string, string> get_Headers();
}
[RegisterAttribute("com/bumptech/glide/load/model/LazyHeaderFactory", "", "Bumptech.Glide.Load.Model.ILazyHeaderFactoryInvoker")]
public interface Bumptech.Glide.Load.Model.ILazyHeaderFactory {
    [NullableContextAttribute("2")]
[RegisterAttribute("buildHeader", "()Ljava/lang/String;", "GetBuildHeaderHandler:Bumptech.Glide.Load.Model.ILazyHeaderFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual string BuildHeader();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/LazyHeaderFactory")]
internal class Bumptech.Glide.Load.Model.ILazyHeaderFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_buildHeader;
    private IntPtr id_buildHeader;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILazyHeaderFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILazyHeaderFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ILazyHeaderFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuildHeaderHandler();
    private static IntPtr n_BuildHeader(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string BuildHeader();
}
[RegisterAttribute("com/bumptech/glide/load/model/Model", "", "Bumptech.Glide.Load.Model.IModelInvoker")]
public interface Bumptech.Glide.Load.Model.IModel {
    [NullableContextAttribute("2")]
[RegisterAttribute("isEquivalentTo", "(Ljava/lang/Object;)Z", "GetIsEquivalentTo_Ljava_lang_Object_Handler:Bumptech.Glide.Load.Model.IModelInvoker, Xamarin.Android.Glide")]
public abstract virtual bool IsEquivalentTo(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/Model")]
internal class Bumptech.Glide.Load.Model.IModelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isEquivalentTo_Ljava_lang_Object_;
    private IntPtr id_isEquivalentTo_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IModel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsEquivalentTo_Ljava_lang_Object_Handler();
    private static bool n_IsEquivalentTo_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual bool IsEquivalentTo(Object p0);
}
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoader", "", "Bumptech.Glide.Load.Model.IModelLoaderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Model.IModelLoader {
    [NullableContextAttribute("1")]
[RegisterAttribute("buildLoadData", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.Model.IModelLoaderInvoker, Xamarin.Android.Glide")]
public abstract virtual ModelLoaderLoadData BuildLoadData(Object p0, int p1, int p2, Options p3);
    [NullableContextAttribute("1")]
[RegisterAttribute("handles", "(Ljava/lang/Object;)Z", "GetHandles_Ljava_lang_Object_Handler:Bumptech.Glide.Load.Model.IModelLoaderInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Handles(Object p0);
}
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoaderFactory", "", "Bumptech.Glide.Load.Model.IModelLoaderFactoryInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Model.IModelLoaderFactory {
    [NullableContextAttribute("1")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;", "GetBuild_Lcom_bumptech_glide_load_model_MultiModelLoaderFactory_Handler:Bumptech.Glide.Load.Model.IModelLoaderFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual IModelLoader Build(MultiModelLoaderFactory p0);
    [RegisterAttribute("teardown", "()V", "GetTeardownHandler:Bumptech.Glide.Load.Model.IModelLoaderFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual void Teardown();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoaderFactory")]
internal class Bumptech.Glide.Load.Model.IModelLoaderFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_model_MultiModelLoaderFactory_;
    private IntPtr id_build_Lcom_bumptech_glide_load_model_MultiModelLoaderFactory_;
    [NullableAttribute("2")]
private static Delegate cb_teardown;
    private IntPtr id_teardown;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModelLoaderFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModelLoaderFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IModelLoaderFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuild_Lcom_bumptech_glide_load_model_MultiModelLoaderFactory_Handler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_model_MultiModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual IModelLoader Build(MultiModelLoaderFactory p0);
    private static Delegate GetTeardownHandler();
    private static void n_Teardown(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Teardown();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoader")]
internal class Bumptech.Glide.Load.Model.IModelLoaderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    private IntPtr id_buildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_;
    private IntPtr id_handles_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IModelLoaderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IModelLoaderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IModelLoader GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2, IntPtr native_p3);
    public sealed virtual ModelLoaderLoadData BuildLoadData(Object p0, int p1, int p2, Options p3);
    private static Delegate GetHandles_Ljava_lang_Object_Handler();
    private static bool n_Handles_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/LazyHeaders")]
public class Bumptech.Glide.Load.Model.LazyHeaders : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; }
    internal LazyHeaders(IntPtr javaReference, JniHandleOwnership transfer);
    private static LazyHeaders();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getHeaders", "()Ljava/util/Map;", "")]
public sealed virtual IDictionary`2<string, string> get_Headers();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/MediaStoreFileLoader")]
public class Bumptech.Glide.Load.Model.MediaStoreFileLoader : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaStoreFileLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaStoreFileLoader(Context context);
    private static MediaStoreFileLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "")]
public ModelLoaderLoadData BuildLoadData(Uri uri, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "")]
public bool Handles(Uri uri);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ModelCache")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.ModelCache : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_clear;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Object_II;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Object_IILjava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ModelCache(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(J)V", "")]
public ModelCache(long size);
    private static ModelCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetGet_Ljava_lang_Object_IIHandler();
    private static IntPtr n_Get_Ljava_lang_Object_II(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(Ljava/lang/Object;II)Ljava/lang/Object;", "GetGet_Ljava_lang_Object_IIHandler")]
public virtual Object Get(Object model, int width, int height);
    private static Delegate GetPut_Ljava_lang_Object_IILjava_lang_Object_Handler();
    private static void n_Put_Ljava_lang_Object_IILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_value);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Ljava/lang/Object;IILjava/lang/Object;)V", "GetPut_Ljava_lang_Object_IILjava_lang_Object_Handler")]
public virtual void Put(Object model, int width, int height, Object value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoader$LoadData")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.ModelLoaderLoadData : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("alternateKeys")]
public IList AlternateKeys { get; public set; }
    [RegisterAttribute("fetcher")]
public IDataFetcher Fetcher { get; public set; }
    [RegisterAttribute("sourceKey")]
public IKey SourceKey { get; public set; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ModelLoaderLoadData(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("1")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V", "")]
public ModelLoaderLoadData(IKey sourceKey, IDataFetcher fetcher);
    [NullableContextAttribute("1")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/Key;Ljava/util/List;Lcom/bumptech/glide/load/data/DataFetcher;)V", "")]
public ModelLoaderLoadData(IKey sourceKey, IList`1<IKey> alternateKeys, IDataFetcher fetcher);
    private static ModelLoaderLoadData();
    public IList get_AlternateKeys();
    public void set_AlternateKeys(IList value);
    public IDataFetcher get_Fetcher();
    public void set_Fetcher(IDataFetcher value);
    public IKey get_SourceKey();
    public void set_SourceKey(IKey value);
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ModelLoaderRegistry")]
public class Bumptech.Glide.Load.Model.ModelLoaderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    [NullableAttribute("2")]
private static Delegate cb_build_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getDataClasses_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getModelLoaders_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    [NullableAttribute("2")]
private static Delegate cb_remove_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_replace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ModelLoaderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/core/util/Pools$Pool;)V", "")]
public ModelLoaderRegistry(IPool throwableListPool);
    private static ModelLoaderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static void n_Append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("append", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V", "GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Append(Class modelClass, Class dataClass, IModelLoaderFactory factory);
    private static Delegate GetBuild_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_Build_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass);
    [RegisterAttribute("build", "(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;", "GetBuild_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IModelLoader Build(Class modelClass, Class dataClass);
    private static Delegate GetGetDataClasses_Ljava_lang_Class_Handler();
    private static IntPtr n_GetDataClasses_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass);
    [RegisterAttribute("getDataClasses", "(Ljava/lang/Class;)Ljava/util/List;", "GetGetDataClasses_Ljava_lang_Class_Handler")]
public virtual IList`1<Class> GetDataClasses(Class modelClass);
    private static Delegate GetGetModelLoaders_Ljava_lang_Object_Handler();
    private static IntPtr n_GetModelLoaders_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("getModelLoaders", "(Ljava/lang/Object;)Ljava/util/List;", "GetGetModelLoaders_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList GetModelLoaders(Object model);
    private static Delegate GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static void n_Prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V", "GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Prepend(Class modelClass, Class dataClass, IModelLoaderFactory factory);
    private static Delegate GetRemove_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static void n_Remove_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass);
    [RegisterAttribute("remove", "(Ljava/lang/Class;Ljava/lang/Class;)V", "GetRemove_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Remove(Class modelClass, Class dataClass);
    private static Delegate GetReplace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static void n_Replace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("replace", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V", "GetReplace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Replace(Class modelClass, Class dataClass, IModelLoaderFactory factory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/MultiModelLoaderFactory")]
public class Bumptech.Glide.Load.Model.MultiModelLoaderFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Ljava_lang_Class_Ljava_lang_Class_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MultiModelLoaderFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/core/util/Pools$Pool;)V", "")]
public MultiModelLoaderFactory(IPool throwableListPool);
    private static MultiModelLoaderFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_Build_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass);
    [RegisterAttribute("build", "(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/model/ModelLoader;", "GetBuild_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IModelLoader Build(Class modelClass, Class dataClass);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ResourceLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.ResourceLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_lang_Integer_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Integer_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResourceLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
public ResourceLoader(Resources resources, IModelLoader uriLoader);
    private static ResourceLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_lang_Integer_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_lang_Integer_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/lang/Integer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_lang_Integer_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Integer model, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_lang_Integer_Handler();
    private static bool n_Handles_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Ljava/lang/Integer;)Z", "GetHandles_Ljava_lang_Integer_Handler")]
public virtual bool Handles(Integer model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/ResourceUriLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.ResourceUriLoader : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ResourceUriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResourceUriLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "")]
public sealed virtual ModelLoaderLoadData BuildLoadData(Object uri, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "")]
public sealed virtual bool Handles(Object uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("newAssetFileDescriptorFactory", "(Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "")]
public static IModelLoaderFactory NewAssetFileDescriptorFactory(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute("newStreamFactory", "(Landroid/content/Context;)Lcom/bumptech/glide/load/model/ModelLoaderFactory;", "")]
public static IModelLoaderFactory NewStreamFactory(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/BaseGlideUrlLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getAlternateUrls_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getHeaders_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getUrl_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BaseGlideUrlLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
protected BaseGlideUrlLoader(IModelLoader concreteLoader);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelCache;)V", "")]
protected BaseGlideUrlLoader(IModelLoader concreteLoader, ModelCache modelCache);
    private static BaseGlideUrlLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    private static Delegate GetGetAlternateUrls_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetAlternateUrls_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [NullableContextAttribute("2")]
[RegisterAttribute("getAlternateUrls", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/util/List;", "GetGetAlternateUrls_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
protected virtual IList`1<string> GetAlternateUrls(Object model, int width, int height, Options options);
    private static Delegate GetGetHeaders_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetHeaders_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [NullableContextAttribute("2")]
[RegisterAttribute("getHeaders", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/Headers;", "GetGetHeaders_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
protected virtual IHeaders GetHeaders(Object model, int width, int height, Options options);
    private static Delegate GetGetUrl_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetUrl_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2, IntPtr native_p3);
    [NullableContextAttribute("2")]
[RegisterAttribute("getUrl", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/lang/String;", "GetGetUrl_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
protected abstract virtual string GetUrl(Object p0, int p1, int p2, Options p3);
    private static Delegate GetHandles_Ljava_lang_Object_Handler();
    private static bool n_Handles_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [NullableContextAttribute("2")]
[RegisterAttribute("handles", "(Ljava/lang/Object;)Z", "GetHandles_Ljava_lang_Object_Handler")]
public abstract virtual bool Handles(Object model);
}
[RegisterAttribute("com/bumptech/glide/load/model/stream/BaseGlideUrlLoader")]
internal class Bumptech.Glide.Load.Model.Stream.BaseGlideUrlLoaderInvoker : BaseGlideUrlLoader {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseGlideUrlLoaderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseGlideUrlLoaderInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getUrl", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/lang/String;", "GetGetUrl_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
protected virtual string GetUrl(Object p0, int p1, int p2, Options p3);
    [NullableContextAttribute("2")]
[RegisterAttribute("handles", "(Ljava/lang/Object;)Z", "GetHandles_Ljava_lang_Object_Handler")]
public virtual bool Handles(Object model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/HttpGlideUrlLoader")]
public class Bumptech.Glide.Load.Model.Stream.HttpGlideUrlLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Lcom_bumptech_glide_load_model_GlideUrl_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Lcom_bumptech_glide_load_model_GlideUrl_;
    [NullableAttribute("2")]
[RegisterAttribute("TIMEOUT")]
public static Option Timeout { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected HttpGlideUrlLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelCache;)V", "")]
public HttpGlideUrlLoader(ModelCache modelCache);
    private static HttpGlideUrlLoader();
    [NullableContextAttribute("2")]
public static Option get_Timeout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Lcom_bumptech_glide_load_model_GlideUrl_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Lcom_bumptech_glide_load_model_GlideUrl_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Lcom/bumptech/glide/load/model/GlideUrl;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Lcom_bumptech_glide_load_model_GlideUrl_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(GlideUrl model, int width, int height, Options options);
    private static Delegate GetHandles_Lcom_bumptech_glide_load_model_GlideUrl_Handler();
    private static bool n_Handles_Lcom_bumptech_glide_load_model_GlideUrl_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Lcom/bumptech/glide/load/model/GlideUrl;)Z", "GetHandles_Lcom_bumptech_glide_load_model_GlideUrl_Handler")]
public virtual bool Handles(GlideUrl model);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/HttpUriLoader")]
public class Bumptech.Glide.Load.Model.Stream.HttpUriLoader : UrlUriLoader {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected HttpUriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
public HttpUriLoader(IModelLoader urlLoader);
    private static HttpUriLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/MediaStoreImageThumbLoader")]
public class Bumptech.Glide.Load.Model.Stream.MediaStoreImageThumbLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaStoreImageThumbLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaStoreImageThumbLoader(Context context);
    private static MediaStoreImageThumbLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Uri model, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Handler();
    private static bool n_Handles_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "GetHandles_Landroid_net_Uri_Handler")]
public virtual bool Handles(Uri model);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/MediaStoreVideoThumbLoader")]
public class Bumptech.Glide.Load.Model.Stream.MediaStoreVideoThumbLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaStoreVideoThumbLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaStoreVideoThumbLoader(Context context);
    private static MediaStoreVideoThumbLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Uri model, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Handler();
    private static bool n_Handles_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "GetHandles_Landroid_net_Uri_Handler")]
public virtual bool Handles(Uri model);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/QMediaStoreUriLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.Stream.QMediaStoreUriLoader : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal QMediaStoreUriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    private static QMediaStoreUriLoader();
    public sealed virtual bool Handles(Object uri);
    public sealed virtual ModelLoaderLoadData BuildLoadData(Object uri, int width, int height, Options options);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "")]
public ModelLoaderLoadData BuildLoadData(Uri uri, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "")]
public bool Handles(Uri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/stream/UrlLoader")]
public class Bumptech.Glide.Load.Model.Stream.UrlLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_net_URL_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_net_URL_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UrlLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
public UrlLoader(IModelLoader glideUrlLoader);
    private static UrlLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_net_URL_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_net_URL_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/net/URL;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_net_URL_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(URL model, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_net_URL_Handler();
    private static bool n_Handles_Ljava_net_URL_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Ljava/net/URL;)Z", "GetHandles_Ljava_net_URL_Handler")]
public virtual bool Handles(URL model);
    private sealed virtual override ModelLoaderLoadData global::Bumptech.Glide.Load.Model.IModelLoader.BuildLoadData(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.Model.IModelLoader.Handles(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/StreamEncoder")]
public class Bumptech.Glide.Load.Model.StreamEncoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_encode_Ljava_io_InputStream_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected StreamEncoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public StreamEncoder(IArrayPool byteArrayPool);
    private static StreamEncoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEncode_Ljava_io_InputStream_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Ljava_io_InputStream_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_data, IntPtr native_file, IntPtr native_options);
    [RegisterAttribute("encode", "(Ljava/io/InputStream;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Ljava_io_InputStream_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Encode(Stream data, File file, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/StringLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.StringLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_lang_String_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected StringLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
public StringLoader(IModelLoader uriLoader);
    private static StringLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Ljava_lang_String_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_lang_String_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/lang/String;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_lang_String_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(string model, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_lang_String_Handler();
    private static bool n_Handles_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Ljava/lang/String;)Z", "GetHandles_Ljava_lang_String_Handler")]
public virtual bool Handles(string model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/UnitModelLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.UnitModelLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public static UnitModelLoader Instance { get; }
    protected UnitModelLoader(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnitModelLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RegisterAttribute("getInstance", "()Lcom/bumptech/glide/load/model/UnitModelLoader;", "")]
public static UnitModelLoader get_Instance();
    private static Delegate GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_lang_Object_Handler();
    private static bool n_Handles_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Ljava/lang/Object;)Z", "GetHandles_Ljava_lang_Object_Handler")]
public virtual bool Handles(Object model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/UriLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.UriLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/UriLoader$LocalUriFetcherFactory;)V", "")]
public UriLoader(ILocalUriFetcherFactory factory);
    private static UriLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_model, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Uri model, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Handler();
    private static bool n_Handles_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "GetHandles_Landroid_net_Uri_Handler")]
public virtual bool Handles(Uri model);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/model/UrlUriLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Model.UrlUriLoader : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UrlUriLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/model/ModelLoader;)V", "")]
public UrlUriLoader(IModelLoader urlLoader);
    private static UrlUriLoader();
    public virtual ModelLoaderLoadData BuildLoadData(Object model, int width, int height, Options options);
    public virtual bool Handles(Object model);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_BuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, int width, int height, IntPtr native_options);
    [RegisterAttribute("buildLoadData", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;", "GetBuildLoadData_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual ModelLoaderLoadData BuildLoadData(Uri uri, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Handler();
    private static bool n_Handles_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("handles", "(Landroid/net/Uri;)Z", "GetHandles_Landroid_net_Uri_Handler")]
public virtual bool Handles(Uri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/MultiTransformation")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.MultiTransformation : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MultiTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "([Lcom/bumptech/glide/load/Transformation;)V", "")]
public MultiTransformation(ITransformation[] transformations);
    [RegisterAttribute(".ctor", "(Ljava/util/Collection;)V", "")]
public MultiTransformation(ICollection transformationList);
    private static MultiTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler();
    private static IntPtr n_Transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_resource, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler")]
public virtual IResource Transform(Context context, IResource resource, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Option")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Option : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object DefaultValue { get; }
    internal Option(IntPtr javaReference, JniHandleOwnership transfer);
    private static Option();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDefaultValue", "()Ljava/lang/Object;", "")]
public Object get_DefaultValue();
    [RegisterAttribute("disk", "(Ljava/lang/String;Lcom/bumptech/glide/load/Option$CacheKeyUpdater;)Lcom/bumptech/glide/load/Option;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option Disk(string key, ICacheKeyUpdater cacheKeyUpdater);
    [RegisterAttribute("disk", "(Ljava/lang/String;Ljava/lang/Object;Lcom/bumptech/glide/load/Option$CacheKeyUpdater;)Lcom/bumptech/glide/load/Option;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option Disk(string key, Object defaultValue, ICacheKeyUpdater cacheKeyUpdater);
    [RegisterAttribute("memory", "(Ljava/lang/String;)Lcom/bumptech/glide/load/Option;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option Memory(string key);
    [RegisterAttribute("memory", "(Ljava/lang/String;Ljava/lang/Object;)Lcom/bumptech/glide/load/Option;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Option Memory(string key, Object defaultValue);
    [RegisterAttribute("update", "(Ljava/lang/Object;Ljava/security/MessageDigest;)V", "")]
public void Update(Object value, MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/Options")]
public class Bumptech.Glide.Load.Options : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Options(IntPtr javaReference, JniHandleOwnership transfer);
    private static Options();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("get", "(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object Get(Option option);
    [RegisterAttribute("putAll", "(Lcom/bumptech/glide/load/Options;)V", "")]
public void PutAll(Options other);
    [RegisterAttribute("remove", "(Lcom/bumptech/glide/load/Option;)Lcom/bumptech/glide/load/Options;", "")]
public Options Remove(Option option);
    [RegisterAttribute("set", "(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Options Set(Option option, Object value);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public sealed virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/PreferredColorSpace")]
public class Bumptech.Glide.Load.PreferredColorSpace : Enum {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DISPLAY_P3")]
public static PreferredColorSpace DisplayP3 { get; }
    [NullableAttribute("2")]
[RegisterAttribute("SRGB")]
public static PreferredColorSpace Srgb { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PreferredColorSpace(IntPtr javaReference, JniHandleOwnership transfer);
    private static PreferredColorSpace();
    [NullableContextAttribute("2")]
public static PreferredColorSpace get_DisplayP3();
    [NullableContextAttribute("2")]
public static PreferredColorSpace get_Srgb();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/load/PreferredColorSpace;", "")]
public static PreferredColorSpace ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/load/PreferredColorSpace;", "")]
public static PreferredColorSpace[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapDrawableDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Lcom/bumptech/glide/load/ResourceDecoder;)V", "")]
public BitmapDrawableDecoder(Context context, IResourceDecoder decoder);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/ResourceDecoder;)V", "")]
[ObsoleteAttribute("deprecated")]
public BitmapDrawableDecoder(Resources resources, IBitmapPool bitmapPool, IResourceDecoder decoder);
    [RegisterAttribute(".ctor", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/ResourceDecoder;)V", "")]
public BitmapDrawableDecoder(Resources resources, IResourceDecoder decoder);
    private static BitmapDrawableDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Object source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Object source, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapDrawableEncoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableEncoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getEncodeStrategy_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapDrawableEncoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/ResourceEncoder;)V", "")]
public BitmapDrawableEncoder(IBitmapPool bitmapPool, IResourceEncoder encoder);
    private static BitmapDrawableEncoder();
    public virtual bool Encode(Object data, File file, Options options);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_data, IntPtr native_file, IntPtr native_options);
    [RegisterAttribute("encode", "(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Encode(IResource data, File file, Options options);
    private static Delegate GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetEncodeStrategy_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_options);
    [RegisterAttribute("getEncodeStrategy", "(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;", "GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler")]
public virtual EncodeStrategy GetEncodeStrategy(Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapDrawableResource")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableResource : DrawableResource {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected BitmapDrawableResource(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/graphics/drawable/BitmapDrawable;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public BitmapDrawableResource(BitmapDrawable drawable, IBitmapPool bitmapPool);
    private static BitmapDrawableResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapDrawableTransformation : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapDrawableTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/Transformation;)V", "")]
public BitmapDrawableTransformation(ITransformation wrapped);
    private static BitmapDrawableTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler();
    private static IntPtr n_Transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_drawableResourceToTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler")]
public virtual IResource Transform(Context context, IResource drawableResourceToTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
    private sealed virtual override IResource global::Bumptech.Glide.Load.ITransformation.Transform(Context p0, IResource p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapEncoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapEncoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getEncodeStrategy_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
[RegisterAttribute("COMPRESSION_FORMAT")]
public static Option CompressionFormat { get; }
    [NullableAttribute("2")]
[RegisterAttribute("COMPRESSION_QUALITY")]
public static Option CompressionQuality { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapEncoder(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public BitmapEncoder(IArrayPool arrayPool);
    private static BitmapEncoder();
    public virtual bool Encode(Object data, File file, Options options);
    [NullableContextAttribute("2")]
public static Option get_CompressionFormat();
    [NullableContextAttribute("2")]
public static Option get_CompressionQuality();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_file, IntPtr native_options);
    [RegisterAttribute("encode", "(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Encode(IResource resource, File file, Options options);
    private static Delegate GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetEncodeStrategy_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_options);
    [RegisterAttribute("getEncodeStrategy", "(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;", "GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler")]
public virtual EncodeStrategy GetEncodeStrategy(Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapImageDecoderResourceDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BitmapImageDecoderResourceDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static BitmapImageDecoderResourceDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Landroid/graphics/ImageDecoder$Source;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(Source source, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/graphics/ImageDecoder$Source;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(Source source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapResource")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapResource : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    [NullableAttribute("2")]
private static Delegate cb_get;
    [NullableAttribute("2")]
private static Delegate cb_initialize;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected BitmapResource(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public BitmapResource(Bitmap bitmap, IBitmapPool bitmapPool);
    private static BitmapResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("get", "()Landroid/graphics/Bitmap;", "GetGetHandler")]
public virtual Bitmap Get();
    private static Delegate GetInitializeHandler();
    private static void n_Initialize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("initialize", "()V", "GetInitializeHandler")]
public virtual void Initialize();
    [NullableContextAttribute("2")]
[RegisterAttribute("obtain", "(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;", "")]
public static BitmapResource Obtain(Bitmap bitmap, IBitmapPool bitmapPool);
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    private sealed virtual override Object global::Bumptech.Glide.Load.Engine.IResource.Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapTransformation")]
public abstract class Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformation : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    private static BitmapTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Transform(Context context, IResource resource, int outWidth, int outHeight);
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, int p2, int p3);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected abstract virtual Bitmap Transform(IBitmapPool p0, Bitmap p1, int p2, int p3);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public abstract virtual void UpdateDiskCacheKey(MessageDigest p0);
    private sealed virtual override IResource global::Bumptech.Glide.Load.ITransformation.Transform(Context p0, IResource p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapTransformation")]
internal class Bumptech.Glide.Load.Resource.Bitmap.BitmapTransformationInvoker : BitmapTransformation {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BitmapTransformationInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BitmapTransformationInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool p0, Bitmap p1, int p2, int p3);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions")]
public class Bumptech.Glide.Load.Resource.Bitmap.BitmapTransitionOptions : TransitionOptions {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BitmapTransitionOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static BitmapTransitionOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("crossFade", "()Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public BitmapTransitionOptions CrossFade();
    [RegisterAttribute("crossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public BitmapTransitionOptions CrossFade(DrawableCrossFadeFactory drawableCrossFadeFactory);
    [RegisterAttribute("crossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory$Builder;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public BitmapTransitionOptions CrossFade(Builder builder);
    [RegisterAttribute("crossFade", "(I)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public BitmapTransitionOptions CrossFade(int duration);
    [RegisterAttribute("transitionUsing", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public BitmapTransitionOptions TransitionUsing(ITransitionFactory drawableCrossFadeFactory);
    [RegisterAttribute("with", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions With(ITransitionFactory transitionFactory);
    [RegisterAttribute("withCrossFade", "()Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions WithCrossFade();
    [RegisterAttribute("withCrossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions WithCrossFade(DrawableCrossFadeFactory drawableCrossFadeFactory);
    [RegisterAttribute("withCrossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory$Builder;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions WithCrossFade(Builder builder);
    [RegisterAttribute("withCrossFade", "(I)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions WithCrossFade(int duration);
    [RegisterAttribute("withWrapped", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/load/resource/bitmap/BitmapTransitionOptions;", "")]
public static BitmapTransitionOptions WithWrapped(ITransitionFactory drawableCrossFadeFactory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteBufferBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/resource/bitmap/Downsampler;)V", "")]
public ByteBufferBitmapDecoder(Downsampler downsampler);
    private static ByteBufferBitmapDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(ByteBuffer source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(ByteBuffer source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.ByteBufferBitmapImageDecoderResourceDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ByteBufferBitmapImageDecoderResourceDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static ByteBufferBitmapImageDecoderResourceDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(ByteBuffer buffer, int width, int height, Options options);
    [RegisterAttribute("handles", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(ByteBuffer source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/CenterCrop")]
public class Bumptech.Glide.Load.Resource.Bitmap.CenterCrop : BitmapTransformation {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CenterCrop(IntPtr javaReference, JniHandleOwnership transfer);
    private static CenterCrop();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_pool, IntPtr native_toTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/CenterInside")]
public class Bumptech.Glide.Load.Resource.Bitmap.CenterInside : BitmapTransformation {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CenterInside(IntPtr javaReference, JniHandleOwnership transfer);
    private static CenterInside();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_pool, IntPtr native_toTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/CircleCrop")]
public class Bumptech.Glide.Load.Resource.Bitmap.CircleCrop : BitmapTransformation {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CircleCrop(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircleCrop();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_pool, IntPtr native_toTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser")]
public class Bumptech.Glide.Load.Resource.Bitmap.DefaultImageHeaderParser : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DefaultImageHeaderParser(IntPtr javaReference, JniHandleOwnership transfer);
    private static DefaultImageHeaderParser();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrientation", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public sealed virtual int GetOrientation(Stream is, IArrayPool byteArrayPool);
    [RegisterAttribute("getOrientation", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public sealed virtual int GetOrientation(ByteBuffer byteBuffer, IArrayPool byteArrayPool);
    [RegisterAttribute("getType", "(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public sealed virtual ImageHeaderParserImageType GetType(Stream is);
    [RegisterAttribute("getType", "(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public sealed virtual ImageHeaderParserImageType GetType(ByteBuffer byteBuffer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/Downsampler")]
public class Bumptech.Glide.Load.Resource.Bitmap.Downsampler : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("ALLOW_HARDWARE_CONFIG")]
public static Option AllowHardwareConfig { get; }
    [RegisterAttribute("DECODE_FORMAT")]
public static Option DecodeFormat { get; }
    [RegisterAttribute("DOWNSAMPLE_STRATEGY")]
[ObsoleteAttribute("deprecated")]
public static Option DownsampleStrategy { get; }
    [RegisterAttribute("FIX_BITMAP_SIZE_TO_REQUESTED_DIMENSIONS")]
public static Option FixBitmapSizeToRequestedDimensions { get; }
    [RegisterAttribute("PREFERRED_COLOR_SPACE")]
public static Option PreferredColorSpace { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Downsampler(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;Landroid/util/DisplayMetrics;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public Downsampler(IList`1<IImageHeaderParser> parsers, DisplayMetrics displayMetrics, IBitmapPool bitmapPool, IArrayPool byteArrayPool);
    private static Downsampler();
    public static Option get_AllowHardwareConfig();
    public static Option get_DecodeFormat();
    public static Option get_DownsampleStrategy();
    public static Option get_FixBitmapSizeToRequestedDimensions();
    public static Option get_PreferredColorSpace();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Landroid/os/ParcelFileDescriptor;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(ParcelFileDescriptor parcelFileDescriptor, int outWidth, int outHeight, Options options);
    [RegisterAttribute("decode", "(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(Stream is, int outWidth, int outHeight, Options options);
    [RegisterAttribute("decode", "(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/resource/bitmap/Downsampler$DecodeCallbacks;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(Stream is, int requestedWidth, int requestedHeight, Options options, IDecodeCallbacks callbacks);
    [RegisterAttribute("decode", "(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(ByteBuffer buffer, int requestedWidth, int requestedHeight, Options options);
    [RegisterAttribute("handles", "(Landroid/os/ParcelFileDescriptor;)Z", "")]
public bool Handles(ParcelFileDescriptor source);
    [RegisterAttribute("handles", "(Ljava/io/InputStream;)Z", "")]
public bool Handles(Stream is);
    [RegisterAttribute("handles", "(Ljava/nio/ByteBuffer;)Z", "")]
public bool Handles(ByteBuffer byteBuffer);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/DownsampleStrategy")]
public abstract class Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategy : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getSampleSizeRounding_IIII;
    private static Delegate cb_getScaleFactor_IIII;
    [RegisterAttribute("AT_LEAST")]
public static DownsampleStrategy AtLeast { get; }
    [RegisterAttribute("AT_MOST")]
public static DownsampleStrategy AtMost { get; }
    [RegisterAttribute("CENTER_INSIDE")]
public static DownsampleStrategy CenterInside { get; }
    [RegisterAttribute("CENTER_OUTSIDE")]
public static DownsampleStrategy CenterOutside { get; }
    [RegisterAttribute("DEFAULT")]
public static DownsampleStrategy Default { get; }
    [RegisterAttribute("FIT_CENTER")]
public static DownsampleStrategy FitCenter { get; }
    [RegisterAttribute("NONE")]
public static DownsampleStrategy None { get; }
    [RegisterAttribute("OPTION")]
public static Option Option { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DownsampleStrategy(IntPtr javaReference, JniHandleOwnership transfer);
    private static DownsampleStrategy();
    public static DownsampleStrategy get_AtLeast();
    public static DownsampleStrategy get_AtMost();
    public static DownsampleStrategy get_CenterInside();
    public static DownsampleStrategy get_CenterOutside();
    public static DownsampleStrategy get_Default();
    public static DownsampleStrategy get_FitCenter();
    public static DownsampleStrategy get_None();
    public static Option get_Option();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetSampleSizeRounding_IIIIHandler();
    private static IntPtr n_GetSampleSizeRounding_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    [RegisterAttribute("getSampleSizeRounding", "(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;", "GetGetSampleSizeRounding_IIIIHandler")]
public abstract virtual SampleSizeRounding GetSampleSizeRounding(int p0, int p1, int p2, int p3);
    [NullableContextAttribute("1")]
private static Delegate GetGetScaleFactor_IIIIHandler();
    private static float n_GetScaleFactor_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    [RegisterAttribute("getScaleFactor", "(IIII)F", "GetGetScaleFactor_IIIIHandler")]
public abstract virtual float GetScaleFactor(int p0, int p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/DownsampleStrategy")]
internal class Bumptech.Glide.Load.Resource.Bitmap.DownsampleStrategyInvoker : DownsampleStrategy {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DownsampleStrategyInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static DownsampleStrategyInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getSampleSizeRounding", "(IIII)Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy$SampleSizeRounding;", "GetGetSampleSizeRounding_IIIIHandler")]
public virtual SampleSizeRounding GetSampleSizeRounding(int p0, int p1, int p2, int p3);
    [RegisterAttribute("getScaleFactor", "(IIII)F", "GetGetScaleFactor_IIIIHandler")]
public virtual float GetScaleFactor(int p0, int p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/DrawableTransformation")]
public class Bumptech.Glide.Load.Resource.Bitmap.DrawableTransformation : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBitmapDrawable;
    [NullableAttribute("2")]
private static Delegate cb_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DrawableTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/Transformation;Z)V", "")]
public DrawableTransformation(ITransformation wrapped, bool isRequired);
    private static DrawableTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBitmapDrawableHandler();
    private static IntPtr n_AsBitmapDrawable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBitmapDrawable", "()Lcom/bumptech/glide/load/Transformation;", "GetAsBitmapDrawableHandler")]
public virtual ITransformation AsBitmapDrawable();
    private static Delegate GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler();
    private static IntPtr n_Transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_resource, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler")]
public virtual IResource Transform(Context context, IResource resource, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
    private sealed virtual override IResource global::Bumptech.Glide.Load.ITransformation.Transform(Context p0, IResource p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/ExifInterfaceImageHeaderParser")]
public class Bumptech.Glide.Load.Resource.Bitmap.ExifInterfaceImageHeaderParser : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExifInterfaceImageHeaderParser(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExifInterfaceImageHeaderParser();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrientation", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public sealed virtual int GetOrientation(Stream is, IArrayPool byteArrayPool);
    [RegisterAttribute("getOrientation", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I", "")]
public sealed virtual int GetOrientation(ByteBuffer byteBuffer, IArrayPool byteArrayPool);
    [RegisterAttribute("getType", "(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public sealed virtual ImageHeaderParserImageType GetType(Stream is);
    [RegisterAttribute("getType", "(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;", "")]
public sealed virtual ImageHeaderParserImageType GetType(ByteBuffer byteBuffer);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/FitCenter")]
public class Bumptech.Glide.Load.Resource.Bitmap.FitCenter : BitmapTransformation {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FitCenter(IntPtr javaReference, JniHandleOwnership transfer);
    private static FitCenter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_pool, IntPtr native_toTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/GranularRoundedCorners")]
public class Bumptech.Glide.Load.Resource.Bitmap.GranularRoundedCorners : BitmapTransformation {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GranularRoundedCorners(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FFFF)V", "")]
public GranularRoundedCorners(float topLeft, float topRight, float bottomRight, float bottomLeft);
    private static GranularRoundedCorners();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/HardwareConfigState")]
public class Bumptech.Glide.Load.Resource.Bitmap.HardwareConfigState : Object {
    [RegisterAttribute("NO_MAX_FD_COUNT")]
[ObsoleteAttribute("deprecated")]
public static int NoMaxFdCount;
    private static JniPeerMembers _members;
    [RegisterAttribute("BLOCK_HARDWARE_BITMAPS_WHEN_GL_CONTEXT_MIGHT_NOT_BE_INITIALIZED")]
public static bool BlockHardwareBitmapsWhenGlContextMightNotBeInitialized { get; }
    [RegisterAttribute("HARDWARE_BITMAPS_SUPPORTED")]
public static bool HardwareBitmapsSupported { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public static HardwareConfigState Instance { get; }
    internal HardwareConfigState(IntPtr javaReference, JniHandleOwnership transfer);
    private static HardwareConfigState();
    public static bool get_BlockHardwareBitmapsWhenGlContextMightNotBeInitialized();
    public static bool get_HardwareBitmapsSupported();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getInstance", "()Lcom/bumptech/glide/load/resource/bitmap/HardwareConfigState;", "")]
public static HardwareConfigState get_Instance();
    [RegisterAttribute("blockHardwareBitmaps", "()V", "")]
public void BlockHardwareBitmaps();
    [RegisterAttribute("isHardwareConfigAllowed", "(IIZZ)Z", "")]
public bool IsHardwareConfigAllowed(int targetWidth, int targetHeight, bool isHardwareConfigAllowed, bool isExifOrientationRequired);
    [RegisterAttribute("unblockHardwareBitmaps", "()V", "")]
public void UnblockHardwareBitmaps();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/InputStreamBitmapImageDecoderResourceDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.InputStreamBitmapImageDecoderResourceDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InputStreamBitmapImageDecoderResourceDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static InputStreamBitmapImageDecoderResourceDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(Stream stream, int width, int height, Options options);
    [RegisterAttribute("handles", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(Stream source, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource")]
public class Bumptech.Glide.Load.Resource.Bitmap.LazyBitmapDrawableResource : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    internal LazyBitmapDrawableResource(IntPtr javaReference, JniHandleOwnership transfer);
    private static LazyBitmapDrawableResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "")]
public sealed virtual Class get_ResourceClass();
    [RegisterAttribute("getSize", "()I", "")]
public sealed virtual int get_Size();
    [RegisterAttribute("get", "()Landroid/graphics/drawable/BitmapDrawable;", "")]
public BitmapDrawable Get();
    [RegisterAttribute("initialize", "()V", "")]
public sealed virtual void Initialize();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("obtain", "(Landroid/content/Context;Landroid/graphics/Bitmap;)Lcom/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource;", "")]
public static LazyBitmapDrawableResource Obtain(Context context, Bitmap bitmap);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("obtain", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Lcom/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource;", "")]
public static LazyBitmapDrawableResource Obtain(Resources resources, IBitmapPool bitmapPool, Bitmap bitmap);
    [NullableContextAttribute("2")]
[RegisterAttribute("obtain", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public static IResource Obtain(Resources resources, IResource bitmapResource);
    [RegisterAttribute("recycle", "()V", "")]
public sealed virtual void Recycle();
    private sealed virtual override Object global::Bumptech.Glide.Load.Engine.IResource.Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/ParcelFileDescriptorBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.ParcelFileDescriptorBitmapDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ParcelFileDescriptorBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/resource/bitmap/Downsampler;)V", "")]
public ParcelFileDescriptorBitmapDecoder(Downsampler downsampler);
    private static ParcelFileDescriptorBitmapDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Landroid/os/ParcelFileDescriptor;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(ParcelFileDescriptor source, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/os/ParcelFileDescriptor;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(ParcelFileDescriptor source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream")]
public class Bumptech.Glide.Load.Resource.Bitmap.RecyclableBufferedInputStream : FilterInputStream {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_fixMarkLimit;
    [NullableAttribute("2")]
private static Delegate cb_release;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected RecyclableBufferedInputStream(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public RecyclableBufferedInputStream(Stream in, IArrayPool byteArrayPool);
    private static RecyclableBufferedInputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetFixMarkLimitHandler();
    private static void n_FixMarkLimit(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("fixMarkLimit", "()V", "GetFixMarkLimitHandler")]
public virtual void FixMarkLimit();
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("release", "()V", "GetReleaseHandler")]
public virtual void Release();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/ResourceBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.ResourceBitmapDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResourceBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/resource/drawable/ResourceDrawableDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public ResourceBitmapDecoder(ResourceDrawableDecoder drawableDecoder, IBitmapPool bitmapPool);
    private static ResourceBitmapDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Uri source, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Landroid/net/Uri;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Uri source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/Rotate")]
public class Bumptech.Glide.Load.Resource.Bitmap.Rotate : BitmapTransformation {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Rotate(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public Rotate(int degreesToRotate);
    private static Rotate();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler();
    private static IntPtr n_Transform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_II(IntPtr jnienv, IntPtr native__this, IntPtr native_pool, IntPtr native_toTransform, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "GetTransform_Lcom_bumptech_glide_load_engine_bitmap_recycle_BitmapPool_Landroid_graphics_Bitmap_IIHandler")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/RoundedCorners")]
public class Bumptech.Glide.Load.Resource.Bitmap.RoundedCorners : BitmapTransformation {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RoundedCorners(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public RoundedCorners(int roundingRadius);
    private static RoundedCorners();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
protected virtual Bitmap Transform(IBitmapPool pool, Bitmap toTransform, int outWidth, int outHeight);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.StreamBitmapDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected StreamBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/resource/bitmap/Downsampler;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public StreamBitmapDecoder(Downsampler downsampler, IArrayPool byteArrayPool);
    private static StreamBitmapDecoder();
    private sealed virtual override IResource Bumptech.Glide.Load.IResourceDecoder.Decode(Object source, int width, int height, Options options);
    private sealed virtual override bool Bumptech.Glide.Load.IResourceDecoder.Handles(Object source, Options options);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Stream source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Stream source, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/TransformationUtils")]
public class Bumptech.Glide.Load.Resource.Bitmap.TransformationUtils : Object {
    [RegisterAttribute("PAINT_FLAGS")]
public static int PaintFlags;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public static ILock BitmapDrawableLock { get; }
    internal TransformationUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static TransformationUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmapDrawableLock", "()Ljava/util/concurrent/locks/Lock;", "")]
public static ILock get_BitmapDrawableLock();
    [RegisterAttribute("centerCrop", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
public static Bitmap CenterCrop(IBitmapPool pool, Bitmap inBitmap, int width, int height);
    [RegisterAttribute("centerInside", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
public static Bitmap CenterInside(IBitmapPool pool, Bitmap inBitmap, int width, int height);
    [RegisterAttribute("circleCrop", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
public static Bitmap CircleCrop(IBitmapPool pool, Bitmap inBitmap, int destWidth, int destHeight);
    [RegisterAttribute("fitCenter", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;", "")]
public static Bitmap FitCenter(IBitmapPool pool, Bitmap inBitmap, int width, int height);
    [RegisterAttribute("getExifOrientationDegrees", "(I)I", "")]
public static int GetExifOrientationDegrees(int exifOrientation);
    [RegisterAttribute("isExifOrientationRequired", "(I)Z", "")]
public static bool IsExifOrientationRequired(int exifOrientation);
    [RegisterAttribute("rotateImage", "(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;", "")]
public static Bitmap RotateImage(Bitmap imageToOrient, int degreesToRotate);
    [RegisterAttribute("rotateImageExif", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;", "")]
public static Bitmap RotateImageExif(IBitmapPool pool, Bitmap inBitmap, int exifOrientation);
    [RegisterAttribute("roundedCorners", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;FFFF)Landroid/graphics/Bitmap;", "")]
public static Bitmap RoundedCorners(IBitmapPool pool, Bitmap inBitmap, float topLeft, float topRight, float bottomRight, float bottomLeft);
    [RegisterAttribute("roundedCorners", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;", "")]
public static Bitmap RoundedCorners(IBitmapPool pool, Bitmap inBitmap, int roundingRadius);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("roundedCorners", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;", "")]
public static Bitmap RoundedCorners(IBitmapPool pool, Bitmap inBitmap, int width, int height, int roundingRadius);
    [NullableContextAttribute("2")]
[RegisterAttribute("setAlpha", "(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V", "")]
public static void SetAlpha(Bitmap inBitmap, Bitmap outBitmap);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/UnitBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.UnitBitmapDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UnitBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnitBitmapDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Landroid/graphics/Bitmap;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(Bitmap source, int width, int height, Options options);
    [RegisterAttribute("handles", "(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(Bitmap source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/VideoBitmapDecoder")]
public class Bumptech.Glide.Load.Resource.Bitmap.VideoBitmapDecoder : VideoDecoder {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected VideoBitmapDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public VideoBitmapDecoder(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public VideoBitmapDecoder(IBitmapPool bitmapPool);
    private static VideoBitmapDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bitmap/VideoDecoder")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Resource.Bitmap.VideoDecoder : Object {
    [RegisterAttribute("DEFAULT_FRAME")]
public static long DefaultFrame;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
[RegisterAttribute("FRAME_OPTION")]
public static Option FrameOption { get; }
    [NullableAttribute("2")]
[RegisterAttribute("TARGET_FRAME")]
public static Option TargetFrame { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected VideoDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static VideoDecoder();
    [NullableContextAttribute("2")]
public static Option get_FrameOption();
    [NullableContextAttribute("2")]
public static Option get_TargetFrame();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("asset", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder Asset(IBitmapPool bitmapPool);
    [NullableContextAttribute("2")]
[RegisterAttribute("byteBuffer", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder ByteBuffer(IBitmapPool bitmapPool);
    private static Delegate GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, int outWidth, int outHeight, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_lang_Object_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Object resource, int outWidth, int outHeight, Options options);
    private static Delegate GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_data, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_lang_Object_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Object data, Options options);
    [NullableContextAttribute("2")]
[RegisterAttribute("parcel", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder Parcel(IBitmapPool bitmapPool);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bytes/ByteBufferRewinder")]
public class Bumptech.Glide.Load.Resource.Bytes.ByteBufferRewinder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_cleanup;
    [NullableAttribute("2")]
private static Delegate cb_rewindAndGet;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteBufferRewinder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/nio/ByteBuffer;)V", "")]
public ByteBufferRewinder(ByteBuffer buffer);
    private static ByteBufferRewinder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCleanupHandler();
    private static void n_Cleanup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cleanup", "()V", "GetCleanupHandler")]
public virtual void Cleanup();
    private static Delegate GetRewindAndGetHandler();
    private static IntPtr n_RewindAndGet(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("rewindAndGet", "()Ljava/nio/ByteBuffer;", "GetRewindAndGetHandler")]
public virtual ByteBuffer RewindAndGet();
    private sealed virtual override Object global::Bumptech.Glide.Load.Data.IDataRewinder.RewindAndGet();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/bytes/BytesResource")]
public class Bumptech.Glide.Load.Resource.Bytes.BytesResource : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    [NullableAttribute("2")]
private static Delegate cb_get;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected BytesResource(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "([B)V", "")]
public BytesResource(Byte[] bytes);
    private static BytesResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("get", "()[B", "GetGetHandler")]
public virtual Byte[] Get();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/DefaultOnHeaderDecodedListener")]
public class Bumptech.Glide.Load.Resource.DefaultOnHeaderDecodedListener : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DefaultOnHeaderDecodedListener(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(IILcom/bumptech/glide/load/Options;)V", "")]
public DefaultOnHeaderDecodedListener(int requestedWidth, int requestedHeight, Options options);
    private static DefaultOnHeaderDecodedListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onHeaderDecoded", "(Landroid/graphics/ImageDecoder;Landroid/graphics/ImageDecoder$ImageInfo;Landroid/graphics/ImageDecoder$Source;)V", "")]
public sealed virtual void OnHeaderDecoded(ImageDecoder decoder, ImageInfo info, Source source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/AnimatedImageDecoder")]
public class Bumptech.Glide.Load.Resource.Drawable.AnimatedImageDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AnimatedImageDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static AnimatedImageDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("byteBufferDecoder", "(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder ByteBufferDecoder(IList`1<IImageHeaderParser> imageHeaderParsers, IArrayPool arrayPool);
    [NullableContextAttribute("2")]
[RegisterAttribute("streamDecoder", "(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder StreamDecoder(IList`1<IImageHeaderParser> imageHeaderParsers, IArrayPool arrayPool);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/AnimatedWebpDecoder")]
public class Bumptech.Glide.Load.Resource.Drawable.AnimatedWebpDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AnimatedWebpDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static AnimatedWebpDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("byteBufferDecoder", "(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder ByteBufferDecoder(IList`1<IImageHeaderParser> imageHeaderParsers, IArrayPool arrayPool);
    [NullableContextAttribute("2")]
[RegisterAttribute("streamDecoder", "(Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/load/ResourceDecoder;", "")]
public static IResourceDecoder StreamDecoder(IList`1<IImageHeaderParser> imageHeaderParsers, IArrayPool arrayPool);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/DrawableDecoderCompat")]
public class Bumptech.Glide.Load.Resource.Drawable.DrawableDecoderCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DrawableDecoderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableDecoderCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Landroid/content/Context;Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Context ourContext, Context targetContext, int id);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Landroid/content/Context;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Context ourContext, int id, Theme theme);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/DrawableResource")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Load.Resource.Drawable.DrawableResource : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_initialize;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    [NullableAttribute("2")]
[RegisterAttribute("drawable")]
protected Drawable Drawable { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected DrawableResource(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/graphics/drawable/Drawable;)V", "")]
public DrawableResource(Object drawable);
    private static DrawableResource();
    [NullableContextAttribute("2")]
protected Drawable get_Drawable();
    [NullableContextAttribute("2")]
protected void set_Drawable(Drawable value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("get", "()Landroid/graphics/drawable/Drawable;", "")]
public sealed virtual Object Get();
    private static Delegate GetInitializeHandler();
    private static void n_Initialize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("initialize", "()V", "GetInitializeHandler")]
public virtual void Initialize();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public abstract virtual void Recycle();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public abstract virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public abstract virtual int get_Size();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/DrawableResource")]
internal class Bumptech.Glide.Load.Resource.Drawable.DrawableResourceInvoker : DrawableResource {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    public DrawableResourceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static DrawableResourceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/DrawableTransitionOptions")]
public class Bumptech.Glide.Load.Resource.Drawable.DrawableTransitionOptions : TransitionOptions {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DrawableTransitionOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableTransitionOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("crossFade", "()Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public DrawableTransitionOptions CrossFade();
    [RegisterAttribute("crossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public DrawableTransitionOptions CrossFade(DrawableCrossFadeFactory drawableCrossFadeFactory);
    [RegisterAttribute("crossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory$Builder;)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public DrawableTransitionOptions CrossFade(Builder builder);
    [RegisterAttribute("crossFade", "(I)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public DrawableTransitionOptions CrossFade(int duration);
    [RegisterAttribute("with", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public static DrawableTransitionOptions With(ITransitionFactory transitionFactory);
    [RegisterAttribute("withCrossFade", "()Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public static DrawableTransitionOptions WithCrossFade();
    [RegisterAttribute("withCrossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory;)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public static DrawableTransitionOptions WithCrossFade(DrawableCrossFadeFactory drawableCrossFadeFactory);
    [RegisterAttribute("withCrossFade", "(Lcom/bumptech/glide/request/transition/DrawableCrossFadeFactory$Builder;)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public static DrawableTransitionOptions WithCrossFade(Builder builder);
    [RegisterAttribute("withCrossFade", "(I)Lcom/bumptech/glide/load/resource/drawable/DrawableTransitionOptions;", "")]
public static DrawableTransitionOptions WithCrossFade(int duration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/ResourceDrawableDecoder")]
public class Bumptech.Glide.Load.Resource.Drawable.ResourceDrawableDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
[RegisterAttribute("THEME")]
public static Option Theme { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResourceDrawableDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ResourceDrawableDecoder(Context context);
    private static ResourceDrawableDecoder();
    [NullableContextAttribute("2")]
public static Option get_Theme();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Landroid_net_Uri_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Uri source, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Landroid/net/Uri;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Landroid_net_Uri_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Uri source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/drawable/UnitDrawableDecoder")]
public class Bumptech.Glide.Load.Resource.Drawable.UnitDrawableDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Landroid_graphics_drawable_Drawable_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnitDrawableDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnitDrawableDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Landroid_graphics_drawable_Drawable_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Landroid_graphics_drawable_Drawable_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Landroid/graphics/drawable/Drawable;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Landroid_graphics_drawable_Drawable_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Drawable source, int width, int height, Options options);
    private static Delegate GetHandles_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Landroid/graphics/drawable/Drawable;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Drawable source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/file/FileDecoder")]
public class Bumptech.Glide.Load.Resource.File.FileDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_io_File_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FileDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static FileDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_io_File_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/io/File;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_io_File_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(File source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(File source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/file/FileResource")]
public class Bumptech.Glide.Load.Resource.File.FileResource : SimpleResource {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FileResource(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/io/File;)V", "")]
public FileResource(File file);
    private static FileResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/ByteBufferGifDecoder")]
public class Bumptech.Glide.Load.Resource.Gif.ByteBufferGifDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ByteBufferGifDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ByteBufferGifDecoder(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/util/List;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public ByteBufferGifDecoder(Context context, IList`1<IImageHeaderParser> parsers, IBitmapPool bitmapPool, IArrayPool arrayPool);
    private static ByteBufferGifDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/resource/gif/GifDrawableResource;", "GetDecode_Ljava_nio_ByteBuffer_IILcom_bumptech_glide_load_Options_Handler")]
public virtual GifDrawableResource Decode(ByteBuffer source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_nio_ByteBuffer_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(ByteBuffer source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifBitmapProvider")]
public class Bumptech.Glide.Load.Resource.Gif.GifBitmapProvider : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GifBitmapProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public GifBitmapProvider(IBitmapPool bitmapPool);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public GifBitmapProvider(IBitmapPool bitmapPool, IArrayPool arrayPool);
    private static GifBitmapProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("obtain", "(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;", "")]
public sealed virtual Bitmap Obtain(int width, int height, Config config);
    [RegisterAttribute("obtainByteArray", "(I)[B", "")]
public sealed virtual Byte[] ObtainByteArray(int size);
    [RegisterAttribute("obtainIntArray", "(I)[I", "")]
public sealed virtual Int32[] ObtainIntArray(int size);
    [RegisterAttribute("release", "(Landroid/graphics/Bitmap;)V", "")]
public sealed virtual void Release(Bitmap bitmap);
    [RegisterAttribute("release", "([B)V", "")]
public sealed virtual void Release(Byte[] bytes);
    [RegisterAttribute("release", "([I)V", "")]
public sealed virtual void Release(Int32[] array);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifDrawable")]
public class Bumptech.Glide.Load.Resource.Gif.GifDrawable : Drawable {
    [RegisterAttribute("LOOP_FOREVER")]
public static int LoopForever;
    [RegisterAttribute("LOOP_INTRINSIC")]
public static int LoopIntrinsic;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getBuffer;
    private static Delegate cb_getFirstFrame;
    private static Delegate cb_getFrameCount;
    private static Delegate cb_getFrameIndex;
    private static Delegate cb_getFrameTransformation;
    private static Delegate cb_isRunning;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getSize;
    private static Delegate cb_clearAnimationCallbacks;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_onFrameReady;
    private static Delegate cb_recycle;
    private static Delegate cb_registerAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setFrameTransformation_Lcom_bumptech_glide_load_Transformation_Landroid_graphics_Bitmap_;
    private static Delegate cb_setLoopCount_I;
    private static Delegate cb_start;
    private static Delegate cb_startFromFirstFrame;
    private static Delegate cb_stop;
    private static Delegate cb_unregisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ByteBuffer Buffer { get; }
    public Bitmap FirstFrame { get; }
    public int FrameCount { get; }
    public int FrameIndex { get; }
    public ITransformation FrameTransformation { get; }
    public bool IsRunning { get; }
    public int Opacity { get; }
    public int Size { get; }
    protected GifDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Lcom/bumptech/glide/gifdecoder/GifDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/Transformation;IILandroid/graphics/Bitmap;)V", "")]
[ObsoleteAttribute("deprecated")]
public GifDrawable(Context context, IGifDecoder gifDecoder, IBitmapPool bitmapPool, ITransformation frameTransformation, int targetFrameWidth, int targetFrameHeight, Bitmap firstFrame);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Lcom/bumptech/glide/gifdecoder/GifDecoder;Lcom/bumptech/glide/load/Transformation;IILandroid/graphics/Bitmap;)V", "")]
public GifDrawable(Context context, IGifDecoder gifDecoder, ITransformation frameTransformation, int targetFrameWidth, int targetFrameHeight, Bitmap firstFrame);
    private static GifDrawable();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetBufferHandler();
    private static IntPtr n_GetBuffer(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBuffer", "()Ljava/nio/ByteBuffer;", "GetGetBufferHandler")]
public virtual ByteBuffer get_Buffer();
    [NullableContextAttribute("1")]
private static Delegate GetGetFirstFrameHandler();
    private static IntPtr n_GetFirstFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFirstFrame", "()Landroid/graphics/Bitmap;", "GetGetFirstFrameHandler")]
public virtual Bitmap get_FirstFrame();
    [NullableContextAttribute("1")]
private static Delegate GetGetFrameCountHandler();
    private static int n_GetFrameCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFrameCount", "()I", "GetGetFrameCountHandler")]
public virtual int get_FrameCount();
    [NullableContextAttribute("1")]
private static Delegate GetGetFrameIndexHandler();
    private static int n_GetFrameIndex(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFrameIndex", "()I", "GetGetFrameIndexHandler")]
public virtual int get_FrameIndex();
    [NullableContextAttribute("1")]
private static Delegate GetGetFrameTransformationHandler();
    private static IntPtr n_GetFrameTransformation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFrameTransformation", "()Lcom/bumptech/glide/load/Transformation;", "GetGetFrameTransformationHandler")]
public virtual ITransformation get_FrameTransformation();
    [NullableContextAttribute("1")]
private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    [NullableContextAttribute("1")]
private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    [NullableContextAttribute("1")]
private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    [NullableContextAttribute("1")]
private static Delegate GetClearAnimationCallbacksHandler();
    private static void n_ClearAnimationCallbacks(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearAnimationCallbacks", "()V", "GetClearAnimationCallbacksHandler")]
public virtual void ClearAnimationCallbacks();
    [NullableContextAttribute("1")]
private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [NullableContextAttribute("1")]
[RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    [NullableContextAttribute("1")]
private static Delegate GetOnFrameReadyHandler();
    private static void n_OnFrameReady(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onFrameReady", "()V", "GetOnFrameReadyHandler")]
public virtual void OnFrameReady();
    [NullableContextAttribute("1")]
private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    [NullableContextAttribute("1")]
private static Delegate GetRegisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_Handler();
    private static void n_RegisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_animationCallback);
    [NullableContextAttribute("1")]
[RegisterAttribute("registerAnimationCallback", "(Landroidx/vectordrawable/graphics/drawable/Animatable2Compat$AnimationCallback;)V", "GetRegisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_Handler")]
public virtual void RegisterAnimationCallback(Animatable2CompatAnimationCallback animationCallback);
    [NullableContextAttribute("1")]
private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int i);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int i);
    [NullableContextAttribute("1")]
private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    [NullableContextAttribute("1")]
private static Delegate GetSetFrameTransformation_Lcom_bumptech_glide_load_Transformation_Landroid_graphics_Bitmap_Handler();
    private static void n_SetFrameTransformation_Lcom_bumptech_glide_load_Transformation_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_frameTransformation, IntPtr native_firstFrame);
    [RegisterAttribute("setFrameTransformation", "(Lcom/bumptech/glide/load/Transformation;Landroid/graphics/Bitmap;)V", "GetSetFrameTransformation_Lcom_bumptech_glide_load_Transformation_Landroid_graphics_Bitmap_Handler")]
public virtual void SetFrameTransformation(ITransformation frameTransformation, Bitmap firstFrame);
    [NullableContextAttribute("1")]
private static Delegate GetSetLoopCount_IHandler();
    private static void n_SetLoopCount_I(IntPtr jnienv, IntPtr native__this, int loopCount);
    [RegisterAttribute("setLoopCount", "(I)V", "GetSetLoopCount_IHandler")]
public virtual void SetLoopCount(int loopCount);
    [NullableContextAttribute("1")]
private static Delegate GetStartHandler();
    private static void n_Start(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("start", "()V", "GetStartHandler")]
public virtual void Start();
    [NullableContextAttribute("1")]
private static Delegate GetStartFromFirstFrameHandler();
    private static void n_StartFromFirstFrame(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("startFromFirstFrame", "()V", "GetStartFromFirstFrameHandler")]
public virtual void StartFromFirstFrame();
    [NullableContextAttribute("1")]
private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
    [NullableContextAttribute("1")]
private static Delegate GetUnregisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_Handler();
    private static bool n_UnregisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_animationCallback);
    [NullableContextAttribute("1")]
[RegisterAttribute("unregisterAnimationCallback", "(Landroidx/vectordrawable/graphics/drawable/Animatable2Compat$AnimationCallback;)Z", "GetUnregisterAnimationCallback_Landroidx_vectordrawable_graphics_drawable_Animatable2Compat_AnimationCallback_Handler")]
public virtual bool UnregisterAnimationCallback(Animatable2CompatAnimationCallback animationCallback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifDrawableEncoder")]
public class Bumptech.Glide.Load.Resource.Gif.GifDrawableEncoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_getEncodeStrategy_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected GifDrawableEncoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static GifDrawableEncoder();
    public virtual bool Encode(Object data, File file, Options options);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Encode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_data, IntPtr native_file, IntPtr native_options);
    [RegisterAttribute("encode", "(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z", "GetEncode_Lcom_bumptech_glide_load_engine_Resource_Ljava_io_File_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Encode(IResource data, File file, Options options);
    private static Delegate GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_GetEncodeStrategy_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_options);
    [RegisterAttribute("getEncodeStrategy", "(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;", "GetGetEncodeStrategy_Lcom_bumptech_glide_load_Options_Handler")]
public virtual EncodeStrategy GetEncodeStrategy(Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifDrawableResource")]
public class Bumptech.Glide.Load.Resource.Gif.GifDrawableResource : DrawableResource {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_getSize;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected GifDrawableResource(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/resource/gif/GifDrawable;)V", "")]
public GifDrawableResource(GifDrawable drawable);
    private static GifDrawableResource();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifDrawableTransformation")]
public class Bumptech.Glide.Load.Resource.Gif.GifDrawableTransformation : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected GifDrawableTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/Transformation;)V", "")]
public GifDrawableTransformation(ITransformation wrapped);
    private static GifDrawableTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler();
    private static IntPtr n_Transform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_II(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_resource, int outWidth, int outHeight);
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "GetTransform_Landroid_content_Context_Lcom_bumptech_glide_load_engine_Resource_IIHandler")]
public virtual IResource Transform(Context context, IResource resource, int outWidth, int outHeight);
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
    private sealed virtual override IResource global::Bumptech.Glide.Load.ITransformation.Transform(Context p0, IResource p1, int p2, int p3);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifFrameResourceDecoder")]
public class Bumptech.Glide.Load.Resource.Gif.GifFrameResourceDecoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GifFrameResourceDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
public GifFrameResourceDecoder(IBitmapPool bitmapPool);
    private static GifFrameResourceDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("decode", "(Lcom/bumptech/glide/gifdecoder/GifDecoder;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Decode(IGifDecoder source, int width, int height, Options options);
    [RegisterAttribute("handles", "(Lcom/bumptech/glide/gifdecoder/GifDecoder;Lcom/bumptech/glide/load/Options;)Z", "")]
public bool Handles(IGifDecoder source, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.IResourceDecoder.Decode(Object p0, int p1, int p2, Options p3);
    private sealed virtual override bool global::Bumptech.Glide.Load.IResourceDecoder.Handles(Object p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/GifOptions")]
public class Bumptech.Glide.Load.Resource.Gif.GifOptions : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DECODE_FORMAT")]
public static Option DecodeFormat { get; }
    [NullableAttribute("2")]
[RegisterAttribute("DISABLE_ANIMATION")]
public static Option DisableAnimation { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GifOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static GifOptions();
    [NullableContextAttribute("2")]
public static Option get_DecodeFormat();
    [NullableContextAttribute("2")]
public static Option get_DisableAnimation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/gif/StreamGifDecoder")]
public class Bumptech.Glide.Load.Resource.Gif.StreamGifDecoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_;
    [NullableAttribute("2")]
private static Delegate cb_handles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected StreamGifDecoder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/util/List;Lcom/bumptech/glide/load/ResourceDecoder;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V", "")]
public StreamGifDecoder(IList`1<IImageHeaderParser> parsers, IResourceDecoder byteBufferDecoder, IArrayPool byteArrayPool);
    private static StreamGifDecoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDecode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Decode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, int width, int height, IntPtr native_options);
    [RegisterAttribute("decode", "(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetDecode_Ljava_io_InputStream_IILcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Decode(Stream source, int width, int height, Options options);
    private static Delegate GetHandles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_Handler();
    private static bool n_Handles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_source, IntPtr native_options);
    [RegisterAttribute("handles", "(Ljava/io/InputStream;Lcom/bumptech/glide/load/Options;)Z", "GetHandles_Ljava_io_InputStream_Lcom_bumptech_glide_load_Options_Handler")]
public virtual bool Handles(Stream source, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Bumptech.Glide.Load.Resource.ImageDecoderResourceDecoder : object {
    public IResource Decode(Object source, int requestedWidth, int requestedHeight, Options options);
    public bool Handles(Object source, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/SimpleResource")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Resource.SimpleResource : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClass;
    [NullableAttribute("2")]
private static Delegate cb_recycle;
    [NullableAttribute("2")]
[RegisterAttribute("data")]
protected Object Data { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Class ResourceClass { get; }
    public int Size { get; }
    protected SimpleResource(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public SimpleResource(Object data);
    private static SimpleResource();
    [NullableContextAttribute("2")]
protected Object get_Data();
    [NullableContextAttribute("2")]
protected void set_Data(Object value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetResourceClassHandler();
    private static IntPtr n_GetResourceClass(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "GetGetResourceClassHandler")]
public virtual Class get_ResourceClass();
    [RegisterAttribute("getSize", "()I", "")]
public sealed virtual int get_Size();
    [RegisterAttribute("get", "()Ljava/lang/Object;", "")]
public sealed virtual Object Get();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/BitmapBytesTranscoder")]
public class Bumptech.Glide.Load.Resource.Transcode.BitmapBytesTranscoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapBytesTranscoder(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/Bitmap$CompressFormat;I)V", "")]
public BitmapBytesTranscoder(CompressFormat compressFormat, int quality);
    private static BitmapBytesTranscoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_toTranscode, IntPtr native_options);
    [RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Transcode(IResource toTranscode, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder.Transcode(IResource p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/BitmapDrawableTranscoder")]
public class Bumptech.Glide.Load.Resource.Transcode.BitmapDrawableTranscoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapDrawableTranscoder(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BitmapDrawableTranscoder(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/res/Resources;)V", "")]
public BitmapDrawableTranscoder(Resources resources);
    [RegisterAttribute(".ctor", "(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V", "")]
[ObsoleteAttribute("deprecated")]
public BitmapDrawableTranscoder(Resources resources, IBitmapPool bitmapPool);
    private static BitmapDrawableTranscoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_toTranscode, IntPtr native_options);
    [RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Transcode(IResource toTranscode, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder.Transcode(IResource p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/DrawableBytesTranscoder")]
public class Bumptech.Glide.Load.Resource.Transcode.DrawableBytesTranscoder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DrawableBytesTranscoder(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V", "")]
public DrawableBytesTranscoder(IBitmapPool bitmapPool, IResourceTranscoder bitmapBytesTranscoder, IResourceTranscoder gifDrawableBytesTranscoder);
    private static DrawableBytesTranscoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "")]
public IResource Transcode(IResource toTranscode, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder.Transcode(IResource p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/GifDrawableBytesTranscoder")]
public class Bumptech.Glide.Load.Resource.Transcode.GifDrawableBytesTranscoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected GifDrawableBytesTranscoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static GifDrawableBytesTranscoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_toTranscode, IntPtr native_options);
    [RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Transcode(IResource toTranscode, Options options);
    private sealed virtual override IResource global::Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder.Transcode(IResource p0, Options p1);
}
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/ResourceTranscoder", "", "Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoder {
    [NullableContextAttribute("1")]
[RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler:Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoderInvoker, Xamarin.Android.Glide")]
public abstract virtual IResource Transcode(IResource p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/ResourceTranscoder")]
internal class Bumptech.Glide.Load.Resource.Transcode.IResourceTranscoderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    private IntPtr id_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IResourceTranscoderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResourceTranscoderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResourceTranscoder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual IResource Transcode(IResource p0, Options p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/TranscoderRegistry")]
public class Bumptech.Glide.Load.Resource.Transcode.TranscoderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getTranscodeClasses_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_register_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TranscoderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static TranscoderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGet_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_Get_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_transcodedClass);
    [RegisterAttribute("get", "(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;", "GetGet_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IResourceTranscoder Get(Class resourceClass, Class transcodedClass);
    private static Delegate GetGetTranscodeClasses_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_GetTranscodeClasses_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_transcodeClass);
    [RegisterAttribute("getTranscodeClasses", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;", "GetGetTranscodeClasses_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList`1<Class> GetTranscodeClasses(Class resourceClass, Class transcodeClass);
    private static Delegate GetRegister_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_Handler();
    private static void n_Register_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_decodedClass, IntPtr native_transcodedClass, IntPtr native_transcoder);
    [RegisterAttribute("register", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V", "GetRegister_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Register(Class decodedClass, Class transcodedClass, IResourceTranscoder transcoder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/transcode/UnitTranscoder")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Resource.Transcode.UnitTranscoder : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnitTranscoder(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnitTranscoder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "()Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IResourceTranscoder Get();
    private static Delegate GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler();
    private static IntPtr n_Transcode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_(IntPtr jnienv, IntPtr native__this, IntPtr native_toTranscode, IntPtr native_options);
    [RegisterAttribute("transcode", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;", "GetTranscode_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_Options_Handler")]
public virtual IResource Transcode(IResource toTranscode, Options options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/load/resource/UnitTransformation")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Load.Resource.UnitTransformation : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UnitTransformation(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnitTransformation();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("get", "()Lcom/bumptech/glide/load/resource/UnitTransformation;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static UnitTransformation Get();
    [RegisterAttribute("transform", "(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;", "")]
public sealed virtual IResource Transform(Context context, IResource resource, int outWidth, int outHeight);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public sealed virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
public class Bumptech.Glide.Manager.ConnectivityMonitorConnectivityEventArgs : EventArgs {
    private bool p0;
    public bool P0 { get; }
    public ConnectivityMonitorConnectivityEventArgs(bool p0);
    public bool get_P0();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/DefaultConnectivityMonitorFactory")]
public class Bumptech.Glide.Manager.DefaultConnectivityMonitorFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DefaultConnectivityMonitorFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static DefaultConnectivityMonitorFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_Handler();
    private static IntPtr n_Build_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_listener);
    [RegisterAttribute("build", "(Landroid/content/Context;Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)Lcom/bumptech/glide/manager/ConnectivityMonitor;", "GetBuild_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_Handler")]
public virtual IConnectivityMonitor Build(Context context, IConnectivityMonitorConnectivityListener listener);
}
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitor", "", "Bumptech.Glide.Manager.IConnectivityMonitorInvoker")]
public interface Bumptech.Glide.Manager.IConnectivityMonitor {
}
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener", "", "Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListenerInvoker")]
public interface Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListener {
    [RegisterAttribute("onConnectivityChanged", "(Z)V", "GetOnConnectivityChanged_ZHandler:Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnConnectivityChanged(bool p0);
}
[RegisterAttribute("mono/com/bumptech/glide/manager/ConnectivityMonitor_ConnectivityListenerImplementor")]
internal class Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<ConnectivityMonitorConnectivityEventArgs> Handler;
    [NullableContextAttribute("1")]
public IConnectivityMonitorConnectivityListenerImplementor(object sender);
    public sealed virtual void OnConnectivityChanged(bool p0);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IConnectivityMonitorConnectivityListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener")]
internal class Bumptech.Glide.Manager.IConnectivityMonitorConnectivityListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onConnectivityChanged_Z;
    private IntPtr id_onConnectivityChanged_Z;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IConnectivityMonitorConnectivityListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IConnectivityMonitorConnectivityListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IConnectivityMonitorConnectivityListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnConnectivityChanged_ZHandler();
    private static void n_OnConnectivityChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual void OnConnectivityChanged(bool p0);
}
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitorFactory", "", "Bumptech.Glide.Manager.IConnectivityMonitorFactoryInvoker")]
public interface Bumptech.Glide.Manager.IConnectivityMonitorFactory {
    [NullableContextAttribute("1")]
[RegisterAttribute("build", "(Landroid/content/Context;Lcom/bumptech/glide/manager/ConnectivityMonitor$ConnectivityListener;)Lcom/bumptech/glide/manager/ConnectivityMonitor;", "GetBuild_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_Handler:Bumptech.Glide.Manager.IConnectivityMonitorFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual IConnectivityMonitor Build(Context p0, IConnectivityMonitorConnectivityListener p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitorFactory")]
internal class Bumptech.Glide.Manager.IConnectivityMonitorFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_build_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_;
    private IntPtr id_build_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IConnectivityMonitorFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IConnectivityMonitorFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IConnectivityMonitorFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuild_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_Handler();
    private static IntPtr n_Build_Landroid_content_Context_Lcom_bumptech_glide_manager_ConnectivityMonitor_ConnectivityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual IConnectivityMonitor Build(Context p0, IConnectivityMonitorConnectivityListener p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/ConnectivityMonitor")]
internal class Bumptech.Glide.Manager.IConnectivityMonitorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    private IntPtr id_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    private IntPtr id_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    private IntPtr id_onStop;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IConnectivityMonitorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IConnectivityMonitorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IConnectivityMonitor GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnDestroy();
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStop();
}
[RegisterAttribute("com/bumptech/glide/manager/Lifecycle", "", "Bumptech.Glide.Manager.ILifecycleInvoker")]
public interface Bumptech.Glide.Manager.ILifecycle {
    [NullableContextAttribute("1")]
[RegisterAttribute("addListener", "(Lcom/bumptech/glide/manager/LifecycleListener;)V", "GetAddListener_Lcom_bumptech_glide_manager_LifecycleListener_Handler:Bumptech.Glide.Manager.ILifecycleInvoker, Xamarin.Android.Glide")]
public abstract virtual void AddListener(ILifecycleListener p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeListener", "(Lcom/bumptech/glide/manager/LifecycleListener;)V", "GetRemoveListener_Lcom_bumptech_glide_manager_LifecycleListener_Handler:Bumptech.Glide.Manager.ILifecycleInvoker, Xamarin.Android.Glide")]
public abstract virtual void RemoveListener(ILifecycleListener p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/Lifecycle")]
internal class Bumptech.Glide.Manager.ILifecycleInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addListener_Lcom_bumptech_glide_manager_LifecycleListener_;
    private IntPtr id_addListener_Lcom_bumptech_glide_manager_LifecycleListener_;
    [NullableAttribute("2")]
private static Delegate cb_removeListener_Lcom_bumptech_glide_manager_LifecycleListener_;
    private IntPtr id_removeListener_Lcom_bumptech_glide_manager_LifecycleListener_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILifecycleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILifecycleInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ILifecycle GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddListener_Lcom_bumptech_glide_manager_LifecycleListener_Handler();
    private static void n_AddListener_Lcom_bumptech_glide_manager_LifecycleListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddListener(ILifecycleListener p0);
    private static Delegate GetRemoveListener_Lcom_bumptech_glide_manager_LifecycleListener_Handler();
    private static void n_RemoveListener_Lcom_bumptech_glide_manager_LifecycleListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveListener(ILifecycleListener p0);
}
[RegisterAttribute("com/bumptech/glide/manager/LifecycleListener", "", "Bumptech.Glide.Manager.ILifecycleListenerInvoker")]
public interface Bumptech.Glide.Manager.ILifecycleListener {
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler:Bumptech.Glide.Manager.ILifecycleListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnDestroy();
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler:Bumptech.Glide.Manager.ILifecycleListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnStart();
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler:Bumptech.Glide.Manager.ILifecycleListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnStop();
}
[RegisterAttribute("mono/com/bumptech/glide/manager/LifecycleListenerImplementor")]
internal class Bumptech.Glide.Manager.ILifecycleListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("2")]
public EventHandler OnDestroyHandler;
    [NullableAttribute("2")]
public EventHandler OnStartHandler;
    [NullableAttribute("2")]
public EventHandler OnStopHandler;
    [NullableContextAttribute("1")]
public ILifecycleListenerImplementor(object sender);
    public sealed virtual void OnDestroy();
    public sealed virtual void OnStart();
    public sealed virtual void OnStop();
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(ILifecycleListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/LifecycleListener")]
internal class Bumptech.Glide.Manager.ILifecycleListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    private IntPtr id_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    private IntPtr id_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    private IntPtr id_onStop;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILifecycleListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILifecycleListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ILifecycleListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnDestroy();
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStop();
}
[RegisterAttribute("com/bumptech/glide/manager/RequestManagerTreeNode", "", "Bumptech.Glide.Manager.IRequestManagerTreeNodeInvoker")]
public interface Bumptech.Glide.Manager.IRequestManagerTreeNode {
    [NullableAttribute("1")]
public ICollection`1<RequestManager> Descendants { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getDescendants", "()Ljava/util/Set;", "GetGetDescendantsHandler:Bumptech.Glide.Manager.IRequestManagerTreeNodeInvoker, Xamarin.Android.Glide")]
public abstract virtual ICollection`1<RequestManager> get_Descendants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/RequestManagerTreeNode")]
internal class Bumptech.Glide.Manager.IRequestManagerTreeNodeInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getDescendants;
    private IntPtr id_getDescendants;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<RequestManager> Descendants { get; }
    public IRequestManagerTreeNodeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRequestManagerTreeNodeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IRequestManagerTreeNode GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetDescendantsHandler();
    private static IntPtr n_GetDescendants(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICollection`1<RequestManager> get_Descendants();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/manager/RequestManagerFragment")]
public class Bumptech.Glide.Manager.RequestManagerFragment : Fragment {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManager;
    [NullableAttribute("2")]
private static Delegate cb_setRequestManager_Lcom_bumptech_glide_RequestManager_;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManagerTreeNode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
[ObsoleteAttribute("deprecated")]
public RequestManager RequestManager { get; public set; }
    [ObsoleteAttribute("deprecated")]
public IRequestManagerTreeNode RequestManagerTreeNode { get; }
    protected RequestManagerFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static RequestManagerFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute]
private static Delegate GetGetRequestManagerHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetRequestManager(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute]
private static Delegate GetSetRequestManager_Lcom_bumptech_glide_RequestManager_Handler();
    [ObsoleteAttribute]
private static void n_SetRequestManager_Lcom_bumptech_glide_RequestManager_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestManager);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequestManager", "()Lcom/bumptech/glide/RequestManager;", "GetGetRequestManagerHandler")]
public virtual RequestManager get_RequestManager();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequestManager", "(Lcom/bumptech/glide/RequestManager;)V", "GetSetRequestManager_Lcom_bumptech_glide_RequestManager_Handler")]
public virtual void set_RequestManager(RequestManager value);
    [ObsoleteAttribute]
private static Delegate GetGetRequestManagerTreeNodeHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetRequestManagerTreeNode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRequestManagerTreeNode", "()Lcom/bumptech/glide/manager/RequestManagerTreeNode;", "GetGetRequestManagerTreeNodeHandler")]
public virtual IRequestManagerTreeNode get_RequestManagerTreeNode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/RequestManagerRetriever")]
public class Bumptech.Glide.Manager.RequestManagerRetriever : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroid_app_Fragment_;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroidx_fragment_app_Fragment_;
    [NullableAttribute("2")]
private static Delegate cb_get_Landroidx_fragment_app_FragmentActivity_;
    [NullableAttribute("2")]
private static Delegate cb_handleMessage_Landroid_os_Message_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected RequestManagerRetriever(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;)V", "")]
public RequestManagerRetriever(IRequestManagerFactory factory);
    private static RequestManagerRetriever();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute]
private static Delegate GetGet_Landroid_app_Activity_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Get_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("get", "(Landroid/app/Activity;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroid_app_Activity_Handler")]
public virtual RequestManager Get(Activity activity);
    [ObsoleteAttribute]
private static Delegate GetGet_Landroid_app_Fragment_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Get_Landroid_app_Fragment_(IntPtr jnienv, IntPtr native__this, IntPtr native_fragment);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("get", "(Landroid/app/Fragment;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroid_app_Fragment_Handler")]
public virtual RequestManager Get(Fragment fragment);
    private static Delegate GetGet_Landroid_content_Context_Handler();
    private static IntPtr n_Get_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("get", "(Landroid/content/Context;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroid_content_Context_Handler")]
public virtual RequestManager Get(Context context);
    private static Delegate GetGet_Landroid_view_View_Handler();
    private static IntPtr n_Get_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("get", "(Landroid/view/View;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroid_view_View_Handler")]
public virtual RequestManager Get(View view);
    private static Delegate GetGet_Landroidx_fragment_app_Fragment_Handler();
    private static IntPtr n_Get_Landroidx_fragment_app_Fragment_(IntPtr jnienv, IntPtr native__this, IntPtr native_fragment);
    [RegisterAttribute("get", "(Landroidx/fragment/app/Fragment;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroidx_fragment_app_Fragment_Handler")]
public virtual RequestManager Get(Fragment fragment);
    private static Delegate GetGet_Landroidx_fragment_app_FragmentActivity_Handler();
    private static IntPtr n_Get_Landroidx_fragment_app_FragmentActivity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("get", "(Landroidx/fragment/app/FragmentActivity;)Lcom/bumptech/glide/RequestManager;", "GetGet_Landroidx_fragment_app_FragmentActivity_Handler")]
public virtual RequestManager Get(FragmentActivity activity);
    [ObsoleteAttribute]
private static Delegate GetHandleMessage_Landroid_os_Message_Handler();
    [ObsoleteAttribute]
private static bool n_HandleMessage_Landroid_os_Message_(IntPtr jnienv, IntPtr native__this, IntPtr native_message);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("handleMessage", "(Landroid/os/Message;)Z", "GetHandleMessage_Landroid_os_Message_Handler")]
public virtual bool HandleMessage(Message message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/RequestTracker")]
public class Bumptech.Glide.Manager.RequestTracker : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isPaused;
    [NullableAttribute("2")]
private static Delegate cb_clearAndRemove_Lcom_bumptech_glide_request_Request_;
    [NullableAttribute("2")]
private static Delegate cb_clearRequests;
    [NullableAttribute("2")]
private static Delegate cb_pauseAllRequests;
    [NullableAttribute("2")]
private static Delegate cb_pauseRequests;
    [NullableAttribute("2")]
private static Delegate cb_restartRequests;
    [NullableAttribute("2")]
private static Delegate cb_resumeRequests;
    [NullableAttribute("2")]
private static Delegate cb_runRequest_Lcom_bumptech_glide_request_Request_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsPaused { get; }
    protected RequestTracker(IntPtr javaReference, JniHandleOwnership transfer);
    private static RequestTracker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsPausedHandler();
    private static bool n_IsPaused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isPaused", "()Z", "GetIsPausedHandler")]
public virtual bool get_IsPaused();
    private static Delegate GetClearAndRemove_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_ClearAndRemove_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [NullableContextAttribute("2")]
[RegisterAttribute("clearAndRemove", "(Lcom/bumptech/glide/request/Request;)Z", "GetClearAndRemove_Lcom_bumptech_glide_request_Request_Handler")]
public virtual bool ClearAndRemove(IRequest request);
    private static Delegate GetClearRequestsHandler();
    private static void n_ClearRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearRequests", "()V", "GetClearRequestsHandler")]
public virtual void ClearRequests();
    private static Delegate GetPauseAllRequestsHandler();
    private static void n_PauseAllRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAllRequests", "()V", "GetPauseAllRequestsHandler")]
public virtual void PauseAllRequests();
    private static Delegate GetPauseRequestsHandler();
    private static void n_PauseRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseRequests", "()V", "GetPauseRequestsHandler")]
public virtual void PauseRequests();
    private static Delegate GetRestartRequestsHandler();
    private static void n_RestartRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("restartRequests", "()V", "GetRestartRequestsHandler")]
public virtual void RestartRequests();
    private static Delegate GetResumeRequestsHandler();
    private static void n_ResumeRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeRequests", "()V", "GetResumeRequestsHandler")]
public virtual void ResumeRequests();
    private static Delegate GetRunRequest_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_RunRequest_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("runRequest", "(Lcom/bumptech/glide/request/Request;)V", "GetRunRequest_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void RunRequest(IRequest request);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/manager/SupportRequestManagerFragment")]
public class Bumptech.Glide.Manager.SupportRequestManagerFragment : Fragment {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManager;
    [NullableAttribute("2")]
private static Delegate cb_setRequestManager_Lcom_bumptech_glide_RequestManager_;
    [NullableAttribute("2")]
private static Delegate cb_getRequestManagerTreeNode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
[ObsoleteAttribute("deprecated")]
public RequestManager RequestManager { get; public set; }
    [ObsoleteAttribute("deprecated")]
public IRequestManagerTreeNode RequestManagerTreeNode { get; }
    protected SupportRequestManagerFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static SupportRequestManagerFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute]
private static Delegate GetGetRequestManagerHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetRequestManager(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute]
private static Delegate GetSetRequestManager_Lcom_bumptech_glide_RequestManager_Handler();
    [ObsoleteAttribute]
private static void n_SetRequestManager_Lcom_bumptech_glide_RequestManager_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestManager);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequestManager", "()Lcom/bumptech/glide/RequestManager;", "GetGetRequestManagerHandler")]
public virtual RequestManager get_RequestManager();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequestManager", "(Lcom/bumptech/glide/RequestManager;)V", "GetSetRequestManager_Lcom_bumptech_glide_RequestManager_Handler")]
public virtual void set_RequestManager(RequestManager value);
    [ObsoleteAttribute]
private static Delegate GetGetRequestManagerTreeNodeHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetRequestManagerTreeNode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRequestManagerTreeNode", "()Lcom/bumptech/glide/manager/RequestManagerTreeNode;", "GetGetRequestManagerTreeNodeHandler")]
public virtual IRequestManagerTreeNode get_RequestManagerTreeNode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/manager/TargetTracker")]
public class Bumptech.Glide.Manager.TargetTracker : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<ITarget> All { get; }
    internal TargetTracker(IntPtr javaReference, JniHandleOwnership transfer);
    private static TargetTracker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAll", "()Ljava/util/List;", "")]
public IList`1<ITarget> get_All();
    [RegisterAttribute("clear", "()V", "")]
public void Clear();
    [RegisterAttribute("onDestroy", "()V", "")]
public sealed virtual void OnDestroy();
    [RegisterAttribute("onStart", "()V", "")]
public sealed virtual void OnStart();
    [RegisterAttribute("onStop", "()V", "")]
public sealed virtual void OnStop();
    [RegisterAttribute("track", "(Lcom/bumptech/glide/request/target/Target;)V", "")]
public void Track(ITarget target);
    [RegisterAttribute("untrack", "(Lcom/bumptech/glide/request/target/Target;)V", "")]
public void Untrack(ITarget target);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/MemoryCategory")]
public class Bumptech.Glide.MemoryCategory : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("HIGH")]
public static MemoryCategory High { get; }
    [RegisterAttribute("LOW")]
public static MemoryCategory Low { get; }
    [RegisterAttribute("NORMAL")]
public static MemoryCategory Normal { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Multiplier { get; }
    internal MemoryCategory(IntPtr javaReference, JniHandleOwnership transfer);
    private static MemoryCategory();
    public static MemoryCategory get_High();
    public static MemoryCategory get_Low();
    public static MemoryCategory get_Normal();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getMultiplier", "()F", "")]
public float get_Multiplier();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/MemoryCategory;", "")]
public static MemoryCategory ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/MemoryCategory;", "")]
public static MemoryCategory[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/AppGlideModule")]
public abstract class Bumptech.Glide.Module.AppGlideModule : LibraryGlideModule {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isManifestParsingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_applyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsManifestParsingEnabled { get; }
    protected AppGlideModule(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppGlideModule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsManifestParsingEnabledHandler();
    private static bool n_IsManifestParsingEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isManifestParsingEnabled", "()Z", "GetIsManifestParsingEnabledHandler")]
public virtual bool get_IsManifestParsingEnabled();
    private static Delegate GetApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_Handler();
    private static void n_ApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_builder);
    [RegisterAttribute("applyOptions", "(Landroid/content/Context;Lcom/bumptech/glide/GlideBuilder;)V", "GetApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_Handler")]
public virtual void ApplyOptions(Context context, GlideBuilder builder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/AppGlideModule")]
internal class Bumptech.Glide.Module.AppGlideModuleInvoker : AppGlideModule {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AppGlideModuleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AppGlideModuleInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/module/AppliesOptions", "", "Bumptech.Glide.Module.IAppliesOptionsInvoker")]
public interface Bumptech.Glide.Module.IAppliesOptions {
    [NullableContextAttribute("1")]
[RegisterAttribute("applyOptions", "(Landroid/content/Context;Lcom/bumptech/glide/GlideBuilder;)V", "GetApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_Handler:Bumptech.Glide.Module.IAppliesOptionsInvoker, Xamarin.Android.Glide")]
public abstract virtual void ApplyOptions(Context p0, GlideBuilder p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/AppliesOptions")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Bumptech.Glide.Module.IAppliesOptionsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_applyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_;
    private IntPtr id_applyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IAppliesOptionsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAppliesOptionsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IAppliesOptions GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_Handler();
    private static void n_ApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void ApplyOptions(Context p0, GlideBuilder p1);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/module/GlideModule", "", "Bumptech.Glide.Module.IGlideModuleInvoker")]
public interface Bumptech.Glide.Module.IGlideModule {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/GlideModule")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Bumptech.Glide.Module.IGlideModuleInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_applyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_;
    private IntPtr id_applyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_;
    [NullableAttribute("2")]
private static Delegate cb_registerComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_;
    private IntPtr id_registerComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IGlideModuleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IGlideModuleInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IGlideModule GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_Handler();
    private static void n_ApplyOptions_Landroid_content_Context_Lcom_bumptech_glide_GlideBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void ApplyOptions(Context p0, GlideBuilder p1);
    private static Delegate GetRegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_Handler();
    private static void n_RegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    public sealed virtual void RegisterComponents(Context p0, Glide p1, Registry p2);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/module/RegistersComponents", "", "Bumptech.Glide.Module.IRegistersComponentsInvoker")]
public interface Bumptech.Glide.Module.IRegistersComponents {
    [NullableContextAttribute("1")]
[RegisterAttribute("registerComponents", "(Landroid/content/Context;Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/Registry;)V", "GetRegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_Handler:Bumptech.Glide.Module.IRegistersComponentsInvoker, Xamarin.Android.Glide")]
public abstract virtual void RegisterComponents(Context p0, Glide p1, Registry p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/RegistersComponents")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Bumptech.Glide.Module.IRegistersComponentsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_registerComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_;
    private IntPtr id_registerComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IRegistersComponentsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRegistersComponentsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IRegistersComponents GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetRegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_Handler();
    private static void n_RegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    public sealed virtual void RegisterComponents(Context p0, Glide p1, Registry p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/LibraryGlideModule")]
public abstract class Bumptech.Glide.Module.LibraryGlideModule : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_registerComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LibraryGlideModule(IntPtr javaReference, JniHandleOwnership transfer);
    private static LibraryGlideModule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetRegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_Handler();
    private static void n_RegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_glide, IntPtr native_registry);
    [RegisterAttribute("registerComponents", "(Landroid/content/Context;Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/Registry;)V", "GetRegisterComponents_Landroid_content_Context_Lcom_bumptech_glide_Glide_Lcom_bumptech_glide_Registry_Handler")]
public virtual void RegisterComponents(Context context, Glide glide, Registry registry);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/module/LibraryGlideModule")]
internal class Bumptech.Glide.Module.LibraryGlideModuleInvoker : LibraryGlideModule {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public LibraryGlideModuleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static LibraryGlideModuleInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/module/ManifestParser")]
public class Bumptech.Glide.Module.ManifestParser : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ManifestParser(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ManifestParser(Context context);
    private static ManifestParser();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("parse", "()Ljava/util/List;", "")]
public IList`1<IGlideModule> Parse();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/Priority")]
public class Bumptech.Glide.Priority : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("HIGH")]
public static Priority High { get; }
    [RegisterAttribute("IMMEDIATE")]
public static Priority Immediate { get; }
    [RegisterAttribute("LOW")]
public static Priority Low { get; }
    [RegisterAttribute("NORMAL")]
public static Priority Normal { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Priority(IntPtr javaReference, JniHandleOwnership transfer);
    private static Priority();
    public static Priority get_High();
    public static Priority get_Immediate();
    public static Priority get_Low();
    public static Priority get_Normal();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/Priority;", "")]
public static Priority ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/Priority;", "")]
public static Priority[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/EncoderRegistry")]
public class Bumptech.Glide.Provider.EncoderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_;
    [NullableAttribute("2")]
private static Delegate cb_getEncoder_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected EncoderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static EncoderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler();
    private static void n_Append_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_encoder);
    [RegisterAttribute("append", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V", "GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Append(Class dataClass, IEncoder encoder);
    private static Delegate GetGetEncoder_Ljava_lang_Class_Handler();
    private static IntPtr n_GetEncoder_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass);
    [RegisterAttribute("getEncoder", "(Ljava/lang/Class;)Lcom/bumptech/glide/load/Encoder;", "GetGetEncoder_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IEncoder GetEncoder(Class dataClass);
    private static Delegate GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler();
    private static void n_Prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_encoder);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V", "GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Prepend(Class dataClass, IEncoder encoder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/ImageHeaderParserRegistry")]
public class Bumptech.Glide.Provider.ImageHeaderParserRegistry : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<IImageHeaderParser> Parsers { get; }
    internal ImageHeaderParserRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageHeaderParserRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getParsers", "()Ljava/util/List;", "")]
public IList`1<IImageHeaderParser> get_Parsers();
    [RegisterAttribute("add", "(Lcom/bumptech/glide/load/ImageHeaderParser;)V", "")]
public void Add(IImageHeaderParser parser);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/LoadPathCache")]
public class Bumptech.Glide.Provider.LoadPathCache : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_isEmptyLoadPath_Lcom_bumptech_glide_load_engine_LoadPath_;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_engine_LoadPath_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LoadPathCache(IntPtr javaReference, JniHandleOwnership transfer);
    private static LoadPathCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_Get_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_transcodeClass);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;", "GetGet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual LoadPath Get(Class dataClass, Class resourceClass, Class transcodeClass);
    private static Delegate GetIsEmptyLoadPath_Lcom_bumptech_glide_load_engine_LoadPath_Handler();
    private static bool n_IsEmptyLoadPath_Lcom_bumptech_glide_load_engine_LoadPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_path);
    [NullableContextAttribute("2")]
[RegisterAttribute("isEmptyLoadPath", "(Lcom/bumptech/glide/load/engine/LoadPath;)Z", "GetIsEmptyLoadPath_Lcom_bumptech_glide_load_engine_LoadPath_Handler")]
public virtual bool IsEmptyLoadPath(LoadPath path);
    private static Delegate GetPut_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_engine_LoadPath_Handler();
    private static void n_Put_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_engine_LoadPath_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_transcodeClass, IntPtr native_loadPath);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/engine/LoadPath;)V", "GetPut_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_engine_LoadPath_Handler")]
public virtual void Put(Class dataClass, Class resourceClass, Class transcodeClass, LoadPath loadPath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/ModelToResourceClassCache")]
public class Bumptech.Glide.Provider.ModelToResourceClassCache : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_clear;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ModelToResourceClassCache(IntPtr javaReference, JniHandleOwnership transfer);
    private static ModelToResourceClassCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetGet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_Get_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_resourceClass, IntPtr native_transcodeClass);
    [RegisterAttribute("get", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;", "GetGet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler")]
public virtual IList`1<Class> Get(Class modelClass, Class resourceClass, Class transcodeClass);
    private static Delegate GetPut_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Ljava_util_List_Handler();
    private static void n_Put_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_resourceClass, IntPtr native_transcodeClass, IntPtr native_resourceClasses);
    [RegisterAttribute("put", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;)V", "GetPut_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Ljava_util_List_Handler")]
public virtual void Put(Class modelClass, Class resourceClass, Class transcodeClass, IList`1<Class> resourceClasses);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/ResourceDecoderRegistry")]
public class Bumptech.Glide.Provider.ResourceDecoderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getDecoders_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getResourceClasses_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_setBucketPriorityList_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResourceDecoderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResourceDecoderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static void n_Append_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_bucket, IntPtr native_decoder, IntPtr native_dataClass, IntPtr native_resourceClass);
    [RegisterAttribute("append", "(Ljava/lang/String;Lcom/bumptech/glide/load/ResourceDecoder;Ljava/lang/Class;Ljava/lang/Class;)V", "GetAppend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Append(string bucket, IResourceDecoder decoder, Class dataClass, Class resourceClass);
    private static Delegate GetGetDecoders_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_GetDecoders_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass);
    [RegisterAttribute("getDecoders", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;", "GetGetDecoders_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList GetDecoders(Class dataClass, Class resourceClass);
    private static Delegate GetGetResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_GetResourceClasses_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass);
    [RegisterAttribute("getResourceClasses", "(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;", "GetGetResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList`1<Class> GetResourceClasses(Class dataClass, Class resourceClass);
    private static Delegate GetPrepend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static void n_Prepend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_bucket, IntPtr native_decoder, IntPtr native_dataClass, IntPtr native_resourceClass);
    [RegisterAttribute("prepend", "(Ljava/lang/String;Lcom/bumptech/glide/load/ResourceDecoder;Ljava/lang/Class;Ljava/lang/Class;)V", "GetPrepend_Ljava_lang_String_Lcom_bumptech_glide_load_ResourceDecoder_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Prepend(string bucket, IResourceDecoder decoder, Class dataClass, Class resourceClass);
    private static Delegate GetSetBucketPriorityList_Ljava_util_List_Handler();
    private static void n_SetBucketPriorityList_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_buckets);
    [RegisterAttribute("setBucketPriorityList", "(Ljava/util/List;)V", "GetSetBucketPriorityList_Ljava_util_List_Handler")]
public virtual void SetBucketPriorityList(IList`1<string> buckets);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/provider/ResourceEncoderRegistry")]
public class Bumptech.Glide.Provider.ResourceEncoderRegistry : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResourceEncoderRegistry(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResourceEncoderRegistry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler();
    private static void n_Append_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_encoder);
    [RegisterAttribute("append", "(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V", "GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Append(Class resourceClass, IResourceEncoder encoder);
    private static Delegate GetGet_Ljava_lang_Class_Handler();
    private static IntPtr n_Get_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass);
    [RegisterAttribute("get", "(Ljava/lang/Class;)Lcom/bumptech/glide/load/ResourceEncoder;", "GetGet_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IResourceEncoder Get(Class resourceClass);
    private static Delegate GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler();
    private static void n_Prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_encoder);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)V", "GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void Prepend(Class resourceClass, IResourceEncoder encoder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/Registry")]
public class Bumptech.Glide.Registry : Object {
    [RegisterAttribute("BUCKET_ANIMATION")]
public static string BucketAnimation;
    [RegisterAttribute("BUCKET_BITMAP")]
public static string BucketBitmap;
    [RegisterAttribute("BUCKET_BITMAP_DRAWABLE")]
public static string BucketBitmapDrawable;
    [RegisterAttribute("BUCKET_GIF")]
[ObsoleteAttribute("deprecated")]
public static string BucketGif;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getImageHeaderParsers;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_;
    [NullableAttribute("2")]
private static Delegate cb_append_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_;
    [NullableAttribute("2")]
private static Delegate cb_getLoadPath_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getModelLoaders_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getRegisteredResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_getResultEncoder_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_getRewinder_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSourceEncoder_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_isResourceEncoderAvailable_Lcom_bumptech_glide_load_engine_Resource_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_;
    [NullableAttribute("2")]
private static Delegate cb_prepend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_;
    [NullableAttribute("2")]
private static Delegate cb_register_Lcom_bumptech_glide_load_data_DataRewinder_Factory_;
    [NullableAttribute("2")]
private static Delegate cb_register_Lcom_bumptech_glide_load_ImageHeaderParser_;
    [NullableAttribute("2")]
private static Delegate cb_register_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_;
    [NullableAttribute("2")]
private static Delegate cb_register_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_;
    [NullableAttribute("2")]
private static Delegate cb_register_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_;
    [NullableAttribute("2")]
private static Delegate cb_replace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<IImageHeaderParser> ImageHeaderParsers { get; }
    protected Registry(IntPtr javaReference, JniHandleOwnership transfer);
    private static Registry();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetImageHeaderParsersHandler();
    private static IntPtr n_GetImageHeaderParsers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImageHeaderParsers", "()Ljava/util/List;", "GetGetImageHeaderParsersHandler")]
public virtual IList`1<IImageHeaderParser> get_ImageHeaderParsers();
    private static Delegate GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler();
    private static IntPtr n_Append_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_encoder);
    [RegisterAttribute("append", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)Lcom/bumptech/glide/Registry;", "GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Append(Class dataClass, IEncoder encoder);
    private static Delegate GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler();
    private static IntPtr n_Append_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_encoder);
    [RegisterAttribute("append", "(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)Lcom/bumptech/glide/Registry;", "GetAppend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Append(Class resourceClass, IResourceEncoder encoder);
    private static Delegate GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static IntPtr n_Append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("append", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Lcom/bumptech/glide/Registry;", "GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Append(Class modelClass, Class dataClass, IModelLoaderFactory factory);
    private static Delegate GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler();
    private static IntPtr n_Append_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_decoder);
    [RegisterAttribute("append", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/Registry;", "GetAppend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Append(Class dataClass, Class resourceClass, IResourceDecoder decoder);
    private static Delegate GetAppend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler();
    private static IntPtr n_Append_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_bucket, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_decoder);
    [RegisterAttribute("append", "(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/Registry;", "GetAppend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Append(string bucket, Class dataClass, Class resourceClass, IResourceDecoder decoder);
    private static Delegate GetGetLoadPath_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_GetLoadPath_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_transcodeClass);
    [RegisterAttribute("getLoadPath", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;", "GetGetLoadPath_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual LoadPath GetLoadPath(Class dataClass, Class resourceClass, Class transcodeClass);
    private static Delegate GetGetModelLoaders_Ljava_lang_Object_Handler();
    private static IntPtr n_GetModelLoaders_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("getModelLoaders", "(Ljava/lang/Object;)Ljava/util/List;", "GetGetModelLoaders_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList GetModelLoaders(Object model);
    private static Delegate GetGetRegisteredResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static IntPtr n_GetRegisteredResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_resourceClass, IntPtr native_transcodeClass);
    [RegisterAttribute("getRegisteredResourceClasses", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;", "GetGetRegisteredResourceClasses_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList`1<Class> GetRegisteredResourceClasses(Class modelClass, Class resourceClass, Class transcodeClass);
    private static Delegate GetGetResultEncoder_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static IntPtr n_GetResultEncoder_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [RegisterAttribute("getResultEncoder", "(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;", "GetGetResultEncoder_Lcom_bumptech_glide_load_engine_Resource_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IResourceEncoder GetResultEncoder(IResource resource);
    private static Delegate GetGetRewinder_Ljava_lang_Object_Handler();
    private static IntPtr n_GetRewinder_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("getRewinder", "(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;", "GetGetRewinder_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IDataRewinder GetRewinder(Object data);
    private static Delegate GetGetSourceEncoder_Ljava_lang_Object_Handler();
    private static IntPtr n_GetSourceEncoder_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("getSourceEncoder", "(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;", "GetGetSourceEncoder_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IEncoder GetSourceEncoder(Object data);
    private static Delegate GetIsResourceEncoderAvailable_Lcom_bumptech_glide_load_engine_Resource_Handler();
    private static bool n_IsResourceEncoderAvailable_Lcom_bumptech_glide_load_engine_Resource_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [RegisterAttribute("isResourceEncoderAvailable", "(Lcom/bumptech/glide/load/engine/Resource;)Z", "GetIsResourceEncoderAvailable_Lcom_bumptech_glide_load_engine_Resource_Handler")]
public virtual bool IsResourceEncoderAvailable(IResource resource);
    private static Delegate GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler();
    private static IntPtr n_Prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_encoder);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)Lcom/bumptech/glide/Registry;", "GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Prepend(Class dataClass, IEncoder encoder);
    private static Delegate GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler();
    private static IntPtr n_Prepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_encoder);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)Lcom/bumptech/glide/Registry;", "GetPrepend_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Prepend(Class resourceClass, IResourceEncoder encoder);
    private static Delegate GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static IntPtr n_Prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Lcom/bumptech/glide/Registry;", "GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Prepend(Class modelClass, Class dataClass, IModelLoaderFactory factory);
    private static Delegate GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler();
    private static IntPtr n_Prepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_decoder);
    [RegisterAttribute("prepend", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/Registry;", "GetPrepend_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Prepend(Class dataClass, Class resourceClass, IResourceDecoder decoder);
    private static Delegate GetPrepend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler();
    private static IntPtr n_Prepend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_bucket, IntPtr native_dataClass, IntPtr native_resourceClass, IntPtr native_decoder);
    [RegisterAttribute("prepend", "(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceDecoder;)Lcom/bumptech/glide/Registry;", "GetPrepend_Ljava_lang_String_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceDecoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Prepend(string bucket, Class dataClass, Class resourceClass, IResourceDecoder decoder);
    private static Delegate GetRegister_Lcom_bumptech_glide_load_data_DataRewinder_Factory_Handler();
    private static IntPtr n_Register_Lcom_bumptech_glide_load_data_DataRewinder_Factory_(IntPtr jnienv, IntPtr native__this, IntPtr native_factory);
    [RegisterAttribute("register", "(Lcom/bumptech/glide/load/data/DataRewinder$Factory;)Lcom/bumptech/glide/Registry;", "GetRegister_Lcom_bumptech_glide_load_data_DataRewinder_Factory_Handler")]
public virtual Registry Register(IDataRewinderFactory factory);
    private static Delegate GetRegister_Lcom_bumptech_glide_load_ImageHeaderParser_Handler();
    private static IntPtr n_Register_Lcom_bumptech_glide_load_ImageHeaderParser_(IntPtr jnienv, IntPtr native__this, IntPtr native_parser);
    [RegisterAttribute("register", "(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/Registry;", "GetRegister_Lcom_bumptech_glide_load_ImageHeaderParser_Handler")]
public virtual Registry Register(IImageHeaderParser parser);
    [ObsoleteAttribute]
private static Delegate GetRegister_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Register_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_dataClass, IntPtr native_encoder);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("register", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)Lcom/bumptech/glide/Registry;", "GetRegister_Ljava_lang_Class_Lcom_bumptech_glide_load_Encoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Register(Class dataClass, IEncoder encoder);
    [ObsoleteAttribute]
private static Delegate GetRegister_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Register_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_encoder);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("register", "(Ljava/lang/Class;Lcom/bumptech/glide/load/ResourceEncoder;)Lcom/bumptech/glide/Registry;", "GetRegister_Ljava_lang_Class_Lcom_bumptech_glide_load_ResourceEncoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Register(Class resourceClass, IResourceEncoder encoder);
    private static Delegate GetRegister_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_Handler();
    private static IntPtr n_Register_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_transcodeClass, IntPtr native_transcoder);
    [RegisterAttribute("register", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)Lcom/bumptech/glide/Registry;", "GetRegister_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_resource_transcode_ResourceTranscoder_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Register(Class resourceClass, Class transcodeClass, IResourceTranscoder transcoder);
    private static Delegate GetReplace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler();
    private static IntPtr n_Replace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_modelClass, IntPtr native_dataClass, IntPtr native_factory);
    [RegisterAttribute("replace", "(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)Lcom/bumptech/glide/Registry;", "GetReplace_Ljava_lang_Class_Ljava_lang_Class_Lcom_bumptech_glide_load_model_ModelLoaderFactory_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Registry Replace(Class modelClass, Class dataClass, IModelLoaderFactory factory);
    [RegisterAttribute("setResourceDecoderBucketPriorityList", "(Ljava/util/List;)Lcom/bumptech/glide/Registry;", "")]
public Registry SetResourceDecoderBucketPriorityList(IList`1<string> buckets);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/BaseRequestOptions")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.BaseRequestOptions : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_apply_Lcom_bumptech_glide_request_BaseRequestOptions_;
    [NullableAttribute("2")]
private static Delegate cb_autoClone;
    [NullableAttribute("2")]
private static Delegate cb_centerCrop;
    [NullableAttribute("2")]
private static Delegate cb_centerInside;
    [NullableAttribute("2")]
private static Delegate cb_circleCrop;
    [NullableAttribute("2")]
private static Delegate cb_clone;
    [NullableAttribute("2")]
private static Delegate cb_decode_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_disallowHardwareConfig;
    [NullableAttribute("2")]
private static Delegate cb_diskCacheStrategy_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_;
    [NullableAttribute("2")]
private static Delegate cb_dontAnimate;
    [NullableAttribute("2")]
private static Delegate cb_dontTransform;
    [NullableAttribute("2")]
private static Delegate cb_downsample_Lcom_bumptech_glide_load_resource_bitmap_DownsampleStrategy_;
    [NullableAttribute("2")]
private static Delegate cb_encodeFormat_Landroid_graphics_Bitmap_CompressFormat_;
    [NullableAttribute("2")]
private static Delegate cb_encodeQuality_I;
    [NullableAttribute("2")]
private static Delegate cb_error_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_error_I;
    [NullableAttribute("2")]
private static Delegate cb_fallback_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_fallback_I;
    [NullableAttribute("2")]
private static Delegate cb_fitCenter;
    [NullableAttribute("2")]
private static Delegate cb_format_Lcom_bumptech_glide_load_DecodeFormat_;
    [NullableAttribute("2")]
private static Delegate cb_frame_J;
    [NullableAttribute("2")]
private static Delegate cb_lock;
    [NullableAttribute("2")]
private static Delegate cb_onlyRetrieveFromCache_Z;
    [NullableAttribute("2")]
private static Delegate cb_optionalCenterCrop;
    [NullableAttribute("2")]
private static Delegate cb_optionalCenterInside;
    [NullableAttribute("2")]
private static Delegate cb_optionalCircleCrop;
    [NullableAttribute("2")]
private static Delegate cb_optionalFitCenter;
    [NullableAttribute("2")]
private static Delegate cb_optionalTransform_Lcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_optionalTransform_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_override_I;
    [NullableAttribute("2")]
private static Delegate cb_override_II;
    [NullableAttribute("2")]
private static Delegate cb_placeholder_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_placeholder_I;
    [NullableAttribute("2")]
private static Delegate cb_priority_Lcom_bumptech_glide_Priority_;
    [NullableAttribute("2")]
private static Delegate cb_set_Lcom_bumptech_glide_load_Option_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_signature_Lcom_bumptech_glide_load_Key_;
    [NullableAttribute("2")]
private static Delegate cb_sizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_skipMemoryCache_Z;
    [NullableAttribute("2")]
private static Delegate cb_theme_Landroid_content_res_Resources_Theme_;
    [NullableAttribute("2")]
private static Delegate cb_timeout_I;
    [NullableAttribute("2")]
private static Delegate cb_transform_Lcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_transform_arrayLcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_transform_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_transforms_arrayLcom_bumptech_glide_load_Transformation_;
    [NullableAttribute("2")]
private static Delegate cb_useAnimationPool_Z;
    [NullableAttribute("2")]
private static Delegate cb_useUnlimitedSourceGeneratorsPool_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DiskCacheStrategy DiskCacheStrategy { get; }
    public int ErrorId { get; }
    [NullableAttribute("2")]
public Drawable ErrorPlaceholder { get; }
    [NullableAttribute("2")]
public Drawable FallbackDrawable { get; }
    public int FallbackId { get; }
    protected bool IsAutoCloneEnabled { get; }
    public bool IsDiskCacheStrategySet { get; }
    public bool IsLocked { get; }
    public bool IsMemoryCacheable { get; }
    public bool IsPrioritySet { get; }
    public bool IsSkipMemoryCacheSet { get; }
    public bool IsTransformationAllowed { get; }
    public bool IsTransformationRequired { get; }
    public bool IsTransformationSet { get; }
    public bool IsValidOverride { get; }
    public bool OnlyRetrieveFromCache { get; }
    public Options Options { get; }
    public int OverrideHeight { get; }
    public int OverrideWidth { get; }
    [NullableAttribute("2")]
public Drawable PlaceholderDrawable { get; }
    public int PlaceholderId { get; }
    public Priority Priority { get; }
    public Class ResourceClass { get; }
    public IKey Signature { get; }
    public float SizeMultiplier { get; }
    [NullableAttribute("2")]
public Theme Theme { get; }
    public IDictionary Transformations { get; }
    public bool UseAnimationPool { get; }
    public bool UseUnlimitedSourceGeneratorsPool { get; }
    protected BaseRequestOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseRequestOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDiskCacheStrategy", "()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;", "")]
public DiskCacheStrategy get_DiskCacheStrategy();
    [RegisterAttribute("getErrorId", "()I", "")]
public int get_ErrorId();
    [NullableContextAttribute("2")]
[RegisterAttribute("getErrorPlaceholder", "()Landroid/graphics/drawable/Drawable;", "")]
public Drawable get_ErrorPlaceholder();
    [NullableContextAttribute("2")]
[RegisterAttribute("getFallbackDrawable", "()Landroid/graphics/drawable/Drawable;", "")]
public Drawable get_FallbackDrawable();
    [RegisterAttribute("getFallbackId", "()I", "")]
public int get_FallbackId();
    [RegisterAttribute("isAutoCloneEnabled", "()Z", "")]
protected bool get_IsAutoCloneEnabled();
    [RegisterAttribute("isDiskCacheStrategySet", "()Z", "")]
public bool get_IsDiskCacheStrategySet();
    [RegisterAttribute("isLocked", "()Z", "")]
public bool get_IsLocked();
    [RegisterAttribute("isMemoryCacheable", "()Z", "")]
public bool get_IsMemoryCacheable();
    [RegisterAttribute("isPrioritySet", "()Z", "")]
public bool get_IsPrioritySet();
    [RegisterAttribute("isSkipMemoryCacheSet", "()Z", "")]
public bool get_IsSkipMemoryCacheSet();
    [RegisterAttribute("isTransformationAllowed", "()Z", "")]
public bool get_IsTransformationAllowed();
    [RegisterAttribute("isTransformationRequired", "()Z", "")]
public bool get_IsTransformationRequired();
    [RegisterAttribute("isTransformationSet", "()Z", "")]
public bool get_IsTransformationSet();
    [RegisterAttribute("isValidOverride", "()Z", "")]
public bool get_IsValidOverride();
    [RegisterAttribute("getOnlyRetrieveFromCache", "()Z", "")]
public bool get_OnlyRetrieveFromCache();
    [RegisterAttribute("getOptions", "()Lcom/bumptech/glide/load/Options;", "")]
public Options get_Options();
    [RegisterAttribute("getOverrideHeight", "()I", "")]
public int get_OverrideHeight();
    [RegisterAttribute("getOverrideWidth", "()I", "")]
public int get_OverrideWidth();
    [NullableContextAttribute("2")]
[RegisterAttribute("getPlaceholderDrawable", "()Landroid/graphics/drawable/Drawable;", "")]
public Drawable get_PlaceholderDrawable();
    [RegisterAttribute("getPlaceholderId", "()I", "")]
public int get_PlaceholderId();
    [RegisterAttribute("getPriority", "()Lcom/bumptech/glide/Priority;", "")]
public Priority get_Priority();
    [RegisterAttribute("getResourceClass", "()Ljava/lang/Class;", "")]
public Class get_ResourceClass();
    [RegisterAttribute("getSignature", "()Lcom/bumptech/glide/load/Key;", "")]
public IKey get_Signature();
    [RegisterAttribute("getSizeMultiplier", "()F", "")]
public float get_SizeMultiplier();
    [NullableContextAttribute("2")]
[RegisterAttribute("getTheme", "()Landroid/content/res/Resources$Theme;", "")]
public Theme get_Theme();
    [RegisterAttribute("getTransformations", "()Ljava/util/Map;", "")]
public IDictionary get_Transformations();
    [RegisterAttribute("getUseAnimationPool", "()Z", "")]
public bool get_UseAnimationPool();
    [RegisterAttribute("getUseUnlimitedSourceGeneratorsPool", "()Z", "")]
public bool get_UseUnlimitedSourceGeneratorsPool();
    private static Delegate GetApply_T_Lcom_bumptech_glide_request_BaseRequestOptions_Handler();
    private static IntPtr n_Apply_T_Lcom_bumptech_glide_request_BaseRequestOptions_(IntPtr jnienv, IntPtr native__this, IntPtr native_o);
    [RegisterAttribute("apply", "(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetApply_T_Lcom_bumptech_glide_request_BaseRequestOptions_Handler")]
public virtual Object Apply_T(BaseRequestOptions o);
    private static Delegate GetAutoClone_THandler();
    private static IntPtr n_AutoClone_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("autoClone", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetAutoClone_THandler")]
public virtual Object AutoClone_T();
    private static Delegate GetCenterCrop_THandler();
    private static IntPtr n_CenterCrop_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("centerCrop", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetCenterCrop_THandler")]
public virtual Object CenterCrop_T();
    private static Delegate GetCenterInside_THandler();
    private static IntPtr n_CenterInside_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("centerInside", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetCenterInside_THandler")]
public virtual Object CenterInside_T();
    private static Delegate GetCircleCrop_THandler();
    private static IntPtr n_CircleCrop_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("circleCrop", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetCircleCrop_THandler")]
public virtual Object CircleCrop_T();
    private static Delegate GetClone_THandler();
    private static IntPtr n_Clone_T(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("clone", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetClone_THandler")]
public virtual Object Clone_T();
    private static Delegate GetDecode_T_Ljava_lang_Class_Handler();
    private static IntPtr n_Decode_T_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass);
    [RegisterAttribute("decode", "(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDecode_T_Ljava_lang_Class_Handler")]
public virtual Object Decode_T(Class resourceClass);
    private static Delegate GetDisallowHardwareConfig_THandler();
    private static IntPtr n_DisallowHardwareConfig_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("disallowHardwareConfig", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDisallowHardwareConfig_THandler")]
public virtual Object DisallowHardwareConfig_T();
    private static Delegate GetDiskCacheStrategy_T_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Handler();
    private static IntPtr n_DiskCacheStrategy_T_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_(IntPtr jnienv, IntPtr native__this, IntPtr native_strategy);
    [RegisterAttribute("diskCacheStrategy", "(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDiskCacheStrategy_T_Lcom_bumptech_glide_load_engine_DiskCacheStrategy_Handler")]
public virtual Object DiskCacheStrategy_T(DiskCacheStrategy strategy);
    private static Delegate GetDontAnimate_THandler();
    private static IntPtr n_DontAnimate_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("dontAnimate", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDontAnimate_THandler")]
public virtual Object DontAnimate_T();
    private static Delegate GetDontTransform_THandler();
    private static IntPtr n_DontTransform_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("dontTransform", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDontTransform_THandler")]
public virtual Object DontTransform_T();
    private static Delegate GetDownsample_T_Lcom_bumptech_glide_load_resource_bitmap_DownsampleStrategy_Handler();
    private static IntPtr n_Downsample_T_Lcom_bumptech_glide_load_resource_bitmap_DownsampleStrategy_(IntPtr jnienv, IntPtr native__this, IntPtr native_strategy);
    [RegisterAttribute("downsample", "(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetDownsample_T_Lcom_bumptech_glide_load_resource_bitmap_DownsampleStrategy_Handler")]
public virtual Object Downsample_T(DownsampleStrategy strategy);
    private static Delegate GetEncodeFormat_T_Landroid_graphics_Bitmap_CompressFormat_Handler();
    private static IntPtr n_EncodeFormat_T_Landroid_graphics_Bitmap_CompressFormat_(IntPtr jnienv, IntPtr native__this, IntPtr native_format);
    [RegisterAttribute("encodeFormat", "(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetEncodeFormat_T_Landroid_graphics_Bitmap_CompressFormat_Handler")]
public virtual Object EncodeFormat_T(CompressFormat format);
    private static Delegate GetEncodeQuality_T_IHandler();
    private static IntPtr n_EncodeQuality_T_I(IntPtr jnienv, IntPtr native__this, int quality);
    [RegisterAttribute("encodeQuality", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetEncodeQuality_T_IHandler")]
public virtual Object EncodeQuality_T(int quality);
    private static Delegate GetError_T_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Error_T_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("error", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetError_T_Landroid_graphics_drawable_Drawable_Handler")]
public virtual Object Error_T(Drawable drawable);
    private static Delegate GetError_T_IHandler();
    private static IntPtr n_Error_T_I(IntPtr jnienv, IntPtr native__this, int resourceId);
    [RegisterAttribute("error", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetError_T_IHandler")]
public virtual Object Error_T(int resourceId);
    private static Delegate GetFallback_T_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Fallback_T_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("fallback", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetFallback_T_Landroid_graphics_drawable_Drawable_Handler")]
public virtual Object Fallback_T(Drawable drawable);
    private static Delegate GetFallback_T_IHandler();
    private static IntPtr n_Fallback_T_I(IntPtr jnienv, IntPtr native__this, int resourceId);
    [RegisterAttribute("fallback", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetFallback_T_IHandler")]
public virtual Object Fallback_T(int resourceId);
    private static Delegate GetFitCenter_THandler();
    private static IntPtr n_FitCenter_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("fitCenter", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetFitCenter_THandler")]
public virtual Object FitCenter_T();
    private static Delegate GetFormat_T_Lcom_bumptech_glide_load_DecodeFormat_Handler();
    private static IntPtr n_Format_T_Lcom_bumptech_glide_load_DecodeFormat_(IntPtr jnienv, IntPtr native__this, IntPtr native_format);
    [RegisterAttribute("format", "(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetFormat_T_Lcom_bumptech_glide_load_DecodeFormat_Handler")]
public virtual Object Format_T(DecodeFormat format);
    private static Delegate GetFrame_T_JHandler();
    private static IntPtr n_Frame_T_J(IntPtr jnienv, IntPtr native__this, long frameTimeMicros);
    [RegisterAttribute("frame", "(J)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetFrame_T_JHandler")]
public virtual Object Frame_T(long frameTimeMicros);
    [NullableContextAttribute("2")]
[RegisterAttribute("isEquivalentTo", "(Lcom/bumptech/glide/request/BaseRequestOptions;)Z", "")]
public bool IsEquivalentTo(BaseRequestOptions other);
    private static Delegate GetLock_THandler();
    private static IntPtr n_Lock_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("lock", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetLock_THandler")]
public virtual Object Lock_T();
    private static Delegate GetOnlyRetrieveFromCache_T_ZHandler();
    private static IntPtr n_OnlyRetrieveFromCache_T_Z(IntPtr jnienv, IntPtr native__this, bool flag);
    [RegisterAttribute("onlyRetrieveFromCache", "(Z)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOnlyRetrieveFromCache_T_ZHandler")]
public virtual Object OnlyRetrieveFromCache_T(bool flag);
    private static Delegate GetOptionalCenterCrop_THandler();
    private static IntPtr n_OptionalCenterCrop_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("optionalCenterCrop", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalCenterCrop_THandler")]
public virtual Object OptionalCenterCrop_T();
    private static Delegate GetOptionalCenterInside_THandler();
    private static IntPtr n_OptionalCenterInside_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("optionalCenterInside", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalCenterInside_THandler")]
public virtual Object OptionalCenterInside_T();
    private static Delegate GetOptionalCircleCrop_THandler();
    private static IntPtr n_OptionalCircleCrop_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("optionalCircleCrop", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalCircleCrop_THandler")]
public virtual Object OptionalCircleCrop_T();
    private static Delegate GetOptionalFitCenter_THandler();
    private static IntPtr n_OptionalFitCenter_T(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("optionalFitCenter", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalFitCenter_THandler")]
public virtual Object OptionalFitCenter_T();
    private static Delegate GetOptionalTransform_T_Lcom_bumptech_glide_load_Transformation_Handler();
    private static IntPtr n_OptionalTransform_T_Lcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_transformation);
    [RegisterAttribute("optionalTransform", "(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalTransform_T_Lcom_bumptech_glide_load_Transformation_Handler")]
public virtual Object OptionalTransform_T(ITransformation transformation);
    private static Delegate GetOptionalTransform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_Handler();
    private static IntPtr n_OptionalTransform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_transformation);
    [RegisterAttribute("optionalTransform", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOptionalTransform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object OptionalTransform_T(Class resourceClass, ITransformation transformation);
    private static Delegate GetOverride_T_IHandler();
    private static IntPtr n_Override_T_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("override", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOverride_T_IHandler")]
public virtual Object Override_T(int size);
    private static Delegate GetOverride_T_IIHandler();
    private static IntPtr n_Override_T_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [RegisterAttribute("override", "(II)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetOverride_T_IIHandler")]
public virtual Object Override_T(int width, int height);
    private static Delegate GetPlaceholder_T_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Placeholder_T_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("placeholder", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetPlaceholder_T_Landroid_graphics_drawable_Drawable_Handler")]
public virtual Object Placeholder_T(Drawable drawable);
    private static Delegate GetPlaceholder_T_IHandler();
    private static IntPtr n_Placeholder_T_I(IntPtr jnienv, IntPtr native__this, int resourceId);
    [RegisterAttribute("placeholder", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetPlaceholder_T_IHandler")]
public virtual Object Placeholder_T(int resourceId);
    private static Delegate GetPriority_T_Lcom_bumptech_glide_Priority_Handler();
    private static IntPtr n_Priority_T_Lcom_bumptech_glide_Priority_(IntPtr jnienv, IntPtr native__this, IntPtr native_priority);
    [RegisterAttribute("priority", "(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetPriority_T_Lcom_bumptech_glide_Priority_Handler")]
public virtual Object Priority_T(Priority priority);
    [RegisterAttribute("selfOrThrowIfLocked", "()Lcom/bumptech/glide/request/BaseRequestOptions;", "")]
protected Object SelfOrThrowIfLocked();
    private static Delegate GetSet_T_Lcom_bumptech_glide_load_Option_Ljava_lang_Object_Handler();
    private static IntPtr n_Set_T_Lcom_bumptech_glide_load_Option_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_option, IntPtr native_value);
    [RegisterAttribute("set", "(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetSet_T_Lcom_bumptech_glide_load_Option_Ljava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Set_T(Option option, Object value);
    private static Delegate GetSignature_T_Lcom_bumptech_glide_load_Key_Handler();
    private static IntPtr n_Signature_T_Lcom_bumptech_glide_load_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_signature);
    [RegisterAttribute("signature", "(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetSignature_T_Lcom_bumptech_glide_load_Key_Handler")]
public virtual Object Signature_T(IKey signature);
    private static Delegate GetSizeMultiplier_T_FHandler();
    private static IntPtr n_SizeMultiplier_T_F(IntPtr jnienv, IntPtr native__this, float sizeMultiplier);
    [RegisterAttribute("sizeMultiplier", "(F)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetSizeMultiplier_T_FHandler")]
public virtual Object SizeMultiplier_T(float sizeMultiplier);
    private static Delegate GetSkipMemoryCache_T_ZHandler();
    private static IntPtr n_SkipMemoryCache_T_Z(IntPtr jnienv, IntPtr native__this, bool skip);
    [RegisterAttribute("skipMemoryCache", "(Z)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetSkipMemoryCache_T_ZHandler")]
public virtual Object SkipMemoryCache_T(bool skip);
    private static Delegate GetTheme_T_Landroid_content_res_Resources_Theme_Handler();
    private static IntPtr n_Theme_T_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_theme);
    [RegisterAttribute("theme", "(Landroid/content/res/Resources$Theme;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTheme_T_Landroid_content_res_Resources_Theme_Handler")]
public virtual Object Theme_T(Theme theme);
    private static Delegate GetTimeout_T_IHandler();
    private static IntPtr n_Timeout_T_I(IntPtr jnienv, IntPtr native__this, int timeoutMs);
    [RegisterAttribute("timeout", "(I)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTimeout_T_IHandler")]
public virtual Object Timeout_T(int timeoutMs);
    private static Delegate GetTransform_T_Lcom_bumptech_glide_load_Transformation_Handler();
    private static IntPtr n_Transform_T_Lcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_transformation);
    [RegisterAttribute("transform", "(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTransform_T_Lcom_bumptech_glide_load_Transformation_Handler")]
public virtual Object Transform_T(ITransformation transformation);
    private static Delegate GetTransform_T_arrayLcom_bumptech_glide_load_Transformation_Handler();
    private static IntPtr n_Transform_T_arrayLcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_transformations);
    [RegisterAttribute("transform", "([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTransform_T_arrayLcom_bumptech_glide_load_Transformation_Handler")]
public virtual Object Transform_T(ITransformation[] transformations);
    private static Delegate GetTransform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_Handler();
    private static IntPtr n_Transform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass, IntPtr native_transformation);
    [RegisterAttribute("transform", "(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTransform_T_Ljava_lang_Class_Lcom_bumptech_glide_load_Transformation_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Transform_T(Class resourceClass, ITransformation transformation);
    [ObsoleteAttribute]
private static Delegate GetTransforms_arrayLcom_bumptech_glide_load_Transformation_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Transforms_arrayLcom_bumptech_glide_load_Transformation_(IntPtr jnienv, IntPtr native__this, IntPtr native_transformations);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("transforms", "([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetTransforms_arrayLcom_bumptech_glide_load_Transformation_Handler")]
public virtual Object Transforms(ITransformation[] transformations);
    private static Delegate GetUseAnimationPool_T_ZHandler();
    private static IntPtr n_UseAnimationPool_T_Z(IntPtr jnienv, IntPtr native__this, bool flag);
    [RegisterAttribute("useAnimationPool", "(Z)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetUseAnimationPool_T_ZHandler")]
public virtual Object UseAnimationPool_T(bool flag);
    private static Delegate GetUseUnlimitedSourceGeneratorsPool_T_ZHandler();
    private static IntPtr n_UseUnlimitedSourceGeneratorsPool_T_Z(IntPtr jnienv, IntPtr native__this, bool flag);
    [RegisterAttribute("useUnlimitedSourceGeneratorsPool", "(Z)Lcom/bumptech/glide/request/BaseRequestOptions;", "GetUseUnlimitedSourceGeneratorsPool_T_ZHandler")]
public virtual Object UseUnlimitedSourceGeneratorsPool_T(bool flag);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/BaseRequestOptions")]
internal class Bumptech.Glide.Request.BaseRequestOptionsInvoker : BaseRequestOptions {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseRequestOptionsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseRequestOptionsInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/ErrorRequestCoordinator")]
public class Bumptech.Glide.Request.ErrorRequestCoordinator : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsAnyResourceSet { get; }
    public bool IsCleared { get; }
    public bool IsComplete { get; }
    public bool IsRunning { get; }
    public IRequestCoordinator Root { get; }
    internal ErrorRequestCoordinator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V", "")]
public ErrorRequestCoordinator(Object requestLock, IRequestCoordinator parent);
    private static ErrorRequestCoordinator();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAnyResourceSet", "()Z", "")]
public sealed virtual bool get_IsAnyResourceSet();
    [RegisterAttribute("isCleared", "()Z", "")]
public sealed virtual bool get_IsCleared();
    [RegisterAttribute("isComplete", "()Z", "")]
public sealed virtual bool get_IsComplete();
    [RegisterAttribute("isRunning", "()Z", "")]
public sealed virtual bool get_IsRunning();
    [RegisterAttribute("getRoot", "()Lcom/bumptech/glide/request/RequestCoordinator;", "")]
public sealed virtual IRequestCoordinator get_Root();
    [RegisterAttribute("begin", "()V", "")]
public sealed virtual void Begin();
    [RegisterAttribute("canNotifyCleared", "(Lcom/bumptech/glide/request/Request;)Z", "")]
public sealed virtual bool CanNotifyCleared(IRequest request);
    [RegisterAttribute("canNotifyStatusChanged", "(Lcom/bumptech/glide/request/Request;)Z", "")]
public sealed virtual bool CanNotifyStatusChanged(IRequest request);
    [RegisterAttribute("canSetImage", "(Lcom/bumptech/glide/request/Request;)Z", "")]
public sealed virtual bool CanSetImage(IRequest request);
    [RegisterAttribute("clear", "()V", "")]
public sealed virtual void Clear();
    [RegisterAttribute("isEquivalentTo", "(Lcom/bumptech/glide/request/Request;)Z", "")]
public sealed virtual bool IsEquivalentTo(IRequest o);
    [RegisterAttribute("onRequestFailed", "(Lcom/bumptech/glide/request/Request;)V", "")]
public sealed virtual void OnRequestFailed(IRequest request);
    [RegisterAttribute("onRequestSuccess", "(Lcom/bumptech/glide/request/Request;)V", "")]
public sealed virtual void OnRequestSuccess(IRequest request);
    [RegisterAttribute("pause", "()V", "")]
public sealed virtual void Pause();
    [RegisterAttribute("setRequests", "(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V", "")]
public void SetRequests(IRequest primary, IRequest error);
}
[RegisterAttribute("com/bumptech/glide/request/FutureTarget", "", "Bumptech.Glide.Request.IFutureTargetInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Request.IFutureTarget {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/FutureTarget")]
internal class Bumptech.Glide.Request.IFutureTargetInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getRequest;
    private static Delegate cb_setRequest_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_getRequest;
    private IntPtr id_setRequest_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private IntPtr id_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    private IntPtr id_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private IntPtr id_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private static Delegate cb_onDestroy;
    private IntPtr id_onDestroy;
    private static Delegate cb_onStart;
    private IntPtr id_onStart;
    private static Delegate cb_onStop;
    private IntPtr id_onStop;
    private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    private static Delegate cb_isDone;
    private IntPtr id_isDone;
    private static Delegate cb_cancel_Z;
    private IntPtr id_cancel_Z;
    private static Delegate cb_get;
    private IntPtr id_get;
    private static Delegate cb_get_JLjava_util_concurrent_TimeUnit_;
    private IntPtr id_get_JLjava_util_concurrent_TimeUnit_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IRequest Request { get; public set; }
    public bool IsCancelled { get; }
    public bool IsDone { get; }
    public IFutureTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFutureTargetInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static IFutureTarget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetRequestHandler();
    private static IntPtr n_GetRequest(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRequest_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_SetRequest_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual IRequest get_Request();
    public sealed virtual void set_Request(IRequest value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_GetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("1")]
public sealed virtual void GetSize(ISizeReadyCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnLoadCleared(Drawable p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnLoadFailed(Drawable p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadStarted_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnLoadStarted(Drawable p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("1")]
public sealed virtual void OnResourceReady(Object p0, ITransition p1);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("1")]
public sealed virtual void RemoveCallback(ISizeReadyCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnDestroy();
    [NullableContextAttribute("1")]
private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStart();
    [NullableContextAttribute("1")]
private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStop();
    [NullableContextAttribute("1")]
private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    [NullableContextAttribute("1")]
private static Delegate GetIsDoneHandler();
    private static bool n_IsDone(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsDone();
    [NullableContextAttribute("1")]
private static Delegate GetCancel_ZHandler();
    private static bool n_Cancel_Z(IntPtr jnienv, IntPtr native__this, bool mayInterruptIfRunning);
    public sealed virtual bool Cancel(bool mayInterruptIfRunning);
    [NullableContextAttribute("1")]
private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object Get();
    [NullableContextAttribute("1")]
private static Delegate GetGet_JLjava_util_concurrent_TimeUnit_Handler();
    private static IntPtr n_Get_JLjava_util_concurrent_TimeUnit_(IntPtr jnienv, IntPtr native__this, long timeout, IntPtr native_unit);
    public sealed virtual Object Get(long timeout, TimeUnit unit);
}
[RegisterAttribute("com/bumptech/glide/request/Request", "", "Bumptech.Glide.Request.IRequestInvoker")]
public interface Bumptech.Glide.Request.IRequest {
    public bool IsAnyResourceSet { get; }
    public bool IsCleared { get; }
    public bool IsComplete { get; }
    public bool IsRunning { get; }
    [RegisterAttribute("isAnyResourceSet", "()Z", "GetIsAnyResourceSetHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual bool get_IsAnyResourceSet();
    [RegisterAttribute("isCleared", "()Z", "GetIsClearedHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual bool get_IsCleared();
    [RegisterAttribute("isComplete", "()Z", "GetIsCompleteHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual bool get_IsComplete();
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual bool get_IsRunning();
    [RegisterAttribute("begin", "()V", "GetBeginHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual void Begin();
    [RegisterAttribute("clear", "()V", "GetClearHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual void Clear();
    [NullableContextAttribute("2")]
[RegisterAttribute("isEquivalentTo", "(Lcom/bumptech/glide/request/Request;)Z", "GetIsEquivalentTo_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual bool IsEquivalentTo(IRequest p0);
    [RegisterAttribute("pause", "()V", "GetPauseHandler:Bumptech.Glide.Request.IRequestInvoker, Xamarin.Android.Glide")]
public abstract virtual void Pause();
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/request/RequestCoordinator", "", "Bumptech.Glide.Request.IRequestCoordinatorInvoker")]
public interface Bumptech.Glide.Request.IRequestCoordinator {
    public bool IsAnyResourceSet { get; }
    public IRequestCoordinator Root { get; }
    [RegisterAttribute("isAnyResourceSet", "()Z", "GetIsAnyResourceSetHandler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual bool get_IsAnyResourceSet();
    [RegisterAttribute("getRoot", "()Lcom/bumptech/glide/request/RequestCoordinator;", "GetGetRootHandler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual IRequestCoordinator get_Root();
    [RegisterAttribute("canNotifyCleared", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanNotifyCleared_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual bool CanNotifyCleared(IRequest p0);
    [RegisterAttribute("canNotifyStatusChanged", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual bool CanNotifyStatusChanged(IRequest p0);
    [RegisterAttribute("canSetImage", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanSetImage_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual bool CanSetImage(IRequest p0);
    [RegisterAttribute("onRequestFailed", "(Lcom/bumptech/glide/request/Request;)V", "GetOnRequestFailed_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnRequestFailed(IRequest p0);
    [RegisterAttribute("onRequestSuccess", "(Lcom/bumptech/glide/request/Request;)V", "GetOnRequestSuccess_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.IRequestCoordinatorInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnRequestSuccess(IRequest p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/RequestCoordinator")]
internal class Bumptech.Glide.Request.IRequestCoordinatorInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isAnyResourceSet;
    private IntPtr id_isAnyResourceSet;
    private static Delegate cb_getRoot;
    private IntPtr id_getRoot;
    private static Delegate cb_canNotifyCleared_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_canNotifyCleared_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_canNotifyStatusChanged_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_canNotifyStatusChanged_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_canSetImage_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_canSetImage_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_onRequestFailed_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_onRequestFailed_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_onRequestSuccess_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_onRequestSuccess_Lcom_bumptech_glide_request_Request_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsAnyResourceSet { get; }
    public IRequestCoordinator Root { get; }
    public IRequestCoordinatorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRequestCoordinatorInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static IRequestCoordinator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetIsAnyResourceSetHandler();
    private static bool n_IsAnyResourceSet(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsAnyResourceSet();
    [NullableContextAttribute("1")]
private static Delegate GetGetRootHandler();
    private static IntPtr n_GetRoot(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IRequestCoordinator get_Root();
    [NullableContextAttribute("1")]
private static Delegate GetCanNotifyCleared_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanNotifyCleared_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool CanNotifyCleared(IRequest p0);
    [NullableContextAttribute("1")]
private static Delegate GetCanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool CanNotifyStatusChanged(IRequest p0);
    [NullableContextAttribute("1")]
private static Delegate GetCanSetImage_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanSetImage_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool CanSetImage(IRequest p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnRequestFailed_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_OnRequestFailed_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnRequestFailed(IRequest p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnRequestSuccess_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_OnRequestSuccess_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnRequestSuccess(IRequest p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/Request")]
internal class Bumptech.Glide.Request.IRequestInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isAnyResourceSet;
    private IntPtr id_isAnyResourceSet;
    [NullableAttribute("2")]
private static Delegate cb_isCleared;
    private IntPtr id_isCleared;
    [NullableAttribute("2")]
private static Delegate cb_isComplete;
    private IntPtr id_isComplete;
    [NullableAttribute("2")]
private static Delegate cb_isRunning;
    private IntPtr id_isRunning;
    [NullableAttribute("2")]
private static Delegate cb_begin;
    private IntPtr id_begin;
    [NullableAttribute("2")]
private static Delegate cb_clear;
    private IntPtr id_clear;
    [NullableAttribute("2")]
private static Delegate cb_isEquivalentTo_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_isEquivalentTo_Lcom_bumptech_glide_request_Request_;
    [NullableAttribute("2")]
private static Delegate cb_pause;
    private IntPtr id_pause;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsAnyResourceSet { get; }
    public bool IsCleared { get; }
    public bool IsComplete { get; }
    public bool IsRunning { get; }
    public IRequestInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRequestInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IRequest GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsAnyResourceSetHandler();
    private static bool n_IsAnyResourceSet(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsAnyResourceSet();
    private static Delegate GetIsClearedHandler();
    private static bool n_IsCleared(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCleared();
    private static Delegate GetIsCompleteHandler();
    private static bool n_IsComplete(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsComplete();
    private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsRunning();
    private static Delegate GetBeginHandler();
    private static void n_Begin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Begin();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    private static Delegate GetIsEquivalentTo_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_IsEquivalentTo_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual bool IsEquivalentTo(IRequest p0);
    private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Pause();
}
[RegisterAttribute("com/bumptech/glide/request/RequestListener", "", "Bumptech.Glide.Request.IRequestListenerInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Request.IRequestListener {
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z", "GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_ZHandler:Bumptech.Glide.Request.IRequestListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual bool OnLoadFailed(GlideException p0, Object p1, ITarget p2, bool p3);
    [NullableContextAttribute("1")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z", "GetOnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_ZHandler:Bumptech.Glide.Request.IRequestListenerInvoker, Xamarin.Android.Glide")]
public abstract virtual bool OnResourceReady(Object p0, Object p1, ITarget p2, DataSource p3, bool p4);
}
[RegisterAttribute("mono/com/bumptech/glide/request/RequestListenerImplementor")]
internal class Bumptech.Glide.Request.IRequestListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<LoadFailedEventArgs> OnLoadFailedHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<ResourceReadyEventArgs> OnResourceReadyHandler;
    [NullableContextAttribute("1")]
public IRequestListenerImplementor(object sender);
    [NullableContextAttribute("2")]
public sealed virtual bool OnLoadFailed(GlideException p0, Object p1, ITarget p2, bool p3);
    [NullableContextAttribute("1")]
public sealed virtual bool OnResourceReady(Object p0, Object p1, ITarget p2, DataSource p3, bool p4);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IRequestListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/RequestListener")]
internal class Bumptech.Glide.Request.IRequestListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Z;
    private IntPtr id_onLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Z;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_Z;
    private IntPtr id_onResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_Z;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IRequestListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRequestListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IRequestListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_ZHandler();
    private static bool n_OnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2, bool p3);
    [NullableContextAttribute("2")]
public sealed virtual bool OnLoadFailed(GlideException p0, Object p1, ITarget p2, bool p3);
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static bool n_OnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2, IntPtr native_p3, bool p4);
    public sealed virtual bool OnResourceReady(Object p0, Object p1, ITarget p2, DataSource p3, bool p4);
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/request/ResourceCallback", "", "Bumptech.Glide.Request.IResourceCallbackInvoker")]
public interface Bumptech.Glide.Request.IResourceCallback {
    public Object Lock { get; }
    [RegisterAttribute("getLock", "()Ljava/lang/Object;", "GetGetLockHandler:Bumptech.Glide.Request.IResourceCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual Object get_Lock();
    [RegisterAttribute("onLoadFailed", "(Lcom/bumptech/glide/load/engine/GlideException;)V", "GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Handler:Bumptech.Glide.Request.IResourceCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnLoadFailed(GlideException p0);
    [RegisterAttribute("onResourceReady", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;Z)V", "GetOnResourceReady_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_DataSource_ZHandler:Bumptech.Glide.Request.IResourceCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnResourceReady(IResource p0, DataSource p1, bool p2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/ResourceCallback")]
internal class Bumptech.Glide.Request.IResourceCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getLock;
    private IntPtr id_getLock;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_;
    private IntPtr id_onLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_DataSource_Z;
    private IntPtr id_onResourceReady_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_DataSource_Z;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Lock { get; }
    public IResourceCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResourceCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResourceCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetLockHandler();
    private static IntPtr n_GetLock(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object get_Lock();
    private static Delegate GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Handler();
    private static void n_OnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void OnLoadFailed(GlideException p0);
    private static Delegate GetOnResourceReady_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static void n_OnResourceReady_Lcom_bumptech_glide_load_engine_Resource_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, bool p2);
    [NullableContextAttribute("2")]
public sealed virtual void OnResourceReady(IResource p0, DataSource p1, bool p2);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
public class Bumptech.Glide.Request.LoadFailedEventArgs : EventArgs {
    private bool handled;
    private GlideException p0;
    private Object p1;
    [NullableAttribute("1")]
private ITarget p2;
    private bool p3;
    public bool Handled { get; public set; }
    public GlideException P0 { get; }
    public Object P1 { get; }
    [NullableAttribute("1")]
public ITarget P2 { get; }
    public bool P3 { get; }
    public LoadFailedEventArgs(bool handled, GlideException p0, Object p1, ITarget p2, bool p3);
    public bool get_Handled();
    public void set_Handled(bool value);
    public GlideException get_P0();
    public Object get_P1();
    [NullableContextAttribute("1")]
public ITarget get_P2();
    public bool get_P3();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/RequestCoordinator$RequestState")]
public class Bumptech.Glide.Request.RequestCoordinatorRequestState : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("CLEARED")]
public static RequestCoordinatorRequestState Cleared { get; }
    [RegisterAttribute("FAILED")]
public static RequestCoordinatorRequestState Failed { get; }
    [RegisterAttribute("PAUSED")]
public static RequestCoordinatorRequestState Paused { get; }
    [RegisterAttribute("RUNNING")]
public static RequestCoordinatorRequestState Running { get; }
    [RegisterAttribute("SUCCESS")]
public static RequestCoordinatorRequestState Success { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RequestCoordinatorRequestState(IntPtr javaReference, JniHandleOwnership transfer);
    private static RequestCoordinatorRequestState();
    public static RequestCoordinatorRequestState get_Cleared();
    public static RequestCoordinatorRequestState get_Failed();
    public static RequestCoordinatorRequestState get_Paused();
    public static RequestCoordinatorRequestState get_Running();
    public static RequestCoordinatorRequestState get_Success();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Lcom/bumptech/glide/request/RequestCoordinator$RequestState;", "")]
public static RequestCoordinatorRequestState ValueOf(string name);
    [RegisterAttribute("values", "()[Lcom/bumptech/glide/request/RequestCoordinator$RequestState;", "")]
public static RequestCoordinatorRequestState[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/RequestFutureTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.RequestFutureTarget : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isDone;
    [NullableAttribute("2")]
private static Delegate cb_getRequest;
    [NullableAttribute("2")]
private static Delegate cb_setRequest_Lcom_bumptech_glide_request_Request_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Z;
    [NullableAttribute("2")]
private static Delegate cb_get;
    [NullableAttribute("2")]
private static Delegate cb_get_JLjava_util_concurrent_TimeUnit_;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Z;
    [NullableAttribute("2")]
private static Delegate cb_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_Z;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    [NullableAttribute("2")]
private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsCancelled { get; }
    public bool IsDone { get; }
    [NullableAttribute("2")]
public IRequest Request { get; public set; }
    protected RequestFutureTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(II)V", "")]
public RequestFutureTarget(int width, int height);
    private static RequestFutureTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isCancelled", "()Z", "GetIsCancelledHandler")]
public virtual bool get_IsCancelled();
    private static Delegate GetIsDoneHandler();
    private static bool n_IsDone(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isDone", "()Z", "GetIsDoneHandler")]
public virtual bool get_IsDone();
    private static Delegate GetGetRequestHandler();
    private static IntPtr n_GetRequest(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRequest_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_SetRequest_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequest", "()Lcom/bumptech/glide/request/Request;", "GetGetRequestHandler")]
public virtual IRequest get_Request();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequest", "(Lcom/bumptech/glide/request/Request;)V", "GetSetRequest_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void set_Request(IRequest value);
    private static Delegate GetCancel_ZHandler();
    private static bool n_Cancel_Z(IntPtr jnienv, IntPtr native__this, bool mayInterruptIfRunning);
    [RegisterAttribute("cancel", "(Z)Z", "GetCancel_ZHandler")]
public virtual bool Cancel(bool mayInterruptIfRunning);
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "()Ljava/lang/Object;", "GetGetHandler")]
public virtual Object Get();
    private static Delegate GetGet_JLjava_util_concurrent_TimeUnit_Handler();
    private static IntPtr n_Get_JLjava_util_concurrent_TimeUnit_(IntPtr jnienv, IntPtr native__this, long time, IntPtr native_timeUnit);
    [RegisterAttribute("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "GetGet_JLjava_util_concurrent_TimeUnit_Handler")]
public virtual Object Get(long time, TimeUnit timeUnit);
    private static Delegate GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_GetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void GetSize(ISizeReadyCallback cb);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler")]
public virtual void OnDestroy();
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadCleared(Drawable placeholder);
    private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_errorDrawable);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadFailed(Drawable errorDrawable);
    private static Delegate GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_ZHandler();
    private static bool n_OnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_e, IntPtr native_model, IntPtr native_target, bool isFirstResource);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z", "GetOnLoadFailed_Lcom_bumptech_glide_load_engine_GlideException_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_ZHandler")]
public virtual bool OnLoadFailed(GlideException e, Object model, ITarget target, bool isFirstResource);
    private static Delegate GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadStarted_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadStarted", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadStarted(Drawable placeholder);
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static bool n_OnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_model, IntPtr native_target, IntPtr native_dataSource, bool isFirstResource);
    [RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z", "GetOnResourceReady_Ljava_lang_Object_Ljava_lang_Object_Lcom_bumptech_glide_request_target_Target_Lcom_bumptech_glide_load_DataSource_ZHandler")]
public virtual bool OnResourceReady(Object resource, Object model, ITarget target, DataSource dataSource, bool isFirstResource);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
    private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void RemoveCallback(ISizeReadyCallback cb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/RequestOptions")]
public class Bumptech.Glide.Request.RequestOptions : BaseRequestOptions {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected RequestOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static RequestOptions();
    public virtual RequestOptions Apply(BaseRequestOptions o);
    public virtual RequestOptions AutoClone();
    public virtual RequestOptions CenterCrop();
    public virtual RequestOptions CenterInside();
    public virtual RequestOptions CircleCrop();
    public virtual RequestOptions Clone();
    public virtual RequestOptions Decode(Class resourceClass);
    public virtual RequestOptions DisallowHardwareConfig();
    public virtual RequestOptions DontAnimate();
    public virtual RequestOptions DontTransform();
    public virtual RequestOptions Downsample(DownsampleStrategy strategy);
    public virtual RequestOptions EncodeFormat(CompressFormat format);
    public virtual RequestOptions EncodeQuality(int quality);
    public virtual RequestBuilder Error(Drawable drawable);
    public virtual RequestOptions Error(int resourceId);
    public virtual RequestOptions Fallback(Drawable drawable);
    public virtual RequestOptions Fallback(int resourceId);
    public virtual RequestOptions FitCenter();
    public virtual RequestOptions Format(DecodeFormat format);
    public virtual RequestOptions Frame(long frameTimeMicros);
    public virtual RequestOptions Lock();
    public virtual RequestOptions OptionalCenterCrop();
    public virtual RequestOptions OptionalCenterInside();
    public virtual RequestOptions OptionalCircleCrop();
    public virtual RequestOptions OptionalFitCenter();
    public virtual RequestOptions OptionalTransform(Class resourceClass, ITransformation transformation);
    public virtual RequestOptions OptionalTransform(ITransformation transformation);
    public virtual RequestOptions Override(int width, int height);
    public virtual RequestOptions Override(int size);
    public virtual RequestOptions Placeholder(Drawable drawable);
    public virtual RequestOptions Placeholder(int resourceId);
    public virtual RequestOptions Set(Option option, Object value);
    public virtual RequestOptions SetDiskCacheStrategy(DiskCacheStrategy strategy);
    public virtual RequestOptions SetOnlyRetrieveFromCache(bool flag);
    public virtual RequestOptions SetPriority(Priority priority);
    public virtual RequestOptions SetSignature(IKey signature);
    public virtual RequestOptions SetSizeMultiplier(float sizeMultiplier);
    public virtual RequestOptions SetTheme(Theme theme);
    public virtual RequestOptions SetUseAnimationPool(bool flag);
    public virtual RequestOptions SetUseUnlimitedSourceGeneratorsPool(bool flag);
    public virtual RequestOptions SkipMemoryCache(bool skip);
    public virtual RequestOptions Timeout(int timeoutMs);
    public virtual RequestOptions Transform(Class resourceClass, ITransformation transformation);
    public virtual RequestOptions Transform(ITransformation[] transformations);
    public virtual RequestOptions Transform(ITransformation transformation);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("bitmapTransform", "(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions BitmapTransform(ITransformation transformation);
    [RegisterAttribute("centerCropTransform", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions CenterCropTransform();
    [RegisterAttribute("centerInsideTransform", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions CenterInsideTransform();
    [RegisterAttribute("circleCropTransform", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions CircleCropTransform();
    [RegisterAttribute("decodeTypeOf", "(Ljava/lang/Class;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions DecodeTypeOf(Class resourceClass);
    [RegisterAttribute("diskCacheStrategyOf", "(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions DiskCacheStrategyOf(DiskCacheStrategy diskCacheStrategy);
    [RegisterAttribute("downsampleOf", "(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions DownsampleOf(DownsampleStrategy strategy);
    [RegisterAttribute("encodeFormatOf", "(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions EncodeFormatOf(CompressFormat format);
    [RegisterAttribute("encodeQualityOf", "(I)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions EncodeQualityOf(int quality);
    [RegisterAttribute("errorOf", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions ErrorOf(Drawable errorDrawable);
    [RegisterAttribute("errorOf", "(I)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions ErrorOf(int errorId);
    [RegisterAttribute("fitCenterTransform", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions FitCenterTransform();
    [RegisterAttribute("formatOf", "(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions FormatOf(DecodeFormat format);
    [RegisterAttribute("frameOf", "(J)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions FrameOf(long frameTimeMicros);
    [RegisterAttribute("noAnimation", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions NoAnimation();
    [RegisterAttribute("noTransformation", "()Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions NoTransformation();
    [RegisterAttribute("option", "(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/RequestOptions;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static RequestOptions Option(Option option, Object value);
    [RegisterAttribute("overrideOf", "(I)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions OverrideOf(int size);
    [RegisterAttribute("overrideOf", "(II)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions OverrideOf(int width, int height);
    [RegisterAttribute("placeholderOf", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions PlaceholderOf(Drawable placeholder);
    [RegisterAttribute("placeholderOf", "(I)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions PlaceholderOf(int placeholderId);
    [RegisterAttribute("priorityOf", "(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions PriorityOf(Priority priority);
    [RegisterAttribute("signatureOf", "(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions SignatureOf(IKey signature);
    [RegisterAttribute("sizeMultiplierOf", "(F)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions SizeMultiplierOf(float sizeMultiplier);
    [RegisterAttribute("skipMemoryCacheOf", "(Z)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions SkipMemoryCacheOf(bool skipMemoryCache);
    [RegisterAttribute("timeoutOf", "(I)Lcom/bumptech/glide/request/RequestOptions;", "")]
public static RequestOptions TimeoutOf(int timeout);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class Bumptech.Glide.Request.ResourceReadyEventArgs : EventArgs {
    private bool handled;
    private Object p0;
    private Object p1;
    [NullableAttribute("2")]
private ITarget p2;
    private DataSource p3;
    private bool p4;
    public bool Handled { get; public set; }
    public Object P0 { get; }
    public Object P1 { get; }
    [NullableAttribute("2")]
public ITarget P2 { get; }
    public DataSource P3 { get; }
    public bool P4 { get; }
    public ResourceReadyEventArgs(bool handled, Object p0, Object p1, ITarget p2, DataSource p3, bool p4);
    public bool get_Handled();
    public void set_Handled(bool value);
    public Object get_P0();
    public Object get_P1();
    [NullableContextAttribute("2")]
public ITarget get_P2();
    public DataSource get_P3();
    public bool get_P4();
}
[RegisterAttribute("com/bumptech/glide/request/SingleRequest")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.SingleRequest : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsAnyResourceSet { get; }
    public bool IsCleared { get; }
    public bool IsComplete { get; }
    public bool IsRunning { get; }
    [NullableAttribute("2")]
public Object Lock { get; }
    internal SingleRequest(IntPtr javaReference, JniHandleOwnership transfer);
    private static SingleRequest();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAnyResourceSet", "()Z", "")]
public sealed virtual bool get_IsAnyResourceSet();
    [RegisterAttribute("isCleared", "()Z", "")]
public sealed virtual bool get_IsCleared();
    [RegisterAttribute("isComplete", "()Z", "")]
public sealed virtual bool get_IsComplete();
    [RegisterAttribute("isRunning", "()Z", "")]
public sealed virtual bool get_IsRunning();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLock", "()Ljava/lang/Object;", "")]
public sealed virtual Object get_Lock();
    [RegisterAttribute("begin", "()V", "")]
public sealed virtual void Begin();
    [RegisterAttribute("clear", "()V", "")]
public sealed virtual void Clear();
    [NullableContextAttribute("2")]
[RegisterAttribute("isEquivalentTo", "(Lcom/bumptech/glide/request/Request;)Z", "")]
public sealed virtual bool IsEquivalentTo(IRequest o);
    [NullableContextAttribute("2")]
[RegisterAttribute("obtain", "(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static SingleRequest Obtain(Context context, GlideContext glideContext, Object requestLock, Object model, Class transcodeClass, BaseRequestOptions requestOptions, int overrideWidth, int overrideHeight, Priority priority, ITarget target, IRequestListener targetListener, IList requestListeners, IRequestCoordinator requestCoordinator, Engine engine, ITransitionFactory animationFactory, IExecutor callbackExecutor);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Lcom/bumptech/glide/load/engine/GlideException;)V", "")]
public sealed virtual void OnLoadFailed(GlideException e);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;Z)V", "")]
public sealed virtual void OnResourceReady(IResource resource, DataSource dataSource, bool isLoadedFromAlternateCacheKey);
    [RegisterAttribute("onSizeReady", "(II)V", "")]
public sealed virtual void OnSizeReady(int width, int height);
    [RegisterAttribute("pause", "()V", "")]
public sealed virtual void Pause();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/AppWidgetTarget")]
public class Bumptech.Glide.Request.Target.AppWidgetTarget : CustomTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AppWidgetTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/widget/RemoteViews;Landroid/content/ComponentName;)V", "")]
public AppWidgetTarget(Context context, int viewId, RemoteViews remoteViews, ComponentName componentName);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/widget/RemoteViews;[I)V", "")]
public AppWidgetTarget(Context context, int viewId, RemoteViews remoteViews, Int32[] widgetIds);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;IIILandroid/widget/RemoteViews;Landroid/content/ComponentName;)V", "")]
public AppWidgetTarget(Context context, int width, int height, int viewId, RemoteViews remoteViews, ComponentName componentName);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;IIILandroid/widget/RemoteViews;[I)V", "")]
public AppWidgetTarget(Context context, int width, int height, int viewId, RemoteViews remoteViews, Int32[] widgetIds);
    private static AppWidgetTarget();
    public virtual void OnResourceReady(Object resource, ITransition transition);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadCleared(Drawable placeholder);
    private static Delegate GetOnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [RegisterAttribute("onResourceReady", "(Landroid/graphics/Bitmap;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Bitmap resource, ITransition transition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/request/target/BaseTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.BaseTarget : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRequest;
    [NullableAttribute("2")]
private static Delegate cb_setRequest_Lcom_bumptech_glide_request_Request_;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IRequest Request { get; public set; }
    protected BaseTarget(IntPtr javaReference, JniHandleOwnership transfer);
    private static BaseTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetRequestHandler();
    private static IntPtr n_GetRequest(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRequest_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_SetRequest_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequest", "()Lcom/bumptech/glide/request/Request;", "GetGetRequestHandler")]
public virtual IRequest get_Request();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequest", "(Lcom/bumptech/glide/request/Request;)V", "GetSetRequest_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void set_Request(IRequest value);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler")]
public virtual void OnDestroy();
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadCleared(Drawable placeholder);
    private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_errorDrawable);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadFailed(Drawable errorDrawable);
    private static Delegate GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadStarted_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadStarted", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadStarted(Drawable placeholder);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public abstract virtual void OnResourceReady(Object resource, ITransition transition);
    private static Delegate GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_GetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public abstract virtual void GetSize(ISizeReadyCallback p0);
    private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public abstract virtual void RemoveCallback(ISizeReadyCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/BaseTarget")]
internal class Bumptech.Glide.Request.Target.BaseTargetInvoker : BaseTarget {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BaseTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseTargetInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void GetSize(ISizeReadyCallback p0);
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void RemoveCallback(ISizeReadyCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/BitmapImageViewTarget")]
public class Bumptech.Glide.Request.Target.BitmapImageViewTarget : ImageViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_setResource_Landroid_graphics_Bitmap_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public BitmapImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public BitmapImageViewTarget(ImageView view, bool waitForLayout);
    private static BitmapImageViewTarget();
    protected virtual void SetResource(Object resource);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSetResource_Landroid_graphics_Bitmap_Handler();
    private static void n_SetResource_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("setResource", "(Landroid/graphics/Bitmap;)V", "GetSetResource_Landroid_graphics_Bitmap_Handler")]
protected virtual void SetResource(Bitmap resource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/BitmapThumbnailImageViewTarget")]
public class Bumptech.Glide.Request.Target.BitmapThumbnailImageViewTarget : ThumbnailImageViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDrawable_Landroid_graphics_Bitmap_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapThumbnailImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public BitmapThumbnailImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public BitmapThumbnailImageViewTarget(ImageView view, bool waitForLayout);
    private static BitmapThumbnailImageViewTarget();
    protected virtual Drawable GetDrawable(Object resource);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawable_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_GetDrawable_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Landroid/graphics/Bitmap;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Landroid_graphics_Bitmap_Handler")]
protected virtual Drawable GetDrawable(Bitmap resource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/CustomTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.CustomTarget : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IRequest Request { get; public set; }
    protected CustomTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(II)V", "")]
public CustomTarget(int width, int height);
    private static CustomTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequest", "()Lcom/bumptech/glide/request/Request;", "")]
public sealed virtual IRequest get_Request();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequest", "(Lcom/bumptech/glide/request/Request;)V", "")]
public sealed virtual void set_Request(IRequest value);
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "")]
public sealed virtual void GetSize(ISizeReadyCallback cb);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler")]
public virtual void OnDestroy();
    private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_errorDrawable);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadFailed(Drawable errorDrawable);
    private static Delegate GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadStarted_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadStarted", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadStarted(Drawable placeholder);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "")]
public sealed virtual void RemoveCallback(ISizeReadyCallback cb);
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public abstract virtual void OnResourceReady(Object resource, ITransition transition);
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public abstract virtual void OnLoadCleared(Drawable p0);
}
[RegisterAttribute("com/bumptech/glide/request/target/CustomTarget")]
internal class Bumptech.Glide.Request.Target.CustomTargetInvoker : CustomTarget {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CustomTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static CustomTargetInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadCleared(Drawable p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/CustomViewTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.CustomViewTarget : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onResourceCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceLoading_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IRequest Request { get; public set; }
    public Object View { get; }
    protected CustomViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public CustomViewTarget(Object view);
    private static CustomViewTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getRequest", "()Lcom/bumptech/glide/request/Request;", "")]
public sealed virtual IRequest get_Request();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRequest", "(Lcom/bumptech/glide/request/Request;)V", "")]
public sealed virtual void set_Request(IRequest value);
    [RegisterAttribute("getView", "()Landroid/view/View;", "")]
public Object get_View();
    [RegisterAttribute("clearOnDetach", "()Lcom/bumptech/glide/request/target/CustomViewTarget;", "")]
public CustomViewTarget ClearOnDetach();
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "")]
public sealed virtual void GetSize(ISizeReadyCallback cb);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler")]
public virtual void OnDestroy();
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "")]
public sealed virtual void OnLoadCleared(Drawable placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadStarted", "(Landroid/graphics/drawable/Drawable;)V", "")]
public sealed virtual void OnLoadStarted(Drawable placeholder);
    private static Delegate GetOnResourceCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnResourceCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnResourceCleared_Landroid_graphics_drawable_Drawable_Handler")]
protected abstract virtual void OnResourceCleared(Drawable p0);
    private static Delegate GetOnResourceLoading_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnResourceLoading_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceLoading", "(Landroid/graphics/drawable/Drawable;)V", "GetOnResourceLoading_Landroid_graphics_drawable_Drawable_Handler")]
protected virtual void OnResourceLoading(Drawable placeholder);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "")]
public sealed virtual void RemoveCallback(ISizeReadyCallback cb);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("useTagId", "(I)Lcom/bumptech/glide/request/target/CustomViewTarget;", "")]
public CustomViewTarget UseTagId(int tagId);
    [RegisterAttribute("waitForLayout", "()Lcom/bumptech/glide/request/target/CustomViewTarget;", "")]
public CustomViewTarget WaitForLayout();
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public abstract virtual void OnResourceReady(Object resource, ITransition transition);
    private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler")]
public abstract virtual void OnLoadFailed(Drawable p0);
}
[RegisterAttribute("com/bumptech/glide/request/target/CustomViewTarget")]
internal class Bumptech.Glide.Request.Target.CustomViewTargetInvoker : CustomViewTarget {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CustomViewTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static CustomViewTargetInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnResourceCleared_Landroid_graphics_drawable_Drawable_Handler")]
protected virtual void OnResourceCleared(Drawable p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadFailed(Drawable p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/DrawableImageViewTarget")]
public class Bumptech.Glide.Request.Target.DrawableImageViewTarget : ImageViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_setResource_Landroid_graphics_drawable_Drawable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DrawableImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public DrawableImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public DrawableImageViewTarget(ImageView view, bool waitForLayout);
    private static DrawableImageViewTarget();
    protected virtual void SetResource(Object resource);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSetResource_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetResource_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("setResource", "(Landroid/graphics/drawable/Drawable;)V", "GetSetResource_Landroid_graphics_drawable_Drawable_Handler")]
protected virtual void SetResource(Drawable resource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/DrawableThumbnailImageViewTarget")]
public class Bumptech.Glide.Request.Target.DrawableThumbnailImageViewTarget : ThumbnailImageViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDrawable_Landroid_graphics_drawable_Drawable_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DrawableThumbnailImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public DrawableThumbnailImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public DrawableThumbnailImageViewTarget(ImageView view, bool waitForLayout);
    private static DrawableThumbnailImageViewTarget();
    protected virtual Drawable GetDrawable(Object resource);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_GetDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Landroid_graphics_drawable_Drawable_Handler")]
protected virtual Drawable GetDrawable(Drawable resource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/FixedSizeDrawable")]
public class Bumptech.Glide.Request.Target.FixedSizeDrawable : Drawable {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getOpacity;
    [NullableAttribute("2")]
private static Delegate cb_draw_Landroid_graphics_Canvas_;
    [NullableAttribute("2")]
private static Delegate cb_setAlpha_I;
    [NullableAttribute("2")]
private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int Opacity { get; }
    protected FixedSizeDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/graphics/drawable/Drawable;II)V", "")]
public FixedSizeDrawable(Drawable wrapped, int width, int height);
    private static FixedSizeDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int i);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int i);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [NullableContextAttribute("2")]
[RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ImageViewTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.ImageViewTarget : ViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getCurrentDrawable;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_setDrawable_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setResource_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Drawable CurrentDrawable { get; }
    protected ImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public ImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public ImageViewTarget(ImageView view, bool waitForLayout);
    private static ImageViewTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCurrentDrawableHandler();
    private static IntPtr n_GetCurrentDrawable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getCurrentDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentDrawableHandler")]
public virtual Drawable get_CurrentDrawable();
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
    private static Delegate GetSetDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [NullableContextAttribute("2")]
[RegisterAttribute("setDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetDrawable(Drawable drawable);
    private static Delegate GetSetResource_Ljava_lang_Object_Handler();
    private static void n_SetResource_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("setResource", "(Ljava/lang/Object;)V", "GetSetResource_Ljava_lang_Object_Handler")]
protected abstract virtual void SetResource(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ImageViewTargetFactory")]
public class Bumptech.Glide.Request.Target.ImageViewTargetFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_buildTarget_Landroid_widget_ImageView_Ljava_lang_Class_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ImageViewTargetFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageViewTargetFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuildTarget_Landroid_widget_ImageView_Ljava_lang_Class_Handler();
    private static IntPtr n_BuildTarget_Landroid_widget_ImageView_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_clazz);
    [RegisterAttribute("buildTarget", "(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/ViewTarget;", "GetBuildTarget_Landroid_widget_ImageView_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual ViewTarget BuildTarget(ImageView view, Class clazz);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ImageViewTarget")]
internal class Bumptech.Glide.Request.Target.ImageViewTargetInvoker : ImageViewTarget {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ImageViewTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ImageViewTargetInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("setResource", "(Ljava/lang/Object;)V", "GetSetResource_Ljava_lang_Object_Handler")]
protected virtual void SetResource(Object p0);
}
[RegisterAttribute("com/bumptech/glide/request/target/SizeReadyCallback", "", "Bumptech.Glide.Request.Target.ISizeReadyCallbackInvoker")]
public interface Bumptech.Glide.Request.Target.ISizeReadyCallback {
    [RegisterAttribute("onSizeReady", "(II)V", "GetOnSizeReady_IIHandler:Bumptech.Glide.Request.Target.ISizeReadyCallbackInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnSizeReady(int p0, int p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/SizeReadyCallback")]
internal class Bumptech.Glide.Request.Target.ISizeReadyCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onSizeReady_II;
    private IntPtr id_onSizeReady_II;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISizeReadyCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISizeReadyCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISizeReadyCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnSizeReady_IIHandler();
    private static void n_OnSizeReady_II(IntPtr jnienv, IntPtr native__this, int p0, int p1);
    public sealed virtual void OnSizeReady(int p0, int p1);
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/request/target/Target", "", "Bumptech.Glide.Request.Target.ITargetInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Request.Target.ITarget {
    public IRequest Request { get; public set; }
    [RegisterAttribute("getRequest", "()Lcom/bumptech/glide/request/Request;", "GetGetRequestHandler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual IRequest get_Request();
    [RegisterAttribute("setRequest", "(Lcom/bumptech/glide/request/Request;)V", "GetSetRequest_Lcom_bumptech_glide_request_Request_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void set_Request(IRequest value);
    [NullableContextAttribute("1")]
[RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void GetSize(ISizeReadyCallback p0);
    [RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnLoadCleared(Drawable p0);
    [RegisterAttribute("onLoadFailed", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnLoadFailed(Drawable p0);
    [RegisterAttribute("onLoadStarted", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnLoadStarted(Drawable p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void OnResourceReady(Object p0, ITransition p1);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler:Bumptech.Glide.Request.Target.ITargetInvoker, Xamarin.Android.Glide")]
public abstract virtual void RemoveCallback(ISizeReadyCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/Target")]
internal class Bumptech.Glide.Request.Target.ITargetInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getRequest;
    [NullableAttribute("2")]
private static Delegate cb_setRequest_Lcom_bumptech_glide_request_Request_;
    private IntPtr id_getRequest;
    private IntPtr id_setRequest_Lcom_bumptech_glide_request_Request_;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private IntPtr id_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadFailed_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_onLoadStarted_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    private IntPtr id_onResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_;
    [NullableAttribute("2")]
private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    private IntPtr id_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    private IntPtr id_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    private IntPtr id_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    private IntPtr id_onStop;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IRequest Request { get; public set; }
    public ITargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITargetInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITarget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetRequestHandler();
    private static IntPtr n_GetRequest(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRequest_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_SetRequest_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual IRequest get_Request();
    [NullableContextAttribute("2")]
public sealed virtual void set_Request(IRequest value);
    private static Delegate GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_GetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void GetSize(ISizeReadyCallback p0);
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void OnLoadCleared(Drawable p0);
    private static Delegate GetOnLoadFailed_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadFailed_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void OnLoadFailed(Drawable p0);
    private static Delegate GetOnLoadStarted_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadStarted_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void OnLoadStarted(Drawable p0);
    private static Delegate GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void OnResourceReady(Object p0, ITransition p1);
    private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveCallback(ISizeReadyCallback p0);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnDestroy();
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnStop();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/NotificationTarget")]
public class Bumptech.Glide.Request.Target.NotificationTarget : CustomTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onLoadCleared_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_onResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/widget/RemoteViews;Landroid/app/Notification;I)V", "")]
public NotificationTarget(Context context, int viewId, RemoteViews remoteViews, Notification notification, int notificationId);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/widget/RemoteViews;Landroid/app/Notification;ILjava/lang/String;)V", "")]
public NotificationTarget(Context context, int viewId, RemoteViews remoteViews, Notification notification, int notificationId, string notificationTag);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;IIILandroid/widget/RemoteViews;Landroid/app/Notification;ILjava/lang/String;)V", "")]
public NotificationTarget(Context context, int width, int height, int viewId, RemoteViews remoteViews, Notification notification, int notificationId, string notificationTag);
    private static NotificationTarget();
    public virtual void OnResourceReady(Object resource, ITransition transition);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_OnLoadCleared_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_placeholder);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "GetOnLoadCleared_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void OnLoadCleared(Drawable placeholder);
    private static Delegate GetOnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_Handler();
    private static void n_OnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource, IntPtr native_transition);
    [RegisterAttribute("onResourceReady", "(Landroid/graphics/Bitmap;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Landroid_graphics_Bitmap_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Bitmap resource, ITransition transition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/PreloadTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Target.PreloadTarget : CustomTarget {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PreloadTarget(IntPtr javaReference, JniHandleOwnership transfer);
    private static PreloadTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("obtain", "(Lcom/bumptech/glide/RequestManager;II)Lcom/bumptech/glide/request/target/PreloadTarget;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static PreloadTarget Obtain(RequestManager requestManager, int width, int height);
    [NullableContextAttribute("2")]
[RegisterAttribute("onLoadCleared", "(Landroid/graphics/drawable/Drawable;)V", "")]
public virtual void OnLoadCleared(Drawable placeholder);
    [RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "")]
public virtual void OnResourceReady(Object resource, ITransition transition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/request/target/SimpleTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.SimpleTarget : BaseTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SimpleTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(II)V", "")]
public SimpleTarget(int width, int height);
    private static SimpleTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "")]
public sealed virtual void GetSize(ISizeReadyCallback cb);
    private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void RemoveCallback(ISizeReadyCallback cb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/SimpleTarget")]
internal class Bumptech.Glide.Request.Target.SimpleTargetInvoker : SimpleTarget {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public SimpleTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static SimpleTargetInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
}
[RegisterAttribute("com/bumptech/glide/request/target/Target")]
public abstract class Bumptech.Glide.Request.Target.Target : Object {
    [RegisterAttribute("SIZE_ORIGINAL")]
public static int SizeOriginal;
}
[RegisterAttribute("com/bumptech/glide/request/target/Target")]
[ObsoleteAttribute("Use the 'Target' type. This type will be removed in a future release.", "True")]
public abstract class Bumptech.Glide.Request.Target.TargetConsts : Target {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ThumbnailImageViewTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.ThumbnailImageViewTarget : ImageViewTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDrawable_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_setResource_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ThumbnailImageViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;)V", "")]
public ThumbnailImageViewTarget(ImageView view);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/widget/ImageView;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public ThumbnailImageViewTarget(ImageView view, bool waitForLayout);
    private static ThumbnailImageViewTarget();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawable_Ljava_lang_Object_Handler();
    private static IntPtr n_GetDrawable_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Ljava/lang/Object;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Ljava_lang_Object_Handler")]
protected abstract virtual Drawable GetDrawable(Object p0);
    private static Delegate GetSetResource_Ljava_lang_Object_Handler();
    private static void n_SetResource_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_resource);
    [NullableContextAttribute("2")]
[RegisterAttribute("setResource", "(Ljava/lang/Object;)V", "GetSetResource_Ljava_lang_Object_Handler")]
protected virtual void SetResource(Object resource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ThumbnailImageViewTarget")]
internal class Bumptech.Glide.Request.Target.ThumbnailImageViewTargetInvoker : ThumbnailImageViewTarget {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ThumbnailImageViewTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ThumbnailImageViewTargetInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Ljava/lang/Object;)Landroid/graphics/drawable/Drawable;", "GetGetDrawable_Ljava_lang_Object_Handler")]
protected virtual Drawable GetDrawable(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/request/target/ViewTarget")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Target.ViewTarget : BaseTarget {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getView;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_removeCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_;
    [NullableAttribute("2")]
[RegisterAttribute("view")]
protected View _view { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public View View { get; }
    protected ViewTarget(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public ViewTarget(Object view);
    [RegisterAttribute(".ctor", "(Landroid/view/View;Z)V", "")]
[ObsoleteAttribute("deprecated")]
public ViewTarget(Object view, bool waitForLayout);
    private static ViewTarget();
    [NullableContextAttribute("2")]
protected View get__view();
    [NullableContextAttribute("2")]
protected void set__view(View value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetViewHandler();
    private static IntPtr n_GetView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getView", "()Landroid/view/View;", "GetGetViewHandler")]
public virtual View get_View();
    [RegisterAttribute("clearOnDetach", "()Lcom/bumptech/glide/request/target/ViewTarget;", "")]
public ViewTarget ClearOnDetach();
    private static Delegate GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_GetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("getSize", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetGetSize_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void GetSize(ISizeReadyCallback cb);
    private static Delegate GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler();
    private static void n_RemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("removeCallback", "(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V", "GetRemoveCallback_Lcom_bumptech_glide_request_target_SizeReadyCallback_Handler")]
public virtual void RemoveCallback(ISizeReadyCallback cb);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setTagId", "(I)V", "")]
public static void SetTagId(int tagId);
    [RegisterAttribute("waitForLayout", "()Lcom/bumptech/glide/request/target/ViewTarget;", "")]
public ViewTarget WaitForLayout();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/target/ViewTarget")]
internal class Bumptech.Glide.Request.Target.ViewTargetInvoker : ViewTarget {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ViewTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ViewTargetInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onResourceReady", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V", "GetOnResourceReady_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_Handler")]
public virtual void OnResourceReady(Object resource, ITransition transition);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/ThumbnailRequestCoordinator")]
public class Bumptech.Glide.Request.ThumbnailRequestCoordinator : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_isAnyResourceSet;
    private static Delegate cb_isCleared;
    private static Delegate cb_isComplete;
    private static Delegate cb_isRunning;
    private static Delegate cb_getRoot;
    private static Delegate cb_begin;
    private static Delegate cb_canNotifyCleared_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_canNotifyStatusChanged_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_canSetImage_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_clear;
    private static Delegate cb_isEquivalentTo_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_onRequestFailed_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_onRequestSuccess_Lcom_bumptech_glide_request_Request_;
    private static Delegate cb_pause;
    private static Delegate cb_setRequests_Lcom_bumptech_glide_request_Request_Lcom_bumptech_glide_request_Request_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsAnyResourceSet { get; }
    public bool IsCleared { get; }
    public bool IsComplete { get; }
    public bool IsRunning { get; }
    public IRequestCoordinator Root { get; }
    protected ThumbnailRequestCoordinator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V", "")]
public ThumbnailRequestCoordinator(Object requestLock, IRequestCoordinator parent);
    private static ThumbnailRequestCoordinator();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetIsAnyResourceSetHandler();
    private static bool n_IsAnyResourceSet(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAnyResourceSet", "()Z", "GetIsAnyResourceSetHandler")]
public virtual bool get_IsAnyResourceSet();
    [NullableContextAttribute("1")]
private static Delegate GetIsClearedHandler();
    private static bool n_IsCleared(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isCleared", "()Z", "GetIsClearedHandler")]
public virtual bool get_IsCleared();
    [NullableContextAttribute("1")]
private static Delegate GetIsCompleteHandler();
    private static bool n_IsComplete(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isComplete", "()Z", "GetIsCompleteHandler")]
public virtual bool get_IsComplete();
    [NullableContextAttribute("1")]
private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    [NullableContextAttribute("1")]
private static Delegate GetGetRootHandler();
    private static IntPtr n_GetRoot(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRoot", "()Lcom/bumptech/glide/request/RequestCoordinator;", "GetGetRootHandler")]
public virtual IRequestCoordinator get_Root();
    [NullableContextAttribute("1")]
private static Delegate GetBeginHandler();
    private static void n_Begin(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("begin", "()V", "GetBeginHandler")]
public virtual void Begin();
    [NullableContextAttribute("1")]
private static Delegate GetCanNotifyCleared_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanNotifyCleared_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("canNotifyCleared", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanNotifyCleared_Lcom_bumptech_glide_request_Request_Handler")]
public virtual bool CanNotifyCleared(IRequest request);
    [NullableContextAttribute("1")]
private static Delegate GetCanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("canNotifyStatusChanged", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanNotifyStatusChanged_Lcom_bumptech_glide_request_Request_Handler")]
public virtual bool CanNotifyStatusChanged(IRequest request);
    [NullableContextAttribute("1")]
private static Delegate GetCanSetImage_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_CanSetImage_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("canSetImage", "(Lcom/bumptech/glide/request/Request;)Z", "GetCanSetImage_Lcom_bumptech_glide_request_Request_Handler")]
public virtual bool CanSetImage(IRequest request);
    [NullableContextAttribute("1")]
private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    [NullableContextAttribute("1")]
private static Delegate GetIsEquivalentTo_Lcom_bumptech_glide_request_Request_Handler();
    private static bool n_IsEquivalentTo_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_o);
    [RegisterAttribute("isEquivalentTo", "(Lcom/bumptech/glide/request/Request;)Z", "GetIsEquivalentTo_Lcom_bumptech_glide_request_Request_Handler")]
public virtual bool IsEquivalentTo(IRequest o);
    [NullableContextAttribute("1")]
private static Delegate GetOnRequestFailed_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_OnRequestFailed_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("onRequestFailed", "(Lcom/bumptech/glide/request/Request;)V", "GetOnRequestFailed_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void OnRequestFailed(IRequest request);
    [NullableContextAttribute("1")]
private static Delegate GetOnRequestSuccess_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_OnRequestSuccess_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [RegisterAttribute("onRequestSuccess", "(Lcom/bumptech/glide/request/Request;)V", "GetOnRequestSuccess_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void OnRequestSuccess(IRequest request);
    [NullableContextAttribute("1")]
private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public virtual void Pause();
    [NullableContextAttribute("1")]
private static Delegate GetSetRequests_Lcom_bumptech_glide_request_Request_Lcom_bumptech_glide_request_Request_Handler();
    private static void n_SetRequests_Lcom_bumptech_glide_request_Request_Lcom_bumptech_glide_request_Request_(IntPtr jnienv, IntPtr native__this, IntPtr native_full, IntPtr native_thumb);
    [RegisterAttribute("setRequests", "(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V", "GetSetRequests_Lcom_bumptech_glide_request_Request_Lcom_bumptech_glide_request_Request_Handler")]
public virtual void SetRequests(IRequest full, IRequest thumb);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/BitmapContainerTransitionFactory")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_DataSource_Z;
    [NullableAttribute("2")]
private static Delegate cb_getBitmap_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapContainerTransitionFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)V", "")]
public BitmapContainerTransitionFactory(ITransitionFactory realFactory);
    private static BitmapContainerTransitionFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_dataSource, bool isFirstResource);
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;", "GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler")]
public virtual ITransition Build(DataSource dataSource, bool isFirstResource);
    private static Delegate GetGetBitmap_Ljava_lang_Object_Handler();
    private static IntPtr n_GetBitmap_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmap", "(Ljava/lang/Object;)Landroid/graphics/Bitmap;", "GetGetBitmap_Ljava_lang_Object_Handler")]
protected abstract virtual Bitmap GetBitmap(Object p0);
}
[RegisterAttribute("com/bumptech/glide/request/transition/BitmapContainerTransitionFactory")]
internal class Bumptech.Glide.Request.Transition.BitmapContainerTransitionFactoryInvoker : BitmapContainerTransitionFactory {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public BitmapContainerTransitionFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BitmapContainerTransitionFactoryInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmap", "(Ljava/lang/Object;)Landroid/graphics/Bitmap;", "GetGetBitmap_Ljava_lang_Object_Handler")]
protected virtual Bitmap GetBitmap(Object p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/BitmapTransitionFactory")]
public class Bumptech.Glide.Request.Transition.BitmapTransitionFactory : BitmapContainerTransitionFactory {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getBitmap_Landroid_graphics_Bitmap_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BitmapTransitionFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)V", "")]
public BitmapTransitionFactory(ITransitionFactory realFactory);
    private static BitmapTransitionFactory();
    protected virtual Bitmap GetBitmap(Object current);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBitmap_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_GetBitmap_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_current);
    [RegisterAttribute("getBitmap", "(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "GetGetBitmap_Landroid_graphics_Bitmap_Handler")]
protected virtual Bitmap GetBitmap(Bitmap current);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/DrawableCrossFadeFactory")]
public class Bumptech.Glide.Request.Transition.DrawableCrossFadeFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_DataSource_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DrawableCrossFadeFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(IZ)V", "")]
protected DrawableCrossFadeFactory(int duration, bool isCrossFadeEnabled);
    private static DrawableCrossFadeFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_dataSource, bool isFirstResource);
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;", "GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler")]
public virtual ITransition Build(DataSource dataSource, bool isFirstResource);
    [NullableContextAttribute("2")]
private sealed virtual override ITransition global::Bumptech.Glide.Request.Transition.ITransitionFactory.Build(DataSource p0, bool p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/DrawableCrossFadeTransition")]
public class Bumptech.Glide.Request.Transition.DrawableCrossFadeTransition : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transition_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DrawableCrossFadeTransition(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(IZ)V", "")]
public DrawableCrossFadeTransition(int duration, bool isCrossFadeEnabled);
    private static DrawableCrossFadeTransition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransition_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler();
    private static bool n_Transition_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_current, IntPtr native_adapter);
    [NullableContextAttribute("2")]
[RegisterAttribute("transition", "(Landroid/graphics/drawable/Drawable;Lcom/bumptech/glide/request/transition/Transition$ViewAdapter;)Z", "GetTransition_Landroid_graphics_drawable_Drawable_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler")]
public virtual bool Transition(Drawable current, ITransitionViewAdapter adapter);
    [NullableContextAttribute("2")]
private sealed virtual override bool global::Bumptech.Glide.Request.Transition.ITransition.Transition(Object p0, ITransitionViewAdapter p1);
}
[RegisterAttribute("com/bumptech/glide/request/transition/Transition", "", "Bumptech.Glide.Request.Transition.ITransitionInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Request.Transition.ITransition {
    [NullableContextAttribute("2")]
[RegisterAttribute("transition", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition$ViewAdapter;)Z", "GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler:Bumptech.Glide.Request.Transition.ITransitionInvoker, Xamarin.Android.Glide")]
public abstract virtual bool Transition(Object p0, ITransitionViewAdapter p1);
}
[RegisterAttribute("com/bumptech/glide/request/transition/TransitionFactory", "", "Bumptech.Glide.Request.Transition.ITransitionFactoryInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Bumptech.Glide.Request.Transition.ITransitionFactory {
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;", "GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler:Bumptech.Glide.Request.Transition.ITransitionFactoryInvoker, Xamarin.Android.Glide")]
public abstract virtual ITransition Build(DataSource p0, bool p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/TransitionFactory")]
internal class Bumptech.Glide.Request.Transition.ITransitionFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_DataSource_Z;
    private IntPtr id_build_Lcom_bumptech_glide_load_DataSource_Z;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ITransitionFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITransitionFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITransitionFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, bool p1);
    [NullableContextAttribute("2")]
public sealed virtual ITransition Build(DataSource p0, bool p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/Transition")]
internal class Bumptech.Glide.Request.Transition.ITransitionInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    private IntPtr id_transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ITransitionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITransitionInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITransition GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler();
    private static bool n_Transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual bool Transition(Object p0, ITransitionViewAdapter p1);
}
[NullableContextAttribute("2")]
[RegisterAttribute("com/bumptech/glide/request/transition/Transition$ViewAdapter", "", "Bumptech.Glide.Request.Transition.ITransitionViewAdapterInvoker")]
public interface Bumptech.Glide.Request.Transition.ITransitionViewAdapter {
    public Drawable CurrentDrawable { get; }
    public View View { get; }
    [RegisterAttribute("getCurrentDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentDrawableHandler:Bumptech.Glide.Request.Transition.ITransitionViewAdapterInvoker, Xamarin.Android.Glide")]
public abstract virtual Drawable get_CurrentDrawable();
    [RegisterAttribute("getView", "()Landroid/view/View;", "GetGetViewHandler:Bumptech.Glide.Request.Transition.ITransitionViewAdapterInvoker, Xamarin.Android.Glide")]
public abstract virtual View get_View();
    [RegisterAttribute("setDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetDrawable_Landroid_graphics_drawable_Drawable_Handler:Bumptech.Glide.Request.Transition.ITransitionViewAdapterInvoker, Xamarin.Android.Glide")]
public abstract virtual void SetDrawable(Drawable p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/Transition$ViewAdapter")]
internal class Bumptech.Glide.Request.Transition.ITransitionViewAdapterInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getCurrentDrawable;
    private IntPtr id_getCurrentDrawable;
    private static Delegate cb_getView;
    private IntPtr id_getView;
    private static Delegate cb_setDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setDrawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Drawable CurrentDrawable { get; }
    public View View { get; }
    public ITransitionViewAdapterInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITransitionViewAdapterInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITransitionViewAdapter GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetCurrentDrawableHandler();
    private static IntPtr n_GetCurrentDrawable(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Drawable get_CurrentDrawable();
    [NullableContextAttribute("1")]
private static Delegate GetGetViewHandler();
    private static IntPtr n_GetView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual View get_View();
    [NullableContextAttribute("1")]
private static Delegate GetSetDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetDrawable(Drawable p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/NoTransition")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Transition.NoTransition : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public static ITransitionFactory Factory { get; }
    protected NoTransition(IntPtr javaReference, JniHandleOwnership transfer);
    private static NoTransition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[RegisterAttribute("getFactory", "()Lcom/bumptech/glide/request/transition/TransitionFactory;", "")]
public static ITransitionFactory get_Factory();
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "()Lcom/bumptech/glide/request/transition/Transition;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ITransition Get();
    private static Delegate GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler();
    private static bool n_Transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_current, IntPtr native_adapter);
    [NullableContextAttribute("2")]
[RegisterAttribute("transition", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition$ViewAdapter;)Z", "GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler")]
public virtual bool Transition(Object current, ITransitionViewAdapter adapter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/ViewAnimationFactory")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Transition.ViewAnimationFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_DataSource_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewAnimationFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/view/animation/Animation;)V", "")]
public ViewAnimationFactory(Animation animation);
    [RegisterAttribute(".ctor", "(I)V", "")]
public ViewAnimationFactory(int animationId);
    private static ViewAnimationFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_dataSource, bool isFirstResource);
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;", "GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler")]
public virtual ITransition Build(DataSource dataSource, bool isFirstResource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/ViewPropertyAnimationFactory")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Transition.ViewPropertyAnimationFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_build_Lcom_bumptech_glide_load_DataSource_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewPropertyAnimationFactory(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)V", "")]
public ViewPropertyAnimationFactory(IAnimator animator);
    private static ViewPropertyAnimationFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler();
    private static IntPtr n_Build_Lcom_bumptech_glide_load_DataSource_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_dataSource, bool isFirstResource);
    [NullableContextAttribute("2")]
[RegisterAttribute("build", "(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;", "GetBuild_Lcom_bumptech_glide_load_DataSource_ZHandler")]
public virtual ITransition Build(DataSource dataSource, bool isFirstResource);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/ViewPropertyTransition")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Transition.ViewPropertyTransition : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewPropertyTransition(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)V", "")]
public ViewPropertyTransition(IAnimator animator);
    private static ViewPropertyTransition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler();
    private static bool n_Transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_current, IntPtr native_adapter);
    [NullableContextAttribute("2")]
[RegisterAttribute("transition", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition$ViewAdapter;)Z", "GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler")]
public virtual bool Transition(Object current, ITransitionViewAdapter adapter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/request/transition/ViewTransition")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Request.Transition.ViewTransition : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewTransition(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewTransition();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler();
    private static bool n_Transition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_current, IntPtr native_adapter);
    [NullableContextAttribute("2")]
[RegisterAttribute("transition", "(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition$ViewAdapter;)Z", "GetTransition_Ljava_lang_Object_Lcom_bumptech_glide_request_transition_Transition_ViewAdapter_Handler")]
public virtual bool Transition(Object current, ITransitionViewAdapter adapter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/RequestBuilder")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.RequestBuilder : BaseRequestOptions {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDownloadOnlyRequest;
    [NullableAttribute("2")]
private static Delegate cb_addListener_Lcom_bumptech_glide_request_RequestListener_;
    [NullableAttribute("2")]
private static Delegate cb_downloadOnly_II;
    [NullableAttribute("2")]
private static Delegate cb_downloadOnly_Lcom_bumptech_glide_request_target_Target_;
    [NullableAttribute("2")]
private static Delegate cb_error_Lcom_bumptech_glide_RequestBuilder_;
    [NullableAttribute("2")]
private static Delegate cb_error_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_into_Landroid_widget_ImageView_;
    [NullableAttribute("2")]
private static Delegate cb_into_II;
    [NullableAttribute("2")]
private static Delegate cb_into_Lcom_bumptech_glide_request_target_Target_;
    [NullableAttribute("2")]
private static Delegate cb_listener_Lcom_bumptech_glide_request_RequestListener_;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_graphics_Bitmap_;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_net_Uri_;
    [NullableAttribute("2")]
private static Delegate cb_load_arrayB;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_io_File_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_Integer_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_net_URL_;
    [NullableAttribute("2")]
private static Delegate cb_preload;
    [NullableAttribute("2")]
private static Delegate cb_preload_II;
    [NullableAttribute("2")]
private static Delegate cb_submit;
    [NullableAttribute("2")]
private static Delegate cb_submit_II;
    [NullableAttribute("2")]
private static Delegate cb_thumbnail_Lcom_bumptech_glide_RequestBuilder_;
    [NullableAttribute("2")]
private static Delegate cb_thumbnail_arrayLcom_bumptech_glide_RequestBuilder_;
    [NullableAttribute("2")]
private static Delegate cb_thumbnail_F;
    [NullableAttribute("2")]
private static Delegate cb_thumbnail_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_transition_Lcom_bumptech_glide_TransitionOptions_;
    [NullableAttribute("2")]
[RegisterAttribute("DOWNLOAD_ONLY_OPTIONS")]
protected static RequestOptions DownloadOnlyOptions { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected RequestBuilder DownloadOnlyRequest { get; }
    protected RequestBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/RequestManager;Ljava/lang/Class;Landroid/content/Context;)V", "")]
protected RequestBuilder(Glide glide, RequestManager requestManager, Class transcodeClass, Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/Class;Lcom/bumptech/glide/RequestBuilder;)V", "")]
protected RequestBuilder(Class transcodeClass, RequestBuilder other);
    private static RequestBuilder();
    public virtual RequestBuilder Apply(BaseRequestOptions o);
    public virtual RequestBuilder AutoClone();
    public virtual RequestBuilder CenterCrop();
    public virtual RequestBuilder CenterInside();
    public virtual RequestBuilder CircleCrop();
    public virtual RequestBuilder Clone();
    public virtual RequestBuilder Decode(Class resourceClass);
    public virtual RequestBuilder DisallowHardwareConfig();
    public virtual RequestBuilder Downsample(DownsampleStrategy strategy);
    public virtual RequestBuilder DontAnimate();
    public virtual RequestBuilder DontTransform();
    public virtual RequestBuilder EncodeFormat(CompressFormat format);
    public virtual RequestBuilder EncodeQuality(int quality);
    public virtual RequestBuilder Error(Drawable drawable);
    public virtual RequestBuilder Error(int resourceId);
    public virtual RequestBuilder Fallback(Drawable drawable);
    public virtual RequestBuilder Fallback(int resourceId);
    public virtual RequestBuilder FitCenter();
    public virtual RequestBuilder Format(DecodeFormat format);
    public virtual RequestBuilder Frame(long frameTimeMicros);
    public virtual RequestBuilder Lock();
    public virtual RequestBuilder OptionalCenterCrop();
    public virtual RequestBuilder OptionalCenterInside();
    public virtual RequestBuilder OptionalCircleCrop();
    public virtual RequestBuilder OptionalFitCenter();
    public virtual RequestBuilder OptionalTransform(Class resourceClass, ITransformation transformation);
    public virtual RequestBuilder OptionalTransform(ITransformation transformation);
    public virtual RequestBuilder Override(int width, int height);
    public virtual RequestBuilder Override(int size);
    public virtual RequestBuilder Placeholder(Drawable drawable);
    public virtual RequestBuilder Placeholder(int resourceId);
    public virtual RequestBuilder Set(Option option, Object value);
    public virtual RequestBuilder SetDiskCacheStrategy(DiskCacheStrategy strategy);
    public virtual RequestBuilder SetOnlyRetrieveFromCache(bool flag);
    public virtual RequestBuilder SetPriority(Priority priority);
    public virtual RequestBuilder SetSignature(IKey signature);
    public virtual RequestBuilder SetSizeMultiplier(float sizeMultiplier);
    public virtual RequestBuilder SetTheme(Theme theme);
    public virtual RequestBuilder SetUseAnimationPool(bool flag);
    public virtual RequestBuilder SetUseUnlimitedSourceGeneratorsPool(bool flag);
    public virtual RequestBuilder SkipMemoryCache(bool skip);
    public virtual RequestBuilder Timeout(int timeoutMs);
    public virtual RequestBuilder Transform(Class resourceClass, ITransformation transformation);
    public virtual RequestBuilder Transform(ITransformation[] transformations);
    public virtual RequestBuilder Transform(ITransformation transformation);
    [NullableContextAttribute("2")]
protected static RequestOptions get_DownloadOnlyOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDownloadOnlyRequestHandler();
    private static IntPtr n_GetDownloadOnlyRequest(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDownloadOnlyRequest", "()Lcom/bumptech/glide/RequestBuilder;", "GetGetDownloadOnlyRequestHandler")]
protected virtual RequestBuilder get_DownloadOnlyRequest();
    private static Delegate GetAddListener_Lcom_bumptech_glide_request_RequestListener_Handler();
    private static IntPtr n_AddListener_Lcom_bumptech_glide_request_RequestListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestListener);
    [RegisterAttribute("addListener", "(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;", "GetAddListener_Lcom_bumptech_glide_request_RequestListener_Handler")]
public virtual RequestBuilder AddListener(IRequestListener requestListener);
    [ObsoleteAttribute]
private static Delegate GetDownloadOnly_IIHandler();
    [ObsoleteAttribute]
private static IntPtr n_DownloadOnly_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("downloadOnly", "(II)Lcom/bumptech/glide/request/FutureTarget;", "GetDownloadOnly_IIHandler")]
public virtual IFutureTarget DownloadOnly(int width, int height);
    [ObsoleteAttribute]
private static Delegate GetDownloadOnly_Lcom_bumptech_glide_request_target_Target_Handler();
    [ObsoleteAttribute]
private static IntPtr n_DownloadOnly_Lcom_bumptech_glide_request_target_Target_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("downloadOnly", "(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;", "GetDownloadOnly_Lcom_bumptech_glide_request_target_Target_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object DownloadOnly(Object target);
    private static Delegate GetError_Lcom_bumptech_glide_RequestBuilder_Handler();
    private static IntPtr n_Error_Lcom_bumptech_glide_RequestBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_errorBuilder);
    [RegisterAttribute("error", "(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;", "GetError_Lcom_bumptech_glide_RequestBuilder_Handler")]
public virtual RequestBuilder Error(RequestBuilder errorBuilder);
    private static Delegate GetError_Ljava_lang_Object_Handler();
    private static IntPtr n_Error_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("error", "(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;", "GetError_Ljava_lang_Object_Handler")]
public virtual RequestBuilder Error(Object model);
    private static Delegate GetInto_Landroid_widget_ImageView_Handler();
    private static IntPtr n_Into_Landroid_widget_ImageView_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("into", "(Landroid/widget/ImageView;)Lcom/bumptech/glide/request/target/ViewTarget;", "GetInto_Landroid_widget_ImageView_Handler")]
public virtual ViewTarget Into(ImageView view);
    [ObsoleteAttribute]
private static Delegate GetInto_IIHandler();
    [ObsoleteAttribute]
private static IntPtr n_Into_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("into", "(II)Lcom/bumptech/glide/request/FutureTarget;", "GetInto_IIHandler")]
public virtual IFutureTarget Into(int width, int height);
    private static Delegate GetInto_Lcom_bumptech_glide_request_target_Target_Handler();
    private static IntPtr n_Into_Lcom_bumptech_glide_request_target_Target_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    [RegisterAttribute("into", "(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;", "GetInto_Lcom_bumptech_glide_request_target_Target_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Into(Object target);
    private static Delegate GetListener_Lcom_bumptech_glide_request_RequestListener_Handler();
    private static IntPtr n_Listener_Lcom_bumptech_glide_request_RequestListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestListener);
    [RegisterAttribute("listener", "(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;", "GetListener_Lcom_bumptech_glide_request_RequestListener_Handler")]
public virtual RequestBuilder Listener(IRequestListener requestListener);
    private static Delegate GetLoad_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_Load_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("load", "(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_graphics_Bitmap_Handler")]
public virtual RequestBuilder Load(Bitmap bitmap);
    private static Delegate GetLoad_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Load_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("load", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_graphics_drawable_Drawable_Handler")]
public virtual RequestBuilder Load(Drawable drawable);
    private static Delegate GetLoad_Landroid_net_Uri_Handler();
    private static IntPtr n_Load_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("load", "(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_net_Uri_Handler")]
public virtual RequestBuilder Load(Uri uri);
    private static Delegate GetLoad_arrayBHandler();
    private static IntPtr n_Load_arrayB(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("load", "([B)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_arrayBHandler")]
public virtual RequestBuilder Load(Byte[] model);
    private static Delegate GetLoad_Ljava_io_File_Handler();
    private static IntPtr n_Load_Ljava_io_File_(IntPtr jnienv, IntPtr native__this, IntPtr native_file);
    [RegisterAttribute("load", "(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_io_File_Handler")]
public virtual RequestBuilder Load(File file);
    private static Delegate GetLoad_Ljava_lang_Integer_Handler();
    private static IntPtr n_Load_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceId);
    [RegisterAttribute("load", "(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_Integer_Handler")]
public virtual RequestBuilder Load(Integer resourceId);
    private static Delegate GetLoad_Ljava_lang_Object_Handler();
    private static IntPtr n_Load_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("load", "(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_Object_Handler")]
public virtual RequestBuilder Load(Object model);
    private static Delegate GetLoad_Ljava_lang_String_Handler();
    private static IntPtr n_Load_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native__string);
    [RegisterAttribute("load", "(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_String_Handler")]
public virtual RequestBuilder Load(string string);
    [ObsoleteAttribute]
private static Delegate GetLoad_Ljava_net_URL_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Load_Ljava_net_URL_(IntPtr jnienv, IntPtr native__this, IntPtr native_url);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("load", "(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_net_URL_Handler")]
public virtual RequestBuilder Load(URL url);
    private static Delegate GetPreloadHandler();
    private static IntPtr n_Preload(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("preload", "()Lcom/bumptech/glide/request/target/Target;", "GetPreloadHandler")]
public virtual ITarget Preload();
    private static Delegate GetPreload_IIHandler();
    private static IntPtr n_Preload_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [RegisterAttribute("preload", "(II)Lcom/bumptech/glide/request/target/Target;", "GetPreload_IIHandler")]
public virtual ITarget Preload(int width, int height);
    private static Delegate GetSubmitHandler();
    private static IntPtr n_Submit(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("submit", "()Lcom/bumptech/glide/request/FutureTarget;", "GetSubmitHandler")]
public virtual IFutureTarget Submit();
    private static Delegate GetSubmit_IIHandler();
    private static IntPtr n_Submit_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [RegisterAttribute("submit", "(II)Lcom/bumptech/glide/request/FutureTarget;", "GetSubmit_IIHandler")]
public virtual IFutureTarget Submit(int width, int height);
    private static Delegate GetThumbnail_Lcom_bumptech_glide_RequestBuilder_Handler();
    private static IntPtr n_Thumbnail_Lcom_bumptech_glide_RequestBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_thumbnailRequest);
    [RegisterAttribute("thumbnail", "(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;", "GetThumbnail_Lcom_bumptech_glide_RequestBuilder_Handler")]
public virtual RequestBuilder Thumbnail(RequestBuilder thumbnailRequest);
    private static Delegate GetThumbnail_arrayLcom_bumptech_glide_RequestBuilder_Handler();
    private static IntPtr n_Thumbnail_arrayLcom_bumptech_glide_RequestBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_thumbnails);
    [RegisterAttribute("thumbnail", "([Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;", "GetThumbnail_arrayLcom_bumptech_glide_RequestBuilder_Handler")]
public virtual RequestBuilder Thumbnail(RequestBuilder[] thumbnails);
    [ObsoleteAttribute]
private static Delegate GetThumbnail_FHandler();
    [ObsoleteAttribute]
private static IntPtr n_Thumbnail_F(IntPtr jnienv, IntPtr native__this, float sizeMultiplier);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("thumbnail", "(F)Lcom/bumptech/glide/RequestBuilder;", "GetThumbnail_FHandler")]
public virtual RequestBuilder Thumbnail(float sizeMultiplier);
    private static Delegate GetThumbnail_Ljava_util_List_Handler();
    private static IntPtr n_Thumbnail_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_thumbnails);
    [RegisterAttribute("thumbnail", "(Ljava/util/List;)Lcom/bumptech/glide/RequestBuilder;", "GetThumbnail_Ljava_util_List_Handler")]
public virtual RequestBuilder Thumbnail(IList thumbnails);
    private static Delegate GetTransition_Lcom_bumptech_glide_TransitionOptions_Handler();
    private static IntPtr n_Transition_Lcom_bumptech_glide_TransitionOptions_(IntPtr jnienv, IntPtr native__this, IntPtr native_transitionOptions);
    [RegisterAttribute("transition", "(Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/RequestBuilder;", "GetTransition_Lcom_bumptech_glide_TransitionOptions_Handler")]
public virtual RequestBuilder Transition(TransitionOptions transitionOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/RequestManager")]
public class Bumptech.Glide.RequestManager : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isPaused;
    [NullableAttribute("2")]
private static Delegate cb_addDefaultRequestListener_Lcom_bumptech_glide_request_RequestListener_;
    [NullableAttribute("2")]
private static Delegate cb_applyDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_;
    [NullableAttribute("2")]
private static Delegate cb_as_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_asBitmap;
    [NullableAttribute("2")]
private static Delegate cb_asDrawable;
    [NullableAttribute("2")]
private static Delegate cb_asFile;
    [NullableAttribute("2")]
private static Delegate cb_asGif;
    [NullableAttribute("2")]
private static Delegate cb_clear_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_clear_Lcom_bumptech_glide_request_target_Target_;
    [NullableAttribute("2")]
private static Delegate cb_clearOnStop;
    [NullableAttribute("2")]
private static Delegate cb_download_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_downloadOnly;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_graphics_Bitmap_;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_load_Landroid_net_Uri_;
    [NullableAttribute("2")]
private static Delegate cb_load_arrayB;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_io_File_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_Integer_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_load_Ljava_net_URL_;
    [NullableAttribute("2")]
private static Delegate cb_onConfigurationChanged_Landroid_content_res_Configuration_;
    [NullableAttribute("2")]
private static Delegate cb_onDestroy;
    [NullableAttribute("2")]
private static Delegate cb_onLowMemory;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_onStop;
    [NullableAttribute("2")]
private static Delegate cb_onTrimMemory_I;
    [NullableAttribute("2")]
private static Delegate cb_pauseAllRequests;
    [NullableAttribute("2")]
private static Delegate cb_pauseAllRequestsRecursive;
    [NullableAttribute("2")]
private static Delegate cb_pauseRequests;
    [NullableAttribute("2")]
private static Delegate cb_pauseRequestsRecursive;
    [NullableAttribute("2")]
private static Delegate cb_resumeRequests;
    [NullableAttribute("2")]
private static Delegate cb_resumeRequestsRecursive;
    [NullableAttribute("2")]
private static Delegate cb_setDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_;
    [NullableAttribute("2")]
private static Delegate cb_setPauseAllRequestsOnTrimMemoryModerate_Z;
    [NullableAttribute("2")]
private static Delegate cb_setRequestOptions_Lcom_bumptech_glide_request_RequestOptions_;
    [NullableAttribute("2")]
[RegisterAttribute("context")]
protected Context Context { get; protected set; }
    [NullableAttribute("2")]
[RegisterAttribute("glide")]
protected Glide Glide { get; protected set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsPaused { get; }
    protected RequestManager(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/manager/Lifecycle;Lcom/bumptech/glide/manager/RequestManagerTreeNode;Landroid/content/Context;)V", "")]
public RequestManager(Glide glide, ILifecycle lifecycle, IRequestManagerTreeNode treeNode, Context context);
    private static RequestManager();
    [NullableContextAttribute("2")]
protected Context get_Context();
    [NullableContextAttribute("2")]
protected void set_Context(Context value);
    [NullableContextAttribute("2")]
protected Glide get_Glide();
    [NullableContextAttribute("2")]
protected void set_Glide(Glide value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsPausedHandler();
    private static bool n_IsPaused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isPaused", "()Z", "GetIsPausedHandler")]
public virtual bool get_IsPaused();
    private static Delegate GetAddDefaultRequestListener_Lcom_bumptech_glide_request_RequestListener_Handler();
    private static IntPtr n_AddDefaultRequestListener_Lcom_bumptech_glide_request_RequestListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestListener);
    [NullableContextAttribute("2")]
[RegisterAttribute("addDefaultRequestListener", "(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestManager;", "GetAddDefaultRequestListener_Lcom_bumptech_glide_request_RequestListener_Handler")]
public virtual RequestManager AddDefaultRequestListener(IRequestListener requestListener);
    private static Delegate GetApplyDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler();
    private static IntPtr n_ApplyDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestOptions);
    [RegisterAttribute("applyDefaultRequestOptions", "(Lcom/bumptech/glide/request/RequestOptions;)Lcom/bumptech/glide/RequestManager;", "GetApplyDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler")]
public virtual RequestManager ApplyDefaultRequestOptions(RequestOptions requestOptions);
    private static Delegate GetAs_Ljava_lang_Class_Handler();
    private static IntPtr n_As_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceClass);
    [RegisterAttribute("as", "(Ljava/lang/Class;)Lcom/bumptech/glide/RequestBuilder;", "GetAs_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual RequestBuilder As(Class resourceClass);
    private static Delegate GetAsBitmapHandler();
    private static IntPtr n_AsBitmap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBitmap", "()Lcom/bumptech/glide/RequestBuilder;", "GetAsBitmapHandler")]
public virtual RequestBuilder AsBitmap();
    private static Delegate GetAsDrawableHandler();
    private static IntPtr n_AsDrawable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asDrawable", "()Lcom/bumptech/glide/RequestBuilder;", "GetAsDrawableHandler")]
public virtual RequestBuilder AsDrawable();
    private static Delegate GetAsFileHandler();
    private static IntPtr n_AsFile(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asFile", "()Lcom/bumptech/glide/RequestBuilder;", "GetAsFileHandler")]
public virtual RequestBuilder AsFile();
    private static Delegate GetAsGifHandler();
    private static IntPtr n_AsGif(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asGif", "()Lcom/bumptech/glide/RequestBuilder;", "GetAsGifHandler")]
public virtual RequestBuilder AsGif();
    private static Delegate GetClear_Landroid_view_View_Handler();
    private static void n_Clear_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("clear", "(Landroid/view/View;)V", "GetClear_Landroid_view_View_Handler")]
public virtual void Clear(View view);
    private static Delegate GetClear_Lcom_bumptech_glide_request_target_Target_Handler();
    private static void n_Clear_Lcom_bumptech_glide_request_target_Target_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    [NullableContextAttribute("2")]
[RegisterAttribute("clear", "(Lcom/bumptech/glide/request/target/Target;)V", "GetClear_Lcom_bumptech_glide_request_target_Target_Handler")]
public virtual void Clear(ITarget target);
    private static Delegate GetClearOnStopHandler();
    private static IntPtr n_ClearOnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearOnStop", "()Lcom/bumptech/glide/RequestManager;", "GetClearOnStopHandler")]
public virtual RequestManager ClearOnStop();
    private static Delegate GetDownload_Ljava_lang_Object_Handler();
    private static IntPtr n_Download_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("download", "(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;", "GetDownload_Ljava_lang_Object_Handler")]
public virtual RequestBuilder Download(Object model);
    private static Delegate GetDownloadOnlyHandler();
    private static IntPtr n_DownloadOnly(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("downloadOnly", "()Lcom/bumptech/glide/RequestBuilder;", "GetDownloadOnlyHandler")]
public virtual RequestBuilder DownloadOnly();
    private static Delegate GetLoad_Landroid_graphics_Bitmap_Handler();
    private static IntPtr n_Load_Landroid_graphics_Bitmap_(IntPtr jnienv, IntPtr native__this, IntPtr native_bitmap);
    [RegisterAttribute("load", "(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_graphics_Bitmap_Handler")]
public virtual RequestBuilder Load(Bitmap bitmap);
    private static Delegate GetLoad_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Load_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("load", "(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_graphics_drawable_Drawable_Handler")]
public virtual RequestBuilder Load(Drawable drawable);
    private static Delegate GetLoad_Landroid_net_Uri_Handler();
    private static IntPtr n_Load_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("load", "(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Landroid_net_Uri_Handler")]
public virtual RequestBuilder Load(Uri uri);
    private static Delegate GetLoad_arrayBHandler();
    private static IntPtr n_Load_arrayB(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("load", "([B)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_arrayBHandler")]
public virtual RequestBuilder Load(Byte[] model);
    private static Delegate GetLoad_Ljava_io_File_Handler();
    private static IntPtr n_Load_Ljava_io_File_(IntPtr jnienv, IntPtr native__this, IntPtr native_file);
    [RegisterAttribute("load", "(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_io_File_Handler")]
public virtual RequestBuilder Load(File file);
    private static Delegate GetLoad_Ljava_lang_Integer_Handler();
    private static IntPtr n_Load_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native_resourceId);
    [RegisterAttribute("load", "(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_Integer_Handler")]
public virtual RequestBuilder Load(Integer resourceId);
    private static Delegate GetLoad_Ljava_lang_Object_Handler();
    private static IntPtr n_Load_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_model);
    [RegisterAttribute("load", "(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_Object_Handler")]
public virtual RequestBuilder Load(Object model);
    private static Delegate GetLoad_Ljava_lang_String_Handler();
    private static IntPtr n_Load_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native__string);
    [RegisterAttribute("load", "(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_lang_String_Handler")]
public virtual RequestBuilder Load(string string);
    [ObsoleteAttribute]
private static Delegate GetLoad_Ljava_net_URL_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Load_Ljava_net_URL_(IntPtr jnienv, IntPtr native__this, IntPtr native_url);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("load", "(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;", "GetLoad_Ljava_net_URL_Handler")]
public virtual RequestBuilder Load(URL url);
    private static Delegate GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler();
    private static void n_OnConfigurationChanged_Landroid_content_res_Configuration_(IntPtr jnienv, IntPtr native__this, IntPtr native_newConfig);
    [NullableContextAttribute("2")]
[RegisterAttribute("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]
public virtual void OnConfigurationChanged(Configuration newConfig);
    private static Delegate GetOnDestroyHandler();
    private static void n_OnDestroy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDestroy", "()V", "GetOnDestroyHandler")]
public virtual void OnDestroy();
    private static Delegate GetOnLowMemoryHandler();
    private static void n_OnLowMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onLowMemory", "()V", "GetOnLowMemoryHandler")]
public virtual void OnLowMemory();
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
    private static Delegate GetOnTrimMemory_IHandler();
    private static void n_OnTrimMemory_I(IntPtr jnienv, IntPtr native__this, int native_level);
    [RegisterAttribute("onTrimMemory", "(I)V", "GetOnTrimMemory_IHandler")]
public virtual void OnTrimMemory(TrimMemory level);
    private static Delegate GetPauseAllRequestsHandler();
    private static void n_PauseAllRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAllRequests", "()V", "GetPauseAllRequestsHandler")]
public virtual void PauseAllRequests();
    private static Delegate GetPauseAllRequestsRecursiveHandler();
    private static void n_PauseAllRequestsRecursive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseAllRequestsRecursive", "()V", "GetPauseAllRequestsRecursiveHandler")]
public virtual void PauseAllRequestsRecursive();
    private static Delegate GetPauseRequestsHandler();
    private static void n_PauseRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseRequests", "()V", "GetPauseRequestsHandler")]
public virtual void PauseRequests();
    private static Delegate GetPauseRequestsRecursiveHandler();
    private static void n_PauseRequestsRecursive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pauseRequestsRecursive", "()V", "GetPauseRequestsRecursiveHandler")]
public virtual void PauseRequestsRecursive();
    private static Delegate GetResumeRequestsHandler();
    private static void n_ResumeRequests(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeRequests", "()V", "GetResumeRequestsHandler")]
public virtual void ResumeRequests();
    private static Delegate GetResumeRequestsRecursiveHandler();
    private static void n_ResumeRequestsRecursive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resumeRequestsRecursive", "()V", "GetResumeRequestsRecursiveHandler")]
public virtual void ResumeRequestsRecursive();
    private static Delegate GetSetDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler();
    private static IntPtr n_SetDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_(IntPtr jnienv, IntPtr native__this, IntPtr native_requestOptions);
    [RegisterAttribute("setDefaultRequestOptions", "(Lcom/bumptech/glide/request/RequestOptions;)Lcom/bumptech/glide/RequestManager;", "GetSetDefaultRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler")]
public virtual RequestManager SetDefaultRequestOptions(RequestOptions requestOptions);
    private static Delegate GetSetPauseAllRequestsOnTrimMemoryModerate_ZHandler();
    private static void n_SetPauseAllRequestsOnTrimMemoryModerate_Z(IntPtr jnienv, IntPtr native__this, bool pauseAllOnTrim);
    [RegisterAttribute("setPauseAllRequestsOnTrimMemoryModerate", "(Z)V", "GetSetPauseAllRequestsOnTrimMemoryModerate_ZHandler")]
public virtual void SetPauseAllRequestsOnTrimMemoryModerate(bool pauseAllOnTrim);
    private static Delegate GetSetRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler();
    private static void n_SetRequestOptions_Lcom_bumptech_glide_request_RequestOptions_(IntPtr jnienv, IntPtr native__this, IntPtr native_toSet);
    [RegisterAttribute("setRequestOptions", "(Lcom/bumptech/glide/request/RequestOptions;)V", "GetSetRequestOptions_Lcom_bumptech_glide_request_RequestOptions_Handler")]
protected virtual void SetRequestOptions(RequestOptions toSet);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/signature/AndroidResourceSignature")]
public class Bumptech.Glide.Signature.AndroidResourceSignature : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AndroidResourceSignature(IntPtr javaReference, JniHandleOwnership transfer);
    private static AndroidResourceSignature();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("obtain", "(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;", "")]
public static IKey Obtain(Context context);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public sealed virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/signature/ApplicationVersionSignature")]
public class Bumptech.Glide.Signature.ApplicationVersionSignature : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ApplicationVersionSignature(IntPtr javaReference, JniHandleOwnership transfer);
    private static ApplicationVersionSignature();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("obtain", "(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;", "")]
public static IKey Obtain(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/signature/EmptySignature")]
public class Bumptech.Glide.Signature.EmptySignature : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EmptySignature(IntPtr javaReference, JniHandleOwnership transfer);
    private static EmptySignature();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("obtain", "()Lcom/bumptech/glide/signature/EmptySignature;", "")]
public static EmptySignature Obtain();
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public sealed virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/signature/MediaStoreSignature")]
public class Bumptech.Glide.Signature.MediaStoreSignature : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_updateDiskCacheKey_Ljava_security_MessageDigest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaStoreSignature(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;JI)V", "")]
public MediaStoreSignature(string mimeType, long dateModified, int orientation);
    private static MediaStoreSignature();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler();
    private static void n_UpdateDiskCacheKey_Ljava_security_MessageDigest_(IntPtr jnienv, IntPtr native__this, IntPtr native_messageDigest);
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "GetUpdateDiskCacheKey_Ljava_security_MessageDigest_Handler")]
public virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/signature/ObjectKey")]
public class Bumptech.Glide.Signature.ObjectKey : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ObjectKey(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public ObjectKey(Object object);
    private static ObjectKey();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("updateDiskCacheKey", "(Ljava/security/MessageDigest;)V", "")]
public sealed virtual void UpdateDiskCacheKey(MessageDigest messageDigest);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/TransitionOptions")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Bumptech.Glide.TransitionOptions : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TransitionOptions(IntPtr javaReference, JniHandleOwnership transfer);
    private static TransitionOptions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("clone", "()Lcom/bumptech/glide/TransitionOptions;", "")]
public Object Clone();
    [RegisterAttribute("dontTransition", "()Lcom/bumptech/glide/TransitionOptions;", "")]
public Object DontTransition();
    [RegisterAttribute("transition", "(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/TransitionOptions;", "")]
public Object Transition(ITransitionFactory transitionFactory);
    [RegisterAttribute("transition", "(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)Lcom/bumptech/glide/TransitionOptions;", "")]
public Object Transition(IAnimator animator);
    [RegisterAttribute("transition", "(I)Lcom/bumptech/glide/TransitionOptions;", "")]
public Object Transition(int viewAnimationId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/TransitionOptions")]
internal class Bumptech.Glide.TransitionOptionsInvoker : TransitionOptions {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public TransitionOptionsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static TransitionOptionsInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/ByteBufferUtil")]
public class Bumptech.Glide.Util.ByteBufferUtil : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ByteBufferUtil(IntPtr javaReference, JniHandleOwnership transfer);
    private static ByteBufferUtil();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fromFile", "(Ljava/io/File;)Ljava/nio/ByteBuffer;", "")]
public static ByteBuffer FromFile(File file);
    [RegisterAttribute("fromStream", "(Ljava/io/InputStream;)Ljava/nio/ByteBuffer;", "")]
public static ByteBuffer FromStream(Stream stream);
    [NullableContextAttribute("2")]
[RegisterAttribute("rewind", "(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;", "")]
public static ByteBuffer Rewind(ByteBuffer buffer);
    [RegisterAttribute("toBytes", "(Ljava/nio/ByteBuffer;)[B", "")]
public static Byte[] ToBytes(ByteBuffer byteBuffer);
    [RegisterAttribute("toFile", "(Ljava/nio/ByteBuffer;Ljava/io/File;)V", "")]
public static void ToFile(ByteBuffer buffer, File file);
    [RegisterAttribute("toStream", "(Ljava/nio/ByteBuffer;)Ljava/io/InputStream;", "")]
public static Stream ToStream(ByteBuffer buffer);
    [RegisterAttribute("toStream", "(Ljava/nio/ByteBuffer;Ljava/io/OutputStream;)V", "")]
public static void ToStream(ByteBuffer byteBuffer, Stream os);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/CachedHashCodeArrayMap")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Util.CachedHashCodeArrayMap : ArrayMap {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CachedHashCodeArrayMap(IntPtr javaReference, JniHandleOwnership transfer);
    private static CachedHashCodeArrayMap();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "")]
public virtual Object Put(Object key, Object value);
    [NullableContextAttribute("2")]
[RegisterAttribute("putAll", "(Landroidx/collection/SimpleArrayMap;)V", "")]
public virtual void PutAll(SimpleArrayMap simpleArrayMap);
    [NullableContextAttribute("2")]
[RegisterAttribute("setValueAt", "(ILjava/lang/Object;)Ljava/lang/Object;", "")]
public virtual Object SetValueAt(int index, Object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/ContentLengthInputStream")]
public class Bumptech.Glide.Util.ContentLengthInputStream : FilterInputStream {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ContentLengthInputStream(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContentLengthInputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("obtain", "(Ljava/io/InputStream;Ljava/lang/String;)Ljava/io/InputStream;", "")]
public static Stream Obtain(Stream other, string contentLengthHeader);
    [RegisterAttribute("obtain", "(Ljava/io/InputStream;J)Ljava/io/InputStream;", "")]
public static Stream Obtain(Stream other, long contentLength);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("com/bumptech/glide/util/ExceptionCatchingInputStream")]
public class Bumptech.Glide.Util.ExceptionCatchingInputStream : InputStream {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getException;
    [NullableAttribute("2")]
private static Delegate cb_read;
    [NullableAttribute("2")]
private static Delegate cb_release;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IOException Exception { get; }
    protected ExceptionCatchingInputStream(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExceptionCatchingInputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetExceptionHandler();
    private static IntPtr n_GetException(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getException", "()Ljava/io/IOException;", "GetGetExceptionHandler")]
public virtual IOException get_Exception();
    [RegisterAttribute("obtain", "(Ljava/io/InputStream;)Lcom/bumptech/glide/util/ExceptionCatchingInputStream;", "")]
public static ExceptionCatchingInputStream Obtain(Stream toWrap);
    private static Delegate GetReadHandler();
    private static int n_Read(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("read", "()I", "GetReadHandler")]
public virtual int Read();
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("release", "()V", "GetReleaseHandler")]
public virtual void Release();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/ExceptionPassthroughInputStream")]
public class Bumptech.Glide.Util.ExceptionPassthroughInputStream : InputStream {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IOException Exception { get; }
    internal ExceptionPassthroughInputStream(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExceptionPassthroughInputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getException", "()Ljava/io/IOException;", "")]
public IOException get_Exception();
    [RegisterAttribute("obtain", "(Ljava/io/InputStream;)Lcom/bumptech/glide/util/ExceptionPassthroughInputStream;", "")]
public static ExceptionPassthroughInputStream Obtain(Stream toWrap);
    [RegisterAttribute("read", "()I", "")]
public virtual int Read();
    [RegisterAttribute("release", "()V", "")]
public void Release();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/Executors")]
public class Bumptech.Glide.Util.Executors : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Executors(IntPtr javaReference, JniHandleOwnership transfer);
    private static Executors();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("directExecutor", "()Ljava/util/concurrent/Executor;", "")]
public static IExecutor DirectExecutor();
    [NullableContextAttribute("2")]
[RegisterAttribute("mainThreadExecutor", "()Ljava/util/concurrent/Executor;", "")]
public static IExecutor MainThreadExecutor();
    [NullableContextAttribute("2")]
[RegisterAttribute("shutdownAndAwaitTermination", "(Ljava/util/concurrent/ExecutorService;)V", "")]
public static void ShutdownAndAwaitTermination(IExecutorService pool);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/FixedPreloadSizeProvider")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Util.FixedPreloadSizeProvider : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getPreloadSize_Ljava_lang_Object_II;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FixedPreloadSizeProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(II)V", "")]
public FixedPreloadSizeProvider(int width, int height);
    private static FixedPreloadSizeProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetPreloadSize_Ljava_lang_Object_IIHandler();
    private static IntPtr n_GetPreloadSize_Ljava_lang_Object_II(IntPtr jnienv, IntPtr native__this, IntPtr native_item, int adapterPosition, int itemPosition);
    [RegisterAttribute("getPreloadSize", "(Ljava/lang/Object;II)[I", "GetGetPreloadSize_Ljava_lang_Object_IIHandler")]
public virtual Int32[] GetPreloadSize(Object item, int adapterPosition, int itemPosition);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/GlideSuppliers")]
public class Bumptech.Glide.Util.GlideSuppliers : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GlideSuppliers(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlideSuppliers();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("memorize", "(Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;)Lcom/bumptech/glide/util/GlideSuppliers$GlideSupplier;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IGlideSupplier Memorize(IGlideSupplier supplier);
}
[RegisterAttribute("com/bumptech/glide/util/Synthetic", "", "Bumptech.Glide.Util.ISyntheticInvoker")]
public interface Bumptech.Glide.Util.ISynthetic {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/Synthetic")]
internal class Bumptech.Glide.Util.ISyntheticInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISyntheticInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISyntheticInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISynthetic GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/LogTime")]
public class Bumptech.Glide.Util.LogTime : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LogTime(IntPtr javaReference, JniHandleOwnership transfer);
    private static LogTime();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getElapsedMillis", "(J)D", "")]
public static double GetElapsedMillis(long logTime);
    [RegisterAttribute("getLogTime", "()J", "")]
public static long GetLogTime();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/LruCache")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Util.LruCache : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getCount;
    [NullableAttribute("2")]
private static Delegate cb_getCurrentSize;
    [NullableAttribute("2")]
private static Delegate cb_getMaxSize;
    [NullableAttribute("2")]
private static Delegate cb_clearMemory;
    [NullableAttribute("2")]
private static Delegate cb_contains_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_get_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSize_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_onItemEvicted_Ljava_lang_Object_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_put_Ljava_lang_Object_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_remove_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_setSizeMultiplier_F;
    [NullableAttribute("2")]
private static Delegate cb_trimToSize_J;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected int Count { get; }
    public long CurrentSize { get; }
    public long MaxSize { get; }
    protected LruCache(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(J)V", "")]
public LruCache(long size);
    private static LruCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCountHandler();
    private static int n_GetCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCount", "()I", "GetGetCountHandler")]
protected virtual int get_Count();
    private static Delegate GetGetCurrentSizeHandler();
    private static long n_GetCurrentSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentSize", "()J", "GetGetCurrentSizeHandler")]
public virtual long get_CurrentSize();
    private static Delegate GetGetMaxSizeHandler();
    private static long n_GetMaxSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxSize", "()J", "GetGetMaxSizeHandler")]
public virtual long get_MaxSize();
    private static Delegate GetClearMemoryHandler();
    private static void n_ClearMemory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearMemory", "()V", "GetClearMemoryHandler")]
public virtual void ClearMemory();
    private static Delegate GetContains_Ljava_lang_Object_Handler();
    private static bool n_Contains_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("contains", "(Ljava/lang/Object;)Z", "GetContains_Ljava_lang_Object_Handler")]
public virtual bool Contains(Object key);
    private static Delegate GetGet_Ljava_lang_Object_Handler();
    private static IntPtr n_Get_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("get", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetGet_Ljava_lang_Object_Handler")]
public virtual Object Get(Object key);
    private static Delegate GetGetSize_Ljava_lang_Object_Handler();
    private static int n_GetSize_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_item);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSize", "(Ljava/lang/Object;)I", "GetGetSize_Ljava_lang_Object_Handler")]
protected virtual int GetSize(Object item);
    private static Delegate GetOnItemEvicted_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static void n_OnItemEvicted_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_item);
    [RegisterAttribute("onItemEvicted", "(Ljava/lang/Object;Ljava/lang/Object;)V", "GetOnItemEvicted_Ljava_lang_Object_Ljava_lang_Object_Handler")]
protected virtual void OnItemEvicted(Object key, Object item);
    private static Delegate GetPut_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static IntPtr n_Put_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_item);
    [NullableContextAttribute("2")]
[RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetPut_Ljava_lang_Object_Ljava_lang_Object_Handler")]
public virtual Object Put(Object key, Object item);
    private static Delegate GetRemove_Ljava_lang_Object_Handler();
    private static IntPtr n_Remove_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("remove", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetRemove_Ljava_lang_Object_Handler")]
public virtual Object Remove(Object key);
    private static Delegate GetSetSizeMultiplier_FHandler();
    private static void n_SetSizeMultiplier_F(IntPtr jnienv, IntPtr native__this, float multiplier);
    [RegisterAttribute("setSizeMultiplier", "(F)V", "GetSetSizeMultiplier_FHandler")]
public virtual void SetSizeMultiplier(float multiplier);
    private static Delegate GetTrimToSize_JHandler();
    private static void n_TrimToSize_J(IntPtr jnienv, IntPtr native__this, long size);
    [RegisterAttribute("trimToSize", "(J)V", "GetTrimToSize_JHandler")]
protected virtual void TrimToSize(long size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/MarkEnforcingInputStream")]
public class Bumptech.Glide.Util.MarkEnforcingInputStream : FilterInputStream {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MarkEnforcingInputStream(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/InputStream;)V", "")]
public MarkEnforcingInputStream(Stream in);
    private static MarkEnforcingInputStream();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/MultiClassKey")]
public class Bumptech.Glide.Util.MultiClassKey : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_set_Ljava_lang_Class_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_set_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MultiClassKey(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Class;Ljava/lang/Class;)V", "")]
public MultiClassKey(Class first, Class second);
    [RegisterAttribute(".ctor", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V", "")]
public MultiClassKey(Class first, Class second, Class third);
    private static MultiClassKey();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSet_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static void n_Set_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_first, IntPtr native_second);
    [RegisterAttribute("set", "(Ljava/lang/Class;Ljava/lang/Class;)V", "GetSet_Ljava_lang_Class_Ljava_lang_Class_Handler")]
public virtual void Set(Class first, Class second);
    private static Delegate GetSet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler();
    private static void n_Set_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_first, IntPtr native_second, IntPtr native_third);
    [RegisterAttribute("set", "(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V", "GetSet_Ljava_lang_Class_Ljava_lang_Class_Ljava_lang_Class_Handler")]
public virtual void Set(Class first, Class second, Class third);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/pool/FactoryPools")]
public class Bumptech.Glide.Util.Pool.FactoryPools : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FactoryPools(IntPtr javaReference, JniHandleOwnership transfer);
    private static FactoryPools();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("simple", "(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPool Simple(int size, IFactory factory);
    [RegisterAttribute("threadSafe", "(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPool ThreadSafe(int size, IFactory factory);
    [RegisterAttribute("threadSafe", "(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)Landroidx/core/util/Pools$Pool;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPool ThreadSafe(int size, IFactory factory, IResetter resetter);
    [RegisterAttribute("threadSafeList", "()Landroidx/core/util/Pools$Pool;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPool ThreadSafeList();
    [RegisterAttribute("threadSafeList", "(I)Landroidx/core/util/Pools$Pool;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPool ThreadSafeList(int size);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/pool/GlideTrace")]
public class Bumptech.Glide.Util.Pool.GlideTrace : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GlideTrace(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlideTrace();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("beginSection", "(Ljava/lang/String;)V", "")]
public static void BeginSection(string tag);
    [RegisterAttribute("beginSectionAsync", "(Ljava/lang/String;)I", "")]
public static int BeginSectionAsync(string tag);
    [RegisterAttribute("beginSectionFormat", "(Ljava/lang/String;Ljava/lang/Object;)V", "")]
public static void BeginSectionFormat(string format, Object arg1);
    [RegisterAttribute("beginSectionFormat", "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V", "")]
public static void BeginSectionFormat(string format, Object arg1, Object arg2);
    [RegisterAttribute("beginSectionFormat", "(Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V", "")]
public static void BeginSectionFormat(string format, Object arg1, Object arg2, Object arg3);
    [RegisterAttribute("endSection", "()V", "")]
public static void EndSection();
    [RegisterAttribute("endSectionAsync", "(Ljava/lang/String;I)V", "")]
public static void EndSectionAsync(string tag, int cookie);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/pool/StateVerifier")]
public abstract class Bumptech.Glide.Util.Pool.StateVerifier : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_throwIfRecycled;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected StateVerifier(IntPtr javaReference, JniHandleOwnership transfer);
    private static StateVerifier();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("newInstance", "()Lcom/bumptech/glide/util/pool/StateVerifier;", "")]
public static StateVerifier NewInstance();
    private static Delegate GetThrowIfRecycledHandler();
    private static void n_ThrowIfRecycled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("throwIfRecycled", "()V", "GetThrowIfRecycledHandler")]
public abstract virtual void ThrowIfRecycled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/pool/StateVerifier")]
internal class Bumptech.Glide.Util.Pool.StateVerifierInvoker : StateVerifier {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public StateVerifierInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static StateVerifierInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("throwIfRecycled", "()V", "GetThrowIfRecycledHandler")]
public virtual void ThrowIfRecycled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/Preconditions")]
public class Bumptech.Glide.Util.Preconditions : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Preconditions(IntPtr javaReference, JniHandleOwnership transfer);
    private static Preconditions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkArgument", "(Z)V", "")]
public static void CheckArgument(bool expression);
    [RegisterAttribute("checkArgument", "(ZLjava/lang/String;)V", "")]
public static void CheckArgument(bool expression, string message);
    [RegisterAttribute("checkNotEmpty", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public static string CheckNotEmpty(string string);
    [RegisterAttribute("checkNotEmpty", "(Ljava/util/Collection;)Ljava/util/Collection;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CheckNotEmpty(Object collection);
    [RegisterAttribute("checkNotNull", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CheckNotNull(Object arg);
    [RegisterAttribute("checkNotNull", "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CheckNotNull(Object arg, string message);
}
[AnnotationAttribute("com.bumptech.glide.util.Synthetic")]
public class Bumptech.Glide.Util.SyntheticAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/Util")]
public class Bumptech.Glide.Util.Util : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static bool IsOnBackgroundThread { get; }
    public static bool IsOnMainThread { get; }
    internal Util(IntPtr javaReference, JniHandleOwnership transfer);
    private static Util();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isOnBackgroundThread", "()Z", "")]
public static bool get_IsOnBackgroundThread();
    [RegisterAttribute("isOnMainThread", "()Z", "")]
public static bool get_IsOnMainThread();
    [RegisterAttribute("assertBackgroundThread", "()V", "")]
public static void AssertBackgroundThread();
    [RegisterAttribute("assertMainThread", "()V", "")]
public static void AssertMainThread();
    [NullableContextAttribute("2")]
[RegisterAttribute("bothBaseRequestOptionsNullEquivalentOrEquals", "(Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/BaseRequestOptions;)Z", "")]
public static bool BothBaseRequestOptionsNullEquivalentOrEquals(BaseRequestOptions a, BaseRequestOptions b);
    [NullableContextAttribute("2")]
[RegisterAttribute("bothModelsNullEquivalentOrEquals", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
public static bool BothModelsNullEquivalentOrEquals(Object a, Object b);
    [NullableContextAttribute("2")]
[RegisterAttribute("bothNullOrEqual", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
public static bool BothNullOrEqual(Object a, Object b);
    [RegisterAttribute("createQueue", "(I)Ljava/util/Queue;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IQueue CreateQueue(int size);
    [RegisterAttribute("getBitmapByteSize", "(Landroid/graphics/Bitmap;)I", "")]
public static int GetBitmapByteSize(Bitmap bitmap);
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmapByteSize", "(IILandroid/graphics/Bitmap$Config;)I", "")]
public static int GetBitmapByteSize(int width, int height, Config config);
    [NullableContextAttribute("2")]
[RegisterAttribute("getBytesPerPixel", "(Landroid/graphics/Bitmap$Config;)I", "")]
public static int GetBytesPerPixel(Config config);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getSize", "(Landroid/graphics/Bitmap;)I", "")]
public static int GetSize(Bitmap bitmap);
    [RegisterAttribute("getSnapshot", "(Ljava/util/Collection;)Ljava/util/List;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IList GetSnapshot(ICollection other);
    [RegisterAttribute("hashCode", "(Z)I", "")]
public static int HashCode(bool value);
    [RegisterAttribute("hashCode", "(ZI)I", "")]
public static int HashCode(bool value, int accumulator);
    [RegisterAttribute("hashCode", "(F)I", "")]
public static int HashCode(float value);
    [RegisterAttribute("hashCode", "(FI)I", "")]
public static int HashCode(float value, int accumulator);
    [RegisterAttribute("hashCode", "(I)I", "")]
public static int HashCode(int value);
    [RegisterAttribute("hashCode", "(II)I", "")]
public static int HashCode(int value, int accumulator);
    [NullableContextAttribute("2")]
[RegisterAttribute("hashCode", "(Ljava/lang/Object;I)I", "")]
public static int HashCode(Object object, int accumulator);
    [RegisterAttribute("isValidDimension", "(I)Z", "")]
public static bool IsValidDimension(int dimen);
    [RegisterAttribute("isValidDimensions", "(II)Z", "")]
public static bool IsValidDimensions(int width, int height);
    [NullableContextAttribute("2")]
[RegisterAttribute("postOnUiThread", "(Ljava/lang/Runnable;)V", "")]
public static void PostOnUiThread(IRunnable runnable);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeCallbacksOnUiThread", "(Ljava/lang/Runnable;)V", "")]
public static void RemoveCallbacksOnUiThread(IRunnable runnable);
    [RegisterAttribute("sha256BytesToHex", "([B)Ljava/lang/String;", "")]
public static string Sha256BytesToHex(Byte[] bytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("com/bumptech/glide/util/ViewPreloadSizeProvider")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Bumptech.Glide.Util.ViewPreloadSizeProvider : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getPreloadSize_Ljava_lang_Object_II;
    [NullableAttribute("2")]
private static Delegate cb_onSizeReady_II;
    [NullableAttribute("2")]
private static Delegate cb_setView_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewPreloadSizeProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public ViewPreloadSizeProvider(View view);
    private static ViewPreloadSizeProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetPreloadSize_Ljava_lang_Object_IIHandler();
    private static IntPtr n_GetPreloadSize_Ljava_lang_Object_II(IntPtr jnienv, IntPtr native__this, IntPtr native_item, int adapterPosition, int itemPosition);
    [RegisterAttribute("getPreloadSize", "(Ljava/lang/Object;II)[I", "GetGetPreloadSize_Ljava_lang_Object_IIHandler")]
public virtual Int32[] GetPreloadSize(Object item, int adapterPosition, int itemPosition);
    private static Delegate GetOnSizeReady_IIHandler();
    private static void n_OnSizeReady_II(IntPtr jnienv, IntPtr native__this, int width, int height);
    [RegisterAttribute("onSizeReady", "(II)V", "GetOnSizeReady_IIHandler")]
public virtual void OnSizeReady(int width, int height);
    private static Delegate GetSetView_Landroid_view_View_Handler();
    private static void n_SetView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("setView", "(Landroid/view/View;)V", "GetSetView_Landroid_view_View_Handler")]
public virtual void SetView(View view);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_data_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_data_mediastore_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_engine_bitmap_recycle_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_engine_cache_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_engine_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_engine_executor_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_engine_prefill_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_model_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_model_stream_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_bitmap_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_bytes_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_drawable_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_file_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_gif_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_load_resource_transcode_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_manager_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_module_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_provider_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_request_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_request_target_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_request_transition_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_signature_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_util_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_com_bumptech_glide_util_pool_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_com_bumptech_glide_package(string klass);
    private static Type lookup_com_bumptech_glide_load_data_package(string klass);
    private static Type lookup_com_bumptech_glide_load_data_mediastore_package(string klass);
    private static Type lookup_com_bumptech_glide_load_package(string klass);
    private static Type lookup_com_bumptech_glide_load_engine_bitmap_recycle_package(string klass);
    private static Type lookup_com_bumptech_glide_load_engine_cache_package(string klass);
    private static Type lookup_com_bumptech_glide_load_engine_package(string klass);
    private static Type lookup_com_bumptech_glide_load_engine_executor_package(string klass);
    private static Type lookup_com_bumptech_glide_load_engine_prefill_package(string klass);
    private static Type lookup_com_bumptech_glide_load_model_package(string klass);
    private static Type lookup_com_bumptech_glide_load_model_stream_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_bitmap_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_bytes_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_drawable_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_file_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_gif_package(string klass);
    private static Type lookup_com_bumptech_glide_load_resource_transcode_package(string klass);
    private static Type lookup_com_bumptech_glide_manager_package(string klass);
    private static Type lookup_com_bumptech_glide_module_package(string klass);
    private static Type lookup_com_bumptech_glide_provider_package(string klass);
    private static Type lookup_com_bumptech_glide_request_package(string klass);
    private static Type lookup_com_bumptech_glide_request_target_package(string klass);
    private static Type lookup_com_bumptech_glide_request_transition_package(string klass);
    private static Type lookup_com_bumptech_glide_signature_package(string klass);
    private static Type lookup_com_bumptech_glide_util_package(string klass);
    private static Type lookup_com_bumptech_glide_util_pool_package(string klass);
}
