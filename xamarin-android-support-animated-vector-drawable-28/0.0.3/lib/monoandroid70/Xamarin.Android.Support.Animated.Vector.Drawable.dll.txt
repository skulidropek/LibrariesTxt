internal static class __Consts : object {
    public static string AarPath;
}
internal static class __SupportConsts : object {
    public static string Url;
    public static string Sha1sum;
    public static string Version;
    public static string AarVersion;
    public static string PackageName;
}
[RegisterAttribute("android/support/graphics/drawable/animated/BuildConfig")]
public class Android.Support.Graphics.Drawable.Animated.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/graphics/drawable/AnimatedVectorDrawableCompat")]
public class Android.Support.Graphics.Drawable.AnimatedVectorDrawableCompat : VectorDrawableCommon {
    internal static IntPtr java_class_handle;
    private static Delegate cb_getAlpha;
    private static Delegate cb_setAlpha_I;
    private static IntPtr id_getAlpha;
    private static IntPtr id_setAlpha_I;
    private static Delegate cb_getChangingConfigurations;
    private static IntPtr id_getChangingConfigurations;
    private static Delegate cb_getIntrinsicHeight;
    private static IntPtr id_getIntrinsicHeight;
    private static Delegate cb_getIntrinsicWidth;
    private static IntPtr id_getIntrinsicWidth;
    private static Delegate cb_isRunning;
    private static IntPtr id_isRunning;
    private static Delegate cb_isStateful;
    private static IntPtr id_isStateful;
    private static Delegate cb_getOpacity;
    private static IntPtr id_getOpacity;
    private static Delegate cb_applyTheme_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_applyTheme_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_canApplyTheme;
    private static IntPtr id_canApplyTheme;
    private static IntPtr id_create_Landroid_content_Context_I;
    private static IntPtr id_createFromXmlInner_Landroid_content_Context_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static IntPtr id_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_getConstantState;
    private static IntPtr id_getConstantState;
    private static Delegate cb_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_;
    private static IntPtr id_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_;
    private static Delegate cb_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_mutate;
    private static IntPtr id_mutate;
    private static Delegate cb_onBoundsChange_Landroid_graphics_Rect_;
    private static IntPtr id_onBoundsChange_Landroid_graphics_Rect_;
    private static Delegate cb_onLevelChange_I;
    private static IntPtr id_onLevelChange_I;
    private static Delegate cb_onStateChange_arrayI;
    private static IntPtr id_onStateChange_arrayI;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static IntPtr id_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setTint_I;
    private static IntPtr id_setTint_I;
    private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr id_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static Delegate cb_setVisible_ZZ;
    private static IntPtr id_setVisible_ZZ;
    private static Delegate cb_start;
    private static IntPtr id_start;
    private static Delegate cb_stop;
    private static IntPtr id_stop;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, bool> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, bool, bool, bool> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache18;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Alpha { get; public set; }
    public ConfigChanges ChangingConfigurations { get; }
    public int IntrinsicHeight { get; }
    public int IntrinsicWidth { get; }
    public bool IsRunning { get; }
    public bool IsStateful { get; }
    public int Opacity { get; }
    protected AnimatedVectorDrawableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public virtual void SetAlpha(int alpha);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAlphaHandler();
    private static int n_GetAlpha(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("getAlpha", "()I", "GetGetAlphaHandler")]
public virtual int get_Alpha();
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void set_Alpha(int value);
    private static Delegate GetGetChangingConfigurationsHandler();
    private static int n_GetChangingConfigurations(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChangingConfigurations", "()I", "GetGetChangingConfigurationsHandler")]
public virtual ConfigChanges get_ChangingConfigurations();
    private static Delegate GetGetIntrinsicHeightHandler();
    private static int n_GetIntrinsicHeight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getIntrinsicHeight", "()I", "GetGetIntrinsicHeightHandler")]
public virtual int get_IntrinsicHeight();
    private static Delegate GetGetIntrinsicWidthHandler();
    private static int n_GetIntrinsicWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getIntrinsicWidth", "()I", "GetGetIntrinsicWidthHandler")]
public virtual int get_IntrinsicWidth();
    private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    private static Delegate GetIsStatefulHandler();
    private static bool n_IsStateful(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStateful", "()Z", "GetIsStatefulHandler")]
public virtual bool get_IsStateful();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetApplyTheme_Landroid_content_res_Resources_Theme_Handler();
    private static void n_ApplyTheme_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    [RegisterAttribute("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")]
public virtual void ApplyTheme(Theme t);
    private static Delegate GetCanApplyThemeHandler();
    private static bool n_CanApplyTheme(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canApplyTheme", "()Z", "GetCanApplyThemeHandler")]
public virtual bool CanApplyTheme();
    [RegisterAttribute("create", "(Landroid/content/Context;I)Landroid/support/graphics/drawable/AnimatedVectorDrawableCompat;", "")]
public static AnimatedVectorDrawableCompat Create(Context context, int resId);
    [RegisterAttribute("createFromXmlInner", "(Landroid/content/Context;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/support/graphics/drawable/AnimatedVectorDrawableCompat;", "")]
public static AnimatedVectorDrawableCompat CreateFromXmlInner(Context context, Resources r, XmlReader parser, IAttributeSet attrs, Theme theme);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetGetConstantStateHandler();
    private static IntPtr n_GetConstantState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getConstantState", "()Landroid/graphics/drawable/Drawable$ConstantState;", "GetGetConstantStateHandler")]
public virtual ConstantState GetConstantState();
    private static Delegate GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler();
    private static void n_Inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_(IntPtr jnienv, IntPtr native__this, IntPtr native_res, IntPtr native_parser, IntPtr native_attrs);
    [RegisterAttribute("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Handler")]
public virtual void Inflate(Resources res, XmlReader parser, IAttributeSet attrs);
    private static Delegate GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler();
    private static void n_Inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_res, IntPtr native_parser, IntPtr native_attrs, IntPtr native_theme);
    [RegisterAttribute("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")]
public virtual void Inflate(Resources res, XmlReader parser, IAttributeSet attrs, Theme theme);
    private static Delegate GetMutateHandler();
    private static IntPtr n_Mutate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("mutate", "()Landroid/graphics/drawable/Drawable;", "GetMutateHandler")]
public virtual Drawable Mutate();
    private static Delegate GetOnBoundsChange_Landroid_graphics_Rect_Handler();
    private static void n_OnBoundsChange_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")]
protected virtual void OnBoundsChange(Rect bounds);
    private static Delegate GetOnLevelChange_IHandler();
    private static bool n_OnLevelChange_I(IntPtr jnienv, IntPtr native__this, int level);
    [RegisterAttribute("onLevelChange", "(I)Z", "GetOnLevelChange_IHandler")]
protected virtual bool OnLevelChange(int level);
    private static Delegate GetOnStateChange_arrayIHandler();
    private static bool n_OnStateChange_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("onStateChange", "([I)Z", "GetOnStateChange_arrayIHandler")]
protected virtual bool OnStateChange(Int32[] state);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetTint_IHandler();
    private static void n_SetTint_I(IntPtr jnienv, IntPtr native__this, int tint);
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler")]
public virtual void SetTint(int tint);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTintList(ColorStateList tint);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void SetTintMode(Mode tintMode);
    private static Delegate GetSetVisible_ZZHandler();
    private static bool n_SetVisible_ZZ(IntPtr jnienv, IntPtr native__this, bool visible, bool restart);
    [RegisterAttribute("setVisible", "(ZZ)Z", "GetSetVisible_ZZHandler")]
public virtual bool SetVisible(bool visible, bool restart);
    private static Delegate GetStartHandler();
    private static void n_Start(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("start", "()V", "GetStartHandler")]
public virtual void Start();
    private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
