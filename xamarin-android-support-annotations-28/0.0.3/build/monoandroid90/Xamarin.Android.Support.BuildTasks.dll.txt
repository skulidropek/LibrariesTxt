[DataContractAttribute]
public class Xamarin.Android.Support.BuildTasks.Models.ProjectAssets : object {
    [CompilerGeneratedAttribute]
private long <Version>k__BackingField;
    [CompilerGeneratedAttribute]
private Dictionary`2<string, Dictionary`2<string, TargetReference>> <Targets>k__BackingField;
    [DataMemberAttribute]
public long Version { get; public set; }
    [DataMemberAttribute]
public Dictionary`2<string, Dictionary`2<string, TargetReference>> Targets { get; public set; }
    [CompilerGeneratedAttribute]
public long get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(long value);
    [CompilerGeneratedAttribute]
public Dictionary`2<string, Dictionary`2<string, TargetReference>> get_Targets();
    [CompilerGeneratedAttribute]
public void set_Targets(Dictionary`2<string, Dictionary`2<string, TargetReference>> value);
}
[DataContractAttribute]
public class Xamarin.Android.Support.BuildTasks.Models.TargetReference : object {
    [CompilerGeneratedAttribute]
private string <Type>k__BackingField;
    [DataMemberAttribute]
public string Type { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Type();
    [CompilerGeneratedAttribute]
public void set_Type(string value);
}
public static class Xamarin.Android.Support.BuildTasks.NugetPackages : object {
    private static Dictionary`2<int, Version> AndroidApiLevelsAndVersions;
    private static NugetPackages();
    public static int GetMajorVersion(string version);
    public static Version FrameworkVersionForSupportVersion(string supportVersion);
    public static void GatherPackagesConfigVersions(string packageIdPrefix, string projectPath, IEnumerable`1<string> excludedPackages, Dictionary`2<string, string> packageVersions);
    public static void GatherProjectJsonVersions(string packageIdPrefix, string projectExtensionsPath, IEnumerable`1<string> excludedPackages, Version monoandroidVersion, Dictionary`2<string, string> packageVersions, TaskLoggingHelper log);
    public static int GetDistinctVersions(string packageIdPrefix, IEnumerable`1<string> excludedPackages, Dictionary`2<string, string> packageVersions);
    public static string GetSupportVersion(string packageIdPrefix, Dictionary`2<string, string> packageVersions);
    public static string GetRecommendedSupportPackageVersion(int apiLevel);
}
public class Xamarin.Android.Support.BuildTasks.VerifyVersionsTask : Task {
    public static string PACKAGE_ID_PREFIX;
    public static String[] ExcludedPackages;
    [CompilerGeneratedAttribute]
private ITaskItem <ProjectPath>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem <ProjectExtensionsPath>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem <TargetFrameworkVersion>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem <TargetApiLevel>k__BackingField;
    [CompilerGeneratedAttribute]
private ITaskItem <AndroidSdkBuildToolsVersion>k__BackingField;
    private Dictionary`2<string, string> packageVersions;
    [RequiredAttribute]
public ITaskItem ProjectPath { get; public set; }
    [RequiredAttribute]
public ITaskItem ProjectExtensionsPath { get; public set; }
    [RequiredAttribute]
public ITaskItem TargetFrameworkVersion { get; public set; }
    [RequiredAttribute]
public ITaskItem TargetApiLevel { get; public set; }
    [RequiredAttribute]
public ITaskItem AndroidSdkBuildToolsVersion { get; public set; }
    private static VerifyVersionsTask();
    [CompilerGeneratedAttribute]
public ITaskItem get_ProjectPath();
    [CompilerGeneratedAttribute]
public void set_ProjectPath(ITaskItem value);
    [CompilerGeneratedAttribute]
public ITaskItem get_ProjectExtensionsPath();
    [CompilerGeneratedAttribute]
public void set_ProjectExtensionsPath(ITaskItem value);
    [CompilerGeneratedAttribute]
public ITaskItem get_TargetFrameworkVersion();
    [CompilerGeneratedAttribute]
public void set_TargetFrameworkVersion(ITaskItem value);
    [CompilerGeneratedAttribute]
public ITaskItem get_TargetApiLevel();
    [CompilerGeneratedAttribute]
public void set_TargetApiLevel(ITaskItem value);
    [CompilerGeneratedAttribute]
public ITaskItem get_AndroidSdkBuildToolsVersion();
    [CompilerGeneratedAttribute]
public void set_AndroidSdkBuildToolsVersion(ITaskItem value);
    public virtual bool Execute();
}
