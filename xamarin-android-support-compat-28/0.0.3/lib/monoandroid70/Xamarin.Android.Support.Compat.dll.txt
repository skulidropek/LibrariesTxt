internal static class __Consts : object {
    public static string AarPath;
}
internal static class __SupportConsts : object {
    public static string Url;
    public static string Sha1sum;
    public static string Version;
    public static string AarVersion;
    public static string PackageName;
}
[RegisterAttribute("android/support/compat/BuildConfig")]
public class Android.Support.Compat.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/accessibilityservice/AccessibilityServiceInfoCompat")]
public class Android.Support.V4.Accessibilityservice.AccessibilityServiceInfoCompat : Object {
    [RegisterAttribute("CAPABILITY_CAN_FILTER_KEY_EVENTS")]
public static int CapabilityCanFilterKeyEvents;
    [RegisterAttribute("CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY")]
public static int CapabilityCanRequestEnhancedWebAccessibility;
    [RegisterAttribute("CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION")]
public static int CapabilityCanRequestTouchExploration;
    [RegisterAttribute("CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT")]
public static int CapabilityCanRetrieveWindowContent;
    [RegisterAttribute("DEFAULT")]
public static int Default;
    [RegisterAttribute("FEEDBACK_ALL_MASK")]
public static int FeedbackAllMask;
    [RegisterAttribute("FEEDBACK_BRAILLE")]
public static int FeedbackBraille;
    [RegisterAttribute("FLAG_INCLUDE_NOT_IMPORTANT_VIEWS")]
public static int FlagIncludeNotImportantViews;
    [RegisterAttribute("FLAG_REPORT_VIEW_IDS")]
public static int FlagReportViewIds;
    [RegisterAttribute("FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY")]
public static int FlagRequestEnhancedWebAccessibility;
    [RegisterAttribute("FLAG_REQUEST_FILTER_KEY_EVENTS")]
public static int FlagRequestFilterKeyEvents;
    [RegisterAttribute("FLAG_REQUEST_TOUCH_EXPLORATION_MODE")]
public static int FlagRequestTouchExplorationMode;
    internal static IntPtr java_class_handle;
    private static IntPtr id_capabilityToString_I;
    private static IntPtr id_feedbackTypeToString_I;
    private static IntPtr id_flagToString_I;
    private static IntPtr id_getCanRetrieveWindowContent_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_getCapabilities_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_getDescription_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_getId_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_getResolveInfo_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_getSettingsActivityName_Landroid_accessibilityservice_AccessibilityServiceInfo_;
    private static IntPtr id_loadDescription_Landroid_accessibilityservice_AccessibilityServiceInfo_Landroid_content_pm_PackageManager_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AccessibilityServiceInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("capabilityToString", "(I)Ljava/lang/String;", "")]
public static string CapabilityToString(int capability);
    [RegisterAttribute("feedbackTypeToString", "(I)Ljava/lang/String;", "")]
public static string FeedbackTypeToString(int feedbackType);
    [RegisterAttribute("flagToString", "(I)Ljava/lang/String;", "")]
public static string FlagToString(int flag);
    [RegisterAttribute("getCanRetrieveWindowContent", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)Z", "")]
public static bool GetCanRetrieveWindowContent(AccessibilityServiceInfo info);
    [RegisterAttribute("getCapabilities", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)I", "")]
public static int GetCapabilities(AccessibilityServiceInfo info);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getDescription", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)Ljava/lang/String;", "")]
public static string GetDescription(AccessibilityServiceInfo info);
    [RegisterAttribute("getId", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)Ljava/lang/String;", "")]
public static string GetId(AccessibilityServiceInfo info);
    [RegisterAttribute("getResolveInfo", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)Landroid/content/pm/ResolveInfo;", "")]
public static ResolveInfo GetResolveInfo(AccessibilityServiceInfo info);
    [RegisterAttribute("getSettingsActivityName", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)Ljava/lang/String;", "")]
public static string GetSettingsActivityName(AccessibilityServiceInfo info);
    [RegisterAttribute("loadDescription", "(Landroid/accessibilityservice/AccessibilityServiceInfo;Landroid/content/pm/PackageManager;)Ljava/lang/String;", "")]
public static string LoadDescription(AccessibilityServiceInfo info, PackageManager packageManager);
}
[RegisterAttribute("android/support/v4/animation/AnimatorCompatHelper")]
public class Android.Support.V4.Animation.AnimatorCompatHelper : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_clearInterpolator_Landroid_view_View_;
    private static IntPtr id_emptyValueAnimator;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AnimatorCompatHelper(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("clearInterpolator", "(Landroid/view/View;)V", "")]
public static void ClearInterpolator(View view);
    [RegisterAttribute("emptyValueAnimator", "()Landroid/support/v4/animation/ValueAnimatorCompat;", "")]
public static IValueAnimatorCompat EmptyValueAnimator();
}
[RegisterAttribute("android/support/v4/animation/AnimatorListenerCompat", "", "Android.Support.V4.Animation.IAnimatorListenerCompatInvoker")]
public interface Android.Support.V4.Animation.IAnimatorListenerCompat {
    [RegisterAttribute("onAnimationCancel", "(Landroid/support/v4/animation/ValueAnimatorCompat;)V", "GetOnAnimationCancel_Landroid_support_v4_animation_ValueAnimatorCompat_Handler:Android.Support.V4.Animation.IAnimatorListenerCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationCancel(IValueAnimatorCompat p0);
    [RegisterAttribute("onAnimationEnd", "(Landroid/support/v4/animation/ValueAnimatorCompat;)V", "GetOnAnimationEnd_Landroid_support_v4_animation_ValueAnimatorCompat_Handler:Android.Support.V4.Animation.IAnimatorListenerCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationEnd(IValueAnimatorCompat p0);
    [RegisterAttribute("onAnimationRepeat", "(Landroid/support/v4/animation/ValueAnimatorCompat;)V", "GetOnAnimationRepeat_Landroid_support_v4_animation_ValueAnimatorCompat_Handler:Android.Support.V4.Animation.IAnimatorListenerCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationRepeat(IValueAnimatorCompat p0);
    [RegisterAttribute("onAnimationStart", "(Landroid/support/v4/animation/ValueAnimatorCompat;)V", "GetOnAnimationStart_Landroid_support_v4_animation_ValueAnimatorCompat_Handler:Android.Support.V4.Animation.IAnimatorListenerCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationStart(IValueAnimatorCompat p0);
}
[RegisterAttribute("android/support/v4/animation/AnimatorListenerCompat")]
internal class Android.Support.V4.Animation.IAnimatorListenerCompatInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onAnimationCancel_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private IntPtr id_onAnimationCancel_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private static Delegate cb_onAnimationEnd_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private IntPtr id_onAnimationEnd_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private static Delegate cb_onAnimationRepeat_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private IntPtr id_onAnimationRepeat_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private static Delegate cb_onAnimationStart_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private IntPtr id_onAnimationStart_Landroid_support_v4_animation_ValueAnimatorCompat_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IAnimatorListenerCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAnimatorListenerCompatInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAnimatorListenerCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationCancel_Landroid_support_v4_animation_ValueAnimatorCompat_Handler();
    private static void n_OnAnimationCancel_Landroid_support_v4_animation_ValueAnimatorCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnAnimationCancel(IValueAnimatorCompat p0);
    private static Delegate GetOnAnimationEnd_Landroid_support_v4_animation_ValueAnimatorCompat_Handler();
    private static void n_OnAnimationEnd_Landroid_support_v4_animation_ValueAnimatorCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnAnimationEnd(IValueAnimatorCompat p0);
    private static Delegate GetOnAnimationRepeat_Landroid_support_v4_animation_ValueAnimatorCompat_Handler();
    private static void n_OnAnimationRepeat_Landroid_support_v4_animation_ValueAnimatorCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnAnimationRepeat(IValueAnimatorCompat p0);
    private static Delegate GetOnAnimationStart_Landroid_support_v4_animation_ValueAnimatorCompat_Handler();
    private static void n_OnAnimationStart_Landroid_support_v4_animation_ValueAnimatorCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnAnimationStart(IValueAnimatorCompat p0);
}
[RegisterAttribute("android/support/v4/animation/AnimatorUpdateListenerCompat", "", "Android.Support.V4.Animation.IAnimatorUpdateListenerCompatInvoker")]
public interface Android.Support.V4.Animation.IAnimatorUpdateListenerCompat {
    [RegisterAttribute("onAnimationUpdate", "(Landroid/support/v4/animation/ValueAnimatorCompat;)V", "GetOnAnimationUpdate_Landroid_support_v4_animation_ValueAnimatorCompat_Handler:Android.Support.V4.Animation.IAnimatorUpdateListenerCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationUpdate(IValueAnimatorCompat p0);
}
[RegisterAttribute("android/support/v4/animation/AnimatorUpdateListenerCompat")]
internal class Android.Support.V4.Animation.IAnimatorUpdateListenerCompatInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onAnimationUpdate_Landroid_support_v4_animation_ValueAnimatorCompat_;
    private IntPtr id_onAnimationUpdate_Landroid_support_v4_animation_ValueAnimatorCompat_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IAnimatorUpdateListenerCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAnimatorUpdateListenerCompatInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IAnimatorUpdateListenerCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationUpdate_Landroid_support_v4_animation_ValueAnimatorCompat_Handler();
    private static void n_OnAnimationUpdate_Landroid_support_v4_animation_ValueAnimatorCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnAnimationUpdate(IValueAnimatorCompat p0);
}
[RegisterAttribute("android/support/v4/animation/ValueAnimatorCompat", "", "Android.Support.V4.Animation.IValueAnimatorCompatInvoker")]
public interface Android.Support.V4.Animation.IValueAnimatorCompat {
    public float AnimatedFraction { get; }
    [RegisterAttribute("getAnimatedFraction", "()F", "GetGetAnimatedFractionHandler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual float get_AnimatedFraction();
    [RegisterAttribute("addListener", "(Landroid/support/v4/animation/AnimatorListenerCompat;)V", "GetAddListener_Landroid_support_v4_animation_AnimatorListenerCompat_Handler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void AddListener(IAnimatorListenerCompat p0);
    [RegisterAttribute("addUpdateListener", "(Landroid/support/v4/animation/AnimatorUpdateListenerCompat;)V", "GetAddUpdateListener_Landroid_support_v4_animation_AnimatorUpdateListenerCompat_Handler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void AddUpdateListener(IAnimatorUpdateListenerCompat p0);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void Cancel();
    [RegisterAttribute("setDuration", "(J)V", "GetSetDuration_JHandler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetDuration(long p0);
    [RegisterAttribute("setTarget", "(Landroid/view/View;)V", "GetSetTarget_Landroid_view_View_Handler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetTarget(View p0);
    [RegisterAttribute("start", "()V", "GetStartHandler:Android.Support.V4.Animation.IValueAnimatorCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void Start();
}
[RegisterAttribute("android/support/v4/animation/ValueAnimatorCompat")]
internal class Android.Support.V4.Animation.IValueAnimatorCompatInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getAnimatedFraction;
    private IntPtr id_getAnimatedFraction;
    private static Delegate cb_addListener_Landroid_support_v4_animation_AnimatorListenerCompat_;
    private IntPtr id_addListener_Landroid_support_v4_animation_AnimatorListenerCompat_;
    private static Delegate cb_addUpdateListener_Landroid_support_v4_animation_AnimatorUpdateListenerCompat_;
    private IntPtr id_addUpdateListener_Landroid_support_v4_animation_AnimatorUpdateListenerCompat_;
    private static Delegate cb_cancel;
    private IntPtr id_cancel;
    private static Delegate cb_setDuration_J;
    private IntPtr id_setDuration_J;
    private static Delegate cb_setTarget_Landroid_view_View_;
    private IntPtr id_setTarget_Landroid_view_View_;
    private static Delegate cb_start;
    private IntPtr id_start;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, float> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, long> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache6;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float AnimatedFraction { get; }
    public IValueAnimatorCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IValueAnimatorCompatInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IValueAnimatorCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetAnimatedFractionHandler();
    private static float n_GetAnimatedFraction(IntPtr jnienv, IntPtr native__this);
    public sealed virtual float get_AnimatedFraction();
    private static Delegate GetAddListener_Landroid_support_v4_animation_AnimatorListenerCompat_Handler();
    private static void n_AddListener_Landroid_support_v4_animation_AnimatorListenerCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddListener(IAnimatorListenerCompat p0);
    private static Delegate GetAddUpdateListener_Landroid_support_v4_animation_AnimatorUpdateListenerCompat_Handler();
    private static void n_AddUpdateListener_Landroid_support_v4_animation_AnimatorUpdateListenerCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddUpdateListener(IAnimatorUpdateListenerCompat p0);
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Cancel();
    private static Delegate GetSetDuration_JHandler();
    private static void n_SetDuration_J(IntPtr jnienv, IntPtr native__this, long p0);
    public sealed virtual void SetDuration(long p0);
    private static Delegate GetSetTarget_Landroid_view_View_Handler();
    private static void n_SetTarget_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetTarget(View p0);
    private static Delegate GetStartHandler();
    private static void n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Start();
}
[RegisterAttribute("android/support/v4/app/ActivityCompat")]
public class Android.Support.V4.App.ActivityCompat : ContextCompat {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_finishAffinity_Landroid_app_Activity_;
    private static IntPtr id_finishAfterTransition_Landroid_app_Activity_;
    private static Delegate cb_getReferrer_Landroid_app_Activity_;
    private static IntPtr id_getReferrer_Landroid_app_Activity_;
    private static IntPtr id_invalidateOptionsMenu_Landroid_app_Activity_;
    private static IntPtr id_postponeEnterTransition_Landroid_app_Activity_;
    private static IntPtr id_requestPermissions_Landroid_app_Activity_arrayLjava_lang_String_I;
    private static IntPtr id_setEnterSharedElementCallback_Landroid_app_Activity_Landroid_support_v4_app_SharedElementCallback_;
    private static IntPtr id_setExitSharedElementCallback_Landroid_app_Activity_Landroid_support_v4_app_SharedElementCallback_;
    private static IntPtr id_shouldShowRequestPermissionRationale_Landroid_app_Activity_Ljava_lang_String_;
    private static IntPtr id_startActivity_Landroid_app_Activity_Landroid_content_Intent_Landroid_os_Bundle_;
    private static IntPtr id_startActivityForResult_Landroid_app_Activity_Landroid_content_Intent_ILandroid_os_Bundle_;
    private static IntPtr id_startIntentSenderForResult_Landroid_app_Activity_Landroid_content_IntentSender_ILandroid_content_Intent_IIILandroid_os_Bundle_;
    private static IntPtr id_startPostponedEnterTransition_Landroid_app_Activity_;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ActivityCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("finishAffinity", "(Landroid/app/Activity;)V", "")]
public static void FinishAffinity(Activity activity);
    [RegisterAttribute("finishAfterTransition", "(Landroid/app/Activity;)V", "")]
public static void FinishAfterTransition(Activity activity);
    private static Delegate GetGetReferrer_Landroid_app_Activity_Handler();
    private static IntPtr n_GetReferrer_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getReferrer", "(Landroid/app/Activity;)Landroid/net/Uri;", "GetGetReferrer_Landroid_app_Activity_Handler")]
public virtual Uri GetReferrer(Activity activity);
    [RegisterAttribute("invalidateOptionsMenu", "(Landroid/app/Activity;)Z", "")]
public static bool InvalidateOptionsMenu(Activity activity);
    [RegisterAttribute("postponeEnterTransition", "(Landroid/app/Activity;)V", "")]
public static void PostponeEnterTransition(Activity activity);
    [RegisterAttribute("requestPermissions", "(Landroid/app/Activity;[Ljava/lang/String;I)V", "")]
public static void RequestPermissions(Activity activity, String[] permissions, int requestCode);
    [RegisterAttribute("setEnterSharedElementCallback", "(Landroid/app/Activity;Landroid/support/v4/app/SharedElementCallback;)V", "")]
public static void SetEnterSharedElementCallback(Activity activity, SharedElementCallback callback);
    [RegisterAttribute("setExitSharedElementCallback", "(Landroid/app/Activity;Landroid/support/v4/app/SharedElementCallback;)V", "")]
public static void SetExitSharedElementCallback(Activity activity, SharedElementCallback callback);
    [RegisterAttribute("shouldShowRequestPermissionRationale", "(Landroid/app/Activity;Ljava/lang/String;)Z", "")]
public static bool ShouldShowRequestPermissionRationale(Activity activity, string permission);
    [RegisterAttribute("startActivity", "(Landroid/app/Activity;Landroid/content/Intent;Landroid/os/Bundle;)V", "")]
public static void StartActivity(Activity activity, Intent intent, Bundle options);
    [RegisterAttribute("startActivityForResult", "(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V", "")]
public static void StartActivityForResult(Activity activity, Intent intent, int requestCode, Bundle options);
    [RegisterAttribute("startIntentSenderForResult", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "")]
public static void StartIntentSenderForResult(Activity activity, IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options);
    [RegisterAttribute("startPostponedEnterTransition", "(Landroid/app/Activity;)V", "")]
public static void StartPostponedEnterTransition(Activity activity);
}
[RegisterAttribute("android/support/v4/app/ActivityCompatApi23")]
public class Android.Support.V4.App.ActivityCompatApi23 : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_requestPermissions_Landroid_app_Activity_arrayLjava_lang_String_I;
    private static IntPtr id_shouldShowRequestPermissionRationale_Landroid_app_Activity_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ActivityCompatApi23(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("requestPermissions", "(Landroid/app/Activity;[Ljava/lang/String;I)V", "")]
public static void RequestPermissions(Activity activity, String[] permissions, int requestCode);
    [RegisterAttribute("shouldShowRequestPermissionRationale", "(Landroid/app/Activity;Ljava/lang/String;)Z", "")]
public static bool ShouldShowRequestPermissionRationale(Activity activity, string permission);
}
[RegisterAttribute("android/support/v4/app/ActivityManagerCompat")]
public class Android.Support.V4.App.ActivityManagerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_isLowRamDevice_Landroid_app_ActivityManager_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ActivityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isLowRamDevice", "(Landroid/app/ActivityManager;)Z", "")]
public static bool IsLowRamDevice(ActivityManager am);
}
[RegisterAttribute("android/support/v4/app/ActivityOptionsCompat")]
public class Android.Support.V4.App.ActivityOptionsCompat : Object {
    [RegisterAttribute("EXTRA_USAGE_TIME_REPORT")]
public static string ExtraUsageTimeReport;
    [RegisterAttribute("EXTRA_USAGE_TIME_REPORT_PACKAGES")]
public static string ExtraUsageTimeReportPackages;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getLaunchBounds;
    private static IntPtr id_getLaunchBounds;
    private static IntPtr id_makeBasic;
    private static IntPtr id_makeClipRevealAnimation_Landroid_view_View_IIII;
    private static IntPtr id_makeCustomAnimation_Landroid_content_Context_II;
    private static IntPtr id_makeScaleUpAnimation_Landroid_view_View_IIII;
    private static IntPtr id_makeSceneTransitionAnimation_Landroid_app_Activity_arrayLandroid_support_v4_util_Pair_;
    private static IntPtr id_makeSceneTransitionAnimation_Landroid_app_Activity_Landroid_view_View_Ljava_lang_String_;
    private static IntPtr id_makeTaskLaunchBehind;
    private static IntPtr id_makeThumbnailScaleUpAnimation_Landroid_view_View_Landroid_graphics_Bitmap_II;
    private static Delegate cb_requestUsageTimeReport_Landroid_app_PendingIntent_;
    private static IntPtr id_requestUsageTimeReport_Landroid_app_PendingIntent_;
    private static Delegate cb_setLaunchBounds_Landroid_graphics_Rect_;
    private static IntPtr id_setLaunchBounds_Landroid_graphics_Rect_;
    private static Delegate cb_toBundle;
    private static IntPtr id_toBundle;
    private static Delegate cb_update_Landroid_support_v4_app_ActivityOptionsCompat_;
    private static IntPtr id_update_Landroid_support_v4_app_ActivityOptionsCompat_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Rect LaunchBounds { get; }
    protected ActivityOptionsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLaunchBoundsHandler();
    private static IntPtr n_GetLaunchBounds(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLaunchBounds", "()Landroid/graphics/Rect;", "GetGetLaunchBoundsHandler")]
public virtual Rect get_LaunchBounds();
    [RegisterAttribute("makeBasic", "()Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeBasic();
    [RegisterAttribute("makeClipRevealAnimation", "(Landroid/view/View;IIII)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeClipRevealAnimation(View source, int startX, int startY, int width, int height);
    [RegisterAttribute("makeCustomAnimation", "(Landroid/content/Context;II)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeCustomAnimation(Context context, int enterResId, int exitResId);
    [RegisterAttribute("makeScaleUpAnimation", "(Landroid/view/View;IIII)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeScaleUpAnimation(View source, int startX, int startY, int startWidth, int startHeight);
    [RegisterAttribute("makeSceneTransitionAnimation", "(Landroid/app/Activity;[Landroid/support/v4/util/Pair;)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeSceneTransitionAnimation(Activity activity, Pair[] sharedElements);
    [RegisterAttribute("makeSceneTransitionAnimation", "(Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeSceneTransitionAnimation(Activity activity, View sharedElement, string sharedElementName);
    [RegisterAttribute("makeTaskLaunchBehind", "()Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeTaskLaunchBehind();
    [RegisterAttribute("makeThumbnailScaleUpAnimation", "(Landroid/view/View;Landroid/graphics/Bitmap;II)Landroid/support/v4/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeThumbnailScaleUpAnimation(View source, Bitmap thumbnail, int startX, int startY);
    private static Delegate GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler();
    private static void n_RequestUsageTimeReport_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_receiver);
    [RegisterAttribute("requestUsageTimeReport", "(Landroid/app/PendingIntent;)V", "GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler")]
public virtual void RequestUsageTimeReport(PendingIntent receiver);
    private static Delegate GetSetLaunchBounds_Landroid_graphics_Rect_Handler();
    private static IntPtr n_SetLaunchBounds_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_screenSpacePixelRect);
    [RegisterAttribute("setLaunchBounds", "(Landroid/graphics/Rect;)Landroid/support/v4/app/ActivityOptionsCompat;", "GetSetLaunchBounds_Landroid_graphics_Rect_Handler")]
public virtual ActivityOptionsCompat SetLaunchBounds(Rect screenSpacePixelRect);
    private static Delegate GetToBundleHandler();
    private static IntPtr n_ToBundle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")]
public virtual Bundle ToBundle();
    private static Delegate GetUpdate_Landroid_support_v4_app_ActivityOptionsCompat_Handler();
    private static void n_Update_Landroid_support_v4_app_ActivityOptionsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_otherOptions);
    [RegisterAttribute("update", "(Landroid/support/v4/app/ActivityOptionsCompat;)V", "GetUpdate_Landroid_support_v4_app_ActivityOptionsCompat_Handler")]
public virtual void Update(ActivityOptionsCompat otherOptions);
}
[RegisterAttribute("android/support/v4/app/AppOpsManagerCompat")]
public class Android.Support.V4.App.AppOpsManagerCompat : Object {
    [RegisterAttribute("MODE_ALLOWED")]
public static int ModeAllowed;
    [RegisterAttribute("MODE_DEFAULT")]
public static int ModeDefault;
    [RegisterAttribute("MODE_IGNORED")]
public static int ModeIgnored;
    internal static IntPtr java_class_handle;
    private static IntPtr id_noteOp_Landroid_content_Context_Ljava_lang_String_ILjava_lang_String_;
    private static IntPtr id_noteProxyOp_Landroid_content_Context_Ljava_lang_String_Ljava_lang_String_;
    private static IntPtr id_permissionToOp_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AppOpsManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("noteOp", "(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)I", "")]
public static int NoteOp(Context context, string op, int uid, string packageName);
    [RegisterAttribute("noteProxyOp", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I", "")]
public static int NoteProxyOp(Context context, string op, string proxiedPackageName);
    [RegisterAttribute("permissionToOp", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public static string PermissionToOp(string permission);
}
[RegisterAttribute("android/support/v4/app/BundleCompat")]
public class Android.Support.V4.App.BundleCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getBinder_Landroid_os_Bundle_Ljava_lang_String_;
    private static IntPtr id_putBinder_Landroid_os_Bundle_Ljava_lang_String_Landroid_os_IBinder_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BundleCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBinder", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/os/IBinder;", "")]
public static IBinder GetBinder(Bundle bundle, string key);
    [RegisterAttribute("putBinder", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/os/IBinder;)V", "")]
public static void PutBinder(Bundle bundle, string key, IBinder binder);
}
[RegisterAttribute("android/support/v4/app/NotificationBuilderWithBuilderAccessor", "", "Android.Support.V4.App.INotificationBuilderWithBuilderAccessorInvoker")]
public interface Android.Support.V4.App.INotificationBuilderWithBuilderAccessor {
    public Builder Builder { get; }
    [RegisterAttribute("getBuilder", "()Landroid/app/Notification$Builder;", "GetGetBuilderHandler:Android.Support.V4.App.INotificationBuilderWithBuilderAccessorInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Builder get_Builder();
    [RegisterAttribute("build", "()Landroid/app/Notification;", "GetBuildHandler:Android.Support.V4.App.INotificationBuilderWithBuilderAccessorInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Notification Build();
}
[RegisterAttribute("android/support/v4/app/NotificationBuilderWithBuilderAccessor")]
internal class Android.Support.V4.App.INotificationBuilderWithBuilderAccessorInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getBuilder;
    private IntPtr id_getBuilder;
    private static Delegate cb_build;
    private IntPtr id_build;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Builder Builder { get; }
    public INotificationBuilderWithBuilderAccessorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INotificationBuilderWithBuilderAccessorInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static INotificationBuilderWithBuilderAccessor GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetBuilderHandler();
    private static IntPtr n_GetBuilder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Builder get_Builder();
    private static Delegate GetBuildHandler();
    private static IntPtr n_Build(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Notification Build();
}
[RegisterAttribute("android/support/v4/app/INotificationSideChannel", "", "Android.Support.V4.App.INotificationSideChannelInvoker")]
public interface Android.Support.V4.App.INotificationSideChannel {
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void Cancel(string p0, int p1, string p2);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void CancelAll(string p0);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void Notify(string p0, int p1, string p2, Notification p3);
}
[RegisterAttribute("android/support/v4/app/INotificationSideChannel")]
internal class Android.Support.V4.App.INotificationSideChannelInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    private IntPtr id_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static Delegate cb_cancelAll_Ljava_lang_String_;
    private IntPtr id_cancelAll_Ljava_lang_String_;
    private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    private IntPtr id_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, int, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, int, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public INotificationSideChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INotificationSideChannelInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static INotificationSideChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2);
    public sealed virtual void Cancel(string p0, int p1, string p2);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void CancelAll(string p0);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2, IntPtr native_p3);
    public sealed virtual void Notify(string p0, int p1, string p2, Notification p3);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[RegisterAttribute("android/support/v4/app/NotificationCompat")]
public class Android.Support.V4.App.NotificationCompat : Object {
    [RegisterAttribute("CATEGORY_ALARM")]
public static string CategoryAlarm;
    [RegisterAttribute("CATEGORY_CALL")]
public static string CategoryCall;
    [RegisterAttribute("CATEGORY_EMAIL")]
public static string CategoryEmail;
    [RegisterAttribute("CATEGORY_ERROR")]
public static string CategoryError;
    [RegisterAttribute("CATEGORY_EVENT")]
public static string CategoryEvent;
    [RegisterAttribute("CATEGORY_MESSAGE")]
public static string CategoryMessage;
    [RegisterAttribute("CATEGORY_PROGRESS")]
public static string CategoryProgress;
    [RegisterAttribute("CATEGORY_PROMO")]
public static string CategoryPromo;
    [RegisterAttribute("CATEGORY_RECOMMENDATION")]
public static string CategoryRecommendation;
    [RegisterAttribute("CATEGORY_REMINDER")]
public static string CategoryReminder;
    [RegisterAttribute("CATEGORY_SERVICE")]
public static string CategoryService;
    [RegisterAttribute("CATEGORY_SOCIAL")]
public static string CategorySocial;
    [RegisterAttribute("CATEGORY_STATUS")]
public static string CategoryStatus;
    [RegisterAttribute("CATEGORY_SYSTEM")]
public static string CategorySystem;
    [RegisterAttribute("CATEGORY_TRANSPORT")]
public static string CategoryTransport;
    [RegisterAttribute("COLOR_DEFAULT")]
public static int ColorDefault;
    [RegisterAttribute("DEFAULT_ALL")]
public static int DefaultAll;
    [RegisterAttribute("DEFAULT_LIGHTS")]
public static int DefaultLights;
    [RegisterAttribute("DEFAULT_SOUND")]
public static int DefaultSound;
    [RegisterAttribute("DEFAULT_VIBRATE")]
public static int DefaultVibrate;
    [RegisterAttribute("EXTRA_BACKGROUND_IMAGE_URI")]
public static string ExtraBackgroundImageUri;
    [RegisterAttribute("EXTRA_BIG_TEXT")]
public static string ExtraBigText;
    [RegisterAttribute("EXTRA_COMPACT_ACTIONS")]
public static string ExtraCompactActions;
    [RegisterAttribute("EXTRA_CONVERSATION_TITLE")]
public static string ExtraConversationTitle;
    [RegisterAttribute("EXTRA_INFO_TEXT")]
public static string ExtraInfoText;
    [RegisterAttribute("EXTRA_LARGE_ICON")]
public static string ExtraLargeIcon;
    [RegisterAttribute("EXTRA_LARGE_ICON_BIG")]
public static string ExtraLargeIconBig;
    [RegisterAttribute("EXTRA_MEDIA_SESSION")]
public static string ExtraMediaSession;
    [RegisterAttribute("EXTRA_MESSAGES")]
public static string ExtraMessages;
    [RegisterAttribute("EXTRA_PEOPLE")]
public static string ExtraPeople;
    [RegisterAttribute("EXTRA_PICTURE")]
public static string ExtraPicture;
    [RegisterAttribute("EXTRA_PROGRESS")]
public static string ExtraProgress;
    [RegisterAttribute("EXTRA_PROGRESS_INDETERMINATE")]
public static string ExtraProgressIndeterminate;
    [RegisterAttribute("EXTRA_PROGRESS_MAX")]
public static string ExtraProgressMax;
    [RegisterAttribute("EXTRA_REMOTE_INPUT_HISTORY")]
public static string ExtraRemoteInputHistory;
    [RegisterAttribute("EXTRA_SELF_DISPLAY_NAME")]
public static string ExtraSelfDisplayName;
    [RegisterAttribute("EXTRA_SHOW_CHRONOMETER")]
public static string ExtraShowChronometer;
    [RegisterAttribute("EXTRA_SHOW_WHEN")]
public static string ExtraShowWhen;
    [RegisterAttribute("EXTRA_SMALL_ICON")]
public static string ExtraSmallIcon;
    [RegisterAttribute("EXTRA_SUB_TEXT")]
public static string ExtraSubText;
    [RegisterAttribute("EXTRA_SUMMARY_TEXT")]
public static string ExtraSummaryText;
    [RegisterAttribute("EXTRA_TEMPLATE")]
public static string ExtraTemplate;
    [RegisterAttribute("EXTRA_TEXT")]
public static string ExtraText;
    [RegisterAttribute("EXTRA_TEXT_LINES")]
public static string ExtraTextLines;
    [RegisterAttribute("EXTRA_TITLE")]
public static string ExtraTitle;
    [RegisterAttribute("EXTRA_TITLE_BIG")]
public static string ExtraTitleBig;
    [RegisterAttribute("FLAG_AUTO_CANCEL")]
public static int FlagAutoCancel;
    [RegisterAttribute("FLAG_FOREGROUND_SERVICE")]
public static int FlagForegroundService;
    [RegisterAttribute("FLAG_GROUP_SUMMARY")]
public static int FlagGroupSummary;
    [RegisterAttribute("FLAG_HIGH_PRIORITY")]
[ObsoleteAttribute("deprecated")]
public static int FlagHighPriority;
    [RegisterAttribute("FLAG_INSISTENT")]
public static int FlagInsistent;
    [RegisterAttribute("FLAG_LOCAL_ONLY")]
public static int FlagLocalOnly;
    [RegisterAttribute("FLAG_NO_CLEAR")]
public static int FlagNoClear;
    [RegisterAttribute("FLAG_ONGOING_EVENT")]
public static int FlagOngoingEvent;
    [RegisterAttribute("FLAG_ONLY_ALERT_ONCE")]
public static int FlagOnlyAlertOnce;
    [RegisterAttribute("FLAG_SHOW_LIGHTS")]
public static int FlagShowLights;
    [RegisterAttribute("PRIORITY_DEFAULT")]
public static int PriorityDefault;
    [RegisterAttribute("PRIORITY_HIGH")]
public static int PriorityHigh;
    [RegisterAttribute("PRIORITY_LOW")]
public static int PriorityLow;
    [RegisterAttribute("PRIORITY_MAX")]
public static int PriorityMax;
    [RegisterAttribute("PRIORITY_MIN")]
public static int PriorityMin;
    [RegisterAttribute("STREAM_DEFAULT")]
public static int StreamDefault;
    [RegisterAttribute("VISIBILITY_PRIVATE")]
public static int VisibilityPrivate;
    [RegisterAttribute("VISIBILITY_PUBLIC")]
public static int VisibilityPublic;
    [RegisterAttribute("VISIBILITY_SECRET")]
public static int VisibilitySecret;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_getAction_Landroid_app_Notification_I;
    private static IntPtr id_getActionCount_Landroid_app_Notification_;
    private static IntPtr id_getCategory_Landroid_app_Notification_;
    private static IntPtr id_getExtras_Landroid_app_Notification_;
    private static IntPtr id_getGroup_Landroid_app_Notification_;
    private static IntPtr id_getLocalOnly_Landroid_app_Notification_;
    private static IntPtr id_getSortKey_Landroid_app_Notification_;
    private static IntPtr id_isGroupSummary_Landroid_app_Notification_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NotificationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAction", "(Landroid/app/Notification;I)Landroid/support/v4/app/NotificationCompat$Action;", "")]
public static Action GetAction(Notification notif, int actionIndex);
    [RegisterAttribute("getActionCount", "(Landroid/app/Notification;)I", "")]
public static int GetActionCount(Notification notif);
    [RegisterAttribute("getCategory", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetCategory(Notification notif);
    [RegisterAttribute("getExtras", "(Landroid/app/Notification;)Landroid/os/Bundle;", "")]
public static Bundle GetExtras(Notification notif);
    [RegisterAttribute("getGroup", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetGroup(Notification notif);
    [RegisterAttribute("getLocalOnly", "(Landroid/app/Notification;)Z", "")]
public static bool GetLocalOnly(Notification notif);
    [RegisterAttribute("getSortKey", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetSortKey(Notification notif);
    [RegisterAttribute("isGroupSummary", "(Landroid/app/Notification;)Z", "")]
public static bool IsGroupSummary(Notification notif);
}
[RegisterAttribute("android/support/v4/app/NotificationCompatBase")]
public class Android.Support.V4.App.NotificationCompatBase : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_add_Landroid_app_Notification_Landroid_content_Context_Ljava_lang_CharSequence_Ljava_lang_CharSequence_Landroid_app_PendingIntent_Landroid_app_PendingIntent_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NotificationCompatBase(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("add", "(Landroid/app/Notification;Landroid/content/Context;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/app/PendingIntent;Landroid/app/PendingIntent;)Landroid/app/Notification;", "")]
public static Notification Add(Notification notification, Context context, ICharSequence contentTitle, ICharSequence contentText, PendingIntent contentIntent, PendingIntent fullScreenIntent);
    public static Notification Add(Notification notification, Context context, string contentTitle, string contentText, PendingIntent contentIntent, PendingIntent fullScreenIntent);
}
[ExtensionAttribute]
public static class Android.Support.V4.App.NotificationCompatBase_ActionIFactoryExtensions : object {
    [ExtensionAttribute]
public static Action Build(IFactory self, int p0, string p1, PendingIntent p2, Bundle p3, RemoteInput[] p4, bool p5);
}
[RegisterAttribute("android/support/v4/app/NotificationCompatExtras")]
public class Android.Support.V4.App.NotificationCompatExtras : Object {
    [RegisterAttribute("EXTRA_ACTION_EXTRAS")]
public static string ExtraActionExtras;
    [RegisterAttribute("EXTRA_GROUP_KEY")]
public static string ExtraGroupKey;
    [RegisterAttribute("EXTRA_GROUP_SUMMARY")]
public static string ExtraGroupSummary;
    [RegisterAttribute("EXTRA_LOCAL_ONLY")]
public static string ExtraLocalOnly;
    [RegisterAttribute("EXTRA_REMOTE_INPUTS")]
public static string ExtraRemoteInputs;
    [RegisterAttribute("EXTRA_SORT_KEY")]
public static string ExtraSortKey;
    internal static IntPtr java_class_handle;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal NotificationCompatExtras(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/app/NotificationCompatSideChannelService")]
public abstract class Android.Support.V4.App.NotificationCompatSideChannelService : Service {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static Delegate cb_cancelAll_Ljava_lang_String_;
    private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    private static Delegate cb_onBind_Landroid_content_Intent_;
    private static IntPtr id_onBind_Landroid_content_Intent_;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, int, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, int, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NotificationCompatSideChannelService(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag);
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public abstract virtual void Cancel(string packageName, int id, string tag);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public abstract virtual void CancelAll(string packageName);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag, IntPtr native_notification);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public abstract virtual void Notify(string packageName, int id, string tag, Notification notification);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
}
[RegisterAttribute("android/support/v4/app/NotificationCompatSideChannelService")]
internal class Android.Support.V4.App.NotificationCompatSideChannelServiceInvoker : NotificationCompatSideChannelService {
    private static IntPtr id_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static IntPtr id_cancelAll_Ljava_lang_String_;
    private static IntPtr id_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    protected Type ThresholdType { get; }
    public NotificationCompatSideChannelServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public virtual void Cancel(string packageName, int id, string tag);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public virtual void CancelAll(string packageName);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[RegisterAttribute("android/support/v4/app/NotificationManagerCompat")]
public class Android.Support.V4.App.NotificationManagerCompat : Object {
    [RegisterAttribute("ACTION_BIND_SIDE_CHANNEL")]
public static string ActionBindSideChannel;
    [RegisterAttribute("EXTRA_USE_SIDE_CHANNEL")]
public static string ExtraUseSideChannel;
    [RegisterAttribute("IMPORTANCE_DEFAULT")]
public static int ImportanceDefault;
    [RegisterAttribute("IMPORTANCE_HIGH")]
public static int ImportanceHigh;
    [RegisterAttribute("IMPORTANCE_LOW")]
public static int ImportanceLow;
    [RegisterAttribute("IMPORTANCE_MAX")]
public static int ImportanceMax;
    [RegisterAttribute("IMPORTANCE_MIN")]
public static int ImportanceMin;
    [RegisterAttribute("IMPORTANCE_NONE")]
public static int ImportanceNone;
    [RegisterAttribute("IMPORTANCE_UNSPECIFIED")]
public static int ImportanceUnspecified;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getImportance;
    private static IntPtr id_areNotificationsEnabled;
    private static IntPtr id_cancel_I;
    private static IntPtr id_cancel_Ljava_lang_String_I;
    private static IntPtr id_cancelAll;
    private static IntPtr id_from_Landroid_content_Context_;
    private static IntPtr id_getEnabledListenerPackages_Landroid_content_Context_;
    private static IntPtr id_notify_ILandroid_app_Notification_;
    private static IntPtr id_notify_Ljava_lang_String_ILandroid_app_Notification_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Importance { get; }
    internal NotificationManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getImportance", "()I", "GetGetImportanceHandler")]
public int get_Importance();
    [RegisterAttribute("areNotificationsEnabled", "()Z", "")]
public bool AreNotificationsEnabled();
    [RegisterAttribute("cancel", "(I)V", "")]
public void Cancel(int id);
    [RegisterAttribute("cancel", "(Ljava/lang/String;I)V", "")]
public void Cancel(string tag, int id);
    [RegisterAttribute("cancelAll", "()V", "")]
public void CancelAll();
    [RegisterAttribute("from", "(Landroid/content/Context;)Landroid/support/v4/app/NotificationManagerCompat;", "")]
public static NotificationManagerCompat From(Context context);
    [RegisterAttribute("getEnabledListenerPackages", "(Landroid/content/Context;)Ljava/util/Set;", "")]
public static ICollection`1<string> GetEnabledListenerPackages(Context context);
    [RegisterAttribute("notify", "(ILandroid/app/Notification;)V", "")]
public void Notify(int id, Notification notification);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILandroid/app/Notification;)V", "")]
public void Notify(string tag, int id, Notification notification);
}
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$Stub")]
public abstract class Android.Support.V4.App.NotificationSideChannelStub : Binder {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_asBinder;
    private static IntPtr id_asBinder;
    private static IntPtr id_asInterface_Landroid_os_IBinder_;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static IntPtr id_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static Delegate cb_cancelAll_Ljava_lang_String_;
    private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, IntPtr, IntPtr, int, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, int, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, int, IntPtr, IntPtr> <>f__mg$cache4;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NotificationSideChannelStub(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/app/INotificationSideChannel;", "")]
public static INotificationSideChannel AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2);
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public abstract virtual void Cancel(string p0, int p1, string p2);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public abstract virtual void CancelAll(string p0);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, IntPtr native_p2, IntPtr native_p3);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public abstract virtual void Notify(string p0, int p1, string p2, Notification p3);
}
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$Stub")]
internal class Android.Support.V4.App.NotificationSideChannelStubInvoker : NotificationSideChannelStub {
    private static IntPtr id_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static IntPtr id_cancelAll_Ljava_lang_String_;
    private static IntPtr id_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    protected Type ThresholdType { get; }
    public NotificationSideChannelStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public virtual void Cancel(string p0, int p1, string p2);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public virtual void CancelAll(string p0);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public virtual void Notify(string p0, int p1, string p2, Notification p3);
}
[RegisterAttribute("android/support/v4/app/RemoteInput")]
public class Android.Support.V4.App.RemoteInput : RemoteInput {
    [RegisterAttribute("EXTRA_RESULTS_DATA")]
public static string ExtraResultsData;
    private static IntPtr FACTORY_jfieldId;
    [RegisterAttribute("RESULTS_CLIP_LABEL")]
public static string ResultsClipLabel;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getAllowFreeFormInput;
    private static IntPtr id_getExtras;
    private static IntPtr id_getLabel;
    private static IntPtr id_getResultKey;
    private static IntPtr id_addResultsToIntent_arrayLandroid_support_v4_app_RemoteInput_Landroid_content_Intent_Landroid_os_Bundle_;
    private static IntPtr id_getChoices;
    private static IntPtr id_getResultsFromIntent_Landroid_content_Intent_;
    [RegisterAttribute("FACTORY")]
public static IFactory Factory { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected bool AllowFreeFormInput { get; }
    protected Bundle Extras { get; }
    protected ICharSequence LabelFormatted { get; }
    protected string ResultKey { get; }
    internal RemoteInput(IntPtr javaReference, JniHandleOwnership transfer);
    public static IFactory get_Factory();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAllowFreeFormInput", "()Z", "GetGetAllowFreeFormInputHandler")]
protected virtual bool get_AllowFreeFormInput();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
protected virtual Bundle get_Extras();
    [RegisterAttribute("getLabel", "()Ljava/lang/CharSequence;", "GetGetLabelHandler")]
protected virtual ICharSequence get_LabelFormatted();
    [RegisterAttribute("getResultKey", "()Ljava/lang/String;", "GetGetResultKeyHandler")]
protected virtual string get_ResultKey();
    [RegisterAttribute("addResultsToIntent", "([Landroid/support/v4/app/RemoteInput;Landroid/content/Intent;Landroid/os/Bundle;)V", "")]
public static void AddResultsToIntent(RemoteInput[] remoteInputs, Intent intent, Bundle results);
    [RegisterAttribute("getChoices", "()[Ljava/lang/CharSequence;", "")]
protected virtual ICharSequence[] GetChoicesFormatted();
    protected String[] GetChoices();
    [RegisterAttribute("getResultsFromIntent", "(Landroid/content/Intent;)Landroid/os/Bundle;", "")]
public static Bundle GetResultsFromIntent(Intent intent);
}
[RegisterAttribute("android/support/v4/app/RemoteInputCompatBase")]
public class Android.Support.V4.App.RemoteInputCompatBase : Object {
    protected RemoteInputCompatBase(IntPtr javaReference, JniHandleOwnership transfer);
}
[ExtensionAttribute]
public static class Android.Support.V4.App.RemoteInputCompatBase_RemoteInputIFactoryExtensions : object {
    [ExtensionAttribute]
public static RemoteInput Build(IFactory self, string p0, string p1, String[] p2, bool p3, Bundle p4);
}
[RegisterAttribute("android/support/v4/app/ServiceCompat")]
public class Android.Support.V4.App.ServiceCompat : Object {
    [RegisterAttribute("START_STICKY")]
public static int StartSticky;
    [RegisterAttribute("STOP_FOREGROUND_DETACH")]
public static int StopForegroundDetach;
    [RegisterAttribute("STOP_FOREGROUND_REMOVE")]
public static int StopForegroundRemove;
    internal static IntPtr java_class_handle;
    private static IntPtr id_stopForeground_Landroid_app_Service_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ServiceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("stopForeground", "(Landroid/app/Service;I)V", "")]
public static void StopForeground(Service service, int flags);
}
[RegisterAttribute("android/support/v4/app/ShareCompat")]
public class Android.Support.V4.App.ShareCompat : Object {
    [RegisterAttribute("EXTRA_CALLING_ACTIVITY")]
public static string ExtraCallingActivity;
    [RegisterAttribute("EXTRA_CALLING_PACKAGE")]
public static string ExtraCallingPackage;
    internal static IntPtr java_class_handle;
    private static IntPtr id_configureMenuItem_Landroid_view_Menu_ILandroid_support_v4_app_ShareCompat_IntentBuilder_;
    private static IntPtr id_configureMenuItem_Landroid_view_MenuItem_Landroid_support_v4_app_ShareCompat_IntentBuilder_;
    private static IntPtr id_getCallingActivity_Landroid_app_Activity_;
    private static IntPtr id_getCallingPackage_Landroid_app_Activity_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ShareCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("configureMenuItem", "(Landroid/view/Menu;ILandroid/support/v4/app/ShareCompat$IntentBuilder;)V", "")]
public static void ConfigureMenuItem(IMenu menu, int menuItemId, IntentBuilder shareIntent);
    [RegisterAttribute("configureMenuItem", "(Landroid/view/MenuItem;Landroid/support/v4/app/ShareCompat$IntentBuilder;)V", "")]
public static void ConfigureMenuItem(IMenuItem item, IntentBuilder shareIntent);
    [RegisterAttribute("getCallingActivity", "(Landroid/app/Activity;)Landroid/content/ComponentName;", "")]
public static ComponentName GetCallingActivity(Activity calledActivity);
    [RegisterAttribute("getCallingPackage", "(Landroid/app/Activity;)Ljava/lang/String;", "")]
public static string GetCallingPackage(Activity calledActivity);
}
[ExtensionAttribute]
public static class Android.Support.V4.App.ShareCompatIShareCompatImplExtensions : object {
    [ExtensionAttribute]
public static string EscapeHtml(IShareCompatImpl self, string p0);
}
[RegisterAttribute("android/support/v4/app/SharedElementCallback")]
public abstract class Android.Support.V4.App.SharedElementCallback : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_onCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_;
    private static IntPtr id_onCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_;
    private static Delegate cb_onCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_;
    private static IntPtr id_onCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_;
    private static Delegate cb_onMapSharedElements_Ljava_util_List_Ljava_util_Map_;
    private static IntPtr id_onMapSharedElements_Ljava_util_List_Ljava_util_Map_;
    private static Delegate cb_onRejectSharedElements_Ljava_util_List_;
    private static IntPtr id_onRejectSharedElements_Ljava_util_List_;
    private static Delegate cb_onSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    private static IntPtr id_onSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    private static Delegate cb_onSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    private static IntPtr id_onSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    private static Delegate cb_onSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroid_support_v4_app_SharedElementCallback_OnSharedElementsReadyListener_;
    private static IntPtr id_onSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroid_support_v4_app_SharedElementCallback_OnSharedElementsReadyListener_;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache6;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected SharedElementCallback(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_Handler();
    private static IntPtr n_OnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElement, IntPtr native_viewToGlobalMatrix, IntPtr native_screenBounds);
    [RegisterAttribute("onCaptureSharedElementSnapshot", "(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;)Landroid/os/Parcelable;", "GetOnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_Handler")]
public virtual IParcelable OnCaptureSharedElementSnapshot(View sharedElement, Matrix viewToGlobalMatrix, RectF screenBounds);
    private static Delegate GetOnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_Handler();
    private static IntPtr n_OnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_snapshot);
    [RegisterAttribute("onCreateSnapshotView", "(Landroid/content/Context;Landroid/os/Parcelable;)Landroid/view/View;", "GetOnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_Handler")]
public virtual View OnCreateSnapshotView(Context context, IParcelable snapshot);
    private static Delegate GetOnMapSharedElements_Ljava_util_List_Ljava_util_Map_Handler();
    private static void n_OnMapSharedElements_Ljava_util_List_Ljava_util_Map_(IntPtr jnienv, IntPtr native__this, IntPtr native_names, IntPtr native_sharedElements);
    [RegisterAttribute("onMapSharedElements", "(Ljava/util/List;Ljava/util/Map;)V", "GetOnMapSharedElements_Ljava_util_List_Ljava_util_Map_Handler")]
public virtual void OnMapSharedElements(IList`1<string> names, IDictionary`2<string, View> sharedElements);
    private static Delegate GetOnRejectSharedElements_Ljava_util_List_Handler();
    private static void n_OnRejectSharedElements_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_rejectedSharedElements);
    [RegisterAttribute("onRejectSharedElements", "(Ljava/util/List;)V", "GetOnRejectSharedElements_Ljava_util_List_Handler")]
public virtual void OnRejectSharedElements(IList`1<View> rejectedSharedElements);
    private static Delegate GetOnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_OnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_sharedElementSnapshots);
    [RegisterAttribute("onSharedElementEnd", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V", "GetOnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void OnSharedElementEnd(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IList`1<View> sharedElementSnapshots);
    private static Delegate GetOnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_OnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_sharedElementSnapshots);
    [RegisterAttribute("onSharedElementStart", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V", "GetOnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void OnSharedElementStart(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IList`1<View> sharedElementSnapshots);
    private static Delegate GetOnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroid_support_v4_app_SharedElementCallback_OnSharedElementsReadyListener_Handler();
    private static void n_OnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroid_support_v4_app_SharedElementCallback_OnSharedElementsReadyListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_listener);
    [RegisterAttribute("onSharedElementsArrived", "(Ljava/util/List;Ljava/util/List;Landroid/support/v4/app/SharedElementCallback$OnSharedElementsReadyListener;)V", "GetOnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroid_support_v4_app_SharedElementCallback_OnSharedElementsReadyListener_Handler")]
public virtual void OnSharedElementsArrived(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IOnSharedElementsReadyListener listener);
}
[RegisterAttribute("android/support/v4/app/SharedElementCallback")]
internal class Android.Support.V4.App.SharedElementCallbackInvoker : SharedElementCallback {
    protected Type ThresholdType { get; }
    public SharedElementCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/content/ContentResolverCompat")]
public class Android.Support.V4.Content.ContentResolverCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_query_Landroid_content_ContentResolver_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Landroid_support_v4_os_CancellationSignal_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ContentResolverCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("query", "(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/support/v4/os/CancellationSignal;)Landroid/database/Cursor;", "")]
public static ICursor Query(ContentResolver resolver, Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder, CancellationSignal cancellationSignal);
}
[RegisterAttribute("android/support/v4/content/ContextCompat")]
public class Android.Support.V4.Content.ContextCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_checkSelfPermission_Landroid_content_Context_Ljava_lang_String_;
    private static IntPtr id_createDeviceEncryptedStorageContext_Landroid_content_Context_;
    private static IntPtr id_createDeviceProtectedStorageContext_Landroid_content_Context_;
    private static IntPtr id_getCodeCacheDir_Landroid_content_Context_;
    private static IntPtr id_getColor_Landroid_content_Context_I;
    private static IntPtr id_getColorStateList_Landroid_content_Context_I;
    private static IntPtr id_getDataDir_Landroid_content_Context_;
    private static IntPtr id_getDrawable_Landroid_content_Context_I;
    private static IntPtr id_getExternalCacheDirs_Landroid_content_Context_;
    private static IntPtr id_getExternalFilesDirs_Landroid_content_Context_Ljava_lang_String_;
    private static IntPtr id_getNoBackupFilesDir_Landroid_content_Context_;
    private static IntPtr id_getObbDirs_Landroid_content_Context_;
    private static IntPtr id_isDeviceEncryptedStorage_Landroid_content_Context_;
    private static IntPtr id_isDeviceProtectedStorage_Landroid_content_Context_;
    private static IntPtr id_startActivities_Landroid_content_Context_arrayLandroid_content_Intent_;
    private static IntPtr id_startActivities_Landroid_content_Context_arrayLandroid_content_Intent_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ContextCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static Permission CheckSelfPermission(Context context, string permission);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("createDeviceEncryptedStorageContext", "(Landroid/content/Context;)Landroid/content/Context;", "")]
public static Context CreateDeviceEncryptedStorageContext(Context context);
    [RegisterAttribute("createDeviceProtectedStorageContext", "(Landroid/content/Context;)Landroid/content/Context;", "")]
public static Context CreateDeviceProtectedStorageContext(Context context);
    [RegisterAttribute("getCodeCacheDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetCodeCacheDir(Context context);
    [RegisterAttribute("getColor", "(Landroid/content/Context;I)I", "")]
public static int GetColor(Context context, int id);
    [RegisterAttribute("getColorStateList", "(Landroid/content/Context;I)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetColorStateList(Context context, int id);
    [RegisterAttribute("getDataDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetDataDir(Context context);
    [RegisterAttribute("getDrawable", "(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Context context, int id);
    [RegisterAttribute("getExternalCacheDirs", "(Landroid/content/Context;)[Ljava/io/File;", "")]
public static File[] GetExternalCacheDirs(Context context);
    [RegisterAttribute("getExternalFilesDirs", "(Landroid/content/Context;Ljava/lang/String;)[Ljava/io/File;", "")]
public static File[] GetExternalFilesDirs(Context context, string type);
    [RegisterAttribute("getNoBackupFilesDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetNoBackupFilesDir(Context context);
    [RegisterAttribute("getObbDirs", "(Landroid/content/Context;)[Ljava/io/File;", "")]
public static File[] GetObbDirs(Context context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isDeviceEncryptedStorage", "(Landroid/content/Context;)Z", "")]
public static bool IsDeviceEncryptedStorage(Context context);
    [RegisterAttribute("isDeviceProtectedStorage", "(Landroid/content/Context;)Z", "")]
public static bool IsDeviceProtectedStorage(Context context);
    [RegisterAttribute("startActivities", "(Landroid/content/Context;[Landroid/content/Intent;)Z", "")]
public static bool StartActivities(Context context, Intent[] intents);
    [RegisterAttribute("startActivities", "(Landroid/content/Context;[Landroid/content/Intent;Landroid/os/Bundle;)Z", "")]
public static bool StartActivities(Context context, Intent[] intents, Bundle options);
}
[RegisterAttribute("android/support/v4/content/IntentCompat")]
public class Android.Support.V4.Content.IntentCompat : Object {
    [RegisterAttribute("ACTION_EXTERNAL_APPLICATIONS_AVAILABLE")]
public static string ActionExternalApplicationsAvailable;
    [RegisterAttribute("ACTION_EXTERNAL_APPLICATIONS_UNAVAILABLE")]
public static string ActionExternalApplicationsUnavailable;
    [RegisterAttribute("CATEGORY_LEANBACK_LAUNCHER")]
public static string CategoryLeanbackLauncher;
    [RegisterAttribute("EXTRA_CHANGED_PACKAGE_LIST")]
public static string ExtraChangedPackageList;
    [RegisterAttribute("EXTRA_CHANGED_UID_LIST")]
public static string ExtraChangedUidList;
    [RegisterAttribute("EXTRA_HTML_TEXT")]
public static string ExtraHtmlText;
    [RegisterAttribute("FLAG_ACTIVITY_CLEAR_TASK")]
public static int FlagActivityClearTask;
    [RegisterAttribute("FLAG_ACTIVITY_TASK_ON_HOME")]
public static int FlagActivityTaskOnHome;
    internal static IntPtr java_class_handle;
    private static IntPtr id_makeMainActivity_Landroid_content_ComponentName_;
    private static IntPtr id_makeMainSelectorActivity_Ljava_lang_String_Ljava_lang_String_;
    private static IntPtr id_makeRestartActivityTask_Landroid_content_ComponentName_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal IntentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("makeMainActivity", "(Landroid/content/ComponentName;)Landroid/content/Intent;", "")]
public static Intent MakeMainActivity(ComponentName mainActivity);
    [RegisterAttribute("makeMainSelectorActivity", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;", "")]
public static Intent MakeMainSelectorActivity(string selectorAction, string selectorCategory);
    [RegisterAttribute("makeRestartActivityTask", "(Landroid/content/ComponentName;)Landroid/content/Intent;", "")]
public static Intent MakeRestartActivityTask(ComponentName mainActivity);
}
[RegisterAttribute("android/support/v4/content/ModernAsyncTask")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.V4.Content.ModernAsyncTask : Object {
    private static IntPtr THREAD_POOL_EXECUTOR_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_isCancelled;
    private static IntPtr id_cancel_Z;
    private static Delegate cb_doInBackground_arrayLjava_lang_Object_;
    private static IntPtr id_execute_Ljava_lang_Runnable_;
    private static IntPtr id_execute_arrayLjava_lang_Object_;
    private static IntPtr id_executeOnExecutor_Ljava_util_concurrent_Executor_arrayLjava_lang_Object_;
    private static IntPtr id_get;
    private static IntPtr id_get_JLjava_util_concurrent_TimeUnit_;
    private static IntPtr id_getStatus;
    private static Delegate cb_onCancelled;
    private static IntPtr id_onCancelled;
    private static Delegate cb_onCancelled_Ljava_lang_Object_;
    private static IntPtr id_onCancelled_Ljava_lang_Object_;
    private static Delegate cb_onPostExecute_Ljava_lang_Object_;
    private static IntPtr id_onPostExecute_Ljava_lang_Object_;
    private static Delegate cb_onPreExecute;
    private static IntPtr id_onPreExecute;
    private static Delegate cb_onProgressUpdate_arrayLjava_lang_Object_;
    private static IntPtr id_onProgressUpdate_arrayLjava_lang_Object_;
    private static IntPtr id_publishProgress_arrayLjava_lang_Object_;
    private static IntPtr id_setDefaultExecutor_Ljava_util_concurrent_Executor_;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [RegisterAttribute("THREAD_POOL_EXECUTOR")]
public static IExecutor ThreadPoolExecutor { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsCancelled { get; }
    protected ModernAsyncTask(IntPtr javaReference, JniHandleOwnership transfer);
    public static IExecutor get_ThreadPoolExecutor();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isCancelled", "()Z", "GetIsCancelledHandler")]
public bool get_IsCancelled();
    [RegisterAttribute("cancel", "(Z)Z", "")]
public bool Cancel(bool mayInterruptIfRunning);
    private static Delegate GetDoInBackground_arrayLjava_lang_Object_Handler();
    private static IntPtr n_DoInBackground_arrayLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetDoInBackground_arrayLjava_lang_Object_Handler")]
protected abstract virtual Object DoInBackground(Object[] p0);
    [RegisterAttribute("execute", "(Ljava/lang/Runnable;)V", "")]
public static void Execute(IRunnable runnable);
    [RegisterAttribute("execute", "([Ljava/lang/Object;)Landroid/support/v4/content/ModernAsyncTask;", "")]
public ModernAsyncTask Execute(Object[] params);
    [RegisterAttribute("executeOnExecutor", "(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/support/v4/content/ModernAsyncTask;", "")]
public ModernAsyncTask ExecuteOnExecutor(IExecutor exec, Object[] params);
    [RegisterAttribute("get", "()Ljava/lang/Object;", "")]
public Object Get();
    [RegisterAttribute("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "")]
public Object Get(long timeout, TimeUnit unit);
    [RegisterAttribute("getStatus", "()Landroid/support/v4/content/ModernAsyncTask$Status;", "")]
public Status GetStatus();
    private static Delegate GetOnCancelledHandler();
    private static void n_OnCancelled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCancelled", "()V", "GetOnCancelledHandler")]
protected virtual void OnCancelled();
    private static Delegate GetOnCancelled_Ljava_lang_Object_Handler();
    private static void n_OnCancelled_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_result);
    [RegisterAttribute("onCancelled", "(Ljava/lang/Object;)V", "GetOnCancelled_Ljava_lang_Object_Handler")]
protected virtual void OnCancelled(Object result);
    private static Delegate GetOnPostExecute_Ljava_lang_Object_Handler();
    private static void n_OnPostExecute_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_result);
    [RegisterAttribute("onPostExecute", "(Ljava/lang/Object;)V", "GetOnPostExecute_Ljava_lang_Object_Handler")]
protected virtual void OnPostExecute(Object result);
    private static Delegate GetOnPreExecuteHandler();
    private static void n_OnPreExecute(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPreExecute", "()V", "GetOnPreExecuteHandler")]
protected virtual void OnPreExecute();
    private static Delegate GetOnProgressUpdate_arrayLjava_lang_Object_Handler();
    private static void n_OnProgressUpdate_arrayLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_values);
    [RegisterAttribute("onProgressUpdate", "([Ljava/lang/Object;)V", "GetOnProgressUpdate_arrayLjava_lang_Object_Handler")]
protected virtual void OnProgressUpdate(Object[] values);
    [RegisterAttribute("publishProgress", "([Ljava/lang/Object;)V", "")]
protected void PublishProgress(Object[] values);
    [RegisterAttribute("setDefaultExecutor", "(Ljava/util/concurrent/Executor;)V", "")]
public static void SetDefaultExecutor(IExecutor exec);
}
[RegisterAttribute("android/support/v4/content/ModernAsyncTask")]
internal class Android.Support.V4.Content.ModernAsyncTaskInvoker : ModernAsyncTask {
    private static IntPtr id_doInBackground_arrayLjava_lang_Object_;
    protected Type ThresholdType { get; }
    public ModernAsyncTaskInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("doInBackground", "([Ljava/lang/Object;)Ljava/lang/Object;", "GetDoInBackground_arrayLjava_lang_Object_Handler")]
protected virtual Object DoInBackground(Object[] p0);
}
[RegisterAttribute("android/support/v4/content/ParallelExecutorCompat")]
public class Android.Support.V4.Content.ParallelExecutorCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getParallelExecutor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public static IExecutor ParallelExecutor { get; }
    internal ParallelExecutorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getParallelExecutor", "()Ljava/util/concurrent/Executor;", "GetGetParallelExecutorHandler")]
public static IExecutor get_ParallelExecutor();
}
[RegisterAttribute("android/support/v4/content/pm/ActivityInfoCompat")]
public class Android.Support.V4.Content.PM.ActivityInfoCompat : Object {
    [RegisterAttribute("CONFIG_UI_MODE")]
public static int ConfigUiMode;
    internal static IntPtr java_class_handle;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ActivityInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/content/res/ConfigurationHelper")]
public class Android.Support.V4.Content.Res.ConfigurationHelper : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getDensityDpi_Landroid_content_res_Resources_;
    private static IntPtr id_getScreenHeightDp_Landroid_content_res_Resources_;
    private static IntPtr id_getScreenWidthDp_Landroid_content_res_Resources_;
    private static IntPtr id_getSmallestScreenWidthDp_Landroid_content_res_Resources_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ConfigurationHelper(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDensityDpi", "(Landroid/content/res/Resources;)I", "")]
public static int GetDensityDpi(Resources resources);
    [RegisterAttribute("getScreenHeightDp", "(Landroid/content/res/Resources;)I", "")]
public static int GetScreenHeightDp(Resources resources);
    [RegisterAttribute("getScreenWidthDp", "(Landroid/content/res/Resources;)I", "")]
public static int GetScreenWidthDp(Resources resources);
    [RegisterAttribute("getSmallestScreenWidthDp", "(Landroid/content/res/Resources;)I", "")]
public static int GetSmallestScreenWidthDp(Resources resources);
}
[RegisterAttribute("android/support/v4/content/res/ResourcesCompat")]
public class Android.Support.V4.Content.Res.ResourcesCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getColor_Landroid_content_res_Resources_ILandroid_content_res_Resources_Theme_;
    private static IntPtr id_getColorStateList_Landroid_content_res_Resources_ILandroid_content_res_Resources_Theme_;
    private static IntPtr id_getDrawable_Landroid_content_res_Resources_ILandroid_content_res_Resources_Theme_;
    private static IntPtr id_getDrawableForDensity_Landroid_content_res_Resources_IILandroid_content_res_Resources_Theme_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ResourcesCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getColor", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)I", "")]
public static int GetColor(Resources res, int id, Theme theme);
    [RegisterAttribute("getColorStateList", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetColorStateList(Resources res, int id, Theme theme);
    [RegisterAttribute("getDrawable", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Resources res, int id, Theme theme);
    [RegisterAttribute("getDrawableForDensity", "(Landroid/content/res/Resources;IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawableForDensity(Resources res, int id, int density, Theme theme);
}
[RegisterAttribute("android/support/v4/content/SharedPreferencesCompat")]
public class Android.Support.V4.Content.SharedPreferencesCompat : Object {
    internal SharedPreferencesCompat(IntPtr javaReference, JniHandleOwnership transfer);
}
[RegisterAttribute("android/support/v4/database/DatabaseUtilsCompat")]
public class Android.Support.V4.Database.DatabaseUtilsCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_appendSelectionArgs_arrayLjava_lang_String_arrayLjava_lang_String_;
    private static IntPtr id_concatenateWhere_Ljava_lang_String_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal DatabaseUtilsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("appendSelectionArgs", "([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;", "")]
public static String[] AppendSelectionArgs(String[] originalValues, String[] newValues);
    [RegisterAttribute("concatenateWhere", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
public static string ConcatenateWhere(string a, string b);
}
[RegisterAttribute("android/support/v4/graphics/BitmapCompat")]
public class Android.Support.V4.Graphics.BitmapCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getAllocationByteCount_Landroid_graphics_Bitmap_;
    private static IntPtr id_hasMipMap_Landroid_graphics_Bitmap_;
    private static IntPtr id_setHasMipMap_Landroid_graphics_Bitmap_Z;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BitmapCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAllocationByteCount", "(Landroid/graphics/Bitmap;)I", "")]
public static int GetAllocationByteCount(Bitmap bitmap);
    [RegisterAttribute("hasMipMap", "(Landroid/graphics/Bitmap;)Z", "")]
public static bool HasMipMap(Bitmap bitmap);
    [RegisterAttribute("setHasMipMap", "(Landroid/graphics/Bitmap;Z)V", "")]
public static void SetHasMipMap(Bitmap bitmap, bool hasMipMap);
}
[RegisterAttribute("android/support/v4/graphics/drawable/DrawableCompat")]
public class Android.Support.V4.Graphics.Drawable.DrawableCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_applyTheme_Landroid_graphics_drawable_Drawable_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_canApplyTheme_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_clearColorFilter_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_getAlpha_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_getColorFilter_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_getLayoutDirection_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_inflate_Landroid_graphics_drawable_Drawable_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_isAutoMirrored_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_jumpToCurrentState_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setAutoMirrored_Landroid_graphics_drawable_Drawable_Z;
    private static IntPtr id_setHotspot_Landroid_graphics_drawable_Drawable_FF;
    private static IntPtr id_setHotspotBounds_Landroid_graphics_drawable_Drawable_IIII;
    private static IntPtr id_setLayoutDirection_Landroid_graphics_drawable_Drawable_I;
    private static IntPtr id_setTint_Landroid_graphics_drawable_Drawable_I;
    private static IntPtr id_setTintList_Landroid_graphics_drawable_Drawable_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setTintMode_Landroid_graphics_drawable_Drawable_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr id_unwrap_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_wrap_Landroid_graphics_drawable_Drawable_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal DrawableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("applyTheme", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/Resources$Theme;)V", "")]
public static void ApplyTheme(Drawable drawable, Theme t);
    [RegisterAttribute("canApplyTheme", "(Landroid/graphics/drawable/Drawable;)Z", "")]
public static bool CanApplyTheme(Drawable drawable);
    [RegisterAttribute("clearColorFilter", "(Landroid/graphics/drawable/Drawable;)V", "")]
public static void ClearColorFilter(Drawable drawable);
    [RegisterAttribute("getAlpha", "(Landroid/graphics/drawable/Drawable;)I", "")]
public static int GetAlpha(Drawable drawable);
    [RegisterAttribute("getColorFilter", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/ColorFilter;", "")]
public static ColorFilter GetColorFilter(Drawable drawable);
    [RegisterAttribute("getLayoutDirection", "(Landroid/graphics/drawable/Drawable;)I", "")]
public static int GetLayoutDirection(Drawable drawable);
    [RegisterAttribute("inflate", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "")]
public static void Inflate(Drawable drawable, Resources res, XmlReader parser, IAttributeSet attrs, Theme theme);
    [RegisterAttribute("isAutoMirrored", "(Landroid/graphics/drawable/Drawable;)Z", "")]
public static bool IsAutoMirrored(Drawable drawable);
    [RegisterAttribute("jumpToCurrentState", "(Landroid/graphics/drawable/Drawable;)V", "")]
public static void JumpToCurrentState(Drawable drawable);
    [RegisterAttribute("setAutoMirrored", "(Landroid/graphics/drawable/Drawable;Z)V", "")]
public static void SetAutoMirrored(Drawable drawable, bool mirrored);
    [RegisterAttribute("setHotspot", "(Landroid/graphics/drawable/Drawable;FF)V", "")]
public static void SetHotspot(Drawable drawable, float x, float y);
    [RegisterAttribute("setHotspotBounds", "(Landroid/graphics/drawable/Drawable;IIII)V", "")]
public static void SetHotspotBounds(Drawable drawable, int left, int top, int right, int bottom);
    [RegisterAttribute("setLayoutDirection", "(Landroid/graphics/drawable/Drawable;I)Z", "")]
public static bool SetLayoutDirection(Drawable drawable, int layoutDirection);
    [RegisterAttribute("setTint", "(Landroid/graphics/drawable/Drawable;I)V", "")]
public static void SetTint(Drawable drawable, int tint);
    [RegisterAttribute("setTintList", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V", "")]
public static void SetTintList(Drawable drawable, ColorStateList tint);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetTintMode(Drawable drawable, Mode tintMode);
    [RegisterAttribute("unwrap", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Unwrap(Drawable drawable);
    [RegisterAttribute("wrap", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable Wrap(Drawable drawable);
}
[RegisterAttribute("android/support/v4/graphics/drawable/DrawableWrapper", "", "Android.Support.V4.Graphics.Drawable.IDrawableWrapperInvoker")]
public interface Android.Support.V4.Graphics.Drawable.IDrawableWrapper {
    public Drawable WrappedDrawable { get; public set; }
    [RegisterAttribute("getWrappedDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetWrappedDrawableHandler:Android.Support.V4.Graphics.Drawable.IDrawableWrapperInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Drawable get_WrappedDrawable();
    [RegisterAttribute("setWrappedDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetWrappedDrawable_Landroid_graphics_drawable_Drawable_Handler:Android.Support.V4.Graphics.Drawable.IDrawableWrapperInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_WrappedDrawable(Drawable value);
}
[RegisterAttribute("android/support/v4/graphics/drawable/DrawableWrapper")]
internal class Android.Support.V4.Graphics.Drawable.IDrawableWrapperInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getWrappedDrawable;
    private static Delegate cb_setWrappedDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_getWrappedDrawable;
    private IntPtr id_setWrappedDrawable_Landroid_graphics_drawable_Drawable_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable WrappedDrawable { get; public set; }
    public IDrawableWrapperInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDrawableWrapperInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IDrawableWrapper GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetWrappedDrawableHandler();
    private static IntPtr n_GetWrappedDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetWrappedDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetWrappedDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Drawable get_WrappedDrawable();
    public sealed virtual void set_WrappedDrawable(Drawable value);
}
[RegisterAttribute("android/support/v4/graphics/drawable/TintAwareDrawable", "", "Android.Support.V4.Graphics.Drawable.ITintAwareDrawableInvoker")]
public interface Android.Support.V4.Graphics.Drawable.ITintAwareDrawable {
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler:Android.Support.V4.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetTint(int p0);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler:Android.Support.V4.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetTintList(ColorStateList p0);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler:Android.Support.V4.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetTintMode(Mode p0);
}
[RegisterAttribute("android/support/v4/graphics/drawable/TintAwareDrawable")]
internal class Android.Support.V4.Graphics.Drawable.ITintAwareDrawableInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_setTint_I;
    private IntPtr id_setTint_I;
    private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_setTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ITintAwareDrawableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintAwareDrawableInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ITintAwareDrawable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSetTint_IHandler();
    private static void n_SetTint_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void SetTint(int p0);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetTintList(ColorStateList p0);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetTintMode(Mode p0);
}
[RegisterAttribute("android/support/v4/hardware/display/DisplayManagerCompat")]
public abstract class Android.Support.V4.Hardware.Display.DisplayManagerCompat : Object {
    [RegisterAttribute("DISPLAY_CATEGORY_PRESENTATION")]
public static string DisplayCategoryPresentation;
    internal static IntPtr java_class_handle;
    private static Delegate cb_getDisplay_I;
    private static Delegate cb_getDisplays;
    private static Delegate cb_getDisplays_Ljava_lang_String_;
    private static IntPtr id_getInstance_Landroid_content_Context_;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DisplayManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDisplay_IHandler();
    private static IntPtr n_GetDisplay_I(IntPtr jnienv, IntPtr native__this, int displayId);
    [RegisterAttribute("getDisplay", "(I)Landroid/view/Display;", "GetGetDisplay_IHandler")]
public abstract virtual Display GetDisplay(int displayId);
    private static Delegate GetGetDisplaysHandler();
    private static IntPtr n_GetDisplays(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDisplays", "()[Landroid/view/Display;", "GetGetDisplaysHandler")]
public abstract virtual Display[] GetDisplays();
    private static Delegate GetGetDisplays_Ljava_lang_String_Handler();
    private static IntPtr n_GetDisplays_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_category);
    [RegisterAttribute("getDisplays", "(Ljava/lang/String;)[Landroid/view/Display;", "GetGetDisplays_Ljava_lang_String_Handler")]
public abstract virtual Display[] GetDisplays(string category);
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroid/support/v4/hardware/display/DisplayManagerCompat;", "")]
public static DisplayManagerCompat GetInstance(Context context);
}
[RegisterAttribute("android/support/v4/hardware/display/DisplayManagerCompat")]
internal class Android.Support.V4.Hardware.Display.DisplayManagerCompatInvoker : DisplayManagerCompat {
    private static IntPtr id_getDisplay_I;
    private static IntPtr id_getDisplays;
    private static IntPtr id_getDisplays_Ljava_lang_String_;
    protected Type ThresholdType { get; }
    public DisplayManagerCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDisplay", "(I)Landroid/view/Display;", "GetGetDisplay_IHandler")]
public virtual Display GetDisplay(int displayId);
    [RegisterAttribute("getDisplays", "()[Landroid/view/Display;", "GetGetDisplaysHandler")]
public virtual Display[] GetDisplays();
    [RegisterAttribute("getDisplays", "(Ljava/lang/String;)[Landroid/view/Display;", "GetGetDisplays_Ljava_lang_String_Handler")]
public virtual Display[] GetDisplays(string category);
}
[RegisterAttribute("android/support/v4/hardware/fingerprint/FingerprintManagerCompat")]
public class Android.Support.V4.Hardware.Fingerprint.FingerprintManagerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_hasEnrolledFingerprints;
    private static IntPtr id_isHardwareDetected;
    private static IntPtr id_authenticate_Landroid_support_v4_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroid_support_v4_os_CancellationSignal_Landroid_support_v4_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_;
    private static IntPtr id_from_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasEnrolledFingerprints { get; }
    public bool IsHardwareDetected { get; }
    internal FingerprintManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasEnrolledFingerprints", "()Z", "GetHasEnrolledFingerprintsHandler")]
public bool get_HasEnrolledFingerprints();
    [RegisterAttribute("isHardwareDetected", "()Z", "GetIsHardwareDetectedHandler")]
public bool get_IsHardwareDetected();
    [RegisterAttribute("authenticate", "(Landroid/support/v4/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;ILandroid/support/v4/os/CancellationSignal;Landroid/support/v4/hardware/fingerprint/FingerprintManagerCompat$AuthenticationCallback;Landroid/os/Handler;)V", "")]
public void Authenticate(CryptoObject crypto, int flags, CancellationSignal cancel, AuthenticationCallback callback, Handler handler);
    [RegisterAttribute("from", "(Landroid/content/Context;)Landroid/support/v4/hardware/fingerprint/FingerprintManagerCompat;", "")]
public static FingerprintManagerCompat From(Context context);
}
[RegisterAttribute("android/support/v4/hardware/fingerprint/FingerprintManagerCompatApi23")]
public class Android.Support.V4.Hardware.Fingerprint.FingerprintManagerCompatApi23 : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_authenticate_Landroid_content_Context_Landroid_support_v4_hardware_fingerprint_FingerprintManagerCompatApi23_CryptoObject_ILjava_lang_Object_Landroid_support_v4_hardware_fingerprint_FingerprintManagerCompatApi23_AuthenticationCallback_Landroid_os_Handler_;
    private static IntPtr id_hasEnrolledFingerprints_Landroid_content_Context_;
    private static IntPtr id_isHardwareDetected_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal FingerprintManagerCompatApi23(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("authenticate", "(Landroid/content/Context;Landroid/support/v4/hardware/fingerprint/FingerprintManagerCompatApi23$CryptoObject;ILjava/lang/Object;Landroid/support/v4/hardware/fingerprint/FingerprintManagerCompatApi23$AuthenticationCallback;Landroid/os/Handler;)V", "")]
public static void Authenticate(Context context, CryptoObject crypto, int flags, Object cancel, AuthenticationCallback callback, Handler handler);
    [RegisterAttribute("hasEnrolledFingerprints", "(Landroid/content/Context;)Z", "")]
public static bool HasEnrolledFingerprints(Context context);
    [RegisterAttribute("isHardwareDetected", "(Landroid/content/Context;)Z", "")]
public static bool IsHardwareDetected(Context context);
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenu", "", "Android.Support.V4.Internal.View.ISupportMenuInvoker")]
public interface Android.Support.V4.Internal.View.ISupportMenu {
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenu")]
internal class Android.Support.V4.Internal.View.ISupportMenuInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_hasVisibleItems;
    private IntPtr id_hasVisibleItems;
    private static Delegate cb_add_I;
    private IntPtr id_add_I;
    private static Delegate cb_add_IIII;
    private IntPtr id_add_IIII;
    private static Delegate cb_add_IIILjava_lang_CharSequence_;
    private IntPtr id_add_IIILjava_lang_CharSequence_;
    private static Delegate cb_add_Ljava_lang_CharSequence_;
    private IntPtr id_add_Ljava_lang_CharSequence_;
    private static Delegate cb_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private IntPtr id_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private static Delegate cb_addSubMenu_I;
    private IntPtr id_addSubMenu_I;
    private static Delegate cb_addSubMenu_IIII;
    private IntPtr id_addSubMenu_IIII;
    private static Delegate cb_addSubMenu_IIILjava_lang_CharSequence_;
    private IntPtr id_addSubMenu_IIILjava_lang_CharSequence_;
    private static Delegate cb_addSubMenu_Ljava_lang_CharSequence_;
    private IntPtr id_addSubMenu_Ljava_lang_CharSequence_;
    private static Delegate cb_clear;
    private IntPtr id_clear;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static Delegate cb_findItem_I;
    private IntPtr id_findItem_I;
    private static Delegate cb_getItem_I;
    private IntPtr id_getItem_I;
    private static Delegate cb_isShortcutKey_ILandroid_view_KeyEvent_;
    private IntPtr id_isShortcutKey_ILandroid_view_KeyEvent_;
    private static Delegate cb_performIdentifierAction_II;
    private IntPtr id_performIdentifierAction_II;
    private static Delegate cb_performShortcut_ILandroid_view_KeyEvent_I;
    private IntPtr id_performShortcut_ILandroid_view_KeyEvent_I;
    private static Delegate cb_removeGroup_I;
    private IntPtr id_removeGroup_I;
    private static Delegate cb_removeItem_I;
    private IntPtr id_removeItem_I;
    private static Delegate cb_setGroupCheckable_IZZ;
    private IntPtr id_setGroupCheckable_IZZ;
    private static Delegate cb_setGroupEnabled_IZ;
    private IntPtr id_setGroupEnabled_IZ;
    private static Delegate cb_setGroupVisible_IZ;
    private IntPtr id_setGroupVisible_IZ;
    private static Delegate cb_setQwertyMode_Z;
    private IntPtr id_setQwertyMode_Z;
    private static Delegate cb_size;
    private IntPtr id_size;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, int, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`11<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr, IntPtr, int, IntPtr, int> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, int, IntPtr> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, IntPtr, bool> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, int, bool> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, int, IntPtr, int, bool> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, int, bool, bool> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, bool> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, bool> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache17;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasVisibleItems { get; }
    public ISupportMenuInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportMenuInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ISupportMenu GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetHasVisibleItemsHandler();
    private static bool n_GetHasVisibleItems(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasVisibleItems();
    private static Delegate GetAdd_IHandler();
    private static IntPtr n_Add_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual IMenuItem Add(int titleRes);
    private static Delegate GetAdd_IIIIHandler();
    private static IntPtr n_Add_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, int titleRes);
    private static Delegate GetAdd_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_Add_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, ICharSequence title);
    private static Delegate GetAdd_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_Add_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem Add(ICharSequence title);
    private static Delegate GetAddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_Handler();
    private static int n_AddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_caller, IntPtr native_specifics, IntPtr native_intent, int native_flags, IntPtr native_outSpecificItems);
    public sealed virtual int AddIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, MenuAppendFlags flags, IMenuItem[] outSpecificItems);
    private static Delegate GetAddSubMenu_IHandler();
    private static IntPtr n_AddSubMenu_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int titleRes);
    private static Delegate GetAddSubMenu_IIIIHandler();
    private static IntPtr n_AddSubMenu_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, int titleRes);
    private static Delegate GetAddSubMenu_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, ICharSequence title);
    private static Delegate GetAddSubMenu_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(ICharSequence title);
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
    private static Delegate GetFindItem_IHandler();
    private static IntPtr n_FindItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual IMenuItem FindItem(int id);
    private static Delegate GetGetItem_IHandler();
    private static IntPtr n_GetItem_I(IntPtr jnienv, IntPtr native__this, int index);
    public sealed virtual IMenuItem GetItem(int index);
    private static Delegate GetIsShortcutKey_ILandroid_view_KeyEvent_Handler();
    private static bool n_IsShortcutKey_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e);
    public sealed virtual bool IsShortcutKey(Keycode keyCode, KeyEvent e);
    private static Delegate GetPerformIdentifierAction_IIHandler();
    private static bool n_PerformIdentifierAction_II(IntPtr jnienv, IntPtr native__this, int id, int native_flags);
    public sealed virtual bool PerformIdentifierAction(int id, MenuPerformFlags flags);
    private static Delegate GetPerformShortcut_ILandroid_view_KeyEvent_IHandler();
    private static bool n_PerformShortcut_ILandroid_view_KeyEvent_I(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e, int native_flags);
    public sealed virtual bool PerformShortcut(Keycode keyCode, KeyEvent e, MenuPerformFlags flags);
    private static Delegate GetRemoveGroup_IHandler();
    private static void n_RemoveGroup_I(IntPtr jnienv, IntPtr native__this, int groupId);
    public sealed virtual void RemoveGroup(int groupId);
    private static Delegate GetRemoveItem_IHandler();
    private static void n_RemoveItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual void RemoveItem(int id);
    private static Delegate GetSetGroupCheckable_IZZHandler();
    private static void n_SetGroupCheckable_IZZ(IntPtr jnienv, IntPtr native__this, int group, bool checkable, bool exclusive);
    public sealed virtual void SetGroupCheckable(int group, bool checkable, bool exclusive);
    private static Delegate GetSetGroupEnabled_IZHandler();
    private static void n_SetGroupEnabled_IZ(IntPtr jnienv, IntPtr native__this, int group, bool enabled);
    public sealed virtual void SetGroupEnabled(int group, bool enabled);
    private static Delegate GetSetGroupVisible_IZHandler();
    private static void n_SetGroupVisible_IZ(IntPtr jnienv, IntPtr native__this, int group, bool visible);
    public sealed virtual void SetGroupVisible(int group, bool visible);
    private static Delegate GetSetQwertyMode_ZHandler();
    private static void n_SetQwertyMode_Z(IntPtr jnienv, IntPtr native__this, bool isQwerty);
    public sealed virtual void SetQwertyMode(bool isQwerty);
    private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Size();
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenuItem", "", "Android.Support.V4.Internal.View.ISupportMenuItemInvoker")]
public interface Android.Support.V4.Internal.View.ISupportMenuItem {
    public View ActionView { get; }
    public bool IsActionViewExpanded { get; }
    public ActionProvider SupportActionProvider { get; }
    [RegisterAttribute("getActionView", "()Landroid/view/View;", "GetGetActionViewHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual View get_ActionView();
    [RegisterAttribute("isActionViewExpanded", "()Z", "GetIsActionViewExpandedHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool get_IsActionViewExpanded();
    [RegisterAttribute("getSupportActionProvider", "()Landroid/support/v4/view/ActionProvider;", "GetGetSupportActionProviderHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ActionProvider get_SupportActionProvider();
    [RegisterAttribute("collapseActionView", "()Z", "GetCollapseActionViewHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool CollapseActionView();
    [RegisterAttribute("expandActionView", "()Z", "GetExpandActionViewHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool ExpandActionView();
    [RegisterAttribute("setActionView", "(Landroid/view/View;)Landroid/view/MenuItem;", "GetSetActionView_Landroid_view_View_Handler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual IMenuItem SetActionView(View p0);
    [RegisterAttribute("setActionView", "(I)Landroid/view/MenuItem;", "GetSetActionView_IHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual IMenuItem SetActionView(int p0);
    [RegisterAttribute("setShowAsAction", "(I)V", "GetSetShowAsAction_IHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void SetShowAsAction(ShowAsAction p0);
    [RegisterAttribute("setShowAsActionFlags", "(I)Landroid/view/MenuItem;", "GetSetShowAsActionFlags_IHandler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual IMenuItem SetShowAsActionFlags(ShowAsAction p0);
    [RegisterAttribute("setSupportActionProvider", "(Landroid/support/v4/view/ActionProvider;)Landroid/support/v4/internal/view/SupportMenuItem;", "GetSetSupportActionProvider_Landroid_support_v4_view_ActionProvider_Handler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ISupportMenuItem SetSupportActionProvider(ActionProvider p0);
    [RegisterAttribute("setSupportOnActionExpandListener", "(Landroid/support/v4/view/MenuItemCompat$OnActionExpandListener;)Landroid/support/v4/internal/view/SupportMenuItem;", "GetSetSupportOnActionExpandListener_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_Handler:Android.Support.V4.Internal.View.ISupportMenuItemInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ISupportMenuItem SetSupportOnActionExpandListener(IOnActionExpandListener p0);
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenuItem")]
internal class Android.Support.V4.Internal.View.ISupportMenuItemInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getActionView;
    private IntPtr id_getActionView;
    private static Delegate cb_isActionViewExpanded;
    private IntPtr id_isActionViewExpanded;
    private static Delegate cb_getSupportActionProvider;
    private IntPtr id_getSupportActionProvider;
    private static Delegate cb_collapseActionView;
    private IntPtr id_collapseActionView;
    private static Delegate cb_expandActionView;
    private IntPtr id_expandActionView;
    private static Delegate cb_setActionView_Landroid_view_View_;
    private IntPtr id_setActionView_Landroid_view_View_;
    private static Delegate cb_setActionView_I;
    private IntPtr id_setActionView_I;
    private static Delegate cb_setShowAsAction_I;
    private IntPtr id_setShowAsAction_I;
    private static Delegate cb_setShowAsActionFlags_I;
    private IntPtr id_setShowAsActionFlags_I;
    private static Delegate cb_setSupportActionProvider_Landroid_support_v4_view_ActionProvider_;
    private IntPtr id_setSupportActionProvider_Landroid_support_v4_view_ActionProvider_;
    private static Delegate cb_setSupportOnActionExpandListener_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_;
    private IntPtr id_setSupportOnActionExpandListener_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_;
    private static Delegate cb_getActionProvider;
    private IntPtr id_getActionProvider;
    private static Delegate cb_getAlphabeticShortcut;
    private IntPtr id_getAlphabeticShortcut;
    private static Delegate cb_getGroupId;
    private IntPtr id_getGroupId;
    private static Delegate cb_hasSubMenu;
    private IntPtr id_hasSubMenu;
    private static Delegate cb_getIcon;
    private IntPtr id_getIcon;
    private static Delegate cb_getIntent;
    private IntPtr id_getIntent;
    private static Delegate cb_isCheckable;
    private IntPtr id_isCheckable;
    private static Delegate cb_isChecked;
    private IntPtr id_isChecked;
    private static Delegate cb_isEnabled;
    private IntPtr id_isEnabled;
    private static Delegate cb_isVisible;
    private IntPtr id_isVisible;
    private static Delegate cb_getItemId;
    private IntPtr id_getItemId;
    private static Delegate cb_getMenuInfo;
    private IntPtr id_getMenuInfo;
    private static Delegate cb_getNumericShortcut;
    private IntPtr id_getNumericShortcut;
    private static Delegate cb_getOrder;
    private IntPtr id_getOrder;
    private static Delegate cb_getSubMenu;
    private IntPtr id_getSubMenu;
    private static Delegate cb_getTitle;
    private IntPtr id_getTitle;
    private static Delegate cb_getTitleCondensed;
    private IntPtr id_getTitleCondensed;
    private static Delegate cb_setActionProvider_Landroid_view_ActionProvider_;
    private IntPtr id_setActionProvider_Landroid_view_ActionProvider_;
    private static Delegate cb_setAlphabeticShortcut_C;
    private IntPtr id_setAlphabeticShortcut_C;
    private static Delegate cb_setCheckable_Z;
    private IntPtr id_setCheckable_Z;
    private static Delegate cb_setChecked_Z;
    private IntPtr id_setChecked_Z;
    private static Delegate cb_setEnabled_Z;
    private IntPtr id_setEnabled_Z;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIcon_I;
    private IntPtr id_setIcon_I;
    private static Delegate cb_setIntent_Landroid_content_Intent_;
    private IntPtr id_setIntent_Landroid_content_Intent_;
    private static Delegate cb_setNumericShortcut_C;
    private IntPtr id_setNumericShortcut_C;
    private static Delegate cb_setOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_;
    private IntPtr id_setOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_;
    private static Delegate cb_setOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_;
    private IntPtr id_setOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_;
    private static Delegate cb_setShortcut_CC;
    private IntPtr id_setShortcut_CC;
    private static Delegate cb_setTitle_I;
    private IntPtr id_setTitle_I;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private IntPtr id_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_setTitleCondensed_Ljava_lang_CharSequence_;
    private IntPtr id_setTitleCondensed_Ljava_lang_CharSequence_;
    private static Delegate cb_setVisible_Z;
    private IntPtr id_setVisible_Z;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, char> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, char> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache18;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache19;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1A;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1B;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1C;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, char, IntPtr> <>f__mg$cache1D;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, bool, IntPtr> <>f__mg$cache1E;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, bool, IntPtr> <>f__mg$cache1F;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, bool, IntPtr> <>f__mg$cache20;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache21;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache22;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache23;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, char, IntPtr> <>f__mg$cache24;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache25;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache26;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, char, char, IntPtr> <>f__mg$cache27;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache28;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache29;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache2A;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, bool, IntPtr> <>f__mg$cache2B;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public View ActionView { get; }
    public bool IsActionViewExpanded { get; }
    public ActionProvider SupportActionProvider { get; }
    public ActionProvider ActionProvider { get; }
    public char AlphabeticShortcut { get; }
    public int GroupId { get; }
    public bool HasSubMenu { get; }
    public Drawable Icon { get; }
    public Intent Intent { get; }
    public bool IsCheckable { get; }
    public bool IsChecked { get; }
    public bool IsEnabled { get; }
    public bool IsVisible { get; }
    public int ItemId { get; }
    public IContextMenuContextMenuInfo MenuInfo { get; }
    public char NumericShortcut { get; }
    public int Order { get; }
    public ISubMenu SubMenu { get; }
    public ICharSequence TitleFormatted { get; }
    public ICharSequence TitleCondensedFormatted { get; }
    public ISupportMenuItemInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportMenuItemInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ISupportMenuItem GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetActionViewHandler();
    private static IntPtr n_GetActionView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual View get_ActionView();
    private static Delegate GetIsActionViewExpandedHandler();
    private static bool n_IsActionViewExpanded(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActionViewExpanded();
    private static Delegate GetGetSupportActionProviderHandler();
    private static IntPtr n_GetSupportActionProvider(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ActionProvider get_SupportActionProvider();
    private static Delegate GetCollapseActionViewHandler();
    private static bool n_CollapseActionView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool CollapseActionView();
    private static Delegate GetExpandActionViewHandler();
    private static bool n_ExpandActionView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool ExpandActionView();
    private static Delegate GetSetActionView_Landroid_view_View_Handler();
    private static IntPtr n_SetActionView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual IMenuItem SetActionView(View p0);
    private static Delegate GetSetActionView_IHandler();
    private static IntPtr n_SetActionView_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual IMenuItem SetActionView(int p0);
    private static Delegate GetSetShowAsAction_IHandler();
    private static void n_SetShowAsAction_I(IntPtr jnienv, IntPtr native__this, int native_p0);
    public sealed virtual void SetShowAsAction(ShowAsAction p0);
    private static Delegate GetSetShowAsActionFlags_IHandler();
    private static IntPtr n_SetShowAsActionFlags_I(IntPtr jnienv, IntPtr native__this, int native_p0);
    public sealed virtual IMenuItem SetShowAsActionFlags(ShowAsAction p0);
    private static Delegate GetSetSupportActionProvider_Landroid_support_v4_view_ActionProvider_Handler();
    private static IntPtr n_SetSupportActionProvider_Landroid_support_v4_view_ActionProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual ISupportMenuItem SetSupportActionProvider(ActionProvider p0);
    private static Delegate GetSetSupportOnActionExpandListener_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_Handler();
    private static IntPtr n_SetSupportOnActionExpandListener_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual ISupportMenuItem SetSupportOnActionExpandListener(IOnActionExpandListener p0);
    private static Delegate GetGetActionProviderHandler();
    private static IntPtr n_GetActionProvider(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ActionProvider get_ActionProvider();
    private static Delegate GetGetAlphabeticShortcutHandler();
    private static char n_GetAlphabeticShortcut(IntPtr jnienv, IntPtr native__this);
    public sealed virtual char get_AlphabeticShortcut();
    private static Delegate GetGetGroupIdHandler();
    private static int n_GetGroupId(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_GroupId();
    private static Delegate GetGetHasSubMenuHandler();
    private static bool n_GetHasSubMenu(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasSubMenu();
    private static Delegate GetGetIconHandler();
    private static IntPtr n_GetIcon(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Drawable get_Icon();
    private static Delegate GetGetIntentHandler();
    private static IntPtr n_GetIntent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Intent get_Intent();
    private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCheckable();
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsChecked();
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEnabled();
    private static Delegate GetIsVisibleHandler();
    private static bool n_IsVisible(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsVisible();
    private static Delegate GetGetItemIdHandler();
    private static int n_GetItemId(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_ItemId();
    private static Delegate GetGetMenuInfoHandler();
    private static IntPtr n_GetMenuInfo(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IContextMenuContextMenuInfo get_MenuInfo();
    private static Delegate GetGetNumericShortcutHandler();
    private static char n_GetNumericShortcut(IntPtr jnienv, IntPtr native__this);
    public sealed virtual char get_NumericShortcut();
    private static Delegate GetGetOrderHandler();
    private static int n_GetOrder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_Order();
    private static Delegate GetGetSubMenuHandler();
    private static IntPtr n_GetSubMenu(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISubMenu get_SubMenu();
    private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICharSequence get_TitleFormatted();
    private static Delegate GetGetTitleCondensedHandler();
    private static IntPtr n_GetTitleCondensed(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICharSequence get_TitleCondensedFormatted();
    private static Delegate GetSetActionProvider_Landroid_view_ActionProvider_Handler();
    private static IntPtr n_SetActionProvider_Landroid_view_ActionProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_actionProvider);
    public sealed virtual IMenuItem SetActionProvider(ActionProvider actionProvider);
    private static Delegate GetSetAlphabeticShortcut_CHandler();
    private static IntPtr n_SetAlphabeticShortcut_C(IntPtr jnienv, IntPtr native__this, char alphaChar);
    public sealed virtual IMenuItem SetAlphabeticShortcut(char alphaChar);
    private static Delegate GetSetCheckable_ZHandler();
    private static IntPtr n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    public sealed virtual IMenuItem SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static IntPtr n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    public sealed virtual IMenuItem SetChecked(bool checked);
    private static Delegate GetSetEnabled_ZHandler();
    private static IntPtr n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual IMenuItem SetEnabled(bool enabled);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual IMenuItem SetIcon(Drawable icon);
    private static Delegate GetSetIcon_IHandler();
    private static IntPtr n_SetIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual IMenuItem SetIcon(int iconRes);
    private static Delegate GetSetIntent_Landroid_content_Intent_Handler();
    private static IntPtr n_SetIntent_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    public sealed virtual IMenuItem SetIntent(Intent intent);
    private static Delegate GetSetNumericShortcut_CHandler();
    private static IntPtr n_SetNumericShortcut_C(IntPtr jnienv, IntPtr native__this, char numericChar);
    public sealed virtual IMenuItem SetNumericShortcut(char numericChar);
    private static Delegate GetSetOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_Handler();
    private static IntPtr n_SetOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual IMenuItem SetOnActionExpandListener(IMenuItemOnActionExpandListener listener);
    private static Delegate GetSetOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_Handler();
    private static IntPtr n_SetOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_menuItemClickListener);
    public sealed virtual IMenuItem SetOnMenuItemClickListener(IMenuItemOnMenuItemClickListener menuItemClickListener);
    private static Delegate GetSetShortcut_CCHandler();
    private static IntPtr n_SetShortcut_CC(IntPtr jnienv, IntPtr native__this, char numericChar, char alphaChar);
    public sealed virtual IMenuItem SetShortcut(char numericChar, char alphaChar);
    private static Delegate GetSetTitle_IHandler();
    private static IntPtr n_SetTitle_I(IntPtr jnienv, IntPtr native__this, int title);
    public sealed virtual IMenuItem SetTitle(int title);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem SetTitle(ICharSequence title);
    private static Delegate GetSetTitleCondensed_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetTitleCondensed_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem SetTitleCondensed(ICharSequence title);
    private static Delegate GetSetVisible_ZHandler();
    private static IntPtr n_SetVisible_Z(IntPtr jnienv, IntPtr native__this, bool visible);
    public sealed virtual IMenuItem SetVisible(bool visible);
}
[RegisterAttribute("android/support/v4/internal/view/SupportSubMenu", "", "Android.Support.V4.Internal.View.ISupportSubMenuInvoker")]
public interface Android.Support.V4.Internal.View.ISupportSubMenu {
}
[RegisterAttribute("android/support/v4/internal/view/SupportSubMenu")]
internal class Android.Support.V4.Internal.View.ISupportSubMenuInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_hasVisibleItems;
    private IntPtr id_hasVisibleItems;
    private static Delegate cb_add_I;
    private IntPtr id_add_I;
    private static Delegate cb_add_IIII;
    private IntPtr id_add_IIII;
    private static Delegate cb_add_IIILjava_lang_CharSequence_;
    private IntPtr id_add_IIILjava_lang_CharSequence_;
    private static Delegate cb_add_Ljava_lang_CharSequence_;
    private IntPtr id_add_Ljava_lang_CharSequence_;
    private static Delegate cb_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private IntPtr id_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private static Delegate cb_addSubMenu_I;
    private IntPtr id_addSubMenu_I;
    private static Delegate cb_addSubMenu_IIII;
    private IntPtr id_addSubMenu_IIII;
    private static Delegate cb_addSubMenu_IIILjava_lang_CharSequence_;
    private IntPtr id_addSubMenu_IIILjava_lang_CharSequence_;
    private static Delegate cb_addSubMenu_Ljava_lang_CharSequence_;
    private IntPtr id_addSubMenu_Ljava_lang_CharSequence_;
    private static Delegate cb_clear;
    private IntPtr id_clear;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static Delegate cb_findItem_I;
    private IntPtr id_findItem_I;
    private static Delegate cb_getItem_I;
    private IntPtr id_getItem_I;
    private static Delegate cb_isShortcutKey_ILandroid_view_KeyEvent_;
    private IntPtr id_isShortcutKey_ILandroid_view_KeyEvent_;
    private static Delegate cb_performIdentifierAction_II;
    private IntPtr id_performIdentifierAction_II;
    private static Delegate cb_performShortcut_ILandroid_view_KeyEvent_I;
    private IntPtr id_performShortcut_ILandroid_view_KeyEvent_I;
    private static Delegate cb_removeGroup_I;
    private IntPtr id_removeGroup_I;
    private static Delegate cb_removeItem_I;
    private IntPtr id_removeItem_I;
    private static Delegate cb_setGroupCheckable_IZZ;
    private IntPtr id_setGroupCheckable_IZZ;
    private static Delegate cb_setGroupEnabled_IZ;
    private IntPtr id_setGroupEnabled_IZ;
    private static Delegate cb_setGroupVisible_IZ;
    private IntPtr id_setGroupVisible_IZ;
    private static Delegate cb_setQwertyMode_Z;
    private IntPtr id_setQwertyMode_Z;
    private static Delegate cb_size;
    private IntPtr id_size;
    private static Delegate cb_getItem;
    private IntPtr id_getItem;
    private static Delegate cb_clearHeader;
    private IntPtr id_clearHeader;
    private static Delegate cb_setHeaderIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setHeaderIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setHeaderIcon_I;
    private IntPtr id_setHeaderIcon_I;
    private static Delegate cb_setHeaderTitle_I;
    private IntPtr id_setHeaderTitle_I;
    private static Delegate cb_setHeaderTitle_Ljava_lang_CharSequence_;
    private IntPtr id_setHeaderTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_setHeaderView_Landroid_view_View_;
    private IntPtr id_setHeaderView_Landroid_view_View_;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIcon_I;
    private IntPtr id_setIcon_I;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, int, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`11<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr, IntPtr, int, IntPtr, int> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, int, IntPtr> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, IntPtr, bool> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, int, bool> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, int, IntPtr, int, bool> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, int, bool, bool> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, bool> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, bool> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache18;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache19;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1A;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1B;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1C;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1D;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1E;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1F;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache20;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasVisibleItems { get; }
    public IMenuItem Item { get; }
    public ISupportSubMenuInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportSubMenuInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ISupportSubMenu GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetHasVisibleItemsHandler();
    private static bool n_GetHasVisibleItems(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasVisibleItems();
    private static Delegate GetAdd_IHandler();
    private static IntPtr n_Add_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual IMenuItem Add(int titleRes);
    private static Delegate GetAdd_IIIIHandler();
    private static IntPtr n_Add_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, int titleRes);
    private static Delegate GetAdd_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_Add_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, ICharSequence title);
    private static Delegate GetAdd_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_Add_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem Add(ICharSequence title);
    private static Delegate GetAddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_Handler();
    private static int n_AddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_caller, IntPtr native_specifics, IntPtr native_intent, int native_flags, IntPtr native_outSpecificItems);
    public sealed virtual int AddIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, MenuAppendFlags flags, IMenuItem[] outSpecificItems);
    private static Delegate GetAddSubMenu_IHandler();
    private static IntPtr n_AddSubMenu_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int titleRes);
    private static Delegate GetAddSubMenu_IIIIHandler();
    private static IntPtr n_AddSubMenu_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, int titleRes);
    private static Delegate GetAddSubMenu_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, ICharSequence title);
    private static Delegate GetAddSubMenu_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(ICharSequence title);
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
    private static Delegate GetFindItem_IHandler();
    private static IntPtr n_FindItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual IMenuItem FindItem(int id);
    private static Delegate GetGetItem_IHandler();
    private static IntPtr n_GetItem_I(IntPtr jnienv, IntPtr native__this, int index);
    public sealed virtual IMenuItem GetItem(int index);
    private static Delegate GetIsShortcutKey_ILandroid_view_KeyEvent_Handler();
    private static bool n_IsShortcutKey_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e);
    public sealed virtual bool IsShortcutKey(Keycode keyCode, KeyEvent e);
    private static Delegate GetPerformIdentifierAction_IIHandler();
    private static bool n_PerformIdentifierAction_II(IntPtr jnienv, IntPtr native__this, int id, int native_flags);
    public sealed virtual bool PerformIdentifierAction(int id, MenuPerformFlags flags);
    private static Delegate GetPerformShortcut_ILandroid_view_KeyEvent_IHandler();
    private static bool n_PerformShortcut_ILandroid_view_KeyEvent_I(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e, int native_flags);
    public sealed virtual bool PerformShortcut(Keycode keyCode, KeyEvent e, MenuPerformFlags flags);
    private static Delegate GetRemoveGroup_IHandler();
    private static void n_RemoveGroup_I(IntPtr jnienv, IntPtr native__this, int groupId);
    public sealed virtual void RemoveGroup(int groupId);
    private static Delegate GetRemoveItem_IHandler();
    private static void n_RemoveItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual void RemoveItem(int id);
    private static Delegate GetSetGroupCheckable_IZZHandler();
    private static void n_SetGroupCheckable_IZZ(IntPtr jnienv, IntPtr native__this, int group, bool checkable, bool exclusive);
    public sealed virtual void SetGroupCheckable(int group, bool checkable, bool exclusive);
    private static Delegate GetSetGroupEnabled_IZHandler();
    private static void n_SetGroupEnabled_IZ(IntPtr jnienv, IntPtr native__this, int group, bool enabled);
    public sealed virtual void SetGroupEnabled(int group, bool enabled);
    private static Delegate GetSetGroupVisible_IZHandler();
    private static void n_SetGroupVisible_IZ(IntPtr jnienv, IntPtr native__this, int group, bool visible);
    public sealed virtual void SetGroupVisible(int group, bool visible);
    private static Delegate GetSetQwertyMode_ZHandler();
    private static void n_SetQwertyMode_Z(IntPtr jnienv, IntPtr native__this, bool isQwerty);
    public sealed virtual void SetQwertyMode(bool isQwerty);
    private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Size();
    private static Delegate GetGetItemHandler();
    private static IntPtr n_GetItem(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IMenuItem get_Item();
    private static Delegate GetClearHeaderHandler();
    private static void n_ClearHeader(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearHeader();
    private static Delegate GetSetHeaderIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetHeaderIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual ISubMenu SetHeaderIcon(Drawable icon);
    private static Delegate GetSetHeaderIcon_IHandler();
    private static IntPtr n_SetHeaderIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual ISubMenu SetHeaderIcon(int iconRes);
    private static Delegate GetSetHeaderTitle_IHandler();
    private static IntPtr n_SetHeaderTitle_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu SetHeaderTitle(int titleRes);
    private static Delegate GetSetHeaderTitle_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetHeaderTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu SetHeaderTitle(ICharSequence title);
    private static Delegate GetSetHeaderView_Landroid_view_View_Handler();
    private static IntPtr n_SetHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual ISubMenu SetHeaderView(View view);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual ISubMenu SetIcon(Drawable icon);
    private static Delegate GetSetIcon_IHandler();
    private static IntPtr n_SetIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual ISubMenu SetIcon(int iconRes);
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenu")]
public abstract class Android.Support.V4.Internal.View.SupportMenu : Object {
    [RegisterAttribute("CATEGORY_MASK")]
public static int CategoryMask;
    [RegisterAttribute("CATEGORY_SHIFT")]
public static int CategoryShift;
    [RegisterAttribute("FLAG_KEEP_OPEN_ON_SUBMENU_OPENED")]
public static int FlagKeepOpenOnSubmenuOpened;
    [RegisterAttribute("USER_MASK")]
public static int UserMask;
    [RegisterAttribute("USER_SHIFT")]
public static int UserShift;
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenu")]
[ObsoleteAttribute("Use the 'SupportMenu' type. This type will be removed in a future release.")]
public abstract class Android.Support.V4.Internal.View.SupportMenuConsts : SupportMenu {
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenuItem")]
public abstract class Android.Support.V4.Internal.View.SupportMenuItem : Object {
    [RegisterAttribute("SHOW_AS_ACTION_ALWAYS")]
public static int ShowAsActionAlways;
    [RegisterAttribute("SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW")]
public static int ShowAsActionCollapseActionView;
    [RegisterAttribute("SHOW_AS_ACTION_IF_ROOM")]
public static int ShowAsActionIfRoom;
    [RegisterAttribute("SHOW_AS_ACTION_NEVER")]
public static int ShowAsActionNever;
    [RegisterAttribute("SHOW_AS_ACTION_WITH_TEXT")]
public static int ShowAsActionWithText;
}
[RegisterAttribute("android/support/v4/internal/view/SupportMenuItem")]
[ObsoleteAttribute("Use the 'SupportMenuItem' type. This type will be removed in a future release.")]
public abstract class Android.Support.V4.Internal.View.SupportMenuItemConsts : SupportMenuItem {
}
[RegisterAttribute("android/support/v4/net/ConnectivityManagerCompat")]
public class Android.Support.V4.Net.ConnectivityManagerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getNetworkInfoFromBroadcast_Landroid_net_ConnectivityManager_Landroid_content_Intent_;
    private static IntPtr id_isActiveNetworkMetered_Landroid_net_ConnectivityManager_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ConnectivityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getNetworkInfoFromBroadcast", "(Landroid/net/ConnectivityManager;Landroid/content/Intent;)Landroid/net/NetworkInfo;", "")]
public static NetworkInfo GetNetworkInfoFromBroadcast(ConnectivityManager cm, Intent intent);
    [RegisterAttribute("isActiveNetworkMetered", "(Landroid/net/ConnectivityManager;)Z", "")]
public static bool IsActiveNetworkMetered(ConnectivityManager cm);
}
[RegisterAttribute("android/support/v4/net/TrafficStatsCompat")]
public class Android.Support.V4.Net.TrafficStatsCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getThreadStatsTag;
    private static IntPtr id_setThreadStatsTag_I;
    private static IntPtr id_clearThreadStatsTag;
    private static IntPtr id_incrementOperationCount_I;
    private static IntPtr id_incrementOperationCount_II;
    private static IntPtr id_tagDatagramSocket_Ljava_net_DatagramSocket_;
    private static IntPtr id_tagSocket_Ljava_net_Socket_;
    private static IntPtr id_untagDatagramSocket_Ljava_net_DatagramSocket_;
    private static IntPtr id_untagSocket_Ljava_net_Socket_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public static int ThreadStatsTag { get; public set; }
    internal TrafficStatsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getThreadStatsTag", "()I", "GetGetThreadStatsTagHandler")]
public static int get_ThreadStatsTag();
    [RegisterAttribute("setThreadStatsTag", "(I)V", "GetSetThreadStatsTag_IHandler")]
public static void set_ThreadStatsTag(int value);
    [RegisterAttribute("clearThreadStatsTag", "()V", "")]
public static void ClearThreadStatsTag();
    [RegisterAttribute("incrementOperationCount", "(I)V", "")]
public static void IncrementOperationCount(int operationCount);
    [RegisterAttribute("incrementOperationCount", "(II)V", "")]
public static void IncrementOperationCount(int tag, int operationCount);
    [RegisterAttribute("tagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void TagDatagramSocket(DatagramSocket socket);
    [RegisterAttribute("tagSocket", "(Ljava/net/Socket;)V", "")]
public static void TagSocket(Socket socket);
    [RegisterAttribute("untagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void UntagDatagramSocket(DatagramSocket socket);
    [RegisterAttribute("untagSocket", "(Ljava/net/Socket;)V", "")]
public static void UntagSocket(Socket socket);
}
[RegisterAttribute("android/support/v4/net/TrafficStatsCompatApi24")]
public class Android.Support.V4.Net.TrafficStatsCompatApi24 : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_tagDatagramSocket_Ljava_net_DatagramSocket_;
    private static IntPtr id_untagDatagramSocket_Ljava_net_DatagramSocket_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TrafficStatsCompatApi24(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("tagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void TagDatagramSocket(DatagramSocket socket);
    [RegisterAttribute("untagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void UntagDatagramSocket(DatagramSocket socket);
}
[RegisterAttribute("android/support/v4/os/AsyncTaskCompat")]
public class Android.Support.V4.OS.AsyncTaskCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_executeParallel_Landroid_os_AsyncTask_arrayLjava_lang_Object_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AsyncTaskCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("executeParallel", "(Landroid/os/AsyncTask;[Ljava/lang/Object;)Landroid/os/AsyncTask;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static AsyncTask ExecuteParallel(AsyncTask task, Object[] params);
}
[RegisterAttribute("android/support/v4/os/BuildCompat")]
public class Android.Support.V4.OS.BuildCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_isAtLeastN;
    private static IntPtr id_isAtLeastNMR1;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public static bool IsAtLeastN { get; }
    public static bool IsAtLeastNMR1 { get; }
    protected BuildCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAtLeastN", "()Z", "GetIsAtLeastNHandler")]
public static bool get_IsAtLeastN();
    [RegisterAttribute("isAtLeastNMR1", "()Z", "GetIsAtLeastNMR1Handler")]
public static bool get_IsAtLeastNMR1();
}
[RegisterAttribute("android/support/v4/os/CancellationSignal")]
public class Android.Support.V4.OS.CancellationSignal : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_getCancellationSignalObject;
    private static IntPtr id_isCanceled;
    private static IntPtr id_cancel;
    private static IntPtr id_setOnCancelListener_Landroid_support_v4_os_CancellationSignal_OnCancelListener_;
    private static IntPtr id_throwIfCanceled;
    private WeakReference weak_implementor_SetOnCancelListener;
    [CompilerGeneratedAttribute]
private static Func`2<IOnCancelListenerImplementor, bool> <>f__mg$cache0;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Object CancellationSignalObject { get; }
    public bool IsCanceled { get; }
    internal CancellationSignal(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCancellationSignalObject", "()Ljava/lang/Object;", "GetGetCancellationSignalObjectHandler")]
public Object get_CancellationSignalObject();
    [RegisterAttribute("isCanceled", "()Z", "GetIsCanceledHandler")]
public bool get_IsCanceled();
    [RegisterAttribute("cancel", "()V", "")]
public void Cancel();
    [RegisterAttribute("setOnCancelListener", "(Landroid/support/v4/os/CancellationSignal$OnCancelListener;)V", "")]
public void SetOnCancelListener(IOnCancelListener listener);
    [RegisterAttribute("throwIfCanceled", "()V", "")]
public void ThrowIfCanceled();
    public void add_CancelEvent(EventHandler value);
    public void remove_CancelEvent(EventHandler value);
    private IOnCancelListenerImplementor __CreateIOnCancelListenerImplementor();
}
[RegisterAttribute("android/support/v4/os/EnvironmentCompat")]
public class Android.Support.V4.OS.EnvironmentCompat : Object {
    [RegisterAttribute("MEDIA_UNKNOWN")]
public static string MediaUnknown;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getStorageState_Ljava_io_File_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal EnvironmentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getStorageState", "(Ljava/io/File;)Ljava/lang/String;", "")]
public static string GetStorageState(File path);
}
[RegisterAttribute("android/support/v4/os/ParcelableCompatCreatorCallbacks", "", "Android.Support.V4.OS.IParcelableCompatCreatorCallbacksInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Android.Support.V4.OS.IParcelableCompatCreatorCallbacks {
    [RegisterAttribute("createFromParcel", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)Ljava/lang/Object;", "GetCreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_Handler:Android.Support.V4.OS.IParcelableCompatCreatorCallbacksInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Object CreateFromParcel(Parcel in, ClassLoader loader);
    [RegisterAttribute("newArray", "(I)[Ljava/lang/Object;", "GetNewArray_IHandler:Android.Support.V4.OS.IParcelableCompatCreatorCallbacksInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Object[] NewArray(int size);
}
[RegisterAttribute("android/support/v4/os/ParcelableCompatCreatorCallbacks")]
internal class Android.Support.V4.OS.IParcelableCompatCreatorCallbacksInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_createFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_;
    private IntPtr id_createFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_;
    private static Delegate cb_newArray_I;
    private IntPtr id_newArray_I;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IParcelableCompatCreatorCallbacksInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IParcelableCompatCreatorCallbacksInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IParcelableCompatCreatorCallbacks GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_Handler();
    private static IntPtr n_CreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_(IntPtr jnienv, IntPtr native__this, IntPtr native__in, IntPtr native_loader);
    public sealed virtual Object CreateFromParcel(Parcel in, ClassLoader loader);
    private static Delegate GetNewArray_IHandler();
    private static IntPtr n_NewArray_I(IntPtr jnienv, IntPtr native__this, int size);
    public sealed virtual Object[] NewArray(int size);
}
[RegisterAttribute("android/support/v4/os/IResultReceiver", "", "Android.Support.V4.OS.IResultReceiverInvoker")]
public interface Android.Support.V4.OS.IResultReceiver {
    [RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler:Android.Support.V4.OS.IResultReceiverInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void Send(int p0, Bundle p1);
}
[RegisterAttribute("android/support/v4/os/IResultReceiver")]
internal class Android.Support.V4.OS.IResultReceiverInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_send_ILandroid_os_Bundle_;
    private IntPtr id_send_ILandroid_os_Bundle_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IResultReceiverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResultReceiverInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IResultReceiver GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    public sealed virtual void Send(int p0, Bundle p1);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[RegisterAttribute("android/support/v4/os/OperationCanceledException")]
public class Android.Support.V4.OS.OperationCanceledException : RuntimeException {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected OperationCanceledException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public OperationCanceledException(string message);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/os/ParcelableCompat")]
public class Android.Support.V4.OS.ParcelableCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_newCreator_Landroid_support_v4_os_ParcelableCompatCreatorCallbacks_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ParcelableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("newCreator", "(Landroid/support/v4/os/ParcelableCompatCreatorCallbacks;)Landroid/os/Parcelable$Creator;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IParcelableCreator NewCreator(IParcelableCompatCreatorCallbacks callbacks);
}
[RegisterAttribute("android/support/v4/os/ResultReceiver")]
public class Android.Support.V4.OS.ResultReceiver : Object {
    private static IntPtr CREATOR_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_os_Handler_;
    private static Delegate cb_describeContents;
    private static IntPtr id_describeContents;
    private static Delegate cb_onReceiveResult_ILandroid_os_Bundle_;
    private static IntPtr id_onReceiveResult_ILandroid_os_Bundle_;
    private static Delegate cb_send_ILandroid_os_Bundle_;
    private static IntPtr id_send_ILandroid_os_Bundle_;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache3;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ResultReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Handler;)V", "")]
public ResultReceiver(Handler handler);
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetOnReceiveResult_ILandroid_os_Bundle_Handler();
    private static void n_OnReceiveResult_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [RegisterAttribute("onReceiveResult", "(ILandroid/os/Bundle;)V", "GetOnReceiveResult_ILandroid_os_Bundle_Handler")]
protected virtual void OnReceiveResult(int resultCode, Bundle resultData);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int resultCode, Bundle resultData);
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native__out, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel out, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/os/IResultReceiver$Stub")]
public abstract class Android.Support.V4.OS.ResultReceiverStub : Binder {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_asBinder;
    private static IntPtr id_asBinder;
    private static IntPtr id_asInterface_Landroid_os_IBinder_;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static IntPtr id_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_send_ILandroid_os_Bundle_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, IntPtr, IntPtr, int, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache2;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ResultReceiverStub(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/os/IResultReceiver;", "")]
public static IResultReceiver AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public abstract virtual void Send(int p0, Bundle p1);
}
[RegisterAttribute("android/support/v4/os/IResultReceiver$Stub")]
internal class Android.Support.V4.OS.ResultReceiverStubInvoker : ResultReceiverStub {
    private static IntPtr id_send_ILandroid_os_Bundle_;
    protected Type ThresholdType { get; }
    public ResultReceiverStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int p0, Bundle p1);
}
[RegisterAttribute("android/support/v4/os/TraceCompat")]
public class Android.Support.V4.OS.TraceCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_beginSection_Ljava_lang_String_;
    private static IntPtr id_endSection;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TraceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("beginSection", "(Ljava/lang/String;)V", "")]
public static void BeginSection(string sectionName);
    [RegisterAttribute("endSection", "()V", "")]
public static void EndSection();
}
[RegisterAttribute("android/support/v4/os/UserManagerCompat")]
public class Android.Support.V4.OS.UserManagerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_isUserRunningAndLocked_Landroid_content_Context_;
    private static IntPtr id_isUserRunningAndUnlocked_Landroid_content_Context_;
    private static IntPtr id_isUserUnlocked_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected UserManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isUserRunningAndLocked", "(Landroid/content/Context;)Z", "")]
public static bool IsUserRunningAndLocked(Context context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isUserRunningAndUnlocked", "(Landroid/content/Context;)Z", "")]
public static bool IsUserRunningAndUnlocked(Context context);
    [RegisterAttribute("isUserUnlocked", "(Landroid/content/Context;)Z", "")]
public static bool IsUserUnlocked(Context context);
}
[RegisterAttribute("android/support/v4/os/UserManagerCompatApi24")]
public class Android.Support.V4.OS.UserManagerCompatApi24 : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_isUserUnlocked_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected UserManagerCompatApi24(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isUserUnlocked", "(Landroid/content/Context;)Z", "")]
public static bool IsUserUnlocked(Context context);
}
[RegisterAttribute("android/support/v4/text/ICUCompat")]
public class Android.Support.V4.Text.ICUCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_maximizeAndGetScript_Ljava_util_Locale_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ICUCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("maximizeAndGetScript", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string MaximizeAndGetScript(Locale locale);
}
[RegisterAttribute("android/support/v4/text/TextDirectionHeuristicCompat", "", "Android.Support.V4.Text.ITextDirectionHeuristicCompatInvoker")]
public interface Android.Support.V4.Text.ITextDirectionHeuristicCompat {
    [RegisterAttribute("isRtl", "([CII)Z", "GetIsRtl_arrayCIIHandler:Android.Support.V4.Text.ITextDirectionHeuristicCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool IsRtl(Char[] array, int start, int count);
    [RegisterAttribute("isRtl", "(Ljava/lang/CharSequence;II)Z", "GetIsRtl_Ljava_lang_CharSequence_IIHandler:Android.Support.V4.Text.ITextDirectionHeuristicCompatInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool IsRtl(ICharSequence cs, int start, int count);
}
[ExtensionAttribute]
public static class Android.Support.V4.Text.ITextDirectionHeuristicCompatExtensions : object {
    [ExtensionAttribute]
public static bool IsRtl(ITextDirectionHeuristicCompat self, string cs, int start, int count);
}
[RegisterAttribute("android/support/v4/text/TextDirectionHeuristicCompat")]
internal class Android.Support.V4.Text.ITextDirectionHeuristicCompatInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_isRtl_arrayCII;
    private IntPtr id_isRtl_arrayCII;
    private static Delegate cb_isRtl_Ljava_lang_CharSequence_II;
    private IntPtr id_isRtl_Ljava_lang_CharSequence_II;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, int, int, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, int, int, bool> <>f__mg$cache1;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ITextDirectionHeuristicCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITextDirectionHeuristicCompatInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ITextDirectionHeuristicCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsRtl_arrayCIIHandler();
    private static bool n_IsRtl_arrayCII(IntPtr jnienv, IntPtr native__this, IntPtr native_array, int start, int count);
    public sealed virtual bool IsRtl(Char[] array, int start, int count);
    private static Delegate GetIsRtl_Ljava_lang_CharSequence_IIHandler();
    private static bool n_IsRtl_Ljava_lang_CharSequence_II(IntPtr jnienv, IntPtr native__this, IntPtr native_cs, int start, int count);
    public sealed virtual bool IsRtl(ICharSequence cs, int start, int count);
}
[RegisterAttribute("android/support/v4/text/TextDirectionHeuristicsCompat")]
public class Android.Support.V4.Text.TextDirectionHeuristicsCompat : Object {
    private static IntPtr ANYRTL_LTR_jfieldId;
    private static IntPtr FIRSTSTRONG_LTR_jfieldId;
    private static IntPtr FIRSTSTRONG_RTL_jfieldId;
    private static IntPtr LOCALE_jfieldId;
    private static IntPtr LTR_jfieldId;
    private static IntPtr RTL_jfieldId;
    internal static IntPtr java_class_handle;
    [RegisterAttribute("ANYRTL_LTR")]
public static ITextDirectionHeuristicCompat AnyrtlLtr { get; }
    [RegisterAttribute("FIRSTSTRONG_LTR")]
public static ITextDirectionHeuristicCompat FirststrongLtr { get; }
    [RegisterAttribute("FIRSTSTRONG_RTL")]
public static ITextDirectionHeuristicCompat FirststrongRtl { get; }
    [RegisterAttribute("LOCALE")]
public static ITextDirectionHeuristicCompat Locale { get; }
    [RegisterAttribute("LTR")]
public static ITextDirectionHeuristicCompat Ltr { get; }
    [RegisterAttribute("RTL")]
public static ITextDirectionHeuristicCompat Rtl { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TextDirectionHeuristicsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static ITextDirectionHeuristicCompat get_AnyrtlLtr();
    public static ITextDirectionHeuristicCompat get_FirststrongLtr();
    public static ITextDirectionHeuristicCompat get_FirststrongRtl();
    public static ITextDirectionHeuristicCompat get_Locale();
    public static ITextDirectionHeuristicCompat get_Ltr();
    public static ITextDirectionHeuristicCompat get_Rtl();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[ExtensionAttribute]
public static class Android.Support.V4.Text.TextDirectionHeuristicsCompatITextDirectionAlgorithmExtensions : object {
    [ExtensionAttribute]
public static int CheckRtl(ITextDirectionAlgorithm self, string p0, int p1, int p2);
}
[RegisterAttribute("android/support/v4/text/TextUtilsCompat")]
public class Android.Support.V4.Text.TextUtilsCompat : Object {
    private static IntPtr ROOT_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getLayoutDirectionFromLocale_Ljava_util_Locale_;
    private static IntPtr id_htmlEncode_Ljava_lang_String_;
    [RegisterAttribute("ROOT")]
public static Locale Root { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TextUtilsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static Locale get_Root();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLayoutDirectionFromLocale", "(Ljava/util/Locale;)I", "")]
public static int GetLayoutDirectionFromLocale(Locale locale);
    [RegisterAttribute("htmlEncode", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public static string HtmlEncode(string s);
}
[RegisterAttribute("android/support/v4/text/util/LinkifyCompat")]
public class Android.Support.V4.Text.Util.LinkifyCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_addLinks_Landroid_text_Spannable_I;
    private static IntPtr id_addLinks_Landroid_text_Spannable_Ljava_util_regex_Pattern_Ljava_lang_String_;
    private static IntPtr id_addLinks_Landroid_text_Spannable_Ljava_util_regex_Pattern_Ljava_lang_String_Landroid_text_util_Linkify_MatchFilter_Landroid_text_util_Linkify_TransformFilter_;
    private static IntPtr id_addLinks_Landroid_text_Spannable_Ljava_util_regex_Pattern_Ljava_lang_String_arrayLjava_lang_String_Landroid_text_util_Linkify_MatchFilter_Landroid_text_util_Linkify_TransformFilter_;
    private static IntPtr id_addLinks_Landroid_widget_TextView_I;
    private static IntPtr id_addLinks_Landroid_widget_TextView_Ljava_util_regex_Pattern_Ljava_lang_String_;
    private static IntPtr id_addLinks_Landroid_widget_TextView_Ljava_util_regex_Pattern_Ljava_lang_String_Landroid_text_util_Linkify_MatchFilter_Landroid_text_util_Linkify_TransformFilter_;
    private static IntPtr id_addLinks_Landroid_widget_TextView_Ljava_util_regex_Pattern_Ljava_lang_String_arrayLjava_lang_String_Landroid_text_util_Linkify_MatchFilter_Landroid_text_util_Linkify_TransformFilter_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal LinkifyCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;I)Z", "")]
public static bool AddLinks(ISpannable text, int mask);
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z", "")]
public static bool AddLinks(ISpannable text, Pattern pattern, string scheme);
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z", "")]
public static bool AddLinks(ISpannable spannable, Pattern pattern, string scheme, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z", "")]
public static bool AddLinks(ISpannable spannable, Pattern pattern, string defaultScheme, String[] schemes, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;I)Z", "")]
public static bool AddLinks(TextView text, int mask);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string scheme);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string scheme, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string defaultScheme, String[] schemes, IMatchFilter matchFilter, ITransformFilter transformFilter);
}
[RegisterAttribute("android/support/v4/util/ArrayMap")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.ArrayMap : SimpleArrayMap {
    private static Delegate cb_entrySet;
    private static IntPtr id_entrySet;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_Landroid_support_v4_util_SimpleArrayMap_;
    private static IntPtr id_ctor_I;
    private static Delegate cb_containsAll_Ljava_util_Collection_;
    private static IntPtr id_containsAll_Ljava_util_Collection_;
    private static Delegate cb_keySet;
    private static IntPtr id_keySet;
    private static Delegate cb_putAll_Ljava_util_Map_;
    private static IntPtr id_putAll_Ljava_util_Map_;
    private static Delegate cb_removeAll_Ljava_util_Collection_;
    private static IntPtr id_removeAll_Ljava_util_Collection_;
    private static Delegate cb_retainAll_Ljava_util_Collection_;
    private static IntPtr id_retainAll_Ljava_util_Collection_;
    private static Delegate cb_values;
    private static IntPtr id_values;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ArrayMap(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/v4/util/SimpleArrayMap;)V", "")]
public ArrayMap(SimpleArrayMap map);
    [RegisterAttribute(".ctor", "(I)V", "")]
public ArrayMap(int capacity);
    private static Delegate GetEntrySetHandler();
    private static IntPtr n_EntrySet(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("entrySet", "()Ljava/util/Set;", "GetEntrySetHandler")]
public virtual ICollection EntrySet();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetContainsAll_Ljava_util_Collection_Handler();
    private static bool n_ContainsAll_Ljava_util_Collection_(IntPtr jnienv, IntPtr native__this, IntPtr native_collection);
    [RegisterAttribute("containsAll", "(Ljava/util/Collection;)Z", "GetContainsAll_Ljava_util_Collection_Handler")]
public virtual bool ContainsAll(ICollection`1<object> collection);
    private static Delegate GetKeySetHandler();
    private static IntPtr n_KeySet(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("keySet", "()Ljava/util/Set;", "GetKeySetHandler")]
public virtual ICollection KeySet();
    private static Delegate GetPutAll_Ljava_util_Map_Handler();
    private static void n_PutAll_Ljava_util_Map_(IntPtr jnienv, IntPtr native__this, IntPtr native_map);
    [RegisterAttribute("putAll", "(Ljava/util/Map;)V", "GetPutAll_Ljava_util_Map_Handler")]
public virtual void PutAll(IDictionary map);
    private static Delegate GetRemoveAll_Ljava_util_Collection_Handler();
    private static bool n_RemoveAll_Ljava_util_Collection_(IntPtr jnienv, IntPtr native__this, IntPtr native_collection);
    [RegisterAttribute("removeAll", "(Ljava/util/Collection;)Z", "GetRemoveAll_Ljava_util_Collection_Handler")]
public virtual bool RemoveAll(ICollection`1<object> collection);
    private static Delegate GetRetainAll_Ljava_util_Collection_Handler();
    private static bool n_RetainAll_Ljava_util_Collection_(IntPtr jnienv, IntPtr native__this, IntPtr native_collection);
    [RegisterAttribute("retainAll", "(Ljava/util/Collection;)Z", "GetRetainAll_Ljava_util_Collection_Handler")]
public virtual bool RetainAll(ICollection`1<object> collection);
    private static Delegate GetValuesHandler();
    private static IntPtr n_Values(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("values", "()Ljava/util/Collection;", "GetValuesHandler")]
public virtual ICollection Values();
}
[RegisterAttribute("android/support/v4/util/AtomicFile")]
public class Android.Support.V4.Util.AtomicFile : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Ljava_io_File_;
    private static Delegate cb_getBaseFile;
    private static IntPtr id_getBaseFile;
    private static Delegate cb_delete;
    private static IntPtr id_delete;
    private static Delegate cb_failWrite_Ljava_io_FileOutputStream_;
    private static IntPtr id_failWrite_Ljava_io_FileOutputStream_;
    private static Delegate cb_finishWrite_Ljava_io_FileOutputStream_;
    private static IntPtr id_finishWrite_Ljava_io_FileOutputStream_;
    private static Delegate cb_openRead;
    private static IntPtr id_openRead;
    private static Delegate cb_readFully;
    private static IntPtr id_readFully;
    private static Delegate cb_startWrite;
    private static IntPtr id_startWrite;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public File BaseFile { get; }
    protected AtomicFile(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/File;)V", "")]
public AtomicFile(File baseName);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBaseFileHandler();
    private static IntPtr n_GetBaseFile(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBaseFile", "()Ljava/io/File;", "GetGetBaseFileHandler")]
public virtual File get_BaseFile();
    private static Delegate GetDeleteHandler();
    private static void n_Delete(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("delete", "()V", "GetDeleteHandler")]
public virtual void Delete();
    private static Delegate GetFailWrite_Ljava_io_FileOutputStream_Handler();
    private static void n_FailWrite_Ljava_io_FileOutputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_str);
    [RegisterAttribute("failWrite", "(Ljava/io/FileOutputStream;)V", "GetFailWrite_Ljava_io_FileOutputStream_Handler")]
public virtual void FailWrite(Stream str);
    private static Delegate GetFinishWrite_Ljava_io_FileOutputStream_Handler();
    private static void n_FinishWrite_Ljava_io_FileOutputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_str);
    [RegisterAttribute("finishWrite", "(Ljava/io/FileOutputStream;)V", "GetFinishWrite_Ljava_io_FileOutputStream_Handler")]
public virtual void FinishWrite(Stream str);
    private static Delegate GetOpenReadHandler();
    private static IntPtr n_OpenRead(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("openRead", "()Ljava/io/FileInputStream;", "GetOpenReadHandler")]
public virtual Stream OpenRead();
    private static Delegate GetReadFullyHandler();
    private static IntPtr n_ReadFully(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readFully", "()[B", "GetReadFullyHandler")]
public virtual Byte[] ReadFully();
    private static Delegate GetStartWriteHandler();
    private static IntPtr n_StartWrite(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("startWrite", "()Ljava/io/FileOutputStream;", "GetStartWriteHandler")]
public virtual Stream StartWrite();
}
[RegisterAttribute("android/support/v4/util/CircularArray")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.CircularArray : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_I;
    private static IntPtr id_getFirst;
    private static IntPtr id_isEmpty;
    private static IntPtr id_getLast;
    private static IntPtr id_addFirst_Ljava_lang_Object_;
    private static IntPtr id_addLast_Ljava_lang_Object_;
    private static IntPtr id_clear;
    private static IntPtr id_get_I;
    private static IntPtr id_popFirst;
    private static IntPtr id_popLast;
    private static IntPtr id_removeFromEnd_I;
    private static IntPtr id_removeFromStart_I;
    private static IntPtr id_size;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Object First { get; }
    public bool IsEmpty { get; }
    public Object Last { get; }
    internal CircularArray(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public CircularArray(int minCapacity);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getFirst", "()Ljava/lang/Object;", "GetGetFirstHandler")]
public Object get_First();
    [RegisterAttribute("isEmpty", "()Z", "GetIsEmptyHandler")]
public bool get_IsEmpty();
    [RegisterAttribute("getLast", "()Ljava/lang/Object;", "GetGetLastHandler")]
public Object get_Last();
    [RegisterAttribute("addFirst", "(Ljava/lang/Object;)V", "")]
public void AddFirst(Object e);
    [RegisterAttribute("addLast", "(Ljava/lang/Object;)V", "")]
public void AddLast(Object e);
    [RegisterAttribute("clear", "()V", "")]
public void Clear();
    [RegisterAttribute("get", "(I)Ljava/lang/Object;", "")]
public Object Get(int n);
    [RegisterAttribute("popFirst", "()Ljava/lang/Object;", "")]
public Object PopFirst();
    [RegisterAttribute("popLast", "()Ljava/lang/Object;", "")]
public Object PopLast();
    [RegisterAttribute("removeFromEnd", "(I)V", "")]
public void RemoveFromEnd(int numOfElements);
    [RegisterAttribute("removeFromStart", "(I)V", "")]
public void RemoveFromStart(int numOfElements);
    [RegisterAttribute("size", "()I", "")]
public int Size();
}
[RegisterAttribute("android/support/v4/util/CircularIntArray")]
public class Android.Support.V4.Util.CircularIntArray : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_I;
    private static IntPtr id_getFirst;
    private static IntPtr id_isEmpty;
    private static IntPtr id_getLast;
    private static IntPtr id_addFirst_I;
    private static IntPtr id_addLast_I;
    private static IntPtr id_clear;
    private static IntPtr id_get_I;
    private static IntPtr id_popFirst;
    private static IntPtr id_popLast;
    private static IntPtr id_removeFromEnd_I;
    private static IntPtr id_removeFromStart_I;
    private static IntPtr id_size;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int First { get; }
    public bool IsEmpty { get; }
    public int Last { get; }
    internal CircularIntArray(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public CircularIntArray(int minCapacity);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getFirst", "()I", "GetGetFirstHandler")]
public int get_First();
    [RegisterAttribute("isEmpty", "()Z", "GetIsEmptyHandler")]
public bool get_IsEmpty();
    [RegisterAttribute("getLast", "()I", "GetGetLastHandler")]
public int get_Last();
    [RegisterAttribute("addFirst", "(I)V", "")]
public void AddFirst(int e);
    [RegisterAttribute("addLast", "(I)V", "")]
public void AddLast(int e);
    [RegisterAttribute("clear", "()V", "")]
public void Clear();
    [RegisterAttribute("get", "(I)I", "")]
public int Get(int n);
    [RegisterAttribute("popFirst", "()I", "")]
public int PopFirst();
    [RegisterAttribute("popLast", "()I", "")]
public int PopLast();
    [RegisterAttribute("removeFromEnd", "(I)V", "")]
public void RemoveFromEnd(int numOfElements);
    [RegisterAttribute("removeFromStart", "(I)V", "")]
public void RemoveFromStart(int numOfElements);
    [RegisterAttribute("size", "()I", "")]
public int Size();
}
[RegisterAttribute("android/support/v4/util/DebugUtils")]
public class Android.Support.V4.Util.DebugUtils : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_buildShortClassTag_Ljava_lang_Object_Ljava_lang_StringBuilder_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DebugUtils(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildShortClassTag", "(Ljava/lang/Object;Ljava/lang/StringBuilder;)V", "")]
public static void BuildShortClassTag(Object cls, StringBuilder out);
}
[RegisterAttribute("android/support/v4/util/LogWriter")]
public class Android.Support.V4.Util.LogWriter : Writer {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Ljava_lang_String_;
    private static Delegate cb_close;
    private static IntPtr id_close;
    private static Delegate cb_flush;
    private static IntPtr id_flush;
    private static Delegate cb_write_arrayCII;
    private static IntPtr id_write_arrayCII;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, int, int> <>f__mg$cache2;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected LogWriter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public LogWriter(string tag);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetFlushHandler();
    private static void n_Flush(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flush", "()V", "GetFlushHandler")]
public virtual void Flush();
    private static Delegate GetWrite_arrayCIIHandler();
    private static void n_Write_arrayCII(IntPtr jnienv, IntPtr native__this, IntPtr native_buf, int offset, int count);
    [RegisterAttribute("write", "([CII)V", "GetWrite_arrayCIIHandler")]
public virtual void Write(Char[] buf, int offset, int count);
}
[RegisterAttribute("android/support/v4/util/LongSparseArray")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.LongSparseArray : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_I;
    private static Delegate cb_append_JLjava_lang_Object_;
    private static IntPtr id_append_JLjava_lang_Object_;
    private static Delegate cb_clear;
    private static IntPtr id_clear;
    private static Delegate cb_clone;
    private static IntPtr id_clone;
    private static Delegate cb_delete_J;
    private static IntPtr id_delete_J;
    private static Delegate cb_get_J;
    private static IntPtr id_get_J;
    private static Delegate cb_get_JLjava_lang_Object_;
    private static IntPtr id_get_JLjava_lang_Object_;
    private static Delegate cb_indexOfKey_J;
    private static IntPtr id_indexOfKey_J;
    private static Delegate cb_indexOfValue_Ljava_lang_Object_;
    private static IntPtr id_indexOfValue_Ljava_lang_Object_;
    private static Delegate cb_keyAt_I;
    private static IntPtr id_keyAt_I;
    private static Delegate cb_put_JLjava_lang_Object_;
    private static IntPtr id_put_JLjava_lang_Object_;
    private static Delegate cb_remove_J;
    private static IntPtr id_remove_J;
    private static Delegate cb_removeAt_I;
    private static IntPtr id_removeAt_I;
    private static Delegate cb_setValueAt_ILjava_lang_Object_;
    private static IntPtr id_setValueAt_ILjava_lang_Object_;
    private static Delegate cb_size;
    private static IntPtr id_size;
    private static Delegate cb_valueAt_I;
    private static IntPtr id_valueAt_I;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, long, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, long> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, long, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, long, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, long, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, long> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, long, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, long> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheE;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected LongSparseArray(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public LongSparseArray(int initialCapacity);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_JLjava_lang_Object_Handler();
    private static void n_Append_JLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, long key, IntPtr native_value);
    [RegisterAttribute("append", "(JLjava/lang/Object;)V", "GetAppend_JLjava_lang_Object_Handler")]
public virtual void Append(long key, Object value);
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetCloneHandler();
    private static IntPtr n_Clone(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clone", "()Landroid/support/v4/util/LongSparseArray;", "GetCloneHandler")]
public virtual LongSparseArray Clone();
    private static Delegate GetDelete_JHandler();
    private static void n_Delete_J(IntPtr jnienv, IntPtr native__this, long key);
    [RegisterAttribute("delete", "(J)V", "GetDelete_JHandler")]
public virtual void Delete(long key);
    private static Delegate GetGet_JHandler();
    private static IntPtr n_Get_J(IntPtr jnienv, IntPtr native__this, long key);
    [RegisterAttribute("get", "(J)Ljava/lang/Object;", "GetGet_JHandler")]
public virtual Object Get(long key);
    private static Delegate GetGet_JLjava_lang_Object_Handler();
    private static IntPtr n_Get_JLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, long key, IntPtr native_valueIfKeyNotFound);
    [RegisterAttribute("get", "(JLjava/lang/Object;)Ljava/lang/Object;", "GetGet_JLjava_lang_Object_Handler")]
public virtual Object Get(long key, Object valueIfKeyNotFound);
    private static Delegate GetIndexOfKey_JHandler();
    private static int n_IndexOfKey_J(IntPtr jnienv, IntPtr native__this, long key);
    [RegisterAttribute("indexOfKey", "(J)I", "GetIndexOfKey_JHandler")]
public virtual int IndexOfKey(long key);
    private static Delegate GetIndexOfValue_Ljava_lang_Object_Handler();
    private static int n_IndexOfValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("indexOfValue", "(Ljava/lang/Object;)I", "GetIndexOfValue_Ljava_lang_Object_Handler")]
public virtual int IndexOfValue(Object value);
    private static Delegate GetKeyAt_IHandler();
    private static long n_KeyAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("keyAt", "(I)J", "GetKeyAt_IHandler")]
public virtual long KeyAt(int index);
    private static Delegate GetPut_JLjava_lang_Object_Handler();
    private static void n_Put_JLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, long key, IntPtr native_value);
    [RegisterAttribute("put", "(JLjava/lang/Object;)V", "GetPut_JLjava_lang_Object_Handler")]
public virtual void Put(long key, Object value);
    private static Delegate GetRemove_JHandler();
    private static void n_Remove_J(IntPtr jnienv, IntPtr native__this, long key);
    [RegisterAttribute("remove", "(J)V", "GetRemove_JHandler")]
public virtual void Remove(long key);
    private static Delegate GetRemoveAt_IHandler();
    private static void n_RemoveAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("removeAt", "(I)V", "GetRemoveAt_IHandler")]
public virtual void RemoveAt(int index);
    private static Delegate GetSetValueAt_ILjava_lang_Object_Handler();
    private static void n_SetValueAt_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int index, IntPtr native_value);
    [RegisterAttribute("setValueAt", "(ILjava/lang/Object;)V", "GetSetValueAt_ILjava_lang_Object_Handler")]
public virtual void SetValueAt(int index, Object value);
    private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("size", "()I", "GetSizeHandler")]
public virtual int Size();
    private static Delegate GetValueAt_IHandler();
    private static IntPtr n_ValueAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("valueAt", "(I)Ljava/lang/Object;", "GetValueAt_IHandler")]
public virtual Object ValueAt(int index);
}
[RegisterAttribute("android/support/v4/util/LruCache")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.LruCache : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_I;
    private static Delegate cb_create_Ljava_lang_Object_;
    private static IntPtr id_create_Ljava_lang_Object_;
    private static IntPtr id_createCount;
    private static Delegate cb_entryRemoved_ZLjava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_entryRemoved_ZLjava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_evictAll;
    private static IntPtr id_evictionCount;
    private static IntPtr id_get_Ljava_lang_Object_;
    private static IntPtr id_hitCount;
    private static IntPtr id_maxSize;
    private static IntPtr id_missCount;
    private static IntPtr id_put_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_putCount;
    private static IntPtr id_remove_Ljava_lang_Object_;
    private static Delegate cb_resize_I;
    private static IntPtr id_resize_I;
    private static IntPtr id_size;
    private static Delegate cb_sizeOf_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_sizeOf_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_snapshot;
    private static IntPtr id_toString;
    private static Delegate cb_trimToSize_I;
    private static IntPtr id_trimToSize_I;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, bool, IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache4;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected LruCache(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public LruCache(int maxSize);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCreate_Ljava_lang_Object_Handler();
    private static IntPtr n_Create_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("create", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetCreate_Ljava_lang_Object_Handler")]
protected virtual Object Create(Object key);
    [RegisterAttribute("createCount", "()I", "")]
public int CreateCount();
    private static Delegate GetEntryRemoved_ZLjava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static void n_EntryRemoved_ZLjava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, bool evicted, IntPtr native_key, IntPtr native_oldValue, IntPtr native_newValue);
    [RegisterAttribute("entryRemoved", "(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V", "GetEntryRemoved_ZLjava_lang_Object_Ljava_lang_Object_Ljava_lang_Object_Handler")]
protected virtual void EntryRemoved(bool evicted, Object key, Object oldValue, Object newValue);
    [RegisterAttribute("evictAll", "()V", "")]
public void EvictAll();
    [RegisterAttribute("evictionCount", "()I", "")]
public int EvictionCount();
    [RegisterAttribute("get", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
public Object Get(Object key);
    [RegisterAttribute("hitCount", "()I", "")]
public int HitCount();
    [RegisterAttribute("maxSize", "()I", "")]
public int MaxSize();
    [RegisterAttribute("missCount", "()I", "")]
public int MissCount();
    [RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "")]
public Object Put(Object key, Object value);
    [RegisterAttribute("putCount", "()I", "")]
public int PutCount();
    [RegisterAttribute("remove", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
public Object Remove(Object key);
    private static Delegate GetResize_IHandler();
    private static void n_Resize_I(IntPtr jnienv, IntPtr native__this, int maxSize);
    [RegisterAttribute("resize", "(I)V", "GetResize_IHandler")]
public virtual void Resize(int maxSize);
    [RegisterAttribute("size", "()I", "")]
public int Size();
    private static Delegate GetSizeOf_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static int n_SizeOf_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_value);
    [RegisterAttribute("sizeOf", "(Ljava/lang/Object;Ljava/lang/Object;)I", "GetSizeOf_Ljava_lang_Object_Ljava_lang_Object_Handler")]
protected virtual int SizeOf(Object key, Object value);
    [RegisterAttribute("snapshot", "()Ljava/util/Map;", "")]
public IDictionary Snapshot();
    [RegisterAttribute("toString", "()Ljava/lang/String;", "")]
public sealed virtual string ToString();
    private static Delegate GetTrimToSize_IHandler();
    private static void n_TrimToSize_I(IntPtr jnienv, IntPtr native__this, int maxSize);
    [RegisterAttribute("trimToSize", "(I)V", "GetTrimToSize_IHandler")]
public virtual void TrimToSize(int maxSize);
}
[RegisterAttribute("android/support/v4/util/Pair")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.Pair : Object {
    private static IntPtr first_jfieldId;
    private static IntPtr second_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_create_Ljava_lang_Object_Ljava_lang_Object_;
    [RegisterAttribute("first")]
public Object First { get; public set; }
    [RegisterAttribute("second")]
public Object Second { get; public set; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected Pair(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;Ljava/lang/Object;)V", "")]
public Pair(Object first, Object second);
    public Object get_First();
    public void set_First(Object value);
    public Object get_Second();
    public void set_Second(Object value);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Ljava/lang/Object;Ljava/lang/Object;)Landroid/support/v4/util/Pair;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Pair Create(Object a, Object b);
}
[RegisterAttribute("android/support/v4/util/PatternsCompat")]
public class Android.Support.V4.Util.PatternsCompat : Object {
    private static IntPtr AUTOLINK_EMAIL_ADDRESS_jfieldId;
    private static IntPtr AUTOLINK_WEB_URL_jfieldId;
    private static IntPtr DOMAIN_NAME_jfieldId;
    private static IntPtr EMAIL_ADDRESS_jfieldId;
    private static IntPtr IP_ADDRESS_jfieldId;
    private static IntPtr WEB_URL_jfieldId;
    internal static IntPtr java_class_handle;
    [RegisterAttribute("AUTOLINK_EMAIL_ADDRESS")]
public static Pattern AutolinkEmailAddress { get; }
    [RegisterAttribute("AUTOLINK_WEB_URL")]
public static Pattern AutolinkWebUrl { get; }
    [RegisterAttribute("DOMAIN_NAME")]
public static Pattern DomainName { get; }
    [RegisterAttribute("EMAIL_ADDRESS")]
public static Pattern EmailAddress { get; }
    [RegisterAttribute("IP_ADDRESS")]
public static Pattern IpAddress { get; }
    [RegisterAttribute("WEB_URL")]
public static Pattern WebUrl { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal PatternsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static Pattern get_AutolinkEmailAddress();
    public static Pattern get_AutolinkWebUrl();
    public static Pattern get_DomainName();
    public static Pattern get_EmailAddress();
    public static Pattern get_IpAddress();
    public static Pattern get_WebUrl();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/util/Pools")]
public class Android.Support.V4.Util.Pools : Object {
    internal Pools(IntPtr javaReference, JniHandleOwnership transfer);
}
[RegisterAttribute("android/support/v4/util/SimpleArrayMap")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.SimpleArrayMap : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_Landroid_support_v4_util_SimpleArrayMap_;
    private static IntPtr id_ctor_I;
    private static Delegate cb_isEmpty;
    private static IntPtr id_isEmpty;
    private static Delegate cb_clear;
    private static IntPtr id_clear;
    private static Delegate cb_containsKey_Ljava_lang_Object_;
    private static IntPtr id_containsKey_Ljava_lang_Object_;
    private static Delegate cb_containsValue_Ljava_lang_Object_;
    private static IntPtr id_containsValue_Ljava_lang_Object_;
    private static Delegate cb_ensureCapacity_I;
    private static IntPtr id_ensureCapacity_I;
    private static Delegate cb_get_Ljava_lang_Object_;
    private static IntPtr id_get_Ljava_lang_Object_;
    private static Delegate cb_indexOfKey_Ljava_lang_Object_;
    private static IntPtr id_indexOfKey_Ljava_lang_Object_;
    private static Delegate cb_keyAt_I;
    private static IntPtr id_keyAt_I;
    private static Delegate cb_put_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_put_Ljava_lang_Object_Ljava_lang_Object_;
    private static Delegate cb_putAll_Landroid_support_v4_util_SimpleArrayMap_;
    private static IntPtr id_putAll_Landroid_support_v4_util_SimpleArrayMap_;
    private static Delegate cb_remove_Ljava_lang_Object_;
    private static IntPtr id_remove_Ljava_lang_Object_;
    private static Delegate cb_removeAt_I;
    private static IntPtr id_removeAt_I;
    private static Delegate cb_setValueAt_ILjava_lang_Object_;
    private static IntPtr id_setValueAt_ILjava_lang_Object_;
    private static Delegate cb_size;
    private static IntPtr id_size;
    private static Delegate cb_valueAt_I;
    private static IntPtr id_valueAt_I;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, IntPtr, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheE;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsEmpty { get; }
    protected SimpleArrayMap(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/v4/util/SimpleArrayMap;)V", "")]
public SimpleArrayMap(SimpleArrayMap map);
    [RegisterAttribute(".ctor", "(I)V", "")]
public SimpleArrayMap(int capacity);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsEmptyHandler();
    private static bool n_IsEmpty(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isEmpty", "()Z", "GetIsEmptyHandler")]
public virtual bool get_IsEmpty();
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetContainsKey_Ljava_lang_Object_Handler();
    private static bool n_ContainsKey_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("containsKey", "(Ljava/lang/Object;)Z", "GetContainsKey_Ljava_lang_Object_Handler")]
public virtual bool ContainsKey(Object key);
    private static Delegate GetContainsValue_Ljava_lang_Object_Handler();
    private static bool n_ContainsValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("containsValue", "(Ljava/lang/Object;)Z", "GetContainsValue_Ljava_lang_Object_Handler")]
public virtual bool ContainsValue(Object value);
    private static Delegate GetEnsureCapacity_IHandler();
    private static void n_EnsureCapacity_I(IntPtr jnienv, IntPtr native__this, int minimumCapacity);
    [RegisterAttribute("ensureCapacity", "(I)V", "GetEnsureCapacity_IHandler")]
public virtual void EnsureCapacity(int minimumCapacity);
    private static Delegate GetGet_Ljava_lang_Object_Handler();
    private static IntPtr n_Get_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("get", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetGet_Ljava_lang_Object_Handler")]
public virtual Object Get(Object key);
    private static Delegate GetIndexOfKey_Ljava_lang_Object_Handler();
    private static int n_IndexOfKey_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("indexOfKey", "(Ljava/lang/Object;)I", "GetIndexOfKey_Ljava_lang_Object_Handler")]
public virtual int IndexOfKey(Object key);
    private static Delegate GetKeyAt_IHandler();
    private static IntPtr n_KeyAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("keyAt", "(I)Ljava/lang/Object;", "GetKeyAt_IHandler")]
public virtual Object KeyAt(int index);
    private static Delegate GetPut_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static IntPtr n_Put_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key, IntPtr native_value);
    [RegisterAttribute("put", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetPut_Ljava_lang_Object_Ljava_lang_Object_Handler")]
public virtual Object Put(Object key, Object value);
    private static Delegate GetPutAll_Landroid_support_v4_util_SimpleArrayMap_Handler();
    private static void n_PutAll_Landroid_support_v4_util_SimpleArrayMap_(IntPtr jnienv, IntPtr native__this, IntPtr native_array);
    [RegisterAttribute("putAll", "(Landroid/support/v4/util/SimpleArrayMap;)V", "GetPutAll_Landroid_support_v4_util_SimpleArrayMap_Handler")]
public virtual void PutAll(SimpleArrayMap array);
    private static Delegate GetRemove_Ljava_lang_Object_Handler();
    private static IntPtr n_Remove_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("remove", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetRemove_Ljava_lang_Object_Handler")]
public virtual Object Remove(Object key);
    private static Delegate GetRemoveAt_IHandler();
    private static IntPtr n_RemoveAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("removeAt", "(I)Ljava/lang/Object;", "GetRemoveAt_IHandler")]
public virtual Object RemoveAt(int index);
    private static Delegate GetSetValueAt_ILjava_lang_Object_Handler();
    private static IntPtr n_SetValueAt_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int index, IntPtr native_value);
    [RegisterAttribute("setValueAt", "(ILjava/lang/Object;)Ljava/lang/Object;", "GetSetValueAt_ILjava_lang_Object_Handler")]
public virtual Object SetValueAt(int index, Object value);
    private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("size", "()I", "GetSizeHandler")]
public virtual int Size();
    private static Delegate GetValueAt_IHandler();
    private static IntPtr n_ValueAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("valueAt", "(I)Ljava/lang/Object;", "GetValueAt_IHandler")]
public virtual Object ValueAt(int index);
}
[RegisterAttribute("android/support/v4/util/SparseArrayCompat")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Util.SparseArrayCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_I;
    private static Delegate cb_append_ILjava_lang_Object_;
    private static IntPtr id_append_ILjava_lang_Object_;
    private static Delegate cb_clear;
    private static IntPtr id_clear;
    private static Delegate cb_clone;
    private static IntPtr id_clone;
    private static Delegate cb_delete_I;
    private static IntPtr id_delete_I;
    private static Delegate cb_get_I;
    private static IntPtr id_get_I;
    private static Delegate cb_get_ILjava_lang_Object_;
    private static IntPtr id_get_ILjava_lang_Object_;
    private static Delegate cb_indexOfKey_I;
    private static IntPtr id_indexOfKey_I;
    private static Delegate cb_indexOfValue_Ljava_lang_Object_;
    private static IntPtr id_indexOfValue_Ljava_lang_Object_;
    private static Delegate cb_keyAt_I;
    private static IntPtr id_keyAt_I;
    private static Delegate cb_put_ILjava_lang_Object_;
    private static IntPtr id_put_ILjava_lang_Object_;
    private static Delegate cb_remove_I;
    private static IntPtr id_remove_I;
    private static Delegate cb_removeAt_I;
    private static IntPtr id_removeAt_I;
    private static Delegate cb_removeAtRange_II;
    private static IntPtr id_removeAtRange_II;
    private static Delegate cb_setValueAt_ILjava_lang_Object_;
    private static IntPtr id_setValueAt_ILjava_lang_Object_;
    private static Delegate cb_size;
    private static IntPtr id_size;
    private static Delegate cb_valueAt_I;
    private static IntPtr id_valueAt_I;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, int> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, int> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheF;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected SparseArrayCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public SparseArrayCompat(int initialCapacity);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAppend_ILjava_lang_Object_Handler();
    private static void n_Append_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int key, IntPtr native_value);
    [RegisterAttribute("append", "(ILjava/lang/Object;)V", "GetAppend_ILjava_lang_Object_Handler")]
public virtual void Append(int key, Object value);
    private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clear", "()V", "GetClearHandler")]
public virtual void Clear();
    private static Delegate GetCloneHandler();
    private static IntPtr n_Clone(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clone", "()Landroid/support/v4/util/SparseArrayCompat;", "GetCloneHandler")]
public virtual SparseArrayCompat Clone();
    private static Delegate GetDelete_IHandler();
    private static void n_Delete_I(IntPtr jnienv, IntPtr native__this, int key);
    [RegisterAttribute("delete", "(I)V", "GetDelete_IHandler")]
public virtual void Delete(int key);
    private static Delegate GetGet_IHandler();
    private static IntPtr n_Get_I(IntPtr jnienv, IntPtr native__this, int key);
    [RegisterAttribute("get", "(I)Ljava/lang/Object;", "GetGet_IHandler")]
public virtual Object Get(int key);
    private static Delegate GetGet_ILjava_lang_Object_Handler();
    private static IntPtr n_Get_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int key, IntPtr native_valueIfKeyNotFound);
    [RegisterAttribute("get", "(ILjava/lang/Object;)Ljava/lang/Object;", "GetGet_ILjava_lang_Object_Handler")]
public virtual Object Get(int key, Object valueIfKeyNotFound);
    private static Delegate GetIndexOfKey_IHandler();
    private static int n_IndexOfKey_I(IntPtr jnienv, IntPtr native__this, int key);
    [RegisterAttribute("indexOfKey", "(I)I", "GetIndexOfKey_IHandler")]
public virtual int IndexOfKey(int key);
    private static Delegate GetIndexOfValue_Ljava_lang_Object_Handler();
    private static int n_IndexOfValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("indexOfValue", "(Ljava/lang/Object;)I", "GetIndexOfValue_Ljava_lang_Object_Handler")]
public virtual int IndexOfValue(Object value);
    private static Delegate GetKeyAt_IHandler();
    private static int n_KeyAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("keyAt", "(I)I", "GetKeyAt_IHandler")]
public virtual int KeyAt(int index);
    private static Delegate GetPut_ILjava_lang_Object_Handler();
    private static void n_Put_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int key, IntPtr native_value);
    [RegisterAttribute("put", "(ILjava/lang/Object;)V", "GetPut_ILjava_lang_Object_Handler")]
public virtual void Put(int key, Object value);
    private static Delegate GetRemove_IHandler();
    private static void n_Remove_I(IntPtr jnienv, IntPtr native__this, int key);
    [RegisterAttribute("remove", "(I)V", "GetRemove_IHandler")]
public virtual void Remove(int key);
    private static Delegate GetRemoveAt_IHandler();
    private static void n_RemoveAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("removeAt", "(I)V", "GetRemoveAt_IHandler")]
public virtual void RemoveAt(int index);
    private static Delegate GetRemoveAtRange_IIHandler();
    private static void n_RemoveAtRange_II(IntPtr jnienv, IntPtr native__this, int index, int size);
    [RegisterAttribute("removeAtRange", "(II)V", "GetRemoveAtRange_IIHandler")]
public virtual void RemoveAtRange(int index, int size);
    private static Delegate GetSetValueAt_ILjava_lang_Object_Handler();
    private static void n_SetValueAt_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, int index, IntPtr native_value);
    [RegisterAttribute("setValueAt", "(ILjava/lang/Object;)V", "GetSetValueAt_ILjava_lang_Object_Handler")]
public virtual void SetValueAt(int index, Object value);
    private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("size", "()I", "GetSizeHandler")]
public virtual int Size();
    private static Delegate GetValueAt_IHandler();
    private static IntPtr n_ValueAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("valueAt", "(I)Ljava/lang/Object;", "GetValueAt_IHandler")]
public virtual Object ValueAt(int index);
}
[RegisterAttribute("android/support/v4/util/TimeUtils")]
public class Android.Support.V4.Util.TimeUtils : Object {
    [RegisterAttribute("HUNDRED_DAY_FIELD_LEN")]
public static int HundredDayFieldLen;
    internal static IntPtr java_class_handle;
    private static IntPtr id_formatDuration_JLjava_io_PrintWriter_;
    private static IntPtr id_formatDuration_JLjava_io_PrintWriter_I;
    private static IntPtr id_formatDuration_JLjava_lang_StringBuilder_;
    private static IntPtr id_formatDuration_JJLjava_io_PrintWriter_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TimeUtils(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("formatDuration", "(JLjava/io/PrintWriter;)V", "")]
public static void FormatDuration(long duration, PrintWriter pw);
    [RegisterAttribute("formatDuration", "(JLjava/io/PrintWriter;I)V", "")]
public static void FormatDuration(long duration, PrintWriter pw, int fieldLen);
    [RegisterAttribute("formatDuration", "(JLjava/lang/StringBuilder;)V", "")]
public static void FormatDuration(long duration, StringBuilder builder);
    [RegisterAttribute("formatDuration", "(JJLjava/io/PrintWriter;)V", "")]
public static void FormatDuration(long time, long now, PrintWriter pw);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityEventCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityEventCompat : Object {
    [RegisterAttribute("CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION")]
public static int ContentChangeTypeContentDescription;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_SUBTREE")]
public static int ContentChangeTypeSubtree;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_TEXT")]
public static int ContentChangeTypeText;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_UNDEFINED")]
public static int ContentChangeTypeUndefined;
    [RegisterAttribute("TYPES_ALL_MASK")]
public static int TypesAllMask;
    [RegisterAttribute("TYPE_ANNOUNCEMENT")]
public static int TypeAnnouncement;
    [RegisterAttribute("TYPE_ASSIST_READING_CONTEXT")]
public static int TypeAssistReadingContext;
    [RegisterAttribute("TYPE_GESTURE_DETECTION_END")]
public static int TypeGestureDetectionEnd;
    [RegisterAttribute("TYPE_GESTURE_DETECTION_START")]
public static int TypeGestureDetectionStart;
    [RegisterAttribute("TYPE_TOUCH_EXPLORATION_GESTURE_END")]
public static int TypeTouchExplorationGestureEnd;
    [RegisterAttribute("TYPE_TOUCH_EXPLORATION_GESTURE_START")]
public static int TypeTouchExplorationGestureStart;
    [RegisterAttribute("TYPE_TOUCH_INTERACTION_END")]
public static int TypeTouchInteractionEnd;
    [RegisterAttribute("TYPE_TOUCH_INTERACTION_START")]
public static int TypeTouchInteractionStart;
    [RegisterAttribute("TYPE_VIEW_ACCESSIBILITY_FOCUSED")]
public static int TypeViewAccessibilityFocused;
    [RegisterAttribute("TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED")]
public static int TypeViewAccessibilityFocusCleared;
    [RegisterAttribute("TYPE_VIEW_CONTEXT_CLICKED")]
public static int TypeViewContextClicked;
    [RegisterAttribute("TYPE_VIEW_HOVER_ENTER")]
public static int TypeViewHoverEnter;
    [RegisterAttribute("TYPE_VIEW_HOVER_EXIT")]
public static int TypeViewHoverExit;
    [RegisterAttribute("TYPE_VIEW_SCROLLED")]
public static int TypeViewScrolled;
    [RegisterAttribute("TYPE_VIEW_TEXT_SELECTION_CHANGED")]
public static int TypeViewTextSelectionChanged;
    [RegisterAttribute("TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY")]
public static int TypeViewTextTraversedAtMovementGranularity;
    [RegisterAttribute("TYPE_WINDOWS_CHANGED")]
public static int TypeWindowsChanged;
    [RegisterAttribute("TYPE_WINDOW_CONTENT_CHANGED")]
public static int TypeWindowContentChanged;
    internal static IntPtr java_class_handle;
    private static IntPtr id_appendRecord_Landroid_view_accessibility_AccessibilityEvent_Landroid_support_v4_view_accessibility_AccessibilityRecordCompat_;
    private static IntPtr id_asRecord_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_getAction_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_getContentChangeTypes_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_getMovementGranularity_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_getRecord_Landroid_view_accessibility_AccessibilityEvent_I;
    private static IntPtr id_getRecordCount_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_setAction_Landroid_view_accessibility_AccessibilityEvent_I;
    private static IntPtr id_setContentChangeTypes_Landroid_view_accessibility_AccessibilityEvent_I;
    private static IntPtr id_setMovementGranularity_Landroid_view_accessibility_AccessibilityEvent_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AccessibilityEventCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("appendRecord", "(Landroid/view/accessibility/AccessibilityEvent;Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;)V", "")]
public static void AppendRecord(AccessibilityEvent e, AccessibilityRecordCompat record);
    [RegisterAttribute("asRecord", "(Landroid/view/accessibility/AccessibilityEvent;)Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat AsRecord(AccessibilityEvent e);
    [RegisterAttribute("getAction", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public int GetAction(AccessibilityEvent e);
    [RegisterAttribute("getContentChangeTypes", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetContentChangeTypes(AccessibilityEvent e);
    [RegisterAttribute("getMovementGranularity", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public int GetMovementGranularity(AccessibilityEvent e);
    [RegisterAttribute("getRecord", "(Landroid/view/accessibility/AccessibilityEvent;I)Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat GetRecord(AccessibilityEvent e, int index);
    [RegisterAttribute("getRecordCount", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetRecordCount(AccessibilityEvent e);
    [RegisterAttribute("setAction", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public void SetAction(AccessibilityEvent e, int action);
    [RegisterAttribute("setContentChangeTypes", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public static void SetContentChangeTypes(AccessibilityEvent e, int changeTypes);
    [RegisterAttribute("setMovementGranularity", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public void SetMovementGranularity(AccessibilityEvent e, int granularity);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityManagerCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityManagerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_addAccessibilityStateChangeListener_Landroid_view_accessibility_AccessibilityManager_Landroid_support_v4_view_accessibility_AccessibilityManagerCompat_AccessibilityStateChangeListener_;
    private static IntPtr id_addTouchExplorationStateChangeListener_Landroid_view_accessibility_AccessibilityManager_Landroid_support_v4_view_accessibility_AccessibilityManagerCompat_TouchExplorationStateChangeListener_;
    private static IntPtr id_getEnabledAccessibilityServiceList_Landroid_view_accessibility_AccessibilityManager_I;
    private static IntPtr id_getInstalledAccessibilityServiceList_Landroid_view_accessibility_AccessibilityManager_;
    private static IntPtr id_isTouchExplorationEnabled_Landroid_view_accessibility_AccessibilityManager_;
    private static IntPtr id_removeAccessibilityStateChangeListener_Landroid_view_accessibility_AccessibilityManager_Landroid_support_v4_view_accessibility_AccessibilityManagerCompat_AccessibilityStateChangeListener_;
    private static IntPtr id_removeTouchExplorationStateChangeListener_Landroid_view_accessibility_AccessibilityManager_Landroid_support_v4_view_accessibility_AccessibilityManagerCompat_TouchExplorationStateChangeListener_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AccessibilityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addAccessibilityStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z", "")]
public static bool AddAccessibilityStateChangeListener(AccessibilityManager manager, IAccessibilityStateChangeListener listener);
    [RegisterAttribute("addTouchExplorationStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z", "")]
public static bool AddTouchExplorationStateChangeListener(AccessibilityManager manager, ITouchExplorationStateChangeListener listener);
    [RegisterAttribute("getEnabledAccessibilityServiceList", "(Landroid/view/accessibility/AccessibilityManager;I)Ljava/util/List;", "")]
public static IList`1<AccessibilityServiceInfo> GetEnabledAccessibilityServiceList(AccessibilityManager manager, int feedbackTypeFlags);
    [RegisterAttribute("getInstalledAccessibilityServiceList", "(Landroid/view/accessibility/AccessibilityManager;)Ljava/util/List;", "")]
public static IList`1<AccessibilityServiceInfo> GetInstalledAccessibilityServiceList(AccessibilityManager manager);
    [RegisterAttribute("isTouchExplorationEnabled", "(Landroid/view/accessibility/AccessibilityManager;)Z", "")]
public static bool IsTouchExplorationEnabled(AccessibilityManager manager);
    [RegisterAttribute("removeAccessibilityStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z", "")]
public static bool RemoveAccessibilityStateChangeListener(AccessibilityManager manager, IAccessibilityStateChangeListener listener);
    [RegisterAttribute("removeTouchExplorationStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroid/support/v4/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z", "")]
public static bool RemoveTouchExplorationStateChangeListener(AccessibilityManager manager, ITouchExplorationStateChangeListener listener);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityNodeInfoCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompat : Object {
    [RegisterAttribute("ACTION_ACCESSIBILITY_FOCUS")]
public static int ActionAccessibilityFocus;
    [RegisterAttribute("ACTION_ARGUMENT_COLUMN_INT")]
public static string ActionArgumentColumnInt;
    [RegisterAttribute("ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN")]
public static string ActionArgumentExtendSelectionBoolean;
    [RegisterAttribute("ACTION_ARGUMENT_HTML_ELEMENT_STRING")]
public static string ActionArgumentHtmlElementString;
    [RegisterAttribute("ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT")]
public static string ActionArgumentMovementGranularityInt;
    [RegisterAttribute("ACTION_ARGUMENT_PROGRESS_VALUE")]
public static string ActionArgumentProgressValue;
    [RegisterAttribute("ACTION_ARGUMENT_ROW_INT")]
public static string ActionArgumentRowInt;
    [RegisterAttribute("ACTION_ARGUMENT_SELECTION_END_INT")]
public static string ActionArgumentSelectionEndInt;
    [RegisterAttribute("ACTION_ARGUMENT_SELECTION_START_INT")]
public static string ActionArgumentSelectionStartInt;
    [RegisterAttribute("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE")]
public static string ActionArgumentSetTextCharsequence;
    [RegisterAttribute("ACTION_CLEAR_ACCESSIBILITY_FOCUS")]
public static int ActionClearAccessibilityFocus;
    [RegisterAttribute("ACTION_CLEAR_FOCUS")]
public static int ActionClearFocus;
    [RegisterAttribute("ACTION_CLEAR_SELECTION")]
public static int ActionClearSelection;
    [RegisterAttribute("ACTION_CLICK")]
public static int ActionClick;
    [RegisterAttribute("ACTION_COLLAPSE")]
public static int ActionCollapse;
    [RegisterAttribute("ACTION_COPY")]
public static int ActionCopy;
    [RegisterAttribute("ACTION_CUT")]
public static int ActionCut;
    [RegisterAttribute("ACTION_DISMISS")]
public static int ActionDismiss;
    [RegisterAttribute("ACTION_EXPAND")]
public static int ActionExpand;
    [RegisterAttribute("ACTION_FOCUS")]
public static int ActionFocus;
    [RegisterAttribute("ACTION_LONG_CLICK")]
public static int ActionLongClick;
    [RegisterAttribute("ACTION_NEXT_AT_MOVEMENT_GRANULARITY")]
public static int ActionNextAtMovementGranularity;
    [RegisterAttribute("ACTION_NEXT_HTML_ELEMENT")]
public static int ActionNextHtmlElement;
    [RegisterAttribute("ACTION_PASTE")]
public static int ActionPaste;
    [RegisterAttribute("ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY")]
public static int ActionPreviousAtMovementGranularity;
    [RegisterAttribute("ACTION_PREVIOUS_HTML_ELEMENT")]
public static int ActionPreviousHtmlElement;
    [RegisterAttribute("ACTION_SCROLL_BACKWARD")]
public static int ActionScrollBackward;
    [RegisterAttribute("ACTION_SCROLL_FORWARD")]
public static int ActionScrollForward;
    [RegisterAttribute("ACTION_SELECT")]
public static int ActionSelect;
    [RegisterAttribute("ACTION_SET_SELECTION")]
public static int ActionSetSelection;
    [RegisterAttribute("ACTION_SET_TEXT")]
public static int ActionSetText;
    [RegisterAttribute("FOCUS_ACCESSIBILITY")]
public static int FocusAccessibility;
    [RegisterAttribute("FOCUS_INPUT")]
public static int FocusInput;
    [RegisterAttribute("MOVEMENT_GRANULARITY_CHARACTER")]
public static int MovementGranularityCharacter;
    [RegisterAttribute("MOVEMENT_GRANULARITY_LINE")]
public static int MovementGranularityLine;
    [RegisterAttribute("MOVEMENT_GRANULARITY_PAGE")]
public static int MovementGranularityPage;
    [RegisterAttribute("MOVEMENT_GRANULARITY_PARAGRAPH")]
public static int MovementGranularityParagraph;
    [RegisterAttribute("MOVEMENT_GRANULARITY_WORD")]
public static int MovementGranularityWord;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Ljava_lang_Object_;
    private static Delegate cb_isAccessibilityFocused;
    private static Delegate cb_setAccessibilityFocused_Z;
    private static IntPtr id_isAccessibilityFocused;
    private static IntPtr id_setAccessibilityFocused_Z;
    private static Delegate cb_getActionList;
    private static IntPtr id_getActionList;
    private static Delegate cb_getActions;
    private static IntPtr id_getActions;
    private static Delegate cb_isCheckable;
    private static Delegate cb_setCheckable_Z;
    private static IntPtr id_isCheckable;
    private static IntPtr id_setCheckable_Z;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static IntPtr id_isChecked;
    private static IntPtr id_setChecked_Z;
    private static Delegate cb_getChildCount;
    private static IntPtr id_getChildCount;
    private static Delegate cb_getClassName;
    private static Delegate cb_setClassName_Ljava_lang_CharSequence_;
    private static IntPtr id_getClassName;
    private static IntPtr id_setClassName_Ljava_lang_CharSequence_;
    private static Delegate cb_isClickable;
    private static Delegate cb_setClickable_Z;
    private static IntPtr id_isClickable;
    private static IntPtr id_setClickable_Z;
    private static Delegate cb_getCollectionInfo;
    private static IntPtr id_getCollectionInfo;
    private static Delegate cb_getCollectionItemInfo;
    private static IntPtr id_getCollectionItemInfo;
    private static Delegate cb_getContentDescription;
    private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    private static IntPtr id_getContentDescription;
    private static IntPtr id_setContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isContentInvalid;
    private static Delegate cb_setContentInvalid_Z;
    private static IntPtr id_isContentInvalid;
    private static IntPtr id_setContentInvalid_Z;
    private static Delegate cb_isContextClickable;
    private static Delegate cb_setContextClickable_Z;
    private static IntPtr id_isContextClickable;
    private static IntPtr id_setContextClickable_Z;
    private static Delegate cb_isDismissable;
    private static Delegate cb_setDismissable_Z;
    private static IntPtr id_isDismissable;
    private static IntPtr id_setDismissable_Z;
    private static Delegate cb_getDrawingOrder;
    private static Delegate cb_setDrawingOrder_I;
    private static IntPtr id_getDrawingOrder;
    private static IntPtr id_setDrawingOrder_I;
    private static Delegate cb_isEditable;
    private static Delegate cb_setEditable_Z;
    private static IntPtr id_isEditable;
    private static IntPtr id_setEditable_Z;
    private static Delegate cb_isEnabled;
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_isEnabled;
    private static IntPtr id_setEnabled_Z;
    private static Delegate cb_getError;
    private static Delegate cb_setError_Ljava_lang_CharSequence_;
    private static IntPtr id_getError;
    private static IntPtr id_setError_Ljava_lang_CharSequence_;
    private static Delegate cb_getExtras;
    private static IntPtr id_getExtras;
    private static Delegate cb_isFocusable;
    private static Delegate cb_setFocusable_Z;
    private static IntPtr id_isFocusable;
    private static IntPtr id_setFocusable_Z;
    private static Delegate cb_isFocused;
    private static Delegate cb_setFocused_Z;
    private static IntPtr id_isFocused;
    private static IntPtr id_setFocused_Z;
    private static Delegate cb_isImportantForAccessibility;
    private static Delegate cb_setImportantForAccessibility_Z;
    private static IntPtr id_isImportantForAccessibility;
    private static IntPtr id_setImportantForAccessibility_Z;
    private static Delegate cb_getInfo;
    private static IntPtr id_getInfo;
    private static Delegate cb_getInputType;
    private static Delegate cb_setInputType_I;
    private static IntPtr id_getInputType;
    private static IntPtr id_setInputType_I;
    private static Delegate cb_getLabelFor;
    private static IntPtr id_getLabelFor;
    private static Delegate cb_getLabeledBy;
    private static IntPtr id_getLabeledBy;
    private static Delegate cb_getLiveRegion;
    private static Delegate cb_setLiveRegion_I;
    private static IntPtr id_getLiveRegion;
    private static IntPtr id_setLiveRegion_I;
    private static Delegate cb_isLongClickable;
    private static Delegate cb_setLongClickable_Z;
    private static IntPtr id_isLongClickable;
    private static IntPtr id_setLongClickable_Z;
    private static Delegate cb_getMaxTextLength;
    private static Delegate cb_setMaxTextLength_I;
    private static IntPtr id_getMaxTextLength;
    private static IntPtr id_setMaxTextLength_I;
    private static Delegate cb_getMovementGranularities;
    private static Delegate cb_setMovementGranularities_I;
    private static IntPtr id_getMovementGranularities;
    private static IntPtr id_setMovementGranularities_I;
    private static Delegate cb_isMultiLine;
    private static Delegate cb_setMultiLine_Z;
    private static IntPtr id_isMultiLine;
    private static IntPtr id_setMultiLine_Z;
    private static Delegate cb_getPackageName;
    private static Delegate cb_setPackageName_Ljava_lang_CharSequence_;
    private static IntPtr id_getPackageName;
    private static IntPtr id_setPackageName_Ljava_lang_CharSequence_;
    private static Delegate cb_getParent;
    private static IntPtr id_getParent;
    private static Delegate cb_isPassword;
    private static Delegate cb_setPassword_Z;
    private static IntPtr id_isPassword;
    private static IntPtr id_setPassword_Z;
    private static Delegate cb_getRangeInfo;
    private static Delegate cb_setRangeInfo_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_;
    private static IntPtr id_getRangeInfo;
    private static IntPtr id_setRangeInfo_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_;
    private static Delegate cb_getRoleDescription;
    private static Delegate cb_setRoleDescription_Ljava_lang_CharSequence_;
    private static IntPtr id_getRoleDescription;
    private static IntPtr id_setRoleDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isScrollable;
    private static Delegate cb_setScrollable_Z;
    private static IntPtr id_isScrollable;
    private static IntPtr id_setScrollable_Z;
    private static Delegate cb_isSelected;
    private static Delegate cb_setSelected_Z;
    private static IntPtr id_isSelected;
    private static IntPtr id_setSelected_Z;
    private static Delegate cb_getText;
    private static Delegate cb_setText_Ljava_lang_CharSequence_;
    private static IntPtr id_getText;
    private static IntPtr id_setText_Ljava_lang_CharSequence_;
    private static Delegate cb_getTextSelectionEnd;
    private static IntPtr id_getTextSelectionEnd;
    private static Delegate cb_getTextSelectionStart;
    private static IntPtr id_getTextSelectionStart;
    private static Delegate cb_getTraversalAfter;
    private static IntPtr id_getTraversalAfter;
    private static Delegate cb_getTraversalBefore;
    private static IntPtr id_getTraversalBefore;
    private static Delegate cb_getViewIdResourceName;
    private static Delegate cb_setViewIdResourceName_Ljava_lang_String_;
    private static IntPtr id_getViewIdResourceName;
    private static IntPtr id_setViewIdResourceName_Ljava_lang_String_;
    private static Delegate cb_isVisibleToUser;
    private static Delegate cb_setVisibleToUser_Z;
    private static IntPtr id_isVisibleToUser;
    private static IntPtr id_setVisibleToUser_Z;
    private static Delegate cb_getWindow;
    private static IntPtr id_getWindow;
    private static Delegate cb_getWindowId;
    private static IntPtr id_getWindowId;
    private static Delegate cb_addAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static IntPtr id_addAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static Delegate cb_addAction_I;
    private static IntPtr id_addAction_I;
    private static Delegate cb_addChild_Landroid_view_View_;
    private static IntPtr id_addChild_Landroid_view_View_;
    private static Delegate cb_addChild_Landroid_view_View_I;
    private static IntPtr id_addChild_Landroid_view_View_I;
    private static Delegate cb_canOpenPopup;
    private static IntPtr id_canOpenPopup;
    private static Delegate cb_findAccessibilityNodeInfosByText_Ljava_lang_String_;
    private static IntPtr id_findAccessibilityNodeInfosByText_Ljava_lang_String_;
    private static Delegate cb_findAccessibilityNodeInfosByViewId_Ljava_lang_String_;
    private static IntPtr id_findAccessibilityNodeInfosByViewId_Ljava_lang_String_;
    private static Delegate cb_findFocus_I;
    private static IntPtr id_findFocus_I;
    private static Delegate cb_focusSearch_I;
    private static IntPtr id_focusSearch_I;
    private static Delegate cb_getBoundsInParent_Landroid_graphics_Rect_;
    private static IntPtr id_getBoundsInParent_Landroid_graphics_Rect_;
    private static Delegate cb_getBoundsInScreen_Landroid_graphics_Rect_;
    private static IntPtr id_getBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_getChild_I;
    private static IntPtr id_getChild_I;
    private static IntPtr id_obtain;
    private static IntPtr id_obtain_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static IntPtr id_obtain_Landroid_view_View_;
    private static IntPtr id_obtain_Landroid_view_View_I;
    private static Delegate cb_performAction_I;
    private static IntPtr id_performAction_I;
    private static Delegate cb_performAction_ILandroid_os_Bundle_;
    private static IntPtr id_performAction_ILandroid_os_Bundle_;
    private static Delegate cb_recycle;
    private static IntPtr id_recycle;
    private static Delegate cb_refresh;
    private static IntPtr id_refresh;
    private static Delegate cb_removeAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static IntPtr id_removeAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static Delegate cb_removeChild_Landroid_view_View_;
    private static IntPtr id_removeChild_Landroid_view_View_;
    private static Delegate cb_removeChild_Landroid_view_View_I;
    private static IntPtr id_removeChild_Landroid_view_View_I;
    private static Delegate cb_setBoundsInParent_Landroid_graphics_Rect_;
    private static IntPtr id_setBoundsInParent_Landroid_graphics_Rect_;
    private static Delegate cb_setBoundsInScreen_Landroid_graphics_Rect_;
    private static IntPtr id_setBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_setCanOpenPopup_Z;
    private static IntPtr id_setCanOpenPopup_Z;
    private static Delegate cb_setCollectionInfo_Ljava_lang_Object_;
    private static IntPtr id_setCollectionInfo_Ljava_lang_Object_;
    private static Delegate cb_setCollectionItemInfo_Ljava_lang_Object_;
    private static IntPtr id_setCollectionItemInfo_Ljava_lang_Object_;
    private static Delegate cb_setLabelFor_Landroid_view_View_;
    private static IntPtr id_setLabelFor_Landroid_view_View_;
    private static Delegate cb_setLabelFor_Landroid_view_View_I;
    private static IntPtr id_setLabelFor_Landroid_view_View_I;
    private static Delegate cb_setLabeledBy_Landroid_view_View_;
    private static IntPtr id_setLabeledBy_Landroid_view_View_;
    private static Delegate cb_setLabeledBy_Landroid_view_View_I;
    private static IntPtr id_setLabeledBy_Landroid_view_View_I;
    private static Delegate cb_setParent_Landroid_view_View_;
    private static IntPtr id_setParent_Landroid_view_View_;
    private static Delegate cb_setParent_Landroid_view_View_I;
    private static IntPtr id_setParent_Landroid_view_View_I;
    private static Delegate cb_setSource_Landroid_view_View_;
    private static IntPtr id_setSource_Landroid_view_View_;
    private static Delegate cb_setSource_Landroid_view_View_I;
    private static IntPtr id_setSource_Landroid_view_View_I;
    private static Delegate cb_setTextSelection_II;
    private static IntPtr id_setTextSelection_II;
    private static Delegate cb_setTraversalAfter_Landroid_view_View_;
    private static IntPtr id_setTraversalAfter_Landroid_view_View_;
    private static Delegate cb_setTraversalAfter_Landroid_view_View_I;
    private static IntPtr id_setTraversalAfter_Landroid_view_View_I;
    private static Delegate cb_setTraversalBefore_Landroid_view_View_;
    private static IntPtr id_setTraversalBefore_Landroid_view_View_;
    private static Delegate cb_setTraversalBefore_Landroid_view_View_I;
    private static IntPtr id_setTraversalBefore_Landroid_view_View_I;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache18;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache19;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache1A;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1B;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache1C;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1D;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1E;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1F;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache20;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache21;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache22;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache23;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache24;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache25;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache26;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache27;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache28;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache29;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2A;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache2B;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache2C;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache2D;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache2E;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache2F;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache30;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache31;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache32;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache33;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache34;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache35;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache36;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache37;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache38;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache39;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3A;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3B;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3C;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3D;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache3E;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache3F;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache40;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache41;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache42;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache43;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache44;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache45;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache46;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache47;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache48;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache49;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4A;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache4B;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4C;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache4D;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4E;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache4F;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache50;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache51;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache52;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache53;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache54;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache55;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache56;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache57;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache58;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache59;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, bool> <>f__mg$cache5A;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, int, IntPtr, bool> <>f__mg$cache5B;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache5C;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache5D;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache5E;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache5F;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, int, bool> <>f__mg$cache60;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache61;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache62;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache63;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache64;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache65;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache66;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache67;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache68;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache69;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6A;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache6B;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6C;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache6D;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, int, int> <>f__mg$cache6E;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6F;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache70;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache71;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache72;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool AccessibilityFocused { get; public set; }
    public IList`1<AccessibilityActionCompat> ActionList { get; }
    public int Actions { get; }
    public bool Checkable { get; public set; }
    public bool Checked { get; public set; }
    public int ChildCount { get; }
    public ICharSequence ClassNameFormatted { get; public set; }
    public string ClassName { get; public set; }
    public bool Clickable { get; public set; }
    public CollectionInfoCompat CollectionInfo { get; }
    public CollectionItemInfoCompat CollectionItemInfo { get; }
    public ICharSequence ContentDescriptionFormatted { get; public set; }
    public string ContentDescription { get; public set; }
    public bool ContentInvalid { get; public set; }
    public bool ContextClickable { get; public set; }
    public bool Dismissable { get; public set; }
    public int DrawingOrder { get; public set; }
    public bool Editable { get; public set; }
    public bool Enabled { get; public set; }
    public ICharSequence ErrorFormatted { get; public set; }
    public string Error { get; public set; }
    public Bundle Extras { get; }
    public bool Focusable { get; public set; }
    public bool Focused { get; public set; }
    public bool ImportantForAccessibility { get; public set; }
    public Object Info { get; }
    public int InputType { get; public set; }
    public AccessibilityNodeInfoCompat LabelFor { get; }
    public AccessibilityNodeInfoCompat LabeledBy { get; }
    public int LiveRegion { get; public set; }
    public bool LongClickable { get; public set; }
    public int MaxTextLength { get; public set; }
    public int MovementGranularities { get; public set; }
    public bool MultiLine { get; public set; }
    public ICharSequence PackageNameFormatted { get; public set; }
    public string PackageName { get; public set; }
    public AccessibilityNodeInfoCompat Parent { get; }
    public bool Password { get; public set; }
    public RangeInfoCompat RangeInfo { get; public set; }
    public ICharSequence RoleDescriptionFormatted { get; public set; }
    public string RoleDescription { get; public set; }
    public bool Scrollable { get; public set; }
    public bool Selected { get; public set; }
    public ICharSequence TextFormatted { get; public set; }
    public string Text { get; public set; }
    public int TextSelectionEnd { get; }
    public int TextSelectionStart { get; }
    public AccessibilityNodeInfoCompat TraversalAfter { get; }
    public AccessibilityNodeInfoCompat TraversalBefore { get; }
    public string ViewIdResourceName { get; public set; }
    public bool VisibleToUser { get; public set; }
    public AccessibilityWindowInfoCompat Window { get; }
    public int WindowId { get; }
    protected AccessibilityNodeInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public AccessibilityNodeInfoCompat(Object info);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsAccessibilityFocusedHandler();
    private static bool n_IsAccessibilityFocused(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAccessibilityFocused_ZHandler();
    private static void n_SetAccessibilityFocused_Z(IntPtr jnienv, IntPtr native__this, bool focused);
    [RegisterAttribute("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")]
public virtual bool get_AccessibilityFocused();
    [RegisterAttribute("setAccessibilityFocused", "(Z)V", "GetSetAccessibilityFocused_ZHandler")]
public virtual void set_AccessibilityFocused(bool value);
    private static Delegate GetGetActionListHandler();
    private static IntPtr n_GetActionList(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActionList", "()Ljava/util/List;", "GetGetActionListHandler")]
public virtual IList`1<AccessibilityActionCompat> get_ActionList();
    private static Delegate GetGetActionsHandler();
    private static int n_GetActions(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActions", "()I", "GetGetActionsHandler")]
public virtual int get_Actions();
    private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("isCheckable", "()Z", "GetIsCheckableHandler")]
public virtual bool get_Checkable();
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void set_Checkable(bool value);
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    private static Delegate GetGetChildCountHandler();
    private static int n_GetChildCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChildCount", "()I", "GetGetChildCountHandler")]
public virtual int get_ChildCount();
    private static Delegate GetGetClassNameHandler();
    private static IntPtr n_GetClassName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetClassName_Ljava_lang_CharSequence_Handler();
    private static void n_SetClassName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_className);
    [RegisterAttribute("getClassName", "()Ljava/lang/CharSequence;", "GetGetClassNameHandler")]
public virtual ICharSequence get_ClassNameFormatted();
    [RegisterAttribute("setClassName", "(Ljava/lang/CharSequence;)V", "GetSetClassName_Ljava_lang_CharSequence_Handler")]
public virtual void set_ClassNameFormatted(ICharSequence value);
    public string get_ClassName();
    public void set_ClassName(string value);
    private static Delegate GetIsClickableHandler();
    private static bool n_IsClickable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetClickable_ZHandler();
    private static void n_SetClickable_Z(IntPtr jnienv, IntPtr native__this, bool clickable);
    [RegisterAttribute("isClickable", "()Z", "GetIsClickableHandler")]
public virtual bool get_Clickable();
    [RegisterAttribute("setClickable", "(Z)V", "GetSetClickable_ZHandler")]
public virtual void set_Clickable(bool value);
    private static Delegate GetGetCollectionInfoHandler();
    private static IntPtr n_GetCollectionInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCollectionInfo", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;", "GetGetCollectionInfoHandler")]
public virtual CollectionInfoCompat get_CollectionInfo();
    private static Delegate GetGetCollectionItemInfoHandler();
    private static IntPtr n_GetCollectionItemInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCollectionItemInfo", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$CollectionItemInfoCompat;", "GetGetCollectionItemInfoHandler")]
public virtual CollectionItemInfoCompat get_CollectionItemInfo();
    private static Delegate GetGetContentDescriptionHandler();
    private static IntPtr n_GetContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentDescription);
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")]
public virtual ICharSequence get_ContentDescriptionFormatted();
    [RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_ContentDescriptionFormatted(ICharSequence value);
    public string get_ContentDescription();
    public void set_ContentDescription(string value);
    private static Delegate GetIsContentInvalidHandler();
    private static bool n_IsContentInvalid(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContentInvalid_ZHandler();
    private static void n_SetContentInvalid_Z(IntPtr jnienv, IntPtr native__this, bool contentInvalid);
    [RegisterAttribute("isContentInvalid", "()Z", "GetIsContentInvalidHandler")]
public virtual bool get_ContentInvalid();
    [RegisterAttribute("setContentInvalid", "(Z)V", "GetSetContentInvalid_ZHandler")]
public virtual void set_ContentInvalid(bool value);
    private static Delegate GetIsContextClickableHandler();
    private static bool n_IsContextClickable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContextClickable_ZHandler();
    private static void n_SetContextClickable_Z(IntPtr jnienv, IntPtr native__this, bool contextClickable);
    [RegisterAttribute("isContextClickable", "()Z", "GetIsContextClickableHandler")]
public virtual bool get_ContextClickable();
    [RegisterAttribute("setContextClickable", "(Z)V", "GetSetContextClickable_ZHandler")]
public virtual void set_ContextClickable(bool value);
    private static Delegate GetIsDismissableHandler();
    private static bool n_IsDismissable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDismissable_ZHandler();
    private static void n_SetDismissable_Z(IntPtr jnienv, IntPtr native__this, bool dismissable);
    [RegisterAttribute("isDismissable", "()Z", "GetIsDismissableHandler")]
public virtual bool get_Dismissable();
    [RegisterAttribute("setDismissable", "(Z)V", "GetSetDismissable_ZHandler")]
public virtual void set_Dismissable(bool value);
    private static Delegate GetGetDrawingOrderHandler();
    private static int n_GetDrawingOrder(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDrawingOrder_IHandler();
    private static void n_SetDrawingOrder_I(IntPtr jnienv, IntPtr native__this, int drawingOrderInParent);
    [RegisterAttribute("getDrawingOrder", "()I", "GetGetDrawingOrderHandler")]
public virtual int get_DrawingOrder();
    [RegisterAttribute("setDrawingOrder", "(I)V", "GetSetDrawingOrder_IHandler")]
public virtual void set_DrawingOrder(int value);
    private static Delegate GetIsEditableHandler();
    private static bool n_IsEditable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetEditable_ZHandler();
    private static void n_SetEditable_Z(IntPtr jnienv, IntPtr native__this, bool editable);
    [RegisterAttribute("isEditable", "()Z", "GetIsEditableHandler")]
public virtual bool get_Editable();
    [RegisterAttribute("setEditable", "(Z)V", "GetSetEditable_ZHandler")]
public virtual void set_Editable(bool value);
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public virtual void set_Enabled(bool value);
    private static Delegate GetGetErrorHandler();
    private static IntPtr n_GetError(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetError_Ljava_lang_CharSequence_Handler();
    private static void n_SetError_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_error);
    [RegisterAttribute("getError", "()Ljava/lang/CharSequence;", "GetGetErrorHandler")]
public virtual ICharSequence get_ErrorFormatted();
    [RegisterAttribute("setError", "(Ljava/lang/CharSequence;)V", "GetSetError_Ljava_lang_CharSequence_Handler")]
public virtual void set_ErrorFormatted(ICharSequence value);
    public string get_Error();
    public void set_Error(string value);
    private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    private static Delegate GetIsFocusableHandler();
    private static bool n_IsFocusable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFocusable_ZHandler();
    private static void n_SetFocusable_Z(IntPtr jnienv, IntPtr native__this, bool focusable);
    [RegisterAttribute("isFocusable", "()Z", "GetIsFocusableHandler")]
public virtual bool get_Focusable();
    [RegisterAttribute("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")]
public virtual void set_Focusable(bool value);
    private static Delegate GetIsFocusedHandler();
    private static bool n_IsFocused(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFocused_ZHandler();
    private static void n_SetFocused_Z(IntPtr jnienv, IntPtr native__this, bool focused);
    [RegisterAttribute("isFocused", "()Z", "GetIsFocusedHandler")]
public virtual bool get_Focused();
    [RegisterAttribute("setFocused", "(Z)V", "GetSetFocused_ZHandler")]
public virtual void set_Focused(bool value);
    private static Delegate GetIsImportantForAccessibilityHandler();
    private static bool n_IsImportantForAccessibility(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetImportantForAccessibility_ZHandler();
    private static void n_SetImportantForAccessibility_Z(IntPtr jnienv, IntPtr native__this, bool important);
    [RegisterAttribute("isImportantForAccessibility", "()Z", "GetIsImportantForAccessibilityHandler")]
public virtual bool get_ImportantForAccessibility();
    [RegisterAttribute("setImportantForAccessibility", "(Z)V", "GetSetImportantForAccessibility_ZHandler")]
public virtual void set_ImportantForAccessibility(bool value);
    private static Delegate GetGetInfoHandler();
    private static IntPtr n_GetInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInfo", "()Ljava/lang/Object;", "GetGetInfoHandler")]
public virtual Object get_Info();
    private static Delegate GetGetInputTypeHandler();
    private static int n_GetInputType(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInputType_IHandler();
    private static void n_SetInputType_I(IntPtr jnienv, IntPtr native__this, int inputType);
    [RegisterAttribute("getInputType", "()I", "GetGetInputTypeHandler")]
public virtual int get_InputType();
    [RegisterAttribute("setInputType", "(I)V", "GetSetInputType_IHandler")]
public virtual void set_InputType(int value);
    private static Delegate GetGetLabelForHandler();
    private static IntPtr n_GetLabelFor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLabelFor", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetLabelForHandler")]
public virtual AccessibilityNodeInfoCompat get_LabelFor();
    private static Delegate GetGetLabeledByHandler();
    private static IntPtr n_GetLabeledBy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLabeledBy", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetLabeledByHandler")]
public virtual AccessibilityNodeInfoCompat get_LabeledBy();
    private static Delegate GetGetLiveRegionHandler();
    private static int n_GetLiveRegion(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLiveRegion_IHandler();
    private static void n_SetLiveRegion_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getLiveRegion", "()I", "GetGetLiveRegionHandler")]
public virtual int get_LiveRegion();
    [RegisterAttribute("setLiveRegion", "(I)V", "GetSetLiveRegion_IHandler")]
public virtual void set_LiveRegion(int value);
    private static Delegate GetIsLongClickableHandler();
    private static bool n_IsLongClickable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLongClickable_ZHandler();
    private static void n_SetLongClickable_Z(IntPtr jnienv, IntPtr native__this, bool longClickable);
    [RegisterAttribute("isLongClickable", "()Z", "GetIsLongClickableHandler")]
public virtual bool get_LongClickable();
    [RegisterAttribute("setLongClickable", "(Z)V", "GetSetLongClickable_ZHandler")]
public virtual void set_LongClickable(bool value);
    private static Delegate GetGetMaxTextLengthHandler();
    private static int n_GetMaxTextLength(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxTextLength_IHandler();
    private static void n_SetMaxTextLength_I(IntPtr jnienv, IntPtr native__this, int max);
    [RegisterAttribute("getMaxTextLength", "()I", "GetGetMaxTextLengthHandler")]
public virtual int get_MaxTextLength();
    [RegisterAttribute("setMaxTextLength", "(I)V", "GetSetMaxTextLength_IHandler")]
public virtual void set_MaxTextLength(int value);
    private static Delegate GetGetMovementGranularitiesHandler();
    private static int n_GetMovementGranularities(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMovementGranularities_IHandler();
    private static void n_SetMovementGranularities_I(IntPtr jnienv, IntPtr native__this, int granularities);
    [RegisterAttribute("getMovementGranularities", "()I", "GetGetMovementGranularitiesHandler")]
public virtual int get_MovementGranularities();
    [RegisterAttribute("setMovementGranularities", "(I)V", "GetSetMovementGranularities_IHandler")]
public virtual void set_MovementGranularities(int value);
    private static Delegate GetIsMultiLineHandler();
    private static bool n_IsMultiLine(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMultiLine_ZHandler();
    private static void n_SetMultiLine_Z(IntPtr jnienv, IntPtr native__this, bool multiLine);
    [RegisterAttribute("isMultiLine", "()Z", "GetIsMultiLineHandler")]
public virtual bool get_MultiLine();
    [RegisterAttribute("setMultiLine", "(Z)V", "GetSetMultiLine_ZHandler")]
public virtual void set_MultiLine(bool value);
    private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPackageName_Ljava_lang_CharSequence_Handler();
    private static void n_SetPackageName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [RegisterAttribute("getPackageName", "()Ljava/lang/CharSequence;", "GetGetPackageNameHandler")]
public virtual ICharSequence get_PackageNameFormatted();
    [RegisterAttribute("setPackageName", "(Ljava/lang/CharSequence;)V", "GetSetPackageName_Ljava_lang_CharSequence_Handler")]
public virtual void set_PackageNameFormatted(ICharSequence value);
    public string get_PackageName();
    public void set_PackageName(string value);
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParent", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetParentHandler")]
public virtual AccessibilityNodeInfoCompat get_Parent();
    private static Delegate GetIsPasswordHandler();
    private static bool n_IsPassword(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPassword_ZHandler();
    private static void n_SetPassword_Z(IntPtr jnienv, IntPtr native__this, bool password);
    [RegisterAttribute("isPassword", "()Z", "GetIsPasswordHandler")]
public virtual bool get_Password();
    [RegisterAttribute("setPassword", "(Z)V", "GetSetPassword_ZHandler")]
public virtual void set_Password(bool value);
    private static Delegate GetGetRangeInfoHandler();
    private static IntPtr n_GetRangeInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRangeInfo_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_Handler();
    private static void n_SetRangeInfo_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_rangeInfo);
    [RegisterAttribute("getRangeInfo", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$RangeInfoCompat;", "GetGetRangeInfoHandler")]
public virtual RangeInfoCompat get_RangeInfo();
    [RegisterAttribute("setRangeInfo", "(Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$RangeInfoCompat;)V", "GetSetRangeInfo_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_Handler")]
public virtual void set_RangeInfo(RangeInfoCompat value);
    private static Delegate GetGetRoleDescriptionHandler();
    private static IntPtr n_GetRoleDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRoleDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetRoleDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_roleDescription);
    [RegisterAttribute("getRoleDescription", "()Ljava/lang/CharSequence;", "GetGetRoleDescriptionHandler")]
public virtual ICharSequence get_RoleDescriptionFormatted();
    [RegisterAttribute("setRoleDescription", "(Ljava/lang/CharSequence;)V", "GetSetRoleDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_RoleDescriptionFormatted(ICharSequence value);
    public string get_RoleDescription();
    public void set_RoleDescription(string value);
    private static Delegate GetIsScrollableHandler();
    private static bool n_IsScrollable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrollable_ZHandler();
    private static void n_SetScrollable_Z(IntPtr jnienv, IntPtr native__this, bool scrollable);
    [RegisterAttribute("isScrollable", "()Z", "GetIsScrollableHandler")]
public virtual bool get_Scrollable();
    [RegisterAttribute("setScrollable", "(Z)V", "GetSetScrollable_ZHandler")]
public virtual void set_Scrollable(bool value);
    private static Delegate GetIsSelectedHandler();
    private static bool n_IsSelected(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSelected_ZHandler();
    private static void n_SetSelected_Z(IntPtr jnienv, IntPtr native__this, bool selected);
    [RegisterAttribute("isSelected", "()Z", "GetIsSelectedHandler")]
public virtual bool get_Selected();
    [RegisterAttribute("setSelected", "(Z)V", "GetSetSelected_ZHandler")]
public virtual void set_Selected(bool value);
    private static Delegate GetGetTextHandler();
    private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetText_Ljava_lang_CharSequence_Handler();
    private static void n_SetText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_text);
    [RegisterAttribute("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")]
public virtual ICharSequence get_TextFormatted();
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")]
public virtual void set_TextFormatted(ICharSequence value);
    public string get_Text();
    public void set_Text(string value);
    private static Delegate GetGetTextSelectionEndHandler();
    private static int n_GetTextSelectionEnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTextSelectionEnd", "()I", "GetGetTextSelectionEndHandler")]
public virtual int get_TextSelectionEnd();
    private static Delegate GetGetTextSelectionStartHandler();
    private static int n_GetTextSelectionStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTextSelectionStart", "()I", "GetGetTextSelectionStartHandler")]
public virtual int get_TextSelectionStart();
    private static Delegate GetGetTraversalAfterHandler();
    private static IntPtr n_GetTraversalAfter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTraversalAfter", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetTraversalAfterHandler")]
public virtual AccessibilityNodeInfoCompat get_TraversalAfter();
    private static Delegate GetGetTraversalBeforeHandler();
    private static IntPtr n_GetTraversalBefore(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTraversalBefore", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetTraversalBeforeHandler")]
public virtual AccessibilityNodeInfoCompat get_TraversalBefore();
    private static Delegate GetGetViewIdResourceNameHandler();
    private static IntPtr n_GetViewIdResourceName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetViewIdResourceName_Ljava_lang_String_Handler();
    private static void n_SetViewIdResourceName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewId);
    [RegisterAttribute("getViewIdResourceName", "()Ljava/lang/String;", "GetGetViewIdResourceNameHandler")]
public virtual string get_ViewIdResourceName();
    [RegisterAttribute("setViewIdResourceName", "(Ljava/lang/String;)V", "GetSetViewIdResourceName_Ljava_lang_String_Handler")]
public virtual void set_ViewIdResourceName(string value);
    private static Delegate GetIsVisibleToUserHandler();
    private static bool n_IsVisibleToUser(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetVisibleToUser_ZHandler();
    private static void n_SetVisibleToUser_Z(IntPtr jnienv, IntPtr native__this, bool visibleToUser);
    [RegisterAttribute("isVisibleToUser", "()Z", "GetIsVisibleToUserHandler")]
public virtual bool get_VisibleToUser();
    [RegisterAttribute("setVisibleToUser", "(Z)V", "GetSetVisibleToUser_ZHandler")]
public virtual void set_VisibleToUser(bool value);
    private static Delegate GetGetWindowHandler();
    private static IntPtr n_GetWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindow", "()Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetWindowHandler")]
public virtual AccessibilityWindowInfoCompat get_Window();
    private static Delegate GetGetWindowIdHandler();
    private static int n_GetWindowId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowId", "()I", "GetGetWindowIdHandler")]
public virtual int get_WindowId();
    private static Delegate GetAddAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler();
    private static void n_AddAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_action);
    [RegisterAttribute("addAction", "(Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;)V", "GetAddAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler")]
public virtual void AddAction(AccessibilityActionCompat action);
    private static Delegate GetAddAction_IHandler();
    private static void n_AddAction_I(IntPtr jnienv, IntPtr native__this, int action);
    [RegisterAttribute("addAction", "(I)V", "GetAddAction_IHandler")]
public virtual void AddAction(int action);
    private static Delegate GetAddChild_Landroid_view_View_Handler();
    private static void n_AddChild_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("addChild", "(Landroid/view/View;)V", "GetAddChild_Landroid_view_View_Handler")]
public virtual void AddChild(View child);
    private static Delegate GetAddChild_Landroid_view_View_IHandler();
    private static void n_AddChild_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("addChild", "(Landroid/view/View;I)V", "GetAddChild_Landroid_view_View_IHandler")]
public virtual void AddChild(View root, int virtualDescendantId);
    private static Delegate GetCanOpenPopupHandler();
    private static bool n_CanOpenPopup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canOpenPopup", "()Z", "GetCanOpenPopupHandler")]
public virtual bool CanOpenPopup();
    private static Delegate GetFindAccessibilityNodeInfosByText_Ljava_lang_String_Handler();
    private static IntPtr n_FindAccessibilityNodeInfosByText_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_text);
    [RegisterAttribute("findAccessibilityNodeInfosByText", "(Ljava/lang/String;)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_Handler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByText(string text);
    private static Delegate GetFindAccessibilityNodeInfosByViewId_Ljava_lang_String_Handler();
    private static IntPtr n_FindAccessibilityNodeInfosByViewId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewId);
    [RegisterAttribute("findAccessibilityNodeInfosByViewId", "(Ljava/lang/String;)Ljava/util/List;", "GetFindAccessibilityNodeInfosByViewId_Ljava_lang_String_Handler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByViewId(string viewId);
    private static Delegate GetFindFocus_IHandler();
    private static IntPtr n_FindFocus_I(IntPtr jnienv, IntPtr native__this, int focus);
    [RegisterAttribute("findFocus", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetFindFocus_IHandler")]
public virtual AccessibilityNodeInfoCompat FindFocus(int focus);
    private static Delegate GetFocusSearch_IHandler();
    private static IntPtr n_FocusSearch_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("focusSearch", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetFocusSearch_IHandler")]
public virtual AccessibilityNodeInfoCompat FocusSearch(int direction);
    private static Delegate GetGetBoundsInParent_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInParent_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [RegisterAttribute("getBoundsInParent", "(Landroid/graphics/Rect;)V", "GetGetBoundsInParent_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInParent(Rect outBounds);
    private static Delegate GetGetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [RegisterAttribute("getBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetGetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInScreen(Rect outBounds);
    private static Delegate GetGetChild_IHandler();
    private static IntPtr n_GetChild_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getChild", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetChild_IHandler")]
public virtual AccessibilityNodeInfoCompat GetChild(int index);
    [RegisterAttribute("obtain", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain();
    [RegisterAttribute("obtain", "(Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(AccessibilityNodeInfoCompat info);
    [RegisterAttribute("obtain", "(Landroid/view/View;)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(View source);
    [RegisterAttribute("obtain", "(Landroid/view/View;I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(View root, int virtualDescendantId);
    private static Delegate GetPerformAction_IHandler();
    private static bool n_PerformAction_I(IntPtr jnienv, IntPtr native__this, int action);
    [RegisterAttribute("performAction", "(I)Z", "GetPerformAction_IHandler")]
public virtual bool PerformAction(int action);
    private static Delegate GetPerformAction_ILandroid_os_Bundle_Handler();
    private static bool n_PerformAction_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int action, IntPtr native_arguments);
    [RegisterAttribute("performAction", "(ILandroid/os/Bundle;)Z", "GetPerformAction_ILandroid_os_Bundle_Handler")]
public virtual bool PerformAction(int action, Bundle arguments);
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    private static Delegate GetRefreshHandler();
    private static bool n_Refresh(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refresh", "()Z", "GetRefreshHandler")]
public virtual bool Refresh();
    private static Delegate GetRemoveAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler();
    private static bool n_RemoveAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_action);
    [RegisterAttribute("removeAction", "(Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;)Z", "GetRemoveAction_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler")]
public virtual bool RemoveAction(AccessibilityActionCompat action);
    private static Delegate GetRemoveChild_Landroid_view_View_Handler();
    private static bool n_RemoveChild_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("removeChild", "(Landroid/view/View;)Z", "GetRemoveChild_Landroid_view_View_Handler")]
public virtual bool RemoveChild(View child);
    private static Delegate GetRemoveChild_Landroid_view_View_IHandler();
    private static bool n_RemoveChild_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("removeChild", "(Landroid/view/View;I)Z", "GetRemoveChild_Landroid_view_View_IHandler")]
public virtual bool RemoveChild(View root, int virtualDescendantId);
    private static Delegate GetSetBoundsInParent_Landroid_graphics_Rect_Handler();
    private static void n_SetBoundsInParent_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("setBoundsInParent", "(Landroid/graphics/Rect;)V", "GetSetBoundsInParent_Landroid_graphics_Rect_Handler")]
public virtual void SetBoundsInParent(Rect bounds);
    private static Delegate GetSetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_SetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("setBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetSetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void SetBoundsInScreen(Rect bounds);
    private static Delegate GetSetCanOpenPopup_ZHandler();
    private static void n_SetCanOpenPopup_Z(IntPtr jnienv, IntPtr native__this, bool opensPopup);
    [RegisterAttribute("setCanOpenPopup", "(Z)V", "GetSetCanOpenPopup_ZHandler")]
public virtual void SetCanOpenPopup(bool opensPopup);
    private static Delegate GetSetCollectionInfo_Ljava_lang_Object_Handler();
    private static void n_SetCollectionInfo_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_collectionInfo);
    [RegisterAttribute("setCollectionInfo", "(Ljava/lang/Object;)V", "GetSetCollectionInfo_Ljava_lang_Object_Handler")]
public virtual void SetCollectionInfo(Object collectionInfo);
    private static Delegate GetSetCollectionItemInfo_Ljava_lang_Object_Handler();
    private static void n_SetCollectionItemInfo_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_collectionItemInfo);
    [RegisterAttribute("setCollectionItemInfo", "(Ljava/lang/Object;)V", "GetSetCollectionItemInfo_Ljava_lang_Object_Handler")]
public virtual void SetCollectionItemInfo(Object collectionItemInfo);
    private static Delegate GetSetLabelFor_Landroid_view_View_Handler();
    private static void n_SetLabelFor_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_labeled);
    [RegisterAttribute("setLabelFor", "(Landroid/view/View;)V", "GetSetLabelFor_Landroid_view_View_Handler")]
public virtual void SetLabelFor(View labeled);
    private static Delegate GetSetLabelFor_Landroid_view_View_IHandler();
    private static void n_SetLabelFor_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setLabelFor", "(Landroid/view/View;I)V", "GetSetLabelFor_Landroid_view_View_IHandler")]
public virtual void SetLabelFor(View root, int virtualDescendantId);
    private static Delegate GetSetLabeledBy_Landroid_view_View_Handler();
    private static void n_SetLabeledBy_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_label);
    [RegisterAttribute("setLabeledBy", "(Landroid/view/View;)V", "GetSetLabeledBy_Landroid_view_View_Handler")]
public virtual void SetLabeledBy(View label);
    private static Delegate GetSetLabeledBy_Landroid_view_View_IHandler();
    private static void n_SetLabeledBy_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setLabeledBy", "(Landroid/view/View;I)V", "GetSetLabeledBy_Landroid_view_View_IHandler")]
public virtual void SetLabeledBy(View root, int virtualDescendantId);
    private static Delegate GetSetParent_Landroid_view_View_Handler();
    private static void n_SetParent_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent);
    [RegisterAttribute("setParent", "(Landroid/view/View;)V", "GetSetParent_Landroid_view_View_Handler")]
public virtual void SetParent(View parent);
    private static Delegate GetSetParent_Landroid_view_View_IHandler();
    private static void n_SetParent_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setParent", "(Landroid/view/View;I)V", "GetSetParent_Landroid_view_View_IHandler")]
public virtual void SetParent(View root, int virtualDescendantId);
    private static Delegate GetSetSource_Landroid_view_View_Handler();
    private static void n_SetSource_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_source);
    [RegisterAttribute("setSource", "(Landroid/view/View;)V", "GetSetSource_Landroid_view_View_Handler")]
public virtual void SetSource(View source);
    private static Delegate GetSetSource_Landroid_view_View_IHandler();
    private static void n_SetSource_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setSource", "(Landroid/view/View;I)V", "GetSetSource_Landroid_view_View_IHandler")]
public virtual void SetSource(View root, int virtualDescendantId);
    private static Delegate GetSetTextSelection_IIHandler();
    private static void n_SetTextSelection_II(IntPtr jnienv, IntPtr native__this, int start, int end);
    [RegisterAttribute("setTextSelection", "(II)V", "GetSetTextSelection_IIHandler")]
public virtual void SetTextSelection(int start, int end);
    private static Delegate GetSetTraversalAfter_Landroid_view_View_Handler();
    private static void n_SetTraversalAfter_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("setTraversalAfter", "(Landroid/view/View;)V", "GetSetTraversalAfter_Landroid_view_View_Handler")]
public virtual void SetTraversalAfter(View view);
    private static Delegate GetSetTraversalAfter_Landroid_view_View_IHandler();
    private static void n_SetTraversalAfter_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setTraversalAfter", "(Landroid/view/View;I)V", "GetSetTraversalAfter_Landroid_view_View_IHandler")]
public virtual void SetTraversalAfter(View root, int virtualDescendantId);
    private static Delegate GetSetTraversalBefore_Landroid_view_View_Handler();
    private static void n_SetTraversalBefore_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("setTraversalBefore", "(Landroid/view/View;)V", "GetSetTraversalBefore_Landroid_view_View_Handler")]
public virtual void SetTraversalBefore(View view);
    private static Delegate GetSetTraversalBefore_Landroid_view_View_IHandler();
    private static void n_SetTraversalBefore_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setTraversalBefore", "(Landroid/view/View;I)V", "GetSetTraversalBefore_Landroid_view_View_IHandler")]
public virtual void SetTraversalBefore(View root, int virtualDescendantId);
}
[ExtensionAttribute]
public static class Android.Support.V4.View.Accessibility.AccessibilityNodeInfoCompatIAccessibilityNodeInfoImplExtensions : object {
    [ExtensionAttribute]
public static string GetAccessibilityActionLabel(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetClassName(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetContentDescription(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetError(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetPackageName(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetRoleDescription(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static string GetText(IAccessibilityNodeInfoImpl self, Object p0);
    [ExtensionAttribute]
public static Object NewAccessibilityAction(IAccessibilityNodeInfoImpl self, int p0, string p1);
    [ExtensionAttribute]
public static void SetClassName(IAccessibilityNodeInfoImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetContentDescription(IAccessibilityNodeInfoImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetError(IAccessibilityNodeInfoImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetPackageName(IAccessibilityNodeInfoImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetRoleDescription(IAccessibilityNodeInfoImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetText(IAccessibilityNodeInfoImpl self, Object p0, string p1);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityNodeProviderCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityNodeProviderCompat : Object {
    [RegisterAttribute("HOST_VIEW_ID")]
public static int HostViewId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_ctor_Ljava_lang_Object_;
    private static Delegate cb_getProvider;
    private static IntPtr id_getProvider;
    private static Delegate cb_createAccessibilityNodeInfo_I;
    private static IntPtr id_createAccessibilityNodeInfo_I;
    private static Delegate cb_findAccessibilityNodeInfosByText_Ljava_lang_String_I;
    private static IntPtr id_findAccessibilityNodeInfosByText_Ljava_lang_String_I;
    private static Delegate cb_findFocus_I;
    private static IntPtr id_findFocus_I;
    private static Delegate cb_performAction_IILandroid_os_Bundle_;
    private static IntPtr id_performAction_IILandroid_os_Bundle_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, int, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, int, int, IntPtr, bool> <>f__mg$cache4;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Object Provider { get; }
    protected AccessibilityNodeProviderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public AccessibilityNodeProviderCompat(Object provider);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetProviderHandler();
    private static IntPtr n_GetProvider(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProvider", "()Ljava/lang/Object;", "GetGetProviderHandler")]
public virtual Object get_Provider();
    private static Delegate GetCreateAccessibilityNodeInfo_IHandler();
    private static IntPtr n_CreateAccessibilityNodeInfo_I(IntPtr jnienv, IntPtr native__this, int virtualViewId);
    [RegisterAttribute("createAccessibilityNodeInfo", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetCreateAccessibilityNodeInfo_IHandler")]
public virtual AccessibilityNodeInfoCompat CreateAccessibilityNodeInfo(int virtualViewId);
    private static Delegate GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler();
    private static IntPtr n_FindAccessibilityNodeInfosByText_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_text, int virtualViewId);
    [RegisterAttribute("findAccessibilityNodeInfosByText", "(Ljava/lang/String;I)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByText(string text, int virtualViewId);
    private static Delegate GetFindFocus_IHandler();
    private static IntPtr n_FindFocus_I(IntPtr jnienv, IntPtr native__this, int focus);
    [RegisterAttribute("findFocus", "(I)Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetFindFocus_IHandler")]
public virtual AccessibilityNodeInfoCompat FindFocus(int focus);
    private static Delegate GetPerformAction_IILandroid_os_Bundle_Handler();
    private static bool n_PerformAction_IILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int virtualViewId, int action, IntPtr native_arguments);
    [RegisterAttribute("performAction", "(IILandroid/os/Bundle;)Z", "GetPerformAction_IILandroid_os_Bundle_Handler")]
public virtual bool PerformAction(int virtualViewId, int action, Bundle arguments);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityRecordCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityRecordCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Ljava_lang_Object_;
    private static Delegate cb_getAddedCount;
    private static Delegate cb_setAddedCount_I;
    private static IntPtr id_getAddedCount;
    private static IntPtr id_setAddedCount_I;
    private static Delegate cb_getBeforeText;
    private static Delegate cb_setBeforeText_Ljava_lang_CharSequence_;
    private static IntPtr id_getBeforeText;
    private static IntPtr id_setBeforeText_Ljava_lang_CharSequence_;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static IntPtr id_isChecked;
    private static IntPtr id_setChecked_Z;
    private static Delegate cb_getClassName;
    private static Delegate cb_setClassName_Ljava_lang_CharSequence_;
    private static IntPtr id_getClassName;
    private static IntPtr id_setClassName_Ljava_lang_CharSequence_;
    private static Delegate cb_getContentDescription;
    private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    private static IntPtr id_getContentDescription;
    private static IntPtr id_setContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_getCurrentItemIndex;
    private static Delegate cb_setCurrentItemIndex_I;
    private static IntPtr id_getCurrentItemIndex;
    private static IntPtr id_setCurrentItemIndex_I;
    private static Delegate cb_isEnabled;
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_isEnabled;
    private static IntPtr id_setEnabled_Z;
    private static Delegate cb_getFromIndex;
    private static Delegate cb_setFromIndex_I;
    private static IntPtr id_getFromIndex;
    private static IntPtr id_setFromIndex_I;
    private static Delegate cb_isFullScreen;
    private static Delegate cb_setFullScreen_Z;
    private static IntPtr id_isFullScreen;
    private static IntPtr id_setFullScreen_Z;
    private static Delegate cb_getImpl;
    private static IntPtr id_getImpl;
    private static Delegate cb_getItemCount;
    private static Delegate cb_setItemCount_I;
    private static IntPtr id_getItemCount;
    private static IntPtr id_setItemCount_I;
    private static Delegate cb_getMaxScrollX;
    private static Delegate cb_setMaxScrollX_I;
    private static IntPtr id_getMaxScrollX;
    private static IntPtr id_setMaxScrollX_I;
    private static Delegate cb_getMaxScrollY;
    private static Delegate cb_setMaxScrollY_I;
    private static IntPtr id_getMaxScrollY;
    private static IntPtr id_setMaxScrollY_I;
    private static Delegate cb_getParcelableData;
    private static Delegate cb_setParcelableData_Landroid_os_Parcelable_;
    private static IntPtr id_getParcelableData;
    private static IntPtr id_setParcelableData_Landroid_os_Parcelable_;
    private static Delegate cb_isPassword;
    private static Delegate cb_setPassword_Z;
    private static IntPtr id_isPassword;
    private static IntPtr id_setPassword_Z;
    private static Delegate cb_getRemovedCount;
    private static Delegate cb_setRemovedCount_I;
    private static IntPtr id_getRemovedCount;
    private static IntPtr id_setRemovedCount_I;
    private static Delegate cb_getScrollX;
    private static Delegate cb_setScrollX_I;
    private static IntPtr id_getScrollX;
    private static IntPtr id_setScrollX_I;
    private static Delegate cb_getScrollY;
    private static Delegate cb_setScrollY_I;
    private static IntPtr id_getScrollY;
    private static IntPtr id_setScrollY_I;
    private static Delegate cb_isScrollable;
    private static Delegate cb_setScrollable_Z;
    private static IntPtr id_isScrollable;
    private static IntPtr id_setScrollable_Z;
    private static Delegate cb_getSource;
    private static IntPtr id_getSource;
    private static Delegate cb_getText;
    private static IntPtr id_getText;
    private static Delegate cb_getToIndex;
    private static Delegate cb_setToIndex_I;
    private static IntPtr id_getToIndex;
    private static IntPtr id_setToIndex_I;
    private static Delegate cb_getWindowId;
    private static IntPtr id_getWindowId;
    private static IntPtr id_obtain;
    private static IntPtr id_obtain_Landroid_support_v4_view_accessibility_AccessibilityRecordCompat_;
    private static Delegate cb_recycle;
    private static IntPtr id_recycle;
    private static Delegate cb_setSource_Landroid_view_View_;
    private static IntPtr id_setSource_Landroid_view_View_;
    private static Delegate cb_setSource_Landroid_view_View_I;
    private static IntPtr id_setSource_Landroid_view_View_I;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache18;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache19;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1A;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1B;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache1C;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache1D;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache1E;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache1F;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache20;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache21;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache22;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache23;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache24;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache25;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache26;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache27;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache28;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache29;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache2A;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2B;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache2C;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int AddedCount { get; public set; }
    public ICharSequence BeforeTextFormatted { get; public set; }
    public string BeforeText { get; public set; }
    public bool Checked { get; public set; }
    public ICharSequence ClassNameFormatted { get; public set; }
    public string ClassName { get; public set; }
    public ICharSequence ContentDescriptionFormatted { get; public set; }
    public string ContentDescription { get; public set; }
    public int CurrentItemIndex { get; public set; }
    public bool Enabled { get; public set; }
    public int FromIndex { get; public set; }
    public bool FullScreen { get; public set; }
    [ObsoleteAttribute("deprecated")]
public Object Impl { get; }
    public int ItemCount { get; public set; }
    public int MaxScrollX { get; public set; }
    public int MaxScrollY { get; public set; }
    public IParcelable ParcelableData { get; public set; }
    public bool Password { get; public set; }
    public int RemovedCount { get; public set; }
    public int ScrollX { get; public set; }
    public int ScrollY { get; public set; }
    public bool Scrollable { get; public set; }
    public AccessibilityNodeInfoCompat Source { get; }
    public IList`1<ICharSequence> Text { get; }
    public int ToIndex { get; public set; }
    public int WindowId { get; }
    protected AccessibilityRecordCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public AccessibilityRecordCompat(Object record);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAddedCountHandler();
    private static int n_GetAddedCount(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAddedCount_IHandler();
    private static void n_SetAddedCount_I(IntPtr jnienv, IntPtr native__this, int addedCount);
    [RegisterAttribute("getAddedCount", "()I", "GetGetAddedCountHandler")]
public virtual int get_AddedCount();
    [RegisterAttribute("setAddedCount", "(I)V", "GetSetAddedCount_IHandler")]
public virtual void set_AddedCount(int value);
    private static Delegate GetGetBeforeTextHandler();
    private static IntPtr n_GetBeforeText(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBeforeText_Ljava_lang_CharSequence_Handler();
    private static void n_SetBeforeText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_beforeText);
    [RegisterAttribute("getBeforeText", "()Ljava/lang/CharSequence;", "GetGetBeforeTextHandler")]
public virtual ICharSequence get_BeforeTextFormatted();
    [RegisterAttribute("setBeforeText", "(Ljava/lang/CharSequence;)V", "GetSetBeforeText_Ljava_lang_CharSequence_Handler")]
public virtual void set_BeforeTextFormatted(ICharSequence value);
    public string get_BeforeText();
    public void set_BeforeText(string value);
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool isChecked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    private static Delegate GetGetClassNameHandler();
    private static IntPtr n_GetClassName(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetClassName_Ljava_lang_CharSequence_Handler();
    private static void n_SetClassName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_className);
    [RegisterAttribute("getClassName", "()Ljava/lang/CharSequence;", "GetGetClassNameHandler")]
public virtual ICharSequence get_ClassNameFormatted();
    [RegisterAttribute("setClassName", "(Ljava/lang/CharSequence;)V", "GetSetClassName_Ljava_lang_CharSequence_Handler")]
public virtual void set_ClassNameFormatted(ICharSequence value);
    public string get_ClassName();
    public void set_ClassName(string value);
    private static Delegate GetGetContentDescriptionHandler();
    private static IntPtr n_GetContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentDescription);
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")]
public virtual ICharSequence get_ContentDescriptionFormatted();
    [RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_ContentDescriptionFormatted(ICharSequence value);
    public string get_ContentDescription();
    public void set_ContentDescription(string value);
    private static Delegate GetGetCurrentItemIndexHandler();
    private static int n_GetCurrentItemIndex(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCurrentItemIndex_IHandler();
    private static void n_SetCurrentItemIndex_I(IntPtr jnienv, IntPtr native__this, int currentItemIndex);
    [RegisterAttribute("getCurrentItemIndex", "()I", "GetGetCurrentItemIndexHandler")]
public virtual int get_CurrentItemIndex();
    [RegisterAttribute("setCurrentItemIndex", "(I)V", "GetSetCurrentItemIndex_IHandler")]
public virtual void set_CurrentItemIndex(int value);
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public virtual void set_Enabled(bool value);
    private static Delegate GetGetFromIndexHandler();
    private static int n_GetFromIndex(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFromIndex_IHandler();
    private static void n_SetFromIndex_I(IntPtr jnienv, IntPtr native__this, int fromIndex);
    [RegisterAttribute("getFromIndex", "()I", "GetGetFromIndexHandler")]
public virtual int get_FromIndex();
    [RegisterAttribute("setFromIndex", "(I)V", "GetSetFromIndex_IHandler")]
public virtual void set_FromIndex(int value);
    private static Delegate GetIsFullScreenHandler();
    private static bool n_IsFullScreen(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFullScreen_ZHandler();
    private static void n_SetFullScreen_Z(IntPtr jnienv, IntPtr native__this, bool isFullScreen);
    [RegisterAttribute("isFullScreen", "()Z", "GetIsFullScreenHandler")]
public virtual bool get_FullScreen();
    [RegisterAttribute("setFullScreen", "(Z)V", "GetSetFullScreen_ZHandler")]
public virtual void set_FullScreen(bool value);
    private static Delegate GetGetImplHandler();
    private static IntPtr n_GetImpl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImpl", "()Ljava/lang/Object;", "GetGetImplHandler")]
public virtual Object get_Impl();
    private static Delegate GetGetItemCountHandler();
    private static int n_GetItemCount(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemCount_IHandler();
    private static void n_SetItemCount_I(IntPtr jnienv, IntPtr native__this, int itemCount);
    [RegisterAttribute("getItemCount", "()I", "GetGetItemCountHandler")]
public virtual int get_ItemCount();
    [RegisterAttribute("setItemCount", "(I)V", "GetSetItemCount_IHandler")]
public virtual void set_ItemCount(int value);
    private static Delegate GetGetMaxScrollXHandler();
    private static int n_GetMaxScrollX(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxScrollX_IHandler();
    private static void n_SetMaxScrollX_I(IntPtr jnienv, IntPtr native__this, int maxScrollX);
    [RegisterAttribute("getMaxScrollX", "()I", "GetGetMaxScrollXHandler")]
public virtual int get_MaxScrollX();
    [RegisterAttribute("setMaxScrollX", "(I)V", "GetSetMaxScrollX_IHandler")]
public virtual void set_MaxScrollX(int value);
    private static Delegate GetGetMaxScrollYHandler();
    private static int n_GetMaxScrollY(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxScrollY_IHandler();
    private static void n_SetMaxScrollY_I(IntPtr jnienv, IntPtr native__this, int maxScrollY);
    [RegisterAttribute("getMaxScrollY", "()I", "GetGetMaxScrollYHandler")]
public virtual int get_MaxScrollY();
    [RegisterAttribute("setMaxScrollY", "(I)V", "GetSetMaxScrollY_IHandler")]
public virtual void set_MaxScrollY(int value);
    private static Delegate GetGetParcelableDataHandler();
    private static IntPtr n_GetParcelableData(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetParcelableData_Landroid_os_Parcelable_Handler();
    private static void n_SetParcelableData_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_parcelableData);
    [RegisterAttribute("getParcelableData", "()Landroid/os/Parcelable;", "GetGetParcelableDataHandler")]
public virtual IParcelable get_ParcelableData();
    [RegisterAttribute("setParcelableData", "(Landroid/os/Parcelable;)V", "GetSetParcelableData_Landroid_os_Parcelable_Handler")]
public virtual void set_ParcelableData(IParcelable value);
    private static Delegate GetIsPasswordHandler();
    private static bool n_IsPassword(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPassword_ZHandler();
    private static void n_SetPassword_Z(IntPtr jnienv, IntPtr native__this, bool isPassword);
    [RegisterAttribute("isPassword", "()Z", "GetIsPasswordHandler")]
public virtual bool get_Password();
    [RegisterAttribute("setPassword", "(Z)V", "GetSetPassword_ZHandler")]
public virtual void set_Password(bool value);
    private static Delegate GetGetRemovedCountHandler();
    private static int n_GetRemovedCount(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRemovedCount_IHandler();
    private static void n_SetRemovedCount_I(IntPtr jnienv, IntPtr native__this, int removedCount);
    [RegisterAttribute("getRemovedCount", "()I", "GetGetRemovedCountHandler")]
public virtual int get_RemovedCount();
    [RegisterAttribute("setRemovedCount", "(I)V", "GetSetRemovedCount_IHandler")]
public virtual void set_RemovedCount(int value);
    private static Delegate GetGetScrollXHandler();
    private static int n_GetScrollX(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrollX_IHandler();
    private static void n_SetScrollX_I(IntPtr jnienv, IntPtr native__this, int scrollX);
    [RegisterAttribute("getScrollX", "()I", "GetGetScrollXHandler")]
public virtual int get_ScrollX();
    [RegisterAttribute("setScrollX", "(I)V", "GetSetScrollX_IHandler")]
public virtual void set_ScrollX(int value);
    private static Delegate GetGetScrollYHandler();
    private static int n_GetScrollY(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrollY_IHandler();
    private static void n_SetScrollY_I(IntPtr jnienv, IntPtr native__this, int scrollY);
    [RegisterAttribute("getScrollY", "()I", "GetGetScrollYHandler")]
public virtual int get_ScrollY();
    [RegisterAttribute("setScrollY", "(I)V", "GetSetScrollY_IHandler")]
public virtual void set_ScrollY(int value);
    private static Delegate GetIsScrollableHandler();
    private static bool n_IsScrollable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrollable_ZHandler();
    private static void n_SetScrollable_Z(IntPtr jnienv, IntPtr native__this, bool scrollable);
    [RegisterAttribute("isScrollable", "()Z", "GetIsScrollableHandler")]
public virtual bool get_Scrollable();
    [RegisterAttribute("setScrollable", "(Z)V", "GetSetScrollable_ZHandler")]
public virtual void set_Scrollable(bool value);
    private static Delegate GetGetSourceHandler();
    private static IntPtr n_GetSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSource", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetSourceHandler")]
public virtual AccessibilityNodeInfoCompat get_Source();
    private static Delegate GetGetTextHandler();
    private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getText", "()Ljava/util/List;", "GetGetTextHandler")]
public virtual IList`1<ICharSequence> get_Text();
    private static Delegate GetGetToIndexHandler();
    private static int n_GetToIndex(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetToIndex_IHandler();
    private static void n_SetToIndex_I(IntPtr jnienv, IntPtr native__this, int toIndex);
    [RegisterAttribute("getToIndex", "()I", "GetGetToIndexHandler")]
public virtual int get_ToIndex();
    [RegisterAttribute("setToIndex", "(I)V", "GetSetToIndex_IHandler")]
public virtual void set_ToIndex(int value);
    private static Delegate GetGetWindowIdHandler();
    private static int n_GetWindowId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowId", "()I", "GetGetWindowIdHandler")]
public virtual int get_WindowId();
    [RegisterAttribute("obtain", "()Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat Obtain();
    [RegisterAttribute("obtain", "(Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;)Landroid/support/v4/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat Obtain(AccessibilityRecordCompat record);
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    private static Delegate GetSetSource_Landroid_view_View_Handler();
    private static void n_SetSource_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_source);
    [RegisterAttribute("setSource", "(Landroid/view/View;)V", "GetSetSource_Landroid_view_View_Handler")]
public virtual void SetSource(View source);
    private static Delegate GetSetSource_Landroid_view_View_IHandler();
    private static void n_SetSource_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setSource", "(Landroid/view/View;I)V", "GetSetSource_Landroid_view_View_IHandler")]
public virtual void SetSource(View root, int virtualDescendantId);
}
[ExtensionAttribute]
public static class Android.Support.V4.View.Accessibility.AccessibilityRecordCompatIAccessibilityRecordImplExtensions : object {
    [ExtensionAttribute]
public static string GetBeforeText(IAccessibilityRecordImpl self, Object p0);
    [ExtensionAttribute]
public static string GetClassName(IAccessibilityRecordImpl self, Object p0);
    [ExtensionAttribute]
public static string GetContentDescription(IAccessibilityRecordImpl self, Object p0);
    [ExtensionAttribute]
public static void SetBeforeText(IAccessibilityRecordImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetClassName(IAccessibilityRecordImpl self, Object p0, string p1);
    [ExtensionAttribute]
public static void SetContentDescription(IAccessibilityRecordImpl self, Object p0, string p1);
}
[RegisterAttribute("android/support/v4/view/accessibility/AccessibilityWindowInfoCompat")]
public class Android.Support.V4.View.Accessibility.AccessibilityWindowInfoCompat : Object {
    [RegisterAttribute("TYPE_ACCESSIBILITY_OVERLAY")]
public static int TypeAccessibilityOverlay;
    [RegisterAttribute("TYPE_APPLICATION")]
public static int TypeApplication;
    [RegisterAttribute("TYPE_INPUT_METHOD")]
public static int TypeInputMethod;
    [RegisterAttribute("TYPE_SPLIT_SCREEN_DIVIDER")]
public static int TypeSplitScreenDivider;
    [RegisterAttribute("TYPE_SYSTEM")]
public static int TypeSystem;
    internal static IntPtr java_class_handle;
    private static Delegate cb_getAnchor;
    private static IntPtr id_getAnchor;
    private static Delegate cb_getChildCount;
    private static IntPtr id_getChildCount;
    private static Delegate cb_getId;
    private static IntPtr id_getId;
    private static Delegate cb_isAccessibilityFocused;
    private static IntPtr id_isAccessibilityFocused;
    private static Delegate cb_isActive;
    private static IntPtr id_isActive;
    private static Delegate cb_isFocused;
    private static IntPtr id_isFocused;
    private static Delegate cb_getLayer;
    private static IntPtr id_getLayer;
    private static Delegate cb_getParent;
    private static IntPtr id_getParent;
    private static Delegate cb_getRoot;
    private static IntPtr id_getRoot;
    private static Delegate cb_getTitle;
    private static IntPtr id_getTitle;
    private static Delegate cb_getType;
    private static IntPtr id_getType;
    private static Delegate cb_getBoundsInScreen_Landroid_graphics_Rect_;
    private static IntPtr id_getBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_getChild_I;
    private static IntPtr id_getChild_I;
    private static IntPtr id_obtain;
    private static IntPtr id_obtain_Landroid_support_v4_view_accessibility_AccessibilityWindowInfoCompat_;
    private static Delegate cb_recycle;
    private static IntPtr id_recycle;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheD;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public AccessibilityNodeInfoCompat Anchor { get; }
    public int ChildCount { get; }
    public int Id { get; }
    public bool IsAccessibilityFocused { get; }
    public bool IsActive { get; }
    public bool IsFocused { get; }
    public int Layer { get; }
    public AccessibilityWindowInfoCompat Parent { get; }
    public AccessibilityNodeInfoCompat Root { get; }
    public ICharSequence TitleFormatted { get; }
    public string Title { get; }
    public int Type { get; }
    protected AccessibilityWindowInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAnchorHandler();
    private static IntPtr n_GetAnchor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAnchor", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetAnchorHandler")]
public virtual AccessibilityNodeInfoCompat get_Anchor();
    private static Delegate GetGetChildCountHandler();
    private static int n_GetChildCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChildCount", "()I", "GetGetChildCountHandler")]
public virtual int get_ChildCount();
    private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    private static Delegate GetIsAccessibilityFocusedHandler();
    private static bool n_IsAccessibilityFocused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")]
public virtual bool get_IsAccessibilityFocused();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler")]
public virtual bool get_IsActive();
    private static Delegate GetIsFocusedHandler();
    private static bool n_IsFocused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isFocused", "()Z", "GetIsFocusedHandler")]
public virtual bool get_IsFocused();
    private static Delegate GetGetLayerHandler();
    private static int n_GetLayer(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayer", "()I", "GetGetLayerHandler")]
public virtual int get_Layer();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParent", "()Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetParentHandler")]
public virtual AccessibilityWindowInfoCompat get_Parent();
    private static Delegate GetGetRootHandler();
    private static IntPtr n_GetRoot(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRoot", "()Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetRootHandler")]
public virtual AccessibilityNodeInfoCompat get_Root();
    private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")]
public virtual ICharSequence get_TitleFormatted();
    public string get_Title();
    private static Delegate GetGetTypeHandler();
    private static int n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()I", "GetGetTypeHandler")]
public virtual int get_Type();
    private static Delegate GetGetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [RegisterAttribute("getBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetGetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInScreen(Rect outBounds);
    private static Delegate GetGetChild_IHandler();
    private static IntPtr n_GetChild_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getChild", "(I)Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetChild_IHandler")]
public virtual AccessibilityWindowInfoCompat GetChild(int index);
    [RegisterAttribute("obtain", "()Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;", "")]
public static AccessibilityWindowInfoCompat Obtain();
    [RegisterAttribute("obtain", "(Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;)Landroid/support/v4/view/accessibility/AccessibilityWindowInfoCompat;", "")]
public static AccessibilityWindowInfoCompat Obtain(AccessibilityWindowInfoCompat info);
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
}
[ExtensionAttribute]
public static class Android.Support.V4.View.Accessibility.AccessibilityWindowInfoCompatIAccessibilityWindowInfoImplExtensions : object {
    [ExtensionAttribute]
public static string GetTitle(IAccessibilityWindowInfoImpl self, Object p0);
}
[RegisterAttribute("android/support/v4/view/AccessibilityDelegateCompat")]
public class Android.Support.V4.View.AccessibilityDelegateCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_dispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_dispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_getAccessibilityNodeProvider_Landroid_view_View_;
    private static IntPtr id_getAccessibilityNodeProvider_Landroid_view_View_;
    private static Delegate cb_onInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_onInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static IntPtr id_onInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static Delegate cb_onPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_onRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_performAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_;
    private static IntPtr id_performAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_;
    private static Delegate cb_sendAccessibilityEvent_Landroid_view_View_I;
    private static IntPtr id_sendAccessibilityEvent_Landroid_view_View_I;
    private static Delegate cb_sendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_sendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, int, IntPtr, bool> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected AccessibilityDelegateCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static bool n_DispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("dispatchPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual bool DispatchPopulateAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetGetAccessibilityNodeProvider_Landroid_view_View_Handler();
    private static IntPtr n_GetAccessibilityNodeProvider_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_host);
    [RegisterAttribute("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;", "GetGetAccessibilityNodeProvider_Landroid_view_View_Handler")]
public virtual AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(View host);
    private static Delegate GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void OnInitializeAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler();
    private static void n_OnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_info);
    [RegisterAttribute("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler")]
public virtual void OnInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info);
    private static Delegate GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void OnPopulateAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static bool n_OnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_child, IntPtr native_e);
    [RegisterAttribute("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual bool OnRequestSendAccessibilityEvent(ViewGroup host, View child, AccessibilityEvent e);
    private static Delegate GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler();
    private static bool n_PerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, int action, IntPtr native_args);
    [RegisterAttribute("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler")]
public virtual bool PerformAccessibilityAction(View host, int action, Bundle args);
    private static Delegate GetSendAccessibilityEvent_Landroid_view_View_IHandler();
    private static void n_SendAccessibilityEvent_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_host, int eventType);
    [RegisterAttribute("sendAccessibilityEvent", "(Landroid/view/View;I)V", "GetSendAccessibilityEvent_Landroid_view_View_IHandler")]
public virtual void SendAccessibilityEvent(View host, int eventType);
    private static Delegate GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_SendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("sendAccessibilityEventUnchecked", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void SendAccessibilityEventUnchecked(View host, AccessibilityEvent e);
}
[RegisterAttribute("android/support/v4/view/ActionProvider")]
public abstract class Android.Support.V4.View.ActionProvider : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static Delegate cb_getContext;
    private static IntPtr id_getContext;
    private static Delegate cb_hasSubMenu;
    private static IntPtr id_hasSubMenu;
    private static Delegate cb_isVisible;
    private static IntPtr id_isVisible;
    private static Delegate cb_onCreateActionView;
    private static Delegate cb_onCreateActionView_Landroid_view_MenuItem_;
    private static IntPtr id_onCreateActionView_Landroid_view_MenuItem_;
    private static Delegate cb_onPerformDefaultAction;
    private static IntPtr id_onPerformDefaultAction;
    private static Delegate cb_onPrepareSubMenu_Landroid_view_SubMenu_;
    private static IntPtr id_onPrepareSubMenu_Landroid_view_SubMenu_;
    private static Delegate cb_overridesItemVisibility;
    private static IntPtr id_overridesItemVisibility;
    private static Delegate cb_refreshVisibility;
    private static IntPtr id_refreshVisibility;
    private static Delegate cb_reset;
    private static IntPtr id_reset;
    private static Delegate cb_setSubUiVisibilityListener_Landroid_support_v4_view_ActionProvider_SubUiVisibilityListener_;
    private static IntPtr id_setSubUiVisibilityListener_Landroid_support_v4_view_ActionProvider_SubUiVisibilityListener_;
    private static Delegate cb_setVisibilityListener_Landroid_support_v4_view_ActionProvider_VisibilityListener_;
    private static IntPtr id_setVisibilityListener_Landroid_support_v4_view_ActionProvider_VisibilityListener_;
    private static Delegate cb_subUiVisibilityChanged_Z;
    private static IntPtr id_subUiVisibilityChanged_Z;
    private WeakReference weak_implementor_SetSubUiVisibilityListener;
    private WeakReference weak_implementor_SetVisibilityListener;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`2<ISubUiVisibilityListenerImplementor, bool> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`2<IVisibilityListenerImplementor, bool> <>f__mg$cacheE;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Context Context { get; }
    public bool HasSubMenu { get; }
    public bool IsVisible { get; }
    protected ActionProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ActionProvider(Context context);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetHasSubMenuHandler();
    private static bool n_HasSubMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSubMenu", "()Z", "GetHasSubMenuHandler")]
public virtual bool get_HasSubMenu();
    private static Delegate GetIsVisibleHandler();
    private static bool n_IsVisible(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isVisible", "()Z", "GetIsVisibleHandler")]
public virtual bool get_IsVisible();
    private static Delegate GetOnCreateActionViewHandler();
    private static IntPtr n_OnCreateActionView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")]
public abstract virtual View OnCreateActionView();
    private static Delegate GetOnCreateActionView_Landroid_view_MenuItem_Handler();
    private static IntPtr n_OnCreateActionView_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_forItem);
    [RegisterAttribute("onCreateActionView", "(Landroid/view/MenuItem;)Landroid/view/View;", "GetOnCreateActionView_Landroid_view_MenuItem_Handler")]
public virtual View OnCreateActionView(IMenuItem forItem);
    private static Delegate GetOnPerformDefaultActionHandler();
    private static bool n_OnPerformDefaultAction(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPerformDefaultAction", "()Z", "GetOnPerformDefaultActionHandler")]
public virtual bool OnPerformDefaultAction();
    private static Delegate GetOnPrepareSubMenu_Landroid_view_SubMenu_Handler();
    private static void n_OnPrepareSubMenu_Landroid_view_SubMenu_(IntPtr jnienv, IntPtr native__this, IntPtr native_subMenu);
    [RegisterAttribute("onPrepareSubMenu", "(Landroid/view/SubMenu;)V", "GetOnPrepareSubMenu_Landroid_view_SubMenu_Handler")]
public virtual void OnPrepareSubMenu(ISubMenu subMenu);
    private static Delegate GetOverridesItemVisibilityHandler();
    private static bool n_OverridesItemVisibility(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("overridesItemVisibility", "()Z", "GetOverridesItemVisibilityHandler")]
public virtual bool OverridesItemVisibility();
    private static Delegate GetRefreshVisibilityHandler();
    private static void n_RefreshVisibility(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refreshVisibility", "()V", "GetRefreshVisibilityHandler")]
public virtual void RefreshVisibility();
    private static Delegate GetResetHandler();
    private static void n_Reset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reset", "()V", "GetResetHandler")]
public virtual void Reset();
    private static Delegate GetSetSubUiVisibilityListener_Landroid_support_v4_view_ActionProvider_SubUiVisibilityListener_Handler();
    private static void n_SetSubUiVisibilityListener_Landroid_support_v4_view_ActionProvider_SubUiVisibilityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setSubUiVisibilityListener", "(Landroid/support/v4/view/ActionProvider$SubUiVisibilityListener;)V", "GetSetSubUiVisibilityListener_Landroid_support_v4_view_ActionProvider_SubUiVisibilityListener_Handler")]
public virtual void SetSubUiVisibilityListener(ISubUiVisibilityListener listener);
    private static Delegate GetSetVisibilityListener_Landroid_support_v4_view_ActionProvider_VisibilityListener_Handler();
    private static void n_SetVisibilityListener_Landroid_support_v4_view_ActionProvider_VisibilityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setVisibilityListener", "(Landroid/support/v4/view/ActionProvider$VisibilityListener;)V", "GetSetVisibilityListener_Landroid_support_v4_view_ActionProvider_VisibilityListener_Handler")]
public virtual void SetVisibilityListener(IVisibilityListener listener);
    private static Delegate GetSubUiVisibilityChanged_ZHandler();
    private static void n_SubUiVisibilityChanged_Z(IntPtr jnienv, IntPtr native__this, bool isVisible);
    [RegisterAttribute("subUiVisibilityChanged", "(Z)V", "GetSubUiVisibilityChanged_ZHandler")]
public virtual void SubUiVisibilityChanged(bool isVisible);
    public void add_SubUiVisibility(EventHandler`1<SubUiVisibilityEventArgs> value);
    public void remove_SubUiVisibility(EventHandler`1<SubUiVisibilityEventArgs> value);
    private ISubUiVisibilityListenerImplementor __CreateISubUiVisibilityListenerImplementor();
    public void add_Visibility(EventHandler`1<VisibilityEventArgs> value);
    public void remove_Visibility(EventHandler`1<VisibilityEventArgs> value);
    private IVisibilityListenerImplementor __CreateIVisibilityListenerImplementor();
}
[RegisterAttribute("android/support/v4/view/ActionProvider")]
internal class Android.Support.V4.View.ActionProviderInvoker : ActionProvider {
    private static IntPtr id_onCreateActionView;
    protected Type ThresholdType { get; }
    public ActionProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")]
public virtual View OnCreateActionView();
}
[RegisterAttribute("android/support/v4/view/animation/PathInterpolatorCompat")]
public class Android.Support.V4.View.Animation.PathInterpolatorCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_create_Landroid_graphics_Path_;
    private static IntPtr id_create_FF;
    private static IntPtr id_create_FFFF;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal PathInterpolatorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Landroid/graphics/Path;)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(Path path);
    [RegisterAttribute("create", "(FF)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(float controlX, float controlY);
    [RegisterAttribute("create", "(FFFF)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(float controlX1, float controlY1, float controlX2, float controlY2);
}
public class Android.Support.V4.View.AnimationCancelEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationCancelEventArgs(View view);
    public View get_View();
}
public class Android.Support.V4.View.AnimationEndEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationEndEventArgs(View view);
    public View get_View();
}
public class Android.Support.V4.View.AnimationStartEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationStartEventArgs(View view);
    public View get_View();
}
public class Android.Support.V4.View.ApplyWindowInsetsHandler : MulticastDelegate {
    public ApplyWindowInsetsHandler(object object, IntPtr method);
    public virtual WindowInsetsCompat Invoke(View v, WindowInsetsCompat insets);
    public virtual IAsyncResult BeginInvoke(View v, WindowInsetsCompat insets, AsyncCallback callback, object object);
    public virtual WindowInsetsCompat EndInvoke(IAsyncResult result);
}
[RegisterAttribute("android/support/v4/view/GestureDetectorCompat")]
public class Android.Support.V4.View.GestureDetectorCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_view_GestureDetector_OnGestureListener_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_view_GestureDetector_OnGestureListener_Landroid_os_Handler_;
    private static IntPtr id_isLongpressEnabled;
    private static IntPtr id_setIsLongpressEnabled_Z;
    private static IntPtr id_onTouchEvent_Landroid_view_MotionEvent_;
    private static IntPtr id_setOnDoubleTapListener_Landroid_view_GestureDetector_OnDoubleTapListener_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsLongpressEnabled { get; public set; }
    internal GestureDetectorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V", "")]
public GestureDetectorCompat(Context context, IOnGestureListener listener);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V", "")]
public GestureDetectorCompat(Context context, IOnGestureListener listener, Handler handler);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isLongpressEnabled", "()Z", "GetIsLongpressEnabledHandler")]
public bool get_IsLongpressEnabled();
    [RegisterAttribute("setIsLongpressEnabled", "(Z)V", "GetSetIsLongpressEnabled_ZHandler")]
public void set_IsLongpressEnabled(bool value);
    [RegisterAttribute("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "")]
public bool OnTouchEvent(MotionEvent e);
    [RegisterAttribute("setOnDoubleTapListener", "(Landroid/view/GestureDetector$OnDoubleTapListener;)V", "")]
public void SetOnDoubleTapListener(IOnDoubleTapListener listener);
}
[RegisterAttribute("android/support/v4/view/GravityCompat")]
public class Android.Support.V4.View.GravityCompat : Object {
    [RegisterAttribute("END")]
public static int End;
    [RegisterAttribute("RELATIVE_HORIZONTAL_GRAVITY_MASK")]
public static int RelativeHorizontalGravityMask;
    [RegisterAttribute("RELATIVE_LAYOUT_DIRECTION")]
public static int RelativeLayoutDirection;
    [RegisterAttribute("START")]
public static int Start;
    internal static IntPtr java_class_handle;
    private static IntPtr id_apply_IIILandroid_graphics_Rect_Landroid_graphics_Rect_I;
    private static IntPtr id_apply_IIILandroid_graphics_Rect_IILandroid_graphics_Rect_I;
    private static IntPtr id_applyDisplay_ILandroid_graphics_Rect_Landroid_graphics_Rect_I;
    private static IntPtr id_getAbsoluteGravity_II;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal GravityCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("apply", "(IIILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "")]
public static void Apply(int gravity, int w, int h, Rect container, Rect outRect, int layoutDirection);
    [RegisterAttribute("apply", "(IIILandroid/graphics/Rect;IILandroid/graphics/Rect;I)V", "")]
public static void Apply(int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect, int layoutDirection);
    [RegisterAttribute("applyDisplay", "(ILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "")]
public static void ApplyDisplay(int gravity, Rect display, Rect inoutObj, int layoutDirection);
    [RegisterAttribute("getAbsoluteGravity", "(II)I", "")]
public static int GetAbsoluteGravity(int gravity, int layoutDirection);
}
[RegisterAttribute("android/support/v4/view/LayoutInflaterFactory", "", "Android.Support.V4.View.ILayoutInflaterFactoryInvoker")]
public interface Android.Support.V4.View.ILayoutInflaterFactory {
    [RegisterAttribute("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler:Android.Support.V4.View.ILayoutInflaterFactoryInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual View OnCreateView(View parent, string name, Context context, IAttributeSet attrs);
}
[RegisterAttribute("android/support/v4/view/LayoutInflaterFactory")]
internal class Android.Support.V4.View.ILayoutInflaterFactoryInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_;
    private IntPtr id_onCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ILayoutInflaterFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILayoutInflaterFactoryInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILayoutInflaterFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler();
    private static IntPtr n_OnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_name, IntPtr native_context, IntPtr native_attrs);
    public sealed virtual View OnCreateView(View parent, string name, Context context, IAttributeSet attrs);
}
[RegisterAttribute("android/support/v4/view/NestedScrollingChild", "", "Android.Support.V4.View.INestedScrollingChildInvoker")]
public interface Android.Support.V4.View.INestedScrollingChild {
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    [RegisterAttribute("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool get_HasNestedScrollingParent();
    [RegisterAttribute("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool get_NestedScrollingEnabled();
    [RegisterAttribute("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_NestedScrollingEnabled(bool value);
    [RegisterAttribute("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    [RegisterAttribute("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    [RegisterAttribute("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    [RegisterAttribute("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool StartNestedScroll(ScrollAxis axes);
    [RegisterAttribute("stopNestedScroll", "()V", "GetStopNestedScrollHandler:Android.Support.V4.View.INestedScrollingChildInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void StopNestedScroll();
}
[RegisterAttribute("android/support/v4/view/NestedScrollingChild")]
internal class Android.Support.V4.View.INestedScrollingChildInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_hasNestedScrollingParent;
    private IntPtr id_hasNestedScrollingParent;
    private static Delegate cb_isNestedScrollingEnabled;
    private static Delegate cb_setNestedScrollingEnabled_Z;
    private IntPtr id_isNestedScrollingEnabled;
    private IntPtr id_setNestedScrollingEnabled_Z;
    private static Delegate cb_dispatchNestedFling_FFZ;
    private IntPtr id_dispatchNestedFling_FFZ;
    private static Delegate cb_dispatchNestedPreFling_FF;
    private IntPtr id_dispatchNestedPreFling_FF;
    private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayI;
    private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    private IntPtr id_dispatchNestedScroll_IIIIarrayI;
    private static Delegate cb_startNestedScroll_I;
    private IntPtr id_startNestedScroll_I;
    private static Delegate cb_stopNestedScroll;
    private IntPtr id_stopNestedScroll;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, float, float, bool, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, float, float, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, IntPtr, IntPtr, bool> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`8<IntPtr, IntPtr, int, int, int, int, IntPtr, bool> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, int, bool> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache8;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    public INestedScrollingChildInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingChildInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static INestedScrollingChild GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_NestedScrollingEnabled();
    public sealed virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    public sealed virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int native_axes);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void StopNestedScroll();
}
[RegisterAttribute("android/support/v4/view/NestedScrollingParent", "", "Android.Support.V4.View.INestedScrollingParentInvoker")]
public interface Android.Support.V4.View.INestedScrollingParent {
    public ScrollAxis NestedScrollAxes { get; }
    [RegisterAttribute("getNestedScrollAxes", "()I", "GetGetNestedScrollAxesHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ScrollAxis get_NestedScrollAxes();
    [RegisterAttribute("onNestedFling", "(Landroid/view/View;FFZ)Z", "GetOnNestedFling_Landroid_view_View_FFZHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("onNestedPreFling", "(Landroid/view/View;FF)Z", "GetOnNestedPreFling_Landroid_view_View_FFHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/View;II[I)V", "GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIII)V", "GetOnNestedScroll_Landroid_view_View_IIIIHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;I)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis nestedScrollAxes);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/View;Landroid/view/View;I)Z", "GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual bool OnStartNestedScroll(View child, View target, ScrollAxis nestedScrollAxes);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler:Android.Support.V4.View.INestedScrollingParentInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnStopNestedScroll(View target);
}
[RegisterAttribute("android/support/v4/view/NestedScrollingParent")]
internal class Android.Support.V4.View.INestedScrollingParentInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getNestedScrollAxes;
    private IntPtr id_getNestedScrollAxes;
    private static Delegate cb_onNestedFling_Landroid_view_View_FFZ;
    private IntPtr id_onNestedFling_Landroid_view_View_FFZ;
    private static Delegate cb_onNestedPreFling_Landroid_view_View_FF;
    private IntPtr id_onNestedPreFling_Landroid_view_View_FF;
    private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayI;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayI;
    private static Delegate cb_onNestedScroll_Landroid_view_View_IIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIII;
    private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, IntPtr, float, float, bool, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, float, float, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, int, int, IntPtr> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`7<IntPtr, IntPtr, IntPtr, int, int, int, int> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`5<IntPtr, IntPtr, IntPtr, IntPtr, int> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`6<IntPtr, IntPtr, IntPtr, IntPtr, int, bool> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache7;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ScrollAxis NestedScrollAxes { get; }
    public INestedScrollingParentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingParentInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static INestedScrollingParent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ScrollAxis get_NestedScrollAxes();
    private static Delegate GetOnNestedFling_Landroid_view_View_FFZHandler();
    private static bool n_OnNestedFling_Landroid_view_View_FFZ(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    private static Delegate GetOnNestedPreFling_Landroid_view_View_FFHandler();
    private static bool n_OnNestedPreFling_Landroid_view_View_FF(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY);
    public sealed virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_nestedScrollAxes);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis nestedScrollAxes);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_nestedScrollAxes);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis nestedScrollAxes);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    public sealed virtual void OnStopNestedScroll(View target);
}
[RegisterAttribute("android/support/v4/view/InputDeviceCompat")]
public class Android.Support.V4.View.InputDeviceCompat : Object {
    [RegisterAttribute("SOURCE_ANY")]
public static int SourceAny;
    [RegisterAttribute("SOURCE_CLASS_BUTTON")]
public static int SourceClassButton;
    [RegisterAttribute("SOURCE_CLASS_JOYSTICK")]
public static int SourceClassJoystick;
    [RegisterAttribute("SOURCE_CLASS_MASK")]
public static int SourceClassMask;
    [RegisterAttribute("SOURCE_CLASS_NONE")]
public static int SourceClassNone;
    [RegisterAttribute("SOURCE_CLASS_POINTER")]
public static int SourceClassPointer;
    [RegisterAttribute("SOURCE_CLASS_POSITION")]
public static int SourceClassPosition;
    [RegisterAttribute("SOURCE_CLASS_TRACKBALL")]
public static int SourceClassTrackball;
    [RegisterAttribute("SOURCE_DPAD")]
public static int SourceDpad;
    [RegisterAttribute("SOURCE_GAMEPAD")]
public static int SourceGamepad;
    [RegisterAttribute("SOURCE_HDMI")]
public static int SourceHdmi;
    [RegisterAttribute("SOURCE_JOYSTICK")]
public static int SourceJoystick;
    [RegisterAttribute("SOURCE_KEYBOARD")]
public static int SourceKeyboard;
    [RegisterAttribute("SOURCE_MOUSE")]
public static int SourceMouse;
    [RegisterAttribute("SOURCE_STYLUS")]
public static int SourceStylus;
    [RegisterAttribute("SOURCE_TOUCHPAD")]
public static int SourceTouchpad;
    [RegisterAttribute("SOURCE_TOUCHSCREEN")]
public static int SourceTouchscreen;
    [RegisterAttribute("SOURCE_TOUCH_NAVIGATION")]
public static int SourceTouchNavigation;
    [RegisterAttribute("SOURCE_TRACKBALL")]
public static int SourceTrackball;
    [RegisterAttribute("SOURCE_UNKNOWN")]
public static int SourceUnknown;
    internal static IntPtr java_class_handle;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal InputDeviceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/view/OnApplyWindowInsetsListener", "", "Android.Support.V4.View.IOnApplyWindowInsetsListenerInvoker")]
public interface Android.Support.V4.View.IOnApplyWindowInsetsListener {
    [RegisterAttribute("onApplyWindowInsets", "(Landroid/view/View;Landroid/support/v4/view/WindowInsetsCompat;)Landroid/support/v4/view/WindowInsetsCompat;", "GetOnApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_Handler:Android.Support.V4.View.IOnApplyWindowInsetsListenerInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
}
[RegisterAttribute("mono/android/support/v4/view/OnApplyWindowInsetsListenerImplementor")]
internal class Android.Support.V4.View.IOnApplyWindowInsetsListenerImplementor : Object {
    public ApplyWindowInsetsHandler Handler;
    public sealed virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
    internal static bool __IsEmpty(IOnApplyWindowInsetsListenerImplementor value);
}
[RegisterAttribute("android/support/v4/view/OnApplyWindowInsetsListener")]
internal class Android.Support.V4.View.IOnApplyWindowInsetsListenerInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_;
    private IntPtr id_onApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_;
    [CompilerGeneratedAttribute]
private static Func`5<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IOnApplyWindowInsetsListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnApplyWindowInsetsListenerInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IOnApplyWindowInsetsListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_Handler();
    private static IntPtr n_OnApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_insets);
    public sealed virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
}
[RegisterAttribute("android/support/v4/view/ScrollingView", "", "Android.Support.V4.View.IScrollingViewInvoker")]
public interface Android.Support.V4.View.IScrollingView {
    [RegisterAttribute("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeHorizontalScrollExtent();
    [RegisterAttribute("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeHorizontalScrollOffset();
    [RegisterAttribute("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeHorizontalScrollRange();
    [RegisterAttribute("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeVerticalScrollExtent();
    [RegisterAttribute("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeVerticalScrollOffset();
    [RegisterAttribute("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler:Android.Support.V4.View.IScrollingViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual int ComputeVerticalScrollRange();
}
[RegisterAttribute("android/support/v4/view/ScrollingView")]
internal class Android.Support.V4.View.IScrollingViewInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_computeHorizontalScrollExtent;
    private IntPtr id_computeHorizontalScrollExtent;
    private static Delegate cb_computeHorizontalScrollOffset;
    private IntPtr id_computeHorizontalScrollOffset;
    private static Delegate cb_computeHorizontalScrollRange;
    private IntPtr id_computeHorizontalScrollRange;
    private static Delegate cb_computeVerticalScrollExtent;
    private IntPtr id_computeVerticalScrollExtent;
    private static Delegate cb_computeVerticalScrollOffset;
    private IntPtr id_computeVerticalScrollOffset;
    private static Delegate cb_computeVerticalScrollRange;
    private IntPtr id_computeVerticalScrollRange;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache5;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IScrollingViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IScrollingViewInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IScrollingView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetComputeHorizontalScrollExtentHandler();
    private static int n_ComputeHorizontalScrollExtent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollExtent();
    private static Delegate GetComputeHorizontalScrollOffsetHandler();
    private static int n_ComputeHorizontalScrollOffset(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollOffset();
    private static Delegate GetComputeHorizontalScrollRangeHandler();
    private static int n_ComputeHorizontalScrollRange(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollRange();
    private static Delegate GetComputeVerticalScrollExtentHandler();
    private static int n_ComputeVerticalScrollExtent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollExtent();
    private static Delegate GetComputeVerticalScrollOffsetHandler();
    private static int n_ComputeVerticalScrollOffset(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollOffset();
    private static Delegate GetComputeVerticalScrollRangeHandler();
    private static int n_ComputeVerticalScrollRange(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollRange();
}
[RegisterAttribute("android/support/v4/view/TintableBackgroundView", "", "Android.Support.V4.View.ITintableBackgroundViewInvoker")]
public interface Android.Support.V4.View.ITintableBackgroundView {
    public ColorStateList SupportBackgroundTintList { get; public set; }
    public Mode SupportBackgroundTintMode { get; public set; }
    [RegisterAttribute("getSupportBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportBackgroundTintListHandler:Android.Support.V4.View.ITintableBackgroundViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ColorStateList get_SupportBackgroundTintList();
    [RegisterAttribute("setSupportBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler:Android.Support.V4.View.ITintableBackgroundViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_SupportBackgroundTintList(ColorStateList value);
    [RegisterAttribute("getSupportBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportBackgroundTintModeHandler:Android.Support.V4.View.ITintableBackgroundViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Mode get_SupportBackgroundTintMode();
    [RegisterAttribute("setSupportBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler:Android.Support.V4.View.ITintableBackgroundViewInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_SupportBackgroundTintMode(Mode value);
}
[RegisterAttribute("android/support/v4/view/TintableBackgroundView")]
internal class Android.Support.V4.View.ITintableBackgroundViewInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getSupportBackgroundTintList;
    private static Delegate cb_setSupportBackgroundTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportBackgroundTintList;
    private IntPtr id_setSupportBackgroundTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportBackgroundTintMode;
    private static Delegate cb_setSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportBackgroundTintMode;
    private IntPtr id_setSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList SupportBackgroundTintList { get; public set; }
    public Mode SupportBackgroundTintMode { get; public set; }
    public ITintableBackgroundViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableBackgroundViewInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ITintableBackgroundView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetSupportBackgroundTintListHandler();
    private static IntPtr n_GetSupportBackgroundTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportBackgroundTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportBackgroundTintList();
    public sealed virtual void set_SupportBackgroundTintList(ColorStateList value);
    private static Delegate GetGetSupportBackgroundTintModeHandler();
    private static IntPtr n_GetSupportBackgroundTintMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportBackgroundTintMode();
    public sealed virtual void set_SupportBackgroundTintMode(Mode value);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorListener", "", "Android.Support.V4.View.IViewPropertyAnimatorListenerInvoker")]
public interface Android.Support.V4.View.IViewPropertyAnimatorListener {
    [RegisterAttribute("onAnimationCancel", "(Landroid/view/View;)V", "GetOnAnimationCancel_Landroid_view_View_Handler:Android.Support.V4.View.IViewPropertyAnimatorListenerInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationCancel(View view);
    [RegisterAttribute("onAnimationEnd", "(Landroid/view/View;)V", "GetOnAnimationEnd_Landroid_view_View_Handler:Android.Support.V4.View.IViewPropertyAnimatorListenerInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationEnd(View view);
    [RegisterAttribute("onAnimationStart", "(Landroid/view/View;)V", "GetOnAnimationStart_Landroid_view_View_Handler:Android.Support.V4.View.IViewPropertyAnimatorListenerInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationStart(View view);
}
[RegisterAttribute("mono/android/support/v4/view/ViewPropertyAnimatorListenerImplementor")]
internal class Android.Support.V4.View.IViewPropertyAnimatorListenerImplementor : Object {
    private object sender;
    public EventHandler`1<AnimationCancelEventArgs> OnAnimationCancelHandler;
    public EventHandler`1<AnimationEndEventArgs> OnAnimationEndHandler;
    public EventHandler`1<AnimationStartEventArgs> OnAnimationStartHandler;
    public IViewPropertyAnimatorListenerImplementor(object sender);
    public sealed virtual void OnAnimationCancel(View view);
    public sealed virtual void OnAnimationEnd(View view);
    public sealed virtual void OnAnimationStart(View view);
    internal static bool __IsEmpty(IViewPropertyAnimatorListenerImplementor value);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorListener")]
internal class Android.Support.V4.View.IViewPropertyAnimatorListenerInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onAnimationCancel_Landroid_view_View_;
    private IntPtr id_onAnimationCancel_Landroid_view_View_;
    private static Delegate cb_onAnimationEnd_Landroid_view_View_;
    private IntPtr id_onAnimationEnd_Landroid_view_View_;
    private static Delegate cb_onAnimationStart_Landroid_view_View_;
    private IntPtr id_onAnimationStart_Landroid_view_View_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IViewPropertyAnimatorListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IViewPropertyAnimatorListenerInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IViewPropertyAnimatorListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationCancel_Landroid_view_View_Handler();
    private static void n_OnAnimationCancel_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationCancel(View view);
    private static Delegate GetOnAnimationEnd_Landroid_view_View_Handler();
    private static void n_OnAnimationEnd_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationEnd(View view);
    private static Delegate GetOnAnimationStart_Landroid_view_View_Handler();
    private static void n_OnAnimationStart_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationStart(View view);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorUpdateListener", "", "Android.Support.V4.View.IViewPropertyAnimatorUpdateListenerInvoker")]
public interface Android.Support.V4.View.IViewPropertyAnimatorUpdateListener {
    [RegisterAttribute("onAnimationUpdate", "(Landroid/view/View;)V", "GetOnAnimationUpdate_Landroid_view_View_Handler:Android.Support.V4.View.IViewPropertyAnimatorUpdateListenerInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void OnAnimationUpdate(View view);
}
[RegisterAttribute("mono/android/support/v4/view/ViewPropertyAnimatorUpdateListenerImplementor")]
internal class Android.Support.V4.View.IViewPropertyAnimatorUpdateListenerImplementor : Object {
    private object sender;
    public EventHandler`1<ViewPropertyAnimatorUpdateEventArgs> Handler;
    public IViewPropertyAnimatorUpdateListenerImplementor(object sender);
    public sealed virtual void OnAnimationUpdate(View view);
    internal static bool __IsEmpty(IViewPropertyAnimatorUpdateListenerImplementor value);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorUpdateListener")]
internal class Android.Support.V4.View.IViewPropertyAnimatorUpdateListenerInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onAnimationUpdate_Landroid_view_View_;
    private IntPtr id_onAnimationUpdate_Landroid_view_View_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IViewPropertyAnimatorUpdateListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IViewPropertyAnimatorUpdateListenerInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IViewPropertyAnimatorUpdateListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationUpdate_Landroid_view_View_Handler();
    private static void n_OnAnimationUpdate_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationUpdate(View view);
}
[RegisterAttribute("android/support/v4/view/KeyEventCompat")]
public class Android.Support.V4.View.KeyEventCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_dispatch_Landroid_view_KeyEvent_Landroid_view_KeyEvent_Callback_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr id_getKeyDispatcherState_Landroid_view_View_;
    private static IntPtr id_hasModifiers_Landroid_view_KeyEvent_I;
    private static IntPtr id_hasNoModifiers_Landroid_view_KeyEvent_;
    private static IntPtr id_isCtrlPressed_Landroid_view_KeyEvent_;
    private static IntPtr id_isTracking_Landroid_view_KeyEvent_;
    private static IntPtr id_metaStateHasModifiers_II;
    private static IntPtr id_metaStateHasNoModifiers_I;
    private static IntPtr id_normalizeMetaState_I;
    private static IntPtr id_startTracking_Landroid_view_KeyEvent_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal KeyEventCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("dispatch", "(Landroid/view/KeyEvent;Landroid/view/KeyEvent$Callback;Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
public static bool Dispatch(KeyEvent e, ICallback receiver, Object state, Object target);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getKeyDispatcherState", "(Landroid/view/View;)Ljava/lang/Object;", "")]
public static Object GetKeyDispatcherState(View view);
    [RegisterAttribute("hasModifiers", "(Landroid/view/KeyEvent;I)Z", "")]
public static bool HasModifiers(KeyEvent e, int modifiers);
    [RegisterAttribute("hasNoModifiers", "(Landroid/view/KeyEvent;)Z", "")]
public static bool HasNoModifiers(KeyEvent e);
    [RegisterAttribute("isCtrlPressed", "(Landroid/view/KeyEvent;)Z", "")]
public static bool IsCtrlPressed(KeyEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isTracking", "(Landroid/view/KeyEvent;)Z", "")]
public static bool IsTracking(KeyEvent e);
    [RegisterAttribute("metaStateHasModifiers", "(II)Z", "")]
public static bool MetaStateHasModifiers(int metaState, int modifiers);
    [RegisterAttribute("metaStateHasNoModifiers", "(I)Z", "")]
public static bool MetaStateHasNoModifiers(int metaState);
    [RegisterAttribute("normalizeMetaState", "(I)I", "")]
public static int NormalizeMetaState(int metaState);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startTracking", "(Landroid/view/KeyEvent;)V", "")]
public static void StartTracking(KeyEvent e);
}
[RegisterAttribute("android/support/v4/view/LayoutInflaterCompat")]
public class Android.Support.V4.View.LayoutInflaterCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getFactory_Landroid_view_LayoutInflater_;
    private static IntPtr id_setFactory_Landroid_view_LayoutInflater_Landroid_support_v4_view_LayoutInflaterFactory_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal LayoutInflaterCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getFactory", "(Landroid/view/LayoutInflater;)Landroid/support/v4/view/LayoutInflaterFactory;", "")]
public static ILayoutInflaterFactory GetFactory(LayoutInflater inflater);
    [RegisterAttribute("setFactory", "(Landroid/view/LayoutInflater;Landroid/support/v4/view/LayoutInflaterFactory;)V", "")]
public static void SetFactory(LayoutInflater inflater, ILayoutInflaterFactory factory);
}
[RegisterAttribute("android/support/v4/view/MarginLayoutParamsCompat")]
public class Android.Support.V4.View.MarginLayoutParamsCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getLayoutDirection_Landroid_view_ViewGroup_MarginLayoutParams_;
    private static IntPtr id_getMarginEnd_Landroid_view_ViewGroup_MarginLayoutParams_;
    private static IntPtr id_getMarginStart_Landroid_view_ViewGroup_MarginLayoutParams_;
    private static IntPtr id_isMarginRelative_Landroid_view_ViewGroup_MarginLayoutParams_;
    private static IntPtr id_resolveLayoutDirection_Landroid_view_ViewGroup_MarginLayoutParams_I;
    private static IntPtr id_setLayoutDirection_Landroid_view_ViewGroup_MarginLayoutParams_I;
    private static IntPtr id_setMarginEnd_Landroid_view_ViewGroup_MarginLayoutParams_I;
    private static IntPtr id_setMarginStart_Landroid_view_ViewGroup_MarginLayoutParams_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MarginLayoutParamsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetLayoutDirection(MarginLayoutParams lp);
    [RegisterAttribute("getMarginEnd", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetMarginEnd(MarginLayoutParams lp);
    [RegisterAttribute("getMarginStart", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetMarginStart(MarginLayoutParams lp);
    [RegisterAttribute("isMarginRelative", "(Landroid/view/ViewGroup$MarginLayoutParams;)Z", "")]
public static bool IsMarginRelative(MarginLayoutParams lp);
    [RegisterAttribute("resolveLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void ResolveLayoutDirection(MarginLayoutParams lp, int layoutDirection);
    [RegisterAttribute("setLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetLayoutDirection(MarginLayoutParams lp, int layoutDirection);
    [RegisterAttribute("setMarginEnd", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetMarginEnd(MarginLayoutParams lp, int marginEnd);
    [RegisterAttribute("setMarginStart", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetMarginStart(MarginLayoutParams lp, int marginStart);
}
[RegisterAttribute("android/support/v4/view/MenuCompat")]
public class Android.Support.V4.View.MenuCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_setShowAsAction_Landroid_view_MenuItem_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MenuCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShowAsAction", "(Landroid/view/MenuItem;I)V", "")]
public static void SetShowAsAction(IMenuItem item, int actionEnum);
}
[RegisterAttribute("android/support/v4/view/MenuItemCompat")]
public class Android.Support.V4.View.MenuItemCompat : Object {
    [RegisterAttribute("SHOW_AS_ACTION_ALWAYS")]
public static int ShowAsActionAlways;
    [RegisterAttribute("SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW")]
public static int ShowAsActionCollapseActionView;
    [RegisterAttribute("SHOW_AS_ACTION_IF_ROOM")]
public static int ShowAsActionIfRoom;
    [RegisterAttribute("SHOW_AS_ACTION_NEVER")]
public static int ShowAsActionNever;
    [RegisterAttribute("SHOW_AS_ACTION_WITH_TEXT")]
public static int ShowAsActionWithText;
    internal static IntPtr java_class_handle;
    private static IntPtr id_collapseActionView_Landroid_view_MenuItem_;
    private static IntPtr id_expandActionView_Landroid_view_MenuItem_;
    private static IntPtr id_getActionProvider_Landroid_view_MenuItem_;
    private static IntPtr id_getActionView_Landroid_view_MenuItem_;
    private static IntPtr id_isActionViewExpanded_Landroid_view_MenuItem_;
    private static IntPtr id_setActionProvider_Landroid_view_MenuItem_Landroid_support_v4_view_ActionProvider_;
    private static IntPtr id_setActionView_Landroid_view_MenuItem_Landroid_view_View_;
    private static IntPtr id_setActionView_Landroid_view_MenuItem_I;
    private static IntPtr id_setOnActionExpandListener_Landroid_view_MenuItem_Landroid_support_v4_view_MenuItemCompat_OnActionExpandListener_;
    private static IntPtr id_setShowAsAction_Landroid_view_MenuItem_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MenuItemCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("collapseActionView", "(Landroid/view/MenuItem;)Z", "")]
public static bool CollapseActionView(IMenuItem item);
    [RegisterAttribute("expandActionView", "(Landroid/view/MenuItem;)Z", "")]
public static bool ExpandActionView(IMenuItem item);
    [RegisterAttribute("getActionProvider", "(Landroid/view/MenuItem;)Landroid/support/v4/view/ActionProvider;", "")]
public static ActionProvider GetActionProvider(IMenuItem item);
    [RegisterAttribute("getActionView", "(Landroid/view/MenuItem;)Landroid/view/View;", "")]
public static View GetActionView(IMenuItem item);
    [RegisterAttribute("isActionViewExpanded", "(Landroid/view/MenuItem;)Z", "")]
public static bool IsActionViewExpanded(IMenuItem item);
    [RegisterAttribute("setActionProvider", "(Landroid/view/MenuItem;Landroid/support/v4/view/ActionProvider;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionProvider(IMenuItem item, ActionProvider provider);
    [RegisterAttribute("setActionView", "(Landroid/view/MenuItem;Landroid/view/View;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionView(IMenuItem item, View view);
    [RegisterAttribute("setActionView", "(Landroid/view/MenuItem;I)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionView(IMenuItem item, int resId);
    [RegisterAttribute("setOnActionExpandListener", "(Landroid/view/MenuItem;Landroid/support/v4/view/MenuItemCompat$OnActionExpandListener;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetOnActionExpandListener(IMenuItem item, IOnActionExpandListener listener);
    [RegisterAttribute("setShowAsAction", "(Landroid/view/MenuItem;I)V", "")]
public static void SetShowAsAction(IMenuItem item, int actionEnum);
}
[RegisterAttribute("android/support/v4/view/MotionEventCompat")]
public class Android.Support.V4.View.MotionEventCompat : Object {
    [RegisterAttribute("ACTION_HOVER_ENTER")]
public static int ActionHoverEnter;
    [RegisterAttribute("ACTION_HOVER_EXIT")]
public static int ActionHoverExit;
    [RegisterAttribute("ACTION_HOVER_MOVE")]
public static int ActionHoverMove;
    [RegisterAttribute("ACTION_MASK")]
public static int ActionMask;
    [RegisterAttribute("ACTION_POINTER_DOWN")]
public static int ActionPointerDown;
    [RegisterAttribute("ACTION_POINTER_INDEX_MASK")]
public static int ActionPointerIndexMask;
    [RegisterAttribute("ACTION_POINTER_INDEX_SHIFT")]
public static int ActionPointerIndexShift;
    [RegisterAttribute("ACTION_POINTER_UP")]
public static int ActionPointerUp;
    [RegisterAttribute("ACTION_SCROLL")]
public static int ActionScroll;
    [RegisterAttribute("AXIS_BRAKE")]
public static int AxisBrake;
    [RegisterAttribute("AXIS_DISTANCE")]
public static int AxisDistance;
    [RegisterAttribute("AXIS_GAS")]
public static int AxisGas;
    [RegisterAttribute("AXIS_GENERIC_1")]
public static int AxisGeneric1;
    [RegisterAttribute("AXIS_GENERIC_10")]
public static int AxisGeneric10;
    [RegisterAttribute("AXIS_GENERIC_11")]
public static int AxisGeneric11;
    [RegisterAttribute("AXIS_GENERIC_12")]
public static int AxisGeneric12;
    [RegisterAttribute("AXIS_GENERIC_13")]
public static int AxisGeneric13;
    [RegisterAttribute("AXIS_GENERIC_14")]
public static int AxisGeneric14;
    [RegisterAttribute("AXIS_GENERIC_15")]
public static int AxisGeneric15;
    [RegisterAttribute("AXIS_GENERIC_16")]
public static int AxisGeneric16;
    [RegisterAttribute("AXIS_GENERIC_2")]
public static int AxisGeneric2;
    [RegisterAttribute("AXIS_GENERIC_3")]
public static int AxisGeneric3;
    [RegisterAttribute("AXIS_GENERIC_4")]
public static int AxisGeneric4;
    [RegisterAttribute("AXIS_GENERIC_5")]
public static int AxisGeneric5;
    [RegisterAttribute("AXIS_GENERIC_6")]
public static int AxisGeneric6;
    [RegisterAttribute("AXIS_GENERIC_7")]
public static int AxisGeneric7;
    [RegisterAttribute("AXIS_GENERIC_8")]
public static int AxisGeneric8;
    [RegisterAttribute("AXIS_GENERIC_9")]
public static int AxisGeneric9;
    [RegisterAttribute("AXIS_HAT_X")]
public static int AxisHatX;
    [RegisterAttribute("AXIS_HAT_Y")]
public static int AxisHatY;
    [RegisterAttribute("AXIS_HSCROLL")]
public static int AxisHscroll;
    [RegisterAttribute("AXIS_LTRIGGER")]
public static int AxisLtrigger;
    [RegisterAttribute("AXIS_ORIENTATION")]
public static int AxisOrientation;
    [RegisterAttribute("AXIS_PRESSURE")]
public static int AxisPressure;
    [RegisterAttribute("AXIS_RELATIVE_X")]
public static int AxisRelativeX;
    [RegisterAttribute("AXIS_RELATIVE_Y")]
public static int AxisRelativeY;
    [RegisterAttribute("AXIS_RTRIGGER")]
public static int AxisRtrigger;
    [RegisterAttribute("AXIS_RUDDER")]
public static int AxisRudder;
    [RegisterAttribute("AXIS_RX")]
public static int AxisRx;
    [RegisterAttribute("AXIS_RY")]
public static int AxisRy;
    [RegisterAttribute("AXIS_RZ")]
public static int AxisRz;
    [RegisterAttribute("AXIS_SIZE")]
public static int AxisSize;
    [RegisterAttribute("AXIS_THROTTLE")]
public static int AxisThrottle;
    [RegisterAttribute("AXIS_TILT")]
public static int AxisTilt;
    [RegisterAttribute("AXIS_TOOL_MAJOR")]
public static int AxisToolMajor;
    [RegisterAttribute("AXIS_TOOL_MINOR")]
public static int AxisToolMinor;
    [RegisterAttribute("AXIS_TOUCH_MAJOR")]
public static int AxisTouchMajor;
    [RegisterAttribute("AXIS_TOUCH_MINOR")]
public static int AxisTouchMinor;
    [RegisterAttribute("AXIS_VSCROLL")]
public static int AxisVscroll;
    [RegisterAttribute("AXIS_WHEEL")]
public static int AxisWheel;
    [RegisterAttribute("AXIS_X")]
public static int AxisX;
    [RegisterAttribute("AXIS_Y")]
public static int AxisY;
    [RegisterAttribute("AXIS_Z")]
public static int AxisZ;
    [RegisterAttribute("BUTTON_PRIMARY")]
public static int ButtonPrimary;
    internal static IntPtr java_class_handle;
    private static IntPtr id_findPointerIndex_Landroid_view_MotionEvent_I;
    private static IntPtr id_getActionIndex_Landroid_view_MotionEvent_;
    private static IntPtr id_getActionMasked_Landroid_view_MotionEvent_;
    private static IntPtr id_getAxisValue_Landroid_view_MotionEvent_I;
    private static IntPtr id_getAxisValue_Landroid_view_MotionEvent_II;
    private static IntPtr id_getButtonState_Landroid_view_MotionEvent_;
    private static IntPtr id_getPointerCount_Landroid_view_MotionEvent_;
    private static IntPtr id_getPointerId_Landroid_view_MotionEvent_I;
    private static IntPtr id_getSource_Landroid_view_MotionEvent_;
    private static IntPtr id_getX_Landroid_view_MotionEvent_I;
    private static IntPtr id_getY_Landroid_view_MotionEvent_I;
    private static IntPtr id_isFromSource_Landroid_view_MotionEvent_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MotionEventCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("findPointerIndex", "(Landroid/view/MotionEvent;I)I", "")]
public static int FindPointerIndex(MotionEvent e, int pointerId);
    [RegisterAttribute("getActionIndex", "(Landroid/view/MotionEvent;)I", "")]
public static int GetActionIndex(MotionEvent e);
    [RegisterAttribute("getActionMasked", "(Landroid/view/MotionEvent;)I", "")]
public static int GetActionMasked(MotionEvent e);
    [RegisterAttribute("getAxisValue", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetAxisValue(MotionEvent e, int axis);
    [RegisterAttribute("getAxisValue", "(Landroid/view/MotionEvent;II)F", "")]
public static float GetAxisValue(MotionEvent e, int axis, int pointerIndex);
    [RegisterAttribute("getButtonState", "(Landroid/view/MotionEvent;)I", "")]
public static int GetButtonState(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPointerCount", "(Landroid/view/MotionEvent;)I", "")]
public static int GetPointerCount(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPointerId", "(Landroid/view/MotionEvent;I)I", "")]
public static int GetPointerId(MotionEvent e, int pointerIndex);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getSource", "(Landroid/view/MotionEvent;)I", "")]
public static int GetSource(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getX", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetX(MotionEvent e, int pointerIndex);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getY", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetY(MotionEvent e, int pointerIndex);
    [RegisterAttribute("isFromSource", "(Landroid/view/MotionEvent;I)Z", "")]
public static bool IsFromSource(MotionEvent e, int source);
}
[RegisterAttribute("android/support/v4/view/PointerIconCompat")]
public class Android.Support.V4.View.PointerIconCompat : Object {
    [RegisterAttribute("TYPE_ALIAS")]
public static int TypeAlias;
    [RegisterAttribute("TYPE_ALL_SCROLL")]
public static int TypeAllScroll;
    [RegisterAttribute("TYPE_ARROW")]
public static int TypeArrow;
    [RegisterAttribute("TYPE_CELL")]
public static int TypeCell;
    [RegisterAttribute("TYPE_CONTEXT_MENU")]
public static int TypeContextMenu;
    [RegisterAttribute("TYPE_COPY")]
public static int TypeCopy;
    [RegisterAttribute("TYPE_CROSSHAIR")]
public static int TypeCrosshair;
    [RegisterAttribute("TYPE_DEFAULT")]
public static int TypeDefault;
    [RegisterAttribute("TYPE_GRAB")]
public static int TypeGrab;
    [RegisterAttribute("TYPE_GRABBING")]
public static int TypeGrabbing;
    [RegisterAttribute("TYPE_HAND")]
public static int TypeHand;
    [RegisterAttribute("TYPE_HELP")]
public static int TypeHelp;
    [RegisterAttribute("TYPE_HORIZONTAL_DOUBLE_ARROW")]
public static int TypeHorizontalDoubleArrow;
    [RegisterAttribute("TYPE_NO_DROP")]
public static int TypeNoDrop;
    [RegisterAttribute("TYPE_NULL")]
public static int TypeNull;
    [RegisterAttribute("TYPE_TEXT")]
public static int TypeText;
    [RegisterAttribute("TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW")]
public static int TypeTopLeftDiagonalDoubleArrow;
    [RegisterAttribute("TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW")]
public static int TypeTopRightDiagonalDoubleArrow;
    [RegisterAttribute("TYPE_VERTICAL_DOUBLE_ARROW")]
public static int TypeVerticalDoubleArrow;
    [RegisterAttribute("TYPE_VERTICAL_TEXT")]
public static int TypeVerticalText;
    [RegisterAttribute("TYPE_WAIT")]
public static int TypeWait;
    [RegisterAttribute("TYPE_ZOOM_IN")]
public static int TypeZoomIn;
    [RegisterAttribute("TYPE_ZOOM_OUT")]
public static int TypeZoomOut;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getPointerIcon;
    private static IntPtr id_create_Landroid_graphics_Bitmap_FF;
    private static IntPtr id_getSystemIcon_Landroid_content_Context_I;
    private static IntPtr id_load_Landroid_content_res_Resources_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Object PointerIcon { get; }
    internal PointerIconCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getPointerIcon", "()Ljava/lang/Object;", "GetGetPointerIconHandler")]
public Object get_PointerIcon();
    [RegisterAttribute("create", "(Landroid/graphics/Bitmap;FF)Landroid/support/v4/view/PointerIconCompat;", "")]
public static PointerIconCompat Create(Bitmap bitmap, float hotSpotX, float hotSpotY);
    [RegisterAttribute("getSystemIcon", "(Landroid/content/Context;I)Landroid/support/v4/view/PointerIconCompat;", "")]
public static PointerIconCompat GetSystemIcon(Context context, int style);
    [RegisterAttribute("load", "(Landroid/content/res/Resources;I)Landroid/support/v4/view/PointerIconCompat;", "")]
public static PointerIconCompat Load(Resources resources, int resourceId);
}
[RegisterAttribute("android/support/v4/view/ScaleGestureDetectorCompat")]
public class Android.Support.V4.View.ScaleGestureDetectorCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_isQuickScaleEnabled_Ljava_lang_Object_;
    private static IntPtr id_setQuickScaleEnabled_Ljava_lang_Object_Z;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ScaleGestureDetectorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isQuickScaleEnabled", "(Ljava/lang/Object;)Z", "")]
public static bool IsQuickScaleEnabled(Object scaleGestureDetector);
    [RegisterAttribute("setQuickScaleEnabled", "(Ljava/lang/Object;Z)V", "")]
public static void SetQuickScaleEnabled(Object scaleGestureDetector, bool enabled);
}
[RegisterAttribute("android/support/v4/view/VelocityTrackerCompat")]
public class Android.Support.V4.View.VelocityTrackerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getXVelocity_Landroid_view_VelocityTracker_I;
    private static IntPtr id_getYVelocity_Landroid_view_VelocityTracker_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal VelocityTrackerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getXVelocity", "(Landroid/view/VelocityTracker;I)F", "")]
public static float GetXVelocity(VelocityTracker tracker, int pointerId);
    [RegisterAttribute("getYVelocity", "(Landroid/view/VelocityTracker;I)F", "")]
public static float GetYVelocity(VelocityTracker tracker, int pointerId);
}
[RegisterAttribute("android/support/v4/view/ViewCompat")]
public class Android.Support.V4.View.ViewCompat : Object {
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_ASSERTIVE")]
public static int AccessibilityLiveRegionAssertive;
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_NONE")]
public static int AccessibilityLiveRegionNone;
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_POLITE")]
public static int AccessibilityLiveRegionPolite;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_AUTO")]
public static int ImportantForAccessibilityAuto;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_NO")]
public static int ImportantForAccessibilityNo;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS")]
public static int ImportantForAccessibilityNoHideDescendants;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_YES")]
public static int ImportantForAccessibilityYes;
    [RegisterAttribute("LAYER_TYPE_HARDWARE")]
public static int LayerTypeHardware;
    [RegisterAttribute("LAYER_TYPE_NONE")]
public static int LayerTypeNone;
    [RegisterAttribute("LAYER_TYPE_SOFTWARE")]
public static int LayerTypeSoftware;
    [RegisterAttribute("LAYOUT_DIRECTION_INHERIT")]
public static int LayoutDirectionInherit;
    [RegisterAttribute("LAYOUT_DIRECTION_LOCALE")]
public static int LayoutDirectionLocale;
    [RegisterAttribute("LAYOUT_DIRECTION_LTR")]
public static int LayoutDirectionLtr;
    [RegisterAttribute("LAYOUT_DIRECTION_RTL")]
public static int LayoutDirectionRtl;
    [RegisterAttribute("MEASURED_HEIGHT_STATE_SHIFT")]
public static int MeasuredHeightStateShift;
    [RegisterAttribute("MEASURED_SIZE_MASK")]
public static int MeasuredSizeMask;
    [RegisterAttribute("MEASURED_STATE_MASK")]
public static int MeasuredStateMask;
    [RegisterAttribute("MEASURED_STATE_TOO_SMALL")]
public static int MeasuredStateTooSmall;
    [RegisterAttribute("OVER_SCROLL_ALWAYS")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollAlways;
    [RegisterAttribute("OVER_SCROLL_IF_CONTENT_SCROLLS")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollIfContentScrolls;
    [RegisterAttribute("OVER_SCROLL_NEVER")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollNever;
    [RegisterAttribute("SCROLL_AXIS_HORIZONTAL")]
public static int ScrollAxisHorizontal;
    [RegisterAttribute("SCROLL_AXIS_NONE")]
public static int ScrollAxisNone;
    [RegisterAttribute("SCROLL_AXIS_VERTICAL")]
public static int ScrollAxisVertical;
    [RegisterAttribute("SCROLL_INDICATOR_BOTTOM")]
public static int ScrollIndicatorBottom;
    [RegisterAttribute("SCROLL_INDICATOR_END")]
public static int ScrollIndicatorEnd;
    [RegisterAttribute("SCROLL_INDICATOR_LEFT")]
public static int ScrollIndicatorLeft;
    [RegisterAttribute("SCROLL_INDICATOR_RIGHT")]
public static int ScrollIndicatorRight;
    [RegisterAttribute("SCROLL_INDICATOR_START")]
public static int ScrollIndicatorStart;
    [RegisterAttribute("SCROLL_INDICATOR_TOP")]
public static int ScrollIndicatorTop;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_animate_Landroid_view_View_;
    private static IntPtr id_canScrollHorizontally_Landroid_view_View_I;
    private static IntPtr id_canScrollVertically_Landroid_view_View_I;
    private static IntPtr id_combineMeasuredStates_II;
    private static IntPtr id_dispatchApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_;
    private static IntPtr id_dispatchFinishTemporaryDetach_Landroid_view_View_;
    private static IntPtr id_dispatchNestedFling_Landroid_view_View_FFZ;
    private static IntPtr id_dispatchNestedPreFling_Landroid_view_View_FF;
    private static IntPtr id_dispatchNestedPreScroll_Landroid_view_View_IIarrayIarrayI;
    private static IntPtr id_dispatchNestedScroll_Landroid_view_View_IIIIarrayI;
    private static IntPtr id_dispatchStartTemporaryDetach_Landroid_view_View_;
    private static IntPtr id_getAccessibilityLiveRegion_Landroid_view_View_;
    private static IntPtr id_getAccessibilityNodeProvider_Landroid_view_View_;
    private static IntPtr id_getAlpha_Landroid_view_View_;
    private static IntPtr id_getBackgroundTintList_Landroid_view_View_;
    private static IntPtr id_getBackgroundTintMode_Landroid_view_View_;
    private static IntPtr id_getClipBounds_Landroid_view_View_;
    private static IntPtr id_getElevation_Landroid_view_View_;
    private static IntPtr id_getFitsSystemWindows_Landroid_view_View_;
    private static IntPtr id_getImportantForAccessibility_Landroid_view_View_;
    private static IntPtr id_getLabelFor_Landroid_view_View_;
    private static IntPtr id_getLayerType_Landroid_view_View_;
    private static IntPtr id_getLayoutDirection_Landroid_view_View_;
    private static IntPtr id_getMatrix_Landroid_view_View_;
    private static IntPtr id_getMeasuredHeightAndState_Landroid_view_View_;
    private static IntPtr id_getMeasuredState_Landroid_view_View_;
    private static IntPtr id_getMeasuredWidthAndState_Landroid_view_View_;
    private static IntPtr id_getMinimumHeight_Landroid_view_View_;
    private static IntPtr id_getMinimumWidth_Landroid_view_View_;
    private static IntPtr id_getOverScrollMode_Landroid_view_View_;
    private static IntPtr id_getPaddingEnd_Landroid_view_View_;
    private static IntPtr id_getPaddingStart_Landroid_view_View_;
    private static IntPtr id_getParentForAccessibility_Landroid_view_View_;
    private static IntPtr id_getPivotX_Landroid_view_View_;
    private static IntPtr id_getPivotY_Landroid_view_View_;
    private static IntPtr id_getRotation_Landroid_view_View_;
    private static IntPtr id_getRotationX_Landroid_view_View_;
    private static IntPtr id_getRotationY_Landroid_view_View_;
    private static IntPtr id_getScaleX_Landroid_view_View_;
    private static IntPtr id_getScaleY_Landroid_view_View_;
    private static IntPtr id_getScrollIndicators_Landroid_view_View_;
    private static IntPtr id_getTransitionName_Landroid_view_View_;
    private static IntPtr id_getTranslationX_Landroid_view_View_;
    private static IntPtr id_getTranslationY_Landroid_view_View_;
    private static IntPtr id_getTranslationZ_Landroid_view_View_;
    private static IntPtr id_getWindowSystemUiVisibility_Landroid_view_View_;
    private static IntPtr id_getX_Landroid_view_View_;
    private static IntPtr id_getY_Landroid_view_View_;
    private static IntPtr id_getZ_Landroid_view_View_;
    private static IntPtr id_hasAccessibilityDelegate_Landroid_view_View_;
    private static IntPtr id_hasNestedScrollingParent_Landroid_view_View_;
    private static IntPtr id_hasOnClickListeners_Landroid_view_View_;
    private static IntPtr id_hasOverlappingRendering_Landroid_view_View_;
    private static IntPtr id_hasTransientState_Landroid_view_View_;
    private static IntPtr id_isAttachedToWindow_Landroid_view_View_;
    private static IntPtr id_isImportantForAccessibility_Landroid_view_View_;
    private static IntPtr id_isInLayout_Landroid_view_View_;
    private static IntPtr id_isLaidOut_Landroid_view_View_;
    private static IntPtr id_isLayoutDirectionResolved_Landroid_view_View_;
    private static IntPtr id_isNestedScrollingEnabled_Landroid_view_View_;
    private static IntPtr id_isOpaque_Landroid_view_View_;
    private static IntPtr id_isPaddingRelative_Landroid_view_View_;
    private static IntPtr id_jumpDrawablesToCurrentState_Landroid_view_View_;
    private static IntPtr id_offsetLeftAndRight_Landroid_view_View_I;
    private static IntPtr id_offsetTopAndBottom_Landroid_view_View_I;
    private static IntPtr id_onApplyWindowInsets_Landroid_view_View_Landroid_support_v4_view_WindowInsetsCompat_;
    private static IntPtr id_onInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onInitializeAccessibilityNodeInfo_Landroid_view_View_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static IntPtr id_onPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_performAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_;
    private static IntPtr id_postInvalidateOnAnimation_Landroid_view_View_;
    private static IntPtr id_postInvalidateOnAnimation_Landroid_view_View_IIII;
    private static IntPtr id_postOnAnimation_Landroid_view_View_Ljava_lang_Runnable_;
    private static IntPtr id_postOnAnimationDelayed_Landroid_view_View_Ljava_lang_Runnable_J;
    private static IntPtr id_requestApplyInsets_Landroid_view_View_;
    private static IntPtr id_resolveSizeAndState_III;
    private static IntPtr id_setAccessibilityDelegate_Landroid_view_View_Landroid_support_v4_view_AccessibilityDelegateCompat_;
    private static IntPtr id_setAccessibilityLiveRegion_Landroid_view_View_I;
    private static IntPtr id_setActivated_Landroid_view_View_Z;
    private static IntPtr id_setAlpha_Landroid_view_View_F;
    private static IntPtr id_setBackgroundTintList_Landroid_view_View_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setBackgroundTintMode_Landroid_view_View_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr id_setChildrenDrawingOrderEnabled_Landroid_view_ViewGroup_Z;
    private static IntPtr id_setClipBounds_Landroid_view_View_Landroid_graphics_Rect_;
    private static IntPtr id_setElevation_Landroid_view_View_F;
    private static IntPtr id_setFitsSystemWindows_Landroid_view_View_Z;
    private static IntPtr id_setHasTransientState_Landroid_view_View_Z;
    private static IntPtr id_setImportantForAccessibility_Landroid_view_View_I;
    private static IntPtr id_setLabelFor_Landroid_view_View_I;
    private static IntPtr id_setLayerPaint_Landroid_view_View_Landroid_graphics_Paint_;
    private static IntPtr id_setLayerType_Landroid_view_View_ILandroid_graphics_Paint_;
    private static IntPtr id_setLayoutDirection_Landroid_view_View_I;
    private static IntPtr id_setNestedScrollingEnabled_Landroid_view_View_Z;
    private static IntPtr id_setOnApplyWindowInsetsListener_Landroid_view_View_Landroid_support_v4_view_OnApplyWindowInsetsListener_;
    private static IntPtr id_setOverScrollMode_Landroid_view_View_I;
    private static IntPtr id_setPaddingRelative_Landroid_view_View_IIII;
    private static IntPtr id_setPivotX_Landroid_view_View_F;
    private static IntPtr id_setPivotY_Landroid_view_View_F;
    private static IntPtr id_setPointerIcon_Landroid_view_View_Landroid_support_v4_view_PointerIconCompat_;
    private static IntPtr id_setRotation_Landroid_view_View_F;
    private static IntPtr id_setRotationX_Landroid_view_View_F;
    private static IntPtr id_setRotationY_Landroid_view_View_F;
    private static IntPtr id_setSaveFromParentEnabled_Landroid_view_View_Z;
    private static IntPtr id_setScaleX_Landroid_view_View_F;
    private static IntPtr id_setScaleY_Landroid_view_View_F;
    private static IntPtr id_setScrollIndicators_Landroid_view_View_I;
    private static IntPtr id_setScrollIndicators_Landroid_view_View_II;
    private static IntPtr id_setTransitionName_Landroid_view_View_Ljava_lang_String_;
    private static IntPtr id_setTranslationX_Landroid_view_View_F;
    private static IntPtr id_setTranslationY_Landroid_view_View_F;
    private static IntPtr id_setTranslationZ_Landroid_view_View_F;
    private static IntPtr id_setX_Landroid_view_View_F;
    private static IntPtr id_setY_Landroid_view_View_F;
    private static IntPtr id_setZ_Landroid_view_View_F;
    private static IntPtr id_startNestedScroll_Landroid_view_View_I;
    private static IntPtr id_stopNestedScroll_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("animate", "(Landroid/view/View;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public static ViewPropertyAnimatorCompat Animate(View view);
    [RegisterAttribute("canScrollHorizontally", "(Landroid/view/View;I)Z", "")]
public static bool CanScrollHorizontally(View v, int direction);
    [RegisterAttribute("canScrollVertically", "(Landroid/view/View;I)Z", "")]
public static bool CanScrollVertically(View v, int direction);
    [RegisterAttribute("combineMeasuredStates", "(II)I", "")]
public static int CombineMeasuredStates(int curState, int newState);
    [RegisterAttribute("dispatchApplyWindowInsets", "(Landroid/view/View;Landroid/support/v4/view/WindowInsetsCompat;)Landroid/support/v4/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat DispatchApplyWindowInsets(View view, WindowInsetsCompat insets);
    [RegisterAttribute("dispatchFinishTemporaryDetach", "(Landroid/view/View;)V", "")]
public static void DispatchFinishTemporaryDetach(View view);
    [RegisterAttribute("dispatchNestedFling", "(Landroid/view/View;FFZ)Z", "")]
public static bool DispatchNestedFling(View view, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedPreFling", "(Landroid/view/View;FF)Z", "")]
public static bool DispatchNestedPreFling(View view, float velocityX, float velocityY);
    [RegisterAttribute("dispatchNestedPreScroll", "(Landroid/view/View;II[I[I)Z", "")]
public static bool DispatchNestedPreScroll(View view, int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    [RegisterAttribute("dispatchNestedScroll", "(Landroid/view/View;IIII[I)Z", "")]
public static bool DispatchNestedScroll(View view, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    [RegisterAttribute("dispatchStartTemporaryDetach", "(Landroid/view/View;)V", "")]
public static void DispatchStartTemporaryDetach(View view);
    [RegisterAttribute("getAccessibilityLiveRegion", "(Landroid/view/View;)I", "")]
public static int GetAccessibilityLiveRegion(View view);
    [RegisterAttribute("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroid/support/v4/view/accessibility/AccessibilityNodeProviderCompat;", "")]
public static AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(View view);
    [RegisterAttribute("getAlpha", "(Landroid/view/View;)F", "")]
public static float GetAlpha(View view);
    [RegisterAttribute("getBackgroundTintList", "(Landroid/view/View;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetBackgroundTintList(View view);
    [RegisterAttribute("getBackgroundTintMode", "(Landroid/view/View;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetBackgroundTintMode(View view);
    [RegisterAttribute("getClipBounds", "(Landroid/view/View;)Landroid/graphics/Rect;", "")]
public static Rect GetClipBounds(View view);
    [RegisterAttribute("getElevation", "(Landroid/view/View;)F", "")]
public static float GetElevation(View view);
    [RegisterAttribute("getFitsSystemWindows", "(Landroid/view/View;)Z", "")]
public static bool GetFitsSystemWindows(View v);
    [RegisterAttribute("getImportantForAccessibility", "(Landroid/view/View;)I", "")]
public static int GetImportantForAccessibility(View view);
    [RegisterAttribute("getLabelFor", "(Landroid/view/View;)I", "")]
public static int GetLabelFor(View view);
    [RegisterAttribute("getLayerType", "(Landroid/view/View;)I", "")]
public static int GetLayerType(View view);
    [RegisterAttribute("getLayoutDirection", "(Landroid/view/View;)I", "")]
public static int GetLayoutDirection(View view);
    [RegisterAttribute("getMatrix", "(Landroid/view/View;)Landroid/graphics/Matrix;", "")]
public static Matrix GetMatrix(View view);
    [RegisterAttribute("getMeasuredHeightAndState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredHeightAndState(View view);
    [RegisterAttribute("getMeasuredState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredState(View view);
    [RegisterAttribute("getMeasuredWidthAndState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredWidthAndState(View view);
    [RegisterAttribute("getMinimumHeight", "(Landroid/view/View;)I", "")]
public static int GetMinimumHeight(View view);
    [RegisterAttribute("getMinimumWidth", "(Landroid/view/View;)I", "")]
public static int GetMinimumWidth(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getOverScrollMode", "(Landroid/view/View;)I", "")]
public static int GetOverScrollMode(View v);
    [RegisterAttribute("getPaddingEnd", "(Landroid/view/View;)I", "")]
public static int GetPaddingEnd(View view);
    [RegisterAttribute("getPaddingStart", "(Landroid/view/View;)I", "")]
public static int GetPaddingStart(View view);
    [RegisterAttribute("getParentForAccessibility", "(Landroid/view/View;)Landroid/view/ViewParent;", "")]
public static IViewParent GetParentForAccessibility(View view);
    [RegisterAttribute("getPivotX", "(Landroid/view/View;)F", "")]
public static float GetPivotX(View view);
    [RegisterAttribute("getPivotY", "(Landroid/view/View;)F", "")]
public static float GetPivotY(View view);
    [RegisterAttribute("getRotation", "(Landroid/view/View;)F", "")]
public static float GetRotation(View view);
    [RegisterAttribute("getRotationX", "(Landroid/view/View;)F", "")]
public static float GetRotationX(View view);
    [RegisterAttribute("getRotationY", "(Landroid/view/View;)F", "")]
public static float GetRotationY(View view);
    [RegisterAttribute("getScaleX", "(Landroid/view/View;)F", "")]
public static float GetScaleX(View view);
    [RegisterAttribute("getScaleY", "(Landroid/view/View;)F", "")]
public static float GetScaleY(View view);
    [RegisterAttribute("getScrollIndicators", "(Landroid/view/View;)I", "")]
public static int GetScrollIndicators(View view);
    [RegisterAttribute("getTransitionName", "(Landroid/view/View;)Ljava/lang/String;", "")]
public static string GetTransitionName(View view);
    [RegisterAttribute("getTranslationX", "(Landroid/view/View;)F", "")]
public static float GetTranslationX(View view);
    [RegisterAttribute("getTranslationY", "(Landroid/view/View;)F", "")]
public static float GetTranslationY(View view);
    [RegisterAttribute("getTranslationZ", "(Landroid/view/View;)F", "")]
public static float GetTranslationZ(View view);
    [RegisterAttribute("getWindowSystemUiVisibility", "(Landroid/view/View;)I", "")]
public static int GetWindowSystemUiVisibility(View view);
    [RegisterAttribute("getX", "(Landroid/view/View;)F", "")]
public static float GetX(View view);
    [RegisterAttribute("getY", "(Landroid/view/View;)F", "")]
public static float GetY(View view);
    [RegisterAttribute("getZ", "(Landroid/view/View;)F", "")]
public static float GetZ(View view);
    [RegisterAttribute("hasAccessibilityDelegate", "(Landroid/view/View;)Z", "")]
public static bool HasAccessibilityDelegate(View v);
    [RegisterAttribute("hasNestedScrollingParent", "(Landroid/view/View;)Z", "")]
public static bool HasNestedScrollingParent(View view);
    [RegisterAttribute("hasOnClickListeners", "(Landroid/view/View;)Z", "")]
public static bool HasOnClickListeners(View view);
    [RegisterAttribute("hasOverlappingRendering", "(Landroid/view/View;)Z", "")]
public static bool HasOverlappingRendering(View view);
    [RegisterAttribute("hasTransientState", "(Landroid/view/View;)Z", "")]
public static bool HasTransientState(View view);
    [RegisterAttribute("isAttachedToWindow", "(Landroid/view/View;)Z", "")]
public static bool IsAttachedToWindow(View view);
    [RegisterAttribute("isImportantForAccessibility", "(Landroid/view/View;)Z", "")]
public static bool IsImportantForAccessibility(View view);
    [RegisterAttribute("isInLayout", "(Landroid/view/View;)Z", "")]
public static bool IsInLayout(View view);
    [RegisterAttribute("isLaidOut", "(Landroid/view/View;)Z", "")]
public static bool IsLaidOut(View view);
    [RegisterAttribute("isLayoutDirectionResolved", "(Landroid/view/View;)Z", "")]
public static bool IsLayoutDirectionResolved(View view);
    [RegisterAttribute("isNestedScrollingEnabled", "(Landroid/view/View;)Z", "")]
public static bool IsNestedScrollingEnabled(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isOpaque", "(Landroid/view/View;)Z", "")]
public static bool IsOpaque(View view);
    [RegisterAttribute("isPaddingRelative", "(Landroid/view/View;)Z", "")]
public static bool IsPaddingRelative(View view);
    [RegisterAttribute("jumpDrawablesToCurrentState", "(Landroid/view/View;)V", "")]
public static void JumpDrawablesToCurrentState(View v);
    [RegisterAttribute("offsetLeftAndRight", "(Landroid/view/View;I)V", "")]
public static void OffsetLeftAndRight(View view, int offset);
    [RegisterAttribute("offsetTopAndBottom", "(Landroid/view/View;I)V", "")]
public static void OffsetTopAndBottom(View view, int offset);
    [RegisterAttribute("onApplyWindowInsets", "(Landroid/view/View;Landroid/support/v4/view/WindowInsetsCompat;)Landroid/support/v4/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat OnApplyWindowInsets(View view, WindowInsetsCompat insets);
    [RegisterAttribute("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")]
public static void OnInitializeAccessibilityEvent(View v, AccessibilityEvent e);
    [RegisterAttribute("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "")]
public static void OnInitializeAccessibilityNodeInfo(View v, AccessibilityNodeInfoCompat info);
    [RegisterAttribute("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")]
public static void OnPopulateAccessibilityEvent(View v, AccessibilityEvent e);
    [RegisterAttribute("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "")]
public static bool PerformAccessibilityAction(View view, int action, Bundle arguments);
    [RegisterAttribute("postInvalidateOnAnimation", "(Landroid/view/View;)V", "")]
public static void PostInvalidateOnAnimation(View view);
    [RegisterAttribute("postInvalidateOnAnimation", "(Landroid/view/View;IIII)V", "")]
public static void PostInvalidateOnAnimation(View view, int left, int top, int right, int bottom);
    [RegisterAttribute("postOnAnimation", "(Landroid/view/View;Ljava/lang/Runnable;)V", "")]
public static void PostOnAnimation(View view, IRunnable action);
    [RegisterAttribute("postOnAnimationDelayed", "(Landroid/view/View;Ljava/lang/Runnable;J)V", "")]
public static void PostOnAnimationDelayed(View view, IRunnable action, long delayMillis);
    [RegisterAttribute("requestApplyInsets", "(Landroid/view/View;)V", "")]
public static void RequestApplyInsets(View view);
    [RegisterAttribute("resolveSizeAndState", "(III)I", "")]
public static int ResolveSizeAndState(int size, int measureSpec, int childMeasuredState);
    [RegisterAttribute("setAccessibilityDelegate", "(Landroid/view/View;Landroid/support/v4/view/AccessibilityDelegateCompat;)V", "")]
public static void SetAccessibilityDelegate(View v, AccessibilityDelegateCompat delegate);
    [RegisterAttribute("setAccessibilityLiveRegion", "(Landroid/view/View;I)V", "")]
public static void SetAccessibilityLiveRegion(View view, int mode);
    [RegisterAttribute("setActivated", "(Landroid/view/View;Z)V", "")]
public static void SetActivated(View view, bool activated);
    [RegisterAttribute("setAlpha", "(Landroid/view/View;F)V", "")]
public static void SetAlpha(View view, float value);
    [RegisterAttribute("setBackgroundTintList", "(Landroid/view/View;Landroid/content/res/ColorStateList;)V", "")]
public static void SetBackgroundTintList(View view, ColorStateList tintList);
    [RegisterAttribute("setBackgroundTintMode", "(Landroid/view/View;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetBackgroundTintMode(View view, Mode mode);
    [RegisterAttribute("setChildrenDrawingOrderEnabled", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetChildrenDrawingOrderEnabled(ViewGroup viewGroup, bool enabled);
    [RegisterAttribute("setClipBounds", "(Landroid/view/View;Landroid/graphics/Rect;)V", "")]
public static void SetClipBounds(View view, Rect clipBounds);
    [RegisterAttribute("setElevation", "(Landroid/view/View;F)V", "")]
public static void SetElevation(View view, float elevation);
    [RegisterAttribute("setFitsSystemWindows", "(Landroid/view/View;Z)V", "")]
public static void SetFitsSystemWindows(View view, bool fitSystemWindows);
    [RegisterAttribute("setHasTransientState", "(Landroid/view/View;Z)V", "")]
public static void SetHasTransientState(View view, bool hasTransientState);
    [RegisterAttribute("setImportantForAccessibility", "(Landroid/view/View;I)V", "")]
public static void SetImportantForAccessibility(View view, int mode);
    [RegisterAttribute("setLabelFor", "(Landroid/view/View;I)V", "")]
public static void SetLabelFor(View view, int labeledId);
    [RegisterAttribute("setLayerPaint", "(Landroid/view/View;Landroid/graphics/Paint;)V", "")]
public static void SetLayerPaint(View view, Paint paint);
    [RegisterAttribute("setLayerType", "(Landroid/view/View;ILandroid/graphics/Paint;)V", "")]
public static void SetLayerType(View view, int layerType, Paint paint);
    [RegisterAttribute("setLayoutDirection", "(Landroid/view/View;I)V", "")]
public static void SetLayoutDirection(View view, int layoutDirection);
    [RegisterAttribute("setNestedScrollingEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetNestedScrollingEnabled(View view, bool enabled);
    [RegisterAttribute("setOnApplyWindowInsetsListener", "(Landroid/view/View;Landroid/support/v4/view/OnApplyWindowInsetsListener;)V", "")]
public static void SetOnApplyWindowInsetsListener(View v, IOnApplyWindowInsetsListener listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOverScrollMode", "(Landroid/view/View;I)V", "")]
public static void SetOverScrollMode(View v, int overScrollMode);
    [RegisterAttribute("setPaddingRelative", "(Landroid/view/View;IIII)V", "")]
public static void SetPaddingRelative(View view, int start, int top, int end, int bottom);
    [RegisterAttribute("setPivotX", "(Landroid/view/View;F)V", "")]
public static void SetPivotX(View view, float value);
    [RegisterAttribute("setPivotY", "(Landroid/view/View;F)V", "")]
public static void SetPivotY(View view, float value);
    [RegisterAttribute("setPointerIcon", "(Landroid/view/View;Landroid/support/v4/view/PointerIconCompat;)V", "")]
public static void SetPointerIcon(View view, PointerIconCompat pointerIcon);
    [RegisterAttribute("setRotation", "(Landroid/view/View;F)V", "")]
public static void SetRotation(View view, float value);
    [RegisterAttribute("setRotationX", "(Landroid/view/View;F)V", "")]
public static void SetRotationX(View view, float value);
    [RegisterAttribute("setRotationY", "(Landroid/view/View;F)V", "")]
public static void SetRotationY(View view, float value);
    [RegisterAttribute("setSaveFromParentEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetSaveFromParentEnabled(View v, bool enabled);
    [RegisterAttribute("setScaleX", "(Landroid/view/View;F)V", "")]
public static void SetScaleX(View view, float value);
    [RegisterAttribute("setScaleY", "(Landroid/view/View;F)V", "")]
public static void SetScaleY(View view, float value);
    [RegisterAttribute("setScrollIndicators", "(Landroid/view/View;I)V", "")]
public static void SetScrollIndicators(View view, int indicators);
    [RegisterAttribute("setScrollIndicators", "(Landroid/view/View;II)V", "")]
public static void SetScrollIndicators(View view, int indicators, int mask);
    [RegisterAttribute("setTransitionName", "(Landroid/view/View;Ljava/lang/String;)V", "")]
public static void SetTransitionName(View view, string transitionName);
    [RegisterAttribute("setTranslationX", "(Landroid/view/View;F)V", "")]
public static void SetTranslationX(View view, float value);
    [RegisterAttribute("setTranslationY", "(Landroid/view/View;F)V", "")]
public static void SetTranslationY(View view, float value);
    [RegisterAttribute("setTranslationZ", "(Landroid/view/View;F)V", "")]
public static void SetTranslationZ(View view, float translationZ);
    [RegisterAttribute("setX", "(Landroid/view/View;F)V", "")]
public static void SetX(View view, float value);
    [RegisterAttribute("setY", "(Landroid/view/View;F)V", "")]
public static void SetY(View view, float value);
    [RegisterAttribute("setZ", "(Landroid/view/View;F)V", "")]
public static void SetZ(View view, float z);
    [RegisterAttribute("startNestedScroll", "(Landroid/view/View;I)Z", "")]
public static bool StartNestedScroll(View view, int axes);
    [RegisterAttribute("stopNestedScroll", "(Landroid/view/View;)V", "")]
public static void StopNestedScroll(View view);
}
[RegisterAttribute("android/support/v4/view/ViewConfigurationCompat")]
public class Android.Support.V4.View.ViewConfigurationCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getScaledPagingTouchSlop_Landroid_view_ViewConfiguration_;
    private static IntPtr id_hasPermanentMenuKey_Landroid_view_ViewConfiguration_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ViewConfigurationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getScaledPagingTouchSlop", "(Landroid/view/ViewConfiguration;)I", "")]
public static int GetScaledPagingTouchSlop(ViewConfiguration config);
    [RegisterAttribute("hasPermanentMenuKey", "(Landroid/view/ViewConfiguration;)Z", "")]
public static bool HasPermanentMenuKey(ViewConfiguration config);
}
[RegisterAttribute("android/support/v4/view/ViewGroupCompat")]
public class Android.Support.V4.View.ViewGroupCompat : Object {
    [RegisterAttribute("LAYOUT_MODE_CLIP_BOUNDS")]
public static int LayoutModeClipBounds;
    [RegisterAttribute("LAYOUT_MODE_OPTICAL_BOUNDS")]
public static int LayoutModeOpticalBounds;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getLayoutMode_Landroid_view_ViewGroup_;
    private static IntPtr id_getNestedScrollAxes_Landroid_view_ViewGroup_;
    private static IntPtr id_isTransitionGroup_Landroid_view_ViewGroup_;
    private static IntPtr id_onRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_setLayoutMode_Landroid_view_ViewGroup_I;
    private static IntPtr id_setMotionEventSplittingEnabled_Landroid_view_ViewGroup_Z;
    private static IntPtr id_setTransitionGroup_Landroid_view_ViewGroup_Z;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ViewGroupCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLayoutMode", "(Landroid/view/ViewGroup;)I", "")]
public static int GetLayoutMode(ViewGroup group);
    [RegisterAttribute("getNestedScrollAxes", "(Landroid/view/ViewGroup;)I", "")]
public static int GetNestedScrollAxes(ViewGroup group);
    [RegisterAttribute("isTransitionGroup", "(Landroid/view/ViewGroup;)Z", "")]
public static bool IsTransitionGroup(ViewGroup group);
    [RegisterAttribute("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "")]
public static bool OnRequestSendAccessibilityEvent(ViewGroup group, View child, AccessibilityEvent e);
    [RegisterAttribute("setLayoutMode", "(Landroid/view/ViewGroup;I)V", "")]
public static void SetLayoutMode(ViewGroup group, int mode);
    [RegisterAttribute("setMotionEventSplittingEnabled", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetMotionEventSplittingEnabled(ViewGroup group, bool split);
    [RegisterAttribute("setTransitionGroup", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetTransitionGroup(ViewGroup group, bool isTransitionGroup);
}
[RegisterAttribute("android/support/v4/view/ViewParentCompat")]
public class Android.Support.V4.View.ViewParentCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_notifySubtreeAccessibilityStateChanged_Landroid_view_ViewParent_Landroid_view_View_Landroid_view_View_I;
    private static IntPtr id_onNestedFling_Landroid_view_ViewParent_Landroid_view_View_FFZ;
    private static IntPtr id_onNestedPreFling_Landroid_view_ViewParent_Landroid_view_View_FF;
    private static IntPtr id_onNestedPreScroll_Landroid_view_ViewParent_Landroid_view_View_IIarrayI;
    private static IntPtr id_onNestedScroll_Landroid_view_ViewParent_Landroid_view_View_IIII;
    private static IntPtr id_onNestedScrollAccepted_Landroid_view_ViewParent_Landroid_view_View_Landroid_view_View_I;
    private static IntPtr id_onStartNestedScroll_Landroid_view_ViewParent_Landroid_view_View_Landroid_view_View_I;
    private static IntPtr id_onStopNestedScroll_Landroid_view_ViewParent_Landroid_view_View_;
    private static IntPtr id_requestSendAccessibilityEvent_Landroid_view_ViewParent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ViewParentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("notifySubtreeAccessibilityStateChanged", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)V", "")]
public static void NotifySubtreeAccessibilityStateChanged(IViewParent parent, View child, View source, int changeType);
    [RegisterAttribute("onNestedFling", "(Landroid/view/ViewParent;Landroid/view/View;FFZ)Z", "")]
public static bool OnNestedFling(IViewParent parent, View target, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("onNestedPreFling", "(Landroid/view/ViewParent;Landroid/view/View;FF)Z", "")]
public static bool OnNestedPreFling(IViewParent parent, View target, float velocityX, float velocityY);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/ViewParent;Landroid/view/View;II[I)V", "")]
public static void OnNestedPreScroll(IViewParent parent, View target, int dx, int dy, Int32[] consumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;IIII)V", "")]
public static void OnNestedScroll(IViewParent parent, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)V", "")]
public static void OnNestedScrollAccepted(IViewParent parent, View child, View target, int nestedScrollAxes);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)Z", "")]
public static bool OnStartNestedScroll(IViewParent parent, View child, View target, int nestedScrollAxes);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;)V", "")]
public static void OnStopNestedScroll(IViewParent parent, View target);
    [RegisterAttribute("requestSendAccessibilityEvent", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "")]
public static bool RequestSendAccessibilityEvent(IViewParent parent, View child, AccessibilityEvent e);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorCompat")]
public class Android.Support.V4.View.ViewPropertyAnimatorCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getDuration;
    private static IntPtr id_getInterpolator;
    private static IntPtr id_getStartDelay;
    private static IntPtr id_alpha_F;
    private static IntPtr id_alphaBy_F;
    private static IntPtr id_cancel;
    private static IntPtr id_rotation_F;
    private static IntPtr id_rotationBy_F;
    private static IntPtr id_rotationX_F;
    private static IntPtr id_rotationXBy_F;
    private static IntPtr id_rotationY_F;
    private static IntPtr id_rotationYBy_F;
    private static IntPtr id_scaleX_F;
    private static IntPtr id_scaleXBy_F;
    private static IntPtr id_scaleY_F;
    private static IntPtr id_scaleYBy_F;
    private static IntPtr id_setDuration_J;
    private static IntPtr id_setInterpolator_Landroid_view_animation_Interpolator_;
    private static IntPtr id_setListener_Landroid_support_v4_view_ViewPropertyAnimatorListener_;
    private static IntPtr id_setStartDelay_J;
    private static IntPtr id_setUpdateListener_Landroid_support_v4_view_ViewPropertyAnimatorUpdateListener_;
    private static IntPtr id_start;
    private static IntPtr id_translationX_F;
    private static IntPtr id_translationXBy_F;
    private static IntPtr id_translationY_F;
    private static IntPtr id_translationYBy_F;
    private static IntPtr id_translationZ_F;
    private static IntPtr id_translationZBy_F;
    private static IntPtr id_withEndAction_Ljava_lang_Runnable_;
    private static IntPtr id_withLayer;
    private static IntPtr id_withStartAction_Ljava_lang_Runnable_;
    private static IntPtr id_x_F;
    private static IntPtr id_xBy_F;
    private static IntPtr id_y_F;
    private static IntPtr id_yBy_F;
    private static IntPtr id_z_F;
    private static IntPtr id_zBy_F;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public long Duration { get; }
    public IInterpolator Interpolator { get; }
    public long StartDelay { get; }
    internal ViewPropertyAnimatorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public long get_Duration();
    [RegisterAttribute("getInterpolator", "()Landroid/view/animation/Interpolator;", "GetGetInterpolatorHandler")]
public IInterpolator get_Interpolator();
    [RegisterAttribute("getStartDelay", "()J", "GetGetStartDelayHandler")]
public long get_StartDelay();
    [RegisterAttribute("alpha", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Alpha(float value);
    [RegisterAttribute("alphaBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat AlphaBy(float value);
    [RegisterAttribute("cancel", "()V", "")]
public void Cancel();
    [RegisterAttribute("rotation", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Rotation(float value);
    [RegisterAttribute("rotationBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationBy(float value);
    [RegisterAttribute("rotationX", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationX(float value);
    [RegisterAttribute("rotationXBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationXBy(float value);
    [RegisterAttribute("rotationY", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationY(float value);
    [RegisterAttribute("rotationYBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationYBy(float value);
    [RegisterAttribute("scaleX", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleX(float value);
    [RegisterAttribute("scaleXBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleXBy(float value);
    [RegisterAttribute("scaleY", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleY(float value);
    [RegisterAttribute("scaleYBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleYBy(float value);
    [RegisterAttribute("setDuration", "(J)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetDuration(long value);
    [RegisterAttribute("setInterpolator", "(Landroid/view/animation/Interpolator;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetInterpolator(IInterpolator value);
    [RegisterAttribute("setListener", "(Landroid/support/v4/view/ViewPropertyAnimatorListener;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetListener(IViewPropertyAnimatorListener listener);
    [RegisterAttribute("setStartDelay", "(J)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetStartDelay(long value);
    [RegisterAttribute("setUpdateListener", "(Landroid/support/v4/view/ViewPropertyAnimatorUpdateListener;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetUpdateListener(IViewPropertyAnimatorUpdateListener listener);
    [RegisterAttribute("start", "()V", "")]
public void Start();
    [RegisterAttribute("translationX", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationX(float value);
    [RegisterAttribute("translationXBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationXBy(float value);
    [RegisterAttribute("translationY", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationY(float value);
    [RegisterAttribute("translationYBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationYBy(float value);
    [RegisterAttribute("translationZ", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationZ(float value);
    [RegisterAttribute("translationZBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationZBy(float value);
    [RegisterAttribute("withEndAction", "(Ljava/lang/Runnable;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithEndAction(IRunnable runnable);
    [RegisterAttribute("withLayer", "()Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithLayer();
    [RegisterAttribute("withStartAction", "(Ljava/lang/Runnable;)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithStartAction(IRunnable runnable);
    [RegisterAttribute("x", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat X(float value);
    [RegisterAttribute("xBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat XBy(float value);
    [RegisterAttribute("y", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Y(float value);
    [RegisterAttribute("yBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat YBy(float value);
    [RegisterAttribute("z", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Z(float value);
    [RegisterAttribute("zBy", "(F)Landroid/support/v4/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ZBy(float value);
}
[RegisterAttribute("android/support/v4/view/ViewPropertyAnimatorListenerAdapter")]
public class Android.Support.V4.View.ViewPropertyAnimatorListenerAdapter : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_onAnimationCancel_Landroid_view_View_;
    private static IntPtr id_onAnimationCancel_Landroid_view_View_;
    private static Delegate cb_onAnimationEnd_Landroid_view_View_;
    private static IntPtr id_onAnimationEnd_Landroid_view_View_;
    private static Delegate cb_onAnimationStart_Landroid_view_View_;
    private static IntPtr id_onAnimationStart_Landroid_view_View_;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ViewPropertyAnimatorListenerAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnAnimationCancel_Landroid_view_View_Handler();
    private static void n_OnAnimationCancel_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationCancel", "(Landroid/view/View;)V", "GetOnAnimationCancel_Landroid_view_View_Handler")]
public virtual void OnAnimationCancel(View view);
    private static Delegate GetOnAnimationEnd_Landroid_view_View_Handler();
    private static void n_OnAnimationEnd_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationEnd", "(Landroid/view/View;)V", "GetOnAnimationEnd_Landroid_view_View_Handler")]
public virtual void OnAnimationEnd(View view);
    private static Delegate GetOnAnimationStart_Landroid_view_View_Handler();
    private static void n_OnAnimationStart_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationStart", "(Landroid/view/View;)V", "GetOnAnimationStart_Landroid_view_View_Handler")]
public virtual void OnAnimationStart(View view);
}
public class Android.Support.V4.View.ViewPropertyAnimatorUpdateEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public ViewPropertyAnimatorUpdateEventArgs(View view);
    public View get_View();
}
[RegisterAttribute("android/support/v4/view/WindowCompat")]
public class Android.Support.V4.View.WindowCompat : Object {
    [RegisterAttribute("FEATURE_ACTION_BAR")]
public static int FeatureActionBar;
    [RegisterAttribute("FEATURE_ACTION_BAR_OVERLAY")]
public static int FeatureActionBarOverlay;
    [RegisterAttribute("FEATURE_ACTION_MODE_OVERLAY")]
public static int FeatureActionModeOverlay;
    internal static IntPtr java_class_handle;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal WindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/view/WindowInsetsCompat")]
public class Android.Support.V4.View.WindowInsetsCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_support_v4_view_WindowInsetsCompat_;
    private static Delegate cb_hasInsets;
    private static IntPtr id_hasInsets;
    private static Delegate cb_hasStableInsets;
    private static IntPtr id_hasStableInsets;
    private static Delegate cb_hasSystemWindowInsets;
    private static IntPtr id_hasSystemWindowInsets;
    private static Delegate cb_isConsumed;
    private static IntPtr id_isConsumed;
    private static Delegate cb_isRound;
    private static IntPtr id_isRound;
    private static Delegate cb_getStableInsetBottom;
    private static IntPtr id_getStableInsetBottom;
    private static Delegate cb_getStableInsetLeft;
    private static IntPtr id_getStableInsetLeft;
    private static Delegate cb_getStableInsetRight;
    private static IntPtr id_getStableInsetRight;
    private static Delegate cb_getStableInsetTop;
    private static IntPtr id_getStableInsetTop;
    private static Delegate cb_getSystemWindowInsetBottom;
    private static IntPtr id_getSystemWindowInsetBottom;
    private static Delegate cb_getSystemWindowInsetLeft;
    private static IntPtr id_getSystemWindowInsetLeft;
    private static Delegate cb_getSystemWindowInsetRight;
    private static IntPtr id_getSystemWindowInsetRight;
    private static Delegate cb_getSystemWindowInsetTop;
    private static IntPtr id_getSystemWindowInsetTop;
    private static Delegate cb_consumeStableInsets;
    private static IntPtr id_consumeStableInsets;
    private static Delegate cb_consumeSystemWindowInsets;
    private static IntPtr id_consumeSystemWindowInsets;
    private static Delegate cb_replaceSystemWindowInsets_Landroid_graphics_Rect_;
    private static IntPtr id_replaceSystemWindowInsets_Landroid_graphics_Rect_;
    private static Delegate cb_replaceSystemWindowInsets_IIII;
    private static IntPtr id_replaceSystemWindowInsets_IIII;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`7<IntPtr, IntPtr, int, int, int, int, IntPtr> <>f__mg$cache10;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasInsets { get; }
    public bool HasStableInsets { get; }
    public bool HasSystemWindowInsets { get; }
    public bool IsConsumed { get; }
    public bool IsRound { get; }
    public int StableInsetBottom { get; }
    public int StableInsetLeft { get; }
    public int StableInsetRight { get; }
    public int StableInsetTop { get; }
    public int SystemWindowInsetBottom { get; }
    public int SystemWindowInsetLeft { get; }
    public int SystemWindowInsetRight { get; }
    public int SystemWindowInsetTop { get; }
    protected WindowInsetsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/v4/view/WindowInsetsCompat;)V", "")]
public WindowInsetsCompat(WindowInsetsCompat src);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasInsetsHandler();
    private static bool n_HasInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasInsets", "()Z", "GetHasInsetsHandler")]
public virtual bool get_HasInsets();
    private static Delegate GetHasStableInsetsHandler();
    private static bool n_HasStableInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasStableInsets", "()Z", "GetHasStableInsetsHandler")]
public virtual bool get_HasStableInsets();
    private static Delegate GetHasSystemWindowInsetsHandler();
    private static bool n_HasSystemWindowInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSystemWindowInsets", "()Z", "GetHasSystemWindowInsetsHandler")]
public virtual bool get_HasSystemWindowInsets();
    private static Delegate GetIsConsumedHandler();
    private static bool n_IsConsumed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isConsumed", "()Z", "GetIsConsumedHandler")]
public virtual bool get_IsConsumed();
    private static Delegate GetIsRoundHandler();
    private static bool n_IsRound(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRound", "()Z", "GetIsRoundHandler")]
public virtual bool get_IsRound();
    private static Delegate GetGetStableInsetBottomHandler();
    private static int n_GetStableInsetBottom(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetBottom", "()I", "GetGetStableInsetBottomHandler")]
public virtual int get_StableInsetBottom();
    private static Delegate GetGetStableInsetLeftHandler();
    private static int n_GetStableInsetLeft(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetLeft", "()I", "GetGetStableInsetLeftHandler")]
public virtual int get_StableInsetLeft();
    private static Delegate GetGetStableInsetRightHandler();
    private static int n_GetStableInsetRight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetRight", "()I", "GetGetStableInsetRightHandler")]
public virtual int get_StableInsetRight();
    private static Delegate GetGetStableInsetTopHandler();
    private static int n_GetStableInsetTop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetTop", "()I", "GetGetStableInsetTopHandler")]
public virtual int get_StableInsetTop();
    private static Delegate GetGetSystemWindowInsetBottomHandler();
    private static int n_GetSystemWindowInsetBottom(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetBottom", "()I", "GetGetSystemWindowInsetBottomHandler")]
public virtual int get_SystemWindowInsetBottom();
    private static Delegate GetGetSystemWindowInsetLeftHandler();
    private static int n_GetSystemWindowInsetLeft(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetLeft", "()I", "GetGetSystemWindowInsetLeftHandler")]
public virtual int get_SystemWindowInsetLeft();
    private static Delegate GetGetSystemWindowInsetRightHandler();
    private static int n_GetSystemWindowInsetRight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetRight", "()I", "GetGetSystemWindowInsetRightHandler")]
public virtual int get_SystemWindowInsetRight();
    private static Delegate GetGetSystemWindowInsetTopHandler();
    private static int n_GetSystemWindowInsetTop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetTop", "()I", "GetGetSystemWindowInsetTopHandler")]
public virtual int get_SystemWindowInsetTop();
    private static Delegate GetConsumeStableInsetsHandler();
    private static IntPtr n_ConsumeStableInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("consumeStableInsets", "()Landroid/support/v4/view/WindowInsetsCompat;", "GetConsumeStableInsetsHandler")]
public virtual WindowInsetsCompat ConsumeStableInsets();
    private static Delegate GetConsumeSystemWindowInsetsHandler();
    private static IntPtr n_ConsumeSystemWindowInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("consumeSystemWindowInsets", "()Landroid/support/v4/view/WindowInsetsCompat;", "GetConsumeSystemWindowInsetsHandler")]
public virtual WindowInsetsCompat ConsumeSystemWindowInsets();
    private static Delegate GetReplaceSystemWindowInsets_Landroid_graphics_Rect_Handler();
    private static IntPtr n_ReplaceSystemWindowInsets_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_systemWindowInsets);
    [RegisterAttribute("replaceSystemWindowInsets", "(Landroid/graphics/Rect;)Landroid/support/v4/view/WindowInsetsCompat;", "GetReplaceSystemWindowInsets_Landroid_graphics_Rect_Handler")]
public virtual WindowInsetsCompat ReplaceSystemWindowInsets(Rect systemWindowInsets);
    private static Delegate GetReplaceSystemWindowInsets_IIIIHandler();
    private static IntPtr n_ReplaceSystemWindowInsets_IIII(IntPtr jnienv, IntPtr native__this, int left, int top, int right, int bottom);
    [RegisterAttribute("replaceSystemWindowInsets", "(IIII)Landroid/support/v4/view/WindowInsetsCompat;", "GetReplaceSystemWindowInsets_IIIIHandler")]
public virtual WindowInsetsCompat ReplaceSystemWindowInsets(int left, int top, int right, int bottom);
}
[RegisterAttribute("android/support/v4/widget/CompoundButtonCompat")]
public class Android.Support.V4.Widget.CompoundButtonCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getButtonDrawable_Landroid_widget_CompoundButton_;
    private static IntPtr id_getButtonTintList_Landroid_widget_CompoundButton_;
    private static IntPtr id_getButtonTintMode_Landroid_widget_CompoundButton_;
    private static IntPtr id_setButtonTintList_Landroid_widget_CompoundButton_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setButtonTintMode_Landroid_widget_CompoundButton_Landroid_graphics_PorterDuff_Mode_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal CompoundButtonCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getButtonDrawable", "(Landroid/widget/CompoundButton;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetButtonDrawable(CompoundButton button);
    [RegisterAttribute("getButtonTintList", "(Landroid/widget/CompoundButton;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetButtonTintList(CompoundButton button);
    [RegisterAttribute("getButtonTintMode", "(Landroid/widget/CompoundButton;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetButtonTintMode(CompoundButton button);
    [RegisterAttribute("setButtonTintList", "(Landroid/widget/CompoundButton;Landroid/content/res/ColorStateList;)V", "")]
public static void SetButtonTintList(CompoundButton button, ColorStateList tint);
    [RegisterAttribute("setButtonTintMode", "(Landroid/widget/CompoundButton;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetButtonTintMode(CompoundButton button, Mode tintMode);
}
[RegisterAttribute("android/support/v4/widget/EdgeEffectCompat")]
public class Android.Support.V4.Widget.EdgeEffectCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_isFinished;
    private static IntPtr id_draw_Landroid_graphics_Canvas_;
    private static IntPtr id_finish;
    private static IntPtr id_onAbsorb_I;
    private static IntPtr id_onPull_F;
    private static IntPtr id_onPull_FF;
    private static IntPtr id_onRelease;
    private static IntPtr id_setSize_II;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsFinished { get; }
    internal EdgeEffectCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public EdgeEffectCompat(Context context);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isFinished", "()Z", "GetIsFinishedHandler")]
public bool get_IsFinished();
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)Z", "")]
public bool Draw(Canvas canvas);
    [RegisterAttribute("finish", "()V", "")]
public void Finish();
    [RegisterAttribute("onAbsorb", "(I)Z", "")]
public bool OnAbsorb(int velocity);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPull", "(F)Z", "")]
public bool OnPull(float deltaDistance);
    [RegisterAttribute("onPull", "(FF)Z", "")]
public bool OnPull(float deltaDistance, float displacement);
    [RegisterAttribute("onRelease", "()Z", "")]
public bool OnRelease();
    [RegisterAttribute("setSize", "(II)V", "")]
public void SetSize(int width, int height);
}
[RegisterAttribute("android/support/v4/widget/TintableCompoundButton", "", "Android.Support.V4.Widget.ITintableCompoundButtonInvoker")]
public interface Android.Support.V4.Widget.ITintableCompoundButton {
    public ColorStateList SupportButtonTintList { get; public set; }
    public Mode SupportButtonTintMode { get; public set; }
    [RegisterAttribute("getSupportButtonTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportButtonTintListHandler:Android.Support.V4.Widget.ITintableCompoundButtonInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual ColorStateList get_SupportButtonTintList();
    [RegisterAttribute("setSupportButtonTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportButtonTintList_Landroid_content_res_ColorStateList_Handler:Android.Support.V4.Widget.ITintableCompoundButtonInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_SupportButtonTintList(ColorStateList value);
    [RegisterAttribute("getSupportButtonTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportButtonTintModeHandler:Android.Support.V4.Widget.ITintableCompoundButtonInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual Mode get_SupportButtonTintMode();
    [RegisterAttribute("setSupportButtonTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_Handler:Android.Support.V4.Widget.ITintableCompoundButtonInvoker, Xamarin.Android.Support.Compat")]
public abstract virtual void set_SupportButtonTintMode(Mode value);
}
[RegisterAttribute("android/support/v4/widget/TintableCompoundButton")]
internal class Android.Support.V4.Widget.ITintableCompoundButtonInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_getSupportButtonTintList;
    private static Delegate cb_setSupportButtonTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportButtonTintList;
    private IntPtr id_setSupportButtonTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportButtonTintMode;
    private static Delegate cb_setSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportButtonTintMode;
    private IntPtr id_setSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache3;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList SupportButtonTintList { get; public set; }
    public Mode SupportButtonTintMode { get; public set; }
    public ITintableCompoundButtonInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableCompoundButtonInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ITintableCompoundButton GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetSupportButtonTintListHandler();
    private static IntPtr n_GetSupportButtonTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportButtonTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportButtonTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportButtonTintList();
    public sealed virtual void set_SupportButtonTintList(ColorStateList value);
    private static Delegate GetGetSupportButtonTintModeHandler();
    private static IntPtr n_GetSupportButtonTintMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportButtonTintMode();
    public sealed virtual void set_SupportButtonTintMode(Mode value);
}
[RegisterAttribute("android/support/v4/widget/ListPopupWindowCompat")]
public class Android.Support.V4.Widget.ListPopupWindowCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_createDragToOpenListener_Ljava_lang_Object_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ListPopupWindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createDragToOpenListener", "(Ljava/lang/Object;Landroid/view/View;)Landroid/view/View$OnTouchListener;", "")]
public static IOnTouchListener CreateDragToOpenListener(Object listPopupWindow, View src);
}
[RegisterAttribute("android/support/v4/widget/ListViewCompat")]
public class Android.Support.V4.Widget.ListViewCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_scrollListBy_Landroid_widget_ListView_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ListViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("scrollListBy", "(Landroid/widget/ListView;I)V", "")]
public static void ScrollListBy(ListView listView, int y);
}
[RegisterAttribute("android/support/v4/widget/PopupMenuCompat")]
public class Android.Support.V4.Widget.PopupMenuCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getDragToOpenListener_Ljava_lang_Object_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal PopupMenuCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDragToOpenListener", "(Ljava/lang/Object;)Landroid/view/View$OnTouchListener;", "")]
public static IOnTouchListener GetDragToOpenListener(Object popupMenu);
}
[RegisterAttribute("android/support/v4/widget/PopupWindowCompat")]
public class Android.Support.V4.Widget.PopupWindowCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getOverlapAnchor_Landroid_widget_PopupWindow_;
    private static IntPtr id_getWindowLayoutType_Landroid_widget_PopupWindow_;
    private static IntPtr id_setOverlapAnchor_Landroid_widget_PopupWindow_Z;
    private static IntPtr id_setWindowLayoutType_Landroid_widget_PopupWindow_I;
    private static IntPtr id_showAsDropDown_Landroid_widget_PopupWindow_Landroid_view_View_III;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal PopupWindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOverlapAnchor", "(Landroid/widget/PopupWindow;)Z", "")]
public static bool GetOverlapAnchor(PopupWindow popupWindow);
    [RegisterAttribute("getWindowLayoutType", "(Landroid/widget/PopupWindow;)I", "")]
public static int GetWindowLayoutType(PopupWindow popupWindow);
    [RegisterAttribute("setOverlapAnchor", "(Landroid/widget/PopupWindow;Z)V", "")]
public static void SetOverlapAnchor(PopupWindow popupWindow, bool overlapAnchor);
    [RegisterAttribute("setWindowLayoutType", "(Landroid/widget/PopupWindow;I)V", "")]
public static void SetWindowLayoutType(PopupWindow popupWindow, int layoutType);
    [RegisterAttribute("showAsDropDown", "(Landroid/widget/PopupWindow;Landroid/view/View;III)V", "")]
public static void ShowAsDropDown(PopupWindow popup, View anchor, int xoff, int yoff, int gravity);
}
[RegisterAttribute("android/support/v4/widget/ScrollerCompat")]
public class Android.Support.V4.Widget.ScrollerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getCurrVelocity;
    private static IntPtr id_getCurrX;
    private static IntPtr id_getCurrY;
    private static IntPtr id_getFinalX;
    private static IntPtr id_getFinalY;
    private static IntPtr id_isFinished;
    private static IntPtr id_isOverScrolled;
    private static IntPtr id_abortAnimation;
    private static IntPtr id_computeScrollOffset;
    private static IntPtr id_create_Landroid_content_Context_;
    private static IntPtr id_create_Landroid_content_Context_Landroid_view_animation_Interpolator_;
    private static IntPtr id_fling_IIIIIIII;
    private static IntPtr id_fling_IIIIIIIIII;
    private static IntPtr id_notifyHorizontalEdgeReached_III;
    private static IntPtr id_notifyVerticalEdgeReached_III;
    private static IntPtr id_springBack_IIIIII;
    private static IntPtr id_startScroll_IIII;
    private static IntPtr id_startScroll_IIIII;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float CurrVelocity { get; }
    public int CurrX { get; }
    public int CurrY { get; }
    public int FinalX { get; }
    public int FinalY { get; }
    public bool IsFinished { get; }
    public bool IsOverScrolled { get; }
    internal ScrollerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrVelocity", "()F", "GetGetCurrVelocityHandler")]
public float get_CurrVelocity();
    [RegisterAttribute("getCurrX", "()I", "GetGetCurrXHandler")]
public int get_CurrX();
    [RegisterAttribute("getCurrY", "()I", "GetGetCurrYHandler")]
public int get_CurrY();
    [RegisterAttribute("getFinalX", "()I", "GetGetFinalXHandler")]
public int get_FinalX();
    [RegisterAttribute("getFinalY", "()I", "GetGetFinalYHandler")]
public int get_FinalY();
    [RegisterAttribute("isFinished", "()Z", "GetIsFinishedHandler")]
public bool get_IsFinished();
    [RegisterAttribute("isOverScrolled", "()Z", "GetIsOverScrolledHandler")]
public bool get_IsOverScrolled();
    [RegisterAttribute("abortAnimation", "()V", "")]
public void AbortAnimation();
    [RegisterAttribute("computeScrollOffset", "()Z", "")]
public bool ComputeScrollOffset();
    [RegisterAttribute("create", "(Landroid/content/Context;)Landroid/support/v4/widget/ScrollerCompat;", "")]
public static ScrollerCompat Create(Context context);
    [RegisterAttribute("create", "(Landroid/content/Context;Landroid/view/animation/Interpolator;)Landroid/support/v4/widget/ScrollerCompat;", "")]
public static ScrollerCompat Create(Context context, IInterpolator interpolator);
    [RegisterAttribute("fling", "(IIIIIIII)V", "")]
public void Fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY);
    [RegisterAttribute("fling", "(IIIIIIIIII)V", "")]
public void Fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY, int overX, int overY);
    [RegisterAttribute("notifyHorizontalEdgeReached", "(III)V", "")]
public void NotifyHorizontalEdgeReached(int startX, int finalX, int overX);
    [RegisterAttribute("notifyVerticalEdgeReached", "(III)V", "")]
public void NotifyVerticalEdgeReached(int startY, int finalY, int overY);
    [RegisterAttribute("springBack", "(IIIIII)Z", "")]
public bool SpringBack(int startX, int startY, int minX, int maxX, int minY, int maxY);
    [RegisterAttribute("startScroll", "(IIII)V", "")]
public void StartScroll(int startX, int startY, int dx, int dy);
    [RegisterAttribute("startScroll", "(IIIII)V", "")]
public void StartScroll(int startX, int startY, int dx, int dy, int duration);
}
[RegisterAttribute("android/support/v4/widget/SearchViewCompat")]
public class Android.Support.V4.Widget.SearchViewCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getQuery_Landroid_view_View_;
    private static IntPtr id_isIconified_Landroid_view_View_;
    private static IntPtr id_isQueryRefinementEnabled_Landroid_view_View_;
    private static IntPtr id_isSubmitButtonEnabled_Landroid_view_View_;
    private static IntPtr id_newSearchView_Landroid_content_Context_;
    private static IntPtr id_setIconified_Landroid_view_View_Z;
    private static IntPtr id_setImeOptions_Landroid_view_View_I;
    private static IntPtr id_setInputType_Landroid_view_View_I;
    private static IntPtr id_setMaxWidth_Landroid_view_View_I;
    private static IntPtr id_setOnCloseListener_Landroid_view_View_Landroid_support_v4_widget_SearchViewCompat_OnCloseListener_;
    private static IntPtr id_setOnQueryTextListener_Landroid_view_View_Landroid_support_v4_widget_SearchViewCompat_OnQueryTextListener_;
    private static IntPtr id_setQuery_Landroid_view_View_Ljava_lang_CharSequence_Z;
    private static IntPtr id_setQueryHint_Landroid_view_View_Ljava_lang_CharSequence_;
    private static IntPtr id_setQueryRefinementEnabled_Landroid_view_View_Z;
    private static IntPtr id_setSearchableInfo_Landroid_view_View_Landroid_content_ComponentName_;
    private static IntPtr id_setSubmitButtonEnabled_Landroid_view_View_Z;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal SearchViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getQuery", "(Landroid/view/View;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetQueryFormatted(View searchView);
    public static string GetQuery(View searchView);
    [RegisterAttribute("isIconified", "(Landroid/view/View;)Z", "")]
public static bool IsIconified(View searchView);
    [RegisterAttribute("isQueryRefinementEnabled", "(Landroid/view/View;)Z", "")]
public static bool IsQueryRefinementEnabled(View searchView);
    [RegisterAttribute("isSubmitButtonEnabled", "(Landroid/view/View;)Z", "")]
public static bool IsSubmitButtonEnabled(View searchView);
    [RegisterAttribute("newSearchView", "(Landroid/content/Context;)Landroid/view/View;", "")]
public static View NewSearchView(Context context);
    [RegisterAttribute("setIconified", "(Landroid/view/View;Z)V", "")]
public static void SetIconified(View searchView, bool iconify);
    [RegisterAttribute("setImeOptions", "(Landroid/view/View;I)V", "")]
public static void SetImeOptions(View searchView, int imeOptions);
    [RegisterAttribute("setInputType", "(Landroid/view/View;I)V", "")]
public static void SetInputType(View searchView, int inputType);
    [RegisterAttribute("setMaxWidth", "(Landroid/view/View;I)V", "")]
public static void SetMaxWidth(View searchView, int maxpixels);
    [RegisterAttribute("setOnCloseListener", "(Landroid/view/View;Landroid/support/v4/widget/SearchViewCompat$OnCloseListener;)V", "")]
public static void SetOnCloseListener(View searchView, IOnCloseListener listener);
    [RegisterAttribute("setOnQueryTextListener", "(Landroid/view/View;Landroid/support/v4/widget/SearchViewCompat$OnQueryTextListener;)V", "")]
public static void SetOnQueryTextListener(View searchView, IOnQueryTextListener listener);
    [RegisterAttribute("setQuery", "(Landroid/view/View;Ljava/lang/CharSequence;Z)V", "")]
public static void SetQuery(View searchView, ICharSequence query, bool submit);
    public static void SetQuery(View searchView, string query, bool submit);
    [RegisterAttribute("setQueryHint", "(Landroid/view/View;Ljava/lang/CharSequence;)V", "")]
public static void SetQueryHint(View searchView, ICharSequence hint);
    public static void SetQueryHint(View searchView, string hint);
    [RegisterAttribute("setQueryRefinementEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetQueryRefinementEnabled(View searchView, bool enable);
    [RegisterAttribute("setSearchableInfo", "(Landroid/view/View;Landroid/content/ComponentName;)V", "")]
public static void SetSearchableInfo(View searchView, ComponentName searchableComponent);
    [RegisterAttribute("setSubmitButtonEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetSubmitButtonEnabled(View searchView, bool enabled);
}
[ExtensionAttribute]
public static class Android.Support.V4.Widget.SearchViewCompatISearchViewCompatImplExtensions : object {
    [ExtensionAttribute]
public static string GetQuery(ISearchViewCompatImpl self, View p0);
    [ExtensionAttribute]
public static void SetQuery(ISearchViewCompatImpl self, View p0, string p1, bool p2);
    [ExtensionAttribute]
public static void SetQueryHint(ISearchViewCompatImpl self, View p0, string p1);
}
[RegisterAttribute("android/support/v4/widget/TextViewCompat")]
public class Android.Support.V4.Widget.TextViewCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_getCompoundDrawablesRelative_Landroid_widget_TextView_;
    private static IntPtr id_getMaxLines_Landroid_widget_TextView_;
    private static IntPtr id_getMinLines_Landroid_widget_TextView_;
    private static IntPtr id_setCompoundDrawablesRelative_Landroid_widget_TextView_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setCompoundDrawablesRelativeWithIntrinsicBounds_Landroid_widget_TextView_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setCompoundDrawablesRelativeWithIntrinsicBounds_Landroid_widget_TextView_IIII;
    private static IntPtr id_setTextAppearance_Landroid_widget_TextView_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TextViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCompoundDrawablesRelative", "(Landroid/widget/TextView;)[Landroid/graphics/drawable/Drawable;", "")]
public static Drawable[] GetCompoundDrawablesRelative(TextView textView);
    [RegisterAttribute("getMaxLines", "(Landroid/widget/TextView;)I", "")]
public static int GetMaxLines(TextView textView);
    [RegisterAttribute("getMinLines", "(Landroid/widget/TextView;)I", "")]
public static int GetMinLines(TextView textView);
    [RegisterAttribute("setCompoundDrawablesRelative", "(Landroid/widget/TextView;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "")]
public static void SetCompoundDrawablesRelative(TextView textView, Drawable start, Drawable top, Drawable end, Drawable bottom);
    [RegisterAttribute("setCompoundDrawablesRelativeWithIntrinsicBounds", "(Landroid/widget/TextView;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "")]
public static void SetCompoundDrawablesRelativeWithIntrinsicBounds(TextView textView, Drawable start, Drawable top, Drawable end, Drawable bottom);
    [RegisterAttribute("setCompoundDrawablesRelativeWithIntrinsicBounds", "(Landroid/widget/TextView;IIII)V", "")]
public static void SetCompoundDrawablesRelativeWithIntrinsicBounds(TextView textView, int start, int top, int end, int bottom);
    [RegisterAttribute("setTextAppearance", "(Landroid/widget/TextView;I)V", "")]
public static void SetTextAppearance(TextView textView, int resId);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_android_support_v4_app_mappings;
    private static String[] package_android_support_v4_os_mappings;
    [CompilerGeneratedAttribute]
private static Converter`2<string, Type> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Converter`2<string, Type> <>f__mg$cache1;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_v4_app_package(string klass);
    private static Type lookup_android_support_v4_os_package(string klass);
}
