[RegisterAttribute("android/support/coreui/BuildConfig")]
public class Android.Support.CoreUI.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/app/ActionBarDrawerToggle")]
public class Android.Support.V4.App.ActionBarDrawerToggle : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_app_Activity_Landroid_support_v4_widget_DrawerLayout_ZIII;
    private static IntPtr id_ctor_Landroid_app_Activity_Landroid_support_v4_widget_DrawerLayout_III;
    private static Delegate cb_isDrawerIndicatorEnabled;
    private static Delegate cb_setDrawerIndicatorEnabled_Z;
    private static IntPtr id_isDrawerIndicatorEnabled;
    private static IntPtr id_setDrawerIndicatorEnabled_Z;
    private static Delegate cb_onConfigurationChanged_Landroid_content_res_Configuration_;
    private static IntPtr id_onConfigurationChanged_Landroid_content_res_Configuration_;
    private static Delegate cb_onDrawerClosed_Landroid_view_View_;
    private static IntPtr id_onDrawerClosed_Landroid_view_View_;
    private static Delegate cb_onDrawerOpened_Landroid_view_View_;
    private static IntPtr id_onDrawerOpened_Landroid_view_View_;
    private static Delegate cb_onDrawerSlide_Landroid_view_View_F;
    private static IntPtr id_onDrawerSlide_Landroid_view_View_F;
    private static Delegate cb_onDrawerStateChanged_I;
    private static IntPtr id_onDrawerStateChanged_I;
    private static Delegate cb_onOptionsItemSelected_Landroid_view_MenuItem_;
    private static IntPtr id_onOptionsItemSelected_Landroid_view_MenuItem_;
    private static Delegate cb_setHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setHomeAsUpIndicator_I;
    private static IntPtr id_setHomeAsUpIndicator_I;
    private static Delegate cb_syncState;
    private static IntPtr id_syncState;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool DrawerIndicatorEnabled { get; public set; }
    protected ActionBarDrawerToggle(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/app/Activity;Landroid/support/v4/widget/DrawerLayout;ZIII)V", "")]
public ActionBarDrawerToggle(Activity activity, DrawerLayout drawerLayout, bool animate, int drawerImageRes, int openDrawerContentDescRes, int closeDrawerContentDescRes);
    [RegisterAttribute(".ctor", "(Landroid/app/Activity;Landroid/support/v4/widget/DrawerLayout;III)V", "")]
public ActionBarDrawerToggle(Activity activity, DrawerLayout drawerLayout, int drawerImageRes, int openDrawerContentDescRes, int closeDrawerContentDescRes);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsDrawerIndicatorEnabledHandler();
    private static bool n_IsDrawerIndicatorEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDrawerIndicatorEnabled_ZHandler();
    private static void n_SetDrawerIndicatorEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enable);
    [RegisterAttribute("isDrawerIndicatorEnabled", "()Z", "GetIsDrawerIndicatorEnabledHandler")]
public virtual bool get_DrawerIndicatorEnabled();
    [RegisterAttribute("setDrawerIndicatorEnabled", "(Z)V", "GetSetDrawerIndicatorEnabled_ZHandler")]
public virtual void set_DrawerIndicatorEnabled(bool value);
    private static Delegate GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler();
    private static void n_OnConfigurationChanged_Landroid_content_res_Configuration_(IntPtr jnienv, IntPtr native__this, IntPtr native_newConfig);
    [RegisterAttribute("onConfigurationChanged", "(Landroid/content/res/Configuration;)V", "GetOnConfigurationChanged_Landroid_content_res_Configuration_Handler")]
public virtual void OnConfigurationChanged(Configuration newConfig);
    private static Delegate GetOnDrawerClosed_Landroid_view_View_Handler();
    private static void n_OnDrawerClosed_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("onDrawerClosed", "(Landroid/view/View;)V", "GetOnDrawerClosed_Landroid_view_View_Handler")]
public virtual void OnDrawerClosed(View drawerView);
    private static Delegate GetOnDrawerOpened_Landroid_view_View_Handler();
    private static void n_OnDrawerOpened_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("onDrawerOpened", "(Landroid/view/View;)V", "GetOnDrawerOpened_Landroid_view_View_Handler")]
public virtual void OnDrawerOpened(View drawerView);
    private static Delegate GetOnDrawerSlide_Landroid_view_View_FHandler();
    private static void n_OnDrawerSlide_Landroid_view_View_F(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView, float slideOffset);
    [RegisterAttribute("onDrawerSlide", "(Landroid/view/View;F)V", "GetOnDrawerSlide_Landroid_view_View_FHandler")]
public virtual void OnDrawerSlide(View drawerView, float slideOffset);
    private static Delegate GetOnDrawerStateChanged_IHandler();
    private static void n_OnDrawerStateChanged_I(IntPtr jnienv, IntPtr native__this, int newState);
    [RegisterAttribute("onDrawerStateChanged", "(I)V", "GetOnDrawerStateChanged_IHandler")]
public virtual void OnDrawerStateChanged(int newState);
    private static Delegate GetOnOptionsItemSelected_Landroid_view_MenuItem_Handler();
    private static bool n_OnOptionsItemSelected_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_item);
    [RegisterAttribute("onOptionsItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnOptionsItemSelected_Landroid_view_MenuItem_Handler")]
public virtual bool OnOptionsItemSelected(IMenuItem item);
    private static Delegate GetSetHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_indicator);
    [RegisterAttribute("setHomeAsUpIndicator", "(Landroid/graphics/drawable/Drawable;)V", "GetSetHomeAsUpIndicator_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetHomeAsUpIndicator(Drawable indicator);
    private static Delegate GetSetHomeAsUpIndicator_IHandler();
    private static void n_SetHomeAsUpIndicator_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setHomeAsUpIndicator", "(I)V", "GetSetHomeAsUpIndicator_IHandler")]
public virtual void SetHomeAsUpIndicator(int resId);
    private static Delegate GetSyncStateHandler();
    private static void n_SyncState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("syncState", "()V", "GetSyncStateHandler")]
public virtual void SyncState();
}
[RegisterAttribute("android/support/v4/view/AbsSavedState")]
public abstract class Android.Support.V4.View.AbsSavedState : Object {
    private static IntPtr CREATOR_jfieldId;
    private static IntPtr EMPTY_STATE_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_os_Parcel_;
    private static IntPtr id_ctor_Landroid_os_Parcel_Ljava_lang_ClassLoader_;
    private static IntPtr id_ctor_Landroid_os_Parcelable_;
    private static IntPtr id_getSuperState;
    private static Delegate cb_describeContents;
    private static IntPtr id_describeContents;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    [RegisterAttribute("EMPTY_STATE")]
public static AbsSavedState EmptyState { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IParcelable SuperState { get; }
    protected AbsSavedState(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;)V", "")]
protected AbsSavedState(Parcel source);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)V", "")]
protected AbsSavedState(Parcel source, ClassLoader loader);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcelable;)V", "")]
protected AbsSavedState(IParcelable superState);
    public static IParcelableCreator get_Creator();
    public static AbsSavedState get_EmptyState();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getSuperState", "()Landroid/os/Parcelable;", "GetGetSuperStateHandler")]
public IParcelable get_SuperState();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_dest, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/view/AbsSavedState")]
internal class Android.Support.V4.View.AbsSavedStateInvoker : AbsSavedState {
    protected Type ThresholdType { get; }
    public AbsSavedStateInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/view/animation/FastOutLinearInInterpolator")]
public class Android.Support.V4.View.Animation.FastOutLinearInInterpolator : LookupTableInterpolator {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getInterpolation_F;
    private static IntPtr id_getInterpolation_F;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FastOutLinearInInterpolator(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInterpolation_FHandler();
    private static float n_GetInterpolation_F(IntPtr jnienv, IntPtr native__this, float input);
    [RegisterAttribute("getInterpolation", "(F)F", "GetGetInterpolation_FHandler")]
public virtual float GetInterpolation(float input);
}
[RegisterAttribute("android/support/v4/view/animation/FastOutSlowInInterpolator")]
public class Android.Support.V4.View.Animation.FastOutSlowInInterpolator : LookupTableInterpolator {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getInterpolation_F;
    private static IntPtr id_getInterpolation_F;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FastOutSlowInInterpolator(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInterpolation_FHandler();
    private static float n_GetInterpolation_F(IntPtr jnienv, IntPtr native__this, float input);
    [RegisterAttribute("getInterpolation", "(F)F", "GetGetInterpolation_FHandler")]
public virtual float GetInterpolation(float input);
}
[RegisterAttribute("android/support/v4/view/animation/LinearOutSlowInInterpolator")]
public class Android.Support.V4.View.Animation.LinearOutSlowInInterpolator : LookupTableInterpolator {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getInterpolation_F;
    private static IntPtr id_getInterpolation_F;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected LinearOutSlowInInterpolator(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInterpolation_FHandler();
    private static float n_GetInterpolation_F(IntPtr jnienv, IntPtr native__this, float input);
    [RegisterAttribute("getInterpolation", "(F)F", "GetGetInterpolation_FHandler")]
public virtual float GetInterpolation(float input);
}
[RegisterAttribute("android/support/v4/view/animation/LookupTableInterpolator")]
public abstract class Android.Support.V4.View.Animation.LookupTableInterpolator : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_arrayF;
    private static Delegate cb_getInterpolation_F;
    private static IntPtr id_getInterpolation_F;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected LookupTableInterpolator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "([F)V", "")]
public LookupTableInterpolator(Single[] values);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInterpolation_FHandler();
    private static float n_GetInterpolation_F(IntPtr jnienv, IntPtr native__this, float input);
    [RegisterAttribute("getInterpolation", "(F)F", "GetGetInterpolation_FHandler")]
public virtual float GetInterpolation(float input);
}
[RegisterAttribute("android/support/v4/view/animation/LookupTableInterpolator")]
internal class Android.Support.V4.View.Animation.LookupTableInterpolatorInvoker : LookupTableInterpolator {
    protected Type ThresholdType { get; }
    public LookupTableInterpolatorInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/view/AsyncLayoutInflater")]
public class Android.Support.V4.View.AsyncLayoutInflater : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_inflate_ILandroid_view_ViewGroup_Landroid_support_v4_view_AsyncLayoutInflater_OnInflateFinishedListener_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal AsyncLayoutInflater(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public AsyncLayoutInflater(Context context);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("inflate", "(ILandroid/view/ViewGroup;Landroid/support/v4/view/AsyncLayoutInflater$OnInflateFinishedListener;)V", "")]
public void Inflate(int resid, ViewGroup parent, IOnInflateFinishedListener callback);
}
[RegisterAttribute("android/support/v4/view/NestedScrollingChildHelper")]
public class Android.Support.V4.View.NestedScrollingChildHelper : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_view_View_;
    private static Delegate cb_hasNestedScrollingParent;
    private static IntPtr id_hasNestedScrollingParent;
    private static Delegate cb_isNestedScrollingEnabled;
    private static Delegate cb_setNestedScrollingEnabled_Z;
    private static IntPtr id_isNestedScrollingEnabled;
    private static IntPtr id_setNestedScrollingEnabled_Z;
    private static Delegate cb_dispatchNestedFling_FFZ;
    private static IntPtr id_dispatchNestedFling_FFZ;
    private static Delegate cb_dispatchNestedPreFling_FF;
    private static IntPtr id_dispatchNestedPreFling_FF;
    private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    private static IntPtr id_dispatchNestedPreScroll_IIarrayIarrayI;
    private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    private static IntPtr id_dispatchNestedScroll_IIIIarrayI;
    private static Delegate cb_onDetachedFromWindow;
    private static IntPtr id_onDetachedFromWindow;
    private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private static IntPtr id_onStopNestedScroll_Landroid_view_View_;
    private static Delegate cb_startNestedScroll_I;
    private static IntPtr id_startNestedScroll_I;
    private static Delegate cb_stopNestedScroll;
    private static IntPtr id_stopNestedScroll;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    protected NestedScrollingChildHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public NestedScrollingChildHelper(View view);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler")]
public virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler")]
public virtual bool get_NestedScrollingEnabled();
    [RegisterAttribute("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler")]
public virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler")]
public virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    [RegisterAttribute("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler")]
public virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    [RegisterAttribute("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler")]
public virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    [RegisterAttribute("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler")]
public virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler")]
public virtual void OnStopNestedScroll(View child);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int axes);
    [RegisterAttribute("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler")]
public virtual bool StartNestedScroll(int axes);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stopNestedScroll", "()V", "GetStopNestedScrollHandler")]
public virtual void StopNestedScroll();
}
[RegisterAttribute("android/support/v4/view/NestedScrollingParentHelper")]
public class Android.Support.V4.View.NestedScrollingParentHelper : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_view_ViewGroup_;
    private static Delegate cb_getNestedScrollAxes;
    private static IntPtr id_getNestedScrollAxes;
    private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private static IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private static IntPtr id_onStopNestedScroll_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int NestedScrollAxes { get; }
    protected NestedScrollingParentHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/ViewGroup;)V", "")]
public NestedScrollingParentHelper(ViewGroup viewGroup);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getNestedScrollAxes", "()I", "GetGetNestedScrollAxesHandler")]
public virtual int get_NestedScrollAxes();
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int axes);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;I)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler")]
public virtual void OnNestedScrollAccepted(View child, View target, int axes);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler")]
public virtual void OnStopNestedScroll(View target);
}
[RegisterAttribute("android/support/v4/view/PagerAdapter")]
public abstract class Android.Support.V4.View.PagerAdapter : Object {
    [RegisterAttribute("POSITION_NONE")]
public static int PositionNone;
    [RegisterAttribute("POSITION_UNCHANGED")]
public static int PositionUnchanged;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getCount;
    private static Delegate cb_destroyItem_Landroid_view_View_ILjava_lang_Object_;
    private static IntPtr id_destroyItem_Landroid_view_View_ILjava_lang_Object_;
    private static Delegate cb_destroyItem_Landroid_view_ViewGroup_ILjava_lang_Object_;
    private static IntPtr id_destroyItem_Landroid_view_ViewGroup_ILjava_lang_Object_;
    private static Delegate cb_finishUpdate_Landroid_view_View_;
    private static IntPtr id_finishUpdate_Landroid_view_View_;
    private static Delegate cb_finishUpdate_Landroid_view_ViewGroup_;
    private static IntPtr id_finishUpdate_Landroid_view_ViewGroup_;
    private static Delegate cb_getItemPosition_Ljava_lang_Object_;
    private static IntPtr id_getItemPosition_Ljava_lang_Object_;
    private static Delegate cb_getPageTitle_I;
    private static IntPtr id_getPageTitle_I;
    private static Delegate cb_getPageWidth_I;
    private static IntPtr id_getPageWidth_I;
    private static Delegate cb_instantiateItem_Landroid_view_View_I;
    private static IntPtr id_instantiateItem_Landroid_view_View_I;
    private static Delegate cb_instantiateItem_Landroid_view_ViewGroup_I;
    private static IntPtr id_instantiateItem_Landroid_view_ViewGroup_I;
    private static Delegate cb_isViewFromObject_Landroid_view_View_Ljava_lang_Object_;
    private static Delegate cb_notifyDataSetChanged;
    private static IntPtr id_notifyDataSetChanged;
    private static Delegate cb_registerDataSetObserver_Landroid_database_DataSetObserver_;
    private static IntPtr id_registerDataSetObserver_Landroid_database_DataSetObserver_;
    private static Delegate cb_restoreState_Landroid_os_Parcelable_Ljava_lang_ClassLoader_;
    private static IntPtr id_restoreState_Landroid_os_Parcelable_Ljava_lang_ClassLoader_;
    private static Delegate cb_saveState;
    private static IntPtr id_saveState;
    private static Delegate cb_setPrimaryItem_Landroid_view_View_ILjava_lang_Object_;
    private static IntPtr id_setPrimaryItem_Landroid_view_View_ILjava_lang_Object_;
    private static Delegate cb_setPrimaryItem_Landroid_view_ViewGroup_ILjava_lang_Object_;
    private static IntPtr id_setPrimaryItem_Landroid_view_ViewGroup_ILjava_lang_Object_;
    private static Delegate cb_startUpdate_Landroid_view_View_;
    private static IntPtr id_startUpdate_Landroid_view_View_;
    private static Delegate cb_startUpdate_Landroid_view_ViewGroup_;
    private static IntPtr id_startUpdate_Landroid_view_ViewGroup_;
    private static Delegate cb_unregisterDataSetObserver_Landroid_database_DataSetObserver_;
    private static IntPtr id_unregisterDataSetObserver_Landroid_database_DataSetObserver_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Count { get; }
    protected PagerAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCountHandler();
    private static int n_GetCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCount", "()I", "GetGetCountHandler")]
public abstract virtual int get_Count();
    private static Delegate GetDestroyItem_Landroid_view_View_ILjava_lang_Object_Handler();
    private static void n_DestroyItem_Landroid_view_View_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position, IntPtr native__object);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("destroyItem", "(Landroid/view/View;ILjava/lang/Object;)V", "GetDestroyItem_Landroid_view_View_ILjava_lang_Object_Handler")]
public virtual void DestroyItem(View container, int position, Object object);
    private static Delegate GetDestroyItem_Landroid_view_ViewGroup_ILjava_lang_Object_Handler();
    private static void n_DestroyItem_Landroid_view_ViewGroup_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position, IntPtr native__object);
    [RegisterAttribute("destroyItem", "(Landroid/view/ViewGroup;ILjava/lang/Object;)V", "GetDestroyItem_Landroid_view_ViewGroup_ILjava_lang_Object_Handler")]
public virtual void DestroyItem(ViewGroup container, int position, Object object);
    private static Delegate GetFinishUpdate_Landroid_view_View_Handler();
    private static void n_FinishUpdate_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("finishUpdate", "(Landroid/view/View;)V", "GetFinishUpdate_Landroid_view_View_Handler")]
public virtual void FinishUpdate(View container);
    private static Delegate GetFinishUpdate_Landroid_view_ViewGroup_Handler();
    private static void n_FinishUpdate_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [RegisterAttribute("finishUpdate", "(Landroid/view/ViewGroup;)V", "GetFinishUpdate_Landroid_view_ViewGroup_Handler")]
public virtual void FinishUpdate(ViewGroup container);
    private static Delegate GetGetItemPosition_Ljava_lang_Object_Handler();
    private static int n_GetItemPosition_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("getItemPosition", "(Ljava/lang/Object;)I", "GetGetItemPosition_Ljava_lang_Object_Handler")]
public virtual int GetItemPosition(Object object);
    private static Delegate GetGetPageTitle_IHandler();
    private static IntPtr n_GetPageTitle_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getPageTitle", "(I)Ljava/lang/CharSequence;", "GetGetPageTitle_IHandler")]
public virtual ICharSequence GetPageTitleFormatted(int position);
    public string GetPageTitle(int position);
    private static Delegate GetGetPageWidth_IHandler();
    private static float n_GetPageWidth_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getPageWidth", "(I)F", "GetGetPageWidth_IHandler")]
public virtual float GetPageWidth(int position);
    private static Delegate GetInstantiateItem_Landroid_view_View_IHandler();
    private static IntPtr n_InstantiateItem_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("instantiateItem", "(Landroid/view/View;I)Ljava/lang/Object;", "GetInstantiateItem_Landroid_view_View_IHandler")]
public virtual Object InstantiateItem(View container, int position);
    private static Delegate GetInstantiateItem_Landroid_view_ViewGroup_IHandler();
    private static IntPtr n_InstantiateItem_Landroid_view_ViewGroup_I(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position);
    [RegisterAttribute("instantiateItem", "(Landroid/view/ViewGroup;I)Ljava/lang/Object;", "GetInstantiateItem_Landroid_view_ViewGroup_IHandler")]
public virtual Object InstantiateItem(ViewGroup container, int position);
    private static Delegate GetIsViewFromObject_Landroid_view_View_Ljava_lang_Object_Handler();
    private static bool n_IsViewFromObject_Landroid_view_View_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native__object);
    [RegisterAttribute("isViewFromObject", "(Landroid/view/View;Ljava/lang/Object;)Z", "GetIsViewFromObject_Landroid_view_View_Ljava_lang_Object_Handler")]
public abstract virtual bool IsViewFromObject(View view, Object object);
    private static Delegate GetNotifyDataSetChangedHandler();
    private static void n_NotifyDataSetChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("notifyDataSetChanged", "()V", "GetNotifyDataSetChangedHandler")]
public virtual void NotifyDataSetChanged();
    private static Delegate GetRegisterDataSetObserver_Landroid_database_DataSetObserver_Handler();
    private static void n_RegisterDataSetObserver_Landroid_database_DataSetObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("registerDataSetObserver", "(Landroid/database/DataSetObserver;)V", "GetRegisterDataSetObserver_Landroid_database_DataSetObserver_Handler")]
public virtual void RegisterDataSetObserver(DataSetObserver observer);
    private static Delegate GetRestoreState_Landroid_os_Parcelable_Ljava_lang_ClassLoader_Handler();
    private static void n_RestoreState_Landroid_os_Parcelable_Ljava_lang_ClassLoader_(IntPtr jnienv, IntPtr native__this, IntPtr native_state, IntPtr native_loader);
    [RegisterAttribute("restoreState", "(Landroid/os/Parcelable;Ljava/lang/ClassLoader;)V", "GetRestoreState_Landroid_os_Parcelable_Ljava_lang_ClassLoader_Handler")]
public virtual void RestoreState(IParcelable state, ClassLoader loader);
    private static Delegate GetSaveStateHandler();
    private static IntPtr n_SaveState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("saveState", "()Landroid/os/Parcelable;", "GetSaveStateHandler")]
public virtual IParcelable SaveState();
    private static Delegate GetSetPrimaryItem_Landroid_view_View_ILjava_lang_Object_Handler();
    private static void n_SetPrimaryItem_Landroid_view_View_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position, IntPtr native__object);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setPrimaryItem", "(Landroid/view/View;ILjava/lang/Object;)V", "GetSetPrimaryItem_Landroid_view_View_ILjava_lang_Object_Handler")]
public virtual void SetPrimaryItem(View container, int position, Object object);
    private static Delegate GetSetPrimaryItem_Landroid_view_ViewGroup_ILjava_lang_Object_Handler();
    private static void n_SetPrimaryItem_Landroid_view_ViewGroup_ILjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_container, int position, IntPtr native__object);
    [RegisterAttribute("setPrimaryItem", "(Landroid/view/ViewGroup;ILjava/lang/Object;)V", "GetSetPrimaryItem_Landroid_view_ViewGroup_ILjava_lang_Object_Handler")]
public virtual void SetPrimaryItem(ViewGroup container, int position, Object object);
    private static Delegate GetStartUpdate_Landroid_view_View_Handler();
    private static void n_StartUpdate_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startUpdate", "(Landroid/view/View;)V", "GetStartUpdate_Landroid_view_View_Handler")]
public virtual void StartUpdate(View container);
    private static Delegate GetStartUpdate_Landroid_view_ViewGroup_Handler();
    private static void n_StartUpdate_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [RegisterAttribute("startUpdate", "(Landroid/view/ViewGroup;)V", "GetStartUpdate_Landroid_view_ViewGroup_Handler")]
public virtual void StartUpdate(ViewGroup container);
    private static Delegate GetUnregisterDataSetObserver_Landroid_database_DataSetObserver_Handler();
    private static void n_UnregisterDataSetObserver_Landroid_database_DataSetObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_observer);
    [RegisterAttribute("unregisterDataSetObserver", "(Landroid/database/DataSetObserver;)V", "GetUnregisterDataSetObserver_Landroid_database_DataSetObserver_Handler")]
public virtual void UnregisterDataSetObserver(DataSetObserver observer);
}
[RegisterAttribute("android/support/v4/view/PagerAdapter")]
internal class Android.Support.V4.View.PagerAdapterInvoker : PagerAdapter {
    private static IntPtr id_getCount;
    private static IntPtr id_isViewFromObject_Landroid_view_View_Ljava_lang_Object_;
    protected Type ThresholdType { get; }
    public int Count { get; }
    public PagerAdapterInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCount", "()I", "GetGetCountHandler")]
public virtual int get_Count();
    [RegisterAttribute("isViewFromObject", "(Landroid/view/View;Ljava/lang/Object;)Z", "GetIsViewFromObject_Landroid_view_View_Ljava_lang_Object_Handler")]
public virtual bool IsViewFromObject(View view, Object object);
}
[RegisterAttribute("android/support/v4/view/PagerTabStrip")]
public class Android.Support.V4.View.PagerTabStrip : PagerTitleStrip {
    private static Delegate cb_setBackgroundColor_I;
    private static IntPtr id_setBackgroundColor_I;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static Delegate cb_getDrawFullUnderline;
    private static Delegate cb_setDrawFullUnderline_Z;
    private static IntPtr id_getDrawFullUnderline;
    private static IntPtr id_setDrawFullUnderline_Z;
    private static Delegate cb_getTabIndicatorColor;
    private static Delegate cb_setTabIndicatorColor_I;
    private static IntPtr id_getTabIndicatorColor;
    private static IntPtr id_setTabIndicatorColor_I;
    private static Delegate cb_setTabIndicatorColorResource_I;
    private static IntPtr id_setTabIndicatorColorResource_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool DrawFullUnderline { get; public set; }
    public int TabIndicatorColor { get; public set; }
    protected PagerTabStrip(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public PagerTabStrip(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public PagerTabStrip(Context context, IAttributeSet attrs);
    private static Delegate GetSetBackgroundColor_IHandler();
    private static void n_SetBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")]
public void SetBackgroundColor(int color);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawFullUnderlineHandler();
    private static bool n_GetDrawFullUnderline(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDrawFullUnderline_ZHandler();
    private static void n_SetDrawFullUnderline_Z(IntPtr jnienv, IntPtr native__this, bool drawFull);
    [RegisterAttribute("getDrawFullUnderline", "()Z", "GetGetDrawFullUnderlineHandler")]
public virtual bool get_DrawFullUnderline();
    [RegisterAttribute("setDrawFullUnderline", "(Z)V", "GetSetDrawFullUnderline_ZHandler")]
public virtual void set_DrawFullUnderline(bool value);
    private static Delegate GetGetTabIndicatorColorHandler();
    private static int n_GetTabIndicatorColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabIndicatorColor_IHandler();
    private static void n_SetTabIndicatorColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getTabIndicatorColor", "()I", "GetGetTabIndicatorColorHandler")]
public virtual int get_TabIndicatorColor();
    [RegisterAttribute("setTabIndicatorColor", "(I)V", "GetSetTabIndicatorColor_IHandler")]
public virtual void set_TabIndicatorColor(int value);
    private static Delegate GetSetTabIndicatorColorResource_IHandler();
    private static void n_SetTabIndicatorColorResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setTabIndicatorColorResource", "(I)V", "GetSetTabIndicatorColorResource_IHandler")]
public virtual void SetTabIndicatorColorResource(int resId);
}
[RegisterAttribute("android/support/v4/view/PagerTitleStrip")]
public class Android.Support.V4.View.PagerTitleStrip : ViewGroup {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static Delegate cb_getTextSpacing;
    private static Delegate cb_setTextSpacing_I;
    private static IntPtr id_getTextSpacing;
    private static IntPtr id_setTextSpacing_I;
    private static Delegate cb_onLayout_ZIIII;
    private static IntPtr id_onLayout_ZIIII;
    private static Delegate cb_setGravity_I;
    private static IntPtr id_setGravity_I;
    private static Delegate cb_setNonPrimaryAlpha_F;
    private static IntPtr id_setNonPrimaryAlpha_F;
    private static Delegate cb_setTextColor_I;
    private static IntPtr id_setTextColor_I;
    private static Delegate cb_setTextSize_IF;
    private static IntPtr id_setTextSize_IF;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int TextSpacing { get; public set; }
    protected PagerTitleStrip(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public PagerTitleStrip(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public PagerTitleStrip(Context context, IAttributeSet attrs);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetTextSpacingHandler();
    private static int n_GetTextSpacing(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextSpacing_IHandler();
    private static void n_SetTextSpacing_I(IntPtr jnienv, IntPtr native__this, int spacingPixels);
    [RegisterAttribute("getTextSpacing", "()I", "GetGetTextSpacingHandler")]
public virtual int get_TextSpacing();
    [RegisterAttribute("setTextSpacing", "(I)V", "GetSetTextSpacing_IHandler")]
public virtual void set_TextSpacing(int value);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetSetGravity_IHandler();
    private static void n_SetGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("setGravity", "(I)V", "GetSetGravity_IHandler")]
public virtual void SetGravity(int gravity);
    private static Delegate GetSetNonPrimaryAlpha_FHandler();
    private static void n_SetNonPrimaryAlpha_F(IntPtr jnienv, IntPtr native__this, float alpha);
    [RegisterAttribute("setNonPrimaryAlpha", "(F)V", "GetSetNonPrimaryAlpha_FHandler")]
public virtual void SetNonPrimaryAlpha(float alpha);
    private static Delegate GetSetTextColor_IHandler();
    private static void n_SetTextColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setTextColor", "(I)V", "GetSetTextColor_IHandler")]
public virtual void SetTextColor(int color);
    private static Delegate GetSetTextSize_IFHandler();
    private static void n_SetTextSize_IF(IntPtr jnienv, IntPtr native__this, int unit, float size);
    [RegisterAttribute("setTextSize", "(IF)V", "GetSetTextSize_IFHandler")]
public virtual void SetTextSize(int unit, float size);
}
[RegisterAttribute("android/support/v4/view/ViewPager")]
public class Android.Support.V4.View.ViewPager : ViewGroup {
    [RegisterAttribute("SCROLL_STATE_DRAGGING")]
public static int ScrollStateDragging;
    [RegisterAttribute("SCROLL_STATE_IDLE")]
public static int ScrollStateIdle;
    [RegisterAttribute("SCROLL_STATE_SETTLING")]
public static int ScrollStateSettling;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static Delegate cb_getAdapter;
    private static Delegate cb_setAdapter_Landroid_support_v4_view_PagerAdapter_;
    private static IntPtr id_getAdapter;
    private static IntPtr id_setAdapter_Landroid_support_v4_view_PagerAdapter_;
    private static Delegate cb_getCurrentItem;
    private static Delegate cb_setCurrentItem_I;
    private static IntPtr id_getCurrentItem;
    private static IntPtr id_setCurrentItem_I;
    private static Delegate cb_isFakeDragging;
    private static IntPtr id_isFakeDragging;
    private static Delegate cb_getOffscreenPageLimit;
    private static Delegate cb_setOffscreenPageLimit_I;
    private static IntPtr id_getOffscreenPageLimit;
    private static IntPtr id_setOffscreenPageLimit_I;
    private static Delegate cb_getPageMargin;
    private static Delegate cb_setPageMargin_I;
    private static IntPtr id_getPageMargin;
    private static IntPtr id_setPageMargin_I;
    private static Delegate cb_addFocusables_Ljava_util_ArrayList_II;
    private static IntPtr id_addFocusables_Ljava_util_ArrayList_II;
    private static Delegate cb_addOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_;
    private static IntPtr id_addOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_;
    private static Delegate cb_addOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static IntPtr id_addOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static Delegate cb_addTouchables_Ljava_util_ArrayList_;
    private static IntPtr id_addTouchables_Ljava_util_ArrayList_;
    private static Delegate cb_arrowScroll_I;
    private static IntPtr id_arrowScroll_I;
    private static Delegate cb_beginFakeDrag;
    private static IntPtr id_beginFakeDrag;
    private static Delegate cb_canScroll_Landroid_view_View_ZIII;
    private static IntPtr id_canScroll_Landroid_view_View_ZIII;
    private static Delegate cb_clearOnPageChangeListeners;
    private static IntPtr id_clearOnPageChangeListeners;
    private static Delegate cb_endFakeDrag;
    private static IntPtr id_endFakeDrag;
    private static Delegate cb_executeKeyEvent_Landroid_view_KeyEvent_;
    private static IntPtr id_executeKeyEvent_Landroid_view_KeyEvent_;
    private static Delegate cb_fakeDragBy_F;
    private static IntPtr id_fakeDragBy_F;
    private static Delegate cb_onLayout_ZIIII;
    private static IntPtr id_onLayout_ZIIII;
    private static Delegate cb_onPageScrolled_IFI;
    private static IntPtr id_onPageScrolled_IFI;
    private static Delegate cb_onRestoreInstanceState_Landroid_os_Parcelable_;
    private static IntPtr id_onRestoreInstanceState_Landroid_os_Parcelable_;
    private static Delegate cb_onSaveInstanceState;
    private static IntPtr id_onSaveInstanceState;
    private static Delegate cb_removeOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_;
    private static IntPtr id_removeOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_;
    private static Delegate cb_removeOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static IntPtr id_removeOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static Delegate cb_setCurrentItem_IZ;
    private static IntPtr id_setCurrentItem_IZ;
    private static Delegate cb_setOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static IntPtr id_setOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_;
    private static Delegate cb_setPageMarginDrawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setPageMarginDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setPageMarginDrawable_I;
    private static IntPtr id_setPageMarginDrawable_I;
    private static Delegate cb_setPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_;
    private static IntPtr id_setPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_;
    private static Delegate cb_setPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_I;
    private static IntPtr id_setPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_I;
    private WeakReference weak_implementor_AddOnAdapterChangeListener;
    private WeakReference weak_implementor_AddOnPageChangeListener;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public PagerAdapter Adapter { get; public set; }
    public int CurrentItem { get; public set; }
    public bool IsFakeDragging { get; }
    public int OffscreenPageLimit { get; public set; }
    public int PageMargin { get; public set; }
    protected ViewPager(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ViewPager(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ViewPager(Context context, IAttributeSet attrs);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAdapterHandler();
    private static IntPtr n_GetAdapter(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAdapter_Landroid_support_v4_view_PagerAdapter_Handler();
    private static void n_SetAdapter_Landroid_support_v4_view_PagerAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_adapter);
    [RegisterAttribute("getAdapter", "()Landroid/support/v4/view/PagerAdapter;", "GetGetAdapterHandler")]
public virtual PagerAdapter get_Adapter();
    [RegisterAttribute("setAdapter", "(Landroid/support/v4/view/PagerAdapter;)V", "GetSetAdapter_Landroid_support_v4_view_PagerAdapter_Handler")]
public virtual void set_Adapter(PagerAdapter value);
    private static Delegate GetGetCurrentItemHandler();
    private static int n_GetCurrentItem(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCurrentItem_IHandler();
    private static void n_SetCurrentItem_I(IntPtr jnienv, IntPtr native__this, int item);
    [RegisterAttribute("getCurrentItem", "()I", "GetGetCurrentItemHandler")]
public virtual int get_CurrentItem();
    [RegisterAttribute("setCurrentItem", "(I)V", "GetSetCurrentItem_IHandler")]
public virtual void set_CurrentItem(int value);
    private static Delegate GetIsFakeDraggingHandler();
    private static bool n_IsFakeDragging(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isFakeDragging", "()Z", "GetIsFakeDraggingHandler")]
public virtual bool get_IsFakeDragging();
    private static Delegate GetGetOffscreenPageLimitHandler();
    private static int n_GetOffscreenPageLimit(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetOffscreenPageLimit_IHandler();
    private static void n_SetOffscreenPageLimit_I(IntPtr jnienv, IntPtr native__this, int limit);
    [RegisterAttribute("getOffscreenPageLimit", "()I", "GetGetOffscreenPageLimitHandler")]
public virtual int get_OffscreenPageLimit();
    [RegisterAttribute("setOffscreenPageLimit", "(I)V", "GetSetOffscreenPageLimit_IHandler")]
public virtual void set_OffscreenPageLimit(int value);
    private static Delegate GetGetPageMarginHandler();
    private static int n_GetPageMargin(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPageMargin_IHandler();
    private static void n_SetPageMargin_I(IntPtr jnienv, IntPtr native__this, int marginPixels);
    [RegisterAttribute("getPageMargin", "()I", "GetGetPageMarginHandler")]
public virtual int get_PageMargin();
    [RegisterAttribute("setPageMargin", "(I)V", "GetSetPageMargin_IHandler")]
public virtual void set_PageMargin(int value);
    private static Delegate GetAddFocusables_Ljava_util_ArrayList_IIHandler();
    private static void n_AddFocusables_Ljava_util_ArrayList_II(IntPtr jnienv, IntPtr native__this, IntPtr native_views, int direction, int focusableMode);
    [RegisterAttribute("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")]
public virtual void AddFocusables(IList`1<View> views, int direction, int focusableMode);
    private static Delegate GetAddOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_Handler();
    private static void n_AddOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnAdapterChangeListener", "(Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;)V", "GetAddOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_Handler")]
public virtual void AddOnAdapterChangeListener(IOnAdapterChangeListener listener);
    private static Delegate GetAddOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler();
    private static void n_AddOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnPageChangeListener", "(Landroid/support/v4/view/ViewPager$OnPageChangeListener;)V", "GetAddOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler")]
public virtual void AddOnPageChangeListener(IOnPageChangeListener listener);
    private static Delegate GetAddTouchables_Ljava_util_ArrayList_Handler();
    private static void n_AddTouchables_Ljava_util_ArrayList_(IntPtr jnienv, IntPtr native__this, IntPtr native_views);
    [RegisterAttribute("addTouchables", "(Ljava/util/ArrayList;)V", "GetAddTouchables_Ljava_util_ArrayList_Handler")]
public virtual void AddTouchables(IList`1<View> views);
    private static Delegate GetArrowScroll_IHandler();
    private static bool n_ArrowScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("arrowScroll", "(I)Z", "GetArrowScroll_IHandler")]
public virtual bool ArrowScroll(int direction);
    private static Delegate GetBeginFakeDragHandler();
    private static bool n_BeginFakeDrag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("beginFakeDrag", "()Z", "GetBeginFakeDragHandler")]
public virtual bool BeginFakeDrag();
    private static Delegate GetCanScroll_Landroid_view_View_ZIIIHandler();
    private static bool n_CanScroll_Landroid_view_View_ZIII(IntPtr jnienv, IntPtr native__this, IntPtr native_v, bool checkV, int dx, int x, int y);
    [RegisterAttribute("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")]
protected virtual bool CanScroll(View v, bool checkV, int dx, int x, int y);
    private static Delegate GetClearOnPageChangeListenersHandler();
    private static void n_ClearOnPageChangeListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearOnPageChangeListeners", "()V", "GetClearOnPageChangeListenersHandler")]
public virtual void ClearOnPageChangeListeners();
    private static Delegate GetEndFakeDragHandler();
    private static void n_EndFakeDrag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("endFakeDrag", "()V", "GetEndFakeDragHandler")]
public virtual void EndFakeDrag();
    private static Delegate GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_ExecuteKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native__event);
    [RegisterAttribute("executeKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool ExecuteKeyEvent(KeyEvent event);
    private static Delegate GetFakeDragBy_FHandler();
    private static void n_FakeDragBy_F(IntPtr jnienv, IntPtr native__this, float xOffset);
    [RegisterAttribute("fakeDragBy", "(F)V", "GetFakeDragBy_FHandler")]
public virtual void FakeDragBy(float xOffset);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOnPageScrolled_IFIHandler();
    private static void n_OnPageScrolled_IFI(IntPtr jnienv, IntPtr native__this, int position, float offset, int offsetPixels);
    [RegisterAttribute("onPageScrolled", "(IFI)V", "GetOnPageScrolled_IFIHandler")]
protected virtual void OnPageScrolled(int position, float offset, int offsetPixels);
    private static Delegate GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler();
    private static void n_OnRestoreInstanceState_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")]
public virtual void OnRestoreInstanceState(IParcelable state);
    private static Delegate GetOnSaveInstanceStateHandler();
    private static IntPtr n_OnSaveInstanceState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
public virtual IParcelable OnSaveInstanceState();
    private static Delegate GetRemoveOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_Handler();
    private static void n_RemoveOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnAdapterChangeListener", "(Landroid/support/v4/view/ViewPager$OnAdapterChangeListener;)V", "GetRemoveOnAdapterChangeListener_Landroid_support_v4_view_ViewPager_OnAdapterChangeListener_Handler")]
public virtual void RemoveOnAdapterChangeListener(IOnAdapterChangeListener listener);
    private static Delegate GetRemoveOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler();
    private static void n_RemoveOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnPageChangeListener", "(Landroid/support/v4/view/ViewPager$OnPageChangeListener;)V", "GetRemoveOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler")]
public virtual void RemoveOnPageChangeListener(IOnPageChangeListener listener);
    private static Delegate GetSetCurrentItem_IZHandler();
    private static void n_SetCurrentItem_IZ(IntPtr jnienv, IntPtr native__this, int item, bool smoothScroll);
    [RegisterAttribute("setCurrentItem", "(IZ)V", "GetSetCurrentItem_IZHandler")]
public virtual void SetCurrentItem(int item, bool smoothScroll);
    private static Delegate GetSetOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler();
    private static void n_SetOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOnPageChangeListener", "(Landroid/support/v4/view/ViewPager$OnPageChangeListener;)V", "GetSetOnPageChangeListener_Landroid_support_v4_view_ViewPager_OnPageChangeListener_Handler")]
public virtual void SetOnPageChangeListener(IOnPageChangeListener listener);
    private static Delegate GetSetPageMarginDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetPageMarginDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [RegisterAttribute("setPageMarginDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetPageMarginDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetPageMarginDrawable(Drawable d);
    private static Delegate GetSetPageMarginDrawable_IHandler();
    private static void n_SetPageMarginDrawable_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setPageMarginDrawable", "(I)V", "GetSetPageMarginDrawable_IHandler")]
public virtual void SetPageMarginDrawable(int resId);
    private static Delegate GetSetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_Handler();
    private static void n_SetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_(IntPtr jnienv, IntPtr native__this, bool reverseDrawingOrder, IntPtr native_transformer);
    [RegisterAttribute("setPageTransformer", "(ZLandroid/support/v4/view/ViewPager$PageTransformer;)V", "GetSetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_Handler")]
public virtual void SetPageTransformer(bool reverseDrawingOrder, IPageTransformer transformer);
    private static Delegate GetSetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_IHandler();
    private static void n_SetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_I(IntPtr jnienv, IntPtr native__this, bool reverseDrawingOrder, IntPtr native_transformer, int pageLayerType);
    [RegisterAttribute("setPageTransformer", "(ZLandroid/support/v4/view/ViewPager$PageTransformer;I)V", "GetSetPageTransformer_ZLandroid_support_v4_view_ViewPager_PageTransformer_IHandler")]
public virtual void SetPageTransformer(bool reverseDrawingOrder, IPageTransformer transformer, int pageLayerType);
    public void add_AdapterChange(EventHandler`1<AdapterChangeEventArgs> value);
    public void remove_AdapterChange(EventHandler`1<AdapterChangeEventArgs> value);
    private IOnAdapterChangeListenerImplementor __CreateIOnAdapterChangeListenerImplementor();
    public void add_PageScrollStateChanged(EventHandler`1<PageScrollStateChangedEventArgs> value);
    public void remove_PageScrollStateChanged(EventHandler`1<PageScrollStateChangedEventArgs> value);
    public void add_PageScrolled(EventHandler`1<PageScrolledEventArgs> value);
    public void remove_PageScrolled(EventHandler`1<PageScrolledEventArgs> value);
    public void add_PageSelected(EventHandler`1<PageSelectedEventArgs> value);
    public void remove_PageSelected(EventHandler`1<PageSelectedEventArgs> value);
    private IOnPageChangeListenerImplementor __CreateIOnPageChangeListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_AdapterChange>b__202_0(IOnAdapterChangeListener __v);
    [CompilerGeneratedAttribute]
private void <remove_PageScrollStateChanged>b__207_0(IOnPageChangeListener __v);
    [CompilerGeneratedAttribute]
private void <remove_PageScrolled>b__210_0(IOnPageChangeListener __v);
    [CompilerGeneratedAttribute]
private void <remove_PageSelected>b__213_0(IOnPageChangeListener __v);
}
[RegisterAttribute("android/support/v4/widget/AutoScrollHelper")]
public abstract class Android.Support.V4.Widget.AutoScrollHelper : Object {
    [RegisterAttribute("EDGE_TYPE_INSIDE")]
public static int EdgeTypeInside;
    [RegisterAttribute("EDGE_TYPE_INSIDE_EXTEND")]
public static int EdgeTypeInsideExtend;
    [RegisterAttribute("EDGE_TYPE_OUTSIDE")]
public static int EdgeTypeOutside;
    [RegisterAttribute("NO_MAX")]
public static float NoMax;
    [RegisterAttribute("NO_MIN")]
public static float NoMin;
    [RegisterAttribute("RELATIVE_UNSPECIFIED")]
public static float RelativeUnspecified;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_view_View_;
    private static Delegate cb_isEnabled;
    private static IntPtr id_isEnabled;
    private static Delegate cb_isExclusive;
    private static IntPtr id_isExclusive;
    private static Delegate cb_canTargetScrollHorizontally_I;
    private static Delegate cb_canTargetScrollVertically_I;
    private static Delegate cb_onTouch_Landroid_view_View_Landroid_view_MotionEvent_;
    private static IntPtr id_onTouch_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_scrollTargetBy_II;
    private static Delegate cb_setActivationDelay_I;
    private static IntPtr id_setActivationDelay_I;
    private static Delegate cb_setEdgeType_I;
    private static IntPtr id_setEdgeType_I;
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_setEnabled_Z;
    private static Delegate cb_setExclusive_Z;
    private static IntPtr id_setExclusive_Z;
    private static Delegate cb_setMaximumEdges_FF;
    private static IntPtr id_setMaximumEdges_FF;
    private static Delegate cb_setMaximumVelocity_FF;
    private static IntPtr id_setMaximumVelocity_FF;
    private static Delegate cb_setMinimumVelocity_FF;
    private static IntPtr id_setMinimumVelocity_FF;
    private static Delegate cb_setRampDownDuration_I;
    private static IntPtr id_setRampDownDuration_I;
    private static Delegate cb_setRampUpDuration_I;
    private static IntPtr id_setRampUpDuration_I;
    private static Delegate cb_setRelativeEdges_FF;
    private static IntPtr id_setRelativeEdges_FF;
    private static Delegate cb_setRelativeVelocity_FF;
    private static IntPtr id_setRelativeVelocity_FF;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsEnabled { get; }
    public bool IsExclusive { get; }
    protected AutoScrollHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public AutoScrollHelper(View target);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_IsEnabled();
    private static Delegate GetIsExclusiveHandler();
    private static bool n_IsExclusive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isExclusive", "()Z", "GetIsExclusiveHandler")]
public virtual bool get_IsExclusive();
    private static Delegate GetCanTargetScrollHorizontally_IHandler();
    private static bool n_CanTargetScrollHorizontally_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public abstract virtual bool CanTargetScrollHorizontally(int direction);
    private static Delegate GetCanTargetScrollVertically_IHandler();
    private static bool n_CanTargetScrollVertically_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public abstract virtual bool CanTargetScrollVertically(int direction);
    private static Delegate GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouch_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native__event);
    [RegisterAttribute("onTouch", "(Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouch(View v, MotionEvent event);
    private static Delegate GetScrollTargetBy_IIHandler();
    private static void n_ScrollTargetBy_II(IntPtr jnienv, IntPtr native__this, int deltaX, int deltaY);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public abstract virtual void ScrollTargetBy(int deltaX, int deltaY);
    private static Delegate GetSetActivationDelay_IHandler();
    private static IntPtr n_SetActivationDelay_I(IntPtr jnienv, IntPtr native__this, int delayMillis);
    [RegisterAttribute("setActivationDelay", "(I)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetActivationDelay_IHandler")]
public virtual AutoScrollHelper SetActivationDelay(int delayMillis);
    private static Delegate GetSetEdgeType_IHandler();
    private static IntPtr n_SetEdgeType_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("setEdgeType", "(I)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetEdgeType_IHandler")]
public virtual AutoScrollHelper SetEdgeType(int type);
    private static Delegate GetSetEnabled_ZHandler();
    private static IntPtr n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setEnabled", "(Z)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetEnabled_ZHandler")]
public virtual AutoScrollHelper SetEnabled(bool enabled);
    private static Delegate GetSetExclusive_ZHandler();
    private static IntPtr n_SetExclusive_Z(IntPtr jnienv, IntPtr native__this, bool exclusive);
    [RegisterAttribute("setExclusive", "(Z)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetExclusive_ZHandler")]
public virtual AutoScrollHelper SetExclusive(bool exclusive);
    private static Delegate GetSetMaximumEdges_FFHandler();
    private static IntPtr n_SetMaximumEdges_FF(IntPtr jnienv, IntPtr native__this, float horizontalMax, float verticalMax);
    [RegisterAttribute("setMaximumEdges", "(FF)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetMaximumEdges_FFHandler")]
public virtual AutoScrollHelper SetMaximumEdges(float horizontalMax, float verticalMax);
    private static Delegate GetSetMaximumVelocity_FFHandler();
    private static IntPtr n_SetMaximumVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontalMax, float verticalMax);
    [RegisterAttribute("setMaximumVelocity", "(FF)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetMaximumVelocity_FFHandler")]
public virtual AutoScrollHelper SetMaximumVelocity(float horizontalMax, float verticalMax);
    private static Delegate GetSetMinimumVelocity_FFHandler();
    private static IntPtr n_SetMinimumVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontalMin, float verticalMin);
    [RegisterAttribute("setMinimumVelocity", "(FF)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetMinimumVelocity_FFHandler")]
public virtual AutoScrollHelper SetMinimumVelocity(float horizontalMin, float verticalMin);
    private static Delegate GetSetRampDownDuration_IHandler();
    private static IntPtr n_SetRampDownDuration_I(IntPtr jnienv, IntPtr native__this, int durationMillis);
    [RegisterAttribute("setRampDownDuration", "(I)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetRampDownDuration_IHandler")]
public virtual AutoScrollHelper SetRampDownDuration(int durationMillis);
    private static Delegate GetSetRampUpDuration_IHandler();
    private static IntPtr n_SetRampUpDuration_I(IntPtr jnienv, IntPtr native__this, int durationMillis);
    [RegisterAttribute("setRampUpDuration", "(I)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetRampUpDuration_IHandler")]
public virtual AutoScrollHelper SetRampUpDuration(int durationMillis);
    private static Delegate GetSetRelativeEdges_FFHandler();
    private static IntPtr n_SetRelativeEdges_FF(IntPtr jnienv, IntPtr native__this, float horizontal, float vertical);
    [RegisterAttribute("setRelativeEdges", "(FF)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetRelativeEdges_FFHandler")]
public virtual AutoScrollHelper SetRelativeEdges(float horizontal, float vertical);
    private static Delegate GetSetRelativeVelocity_FFHandler();
    private static IntPtr n_SetRelativeVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontal, float vertical);
    [RegisterAttribute("setRelativeVelocity", "(FF)Landroid/support/v4/widget/AutoScrollHelper;", "GetSetRelativeVelocity_FFHandler")]
public virtual AutoScrollHelper SetRelativeVelocity(float horizontal, float vertical);
}
[RegisterAttribute("android/support/v4/widget/AutoScrollHelper")]
internal class Android.Support.V4.Widget.AutoScrollHelperInvoker : AutoScrollHelper {
    private static IntPtr id_canTargetScrollHorizontally_I;
    private static IntPtr id_canTargetScrollVertically_I;
    private static IntPtr id_scrollTargetBy_II;
    protected Type ThresholdType { get; }
    public AutoScrollHelperInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public virtual bool CanTargetScrollHorizontally(int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public virtual bool CanTargetScrollVertically(int direction);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public virtual void ScrollTargetBy(int deltaX, int deltaY);
}
[RegisterAttribute("android/support/v4/widget/ContentLoadingProgressBar")]
public class Android.Support.V4.Widget.ContentLoadingProgressBar : ProgressBar {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static Delegate cb_hide;
    private static IntPtr id_hide;
    private static Delegate cb_onAttachedToWindow;
    private static IntPtr id_onAttachedToWindow;
    private static Delegate cb_onDetachedFromWindow;
    private static IntPtr id_onDetachedFromWindow;
    private static Delegate cb_show;
    private static IntPtr id_show;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ContentLoadingProgressBar(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ContentLoadingProgressBar(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ContentLoadingProgressBar(Context context, IAttributeSet attrs);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHideHandler();
    private static void n_Hide(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hide", "()V", "GetHideHandler")]
public virtual void Hide();
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
}
[RegisterAttribute("android/support/v4/widget/CursorAdapter")]
public abstract class Android.Support.V4.Widget.CursorAdapter : BaseAdapter {
    [RegisterAttribute("FLAG_AUTO_REQUERY")]
[ObsoleteAttribute("deprecated")]
public static int FlagAutoRequery;
    [RegisterAttribute("FLAG_REGISTER_CONTENT_OBSERVER")]
public static int FlagRegisterContentObserver;
    private static IntPtr mAutoRequery_jfieldId;
    private static IntPtr mChangeObserver_jfieldId;
    private static IntPtr mContext_jfieldId;
    private static IntPtr mCursor_jfieldId;
    private static IntPtr mCursorFilter_jfieldId;
    private static IntPtr mDataSetObserver_jfieldId;
    private static IntPtr mDataValid_jfieldId;
    private static IntPtr mFilterQueryProvider_jfieldId;
    private static IntPtr mRowIDColumn_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_database_Cursor_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_database_Cursor_Z;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_database_Cursor_I;
    private static Delegate cb_getCount;
    private static IntPtr id_getCount;
    private static Delegate cb_getCursor;
    private static IntPtr id_getCursor;
    private static Delegate cb_getFilter;
    private static IntPtr id_getFilter;
    private static Delegate cb_getFilterQueryProvider;
    private static Delegate cb_setFilterQueryProvider_Landroid_widget_FilterQueryProvider_;
    private static IntPtr id_getFilterQueryProvider;
    private static IntPtr id_setFilterQueryProvider_Landroid_widget_FilterQueryProvider_;
    private static Delegate cb_bindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_;
    private static Delegate cb_changeCursor_Landroid_database_Cursor_;
    private static IntPtr id_changeCursor_Landroid_database_Cursor_;
    private static Delegate cb_convertToString_Landroid_database_Cursor_;
    private static IntPtr id_convertToString_Landroid_database_Cursor_;
    private static Delegate cb_getItem_I;
    private static IntPtr id_getItem_I;
    private static Delegate cb_getItemId_I;
    private static IntPtr id_getItemId_I;
    private static Delegate cb_getView_ILandroid_view_View_Landroid_view_ViewGroup_;
    private static IntPtr id_getView_ILandroid_view_View_Landroid_view_ViewGroup_;
    private static Delegate cb_init_Landroid_content_Context_Landroid_database_Cursor_Z;
    private static IntPtr id_init_Landroid_content_Context_Landroid_database_Cursor_Z;
    private static Delegate cb_newDropDownView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    private static IntPtr id_newDropDownView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    private static Delegate cb_newView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    private static Delegate cb_onContentChanged;
    private static IntPtr id_onContentChanged;
    private static Delegate cb_runQueryOnBackgroundThread_Ljava_lang_CharSequence_;
    private static IntPtr id_runQueryOnBackgroundThread_Ljava_lang_CharSequence_;
    private static Delegate cb_swapCursor_Landroid_database_Cursor_;
    private static IntPtr id_swapCursor_Landroid_database_Cursor_;
    [RegisterAttribute("mAutoRequery")]
protected bool MAutoRequery { get; protected set; }
    [RegisterAttribute("mChangeObserver")]
protected ChangeObserver MChangeObserver { get; protected set; }
    [RegisterAttribute("mContext")]
protected Context MContext { get; protected set; }
    [RegisterAttribute("mCursor")]
protected ICursor MCursor { get; protected set; }
    [RegisterAttribute("mCursorFilter")]
protected CursorFilter MCursorFilter { get; protected set; }
    [RegisterAttribute("mDataSetObserver")]
protected DataSetObserver MDataSetObserver { get; protected set; }
    [RegisterAttribute("mDataValid")]
protected bool MDataValid { get; protected set; }
    [RegisterAttribute("mFilterQueryProvider")]
protected IFilterQueryProvider MFilterQueryProvider { get; protected set; }
    [RegisterAttribute("mRowIDColumn")]
protected int MRowIDColumn { get; protected set; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Count { get; }
    public ICursor Cursor { get; }
    public Filter Filter { get; }
    public IFilterQueryProvider FilterQueryProvider { get; public set; }
    protected CursorAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/database/Cursor;)V", "")]
public CursorAdapter(Context context, ICursor c);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/database/Cursor;Z)V", "")]
public CursorAdapter(Context context, ICursor c, bool autoRequery);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/database/Cursor;I)V", "")]
public CursorAdapter(Context context, ICursor c, int flags);
    protected bool get_MAutoRequery();
    protected void set_MAutoRequery(bool value);
    protected ChangeObserver get_MChangeObserver();
    protected void set_MChangeObserver(ChangeObserver value);
    protected Context get_MContext();
    protected void set_MContext(Context value);
    protected ICursor get_MCursor();
    protected void set_MCursor(ICursor value);
    protected CursorFilter get_MCursorFilter();
    protected void set_MCursorFilter(CursorFilter value);
    protected DataSetObserver get_MDataSetObserver();
    protected void set_MDataSetObserver(DataSetObserver value);
    protected bool get_MDataValid();
    protected void set_MDataValid(bool value);
    protected IFilterQueryProvider get_MFilterQueryProvider();
    protected void set_MFilterQueryProvider(IFilterQueryProvider value);
    protected int get_MRowIDColumn();
    protected void set_MRowIDColumn(int value);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCountHandler();
    private static int n_GetCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCount", "()I", "GetGetCountHandler")]
public virtual int get_Count();
    private static Delegate GetGetCursorHandler();
    private static IntPtr n_GetCursor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCursor", "()Landroid/database/Cursor;", "GetGetCursorHandler")]
public virtual ICursor get_Cursor();
    private static Delegate GetGetFilterHandler();
    private static IntPtr n_GetFilter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFilter", "()Landroid/widget/Filter;", "GetGetFilterHandler")]
public virtual Filter get_Filter();
    private static Delegate GetGetFilterQueryProviderHandler();
    private static IntPtr n_GetFilterQueryProvider(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFilterQueryProvider_Landroid_widget_FilterQueryProvider_Handler();
    private static void n_SetFilterQueryProvider_Landroid_widget_FilterQueryProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_filterQueryProvider);
    [RegisterAttribute("getFilterQueryProvider", "()Landroid/widget/FilterQueryProvider;", "GetGetFilterQueryProviderHandler")]
public virtual IFilterQueryProvider get_FilterQueryProvider();
    [RegisterAttribute("setFilterQueryProvider", "(Landroid/widget/FilterQueryProvider;)V", "GetSetFilterQueryProvider_Landroid_widget_FilterQueryProvider_Handler")]
public virtual void set_FilterQueryProvider(IFilterQueryProvider value);
    private static Delegate GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler();
    private static void n_BindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_context, IntPtr native_cursor);
    [RegisterAttribute("bindView", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V", "GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler")]
public abstract virtual void BindView(View view, Context context, ICursor cursor);
    private static Delegate GetChangeCursor_Landroid_database_Cursor_Handler();
    private static void n_ChangeCursor_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_cursor);
    [RegisterAttribute("changeCursor", "(Landroid/database/Cursor;)V", "GetChangeCursor_Landroid_database_Cursor_Handler")]
public virtual void ChangeCursor(ICursor cursor);
    private static Delegate GetConvertToString_Landroid_database_Cursor_Handler();
    private static IntPtr n_ConvertToString_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_cursor);
    [RegisterAttribute("convertToString", "(Landroid/database/Cursor;)Ljava/lang/CharSequence;", "GetConvertToString_Landroid_database_Cursor_Handler")]
public virtual ICharSequence ConvertToStringFormatted(ICursor cursor);
    public string ConvertToString(ICursor cursor);
    private static Delegate GetGetItem_IHandler();
    private static IntPtr n_GetItem_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getItem", "(I)Ljava/lang/Object;", "GetGetItem_IHandler")]
public virtual Object GetItem(int position);
    private static Delegate GetGetItemId_IHandler();
    private static long n_GetItemId_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getItemId", "(I)J", "GetGetItemId_IHandler")]
public virtual long GetItemId(int position);
    private static Delegate GetGetView_ILandroid_view_View_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_GetView_ILandroid_view_View_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, int position, IntPtr native_convertView, IntPtr native_parent);
    [RegisterAttribute("getView", "(ILandroid/view/View;Landroid/view/ViewGroup;)Landroid/view/View;", "GetGetView_ILandroid_view_View_Landroid_view_ViewGroup_Handler")]
public virtual View GetView(int position, View convertView, ViewGroup parent);
    private static Delegate GetInit_Landroid_content_Context_Landroid_database_Cursor_ZHandler();
    private static void n_Init_Landroid_content_Context_Landroid_database_Cursor_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_c, bool autoRequery);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("init", "(Landroid/content/Context;Landroid/database/Cursor;Z)V", "GetInit_Landroid_content_Context_Landroid_database_Cursor_ZHandler")]
protected virtual void Init(Context context, ICursor c, bool autoRequery);
    private static Delegate GetNewDropDownView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_NewDropDownView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_cursor, IntPtr native_parent);
    [RegisterAttribute("newDropDownView", "(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;", "GetNewDropDownView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler")]
public virtual View NewDropDownView(Context context, ICursor cursor, ViewGroup parent);
    private static Delegate GetNewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_NewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_cursor, IntPtr native_parent);
    [RegisterAttribute("newView", "(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;", "GetNewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler")]
public abstract virtual View NewView(Context context, ICursor cursor, ViewGroup parent);
    private static Delegate GetOnContentChangedHandler();
    private static void n_OnContentChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onContentChanged", "()V", "GetOnContentChangedHandler")]
protected virtual void OnContentChanged();
    private static Delegate GetRunQueryOnBackgroundThread_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_RunQueryOnBackgroundThread_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_constraint);
    [RegisterAttribute("runQueryOnBackgroundThread", "(Ljava/lang/CharSequence;)Landroid/database/Cursor;", "GetRunQueryOnBackgroundThread_Ljava_lang_CharSequence_Handler")]
public virtual ICursor RunQueryOnBackgroundThread(ICharSequence constraint);
    public ICursor RunQueryOnBackgroundThread(string constraint);
    private static Delegate GetSwapCursor_Landroid_database_Cursor_Handler();
    private static IntPtr n_SwapCursor_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_newCursor);
    [RegisterAttribute("swapCursor", "(Landroid/database/Cursor;)Landroid/database/Cursor;", "GetSwapCursor_Landroid_database_Cursor_Handler")]
public virtual ICursor SwapCursor(ICursor newCursor);
}
[RegisterAttribute("android/support/v4/widget/CursorAdapter")]
internal class Android.Support.V4.Widget.CursorAdapterInvoker : CursorAdapter {
    private static IntPtr id_bindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_;
    private static IntPtr id_newView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    protected Type ThresholdType { get; }
    public CursorAdapterInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("bindView", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V", "GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler")]
public virtual void BindView(View view, Context context, ICursor cursor);
    [RegisterAttribute("newView", "(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;", "GetNewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler")]
public virtual View NewView(Context context, ICursor cursor, ViewGroup parent);
}
[RegisterAttribute("android/support/v4/widget/CursorFilter")]
public class Android.Support.V4.Widget.CursorFilter : Filter {
    internal static IntPtr java_class_handle;
    private static Delegate cb_performFiltering_Ljava_lang_CharSequence_;
    private static IntPtr id_performFiltering_Ljava_lang_CharSequence_;
    private static Delegate cb_publishResults_Ljava_lang_CharSequence_Landroid_widget_Filter_FilterResults_;
    private static IntPtr id_publishResults_Ljava_lang_CharSequence_Landroid_widget_Filter_FilterResults_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CursorFilter(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetPerformFiltering_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_PerformFiltering_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_constraint);
    [RegisterAttribute("performFiltering", "(Ljava/lang/CharSequence;)Landroid/widget/Filter$FilterResults;", "GetPerformFiltering_Ljava_lang_CharSequence_Handler")]
protected virtual FilterResults PerformFiltering(ICharSequence constraint);
    private static Delegate GetPublishResults_Ljava_lang_CharSequence_Landroid_widget_Filter_FilterResults_Handler();
    private static void n_PublishResults_Ljava_lang_CharSequence_Landroid_widget_Filter_FilterResults_(IntPtr jnienv, IntPtr native__this, IntPtr native_constraint, IntPtr native_results);
    [RegisterAttribute("publishResults", "(Ljava/lang/CharSequence;Landroid/widget/Filter$FilterResults;)V", "GetPublishResults_Ljava_lang_CharSequence_Landroid_widget_Filter_FilterResults_Handler")]
protected virtual void PublishResults(ICharSequence constraint, FilterResults results);
}
[ExtensionAttribute]
public static class Android.Support.V4.Widget.CursorFilterICursorFilterClientExtensions : object {
    [ExtensionAttribute]
public static string ConvertToString(ICursorFilterClient self, ICursor p0);
    [ExtensionAttribute]
public static ICursor RunQueryOnBackgroundThread(ICursorFilterClient self, string p0);
}
[RegisterAttribute("android/support/v4/widget/DrawerLayout")]
public class Android.Support.V4.Widget.DrawerLayout : ViewGroup {
    [RegisterAttribute("LOCK_MODE_LOCKED_CLOSED")]
public static int LockModeLockedClosed;
    [RegisterAttribute("LOCK_MODE_LOCKED_OPEN")]
public static int LockModeLockedOpen;
    [RegisterAttribute("LOCK_MODE_UNDEFINED")]
public static int LockModeUndefined;
    [RegisterAttribute("LOCK_MODE_UNLOCKED")]
public static int LockModeUnlocked;
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_IDLE")]
public static int StateIdle;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_I;
    private static Delegate cb_getDrawerElevation;
    private static Delegate cb_setDrawerElevation_F;
    private static IntPtr id_getDrawerElevation;
    private static IntPtr id_setDrawerElevation_F;
    private static Delegate cb_getStatusBarBackgroundDrawable;
    private static IntPtr id_getStatusBarBackgroundDrawable;
    private static Delegate cb_addDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static IntPtr id_addDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static Delegate cb_addFocusables_Ljava_util_ArrayList_II;
    private static IntPtr id_addFocusables_Ljava_util_ArrayList_II;
    private static Delegate cb_closeDrawer_Landroid_view_View_;
    private static IntPtr id_closeDrawer_Landroid_view_View_;
    private static Delegate cb_closeDrawer_Landroid_view_View_Z;
    private static IntPtr id_closeDrawer_Landroid_view_View_Z;
    private static Delegate cb_closeDrawer_I;
    private static IntPtr id_closeDrawer_I;
    private static Delegate cb_closeDrawer_IZ;
    private static IntPtr id_closeDrawer_IZ;
    private static Delegate cb_closeDrawers;
    private static IntPtr id_closeDrawers;
    private static Delegate cb_getDrawerLockMode_Landroid_view_View_;
    private static IntPtr id_getDrawerLockMode_Landroid_view_View_;
    private static Delegate cb_getDrawerLockMode_I;
    private static IntPtr id_getDrawerLockMode_I;
    private static Delegate cb_getDrawerTitle_I;
    private static IntPtr id_getDrawerTitle_I;
    private static Delegate cb_isDrawerOpen_Landroid_view_View_;
    private static IntPtr id_isDrawerOpen_Landroid_view_View_;
    private static Delegate cb_isDrawerOpen_I;
    private static IntPtr id_isDrawerOpen_I;
    private static Delegate cb_isDrawerVisible_Landroid_view_View_;
    private static IntPtr id_isDrawerVisible_Landroid_view_View_;
    private static Delegate cb_isDrawerVisible_I;
    private static IntPtr id_isDrawerVisible_I;
    private static Delegate cb_onDraw_Landroid_graphics_Canvas_;
    private static IntPtr id_onDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_onLayout_ZIIII;
    private static IntPtr id_onLayout_ZIIII;
    private static Delegate cb_openDrawer_Landroid_view_View_;
    private static IntPtr id_openDrawer_Landroid_view_View_;
    private static Delegate cb_openDrawer_Landroid_view_View_Z;
    private static IntPtr id_openDrawer_Landroid_view_View_Z;
    private static Delegate cb_openDrawer_I;
    private static IntPtr id_openDrawer_I;
    private static Delegate cb_openDrawer_IZ;
    private static IntPtr id_openDrawer_IZ;
    private static Delegate cb_removeDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static IntPtr id_removeDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static Delegate cb_setChildInsets_Ljava_lang_Object_Z;
    private static IntPtr id_setChildInsets_Ljava_lang_Object_Z;
    private static Delegate cb_setDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static IntPtr id_setDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_;
    private static Delegate cb_setDrawerLockMode_I;
    private static IntPtr id_setDrawerLockMode_I;
    private static Delegate cb_setDrawerLockMode_ILandroid_view_View_;
    private static IntPtr id_setDrawerLockMode_ILandroid_view_View_;
    private static Delegate cb_setDrawerLockMode_II;
    private static IntPtr id_setDrawerLockMode_II;
    private static Delegate cb_setDrawerShadow_Landroid_graphics_drawable_Drawable_I;
    private static IntPtr id_setDrawerShadow_Landroid_graphics_drawable_Drawable_I;
    private static Delegate cb_setDrawerShadow_II;
    private static IntPtr id_setDrawerShadow_II;
    private static Delegate cb_setDrawerTitle_ILjava_lang_CharSequence_;
    private static IntPtr id_setDrawerTitle_ILjava_lang_CharSequence_;
    private static Delegate cb_setScrimColor_I;
    private static IntPtr id_setScrimColor_I;
    private static Delegate cb_setStatusBarBackground_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setStatusBarBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setStatusBarBackground_I;
    private static IntPtr id_setStatusBarBackground_I;
    private static Delegate cb_setStatusBarBackgroundColor_I;
    private static IntPtr id_setStatusBarBackgroundColor_I;
    private WeakReference weak_implementor_AddDrawerListener;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float DrawerElevation { get; public set; }
    public Drawable StatusBarBackgroundDrawable { get; }
    protected DrawerLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public DrawerLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public DrawerLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public DrawerLayout(Context context, IAttributeSet attrs, int defStyle);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawerElevationHandler();
    private static float n_GetDrawerElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDrawerElevation_FHandler();
    private static void n_SetDrawerElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getDrawerElevation", "()F", "GetGetDrawerElevationHandler")]
public virtual float get_DrawerElevation();
    [RegisterAttribute("setDrawerElevation", "(F)V", "GetSetDrawerElevation_FHandler")]
public virtual void set_DrawerElevation(float value);
    private static Delegate GetGetStatusBarBackgroundDrawableHandler();
    private static IntPtr n_GetStatusBarBackgroundDrawable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStatusBarBackgroundDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetStatusBarBackgroundDrawableHandler")]
public virtual Drawable get_StatusBarBackgroundDrawable();
    private static Delegate GetAddDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler();
    private static void n_AddDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addDrawerListener", "(Landroid/support/v4/widget/DrawerLayout$DrawerListener;)V", "GetAddDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void AddDrawerListener(IDrawerListener listener);
    private static Delegate GetAddFocusables_Ljava_util_ArrayList_IIHandler();
    private static void n_AddFocusables_Ljava_util_ArrayList_II(IntPtr jnienv, IntPtr native__this, IntPtr native_views, int direction, int focusableMode);
    [RegisterAttribute("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")]
public virtual void AddFocusables(IList`1<View> views, int direction, int focusableMode);
    private static Delegate GetCloseDrawer_Landroid_view_View_Handler();
    private static void n_CloseDrawer_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("closeDrawer", "(Landroid/view/View;)V", "GetCloseDrawer_Landroid_view_View_Handler")]
public virtual void CloseDrawer(View drawerView);
    private static Delegate GetCloseDrawer_Landroid_view_View_ZHandler();
    private static void n_CloseDrawer_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView, bool animate);
    [RegisterAttribute("closeDrawer", "(Landroid/view/View;Z)V", "GetCloseDrawer_Landroid_view_View_ZHandler")]
public virtual void CloseDrawer(View drawerView, bool animate);
    private static Delegate GetCloseDrawer_IHandler();
    private static void n_CloseDrawer_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("closeDrawer", "(I)V", "GetCloseDrawer_IHandler")]
public virtual void CloseDrawer(int gravity);
    private static Delegate GetCloseDrawer_IZHandler();
    private static void n_CloseDrawer_IZ(IntPtr jnienv, IntPtr native__this, int gravity, bool animate);
    [RegisterAttribute("closeDrawer", "(IZ)V", "GetCloseDrawer_IZHandler")]
public virtual void CloseDrawer(int gravity, bool animate);
    private static Delegate GetCloseDrawersHandler();
    private static void n_CloseDrawers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closeDrawers", "()V", "GetCloseDrawersHandler")]
public virtual void CloseDrawers();
    private static Delegate GetGetDrawerLockMode_Landroid_view_View_Handler();
    private static int n_GetDrawerLockMode_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("getDrawerLockMode", "(Landroid/view/View;)I", "GetGetDrawerLockMode_Landroid_view_View_Handler")]
public virtual int GetDrawerLockMode(View drawerView);
    private static Delegate GetGetDrawerLockMode_IHandler();
    private static int n_GetDrawerLockMode_I(IntPtr jnienv, IntPtr native__this, int edgeGravity);
    [RegisterAttribute("getDrawerLockMode", "(I)I", "GetGetDrawerLockMode_IHandler")]
public virtual int GetDrawerLockMode(int edgeGravity);
    private static Delegate GetGetDrawerTitle_IHandler();
    private static IntPtr n_GetDrawerTitle_I(IntPtr jnienv, IntPtr native__this, int edgeGravity);
    [RegisterAttribute("getDrawerTitle", "(I)Ljava/lang/CharSequence;", "GetGetDrawerTitle_IHandler")]
public virtual ICharSequence GetDrawerTitleFormatted(int edgeGravity);
    public string GetDrawerTitle(int edgeGravity);
    private static Delegate GetIsDrawerOpen_Landroid_view_View_Handler();
    private static bool n_IsDrawerOpen_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawer);
    [RegisterAttribute("isDrawerOpen", "(Landroid/view/View;)Z", "GetIsDrawerOpen_Landroid_view_View_Handler")]
public virtual bool IsDrawerOpen(View drawer);
    private static Delegate GetIsDrawerOpen_IHandler();
    private static bool n_IsDrawerOpen_I(IntPtr jnienv, IntPtr native__this, int drawerGravity);
    [RegisterAttribute("isDrawerOpen", "(I)Z", "GetIsDrawerOpen_IHandler")]
public virtual bool IsDrawerOpen(int drawerGravity);
    private static Delegate GetIsDrawerVisible_Landroid_view_View_Handler();
    private static bool n_IsDrawerVisible_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawer);
    [RegisterAttribute("isDrawerVisible", "(Landroid/view/View;)Z", "GetIsDrawerVisible_Landroid_view_View_Handler")]
public virtual bool IsDrawerVisible(View drawer);
    private static Delegate GetIsDrawerVisible_IHandler();
    private static bool n_IsDrawerVisible_I(IntPtr jnienv, IntPtr native__this, int drawerGravity);
    [RegisterAttribute("isDrawerVisible", "(I)Z", "GetIsDrawerVisible_IHandler")]
public virtual bool IsDrawerVisible(int drawerGravity);
    private static Delegate GetOnDraw_Landroid_graphics_Canvas_Handler();
    private static void n_OnDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_c);
    [RegisterAttribute("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")]
public virtual void OnDraw(Canvas c);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOpenDrawer_Landroid_view_View_Handler();
    private static void n_OpenDrawer_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("openDrawer", "(Landroid/view/View;)V", "GetOpenDrawer_Landroid_view_View_Handler")]
public virtual void OpenDrawer(View drawerView);
    private static Delegate GetOpenDrawer_Landroid_view_View_ZHandler();
    private static void n_OpenDrawer_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView, bool animate);
    [RegisterAttribute("openDrawer", "(Landroid/view/View;Z)V", "GetOpenDrawer_Landroid_view_View_ZHandler")]
public virtual void OpenDrawer(View drawerView, bool animate);
    private static Delegate GetOpenDrawer_IHandler();
    private static void n_OpenDrawer_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("openDrawer", "(I)V", "GetOpenDrawer_IHandler")]
public virtual void OpenDrawer(int gravity);
    private static Delegate GetOpenDrawer_IZHandler();
    private static void n_OpenDrawer_IZ(IntPtr jnienv, IntPtr native__this, int gravity, bool animate);
    [RegisterAttribute("openDrawer", "(IZ)V", "GetOpenDrawer_IZHandler")]
public virtual void OpenDrawer(int gravity, bool animate);
    private static Delegate GetRemoveDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler();
    private static void n_RemoveDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeDrawerListener", "(Landroid/support/v4/widget/DrawerLayout$DrawerListener;)V", "GetRemoveDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void RemoveDrawerListener(IDrawerListener listener);
    private static Delegate GetSetChildInsets_Ljava_lang_Object_ZHandler();
    private static void n_SetChildInsets_Ljava_lang_Object_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_insets, bool draw);
    [RegisterAttribute("setChildInsets", "(Ljava/lang/Object;Z)V", "GetSetChildInsets_Ljava_lang_Object_ZHandler")]
public virtual void SetChildInsets(Object insets, bool draw);
    private static Delegate GetSetDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler();
    private static void n_SetDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setDrawerListener", "(Landroid/support/v4/widget/DrawerLayout$DrawerListener;)V", "GetSetDrawerListener_Landroid_support_v4_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void SetDrawerListener(IDrawerListener listener);
    private static Delegate GetSetDrawerLockMode_IHandler();
    private static void n_SetDrawerLockMode_I(IntPtr jnienv, IntPtr native__this, int lockMode);
    [RegisterAttribute("setDrawerLockMode", "(I)V", "GetSetDrawerLockMode_IHandler")]
public virtual void SetDrawerLockMode(int lockMode);
    private static Delegate GetSetDrawerLockMode_ILandroid_view_View_Handler();
    private static void n_SetDrawerLockMode_ILandroid_view_View_(IntPtr jnienv, IntPtr native__this, int lockMode, IntPtr native_drawerView);
    [RegisterAttribute("setDrawerLockMode", "(ILandroid/view/View;)V", "GetSetDrawerLockMode_ILandroid_view_View_Handler")]
public virtual void SetDrawerLockMode(int lockMode, View drawerView);
    private static Delegate GetSetDrawerLockMode_IIHandler();
    private static void n_SetDrawerLockMode_II(IntPtr jnienv, IntPtr native__this, int lockMode, int edgeGravity);
    [RegisterAttribute("setDrawerLockMode", "(II)V", "GetSetDrawerLockMode_IIHandler")]
public virtual void SetDrawerLockMode(int lockMode, int edgeGravity);
    private static Delegate GetSetDrawerShadow_Landroid_graphics_drawable_Drawable_IHandler();
    private static void n_SetDrawerShadow_Landroid_graphics_drawable_Drawable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_shadowDrawable, int gravity);
    [RegisterAttribute("setDrawerShadow", "(Landroid/graphics/drawable/Drawable;I)V", "GetSetDrawerShadow_Landroid_graphics_drawable_Drawable_IHandler")]
public virtual void SetDrawerShadow(Drawable shadowDrawable, int gravity);
    private static Delegate GetSetDrawerShadow_IIHandler();
    private static void n_SetDrawerShadow_II(IntPtr jnienv, IntPtr native__this, int resId, int gravity);
    [RegisterAttribute("setDrawerShadow", "(II)V", "GetSetDrawerShadow_IIHandler")]
public virtual void SetDrawerShadow(int resId, int gravity);
    private static Delegate GetSetDrawerTitle_ILjava_lang_CharSequence_Handler();
    private static void n_SetDrawerTitle_ILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int edgeGravity, IntPtr native_title);
    [RegisterAttribute("setDrawerTitle", "(ILjava/lang/CharSequence;)V", "GetSetDrawerTitle_ILjava_lang_CharSequence_Handler")]
public virtual void SetDrawerTitle(int edgeGravity, ICharSequence title);
    public void SetDrawerTitle(int edgeGravity, string title);
    private static Delegate GetSetScrimColor_IHandler();
    private static void n_SetScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setScrimColor", "(I)V", "GetSetScrimColor_IHandler")]
public virtual void SetScrimColor(int color);
    private static Delegate GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetStatusBarBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_bg);
    [RegisterAttribute("setStatusBarBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetStatusBarBackground(Drawable bg);
    private static Delegate GetSetStatusBarBackground_IHandler();
    private static void n_SetStatusBarBackground_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setStatusBarBackground", "(I)V", "GetSetStatusBarBackground_IHandler")]
public virtual void SetStatusBarBackground(int resId);
    private static Delegate GetSetStatusBarBackgroundColor_IHandler();
    private static void n_SetStatusBarBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setStatusBarBackgroundColor", "(I)V", "GetSetStatusBarBackgroundColor_IHandler")]
public virtual void SetStatusBarBackgroundColor(int color);
    public void add_DrawerClosed(EventHandler`1<DrawerClosedEventArgs> value);
    public void remove_DrawerClosed(EventHandler`1<DrawerClosedEventArgs> value);
    public void add_DrawerOpened(EventHandler`1<DrawerOpenedEventArgs> value);
    public void remove_DrawerOpened(EventHandler`1<DrawerOpenedEventArgs> value);
    public void add_DrawerSlide(EventHandler`1<DrawerSlideEventArgs> value);
    public void remove_DrawerSlide(EventHandler`1<DrawerSlideEventArgs> value);
    public void add_DrawerStateChanged(EventHandler`1<DrawerStateChangedEventArgs> value);
    public void remove_DrawerStateChanged(EventHandler`1<DrawerStateChangedEventArgs> value);
    private IDrawerListenerImplementor __CreateIDrawerListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_DrawerClosed>b__224_0(IDrawerListener __v);
    [CompilerGeneratedAttribute]
private void <remove_DrawerOpened>b__227_0(IDrawerListener __v);
    [CompilerGeneratedAttribute]
private void <remove_DrawerSlide>b__230_0(IDrawerListener __v);
    [CompilerGeneratedAttribute]
private void <remove_DrawerStateChanged>b__233_0(IDrawerListener __v);
}
[RegisterAttribute("android/support/v4/widget/ExploreByTouchHelper")]
public abstract class Android.Support.V4.Widget.ExploreByTouchHelper : AccessibilityDelegateCompat {
    [RegisterAttribute("HOST_ID")]
public static int HostId;
    [RegisterAttribute("INVALID_ID")]
public static int InvalidId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_view_View_;
    private static IntPtr id_getAccessibilityFocusedVirtualViewId;
    private static Delegate cb_getFocusedVirtualView;
    private static IntPtr id_getFocusedVirtualView;
    private static IntPtr id_getKeyboardFocusedVirtualViewId;
    private static IntPtr id_clearKeyboardFocusForVirtualView_I;
    private static IntPtr id_dispatchHoverEvent_Landroid_view_MotionEvent_;
    private static IntPtr id_dispatchKeyEvent_Landroid_view_KeyEvent_;
    private static Delegate cb_getVirtualViewAt_FF;
    private static Delegate cb_getVisibleVirtualViews_Ljava_util_List_;
    private static IntPtr id_invalidateRoot;
    private static IntPtr id_invalidateVirtualView_I;
    private static IntPtr id_invalidateVirtualView_II;
    private static IntPtr id_onFocusChanged_ZILandroid_graphics_Rect_;
    private static Delegate cb_onPerformActionForVirtualView_IILandroid_os_Bundle_;
    private static Delegate cb_onPopulateEventForHost_Landroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onPopulateEventForHost_Landroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_onPopulateEventForVirtualView_ILandroid_view_accessibility_AccessibilityEvent_;
    private static IntPtr id_onPopulateEventForVirtualView_ILandroid_view_accessibility_AccessibilityEvent_;
    private static Delegate cb_onPopulateNodeForHost_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static IntPtr id_onPopulateNodeForHost_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static Delegate cb_onPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    private static Delegate cb_onVirtualViewKeyboardFocusChanged_IZ;
    private static IntPtr id_onVirtualViewKeyboardFocusChanged_IZ;
    private static IntPtr id_requestKeyboardFocusForVirtualView_I;
    private static IntPtr id_sendEventForVirtualView_II;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int AccessibilityFocusedVirtualViewId { get; }
    [ObsoleteAttribute("deprecated")]
public int FocusedVirtualView { get; }
    public int KeyboardFocusedVirtualViewId { get; }
    protected ExploreByTouchHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public ExploreByTouchHelper(View host);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAccessibilityFocusedVirtualViewId", "()I", "GetGetAccessibilityFocusedVirtualViewIdHandler")]
public int get_AccessibilityFocusedVirtualViewId();
    private static Delegate GetGetFocusedVirtualViewHandler();
    private static int n_GetFocusedVirtualView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFocusedVirtualView", "()I", "GetGetFocusedVirtualViewHandler")]
public virtual int get_FocusedVirtualView();
    [RegisterAttribute("getKeyboardFocusedVirtualViewId", "()I", "GetGetKeyboardFocusedVirtualViewIdHandler")]
public int get_KeyboardFocusedVirtualViewId();
    [RegisterAttribute("clearKeyboardFocusForVirtualView", "(I)Z", "")]
public bool ClearKeyboardFocusForVirtualView(int virtualViewId);
    [RegisterAttribute("dispatchHoverEvent", "(Landroid/view/MotionEvent;)Z", "")]
public bool DispatchHoverEvent(MotionEvent event);
    [RegisterAttribute("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "")]
public bool DispatchKeyEvent(KeyEvent event);
    private static Delegate GetGetVirtualViewAt_FFHandler();
    private static int n_GetVirtualViewAt_FF(IntPtr jnienv, IntPtr native__this, float p0, float p1);
    [RegisterAttribute("getVirtualViewAt", "(FF)I", "GetGetVirtualViewAt_FFHandler")]
protected abstract virtual int GetVirtualViewAt(float p0, float p1);
    private static Delegate GetGetVisibleVirtualViews_Ljava_util_List_Handler();
    private static void n_GetVisibleVirtualViews_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getVisibleVirtualViews", "(Ljava/util/List;)V", "GetGetVisibleVirtualViews_Ljava_util_List_Handler")]
protected abstract virtual void GetVisibleVirtualViews(IList`1<Integer> p0);
    [RegisterAttribute("invalidateRoot", "()V", "")]
public void InvalidateRoot();
    [RegisterAttribute("invalidateVirtualView", "(I)V", "")]
public void InvalidateVirtualView(int virtualViewId);
    [RegisterAttribute("invalidateVirtualView", "(II)V", "")]
public void InvalidateVirtualView(int virtualViewId, int changeTypes);
    [RegisterAttribute("onFocusChanged", "(ZILandroid/graphics/Rect;)V", "")]
public void OnFocusChanged(bool gainFocus, int direction, Rect previouslyFocusedRect);
    private static Delegate GetOnPerformActionForVirtualView_IILandroid_os_Bundle_Handler();
    private static bool n_OnPerformActionForVirtualView_IILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    [RegisterAttribute("onPerformActionForVirtualView", "(IILandroid/os/Bundle;)Z", "GetOnPerformActionForVirtualView_IILandroid_os_Bundle_Handler")]
protected abstract virtual bool OnPerformActionForVirtualView(int p0, int p1, Bundle p2);
    private static Delegate GetOnPopulateEventForHost_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnPopulateEventForHost_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [RegisterAttribute("onPopulateEventForHost", "(Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateEventForHost_Landroid_view_accessibility_AccessibilityEvent_Handler")]
protected virtual void OnPopulateEventForHost(AccessibilityEvent e);
    private static Delegate GetOnPopulateEventForVirtualView_ILandroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnPopulateEventForVirtualView_ILandroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, int virtualViewId, IntPtr native_e);
    [RegisterAttribute("onPopulateEventForVirtualView", "(ILandroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateEventForVirtualView_ILandroid_view_accessibility_AccessibilityEvent_Handler")]
protected virtual void OnPopulateEventForVirtualView(int virtualViewId, AccessibilityEvent e);
    private static Delegate GetOnPopulateNodeForHost_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler();
    private static void n_OnPopulateNodeForHost_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_node);
    [RegisterAttribute("onPopulateNodeForHost", "(Landroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnPopulateNodeForHost_Landroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler")]
protected virtual void OnPopulateNodeForHost(AccessibilityNodeInfoCompat node);
    private static Delegate GetOnPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler();
    private static void n_OnPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [RegisterAttribute("onPopulateNodeForVirtualView", "(ILandroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler")]
protected abstract virtual void OnPopulateNodeForVirtualView(int p0, AccessibilityNodeInfoCompat p1);
    private static Delegate GetOnVirtualViewKeyboardFocusChanged_IZHandler();
    private static void n_OnVirtualViewKeyboardFocusChanged_IZ(IntPtr jnienv, IntPtr native__this, int virtualViewId, bool hasFocus);
    [RegisterAttribute("onVirtualViewKeyboardFocusChanged", "(IZ)V", "GetOnVirtualViewKeyboardFocusChanged_IZHandler")]
protected virtual void OnVirtualViewKeyboardFocusChanged(int virtualViewId, bool hasFocus);
    [RegisterAttribute("requestKeyboardFocusForVirtualView", "(I)Z", "")]
public bool RequestKeyboardFocusForVirtualView(int virtualViewId);
    [RegisterAttribute("sendEventForVirtualView", "(II)Z", "")]
public bool SendEventForVirtualView(int virtualViewId, int eventType);
}
[RegisterAttribute("android/support/v4/widget/ExploreByTouchHelper")]
internal class Android.Support.V4.Widget.ExploreByTouchHelperInvoker : ExploreByTouchHelper {
    private static IntPtr id_getVirtualViewAt_FF;
    private static IntPtr id_getVisibleVirtualViews_Ljava_util_List_;
    private static IntPtr id_onPerformActionForVirtualView_IILandroid_os_Bundle_;
    private static IntPtr id_onPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_;
    protected Type ThresholdType { get; }
    public ExploreByTouchHelperInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getVirtualViewAt", "(FF)I", "GetGetVirtualViewAt_FFHandler")]
protected virtual int GetVirtualViewAt(float p0, float p1);
    [RegisterAttribute("getVisibleVirtualViews", "(Ljava/util/List;)V", "GetGetVisibleVirtualViews_Ljava_util_List_Handler")]
protected virtual void GetVisibleVirtualViews(IList`1<Integer> p0);
    [RegisterAttribute("onPerformActionForVirtualView", "(IILandroid/os/Bundle;)Z", "GetOnPerformActionForVirtualView_IILandroid_os_Bundle_Handler")]
protected virtual bool OnPerformActionForVirtualView(int p0, int p1, Bundle p2);
    [RegisterAttribute("onPopulateNodeForVirtualView", "(ILandroid/support/v4/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnPopulateNodeForVirtualView_ILandroid_support_v4_view_accessibility_AccessibilityNodeInfoCompat_Handler")]
protected virtual void OnPopulateNodeForVirtualView(int p0, AccessibilityNodeInfoCompat p1);
}
[RegisterAttribute("android/support/v4/widget/DrawerLayoutImpl", "", "Android.Support.V4.Widget.IDrawerLayoutImplInvoker")]
public interface Android.Support.V4.Widget.IDrawerLayoutImpl {
    [RegisterAttribute("setChildInsets", "(Ljava/lang/Object;Z)V", "GetSetChildInsets_Ljava_lang_Object_ZHandler:Android.Support.V4.Widget.IDrawerLayoutImplInvoker, Xamarin.Android.Support.Core.UI")]
public abstract virtual void SetChildInsets(Object p0, bool p1);
}
[RegisterAttribute("android/support/v4/widget/DrawerLayoutImpl")]
internal class Android.Support.V4.Widget.IDrawerLayoutImplInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_setChildInsets_Ljava_lang_Object_Z;
    private IntPtr id_setChildInsets_Ljava_lang_Object_Z;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IDrawerLayoutImplInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDrawerLayoutImplInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IDrawerLayoutImpl GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSetChildInsets_Ljava_lang_Object_ZHandler();
    private static void n_SetChildInsets_Ljava_lang_Object_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, bool p1);
    public sealed virtual void SetChildInsets(Object p0, bool p1);
}
[RegisterAttribute("android/support/v4/widget/ListViewAutoScrollHelper")]
public class Android.Support.V4.Widget.ListViewAutoScrollHelper : AutoScrollHelper {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_widget_ListView_;
    private static Delegate cb_canTargetScrollHorizontally_I;
    private static IntPtr id_canTargetScrollHorizontally_I;
    private static Delegate cb_canTargetScrollVertically_I;
    private static IntPtr id_canTargetScrollVertically_I;
    private static Delegate cb_scrollTargetBy_II;
    private static IntPtr id_scrollTargetBy_II;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ListViewAutoScrollHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/widget/ListView;)V", "")]
public ListViewAutoScrollHelper(ListView target);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCanTargetScrollHorizontally_IHandler();
    private static bool n_CanTargetScrollHorizontally_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public virtual bool CanTargetScrollHorizontally(int direction);
    private static Delegate GetCanTargetScrollVertically_IHandler();
    private static bool n_CanTargetScrollVertically_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public virtual bool CanTargetScrollVertically(int direction);
    private static Delegate GetScrollTargetBy_IIHandler();
    private static void n_ScrollTargetBy_II(IntPtr jnienv, IntPtr native__this, int deltaX, int deltaY);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public virtual void ScrollTargetBy(int deltaX, int deltaY);
}
[RegisterAttribute("android/support/v4/widget/NestedScrollView")]
public class Android.Support.V4.Widget.NestedScrollView : FrameLayout {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_I;
    private static Delegate cb_isFillViewport;
    private static Delegate cb_setFillViewport_Z;
    private static IntPtr id_isFillViewport;
    private static IntPtr id_setFillViewport_Z;
    private static Delegate cb_getMaxScrollAmount;
    private static IntPtr id_getMaxScrollAmount;
    private static Delegate cb_isSmoothScrollingEnabled;
    private static Delegate cb_setSmoothScrollingEnabled_Z;
    private static IntPtr id_isSmoothScrollingEnabled;
    private static IntPtr id_setSmoothScrollingEnabled_Z;
    private static Delegate cb_arrowScroll_I;
    private static IntPtr id_arrowScroll_I;
    private static Delegate cb_computeHorizontalScrollExtent;
    private static IntPtr id_computeHorizontalScrollExtent;
    private static Delegate cb_computeHorizontalScrollOffset;
    private static IntPtr id_computeHorizontalScrollOffset;
    private static Delegate cb_computeHorizontalScrollRange;
    private static IntPtr id_computeHorizontalScrollRange;
    private static Delegate cb_computeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_;
    private static IntPtr id_computeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_;
    private static Delegate cb_computeVerticalScrollExtent;
    private static IntPtr id_computeVerticalScrollExtent;
    private static Delegate cb_computeVerticalScrollOffset;
    private static IntPtr id_computeVerticalScrollOffset;
    private static Delegate cb_computeVerticalScrollRange;
    private static IntPtr id_computeVerticalScrollRange;
    private static Delegate cb_executeKeyEvent_Landroid_view_KeyEvent_;
    private static IntPtr id_executeKeyEvent_Landroid_view_KeyEvent_;
    private static Delegate cb_fling_I;
    private static IntPtr id_fling_I;
    private static Delegate cb_fullScroll_I;
    private static IntPtr id_fullScroll_I;
    private static Delegate cb_onAttachedToWindow;
    private static IntPtr id_onAttachedToWindow;
    private static Delegate cb_pageScroll_I;
    private static IntPtr id_pageScroll_I;
    private static Delegate cb_setOnScrollChangeListener_Landroid_support_v4_widget_NestedScrollView_OnScrollChangeListener_;
    private static IntPtr id_setOnScrollChangeListener_Landroid_support_v4_widget_NestedScrollView_OnScrollChangeListener_;
    private static IntPtr id_smoothScrollBy_II;
    private static IntPtr id_smoothScrollTo_II;
    private WeakReference weak_implementor_SetOnScrollChangeListener;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool FillViewport { get; public set; }
    public int MaxScrollAmount { get; }
    public bool SmoothScrollingEnabled { get; public set; }
    protected NestedScrollView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NestedScrollView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NestedScrollView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NestedScrollView(Context context, IAttributeSet attrs, int defStyleAttr);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsFillViewportHandler();
    private static bool n_IsFillViewport(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFillViewport_ZHandler();
    private static void n_SetFillViewport_Z(IntPtr jnienv, IntPtr native__this, bool fillViewport);
    [RegisterAttribute("isFillViewport", "()Z", "GetIsFillViewportHandler")]
public virtual bool get_FillViewport();
    [RegisterAttribute("setFillViewport", "(Z)V", "GetSetFillViewport_ZHandler")]
public virtual void set_FillViewport(bool value);
    private static Delegate GetGetMaxScrollAmountHandler();
    private static int n_GetMaxScrollAmount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxScrollAmount", "()I", "GetGetMaxScrollAmountHandler")]
public virtual int get_MaxScrollAmount();
    private static Delegate GetIsSmoothScrollingEnabledHandler();
    private static bool n_IsSmoothScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSmoothScrollingEnabled_ZHandler();
    private static void n_SetSmoothScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool smoothScrollingEnabled);
    [RegisterAttribute("isSmoothScrollingEnabled", "()Z", "GetIsSmoothScrollingEnabledHandler")]
public virtual bool get_SmoothScrollingEnabled();
    [RegisterAttribute("setSmoothScrollingEnabled", "(Z)V", "GetSetSmoothScrollingEnabled_ZHandler")]
public virtual void set_SmoothScrollingEnabled(bool value);
    private static Delegate GetArrowScroll_IHandler();
    private static bool n_ArrowScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("arrowScroll", "(I)Z", "GetArrowScroll_IHandler")]
public virtual bool ArrowScroll(int direction);
    private static Delegate GetComputeHorizontalScrollExtentHandler();
    private static int n_ComputeHorizontalScrollExtent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler")]
public virtual int ComputeHorizontalScrollExtent();
    private static Delegate GetComputeHorizontalScrollOffsetHandler();
    private static int n_ComputeHorizontalScrollOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler")]
public virtual int ComputeHorizontalScrollOffset();
    private static Delegate GetComputeHorizontalScrollRangeHandler();
    private static int n_ComputeHorizontalScrollRange(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler")]
public virtual int ComputeHorizontalScrollRange();
    private static Delegate GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler();
    private static int n_ComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [RegisterAttribute("computeScrollDeltaToGetChildRectOnScreen", "(Landroid/graphics/Rect;)I", "GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler")]
protected virtual int ComputeScrollDeltaToGetChildRectOnScreen(Rect rect);
    private static Delegate GetComputeVerticalScrollExtentHandler();
    private static int n_ComputeVerticalScrollExtent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler")]
public virtual int ComputeVerticalScrollExtent();
    private static Delegate GetComputeVerticalScrollOffsetHandler();
    private static int n_ComputeVerticalScrollOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler")]
public virtual int ComputeVerticalScrollOffset();
    private static Delegate GetComputeVerticalScrollRangeHandler();
    private static int n_ComputeVerticalScrollRange(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler")]
public virtual int ComputeVerticalScrollRange();
    private static Delegate GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_ExecuteKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native__event);
    [RegisterAttribute("executeKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool ExecuteKeyEvent(KeyEvent event);
    private static Delegate GetFling_IHandler();
    private static void n_Fling_I(IntPtr jnienv, IntPtr native__this, int velocityY);
    [RegisterAttribute("fling", "(I)V", "GetFling_IHandler")]
public virtual void Fling(int velocityY);
    private static Delegate GetFullScroll_IHandler();
    private static bool n_FullScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("fullScroll", "(I)Z", "GetFullScroll_IHandler")]
public virtual bool FullScroll(int direction);
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetPageScroll_IHandler();
    private static bool n_PageScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("pageScroll", "(I)Z", "GetPageScroll_IHandler")]
public virtual bool PageScroll(int direction);
    private static Delegate GetSetOnScrollChangeListener_Landroid_support_v4_widget_NestedScrollView_OnScrollChangeListener_Handler();
    private static void n_SetOnScrollChangeListener_Landroid_support_v4_widget_NestedScrollView_OnScrollChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_l);
    [RegisterAttribute("setOnScrollChangeListener", "(Landroid/support/v4/widget/NestedScrollView$OnScrollChangeListener;)V", "GetSetOnScrollChangeListener_Landroid_support_v4_widget_NestedScrollView_OnScrollChangeListener_Handler")]
public virtual void SetOnScrollChangeListener(IOnScrollChangeListener l);
    [RegisterAttribute("smoothScrollBy", "(II)V", "")]
public void SmoothScrollBy(int dx, int dy);
    [RegisterAttribute("smoothScrollTo", "(II)V", "")]
public void SmoothScrollTo(int x, int y);
    public void add_ScrollChange(EventHandler`1<ScrollChangeEventArgs> value);
    public void remove_ScrollChange(EventHandler`1<ScrollChangeEventArgs> value);
    private IOnScrollChangeListenerImplementor __CreateIOnScrollChangeListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_ScrollChange>b__124_0(IOnScrollChangeListener __v);
}
[RegisterAttribute("android/support/v4/widget/ResourceCursorAdapter")]
public abstract class Android.Support.V4.Widget.ResourceCursorAdapter : CursorAdapter {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_ILandroid_database_Cursor_;
    private static IntPtr id_ctor_Landroid_content_Context_ILandroid_database_Cursor_Z;
    private static IntPtr id_ctor_Landroid_content_Context_ILandroid_database_Cursor_I;
    private static Delegate cb_newView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    private static IntPtr id_newView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_;
    private static Delegate cb_setDropDownViewResource_I;
    private static IntPtr id_setDropDownViewResource_I;
    private static Delegate cb_setViewResource_I;
    private static IntPtr id_setViewResource_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ResourceCursorAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/database/Cursor;)V", "")]
public ResourceCursorAdapter(Context context, int layout, ICursor c);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/database/Cursor;Z)V", "")]
public ResourceCursorAdapter(Context context, int layout, ICursor c, bool autoRequery);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/database/Cursor;I)V", "")]
public ResourceCursorAdapter(Context context, int layout, ICursor c, int flags);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetNewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_NewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_cursor, IntPtr native_parent);
    [RegisterAttribute("newView", "(Landroid/content/Context;Landroid/database/Cursor;Landroid/view/ViewGroup;)Landroid/view/View;", "GetNewView_Landroid_content_Context_Landroid_database_Cursor_Landroid_view_ViewGroup_Handler")]
public virtual View NewView(Context context, ICursor cursor, ViewGroup parent);
    private static Delegate GetSetDropDownViewResource_IHandler();
    private static void n_SetDropDownViewResource_I(IntPtr jnienv, IntPtr native__this, int dropDownLayout);
    [RegisterAttribute("setDropDownViewResource", "(I)V", "GetSetDropDownViewResource_IHandler")]
public virtual void SetDropDownViewResource(int dropDownLayout);
    private static Delegate GetSetViewResource_IHandler();
    private static void n_SetViewResource_I(IntPtr jnienv, IntPtr native__this, int layout);
    [RegisterAttribute("setViewResource", "(I)V", "GetSetViewResource_IHandler")]
public virtual void SetViewResource(int layout);
}
[RegisterAttribute("android/support/v4/widget/ResourceCursorAdapter")]
internal class Android.Support.V4.Widget.ResourceCursorAdapterInvoker : ResourceCursorAdapter {
    private static IntPtr id_bindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_;
    protected Type ThresholdType { get; }
    public ResourceCursorAdapterInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("bindView", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V", "GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler")]
public virtual void BindView(View view, Context context, ICursor cursor);
}
[RegisterAttribute("android/support/v4/widget/SimpleCursorAdapter")]
public class Android.Support.V4.Widget.SimpleCursorAdapter : ResourceCursorAdapter {
    private static IntPtr mFrom_jfieldId;
    private static IntPtr mTo_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_ILandroid_database_Cursor_arrayLjava_lang_String_arrayI;
    private static IntPtr id_ctor_Landroid_content_Context_ILandroid_database_Cursor_arrayLjava_lang_String_arrayII;
    private static Delegate cb_getCursorToStringConverter;
    private static Delegate cb_setCursorToStringConverter_Landroid_support_v4_widget_SimpleCursorAdapter_CursorToStringConverter_;
    private static IntPtr id_getCursorToStringConverter;
    private static IntPtr id_setCursorToStringConverter_Landroid_support_v4_widget_SimpleCursorAdapter_CursorToStringConverter_;
    private static Delegate cb_getStringConversionColumn;
    private static Delegate cb_setStringConversionColumn_I;
    private static IntPtr id_getStringConversionColumn;
    private static IntPtr id_setStringConversionColumn_I;
    private static Delegate cb_getViewBinder;
    private static Delegate cb_setViewBinder_Landroid_support_v4_widget_SimpleCursorAdapter_ViewBinder_;
    private static IntPtr id_getViewBinder;
    private static IntPtr id_setViewBinder_Landroid_support_v4_widget_SimpleCursorAdapter_ViewBinder_;
    private static Delegate cb_bindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_;
    private static IntPtr id_bindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_;
    private static Delegate cb_changeCursorAndColumns_Landroid_database_Cursor_arrayLjava_lang_String_arrayI;
    private static IntPtr id_changeCursorAndColumns_Landroid_database_Cursor_arrayLjava_lang_String_arrayI;
    private static Delegate cb_setViewImage_Landroid_widget_ImageView_Ljava_lang_String_;
    private static IntPtr id_setViewImage_Landroid_widget_ImageView_Ljava_lang_String_;
    private static Delegate cb_setViewText_Landroid_widget_TextView_Ljava_lang_String_;
    private static IntPtr id_setViewText_Landroid_widget_TextView_Ljava_lang_String_;
    [RegisterAttribute("mFrom")]
protected IList`1<int> MFrom { get; protected set; }
    [RegisterAttribute("mTo")]
protected IList`1<int> MTo { get; protected set; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ICursorToStringConverter CursorToStringConverter { get; public set; }
    public int StringConversionColumn { get; public set; }
    public IViewBinder ViewBinder { get; public set; }
    protected SimpleCursorAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/database/Cursor;[Ljava/lang/String;[I)V", "")]
public SimpleCursorAdapter(Context context, int layout, ICursor c, String[] from, Int32[] to);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/database/Cursor;[Ljava/lang/String;[II)V", "")]
public SimpleCursorAdapter(Context context, int layout, ICursor c, String[] from, Int32[] to, int flags);
    protected IList`1<int> get_MFrom();
    protected void set_MFrom(IList`1<int> value);
    protected IList`1<int> get_MTo();
    protected void set_MTo(IList`1<int> value);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCursorToStringConverterHandler();
    private static IntPtr n_GetCursorToStringConverter(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCursorToStringConverter_Landroid_support_v4_widget_SimpleCursorAdapter_CursorToStringConverter_Handler();
    private static void n_SetCursorToStringConverter_Landroid_support_v4_widget_SimpleCursorAdapter_CursorToStringConverter_(IntPtr jnienv, IntPtr native__this, IntPtr native_cursorToStringConverter);
    [RegisterAttribute("getCursorToStringConverter", "()Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;", "GetGetCursorToStringConverterHandler")]
public virtual ICursorToStringConverter get_CursorToStringConverter();
    [RegisterAttribute("setCursorToStringConverter", "(Landroid/support/v4/widget/SimpleCursorAdapter$CursorToStringConverter;)V", "GetSetCursorToStringConverter_Landroid_support_v4_widget_SimpleCursorAdapter_CursorToStringConverter_Handler")]
public virtual void set_CursorToStringConverter(ICursorToStringConverter value);
    private static Delegate GetGetStringConversionColumnHandler();
    private static int n_GetStringConversionColumn(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStringConversionColumn_IHandler();
    private static void n_SetStringConversionColumn_I(IntPtr jnienv, IntPtr native__this, int stringConversionColumn);
    [RegisterAttribute("getStringConversionColumn", "()I", "GetGetStringConversionColumnHandler")]
public virtual int get_StringConversionColumn();
    [RegisterAttribute("setStringConversionColumn", "(I)V", "GetSetStringConversionColumn_IHandler")]
public virtual void set_StringConversionColumn(int value);
    private static Delegate GetGetViewBinderHandler();
    private static IntPtr n_GetViewBinder(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetViewBinder_Landroid_support_v4_widget_SimpleCursorAdapter_ViewBinder_Handler();
    private static void n_SetViewBinder_Landroid_support_v4_widget_SimpleCursorAdapter_ViewBinder_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewBinder);
    [RegisterAttribute("getViewBinder", "()Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;", "GetGetViewBinderHandler")]
public virtual IViewBinder get_ViewBinder();
    [RegisterAttribute("setViewBinder", "(Landroid/support/v4/widget/SimpleCursorAdapter$ViewBinder;)V", "GetSetViewBinder_Landroid_support_v4_widget_SimpleCursorAdapter_ViewBinder_Handler")]
public virtual void set_ViewBinder(IViewBinder value);
    private static Delegate GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler();
    private static void n_BindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_context, IntPtr native_cursor);
    [RegisterAttribute("bindView", "(Landroid/view/View;Landroid/content/Context;Landroid/database/Cursor;)V", "GetBindView_Landroid_view_View_Landroid_content_Context_Landroid_database_Cursor_Handler")]
public virtual void BindView(View view, Context context, ICursor cursor);
    private static Delegate GetChangeCursorAndColumns_Landroid_database_Cursor_arrayLjava_lang_String_arrayIHandler();
    private static void n_ChangeCursorAndColumns_Landroid_database_Cursor_arrayLjava_lang_String_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_c, IntPtr native_from, IntPtr native_to);
    [RegisterAttribute("changeCursorAndColumns", "(Landroid/database/Cursor;[Ljava/lang/String;[I)V", "GetChangeCursorAndColumns_Landroid_database_Cursor_arrayLjava_lang_String_arrayIHandler")]
public virtual void ChangeCursorAndColumns(ICursor c, String[] from, Int32[] to);
    private static Delegate GetSetViewImage_Landroid_widget_ImageView_Ljava_lang_String_Handler();
    private static void n_SetViewImage_Landroid_widget_ImageView_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_value);
    [RegisterAttribute("setViewImage", "(Landroid/widget/ImageView;Ljava/lang/String;)V", "GetSetViewImage_Landroid_widget_ImageView_Ljava_lang_String_Handler")]
public virtual void SetViewImage(ImageView v, string value);
    private static Delegate GetSetViewText_Landroid_widget_TextView_Ljava_lang_String_Handler();
    private static void n_SetViewText_Landroid_widget_TextView_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_text);
    [RegisterAttribute("setViewText", "(Landroid/widget/TextView;Ljava/lang/String;)V", "GetSetViewText_Landroid_widget_TextView_Ljava_lang_String_Handler")]
public virtual void SetViewText(TextView v, string text);
}
[ExtensionAttribute]
public static class Android.Support.V4.Widget.SimpleCursorAdapterICursorToStringConverterExtensions : object {
    [ExtensionAttribute]
public static string ConvertToString(ICursorToStringConverter self, ICursor cursor);
}
[RegisterAttribute("android/support/v4/widget/SlidingPaneLayout")]
public class Android.Support.V4.Widget.SlidingPaneLayout : ViewGroup {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_I;
    private static Delegate cb_getCoveredFadeColor;
    private static Delegate cb_setCoveredFadeColor_I;
    private static IntPtr id_getCoveredFadeColor;
    private static IntPtr id_setCoveredFadeColor_I;
    private static Delegate cb_isOpen;
    private static IntPtr id_isOpen;
    private static Delegate cb_isSlideable;
    private static IntPtr id_isSlideable;
    private static Delegate cb_getParallaxDistance;
    private static Delegate cb_setParallaxDistance_I;
    private static IntPtr id_getParallaxDistance;
    private static IntPtr id_setParallaxDistance_I;
    private static Delegate cb_getSliderFadeColor;
    private static Delegate cb_setSliderFadeColor_I;
    private static IntPtr id_getSliderFadeColor;
    private static IntPtr id_setSliderFadeColor_I;
    private static Delegate cb_canScroll_Landroid_view_View_ZIII;
    private static IntPtr id_canScroll_Landroid_view_View_ZIII;
    private static Delegate cb_canSlide;
    private static IntPtr id_canSlide;
    private static Delegate cb_closePane;
    private static IntPtr id_closePane;
    private static Delegate cb_onLayout_ZIIII;
    private static IntPtr id_onLayout_ZIIII;
    private static Delegate cb_openPane;
    private static IntPtr id_openPane;
    private static Delegate cb_setPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_;
    private static IntPtr id_setPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_;
    private static Delegate cb_setShadowDrawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setShadowDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowDrawableLeft_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setShadowDrawableLeft_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowDrawableRight_Landroid_graphics_drawable_Drawable_;
    private static IntPtr id_setShadowDrawableRight_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowResource_I;
    private static IntPtr id_setShadowResource_I;
    private static Delegate cb_setShadowResourceLeft_I;
    private static IntPtr id_setShadowResourceLeft_I;
    private static Delegate cb_setShadowResourceRight_I;
    private static IntPtr id_setShadowResourceRight_I;
    private static Delegate cb_smoothSlideClosed;
    private static IntPtr id_smoothSlideClosed;
    private static Delegate cb_smoothSlideOpen;
    private static IntPtr id_smoothSlideOpen;
    private WeakReference weak_implementor_SetPanelSlideListener;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CoveredFadeColor { get; public set; }
    public bool IsOpen { get; }
    public bool IsSlideable { get; }
    public int ParallaxDistance { get; public set; }
    public int SliderFadeColor { get; public set; }
    protected SlidingPaneLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SlidingPaneLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs, int defStyle);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCoveredFadeColorHandler();
    private static int n_GetCoveredFadeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCoveredFadeColor_IHandler();
    private static void n_SetCoveredFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCoveredFadeColor", "()I", "GetGetCoveredFadeColorHandler")]
public virtual int get_CoveredFadeColor();
    [RegisterAttribute("setCoveredFadeColor", "(I)V", "GetSetCoveredFadeColor_IHandler")]
public virtual void set_CoveredFadeColor(int value);
    private static Delegate GetIsOpenHandler();
    private static bool n_IsOpen(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOpen", "()Z", "GetIsOpenHandler")]
public virtual bool get_IsOpen();
    private static Delegate GetIsSlideableHandler();
    private static bool n_IsSlideable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSlideable", "()Z", "GetIsSlideableHandler")]
public virtual bool get_IsSlideable();
    private static Delegate GetGetParallaxDistanceHandler();
    private static int n_GetParallaxDistance(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetParallaxDistance_IHandler();
    private static void n_SetParallaxDistance_I(IntPtr jnienv, IntPtr native__this, int parallaxBy);
    [RegisterAttribute("getParallaxDistance", "()I", "GetGetParallaxDistanceHandler")]
public virtual int get_ParallaxDistance();
    [RegisterAttribute("setParallaxDistance", "(I)V", "GetSetParallaxDistance_IHandler")]
public virtual void set_ParallaxDistance(int value);
    private static Delegate GetGetSliderFadeColorHandler();
    private static int n_GetSliderFadeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSliderFadeColor_IHandler();
    private static void n_SetSliderFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getSliderFadeColor", "()I", "GetGetSliderFadeColorHandler")]
public virtual int get_SliderFadeColor();
    [RegisterAttribute("setSliderFadeColor", "(I)V", "GetSetSliderFadeColor_IHandler")]
public virtual void set_SliderFadeColor(int value);
    private static Delegate GetCanScroll_Landroid_view_View_ZIIIHandler();
    private static bool n_CanScroll_Landroid_view_View_ZIII(IntPtr jnienv, IntPtr native__this, IntPtr native_v, bool checkV, int dx, int x, int y);
    [RegisterAttribute("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")]
protected virtual bool CanScroll(View v, bool checkV, int dx, int x, int y);
    private static Delegate GetCanSlideHandler();
    private static bool n_CanSlide(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("canSlide", "()Z", "GetCanSlideHandler")]
public virtual bool CanSlide();
    private static Delegate GetClosePaneHandler();
    private static bool n_ClosePane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closePane", "()Z", "GetClosePaneHandler")]
public virtual bool ClosePane();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOpenPaneHandler();
    private static bool n_OpenPane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("openPane", "()Z", "GetOpenPaneHandler")]
public virtual bool OpenPane();
    private static Delegate GetSetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_Handler();
    private static void n_SetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setPanelSlideListener", "(Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;)V", "GetSetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_Handler")]
public virtual void SetPanelSlideListener(IPanelSlideListener listener);
    private static Delegate GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawable(Drawable d);
    private static Delegate GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [RegisterAttribute("setShadowDrawableLeft", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableLeft(Drawable d);
    private static Delegate GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableRight_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [RegisterAttribute("setShadowDrawableRight", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableRight(Drawable d);
    private static Delegate GetSetShadowResource_IHandler();
    private static void n_SetShadowResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowResource", "(I)V", "GetSetShadowResource_IHandler")]
public virtual void SetShadowResource(int resId);
    private static Delegate GetSetShadowResourceLeft_IHandler();
    private static void n_SetShadowResourceLeft_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceLeft", "(I)V", "GetSetShadowResourceLeft_IHandler")]
public virtual void SetShadowResourceLeft(int resId);
    private static Delegate GetSetShadowResourceRight_IHandler();
    private static void n_SetShadowResourceRight_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceRight", "(I)V", "GetSetShadowResourceRight_IHandler")]
public virtual void SetShadowResourceRight(int resId);
    private static Delegate GetSmoothSlideClosedHandler();
    private static void n_SmoothSlideClosed(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideClosed", "()V", "GetSmoothSlideClosedHandler")]
public virtual void SmoothSlideClosed();
    private static Delegate GetSmoothSlideOpenHandler();
    private static void n_SmoothSlideOpen(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideOpen", "()V", "GetSmoothSlideOpenHandler")]
public virtual void SmoothSlideOpen();
    public void add_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void remove_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void add_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void remove_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void add_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    public void remove_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    private IPanelSlideListenerImplementor __CreateIPanelSlideListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_PanelClosed>b__146_0(IPanelSlideListener __v);
    [CompilerGeneratedAttribute]
private void <remove_PanelOpened>b__149_0(IPanelSlideListener __v);
    [CompilerGeneratedAttribute]
private void <remove_PanelSlide>b__152_0(IPanelSlideListener __v);
}
[RegisterAttribute("android/support/v4/widget/Space")]
public class Android.Support.V4.Widget.Space : View {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_I;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected Space(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public Space(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public Space(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public Space(Context context, IAttributeSet attrs, int defStyle);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/widget/SwipeRefreshLayout")]
public class Android.Support.V4.Widget.SwipeRefreshLayout : ViewGroup {
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_setEnabled_Z;
    [RegisterAttribute("DEFAULT")]
public static int Default;
    [RegisterAttribute("LARGE")]
public static int Large;
    private static IntPtr mFrom_jfieldId;
    private static IntPtr mOriginalOffsetTop_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static Delegate cb_getProgressCircleDiameter;
    private static IntPtr id_getProgressCircleDiameter;
    private static Delegate cb_getProgressViewEndOffset;
    private static IntPtr id_getProgressViewEndOffset;
    private static Delegate cb_getProgressViewStartOffset;
    private static IntPtr id_getProgressViewStartOffset;
    private static Delegate cb_isRefreshing;
    private static Delegate cb_setRefreshing_Z;
    private static IntPtr id_isRefreshing;
    private static IntPtr id_setRefreshing_Z;
    private static Delegate cb_canChildScrollUp;
    private static IntPtr id_canChildScrollUp;
    private static Delegate cb_onLayout_ZIIII;
    private static IntPtr id_onLayout_ZIIII;
    private static Delegate cb_onMeasure_II;
    private static IntPtr id_onMeasure_II;
    private static Delegate cb_setColorScheme_arrayI;
    private static IntPtr id_setColorScheme_arrayI;
    private static Delegate cb_setColorSchemeColors_arrayI;
    private static IntPtr id_setColorSchemeColors_arrayI;
    private static Delegate cb_setColorSchemeResources_arrayI;
    private static IntPtr id_setColorSchemeResources_arrayI;
    private static Delegate cb_setDistanceToTriggerSync_I;
    private static IntPtr id_setDistanceToTriggerSync_I;
    private static Delegate cb_setOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_;
    private static IntPtr id_setOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_;
    private static Delegate cb_setOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_;
    private static IntPtr id_setOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_;
    private static Delegate cb_setProgressBackgroundColor_I;
    private static IntPtr id_setProgressBackgroundColor_I;
    private static Delegate cb_setProgressBackgroundColorSchemeColor_I;
    private static IntPtr id_setProgressBackgroundColorSchemeColor_I;
    private static Delegate cb_setProgressBackgroundColorSchemeResource_I;
    private static IntPtr id_setProgressBackgroundColorSchemeResource_I;
    private static Delegate cb_setProgressViewEndTarget_ZI;
    private static IntPtr id_setProgressViewEndTarget_ZI;
    private static Delegate cb_setProgressViewOffset_ZII;
    private static IntPtr id_setProgressViewOffset_ZII;
    private static Delegate cb_setSize_I;
    private static IntPtr id_setSize_I;
    private WeakReference weak_implementor_SetOnRefreshListener;
    [RegisterAttribute("mFrom")]
protected int MFrom { get; protected set; }
    [RegisterAttribute("mOriginalOffsetTop")]
protected int MOriginalOffsetTop { get; protected set; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ProgressCircleDiameter { get; }
    public int ProgressViewEndOffset { get; }
    public int ProgressViewStartOffset { get; }
    public bool Refreshing { get; public set; }
    protected SwipeRefreshLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SwipeRefreshLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SwipeRefreshLayout(Context context, IAttributeSet attrs);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public void SetEnabled(bool enabled);
    protected int get_MFrom();
    protected void set_MFrom(int value);
    protected int get_MOriginalOffsetTop();
    protected void set_MOriginalOffsetTop(int value);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetProgressCircleDiameterHandler();
    private static int n_GetProgressCircleDiameter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressCircleDiameter", "()I", "GetGetProgressCircleDiameterHandler")]
public virtual int get_ProgressCircleDiameter();
    private static Delegate GetGetProgressViewEndOffsetHandler();
    private static int n_GetProgressViewEndOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressViewEndOffset", "()I", "GetGetProgressViewEndOffsetHandler")]
public virtual int get_ProgressViewEndOffset();
    private static Delegate GetGetProgressViewStartOffsetHandler();
    private static int n_GetProgressViewStartOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressViewStartOffset", "()I", "GetGetProgressViewStartOffsetHandler")]
public virtual int get_ProgressViewStartOffset();
    private static Delegate GetIsRefreshingHandler();
    private static bool n_IsRefreshing(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRefreshing_ZHandler();
    private static void n_SetRefreshing_Z(IntPtr jnienv, IntPtr native__this, bool refreshing);
    [RegisterAttribute("isRefreshing", "()Z", "GetIsRefreshingHandler")]
public virtual bool get_Refreshing();
    [RegisterAttribute("setRefreshing", "(Z)V", "GetSetRefreshing_ZHandler")]
public virtual void set_Refreshing(bool value);
    private static Delegate GetCanChildScrollUpHandler();
    private static bool n_CanChildScrollUp(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canChildScrollUp", "()Z", "GetCanChildScrollUpHandler")]
public virtual bool CanChildScrollUp();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private static Delegate GetOnMeasure_IIHandler();
    private static void n_OnMeasure_II(IntPtr jnienv, IntPtr native__this, int widthMeasureSpec, int heightMeasureSpec);
    [RegisterAttribute("onMeasure", "(II)V", "GetOnMeasure_IIHandler")]
public virtual void OnMeasure(int widthMeasureSpec, int heightMeasureSpec);
    private static Delegate GetSetColorScheme_arrayIHandler();
    private static void n_SetColorScheme_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setColorScheme", "([I)V", "GetSetColorScheme_arrayIHandler")]
public virtual void SetColorScheme(Int32[] colors);
    private static Delegate GetSetColorSchemeColors_arrayIHandler();
    private static void n_SetColorSchemeColors_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setColorSchemeColors", "([I)V", "GetSetColorSchemeColors_arrayIHandler")]
public virtual void SetColorSchemeColors(Int32[] colors);
    private static Delegate GetSetColorSchemeResources_arrayIHandler();
    private static void n_SetColorSchemeResources_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colorResIds);
    [RegisterAttribute("setColorSchemeResources", "([I)V", "GetSetColorSchemeResources_arrayIHandler")]
public virtual void SetColorSchemeResources(Int32[] colorResIds);
    private static Delegate GetSetDistanceToTriggerSync_IHandler();
    private static void n_SetDistanceToTriggerSync_I(IntPtr jnienv, IntPtr native__this, int distance);
    [RegisterAttribute("setDistanceToTriggerSync", "(I)V", "GetSetDistanceToTriggerSync_IHandler")]
public virtual void SetDistanceToTriggerSync(int distance);
    private static Delegate GetSetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_Handler();
    private static void n_SetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("setOnChildScrollUpCallback", "(Landroid/support/v4/widget/SwipeRefreshLayout$OnChildScrollUpCallback;)V", "GetSetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_Handler")]
public virtual void SetOnChildScrollUpCallback(IOnChildScrollUpCallback callback);
    private static Delegate GetSetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_Handler();
    private static void n_SetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnRefreshListener", "(Landroid/support/v4/widget/SwipeRefreshLayout$OnRefreshListener;)V", "GetSetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_Handler")]
public virtual void SetOnRefreshListener(IOnRefreshListener listener);
    private static Delegate GetSetProgressBackgroundColor_IHandler();
    private static void n_SetProgressBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int colorRes);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setProgressBackgroundColor", "(I)V", "GetSetProgressBackgroundColor_IHandler")]
public virtual void SetProgressBackgroundColor(int colorRes);
    private static Delegate GetSetProgressBackgroundColorSchemeColor_IHandler();
    private static void n_SetProgressBackgroundColorSchemeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setProgressBackgroundColorSchemeColor", "(I)V", "GetSetProgressBackgroundColorSchemeColor_IHandler")]
public virtual void SetProgressBackgroundColorSchemeColor(int color);
    private static Delegate GetSetProgressBackgroundColorSchemeResource_IHandler();
    private static void n_SetProgressBackgroundColorSchemeResource_I(IntPtr jnienv, IntPtr native__this, int colorRes);
    [RegisterAttribute("setProgressBackgroundColorSchemeResource", "(I)V", "GetSetProgressBackgroundColorSchemeResource_IHandler")]
public virtual void SetProgressBackgroundColorSchemeResource(int colorRes);
    private static Delegate GetSetProgressViewEndTarget_ZIHandler();
    private static void n_SetProgressViewEndTarget_ZI(IntPtr jnienv, IntPtr native__this, bool scale, int end);
    [RegisterAttribute("setProgressViewEndTarget", "(ZI)V", "GetSetProgressViewEndTarget_ZIHandler")]
public virtual void SetProgressViewEndTarget(bool scale, int end);
    private static Delegate GetSetProgressViewOffset_ZIIHandler();
    private static void n_SetProgressViewOffset_ZII(IntPtr jnienv, IntPtr native__this, bool scale, int start, int end);
    [RegisterAttribute("setProgressViewOffset", "(ZII)V", "GetSetProgressViewOffset_ZIIHandler")]
public virtual void SetProgressViewOffset(bool scale, int start, int end);
    private static Delegate GetSetSize_IHandler();
    private static void n_SetSize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("setSize", "(I)V", "GetSetSize_IHandler")]
public virtual void SetSize(int size);
    public void add_Refresh(EventHandler value);
    public void remove_Refresh(EventHandler value);
    private IOnRefreshListenerImplementor __CreateIOnRefreshListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_Refresh>b__138_0(IOnRefreshListener __v);
}
[RegisterAttribute("android/support/v4/widget/ViewDragHelper")]
public class Android.Support.V4.Widget.ViewDragHelper : Object {
    [RegisterAttribute("DIRECTION_ALL")]
public static int DirectionAll;
    [RegisterAttribute("DIRECTION_HORIZONTAL")]
public static int DirectionHorizontal;
    [RegisterAttribute("DIRECTION_VERTICAL")]
public static int DirectionVertical;
    [RegisterAttribute("EDGE_ALL")]
public static int EdgeAll;
    [RegisterAttribute("EDGE_BOTTOM")]
public static int EdgeBottom;
    [RegisterAttribute("EDGE_LEFT")]
public static int EdgeLeft;
    [RegisterAttribute("EDGE_RIGHT")]
public static int EdgeRight;
    [RegisterAttribute("EDGE_TOP")]
public static int EdgeTop;
    [RegisterAttribute("INVALID_POINTER")]
public static int InvalidPointer;
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_IDLE")]
public static int StateIdle;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    internal static IntPtr java_class_handle;
    private static Delegate cb_getActivePointerId;
    private static IntPtr id_getActivePointerId;
    private static Delegate cb_getCapturedView;
    private static IntPtr id_getCapturedView;
    private static Delegate cb_getEdgeSize;
    private static IntPtr id_getEdgeSize;
    private static Delegate cb_getMinVelocity;
    private static Delegate cb_setMinVelocity_F;
    private static IntPtr id_getMinVelocity;
    private static IntPtr id_setMinVelocity_F;
    private static Delegate cb_getTouchSlop;
    private static IntPtr id_getTouchSlop;
    private static Delegate cb_getViewDragState;
    private static IntPtr id_getViewDragState;
    private static Delegate cb_abort;
    private static IntPtr id_abort;
    private static Delegate cb_canScroll_Landroid_view_View_ZIIII;
    private static IntPtr id_canScroll_Landroid_view_View_ZIIII;
    private static Delegate cb_cancel;
    private static IntPtr id_cancel;
    private static Delegate cb_captureChildView_Landroid_view_View_I;
    private static IntPtr id_captureChildView_Landroid_view_View_I;
    private static Delegate cb_checkTouchSlop_I;
    private static IntPtr id_checkTouchSlop_I;
    private static Delegate cb_checkTouchSlop_II;
    private static IntPtr id_checkTouchSlop_II;
    private static Delegate cb_continueSettling_Z;
    private static IntPtr id_continueSettling_Z;
    private static IntPtr id_create_Landroid_view_ViewGroup_Landroid_support_v4_widget_ViewDragHelper_Callback_;
    private static IntPtr id_create_Landroid_view_ViewGroup_FLandroid_support_v4_widget_ViewDragHelper_Callback_;
    private static Delegate cb_findTopChildUnder_II;
    private static IntPtr id_findTopChildUnder_II;
    private static Delegate cb_flingCapturedView_IIII;
    private static IntPtr id_flingCapturedView_IIII;
    private static Delegate cb_isCapturedViewUnder_II;
    private static IntPtr id_isCapturedViewUnder_II;
    private static Delegate cb_isEdgeTouched_I;
    private static IntPtr id_isEdgeTouched_I;
    private static Delegate cb_isEdgeTouched_II;
    private static IntPtr id_isEdgeTouched_II;
    private static Delegate cb_isPointerDown_I;
    private static IntPtr id_isPointerDown_I;
    private static Delegate cb_isViewUnder_Landroid_view_View_II;
    private static IntPtr id_isViewUnder_Landroid_view_View_II;
    private static Delegate cb_processTouchEvent_Landroid_view_MotionEvent_;
    private static IntPtr id_processTouchEvent_Landroid_view_MotionEvent_;
    private static Delegate cb_setEdgeTrackingEnabled_I;
    private static IntPtr id_setEdgeTrackingEnabled_I;
    private static Delegate cb_settleCapturedViewAt_II;
    private static IntPtr id_settleCapturedViewAt_II;
    private static Delegate cb_shouldInterceptTouchEvent_Landroid_view_MotionEvent_;
    private static IntPtr id_shouldInterceptTouchEvent_Landroid_view_MotionEvent_;
    private static Delegate cb_smoothSlideViewTo_Landroid_view_View_II;
    private static IntPtr id_smoothSlideViewTo_Landroid_view_View_II;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ActivePointerId { get; }
    public View CapturedView { get; }
    public int EdgeSize { get; }
    public float MinVelocity { get; public set; }
    public int TouchSlop { get; }
    public int ViewDragState { get; }
    protected ViewDragHelper(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetActivePointerIdHandler();
    private static int n_GetActivePointerId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActivePointerId", "()I", "GetGetActivePointerIdHandler")]
public virtual int get_ActivePointerId();
    private static Delegate GetGetCapturedViewHandler();
    private static IntPtr n_GetCapturedView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCapturedView", "()Landroid/view/View;", "GetGetCapturedViewHandler")]
public virtual View get_CapturedView();
    private static Delegate GetGetEdgeSizeHandler();
    private static int n_GetEdgeSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEdgeSize", "()I", "GetGetEdgeSizeHandler")]
public virtual int get_EdgeSize();
    private static Delegate GetGetMinVelocityHandler();
    private static float n_GetMinVelocity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMinVelocity_FHandler();
    private static void n_SetMinVelocity_F(IntPtr jnienv, IntPtr native__this, float minVel);
    [RegisterAttribute("getMinVelocity", "()F", "GetGetMinVelocityHandler")]
public virtual float get_MinVelocity();
    [RegisterAttribute("setMinVelocity", "(F)V", "GetSetMinVelocity_FHandler")]
public virtual void set_MinVelocity(float value);
    private static Delegate GetGetTouchSlopHandler();
    private static int n_GetTouchSlop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTouchSlop", "()I", "GetGetTouchSlopHandler")]
public virtual int get_TouchSlop();
    private static Delegate GetGetViewDragStateHandler();
    private static int n_GetViewDragState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getViewDragState", "()I", "GetGetViewDragStateHandler")]
public virtual int get_ViewDragState();
    private static Delegate GetAbortHandler();
    private static void n_Abort(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("abort", "()V", "GetAbortHandler")]
public virtual void Abort();
    private static Delegate GetCanScroll_Landroid_view_View_ZIIIIHandler();
    private static bool n_CanScroll_Landroid_view_View_ZIIII(IntPtr jnienv, IntPtr native__this, IntPtr native_v, bool checkV, int dx, int dy, int x, int y);
    [RegisterAttribute("canScroll", "(Landroid/view/View;ZIIII)Z", "GetCanScroll_Landroid_view_View_ZIIIIHandler")]
protected virtual bool CanScroll(View v, bool checkV, int dx, int dy, int x, int y);
    private static Delegate GetCancelHandler();
    private static void n_Cancel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancel", "()V", "GetCancelHandler")]
public virtual void Cancel();
    private static Delegate GetCaptureChildView_Landroid_view_View_IHandler();
    private static void n_CaptureChildView_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_childView, int activePointerId);
    [RegisterAttribute("captureChildView", "(Landroid/view/View;I)V", "GetCaptureChildView_Landroid_view_View_IHandler")]
public virtual void CaptureChildView(View childView, int activePointerId);
    private static Delegate GetCheckTouchSlop_IHandler();
    private static bool n_CheckTouchSlop_I(IntPtr jnienv, IntPtr native__this, int directions);
    [RegisterAttribute("checkTouchSlop", "(I)Z", "GetCheckTouchSlop_IHandler")]
public virtual bool CheckTouchSlop(int directions);
    private static Delegate GetCheckTouchSlop_IIHandler();
    private static bool n_CheckTouchSlop_II(IntPtr jnienv, IntPtr native__this, int directions, int pointerId);
    [RegisterAttribute("checkTouchSlop", "(II)Z", "GetCheckTouchSlop_IIHandler")]
public virtual bool CheckTouchSlop(int directions, int pointerId);
    private static Delegate GetContinueSettling_ZHandler();
    private static bool n_ContinueSettling_Z(IntPtr jnienv, IntPtr native__this, bool deferCallbacks);
    [RegisterAttribute("continueSettling", "(Z)Z", "GetContinueSettling_ZHandler")]
public virtual bool ContinueSettling(bool deferCallbacks);
    [RegisterAttribute("create", "(Landroid/view/ViewGroup;Landroid/support/v4/widget/ViewDragHelper$Callback;)Landroid/support/v4/widget/ViewDragHelper;", "")]
public static ViewDragHelper Create(ViewGroup forParent, Callback cb);
    [RegisterAttribute("create", "(Landroid/view/ViewGroup;FLandroid/support/v4/widget/ViewDragHelper$Callback;)Landroid/support/v4/widget/ViewDragHelper;", "")]
public static ViewDragHelper Create(ViewGroup forParent, float sensitivity, Callback cb);
    private static Delegate GetFindTopChildUnder_IIHandler();
    private static IntPtr n_FindTopChildUnder_II(IntPtr jnienv, IntPtr native__this, int x, int y);
    [RegisterAttribute("findTopChildUnder", "(II)Landroid/view/View;", "GetFindTopChildUnder_IIHandler")]
public virtual View FindTopChildUnder(int x, int y);
    private static Delegate GetFlingCapturedView_IIIIHandler();
    private static void n_FlingCapturedView_IIII(IntPtr jnienv, IntPtr native__this, int minLeft, int minTop, int maxLeft, int maxTop);
    [RegisterAttribute("flingCapturedView", "(IIII)V", "GetFlingCapturedView_IIIIHandler")]
public virtual void FlingCapturedView(int minLeft, int minTop, int maxLeft, int maxTop);
    private static Delegate GetIsCapturedViewUnder_IIHandler();
    private static bool n_IsCapturedViewUnder_II(IntPtr jnienv, IntPtr native__this, int x, int y);
    [RegisterAttribute("isCapturedViewUnder", "(II)Z", "GetIsCapturedViewUnder_IIHandler")]
public virtual bool IsCapturedViewUnder(int x, int y);
    private static Delegate GetIsEdgeTouched_IHandler();
    private static bool n_IsEdgeTouched_I(IntPtr jnienv, IntPtr native__this, int edges);
    [RegisterAttribute("isEdgeTouched", "(I)Z", "GetIsEdgeTouched_IHandler")]
public virtual bool IsEdgeTouched(int edges);
    private static Delegate GetIsEdgeTouched_IIHandler();
    private static bool n_IsEdgeTouched_II(IntPtr jnienv, IntPtr native__this, int edges, int pointerId);
    [RegisterAttribute("isEdgeTouched", "(II)Z", "GetIsEdgeTouched_IIHandler")]
public virtual bool IsEdgeTouched(int edges, int pointerId);
    private static Delegate GetIsPointerDown_IHandler();
    private static bool n_IsPointerDown_I(IntPtr jnienv, IntPtr native__this, int pointerId);
    [RegisterAttribute("isPointerDown", "(I)Z", "GetIsPointerDown_IHandler")]
public virtual bool IsPointerDown(int pointerId);
    private static Delegate GetIsViewUnder_Landroid_view_View_IIHandler();
    private static bool n_IsViewUnder_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_view, int x, int y);
    [RegisterAttribute("isViewUnder", "(Landroid/view/View;II)Z", "GetIsViewUnder_Landroid_view_View_IIHandler")]
public virtual bool IsViewUnder(View view, int x, int y);
    private static Delegate GetProcessTouchEvent_Landroid_view_MotionEvent_Handler();
    private static void n_ProcessTouchEvent_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_ev);
    [RegisterAttribute("processTouchEvent", "(Landroid/view/MotionEvent;)V", "GetProcessTouchEvent_Landroid_view_MotionEvent_Handler")]
public virtual void ProcessTouchEvent(MotionEvent ev);
    private static Delegate GetSetEdgeTrackingEnabled_IHandler();
    private static void n_SetEdgeTrackingEnabled_I(IntPtr jnienv, IntPtr native__this, int edgeFlags);
    [RegisterAttribute("setEdgeTrackingEnabled", "(I)V", "GetSetEdgeTrackingEnabled_IHandler")]
public virtual void SetEdgeTrackingEnabled(int edgeFlags);
    private static Delegate GetSettleCapturedViewAt_IIHandler();
    private static bool n_SettleCapturedViewAt_II(IntPtr jnienv, IntPtr native__this, int finalLeft, int finalTop);
    [RegisterAttribute("settleCapturedViewAt", "(II)Z", "GetSettleCapturedViewAt_IIHandler")]
public virtual bool SettleCapturedViewAt(int finalLeft, int finalTop);
    private static Delegate GetShouldInterceptTouchEvent_Landroid_view_MotionEvent_Handler();
    private static bool n_ShouldInterceptTouchEvent_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_ev);
    [RegisterAttribute("shouldInterceptTouchEvent", "(Landroid/view/MotionEvent;)Z", "GetShouldInterceptTouchEvent_Landroid_view_MotionEvent_Handler")]
public virtual bool ShouldInterceptTouchEvent(MotionEvent ev);
    private static Delegate GetSmoothSlideViewTo_Landroid_view_View_IIHandler();
    private static bool n_SmoothSlideViewTo_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, int finalLeft, int finalTop);
    [RegisterAttribute("smoothSlideViewTo", "(Landroid/view/View;II)Z", "GetSmoothSlideViewTo_Landroid_view_View_IIHandler")]
public virtual bool SmoothSlideViewTo(View child, int finalLeft, int finalTop);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_android_support_coreui_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_coreui_package(string klass);
}
