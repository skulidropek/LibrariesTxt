[RegisterAttribute("android/support/coreutils/BuildConfig")]
public class Android.Support.CoreUtils.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    private static BuildConfig();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/app/AppLaunchChecker")]
public class Android.Support.V4.App.AppLaunchChecker : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected AppLaunchChecker(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppLaunchChecker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasStartedFromLauncher", "(Landroid/content/Context;)Z", "")]
public static bool HasStartedFromLauncher(Context context);
    [RegisterAttribute("onActivityCreate", "(Landroid/app/Activity;)V", "")]
public static void OnActivityCreate(Activity activity);
}
[RegisterAttribute("android/support/v4/app/FrameMetricsAggregator")]
public class Android.Support.V4.App.FrameMetricsAggregator : Object {
    [RegisterAttribute("ANIMATION_DURATION")]
public static int AnimationDuration;
    [RegisterAttribute("ANIMATION_INDEX")]
public static int AnimationIndex;
    [RegisterAttribute("COMMAND_DURATION")]
public static int CommandDuration;
    [RegisterAttribute("COMMAND_INDEX")]
public static int CommandIndex;
    [RegisterAttribute("DELAY_DURATION")]
public static int DelayDuration;
    [RegisterAttribute("DELAY_INDEX")]
public static int DelayIndex;
    [RegisterAttribute("DRAW_DURATION")]
public static int DrawDuration;
    [RegisterAttribute("DRAW_INDEX")]
public static int DrawIndex;
    [RegisterAttribute("EVERY_DURATION")]
public static int EveryDuration;
    [RegisterAttribute("INPUT_DURATION")]
public static int InputDuration;
    [RegisterAttribute("INPUT_INDEX")]
public static int InputIndex;
    [RegisterAttribute("LAYOUT_MEASURE_DURATION")]
public static int LayoutMeasureDuration;
    [RegisterAttribute("LAYOUT_MEASURE_INDEX")]
public static int LayoutMeasureIndex;
    [RegisterAttribute("SWAP_DURATION")]
public static int SwapDuration;
    [RegisterAttribute("SWAP_INDEX")]
public static int SwapIndex;
    [RegisterAttribute("SYNC_DURATION")]
public static int SyncDuration;
    [RegisterAttribute("SYNC_INDEX")]
public static int SyncIndex;
    [RegisterAttribute("TOTAL_DURATION")]
public static int TotalDuration;
    [RegisterAttribute("TOTAL_INDEX")]
public static int TotalIndex;
    internal static JniPeerMembers _members;
    private static Delegate cb_add_Landroid_app_Activity_;
    private static Delegate cb_getMetrics;
    private static Delegate cb_remove_Landroid_app_Activity_;
    private static Delegate cb_reset;
    private static Delegate cb_stop;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FrameMetricsAggregator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public FrameMetricsAggregator(int metricTypeFlags);
    private static FrameMetricsAggregator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAdd_Landroid_app_Activity_Handler();
    private static void n_Add_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("add", "(Landroid/app/Activity;)V", "GetAdd_Landroid_app_Activity_Handler")]
public virtual void Add(Activity activity);
    private static Delegate GetGetMetricsHandler();
    private static IntPtr n_GetMetrics(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMetrics", "()[Landroid/util/SparseIntArray;", "GetGetMetricsHandler")]
public virtual SparseIntArray[] GetMetrics();
    private static Delegate GetRemove_Landroid_app_Activity_Handler();
    private static IntPtr n_Remove_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("remove", "(Landroid/app/Activity;)[Landroid/util/SparseIntArray;", "GetRemove_Landroid_app_Activity_Handler")]
public virtual SparseIntArray[] Remove(Activity activity);
    private static Delegate GetResetHandler();
    private static IntPtr n_Reset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reset", "()[Landroid/util/SparseIntArray;", "GetResetHandler")]
public virtual SparseIntArray[] Reset();
    private static Delegate GetStopHandler();
    private static IntPtr n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()[Landroid/util/SparseIntArray;", "GetStopHandler")]
public virtual SparseIntArray[] Stop();
}
[RegisterAttribute("android/support/v4/app/NavUtils")]
public class Android.Support.V4.App.NavUtils : Object {
    [RegisterAttribute("PARENT_ACTIVITY")]
public static string ParentActivity;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal NavUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static NavUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getParentActivityIntent", "(Landroid/app/Activity;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Activity sourceActivity);
    [RegisterAttribute("getParentActivityIntent", "(Landroid/content/Context;Landroid/content/ComponentName;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Context context, ComponentName componentName);
    [RegisterAttribute("getParentActivityIntent", "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Context context, Class sourceActivityClass);
    [RegisterAttribute("getParentActivityName", "(Landroid/app/Activity;)Ljava/lang/String;", "")]
public static string GetParentActivityName(Activity sourceActivity);
    [RegisterAttribute("getParentActivityName", "(Landroid/content/Context;Landroid/content/ComponentName;)Ljava/lang/String;", "")]
public static string GetParentActivityName(Context context, ComponentName componentName);
    [RegisterAttribute("navigateUpFromSameTask", "(Landroid/app/Activity;)V", "")]
public static void NavigateUpFromSameTask(Activity sourceActivity);
    [RegisterAttribute("navigateUpTo", "(Landroid/app/Activity;Landroid/content/Intent;)V", "")]
public static void NavigateUpTo(Activity sourceActivity, Intent upIntent);
    [RegisterAttribute("shouldUpRecreateTask", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "")]
public static bool ShouldUpRecreateTask(Activity sourceActivity, Intent targetIntent);
}
[RegisterAttribute("android/support/v4/app/TaskStackBuilder")]
public class Android.Support.V4.App.TaskStackBuilder : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int IntentCount { get; }
    internal TaskStackBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    private static TaskStackBuilder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getIntentCount", "()I", "GetGetIntentCountHandler")]
public int get_IntentCount();
    [RegisterAttribute("addNextIntent", "(Landroid/content/Intent;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddNextIntent(Intent nextIntent);
    [RegisterAttribute("addNextIntentWithParentStack", "(Landroid/content/Intent;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddNextIntentWithParentStack(Intent nextIntent);
    [RegisterAttribute("addParentStack", "(Landroid/app/Activity;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(Activity sourceActivity);
    [RegisterAttribute("addParentStack", "(Landroid/content/ComponentName;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(ComponentName sourceActivityName);
    [RegisterAttribute("addParentStack", "(Ljava/lang/Class;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(Class sourceActivityClass);
    [RegisterAttribute("create", "(Landroid/content/Context;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public static TaskStackBuilder Create(Context context);
    [RegisterAttribute("editIntentAt", "(I)Landroid/content/Intent;", "")]
public Intent EditIntentAt(int index);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("from", "(Landroid/content/Context;)Landroid/support/v4/app/TaskStackBuilder;", "")]
public static TaskStackBuilder From(Context context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getIntent", "(I)Landroid/content/Intent;", "")]
public Intent GetIntent(int index);
    [RegisterAttribute("getIntents", "()[Landroid/content/Intent;", "")]
public Intent[] GetIntents();
    [RegisterAttribute("getPendingIntent", "(II)Landroid/app/PendingIntent;", "")]
public PendingIntent GetPendingIntent(int requestCode, int flags);
    [RegisterAttribute("getPendingIntent", "(IILandroid/os/Bundle;)Landroid/app/PendingIntent;", "")]
public PendingIntent GetPendingIntent(int requestCode, int flags, Bundle options);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("iterator", "()Ljava/util/Iterator;", "")]
public sealed virtual IIterator Iterator();
    [RegisterAttribute("startActivities", "()V", "")]
public void StartActivities();
    [RegisterAttribute("startActivities", "(Landroid/os/Bundle;)V", "")]
public void StartActivities(Bundle options);
}
[RegisterAttribute("android/support/v4/content/AsyncTaskLoader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.V4.Content.AsyncTaskLoader : Loader {
    internal static JniPeerMembers _members;
    private static Delegate cb_isLoadInBackgroundCanceled;
    private static Delegate cb_cancelLoadInBackground;
    private static Delegate cb_loadInBackground;
    private static Delegate cb_onCanceled_Ljava_lang_Object_;
    private static Delegate cb_onLoadInBackground;
    private static Delegate cb_setUpdateThrottle_J;
    private static Delegate cb_waitForLoader;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsLoadInBackgroundCanceled { get; }
    protected AsyncTaskLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public AsyncTaskLoader(Context context);
    private static AsyncTaskLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsLoadInBackgroundCanceledHandler();
    private static bool n_IsLoadInBackgroundCanceled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isLoadInBackgroundCanceled", "()Z", "GetIsLoadInBackgroundCanceledHandler")]
public virtual bool get_IsLoadInBackgroundCanceled();
    private static Delegate GetCancelLoadInBackgroundHandler();
    private static void n_CancelLoadInBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancelLoadInBackground", "()V", "GetCancelLoadInBackgroundHandler")]
public virtual void CancelLoadInBackground();
    private static Delegate GetLoadInBackgroundHandler();
    private static IntPtr n_LoadInBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("loadInBackground", "()Ljava/lang/Object;", "GetLoadInBackgroundHandler")]
public abstract virtual Object LoadInBackground();
    private static Delegate GetOnCanceled_Ljava_lang_Object_Handler();
    private static void n_OnCanceled_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("onCanceled", "(Ljava/lang/Object;)V", "GetOnCanceled_Ljava_lang_Object_Handler")]
public virtual void OnCanceled(Object data);
    private static Delegate GetOnLoadInBackgroundHandler();
    private static IntPtr n_OnLoadInBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onLoadInBackground", "()Ljava/lang/Object;", "GetOnLoadInBackgroundHandler")]
protected virtual Object OnLoadInBackground();
    private static Delegate GetSetUpdateThrottle_JHandler();
    private static void n_SetUpdateThrottle_J(IntPtr jnienv, IntPtr native__this, long delayMS);
    [RegisterAttribute("setUpdateThrottle", "(J)V", "GetSetUpdateThrottle_JHandler")]
public virtual void SetUpdateThrottle(long delayMS);
    private static Delegate GetWaitForLoaderHandler();
    private static void n_WaitForLoader(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("waitForLoader", "()V", "GetWaitForLoaderHandler")]
public virtual void WaitForLoader();
}
[RegisterAttribute("android/support/v4/content/AsyncTaskLoader")]
internal class Android.Support.V4.Content.AsyncTaskLoaderInvoker : AsyncTaskLoader {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public AsyncTaskLoaderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AsyncTaskLoaderInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("loadInBackground", "()Ljava/lang/Object;", "GetLoadInBackgroundHandler")]
public virtual Object LoadInBackground();
}
[RegisterAttribute("android/support/v4/content/CursorLoader")]
public class Android.Support.V4.Content.CursorLoader : AsyncTaskLoader {
    internal static JniPeerMembers _members;
    private static Delegate cb_getSelection;
    private static Delegate cb_setSelection_Ljava_lang_String_;
    private static Delegate cb_getSortOrder;
    private static Delegate cb_setSortOrder_Ljava_lang_String_;
    private static Delegate cb_getUri;
    private static Delegate cb_setUri_Landroid_net_Uri_;
    private static Delegate cb_deliverResult_Landroid_database_Cursor_;
    private static Delegate cb_getProjection;
    private static Delegate cb_getSelectionArgs;
    private static Delegate cb_loadInBackground;
    private static Delegate cb_onCanceled_Landroid_database_Cursor_;
    private static Delegate cb_setProjection_arrayLjava_lang_String_;
    private static Delegate cb_setSelectionArgs_arrayLjava_lang_String_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public string Selection { get; public set; }
    public string SortOrder { get; public set; }
    public Uri Uri { get; public set; }
    protected CursorLoader(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CursorLoader(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)V", "")]
public CursorLoader(Context context, Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder);
    private static CursorLoader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSelectionHandler();
    private static IntPtr n_GetSelection(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSelection_Ljava_lang_String_Handler();
    private static void n_SetSelection_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_selection);
    [RegisterAttribute("getSelection", "()Ljava/lang/String;", "GetGetSelectionHandler")]
public virtual string get_Selection();
    [RegisterAttribute("setSelection", "(Ljava/lang/String;)V", "GetSetSelection_Ljava_lang_String_Handler")]
public virtual void set_Selection(string value);
    private static Delegate GetGetSortOrderHandler();
    private static IntPtr n_GetSortOrder(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSortOrder_Ljava_lang_String_Handler();
    private static void n_SetSortOrder_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_sortOrder);
    [RegisterAttribute("getSortOrder", "()Ljava/lang/String;", "GetGetSortOrderHandler")]
public virtual string get_SortOrder();
    [RegisterAttribute("setSortOrder", "(Ljava/lang/String;)V", "GetSetSortOrder_Ljava_lang_String_Handler")]
public virtual void set_SortOrder(string value);
    private static Delegate GetGetUriHandler();
    private static IntPtr n_GetUri(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUri_Landroid_net_Uri_Handler();
    private static void n_SetUri_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("getUri", "()Landroid/net/Uri;", "GetGetUriHandler")]
public virtual Uri get_Uri();
    [RegisterAttribute("setUri", "(Landroid/net/Uri;)V", "GetSetUri_Landroid_net_Uri_Handler")]
public virtual void set_Uri(Uri value);
    private static Delegate GetDeliverResult_Landroid_database_Cursor_Handler();
    private static void n_DeliverResult_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_cursor);
    [RegisterAttribute("deliverResult", "(Landroid/database/Cursor;)V", "GetDeliverResult_Landroid_database_Cursor_Handler")]
public virtual void DeliverResult(ICursor cursor);
    private static Delegate GetGetProjectionHandler();
    private static IntPtr n_GetProjection(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProjection", "()[Ljava/lang/String;", "GetGetProjectionHandler")]
public virtual String[] GetProjection();
    private static Delegate GetGetSelectionArgsHandler();
    private static IntPtr n_GetSelectionArgs(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSelectionArgs", "()[Ljava/lang/String;", "GetGetSelectionArgsHandler")]
public virtual String[] GetSelectionArgs();
    private static Delegate GetLoadInBackgroundHandler();
    private static IntPtr n_LoadInBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("loadInBackground", "()Landroid/database/Cursor;", "GetLoadInBackgroundHandler")]
public virtual Object LoadInBackground();
    private static Delegate GetOnCanceled_Landroid_database_Cursor_Handler();
    private static void n_OnCanceled_Landroid_database_Cursor_(IntPtr jnienv, IntPtr native__this, IntPtr native_cursor);
    [RegisterAttribute("onCanceled", "(Landroid/database/Cursor;)V", "GetOnCanceled_Landroid_database_Cursor_Handler")]
public virtual void OnCanceled(ICursor cursor);
    private static Delegate GetSetProjection_arrayLjava_lang_String_Handler();
    private static void n_SetProjection_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_projection);
    [RegisterAttribute("setProjection", "([Ljava/lang/String;)V", "GetSetProjection_arrayLjava_lang_String_Handler")]
public virtual void SetProjection(String[] projection);
    private static Delegate GetSetSelectionArgs_arrayLjava_lang_String_Handler();
    private static void n_SetSelectionArgs_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_selectionArgs);
    [RegisterAttribute("setSelectionArgs", "([Ljava/lang/String;)V", "GetSetSelectionArgs_arrayLjava_lang_String_Handler")]
public virtual void SetSelectionArgs(String[] selectionArgs);
}
[RegisterAttribute("android/support/v4/content/FileProvider")]
public class Android.Support.V4.Content.FileProvider : ContentProvider {
    internal static JniPeerMembers _members;
    private static Delegate cb_delete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_;
    private static Delegate cb_getType_Landroid_net_Uri_;
    private static Delegate cb_insert_Landroid_net_Uri_Landroid_content_ContentValues_;
    private static Delegate cb_onCreate;
    private static Delegate cb_query_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_;
    private static Delegate cb_update_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FileProvider(IntPtr javaReference, JniHandleOwnership transfer);
    private static FileProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDelete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_Handler();
    private static int n_Delete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_selection, IntPtr native_selectionArgs);
    [RegisterAttribute("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "GetDelete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_Handler")]
public virtual int Delete(Uri uri, string selection, String[] selectionArgs);
    private static Delegate GetGetType_Landroid_net_Uri_Handler();
    private static IntPtr n_GetType_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "GetGetType_Landroid_net_Uri_Handler")]
public virtual string GetType(Uri uri);
    [RegisterAttribute("getUriForFile", "(Landroid/content/Context;Ljava/lang/String;Ljava/io/File;)Landroid/net/Uri;", "")]
public static Uri GetUriForFile(Context context, string authority, File file);
    private static Delegate GetInsert_Landroid_net_Uri_Landroid_content_ContentValues_Handler();
    private static IntPtr n_Insert_Landroid_net_Uri_Landroid_content_ContentValues_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_values);
    [RegisterAttribute("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "GetInsert_Landroid_net_Uri_Landroid_content_ContentValues_Handler")]
public virtual Uri Insert(Uri uri, ContentValues values);
    private static Delegate GetOnCreateHandler();
    private static bool n_OnCreate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreate", "()Z", "GetOnCreateHandler")]
public virtual bool OnCreate();
    private static Delegate GetQuery_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_Query_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_projection, IntPtr native_selection, IntPtr native_selectionArgs, IntPtr native_sortOrder);
    [RegisterAttribute("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler")]
public virtual ICursor Query(Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder);
    private static Delegate GetUpdate_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler();
    private static int n_Update_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_values, IntPtr native_selection, IntPtr native_selectionArgs);
    [RegisterAttribute("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "GetUpdate_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler")]
public virtual int Update(Uri uri, ContentValues values, string selection, String[] selectionArgs);
}
[RegisterAttribute("android/support/v4/content/Loader")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.V4.Content.Loader : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getContext;
    private static Delegate cb_getId;
    private static Delegate cb_isAbandoned;
    private static Delegate cb_isReset;
    private static Delegate cb_isStarted;
    private static Delegate cb_abandon;
    private static Delegate cb_cancelLoad;
    private static Delegate cb_commitContentChanged;
    private static Delegate cb_dataToString_Ljava_lang_Object_;
    private static Delegate cb_deliverCancellation;
    private static Delegate cb_deliverResult_Ljava_lang_Object_;
    private static Delegate cb_dump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_;
    private static Delegate cb_forceLoad;
    private static Delegate cb_onAbandon;
    private static Delegate cb_onCancelLoad;
    private static Delegate cb_onContentChanged;
    private static Delegate cb_onForceLoad;
    private static Delegate cb_onReset;
    private static Delegate cb_onStartLoading;
    private static Delegate cb_onStopLoading;
    private static Delegate cb_registerListener_ILandroid_support_v4_content_Loader_OnLoadCompleteListener_;
    private static Delegate cb_registerOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_;
    private static Delegate cb_reset;
    private static Delegate cb_rollbackContentChanged;
    private static Delegate cb_stopLoading;
    private static Delegate cb_takeContentChanged;
    private static Delegate cb_unregisterListener_Landroid_support_v4_content_Loader_OnLoadCompleteListener_;
    private static Delegate cb_unregisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Context Context { get; }
    public int Id { get; }
    public bool IsAbandoned { get; }
    public bool IsReset { get; }
    public bool IsStarted { get; }
    protected Loader(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public Loader(Context context);
    private static Loader();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    private static Delegate GetIsAbandonedHandler();
    private static bool n_IsAbandoned(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAbandoned", "()Z", "GetIsAbandonedHandler")]
public virtual bool get_IsAbandoned();
    private static Delegate GetIsResetHandler();
    private static bool n_IsReset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isReset", "()Z", "GetIsResetHandler")]
public virtual bool get_IsReset();
    private static Delegate GetIsStartedHandler();
    private static bool n_IsStarted(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStarted", "()Z", "GetIsStartedHandler")]
public virtual bool get_IsStarted();
    private static Delegate GetAbandonHandler();
    private static void n_Abandon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("abandon", "()V", "GetAbandonHandler")]
public virtual void Abandon();
    private static Delegate GetCancelLoadHandler();
    private static bool n_CancelLoad(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancelLoad", "()Z", "GetCancelLoadHandler")]
public virtual bool CancelLoad();
    private static Delegate GetCommitContentChangedHandler();
    private static void n_CommitContentChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("commitContentChanged", "()V", "GetCommitContentChangedHandler")]
public virtual void CommitContentChanged();
    private static Delegate GetDataToString_Ljava_lang_Object_Handler();
    private static IntPtr n_DataToString_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("dataToString", "(Ljava/lang/Object;)Ljava/lang/String;", "GetDataToString_Ljava_lang_Object_Handler")]
public virtual string DataToString(Object data);
    private static Delegate GetDeliverCancellationHandler();
    private static void n_DeliverCancellation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("deliverCancellation", "()V", "GetDeliverCancellationHandler")]
public virtual void DeliverCancellation();
    private static Delegate GetDeliverResult_Ljava_lang_Object_Handler();
    private static void n_DeliverResult_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_data);
    [RegisterAttribute("deliverResult", "(Ljava/lang/Object;)V", "GetDeliverResult_Ljava_lang_Object_Handler")]
public virtual void DeliverResult(Object data);
    private static Delegate GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler();
    private static void n_Dump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_prefix, IntPtr native_fd, IntPtr native_writer, IntPtr native_args);
    [RegisterAttribute("dump", "(Ljava/lang/String;Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_lang_String_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]
public virtual void Dump(string prefix, FileDescriptor fd, PrintWriter writer, String[] args);
    private static Delegate GetForceLoadHandler();
    private static void n_ForceLoad(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("forceLoad", "()V", "GetForceLoadHandler")]
public virtual void ForceLoad();
    private static Delegate GetOnAbandonHandler();
    private static void n_OnAbandon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAbandon", "()V", "GetOnAbandonHandler")]
protected virtual void OnAbandon();
    private static Delegate GetOnCancelLoadHandler();
    private static bool n_OnCancelLoad(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCancelLoad", "()Z", "GetOnCancelLoadHandler")]
protected virtual bool OnCancelLoad();
    private static Delegate GetOnContentChangedHandler();
    private static void n_OnContentChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onContentChanged", "()V", "GetOnContentChangedHandler")]
public virtual void OnContentChanged();
    private static Delegate GetOnForceLoadHandler();
    private static void n_OnForceLoad(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onForceLoad", "()V", "GetOnForceLoadHandler")]
protected virtual void OnForceLoad();
    private static Delegate GetOnResetHandler();
    private static void n_OnReset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onReset", "()V", "GetOnResetHandler")]
protected virtual void OnReset();
    private static Delegate GetOnStartLoadingHandler();
    private static void n_OnStartLoading(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStartLoading", "()V", "GetOnStartLoadingHandler")]
protected virtual void OnStartLoading();
    private static Delegate GetOnStopLoadingHandler();
    private static void n_OnStopLoading(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStopLoading", "()V", "GetOnStopLoadingHandler")]
protected virtual void OnStopLoading();
    private static Delegate GetRegisterListener_ILandroid_support_v4_content_Loader_OnLoadCompleteListener_Handler();
    private static void n_RegisterListener_ILandroid_support_v4_content_Loader_OnLoadCompleteListener_(IntPtr jnienv, IntPtr native__this, int id, IntPtr native_listener);
    [RegisterAttribute("registerListener", "(ILandroid/support/v4/content/Loader$OnLoadCompleteListener;)V", "GetRegisterListener_ILandroid_support_v4_content_Loader_OnLoadCompleteListener_Handler")]
public virtual void RegisterListener(int id, IOnLoadCompleteListener listener);
    private static Delegate GetRegisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_Handler();
    private static void n_RegisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("registerOnLoadCanceledListener", "(Landroid/support/v4/content/Loader$OnLoadCanceledListener;)V", "GetRegisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_Handler")]
public virtual void RegisterOnLoadCanceledListener(IOnLoadCanceledListener listener);
    private static Delegate GetResetHandler();
    private static void n_Reset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reset", "()V", "GetResetHandler")]
public virtual void Reset();
    private static Delegate GetRollbackContentChangedHandler();
    private static void n_RollbackContentChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("rollbackContentChanged", "()V", "GetRollbackContentChangedHandler")]
public virtual void RollbackContentChanged();
    [RegisterAttribute("startLoading", "()V", "")]
public void StartLoading();
    private static Delegate GetStopLoadingHandler();
    private static void n_StopLoading(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stopLoading", "()V", "GetStopLoadingHandler")]
public virtual void StopLoading();
    private static Delegate GetTakeContentChangedHandler();
    private static bool n_TakeContentChanged(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("takeContentChanged", "()Z", "GetTakeContentChangedHandler")]
public virtual bool TakeContentChanged();
    private static Delegate GetUnregisterListener_Landroid_support_v4_content_Loader_OnLoadCompleteListener_Handler();
    private static void n_UnregisterListener_Landroid_support_v4_content_Loader_OnLoadCompleteListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("unregisterListener", "(Landroid/support/v4/content/Loader$OnLoadCompleteListener;)V", "GetUnregisterListener_Landroid_support_v4_content_Loader_OnLoadCompleteListener_Handler")]
public virtual void UnregisterListener(IOnLoadCompleteListener listener);
    private static Delegate GetUnregisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_Handler();
    private static void n_UnregisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("unregisterOnLoadCanceledListener", "(Landroid/support/v4/content/Loader$OnLoadCanceledListener;)V", "GetUnregisterOnLoadCanceledListener_Landroid_support_v4_content_Loader_OnLoadCanceledListener_Handler")]
public virtual void UnregisterOnLoadCanceledListener(IOnLoadCanceledListener listener);
}
[RegisterAttribute("android/support/v4/content/LocalBroadcastManager")]
public class Android.Support.V4.Content.LocalBroadcastManager : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal LocalBroadcastManager(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocalBroadcastManager();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroid/support/v4/content/LocalBroadcastManager;", "")]
public static LocalBroadcastManager GetInstance(Context context);
    [RegisterAttribute("registerReceiver", "(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)V", "")]
public void RegisterReceiver(BroadcastReceiver receiver, IntentFilter filter);
    [RegisterAttribute("sendBroadcast", "(Landroid/content/Intent;)Z", "")]
public bool SendBroadcast(Intent intent);
    [RegisterAttribute("sendBroadcastSync", "(Landroid/content/Intent;)V", "")]
public void SendBroadcastSync(Intent intent);
    [RegisterAttribute("unregisterReceiver", "(Landroid/content/BroadcastReceiver;)V", "")]
public void UnregisterReceiver(BroadcastReceiver receiver);
}
[RegisterAttribute("android/support/v4/content/MimeTypeFilter")]
public class Android.Support.V4.Content.MimeTypeFilter : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MimeTypeFilter(IntPtr javaReference, JniHandleOwnership transfer);
    private static MimeTypeFilter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("matches", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
public static bool Matches(string mimeType, string filter);
    [RegisterAttribute("matches", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;", "")]
public static string Matches(string mimeType, String[] filters);
    [RegisterAttribute("matches", "([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
public static string Matches(String[] mimeTypes, string filter);
    [RegisterAttribute("matchesMany", "([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;", "")]
public static String[] MatchesMany(String[] mimeTypes, string filter);
}
[RegisterAttribute("android/support/v4/content/PermissionChecker")]
public class Android.Support.V4.Content.PermissionChecker : Object {
    [RegisterAttribute("PERMISSION_DENIED")]
public static int PermissionDenied;
    [RegisterAttribute("PERMISSION_DENIED_APP_OP")]
public static int PermissionDeniedAppOp;
    [RegisterAttribute("PERMISSION_GRANTED")]
public static int PermissionGranted;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal PermissionChecker(IntPtr javaReference, JniHandleOwnership transfer);
    private static PermissionChecker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkCallingOrSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static int CheckCallingOrSelfPermission(Context context, string permission);
    [RegisterAttribute("checkCallingPermission", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I", "")]
public static int CheckCallingPermission(Context context, string permission, string packageName);
    [RegisterAttribute("checkPermission", "(Landroid/content/Context;Ljava/lang/String;IILjava/lang/String;)I", "")]
public static int CheckPermission(Context context, string permission, int pid, int uid, string packageName);
    [RegisterAttribute("checkSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static int CheckSelfPermission(Context context, string permission);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/content/WakefulBroadcastReceiver")]
public abstract class Android.Support.V4.Content.WakefulBroadcastReceiver : BroadcastReceiver {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected WakefulBroadcastReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    private static WakefulBroadcastReceiver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("completeWakefulIntent", "(Landroid/content/Intent;)Z", "")]
public static bool CompleteWakefulIntent(Intent intent);
    [RegisterAttribute("startWakefulService", "(Landroid/content/Context;Landroid/content/Intent;)Landroid/content/ComponentName;", "")]
public static ComponentName StartWakefulService(Context context, Intent intent);
}
[RegisterAttribute("android/support/v4/content/WakefulBroadcastReceiver")]
internal class Android.Support.V4.Content.WakefulBroadcastReceiverInvoker : WakefulBroadcastReceiver {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public WakefulBroadcastReceiverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static WakefulBroadcastReceiverInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
public virtual void OnReceive(Context context, Intent intent);
}
[RegisterAttribute("android/support/v4/graphics/ColorUtils")]
public class Android.Support.V4.Graphics.ColorUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ColorUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static ColorUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("HSLToColor", "([F)I", "")]
public static int HSLToColor(Single[] hsl);
    [RegisterAttribute("LABToColor", "(DDD)I", "")]
public static int LABToColor(double l, double a, double b);
    [RegisterAttribute("LABToXYZ", "(DDD[D)V", "")]
public static void LABToXYZ(double l, double a, double b, Double[] outXyz);
    [RegisterAttribute("RGBToHSL", "(III[F)V", "")]
public static void RGBToHSL(int r, int g, int b, Single[] outHsl);
    [RegisterAttribute("RGBToLAB", "(III[D)V", "")]
public static void RGBToLAB(int r, int g, int b, Double[] outLab);
    [RegisterAttribute("RGBToXYZ", "(III[D)V", "")]
public static void RGBToXYZ(int r, int g, int b, Double[] outXyz);
    [RegisterAttribute("XYZToColor", "(DDD)I", "")]
public static int XYZToColor(double x, double y, double z);
    [RegisterAttribute("XYZToLAB", "(DDD[D)V", "")]
public static void XYZToLAB(double x, double y, double z, Double[] outLab);
    [RegisterAttribute("blendARGB", "(IIF)I", "")]
public static int BlendARGB(int color1, int color2, float ratio);
    [RegisterAttribute("blendHSL", "([F[FF[F)V", "")]
public static void BlendHSL(Single[] hsl1, Single[] hsl2, float ratio, Single[] outResult);
    [RegisterAttribute("blendLAB", "([D[DD[D)V", "")]
public static void BlendLAB(Double[] lab1, Double[] lab2, double ratio, Double[] outResult);
    [RegisterAttribute("calculateContrast", "(II)D", "")]
public static double CalculateContrast(int foreground, int background);
    [RegisterAttribute("calculateLuminance", "(I)D", "")]
public static double CalculateLuminance(int color);
    [RegisterAttribute("calculateMinimumAlpha", "(IIF)I", "")]
public static int CalculateMinimumAlpha(int foreground, int background, float minContrastRatio);
    [RegisterAttribute("colorToHSL", "(I[F)V", "")]
public static void ColorToHSL(int color, Single[] outHsl);
    [RegisterAttribute("colorToLAB", "(I[D)V", "")]
public static void ColorToLAB(int color, Double[] outLab);
    [RegisterAttribute("colorToXYZ", "(I[D)V", "")]
public static void ColorToXYZ(int color, Double[] outXyz);
    [RegisterAttribute("compositeColors", "(II)I", "")]
public static int CompositeColors(int foreground, int background);
    [RegisterAttribute("distanceEuclidean", "([D[D)D", "")]
public static double DistanceEuclidean(Double[] labX, Double[] labY);
    [RegisterAttribute("setAlphaComponent", "(II)I", "")]
public static int SetAlphaComponent(int color, int alpha);
}
[RegisterAttribute("android/support/v4/graphics/drawable/RoundedBitmapDrawable")]
public abstract class Android.Support.V4.Graphics.Drawable.RoundedBitmapDrawable : Drawable {
    internal static JniPeerMembers _members;
    private static Delegate cb_isCircular;
    private static Delegate cb_setCircular_Z;
    private static Delegate cb_getCornerRadius;
    private static Delegate cb_setCornerRadius_F;
    private static Delegate cb_getGravity;
    private static Delegate cb_setGravity_I;
    private static Delegate cb_hasAntiAlias;
    private static Delegate cb_hasMipMap;
    private static Delegate cb_getOpacity;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setAntiAlias_Z;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setMipMap_Z;
    private static Delegate cb_setTargetDensity_Landroid_graphics_Canvas_;
    private static Delegate cb_setTargetDensity_Landroid_util_DisplayMetrics_;
    private static Delegate cb_setTargetDensity_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Bitmap Bitmap { get; }
    public bool Circular { get; public set; }
    public float CornerRadius { get; public set; }
    public int Gravity { get; public set; }
    public bool HasAntiAlias { get; }
    public bool HasMipMap { get; }
    public int Opacity { get; }
    public Paint Paint { get; }
    protected RoundedBitmapDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    private static RoundedBitmapDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")]
public Bitmap get_Bitmap();
    private static Delegate GetIsCircularHandler();
    private static bool n_IsCircular(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircular_ZHandler();
    private static void n_SetCircular_Z(IntPtr jnienv, IntPtr native__this, bool circular);
    [RegisterAttribute("isCircular", "()Z", "GetIsCircularHandler")]
public virtual bool get_Circular();
    [RegisterAttribute("setCircular", "(Z)V", "GetSetCircular_ZHandler")]
public virtual void set_Circular(bool value);
    private static Delegate GetGetCornerRadiusHandler();
    private static float n_GetCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCornerRadius_FHandler();
    private static void n_SetCornerRadius_F(IntPtr jnienv, IntPtr native__this, float cornerRadius);
    [RegisterAttribute("getCornerRadius", "()F", "GetGetCornerRadiusHandler")]
public virtual float get_CornerRadius();
    [RegisterAttribute("setCornerRadius", "(F)V", "GetSetCornerRadius_FHandler")]
public virtual void set_CornerRadius(float value);
    private static Delegate GetGetGravityHandler();
    private static int n_GetGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetGravity_IHandler();
    private static void n_SetGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getGravity", "()I", "GetGetGravityHandler")]
public virtual int get_Gravity();
    [RegisterAttribute("setGravity", "(I)V", "GetSetGravity_IHandler")]
public virtual void set_Gravity(int value);
    private static Delegate GetHasAntiAliasHandler();
    private static bool n_HasAntiAlias(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasAntiAlias", "()Z", "GetHasAntiAliasHandler")]
public virtual bool get_HasAntiAlias();
    private static Delegate GetHasMipMapHandler();
    private static bool n_HasMipMap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMipMap", "()Z", "GetHasMipMapHandler")]
public virtual bool get_HasMipMap();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    [RegisterAttribute("getPaint", "()Landroid/graphics/Paint;", "GetGetPaintHandler")]
public Paint get_Paint();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetAntiAlias_ZHandler();
    private static void n_SetAntiAlias_Z(IntPtr jnienv, IntPtr native__this, bool aa);
    [RegisterAttribute("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")]
public virtual void SetAntiAlias(bool aa);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_cf);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter cf);
    private static Delegate GetSetMipMap_ZHandler();
    private static void n_SetMipMap_Z(IntPtr jnienv, IntPtr native__this, bool mipMap);
    [RegisterAttribute("setMipMap", "(Z)V", "GetSetMipMap_ZHandler")]
public virtual void SetMipMap(bool mipMap);
    private static Delegate GetSetTargetDensity_Landroid_graphics_Canvas_Handler();
    private static void n_SetTargetDensity_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("setTargetDensity", "(Landroid/graphics/Canvas;)V", "GetSetTargetDensity_Landroid_graphics_Canvas_Handler")]
public virtual void SetTargetDensity(Canvas canvas);
    private static Delegate GetSetTargetDensity_Landroid_util_DisplayMetrics_Handler();
    private static void n_SetTargetDensity_Landroid_util_DisplayMetrics_(IntPtr jnienv, IntPtr native__this, IntPtr native_metrics);
    [RegisterAttribute("setTargetDensity", "(Landroid/util/DisplayMetrics;)V", "GetSetTargetDensity_Landroid_util_DisplayMetrics_Handler")]
public virtual void SetTargetDensity(DisplayMetrics metrics);
    private static Delegate GetSetTargetDensity_IHandler();
    private static void n_SetTargetDensity_I(IntPtr jnienv, IntPtr native__this, int density);
    [RegisterAttribute("setTargetDensity", "(I)V", "GetSetTargetDensity_IHandler")]
public virtual void SetTargetDensity(int density);
}
[RegisterAttribute("android/support/v4/graphics/drawable/RoundedBitmapDrawableFactory")]
public class Android.Support.V4.Graphics.Drawable.RoundedBitmapDrawableFactory : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal RoundedBitmapDrawableFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static RoundedBitmapDrawableFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)Landroid/support/v4/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, Bitmap bitmap);
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Ljava/io/InputStream;)Landroid/support/v4/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, Stream is);
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Ljava/lang/String;)Landroid/support/v4/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, string filepath);
}
[RegisterAttribute("android/support/v4/graphics/drawable/RoundedBitmapDrawable")]
internal class Android.Support.V4.Graphics.Drawable.RoundedBitmapDrawableInvoker : RoundedBitmapDrawable {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public RoundedBitmapDrawableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static RoundedBitmapDrawableInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/math/MathUtils")]
public class Android.Support.V4.Math.MathUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MathUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static MathUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("clamp", "(DDD)D", "")]
public static double Clamp(double value, double min, double max);
    [RegisterAttribute("clamp", "(FFF)F", "")]
public static float Clamp(float value, float min, float max);
    [RegisterAttribute("clamp", "(III)I", "")]
public static int Clamp(int value, int min, int max);
}
[RegisterAttribute("android/support/v4/print/PrintHelper")]
public class Android.Support.V4.Print.PrintHelper : Object {
    [RegisterAttribute("COLOR_MODE_COLOR")]
public static int ColorModeColor;
    [RegisterAttribute("COLOR_MODE_MONOCHROME")]
public static int ColorModeMonochrome;
    [RegisterAttribute("ORIENTATION_LANDSCAPE")]
public static int OrientationLandscape;
    [RegisterAttribute("ORIENTATION_PORTRAIT")]
public static int OrientationPortrait;
    [RegisterAttribute("SCALE_MODE_FILL")]
public static int ScaleModeFill;
    [RegisterAttribute("SCALE_MODE_FIT")]
public static int ScaleModeFit;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ColorMode { get; public set; }
    public int Orientation { get; public set; }
    public int ScaleMode { get; public set; }
    internal PrintHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public PrintHelper(Context context);
    private static PrintHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getColorMode", "()I", "GetGetColorModeHandler")]
public int get_ColorMode();
    [RegisterAttribute("setColorMode", "(I)V", "GetSetColorMode_IHandler")]
public void set_ColorMode(int value);
    [RegisterAttribute("getOrientation", "()I", "GetGetOrientationHandler")]
public int get_Orientation();
    [RegisterAttribute("setOrientation", "(I)V", "GetSetOrientation_IHandler")]
public void set_Orientation(int value);
    [RegisterAttribute("getScaleMode", "()I", "GetGetScaleModeHandler")]
public int get_ScaleMode();
    [RegisterAttribute("setScaleMode", "(I)V", "GetSetScaleMode_IHandler")]
public void set_ScaleMode(int value);
    [RegisterAttribute("printBitmap", "(Ljava/lang/String;Landroid/graphics/Bitmap;)V", "")]
public void PrintBitmap(string jobName, Bitmap bitmap);
    [RegisterAttribute("printBitmap", "(Ljava/lang/String;Landroid/graphics/Bitmap;Landroid/support/v4/print/PrintHelper$OnPrintFinishCallback;)V", "")]
public void PrintBitmap(string jobName, Bitmap bitmap, IOnPrintFinishCallback callback);
    [RegisterAttribute("printBitmap", "(Ljava/lang/String;Landroid/net/Uri;)V", "")]
public void PrintBitmap(string jobName, Uri imageFile);
    [RegisterAttribute("printBitmap", "(Ljava/lang/String;Landroid/net/Uri;Landroid/support/v4/print/PrintHelper$OnPrintFinishCallback;)V", "")]
public void PrintBitmap(string jobName, Uri imageFile, IOnPrintFinishCallback callback);
    [RegisterAttribute("systemSupportsPrint", "()Z", "")]
public static bool SystemSupportsPrint();
}
[RegisterAttribute("android/support/v4/provider/DocumentFile")]
public abstract class Android.Support.V4.Provider.DocumentFile : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_isDirectory;
    private static Delegate cb_isFile;
    private static Delegate cb_isVirtual;
    private static Delegate cb_getName;
    private static Delegate cb_getParentFile;
    private static Delegate cb_getType;
    private static Delegate cb_getUri;
    private static Delegate cb_canRead;
    private static Delegate cb_canWrite;
    private static Delegate cb_createDirectory_Ljava_lang_String_;
    private static Delegate cb_createFile_Ljava_lang_String_Ljava_lang_String_;
    private static Delegate cb_delete;
    private static Delegate cb_exists;
    private static Delegate cb_findFile_Ljava_lang_String_;
    private static Delegate cb_lastModified;
    private static Delegate cb_length;
    private static Delegate cb_listFiles;
    private static Delegate cb_renameTo_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsDirectory { get; }
    public bool IsFile { get; }
    public bool IsVirtual { get; }
    public string Name { get; }
    public DocumentFile ParentFile { get; }
    public string Type { get; }
    public Uri Uri { get; }
    protected DocumentFile(IntPtr javaReference, JniHandleOwnership transfer);
    private static DocumentFile();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsDirectoryHandler();
    private static bool n_IsDirectory(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isDirectory", "()Z", "GetIsDirectoryHandler")]
public abstract virtual bool get_IsDirectory();
    private static Delegate GetIsFileHandler();
    private static bool n_IsFile(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isFile", "()Z", "GetIsFileHandler")]
public abstract virtual bool get_IsFile();
    private static Delegate GetIsVirtualHandler();
    private static bool n_IsVirtual(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isVirtual", "()Z", "GetIsVirtualHandler")]
public abstract virtual bool get_IsVirtual();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public abstract virtual string get_Name();
    private static Delegate GetGetParentFileHandler();
    private static IntPtr n_GetParentFile(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParentFile", "()Landroid/support/v4/provider/DocumentFile;", "GetGetParentFileHandler")]
public virtual DocumentFile get_ParentFile();
    private static Delegate GetGetTypeHandler();
    private static IntPtr n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public abstract virtual string get_Type();
    private static Delegate GetGetUriHandler();
    private static IntPtr n_GetUri(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getUri", "()Landroid/net/Uri;", "GetGetUriHandler")]
public abstract virtual Uri get_Uri();
    private static Delegate GetCanReadHandler();
    private static bool n_CanRead(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canRead", "()Z", "GetCanReadHandler")]
public abstract virtual bool CanRead();
    private static Delegate GetCanWriteHandler();
    private static bool n_CanWrite(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canWrite", "()Z", "GetCanWriteHandler")]
public abstract virtual bool CanWrite();
    private static Delegate GetCreateDirectory_Ljava_lang_String_Handler();
    private static IntPtr n_CreateDirectory_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_displayName);
    [RegisterAttribute("createDirectory", "(Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile;", "GetCreateDirectory_Ljava_lang_String_Handler")]
public abstract virtual DocumentFile CreateDirectory(string displayName);
    private static Delegate GetCreateFile_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_CreateFile_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_mimeType, IntPtr native_displayName);
    [RegisterAttribute("createFile", "(Ljava/lang/String;Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile;", "GetCreateFile_Ljava_lang_String_Ljava_lang_String_Handler")]
public abstract virtual DocumentFile CreateFile(string mimeType, string displayName);
    private static Delegate GetDeleteHandler();
    private static bool n_Delete(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("delete", "()Z", "GetDeleteHandler")]
public abstract virtual bool Delete();
    private static Delegate GetExistsHandler();
    private static bool n_Exists(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("exists", "()Z", "GetExistsHandler")]
public abstract virtual bool Exists();
    private static Delegate GetFindFile_Ljava_lang_String_Handler();
    private static IntPtr n_FindFile_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_displayName);
    [RegisterAttribute("findFile", "(Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile;", "GetFindFile_Ljava_lang_String_Handler")]
public virtual DocumentFile FindFile(string displayName);
    [RegisterAttribute("fromFile", "(Ljava/io/File;)Landroid/support/v4/provider/DocumentFile;", "")]
public static DocumentFile FromFile(File file);
    [RegisterAttribute("fromSingleUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/support/v4/provider/DocumentFile;", "")]
public static DocumentFile FromSingleUri(Context context, Uri singleUri);
    [RegisterAttribute("fromTreeUri", "(Landroid/content/Context;Landroid/net/Uri;)Landroid/support/v4/provider/DocumentFile;", "")]
public static DocumentFile FromTreeUri(Context context, Uri treeUri);
    [RegisterAttribute("isDocumentUri", "(Landroid/content/Context;Landroid/net/Uri;)Z", "")]
public static bool IsDocumentUri(Context context, Uri uri);
    private static Delegate GetLastModifiedHandler();
    private static long n_LastModified(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("lastModified", "()J", "GetLastModifiedHandler")]
public abstract virtual long LastModified();
    private static Delegate GetLengthHandler();
    private static long n_Length(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("length", "()J", "GetLengthHandler")]
public abstract virtual long Length();
    private static Delegate GetListFilesHandler();
    private static IntPtr n_ListFiles(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("listFiles", "()[Landroid/support/v4/provider/DocumentFile;", "GetListFilesHandler")]
public abstract virtual DocumentFile[] ListFiles();
    private static Delegate GetRenameTo_Ljava_lang_String_Handler();
    private static bool n_RenameTo_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_displayName);
    [RegisterAttribute("renameTo", "(Ljava/lang/String;)Z", "GetRenameTo_Ljava_lang_String_Handler")]
public abstract virtual bool RenameTo(string displayName);
}
[RegisterAttribute("android/support/v4/provider/DocumentFile")]
internal class Android.Support.V4.Provider.DocumentFileInvoker : DocumentFile {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public bool IsDirectory { get; }
    public bool IsFile { get; }
    public bool IsVirtual { get; }
    public string Name { get; }
    public string Type { get; }
    public Uri Uri { get; }
    public DocumentFileInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static DocumentFileInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isDirectory", "()Z", "GetIsDirectoryHandler")]
public virtual bool get_IsDirectory();
    [RegisterAttribute("isFile", "()Z", "GetIsFileHandler")]
public virtual bool get_IsFile();
    [RegisterAttribute("isVirtual", "()Z", "GetIsVirtualHandler")]
public virtual bool get_IsVirtual();
    [RegisterAttribute("getName", "()Ljava/lang/String;", "GetGetNameHandler")]
public virtual string get_Name();
    [RegisterAttribute("getType", "()Ljava/lang/String;", "GetGetTypeHandler")]
public virtual string get_Type();
    [RegisterAttribute("getUri", "()Landroid/net/Uri;", "GetGetUriHandler")]
public virtual Uri get_Uri();
    [RegisterAttribute("canRead", "()Z", "GetCanReadHandler")]
public virtual bool CanRead();
    [RegisterAttribute("canWrite", "()Z", "GetCanWriteHandler")]
public virtual bool CanWrite();
    [RegisterAttribute("createDirectory", "(Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile;", "GetCreateDirectory_Ljava_lang_String_Handler")]
public virtual DocumentFile CreateDirectory(string displayName);
    [RegisterAttribute("createFile", "(Ljava/lang/String;Ljava/lang/String;)Landroid/support/v4/provider/DocumentFile;", "GetCreateFile_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual DocumentFile CreateFile(string mimeType, string displayName);
    [RegisterAttribute("delete", "()Z", "GetDeleteHandler")]
public virtual bool Delete();
    [RegisterAttribute("exists", "()Z", "GetExistsHandler")]
public virtual bool Exists();
    [RegisterAttribute("lastModified", "()J", "GetLastModifiedHandler")]
public virtual long LastModified();
    [RegisterAttribute("length", "()J", "GetLengthHandler")]
public virtual long Length();
    [RegisterAttribute("listFiles", "()[Landroid/support/v4/provider/DocumentFile;", "GetListFilesHandler")]
public virtual DocumentFile[] ListFiles();
    [RegisterAttribute("renameTo", "(Ljava/lang/String;)Z", "GetRenameTo_Ljava_lang_String_Handler")]
public virtual bool RenameTo(string displayName);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_android_support_coreutils_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_coreutils_package(string klass);
}
