[RegisterAttribute("android/support/design/BuildConfig")]
public class Android.Support.Design.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    private static BuildConfig();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/BaselineLayout")]
public class Android.Support.Design.Internal.BaselineLayout : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_onLayout_ZIIII;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BaselineLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BaselineLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BaselineLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BaselineLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BaselineLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
}
[RegisterAttribute("android/support/design/internal/BottomNavigationItemView")]
public class Android.Support.Design.Internal.BottomNavigationItemView : FrameLayout {
    [RegisterAttribute("INVALID_ITEM_POSITION")]
public static int InvalidItemPosition;
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemData;
    private static Delegate cb_getItemPosition;
    private static Delegate cb_setItemPosition_I;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuItemImpl_I;
    private static Delegate cb_onCreateDrawableState_I;
    private static Delegate cb_prefersCondensedTitle;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setItemBackground_I;
    private static Delegate cb_setShiftingMode_Z;
    private static Delegate cb_setShortcut_ZC;
    private static Delegate cb_setTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_showsIcon;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public MenuItemImpl ItemData { get; }
    public int ItemPosition { get; public set; }
    protected BottomNavigationItemView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationItemView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationItemView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BottomNavigationItemView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BottomNavigationItemView();
    public sealed virtual void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemDataHandler();
    private static IntPtr n_GetItemData(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getItemData", "()Landroid/support/v7/view/menu/MenuItemImpl;", "GetGetItemDataHandler")]
public virtual MenuItemImpl get_ItemData();
    private static Delegate GetGetItemPositionHandler();
    private static int n_GetItemPosition(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemPosition_IHandler();
    private static void n_SetItemPosition_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getItemPosition", "()I", "GetGetItemPositionHandler")]
public virtual int get_ItemPosition();
    [RegisterAttribute("setItemPosition", "(I)V", "GetSetItemPosition_IHandler")]
public virtual void set_ItemPosition(int value);
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuItemImpl_I(IntPtr jnienv, IntPtr native__this, IntPtr native_itemData, int menuType);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuItemImpl;I)V", "GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler")]
public virtual void Initialize(MenuItemImpl itemData, int menuType);
    private static Delegate GetOnCreateDrawableState_IHandler();
    private static IntPtr n_OnCreateDrawableState_I(IntPtr jnienv, IntPtr native__this, int extraSpace);
    [RegisterAttribute("onCreateDrawableState", "(I)[I", "GetOnCreateDrawableState_IHandler")]
public virtual Int32[] OnCreateDrawableState(int extraSpace);
    private static Delegate GetPrefersCondensedTitleHandler();
    private static bool n_PrefersCondensedTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prefersCondensedTitle", "()Z", "GetPrefersCondensedTitleHandler")]
public virtual bool PrefersCondensedTitle();
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void SetChecked(bool checked);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetIcon(Drawable icon);
    private static Delegate GetSetIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("setIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetIconTintList(ColorStateList tint);
    private static Delegate GetSetItemBackground_IHandler();
    private static void n_SetItemBackground_I(IntPtr jnienv, IntPtr native__this, int background);
    [RegisterAttribute("setItemBackground", "(I)V", "GetSetItemBackground_IHandler")]
public virtual void SetItemBackground(int background);
    private static Delegate GetSetShiftingMode_ZHandler();
    private static void n_SetShiftingMode_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setShiftingMode", "(Z)V", "GetSetShiftingMode_ZHandler")]
public virtual void SetShiftingMode(bool enabled);
    private static Delegate GetSetShortcut_ZCHandler();
    private static void n_SetShortcut_ZC(IntPtr jnienv, IntPtr native__this, bool showShortcut, char shortcutKey);
    [RegisterAttribute("setShortcut", "(ZC)V", "GetSetShortcut_ZCHandler")]
public virtual void SetShortcut(bool showShortcut, char shortcutKey);
    private static Delegate GetSetTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("setTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTextColor(ColorStateList color);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetTitle(ICharSequence title);
    public void SetTitle(string title);
    private static Delegate GetShowsIconHandler();
    private static bool n_ShowsIcon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showsIcon", "()Z", "GetShowsIconHandler")]
public virtual bool ShowsIcon();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationMenu")]
public class Android.Support.Design.Internal.BottomNavigationMenu : MenuBuilder {
    [RegisterAttribute("MAX_ITEM_COUNT")]
public static int MaxItemCount;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BottomNavigationMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationMenu(Context context);
    private static BottomNavigationMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationMenuView")]
public class Android.Support.Design.Internal.BottomNavigationMenuView : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_getIconTintList;
    private static Delegate cb_setIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemBackgroundRes;
    private static Delegate cb_setItemBackgroundRes_I;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSelectedItemId;
    private static Delegate cb_getWindowAnimations;
    private static Delegate cb_buildMenuView;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuBuilder_;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_setPresenter_Landroid_support_design_internal_BottomNavigationPresenter_;
    private static Delegate cb_updateMenuView;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList IconTintList { get; public set; }
    public int ItemBackgroundRes { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public int SelectedItemId { get; }
    public int WindowAnimations { get; }
    protected BottomNavigationMenuView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationMenuView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationMenuView(Context context, IAttributeSet attrs);
    private static BottomNavigationMenuView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIconTintListHandler();
    private static IntPtr n_GetIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetIconTintListHandler")]
public virtual ColorStateList get_IconTintList();
    [RegisterAttribute("setIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_IconTintList(ColorStateList value);
    private static Delegate GetGetItemBackgroundResHandler();
    private static int n_GetItemBackgroundRes(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackgroundRes_IHandler();
    private static void n_SetItemBackgroundRes_I(IntPtr jnienv, IntPtr native__this, int background);
    [RegisterAttribute("getItemBackgroundRes", "()I", "GetGetItemBackgroundResHandler")]
public virtual int get_ItemBackgroundRes();
    [RegisterAttribute("setItemBackgroundRes", "(I)V", "GetSetItemBackgroundRes_IHandler")]
public virtual void set_ItemBackgroundRes(int value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetSelectedItemIdHandler();
    private static int n_GetSelectedItemId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSelectedItemId", "()I", "GetGetSelectedItemIdHandler")]
public virtual int get_SelectedItemId();
    private static Delegate GetGetWindowAnimationsHandler();
    private static int n_GetWindowAnimations(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowAnimations", "()I", "GetGetWindowAnimationsHandler")]
public virtual int get_WindowAnimations();
    private static Delegate GetBuildMenuViewHandler();
    private static void n_BuildMenuView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildMenuView", "()V", "GetBuildMenuViewHandler")]
public virtual void BuildMenuView();
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void Initialize(MenuBuilder menu);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private static Delegate GetSetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_Handler();
    private static void n_SetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_(IntPtr jnienv, IntPtr native__this, IntPtr native_presenter);
    [RegisterAttribute("setPresenter", "(Landroid/support/design/internal/BottomNavigationPresenter;)V", "GetSetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_Handler")]
public virtual void SetPresenter(BottomNavigationPresenter presenter);
    private static Delegate GetUpdateMenuViewHandler();
    private static void n_UpdateMenuView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("updateMenuView", "()V", "GetUpdateMenuViewHandler")]
public virtual void UpdateMenuView();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationPresenter")]
public class Android.Support.Design.Internal.BottomNavigationPresenter : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getId;
    private static Delegate cb_setId_I;
    private static Delegate cb_collapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_;
    private static Delegate cb_expandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_;
    private static Delegate cb_flagActionItems;
    private static Delegate cb_getMenuView_Landroid_view_ViewGroup_;
    private static Delegate cb_initForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_;
    private static Delegate cb_onCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_Z;
    private static Delegate cb_onRestoreInstanceState_Landroid_os_Parcelable_;
    private static Delegate cb_onSaveInstanceState;
    private static Delegate cb_onSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_;
    private static Delegate cb_setBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_;
    private static Delegate cb_setCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_;
    private static Delegate cb_setUpdateSuspended_Z;
    private static Delegate cb_updateMenuView_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Id { get; public set; }
    protected BottomNavigationPresenter(IntPtr javaReference, JniHandleOwnership transfer);
    private static BottomNavigationPresenter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetId_IHandler();
    private static void n_SetId_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    [RegisterAttribute("setId", "(I)V", "GetSetId_IHandler")]
public virtual void set_Id(int value);
    private static Delegate GetCollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler();
    private static bool n_CollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, IntPtr native_item);
    [RegisterAttribute("collapseItemActionView", "(Landroid/support/v7/view/menu/MenuBuilder;Landroid/support/v7/view/menu/MenuItemImpl;)Z", "GetCollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler")]
public virtual bool CollapseItemActionView(MenuBuilder menu, MenuItemImpl item);
    private static Delegate GetExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler();
    private static bool n_ExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, IntPtr native_item);
    [RegisterAttribute("expandItemActionView", "(Landroid/support/v7/view/menu/MenuBuilder;Landroid/support/v7/view/menu/MenuItemImpl;)Z", "GetExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler")]
public virtual bool ExpandItemActionView(MenuBuilder menu, MenuItemImpl item);
    private static Delegate GetFlagActionItemsHandler();
    private static bool n_FlagActionItems(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flagActionItems", "()Z", "GetFlagActionItemsHandler")]
public virtual bool FlagActionItems();
    private static Delegate GetGetMenuView_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_GetMenuView_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_root);
    [RegisterAttribute("getMenuView", "(Landroid/view/ViewGroup;)Landroid/support/v7/view/menu/MenuView;", "GetGetMenuView_Landroid_view_ViewGroup_Handler")]
public virtual IMenuView GetMenuView(ViewGroup root);
    private static Delegate GetInitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_InitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_menu);
    [RegisterAttribute("initForMenu", "(Landroid/content/Context;Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void InitForMenu(Context context, MenuBuilder menu);
    private static Delegate GetOnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_ZHandler();
    private static void n_OnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, bool allMenusAreClosing);
    [RegisterAttribute("onCloseMenu", "(Landroid/support/v7/view/menu/MenuBuilder;Z)V", "GetOnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_ZHandler")]
public virtual void OnCloseMenu(MenuBuilder menu, bool allMenusAreClosing);
    private static Delegate GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler();
    private static void n_OnRestoreInstanceState_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")]
public virtual void OnRestoreInstanceState(IParcelable state);
    private static Delegate GetOnSaveInstanceStateHandler();
    private static IntPtr n_OnSaveInstanceState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
public virtual IParcelable OnSaveInstanceState();
    private static Delegate GetOnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_Handler();
    private static bool n_OnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_subMenu);
    [RegisterAttribute("onSubMenuSelected", "(Landroid/support/v7/view/menu/SubMenuBuilder;)Z", "GetOnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_Handler")]
public virtual bool OnSubMenuSelected(SubMenuBuilder subMenu);
    private static Delegate GetSetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_Handler();
    private static void n_SetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_(IntPtr jnienv, IntPtr native__this, IntPtr native_menuView);
    [RegisterAttribute("setBottomNavigationMenuView", "(Landroid/support/design/internal/BottomNavigationMenuView;)V", "GetSetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_Handler")]
public virtual void SetBottomNavigationMenuView(BottomNavigationMenuView menuView);
    private static Delegate GetSetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_Handler();
    private static void n_SetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("setCallback", "(Landroid/support/v7/view/menu/MenuPresenter$Callback;)V", "GetSetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_Handler")]
public virtual void SetCallback(IMenuPresenterCallback cb);
    private static Delegate GetSetUpdateSuspended_ZHandler();
    private static void n_SetUpdateSuspended_Z(IntPtr jnienv, IntPtr native__this, bool updateSuspended);
    [RegisterAttribute("setUpdateSuspended", "(Z)V", "GetSetUpdateSuspended_ZHandler")]
public virtual void SetUpdateSuspended(bool updateSuspended);
    private static Delegate GetUpdateMenuView_ZHandler();
    private static void n_UpdateMenuView_Z(IntPtr jnienv, IntPtr native__this, bool cleared);
    [RegisterAttribute("updateMenuView", "(Z)V", "GetUpdateMenuView_ZHandler")]
public virtual void UpdateMenuView(bool cleared);
}
[RegisterAttribute("android/support/design/internal/ForegroundLinearLayout")]
public class Android.Support.Design.Internal.ForegroundLinearLayout : LinearLayoutCompat {
    internal static JniPeerMembers _members;
    [RegisterAttribute("mForegroundInPadding")]
protected bool MForegroundInPadding { get; protected set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ForegroundLinearLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ForegroundLinearLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ForegroundLinearLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public ForegroundLinearLayout(Context context, IAttributeSet attrs, int defStyle);
    private static ForegroundLinearLayout();
    protected bool get_MForegroundInPadding();
    protected void set_MForegroundInPadding(bool value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/NavigationMenu")]
public class Android.Support.Design.Internal.NavigationMenu : MenuBuilder {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NavigationMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenu(Context context);
    private static NavigationMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/NavigationMenuItemView")]
public class Android.Support.Design.Internal.NavigationMenuItemView : ForegroundLinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemData;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuItemImpl_I;
    private static Delegate cb_prefersCondensedTitle;
    private static Delegate cb_recycle;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setNeedsEmptyIcon_Z;
    private static Delegate cb_setShortcut_ZC;
    private static Delegate cb_setTextAppearance_I;
    private static Delegate cb_setTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_showsIcon;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public MenuItemImpl ItemData { get; }
    protected NavigationMenuItemView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenuItemView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationMenuItemView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationMenuItemView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationMenuItemView();
    public sealed virtual void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemDataHandler();
    private static IntPtr n_GetItemData(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getItemData", "()Landroid/support/v7/view/menu/MenuItemImpl;", "GetGetItemDataHandler")]
public virtual MenuItemImpl get_ItemData();
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuItemImpl_I(IntPtr jnienv, IntPtr native__this, IntPtr native_itemData, int menuType);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuItemImpl;I)V", "GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler")]
public virtual void Initialize(MenuItemImpl itemData, int menuType);
    private static Delegate GetPrefersCondensedTitleHandler();
    private static bool n_PrefersCondensedTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prefersCondensedTitle", "()Z", "GetPrefersCondensedTitleHandler")]
public virtual bool PrefersCondensedTitle();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void SetChecked(bool checked);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetIcon(Drawable icon);
    private static Delegate GetSetNeedsEmptyIcon_ZHandler();
    private static void n_SetNeedsEmptyIcon_Z(IntPtr jnienv, IntPtr native__this, bool needsEmptyIcon);
    [RegisterAttribute("setNeedsEmptyIcon", "(Z)V", "GetSetNeedsEmptyIcon_ZHandler")]
public virtual void SetNeedsEmptyIcon(bool needsEmptyIcon);
    private static Delegate GetSetShortcut_ZCHandler();
    private static void n_SetShortcut_ZC(IntPtr jnienv, IntPtr native__this, bool showShortcut, char shortcutKey);
    [RegisterAttribute("setShortcut", "(ZC)V", "GetSetShortcut_ZCHandler")]
public virtual void SetShortcut(bool showShortcut, char shortcutKey);
    private static Delegate GetSetTextAppearance_IHandler();
    private static void n_SetTextAppearance_I(IntPtr jnienv, IntPtr native__this, int textAppearance);
    [RegisterAttribute("setTextAppearance", "(I)V", "GetSetTextAppearance_IHandler")]
public virtual void SetTextAppearance(int textAppearance);
    private static Delegate GetSetTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTextColor(ColorStateList colors);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetTitle(ICharSequence title);
    public void SetTitle(string title);
    private static Delegate GetShowsIconHandler();
    private static bool n_ShowsIcon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showsIcon", "()Z", "GetShowsIconHandler")]
public virtual bool ShowsIcon();
}
[RegisterAttribute("android/support/design/internal/NavigationMenuView")]
public class Android.Support.Design.Internal.NavigationMenuView : RecyclerView {
    internal static JniPeerMembers _members;
    private static Delegate cb_getWindowAnimations;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuBuilder_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int WindowAnimations { get; }
    protected NavigationMenuView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenuView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationMenuView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationMenuView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationMenuView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetWindowAnimationsHandler();
    private static int n_GetWindowAnimations(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowAnimations", "()I", "GetGetWindowAnimationsHandler")]
public virtual int get_WindowAnimations();
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void Initialize(MenuBuilder menu);
}
[RegisterAttribute("android/support/design/internal/NavigationSubMenu")]
public class Android.Support.Design.Internal.NavigationSubMenu : SubMenuBuilder {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NavigationSubMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/design/internal/NavigationMenu;Landroid/support/v7/view/menu/MenuItemImpl;)V", "")]
public NavigationSubMenu(Context context, NavigationMenu menu, MenuItemImpl item);
    private static NavigationSubMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/ParcelableSparseArray")]
public class Android.Support.Design.Internal.ParcelableSparseArray : SparseArray {
    internal static JniPeerMembers _members;
    private static Delegate cb_describeContents;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ParcelableSparseArray(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)V", "")]
public ParcelableSparseArray(Parcel source, ClassLoader loader);
    private static ParcelableSparseArray();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parcel, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel parcel, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/design/internal/ScrimInsetsFrameLayout")]
public class Android.Support.Design.Internal.ScrimInsetsFrameLayout : FrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_onInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ScrimInsetsFrameLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ScrimInsetsFrameLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ScrimInsetsFrameLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public ScrimInsetsFrameLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static ScrimInsetsFrameLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_Handler();
    private static void n_OnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_insets);
    [RegisterAttribute("onInsetsChanged", "(Landroid/support/v4/view/WindowInsetsCompat;)V", "GetOnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_Handler")]
protected virtual void OnInsetsChanged(WindowInsetsCompat insets);
}
[RegisterAttribute("android/support/design/internal/SnackbarContentLayout")]
public class Android.Support.Design.Internal.SnackbarContentLayout : LinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getActionView;
    private static Delegate cb_getMessageView;
    private static Delegate cb_animateContentIn_II;
    private static Delegate cb_animateContentOut_II;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Button ActionView { get; }
    public TextView MessageView { get; }
    protected SnackbarContentLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SnackbarContentLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SnackbarContentLayout(Context context, IAttributeSet attrs);
    private static SnackbarContentLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetActionViewHandler();
    private static IntPtr n_GetActionView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActionView", "()Landroid/widget/Button;", "GetGetActionViewHandler")]
public virtual Button get_ActionView();
    private static Delegate GetGetMessageViewHandler();
    private static IntPtr n_GetMessageView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMessageView", "()Landroid/widget/TextView;", "GetGetMessageViewHandler")]
public virtual TextView get_MessageView();
    private static Delegate GetAnimateContentIn_IIHandler();
    private static void n_AnimateContentIn_II(IntPtr jnienv, IntPtr native__this, int delay, int duration);
    [RegisterAttribute("animateContentIn", "(II)V", "GetAnimateContentIn_IIHandler")]
public virtual void AnimateContentIn(int delay, int duration);
    private static Delegate GetAnimateContentOut_IIHandler();
    private static void n_AnimateContentOut_II(IntPtr jnienv, IntPtr native__this, int delay, int duration);
    [RegisterAttribute("animateContentOut", "(II)V", "GetAnimateContentOut_IIHandler")]
public virtual void AnimateContentOut(int delay, int duration);
}
[RegisterAttribute("android/support/design/widget/AppBarLayout")]
public class Android.Support.Design.Widget.AppBarLayout : LinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getTargetElevation;
    private static Delegate cb_setTargetElevation_F;
    private static Delegate cb_addOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_;
    private static Delegate cb_removeOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_;
    private static Delegate cb_setExpanded_Z;
    private static Delegate cb_setExpanded_ZZ;
    private WeakReference weak_implementor_AddOnOffsetChangedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public float TargetElevation { get; public set; }
    public int TotalScrollRange { get; }
    protected AppBarLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public AppBarLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public AppBarLayout(Context context, IAttributeSet attrs);
    private static AppBarLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetTargetElevationHandler();
    private static float n_GetTargetElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTargetElevation_FHandler();
    private static void n_SetTargetElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getTargetElevation", "()F", "GetGetTargetElevationHandler")]
public virtual float get_TargetElevation();
    [RegisterAttribute("setTargetElevation", "(F)V", "GetSetTargetElevation_FHandler")]
public virtual void set_TargetElevation(float value);
    [RegisterAttribute("getTotalScrollRange", "()I", "GetGetTotalScrollRangeHandler")]
public int get_TotalScrollRange();
    private static Delegate GetAddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler();
    private static void n_AddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnOffsetChangedListener", "(Landroid/support/design/widget/AppBarLayout$OnOffsetChangedListener;)V", "GetAddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler")]
public virtual void AddOnOffsetChangedListener(IOnOffsetChangedListener listener);
    private static Delegate GetRemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler();
    private static void n_RemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnOffsetChangedListener", "(Landroid/support/design/widget/AppBarLayout$OnOffsetChangedListener;)V", "GetRemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler")]
public virtual void RemoveOnOffsetChangedListener(IOnOffsetChangedListener listener);
    private static Delegate GetSetExpanded_ZHandler();
    private static void n_SetExpanded_Z(IntPtr jnienv, IntPtr native__this, bool expanded);
    [RegisterAttribute("setExpanded", "(Z)V", "GetSetExpanded_ZHandler")]
public virtual void SetExpanded(bool expanded);
    private static Delegate GetSetExpanded_ZZHandler();
    private static void n_SetExpanded_ZZ(IntPtr jnienv, IntPtr native__this, bool expanded, bool animate);
    [RegisterAttribute("setExpanded", "(ZZ)V", "GetSetExpanded_ZZHandler")]
public virtual void SetExpanded(bool expanded, bool animate);
    public void add_OffsetChanged(EventHandler`1<OffsetChangedEventArgs> value);
    public void remove_OffsetChanged(EventHandler`1<OffsetChangedEventArgs> value);
    private IOnOffsetChangedListenerImplementor __CreateIOnOffsetChangedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/BaseTransientBottomBar")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.Design.Widget.BaseTransientBottomBar : Object {
    [RegisterAttribute("LENGTH_INDEFINITE")]
public static int LengthIndefinite;
    [RegisterAttribute("LENGTH_LONG")]
public static int LengthLong;
    [RegisterAttribute("LENGTH_SHORT")]
public static int LengthShort;
    internal static JniPeerMembers _members;
    private static Delegate cb_getContext;
    private static Delegate cb_getDuration;
    private static Delegate cb_isShown;
    private static Delegate cb_isShownOrQueued;
    private static Delegate cb_getView;
    private static Delegate cb_addCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_;
    private static Delegate cb_dismiss;
    private static Delegate cb_removeCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_;
    private static Delegate cb_setDuration_I;
    private static Delegate cb_show;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Context Context { get; }
    public int Duration { get; }
    public bool IsShown { get; }
    public bool IsShownOrQueued { get; }
    public View View { get; }
    protected BaseTransientBottomBar(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/support/design/widget/BaseTransientBottomBar$ContentViewCallback;)V", "")]
protected BaseTransientBottomBar(ViewGroup parent, View content, IContentViewCallback contentViewCallback);
    private static BaseTransientBottomBar();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetGetDurationHandler();
    private static int n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()I", "GetGetDurationHandler")]
public virtual int get_Duration();
    private static Delegate GetIsShownHandler();
    private static bool n_IsShown(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isShown", "()Z", "GetIsShownHandler")]
public virtual bool get_IsShown();
    private static Delegate GetIsShownOrQueuedHandler();
    private static bool n_IsShownOrQueued(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isShownOrQueued", "()Z", "GetIsShownOrQueuedHandler")]
public virtual bool get_IsShownOrQueued();
    private static Delegate GetGetViewHandler();
    private static IntPtr n_GetView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getView", "()Landroid/view/View;", "GetGetViewHandler")]
public virtual View get_View();
    private static Delegate GetAddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler();
    private static IntPtr n_AddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("addCallback", "(Landroid/support/design/widget/BaseTransientBottomBar$BaseCallback;)Landroid/support/design/widget/BaseTransientBottomBar;", "GetAddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler")]
public virtual Object AddCallback(BaseCallback callback);
    private static Delegate GetDismissHandler();
    private static void n_Dismiss(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("dismiss", "()V", "GetDismissHandler")]
public virtual void Dismiss();
    private static Delegate GetRemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler();
    private static IntPtr n_RemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("removeCallback", "(Landroid/support/design/widget/BaseTransientBottomBar$BaseCallback;)Landroid/support/design/widget/BaseTransientBottomBar;", "GetRemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler")]
public virtual Object RemoveCallback(BaseCallback callback);
    private static Delegate GetSetDuration_IHandler();
    private static IntPtr n_SetDuration_I(IntPtr jnienv, IntPtr native__this, int duration);
    [RegisterAttribute("setDuration", "(I)Landroid/support/design/widget/BaseTransientBottomBar;", "GetSetDuration_IHandler")]
public virtual Object SetDuration(int duration);
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
}
[RegisterAttribute("android/support/design/widget/BaseTransientBottomBar")]
internal class Android.Support.Design.Widget.BaseTransientBottomBarInvoker : BaseTransientBottomBar {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public BaseTransientBottomBarInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseTransientBottomBarInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/BottomNavigationView")]
public class Android.Support.Design.Widget.BottomNavigationView : FrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemBackgroundResource;
    private static Delegate cb_setItemBackgroundResource_I;
    private static Delegate cb_getItemIconTintList;
    private static Delegate cb_setItemIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getMaxItemCount;
    private static Delegate cb_getMenu;
    private static Delegate cb_getSelectedItemId;
    private static Delegate cb_setSelectedItemId_I;
    private static Delegate cb_inflateMenu_I;
    private static Delegate cb_setOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_;
    private static Delegate cb_setOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_;
    private WeakReference weak_implementor_SetOnNavigationItemReselectedListener;
    private WeakReference weak_implementor_SetOnNavigationItemSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ItemBackgroundResource { get; public set; }
    public ColorStateList ItemIconTintList { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public int MaxItemCount { get; }
    public IMenu Menu { get; }
    public int SelectedItemId { get; public set; }
    protected BottomNavigationView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BottomNavigationView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BottomNavigationView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemBackgroundResourceHandler();
    private static int n_GetItemBackgroundResource(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackgroundResource_IHandler();
    private static void n_SetItemBackgroundResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("getItemBackgroundResource", "()I", "GetGetItemBackgroundResourceHandler")]
public virtual int get_ItemBackgroundResource();
    [RegisterAttribute("setItemBackgroundResource", "(I)V", "GetSetItemBackgroundResource_IHandler")]
public virtual void set_ItemBackgroundResource(int value);
    private static Delegate GetGetItemIconTintListHandler();
    private static IntPtr n_GetItemIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getItemIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetItemIconTintListHandler")]
public virtual ColorStateList get_ItemIconTintList();
    [RegisterAttribute("setItemIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemIconTintList(ColorStateList value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetMaxItemCountHandler();
    private static int n_GetMaxItemCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxItemCount", "()I", "GetGetMaxItemCountHandler")]
public virtual int get_MaxItemCount();
    private static Delegate GetGetMenuHandler();
    private static IntPtr n_GetMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMenu", "()Landroid/view/Menu;", "GetGetMenuHandler")]
public virtual IMenu get_Menu();
    private static Delegate GetGetSelectedItemIdHandler();
    private static int n_GetSelectedItemId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSelectedItemId_IHandler();
    private static void n_SetSelectedItemId_I(IntPtr jnienv, IntPtr native__this, int itemId);
    [RegisterAttribute("getSelectedItemId", "()I", "GetGetSelectedItemIdHandler")]
public virtual int get_SelectedItemId();
    [RegisterAttribute("setSelectedItemId", "(I)V", "GetSetSelectedItemId_IHandler")]
public virtual void set_SelectedItemId(int value);
    private static Delegate GetInflateMenu_IHandler();
    private static void n_InflateMenu_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("inflateMenu", "(I)V", "GetInflateMenu_IHandler")]
public virtual void InflateMenu(int resId);
    private static Delegate GetSetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_Handler();
    private static void n_SetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnNavigationItemReselectedListener", "(Landroid/support/design/widget/BottomNavigationView$OnNavigationItemReselectedListener;)V", "GetSetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_Handler")]
public virtual void SetOnNavigationItemReselectedListener(IOnNavigationItemReselectedListener listener);
    private static Delegate GetSetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_Handler();
    private static void n_SetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnNavigationItemSelectedListener", "(Landroid/support/design/widget/BottomNavigationView$OnNavigationItemSelectedListener;)V", "GetSetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_Handler")]
public virtual void SetOnNavigationItemSelectedListener(IOnNavigationItemSelectedListener listener);
    public void add_NavigationItemReselected(EventHandler`1<NavigationItemReselectedEventArgs> value);
    public void remove_NavigationItemReselected(EventHandler`1<NavigationItemReselectedEventArgs> value);
    private IOnNavigationItemReselectedListenerImplementor __CreateIOnNavigationItemReselectedListenerImplementor();
    public void add_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    public void remove_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    private IOnNavigationItemSelectedListenerImplementor __CreateIOnNavigationItemSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/BottomSheetBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.BottomSheetBehavior : Behavior {
    [RegisterAttribute("PEEK_HEIGHT_AUTO")]
public static int PeekHeightAuto;
    [RegisterAttribute("STATE_COLLAPSED")]
public static int StateCollapsed;
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_EXPANDED")]
public static int StateExpanded;
    [RegisterAttribute("STATE_HIDDEN")]
public static int StateHidden;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    internal static JniPeerMembers _members;
    private static Delegate cb_isHideable;
    private static Delegate cb_setHideable_Z;
    private static Delegate cb_getSkipCollapsed;
    private static Delegate cb_setSkipCollapsed_Z;
    private static Delegate cb_setBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Hideable { get; public set; }
    public int PeekHeight { get; public set; }
    public bool SkipCollapsed { get; public set; }
    public int State { get; public set; }
    protected BottomSheetBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomSheetBehavior(Context context, IAttributeSet attrs);
    private static BottomSheetBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsHideableHandler();
    private static bool n_IsHideable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideable_ZHandler();
    private static void n_SetHideable_Z(IntPtr jnienv, IntPtr native__this, bool hideable);
    [RegisterAttribute("isHideable", "()Z", "GetIsHideableHandler")]
public virtual bool get_Hideable();
    [RegisterAttribute("setHideable", "(Z)V", "GetSetHideable_ZHandler")]
public virtual void set_Hideable(bool value);
    [RegisterAttribute("getPeekHeight", "()I", "GetGetPeekHeightHandler")]
public int get_PeekHeight();
    [RegisterAttribute("setPeekHeight", "(I)V", "GetSetPeekHeight_IHandler")]
public void set_PeekHeight(int value);
    private static Delegate GetGetSkipCollapsedHandler();
    private static bool n_GetSkipCollapsed(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSkipCollapsed_ZHandler();
    private static void n_SetSkipCollapsed_Z(IntPtr jnienv, IntPtr native__this, bool skipCollapsed);
    [RegisterAttribute("getSkipCollapsed", "()Z", "GetGetSkipCollapsedHandler")]
public virtual bool get_SkipCollapsed();
    [RegisterAttribute("setSkipCollapsed", "(Z)V", "GetSetSkipCollapsed_ZHandler")]
public virtual void set_SkipCollapsed(bool value);
    [RegisterAttribute("getState", "()I", "GetGetStateHandler")]
public int get_State();
    [RegisterAttribute("setState", "(I)V", "GetSetState_IHandler")]
public void set_State(int value);
    [RegisterAttribute("from", "(Landroid/view/View;)Landroid/support/design/widget/BottomSheetBehavior;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static BottomSheetBehavior From(Object view);
    private static Delegate GetSetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_Handler();
    private static void n_SetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("setBottomSheetCallback", "(Landroid/support/design/widget/BottomSheetBehavior$BottomSheetCallback;)V", "GetSetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_Handler")]
public virtual void SetBottomSheetCallback(BottomSheetCallback callback);
}
[RegisterAttribute("android/support/design/widget/BottomSheetDialog")]
public class Android.Support.Design.Widget.BottomSheetDialog : AppCompatDialog {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BottomSheetDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomSheetDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V", "")]
protected BottomSheetDialog(Context context, bool cancelable, IDialogInterfaceOnCancelListener cancelListener);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public BottomSheetDialog(Context context, int theme);
    private static BottomSheetDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/BottomSheetDialogFragment")]
public class Android.Support.Design.Widget.BottomSheetDialogFragment : AppCompatDialogFragment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BottomSheetDialogFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static BottomSheetDialogFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/CheckableImageButton")]
public class Android.Support.Design.Widget.CheckableImageButton : AppCompatImageButton {
    internal static JniPeerMembers _members;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_toggle;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Checked { get; public set; }
    protected CheckableImageButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CheckableImageButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CheckableImageButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public CheckableImageButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static CheckableImageButton();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    private static Delegate GetToggleHandler();
    private static void n_Toggle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toggle", "()V", "GetToggleHandler")]
public virtual void Toggle();
}
[RegisterAttribute("android/support/design/widget/CollapsingToolbarLayout")]
public class Android.Support.Design.Widget.CollapsingToolbarLayout : FrameLayout {
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCollapsedTitleGravity;
    private static Delegate cb_setCollapsedTitleGravity_I;
    private static Delegate cb_getCollapsedTitleTypeface;
    private static Delegate cb_setCollapsedTitleTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_getContentScrim;
    private static Delegate cb_setContentScrim_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getExpandedTitleGravity;
    private static Delegate cb_setExpandedTitleGravity_I;
    private static Delegate cb_getExpandedTitleMarginBottom;
    private static Delegate cb_setExpandedTitleMarginBottom_I;
    private static Delegate cb_getExpandedTitleMarginEnd;
    private static Delegate cb_setExpandedTitleMarginEnd_I;
    private static Delegate cb_getExpandedTitleMarginStart;
    private static Delegate cb_setExpandedTitleMarginStart_I;
    private static Delegate cb_getExpandedTitleMarginTop;
    private static Delegate cb_setExpandedTitleMarginTop_I;
    private static Delegate cb_getExpandedTitleTypeface;
    private static Delegate cb_setExpandedTitleTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_getScrimAnimationDuration;
    private static Delegate cb_setScrimAnimationDuration_J;
    private static Delegate cb_getScrimVisibleHeightTrigger;
    private static Delegate cb_setScrimVisibleHeightTrigger_I;
    private static Delegate cb_getStatusBarScrim;
    private static Delegate cb_setStatusBarScrim_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getTitle;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_isTitleEnabled;
    private static Delegate cb_setTitleEnabled_Z;
    private static Delegate cb_setCollapsedTitleTextAppearance_I;
    private static Delegate cb_setCollapsedTitleTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setCollapsedTitleTextColor_I;
    private static Delegate cb_setContentScrimColor_I;
    private static Delegate cb_setContentScrimResource_I;
    private static Delegate cb_setExpandedTitleColor_I;
    private static Delegate cb_setExpandedTitleMargin_IIII;
    private static Delegate cb_setExpandedTitleTextAppearance_I;
    private static Delegate cb_setExpandedTitleTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setScrimsShown_Z;
    private static Delegate cb_setScrimsShown_ZZ;
    private static Delegate cb_setStatusBarScrimColor_I;
    private static Delegate cb_setStatusBarScrimResource_I;
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CollapsedTitleGravity { get; public set; }
    public Typeface CollapsedTitleTypeface { get; public set; }
    public Drawable ContentScrim { get; public set; }
    public int ExpandedTitleGravity { get; public set; }
    public int ExpandedTitleMarginBottom { get; public set; }
    public int ExpandedTitleMarginEnd { get; public set; }
    public int ExpandedTitleMarginStart { get; public set; }
    public int ExpandedTitleMarginTop { get; public set; }
    public Typeface ExpandedTitleTypeface { get; public set; }
    public long ScrimAnimationDuration { get; public set; }
    public int ScrimVisibleHeightTrigger { get; public set; }
    public Drawable StatusBarScrim { get; public set; }
    public ICharSequence TitleFormatted { get; public set; }
    public string Title { get; public set; }
    public bool TitleEnabled { get; public set; }
    protected CollapsingToolbarLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CollapsingToolbarLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CollapsingToolbarLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public CollapsingToolbarLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static CollapsingToolbarLayout();
    public void SetTitle(string title);
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_visibility);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates visibility);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCollapsedTitleGravityHandler();
    private static int n_GetCollapsedTitleGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCollapsedTitleGravity_IHandler();
    private static void n_SetCollapsedTitleGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getCollapsedTitleGravity", "()I", "GetGetCollapsedTitleGravityHandler")]
public virtual int get_CollapsedTitleGravity();
    [RegisterAttribute("setCollapsedTitleGravity", "(I)V", "GetSetCollapsedTitleGravity_IHandler")]
public virtual void set_CollapsedTitleGravity(int value);
    private static Delegate GetGetCollapsedTitleTypefaceHandler();
    private static IntPtr n_GetCollapsedTitleTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCollapsedTitleTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetCollapsedTitleTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getCollapsedTitleTypeface", "()Landroid/graphics/Typeface;", "GetGetCollapsedTitleTypefaceHandler")]
public virtual Typeface get_CollapsedTitleTypeface();
    [RegisterAttribute("setCollapsedTitleTypeface", "(Landroid/graphics/Typeface;)V", "GetSetCollapsedTitleTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_CollapsedTitleTypeface(Typeface value);
    private static Delegate GetGetContentScrimHandler();
    private static IntPtr n_GetContentScrim(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContentScrim_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetContentScrim_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getContentScrim", "()Landroid/graphics/drawable/Drawable;", "GetGetContentScrimHandler")]
public virtual Drawable get_ContentScrim();
    [RegisterAttribute("setContentScrim", "(Landroid/graphics/drawable/Drawable;)V", "GetSetContentScrim_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ContentScrim(Drawable value);
    private static Delegate GetGetExpandedTitleGravityHandler();
    private static int n_GetExpandedTitleGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleGravity_IHandler();
    private static void n_SetExpandedTitleGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getExpandedTitleGravity", "()I", "GetGetExpandedTitleGravityHandler")]
public virtual int get_ExpandedTitleGravity();
    [RegisterAttribute("setExpandedTitleGravity", "(I)V", "GetSetExpandedTitleGravity_IHandler")]
public virtual void set_ExpandedTitleGravity(int value);
    private static Delegate GetGetExpandedTitleMarginBottomHandler();
    private static int n_GetExpandedTitleMarginBottom(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginBottom_IHandler();
    private static void n_SetExpandedTitleMarginBottom_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginBottom", "()I", "GetGetExpandedTitleMarginBottomHandler")]
public virtual int get_ExpandedTitleMarginBottom();
    [RegisterAttribute("setExpandedTitleMarginBottom", "(I)V", "GetSetExpandedTitleMarginBottom_IHandler")]
public virtual void set_ExpandedTitleMarginBottom(int value);
    private static Delegate GetGetExpandedTitleMarginEndHandler();
    private static int n_GetExpandedTitleMarginEnd(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginEnd_IHandler();
    private static void n_SetExpandedTitleMarginEnd_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginEnd", "()I", "GetGetExpandedTitleMarginEndHandler")]
public virtual int get_ExpandedTitleMarginEnd();
    [RegisterAttribute("setExpandedTitleMarginEnd", "(I)V", "GetSetExpandedTitleMarginEnd_IHandler")]
public virtual void set_ExpandedTitleMarginEnd(int value);
    private static Delegate GetGetExpandedTitleMarginStartHandler();
    private static int n_GetExpandedTitleMarginStart(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginStart_IHandler();
    private static void n_SetExpandedTitleMarginStart_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginStart", "()I", "GetGetExpandedTitleMarginStartHandler")]
public virtual int get_ExpandedTitleMarginStart();
    [RegisterAttribute("setExpandedTitleMarginStart", "(I)V", "GetSetExpandedTitleMarginStart_IHandler")]
public virtual void set_ExpandedTitleMarginStart(int value);
    private static Delegate GetGetExpandedTitleMarginTopHandler();
    private static int n_GetExpandedTitleMarginTop(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginTop_IHandler();
    private static void n_SetExpandedTitleMarginTop_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginTop", "()I", "GetGetExpandedTitleMarginTopHandler")]
public virtual int get_ExpandedTitleMarginTop();
    [RegisterAttribute("setExpandedTitleMarginTop", "(I)V", "GetSetExpandedTitleMarginTop_IHandler")]
public virtual void set_ExpandedTitleMarginTop(int value);
    private static Delegate GetGetExpandedTitleTypefaceHandler();
    private static IntPtr n_GetExpandedTitleTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetExpandedTitleTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getExpandedTitleTypeface", "()Landroid/graphics/Typeface;", "GetGetExpandedTitleTypefaceHandler")]
public virtual Typeface get_ExpandedTitleTypeface();
    [RegisterAttribute("setExpandedTitleTypeface", "(Landroid/graphics/Typeface;)V", "GetSetExpandedTitleTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_ExpandedTitleTypeface(Typeface value);
    private static Delegate GetGetScrimAnimationDurationHandler();
    private static long n_GetScrimAnimationDuration(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrimAnimationDuration_JHandler();
    private static void n_SetScrimAnimationDuration_J(IntPtr jnienv, IntPtr native__this, long duration);
    [RegisterAttribute("getScrimAnimationDuration", "()J", "GetGetScrimAnimationDurationHandler")]
public virtual long get_ScrimAnimationDuration();
    [RegisterAttribute("setScrimAnimationDuration", "(J)V", "GetSetScrimAnimationDuration_JHandler")]
public virtual void set_ScrimAnimationDuration(long value);
    private static Delegate GetGetScrimVisibleHeightTriggerHandler();
    private static int n_GetScrimVisibleHeightTrigger(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrimVisibleHeightTrigger_IHandler();
    private static void n_SetScrimVisibleHeightTrigger_I(IntPtr jnienv, IntPtr native__this, int height);
    [RegisterAttribute("getScrimVisibleHeightTrigger", "()I", "GetGetScrimVisibleHeightTriggerHandler")]
public virtual int get_ScrimVisibleHeightTrigger();
    [RegisterAttribute("setScrimVisibleHeightTrigger", "(I)V", "GetSetScrimVisibleHeightTrigger_IHandler")]
public virtual void set_ScrimVisibleHeightTrigger(int value);
    private static Delegate GetGetStatusBarScrimHandler();
    private static IntPtr n_GetStatusBarScrim(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStatusBarScrim_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetStatusBarScrim_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getStatusBarScrim", "()Landroid/graphics/drawable/Drawable;", "GetGetStatusBarScrimHandler")]
public virtual Drawable get_StatusBarScrim();
    [RegisterAttribute("setStatusBarScrim", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStatusBarScrim_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_StatusBarScrim(Drawable value);
    private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")]
public virtual ICharSequence get_TitleFormatted();
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void set_TitleFormatted(ICharSequence value);
    public string get_Title();
    public void set_Title(string value);
    private static Delegate GetIsTitleEnabledHandler();
    private static bool n_IsTitleEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTitleEnabled_ZHandler();
    private static void n_SetTitleEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isTitleEnabled", "()Z", "GetIsTitleEnabledHandler")]
public virtual bool get_TitleEnabled();
    [RegisterAttribute("setTitleEnabled", "(Z)V", "GetSetTitleEnabled_ZHandler")]
public virtual void set_TitleEnabled(bool value);
    private static Delegate GetSetCollapsedTitleTextAppearance_IHandler();
    private static void n_SetCollapsedTitleTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setCollapsedTitleTextAppearance", "(I)V", "GetSetCollapsedTitleTextAppearance_IHandler")]
public virtual void SetCollapsedTitleTextAppearance(int resId);
    private static Delegate GetSetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setCollapsedTitleTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetCollapsedTitleTextColor(ColorStateList colors);
    private static Delegate GetSetCollapsedTitleTextColor_IHandler();
    private static void n_SetCollapsedTitleTextColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setCollapsedTitleTextColor", "(I)V", "GetSetCollapsedTitleTextColor_IHandler")]
public virtual void SetCollapsedTitleTextColor(int color);
    private static Delegate GetSetContentScrimColor_IHandler();
    private static void n_SetContentScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setContentScrimColor", "(I)V", "GetSetContentScrimColor_IHandler")]
public virtual void SetContentScrimColor(int color);
    private static Delegate GetSetContentScrimResource_IHandler();
    private static void n_SetContentScrimResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setContentScrimResource", "(I)V", "GetSetContentScrimResource_IHandler")]
public virtual void SetContentScrimResource(int resId);
    private static Delegate GetSetExpandedTitleColor_IHandler();
    private static void n_SetExpandedTitleColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setExpandedTitleColor", "(I)V", "GetSetExpandedTitleColor_IHandler")]
public virtual void SetExpandedTitleColor(int color);
    private static Delegate GetSetExpandedTitleMargin_IIIIHandler();
    private static void n_SetExpandedTitleMargin_IIII(IntPtr jnienv, IntPtr native__this, int start, int top, int end, int bottom);
    [RegisterAttribute("setExpandedTitleMargin", "(IIII)V", "GetSetExpandedTitleMargin_IIIIHandler")]
public virtual void SetExpandedTitleMargin(int start, int top, int end, int bottom);
    private static Delegate GetSetExpandedTitleTextAppearance_IHandler();
    private static void n_SetExpandedTitleTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setExpandedTitleTextAppearance", "(I)V", "GetSetExpandedTitleTextAppearance_IHandler")]
public virtual void SetExpandedTitleTextAppearance(int resId);
    private static Delegate GetSetExpandedTitleTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetExpandedTitleTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setExpandedTitleTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetExpandedTitleTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetExpandedTitleTextColor(ColorStateList colors);
    private static Delegate GetSetScrimsShown_ZHandler();
    private static void n_SetScrimsShown_Z(IntPtr jnienv, IntPtr native__this, bool shown);
    [RegisterAttribute("setScrimsShown", "(Z)V", "GetSetScrimsShown_ZHandler")]
public virtual void SetScrimsShown(bool shown);
    private static Delegate GetSetScrimsShown_ZZHandler();
    private static void n_SetScrimsShown_ZZ(IntPtr jnienv, IntPtr native__this, bool shown, bool animate);
    [RegisterAttribute("setScrimsShown", "(ZZ)V", "GetSetScrimsShown_ZZHandler")]
public virtual void SetScrimsShown(bool shown, bool animate);
    private static Delegate GetSetStatusBarScrimColor_IHandler();
    private static void n_SetStatusBarScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setStatusBarScrimColor", "(I)V", "GetSetStatusBarScrimColor_IHandler")]
public virtual void SetStatusBarScrimColor(int color);
    private static Delegate GetSetStatusBarScrimResource_IHandler();
    private static void n_SetStatusBarScrimResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setStatusBarScrimResource", "(I)V", "GetSetStatusBarScrimResource_IHandler")]
public virtual void SetStatusBarScrimResource(int resId);
}
[RegisterAttribute("android/support/design/widget/CoordinatorLayout")]
public class Android.Support.Design.Widget.CoordinatorLayout : ViewGroup {
    private IntPtr id_getNestedViewAxes;
    private IntPtr id_setNestedViewAxes;
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    private static Delegate cb_onDependentViewChanged_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static IntPtr id_onDependentViewChanged_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static Delegate cb_layoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static IntPtr id_layoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    internal static JniPeerMembers _members;
    private static Delegate cb_getStatusBarBackground;
    private static Delegate cb_setStatusBarBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_dispatchDependentViewsChanged_Landroid_view_View_;
    private static Delegate cb_doViewsOverlap_Landroid_view_View_Landroid_view_View_;
    private static Delegate cb_getDependencies_Landroid_view_View_;
    private static Delegate cb_getDependents_Landroid_view_View_;
    private static Delegate cb_isPointInChildBounds_Landroid_view_View_II;
    private static Delegate cb_onAttachedToWindow;
    private static Delegate cb_onDetachedFromWindow;
    private static Delegate cb_onDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_onLayoutChild_Landroid_view_View_I;
    private static Delegate cb_onMeasureChild_Landroid_view_View_IIII;
    private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayII;
    private static Delegate cb_onNestedScroll_Landroid_view_View_IIIII;
    private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    private static Delegate cb_onStopNestedScroll_Landroid_view_View_I;
    private static Delegate cb_setStatusBarBackgroundColor_I;
    private static Delegate cb_setStatusBarBackgroundResource_I;
    public int NestedScrollAxes { get; public set; }
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable StatusBarBackground { get; public set; }
    protected CoordinatorLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CoordinatorLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CoordinatorLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public CoordinatorLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static CoordinatorLayout();
    [RegisterAttribute("getNestedViewAxes", "()I", "GetGetNestedViewAccessHandler")]
public virtual int get_NestedScrollAxes();
    [RegisterAttribute("setNestedViewAxes", "(I)V", "GetSetNestedViewAccessHandler")]
public virtual void set_NestedScrollAxes(int value);
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_visibility);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates visibility);
    private static Delegate GetOnDependentViewChanged_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_OnDependentViewChanged_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_dependency);
    [RegisterAttribute("onDependentViewChanged", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetOnDependentViewChanged_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public bool OnDependentViewChanged(CoordinatorLayout parent, View child, View dependency);
    private static Delegate GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_LayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_dependency);
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public bool LayoutDependsOn(CoordinatorLayout parent, View child, View dependency);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetStatusBarBackgroundHandler();
    private static IntPtr n_GetStatusBarBackground(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetStatusBarBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_bg);
    [RegisterAttribute("getStatusBarBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetStatusBarBackgroundHandler")]
public virtual Drawable get_StatusBarBackground();
    [RegisterAttribute("setStatusBarBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_StatusBarBackground(Drawable value);
    private static Delegate GetDispatchDependentViewsChanged_Landroid_view_View_Handler();
    private static void n_DispatchDependentViewsChanged_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("dispatchDependentViewsChanged", "(Landroid/view/View;)V", "GetDispatchDependentViewsChanged_Landroid_view_View_Handler")]
public virtual void DispatchDependentViewsChanged(View view);
    private static Delegate GetDoViewsOverlap_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_DoViewsOverlap_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_first, IntPtr native_second);
    [RegisterAttribute("doViewsOverlap", "(Landroid/view/View;Landroid/view/View;)Z", "GetDoViewsOverlap_Landroid_view_View_Landroid_view_View_Handler")]
public virtual bool DoViewsOverlap(View first, View second);
    private static Delegate GetGetDependencies_Landroid_view_View_Handler();
    private static IntPtr n_GetDependencies_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("getDependencies", "(Landroid/view/View;)Ljava/util/List;", "GetGetDependencies_Landroid_view_View_Handler")]
public virtual IList`1<View> GetDependencies(View child);
    private static Delegate GetGetDependents_Landroid_view_View_Handler();
    private static IntPtr n_GetDependents_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("getDependents", "(Landroid/view/View;)Ljava/util/List;", "GetGetDependents_Landroid_view_View_Handler")]
public virtual IList`1<View> GetDependents(View child);
    private static Delegate GetIsPointInChildBounds_Landroid_view_View_IIHandler();
    private static bool n_IsPointInChildBounds_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, int x, int y);
    [RegisterAttribute("isPointInChildBounds", "(Landroid/view/View;II)Z", "GetIsPointInChildBounds_Landroid_view_View_IIHandler")]
public virtual bool IsPointInChildBounds(View child, int x, int y);
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    private static Delegate GetOnDraw_Landroid_graphics_Canvas_Handler();
    private static void n_OnDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_c);
    [RegisterAttribute("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")]
public virtual void OnDraw(Canvas c);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOnLayoutChild_Landroid_view_View_IHandler();
    private static void n_OnLayoutChild_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("onLayoutChild", "(Landroid/view/View;I)V", "GetOnLayoutChild_Landroid_view_View_IHandler")]
public virtual void OnLayoutChild(View child, int layoutDirection);
    private static Delegate GetOnMeasureChild_Landroid_view_View_IIIIHandler();
    private static void n_OnMeasureChild_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
    [RegisterAttribute("onMeasureChild", "(Landroid/view/View;IIII)V", "GetOnMeasureChild_Landroid_view_View_IIIIHandler")]
public virtual void OnMeasureChild(View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed, int type);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/View;II[II)V", "GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler")]
public virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed, int type);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIIII)V", "GetOnNestedScroll_Landroid_view_View_IIIIIHandler")]
public virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int nestedScrollAxes, int type);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;II)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual void OnNestedScrollAccepted(View child, View target, int nestedScrollAxes, int type);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int axes, int type);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/View;Landroid/view/View;II)Z", "GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual bool OnStartNestedScroll(View child, View target, int axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;I)V", "GetOnStopNestedScroll_Landroid_view_View_IHandler")]
public virtual void OnStopNestedScroll(View target, int type);
    private static Delegate GetSetStatusBarBackgroundColor_IHandler();
    private static void n_SetStatusBarBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setStatusBarBackgroundColor", "(I)V", "GetSetStatusBarBackgroundColor_IHandler")]
public virtual void SetStatusBarBackgroundColor(int color);
    private static Delegate GetSetStatusBarBackgroundResource_IHandler();
    private static void n_SetStatusBarBackgroundResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setStatusBarBackgroundResource", "(I)V", "GetSetStatusBarBackgroundResource_IHandler")]
public virtual void SetStatusBarBackgroundResource(int resId);
}
[RegisterAttribute("android/support/design/widget/FloatingActionButton")]
public class Android.Support.Design.Widget.FloatingActionButton : VisibilityAwareImageButton {
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    [RegisterAttribute("SIZE_AUTO")]
public static int SizeAuto;
    [RegisterAttribute("SIZE_MINI")]
public static int SizeMini;
    [RegisterAttribute("SIZE_NORMAL")]
public static int SizeNormal;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCompatElevation;
    private static Delegate cb_setCompatElevation_F;
    private static Delegate cb_getContentBackground;
    private static Delegate cb_getRippleColor;
    private static Delegate cb_setRippleColor_I;
    private static Delegate cb_getSize;
    private static Delegate cb_setSize_I;
    private static Delegate cb_getUseCompatPadding;
    private static Delegate cb_setUseCompatPadding_Z;
    private static Delegate cb_getContentRect_Landroid_graphics_Rect_;
    private static Delegate cb_hide;
    private static Delegate cb_hide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_;
    private static Delegate cb_show;
    private static Delegate cb_show_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_;
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float CompatElevation { get; public set; }
    public Drawable ContentBackground { get; }
    public int RippleColor { get; public set; }
    public int Size { get; public set; }
    public bool UseCompatPadding { get; public set; }
    protected FloatingActionButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public FloatingActionButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FloatingActionButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public FloatingActionButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static FloatingActionButton();
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_p0);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates p0);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCompatElevationHandler();
    private static float n_GetCompatElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCompatElevation_FHandler();
    private static void n_SetCompatElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getCompatElevation", "()F", "GetGetCompatElevationHandler")]
public virtual float get_CompatElevation();
    [RegisterAttribute("setCompatElevation", "(F)V", "GetSetCompatElevation_FHandler")]
public virtual void set_CompatElevation(float value);
    private static Delegate GetGetContentBackgroundHandler();
    private static IntPtr n_GetContentBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContentBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetContentBackgroundHandler")]
public virtual Drawable get_ContentBackground();
    private static Delegate GetGetRippleColorHandler();
    private static int n_GetRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRippleColor_IHandler();
    private static void n_SetRippleColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getRippleColor", "()I", "GetGetRippleColorHandler")]
public virtual int get_RippleColor();
    [RegisterAttribute("setRippleColor", "(I)V", "GetSetRippleColor_IHandler")]
public virtual void set_RippleColor(int value);
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSize_IHandler();
    private static void n_SetSize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    [RegisterAttribute("setSize", "(I)V", "GetSetSize_IHandler")]
public virtual void set_Size(int value);
    private static Delegate GetGetUseCompatPaddingHandler();
    private static bool n_GetUseCompatPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUseCompatPadding_ZHandler();
    private static void n_SetUseCompatPadding_Z(IntPtr jnienv, IntPtr native__this, bool useCompatPadding);
    [RegisterAttribute("getUseCompatPadding", "()Z", "GetGetUseCompatPaddingHandler")]
public virtual bool get_UseCompatPadding();
    [RegisterAttribute("setUseCompatPadding", "(Z)V", "GetSetUseCompatPadding_ZHandler")]
public virtual void set_UseCompatPadding(bool value);
    private static Delegate GetGetContentRect_Landroid_graphics_Rect_Handler();
    private static bool n_GetContentRect_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [RegisterAttribute("getContentRect", "(Landroid/graphics/Rect;)Z", "GetGetContentRect_Landroid_graphics_Rect_Handler")]
public virtual bool GetContentRect(Rect rect);
    private static Delegate GetHideHandler();
    private static void n_Hide(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hide", "()V", "GetHideHandler")]
public virtual void Hide();
    private static Delegate GetHide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler();
    private static void n_Hide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("hide", "(Landroid/support/design/widget/FloatingActionButton$OnVisibilityChangedListener;)V", "GetHide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler")]
public virtual void Hide(OnVisibilityChangedListener listener);
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
    private static Delegate GetShow_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler();
    private static void n_Show_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_visibility);
    [RegisterAttribute("show", "(Landroid/support/design/widget/FloatingActionButton$OnVisibilityChangedListener;)V", "GetShow_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler")]
public virtual void Show(OnVisibilityChangedListener visibility);
}
[RegisterAttribute("android/support/design/widget/HeaderBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.Design.Widget.HeaderBehavior : ViewOffsetBehavior {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected HeaderBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public HeaderBehavior(Context context, IAttributeSet attrs);
    private static HeaderBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/HeaderBehavior")]
internal class Android.Support.Design.Widget.HeaderBehaviorInvoker : HeaderBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public HeaderBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static HeaderBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/HeaderScrollingViewBehavior")]
public abstract class Android.Support.Design.Widget.HeaderScrollingViewBehavior : ViewOffsetBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_onMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIII;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int OverlayTop { get; public set; }
    protected HeaderScrollingViewBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public HeaderScrollingViewBehavior(Context context, IAttributeSet attrs);
    private static HeaderScrollingViewBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOverlayTop", "()I", "GetGetOverlayTopHandler")]
public int get_OverlayTop();
    [RegisterAttribute("setOverlayTop", "(I)V", "GetSetOverlayTop_IHandler")]
public void set_OverlayTop(int value);
    private static Delegate GetOnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIIIHandler();
    private static bool n_OnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
    [RegisterAttribute("onMeasureChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;IIII)Z", "GetOnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIIIHandler")]
public virtual bool OnMeasureChild(CoordinatorLayout parent, View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
}
[RegisterAttribute("android/support/design/widget/HeaderScrollingViewBehavior")]
internal class Android.Support.Design.Widget.HeaderScrollingViewBehaviorInvoker : HeaderScrollingViewBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public HeaderScrollingViewBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static HeaderScrollingViewBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/ShadowViewDelegate", "", "Android.Support.Design.Widget.IShadowViewDelegateInvoker")]
public interface Android.Support.Design.Widget.IShadowViewDelegate {
    public bool IsCompatPaddingEnabled { get; }
    public float Radius { get; }
    [RegisterAttribute("isCompatPaddingEnabled", "()Z", "GetIsCompatPaddingEnabledHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual bool get_IsCompatPaddingEnabled();
    [RegisterAttribute("getRadius", "()F", "GetGetRadiusHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual float get_Radius();
    [RegisterAttribute("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void SetBackgroundDrawable(Drawable p0);
    [RegisterAttribute("setShadowPadding", "(IIII)V", "GetSetShadowPadding_IIIIHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void SetShadowPadding(int p0, int p1, int p2, int p3);
}
[RegisterAttribute("android/support/design/widget/ShadowViewDelegate")]
internal class Android.Support.Design.Widget.IShadowViewDelegateInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isCompatPaddingEnabled;
    private IntPtr id_isCompatPaddingEnabled;
    private static Delegate cb_getRadius;
    private IntPtr id_getRadius;
    private static Delegate cb_setBackgroundDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setBackgroundDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowPadding_IIII;
    private IntPtr id_setShadowPadding_IIII;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsCompatPaddingEnabled { get; }
    public float Radius { get; }
    public IShadowViewDelegateInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IShadowViewDelegateInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IShadowViewDelegate GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsCompatPaddingEnabledHandler();
    private static bool n_IsCompatPaddingEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompatPaddingEnabled();
    private static Delegate GetGetRadiusHandler();
    private static float n_GetRadius(IntPtr jnienv, IntPtr native__this);
    public sealed virtual float get_Radius();
    private static Delegate GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetBackgroundDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetBackgroundDrawable(Drawable p0);
    private static Delegate GetSetShadowPadding_IIIIHandler();
    private static void n_SetShadowPadding_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    public sealed virtual void SetShadowPadding(int p0, int p1, int p2, int p3);
}
[RegisterAttribute("android/support/design/widget/NavigationView")]
public class Android.Support.Design.Widget.NavigationView : ScrimInsetsFrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getHeaderCount;
    private static Delegate cb_getItemBackground;
    private static Delegate cb_setItemBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getItemIconTintList;
    private static Delegate cb_setItemIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getMenu;
    private static Delegate cb_addHeaderView_Landroid_view_View_;
    private static Delegate cb_getHeaderView_I;
    private static Delegate cb_inflateHeaderView_I;
    private static Delegate cb_inflateMenu_I;
    private static Delegate cb_removeHeaderView_Landroid_view_View_;
    private static Delegate cb_setCheckedItem_I;
    private static Delegate cb_setItemBackgroundResource_I;
    private static Delegate cb_setItemTextAppearance_I;
    private static Delegate cb_setNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_;
    private WeakReference weak_implementor_SetNavigationItemSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int HeaderCount { get; }
    public Drawable ItemBackground { get; public set; }
    public ColorStateList ItemIconTintList { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public IMenu Menu { get; }
    protected NavigationView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetHeaderCountHandler();
    private static int n_GetHeaderCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHeaderCount", "()I", "GetGetHeaderCountHandler")]
public virtual int get_HeaderCount();
    private static Delegate GetGetItemBackgroundHandler();
    private static IntPtr n_GetItemBackground(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetItemBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemBackground);
    [RegisterAttribute("getItemBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetItemBackgroundHandler")]
public virtual Drawable get_ItemBackground();
    [RegisterAttribute("setItemBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ItemBackground(Drawable value);
    private static Delegate GetGetItemIconTintListHandler();
    private static IntPtr n_GetItemIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getItemIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetItemIconTintListHandler")]
public virtual ColorStateList get_ItemIconTintList();
    [RegisterAttribute("setItemIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemIconTintList(ColorStateList value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetMenuHandler();
    private static IntPtr n_GetMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMenu", "()Landroid/view/Menu;", "GetGetMenuHandler")]
public virtual IMenu get_Menu();
    private static Delegate GetAddHeaderView_Landroid_view_View_Handler();
    private static void n_AddHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("addHeaderView", "(Landroid/view/View;)V", "GetAddHeaderView_Landroid_view_View_Handler")]
public virtual void AddHeaderView(View view);
    private static Delegate GetGetHeaderView_IHandler();
    private static IntPtr n_GetHeaderView_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getHeaderView", "(I)Landroid/view/View;", "GetGetHeaderView_IHandler")]
public virtual View GetHeaderView(int index);
    private static Delegate GetInflateHeaderView_IHandler();
    private static IntPtr n_InflateHeaderView_I(IntPtr jnienv, IntPtr native__this, int res);
    [RegisterAttribute("inflateHeaderView", "(I)Landroid/view/View;", "GetInflateHeaderView_IHandler")]
public virtual View InflateHeaderView(int res);
    private static Delegate GetInflateMenu_IHandler();
    private static void n_InflateMenu_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("inflateMenu", "(I)V", "GetInflateMenu_IHandler")]
public virtual void InflateMenu(int resId);
    private static Delegate GetRemoveHeaderView_Landroid_view_View_Handler();
    private static void n_RemoveHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("removeHeaderView", "(Landroid/view/View;)V", "GetRemoveHeaderView_Landroid_view_View_Handler")]
public virtual void RemoveHeaderView(View view);
    private static Delegate GetSetCheckedItem_IHandler();
    private static void n_SetCheckedItem_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedItem", "(I)V", "GetSetCheckedItem_IHandler")]
public virtual void SetCheckedItem(int id);
    private static Delegate GetSetItemBackgroundResource_IHandler();
    private static void n_SetItemBackgroundResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setItemBackgroundResource", "(I)V", "GetSetItemBackgroundResource_IHandler")]
public virtual void SetItemBackgroundResource(int resId);
    private static Delegate GetSetItemTextAppearance_IHandler();
    private static void n_SetItemTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setItemTextAppearance", "(I)V", "GetSetItemTextAppearance_IHandler")]
public virtual void SetItemTextAppearance(int resId);
    private static Delegate GetSetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_Handler();
    private static void n_SetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setNavigationItemSelectedListener", "(Landroid/support/design/widget/NavigationView$OnNavigationItemSelectedListener;)V", "GetSetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_Handler")]
public virtual void SetNavigationItemSelectedListener(IOnNavigationItemSelectedListener listener);
    public void add_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    public void remove_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    private IOnNavigationItemSelectedListenerImplementor __CreateIOnNavigationItemSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/Snackbar")]
public class Android.Support.Design.Widget.Snackbar : BaseTransientBottomBar {
    [RegisterAttribute("LENGTH_INDEFINITE")]
public static int LengthIndefinite;
    [RegisterAttribute("LENGTH_LONG")]
public static int LengthLong;
    [RegisterAttribute("LENGTH_SHORT")]
public static int LengthShort;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal Snackbar(IntPtr javaReference, JniHandleOwnership transfer);
    private static Snackbar();
    public Snackbar SetAction(string text, Action`1<View> clickHandler);
    public Snackbar SetAction(ICharSequence text, Action`1<View> clickHandler);
    public Snackbar SetAction(int resId, Action`1<View> clickHandler);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("make", "(Landroid/view/View;II)Landroid/support/design/widget/Snackbar;", "")]
public static Snackbar Make(View view, int resId, int duration);
    [RegisterAttribute("make", "(Landroid/view/View;Ljava/lang/CharSequence;I)Landroid/support/design/widget/Snackbar;", "")]
public static Snackbar Make(View view, ICharSequence text, int duration);
    public static Snackbar Make(View view, string text, int duration);
    [RegisterAttribute("setAction", "(ILandroid/view/View$OnClickListener;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetAction(int resId, IOnClickListener listener);
    [RegisterAttribute("setAction", "(Ljava/lang/CharSequence;Landroid/view/View$OnClickListener;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetAction(ICharSequence text, IOnClickListener listener);
    public Snackbar SetAction(string text, IOnClickListener listener);
    [RegisterAttribute("setActionTextColor", "(Landroid/content/res/ColorStateList;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetActionTextColor(ColorStateList colors);
    [RegisterAttribute("setActionTextColor", "(I)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetActionTextColor(int color);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCallback", "(Landroid/support/design/widget/Snackbar$Callback;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetCallback(Callback callback);
    [RegisterAttribute("setText", "(I)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetText(int resId);
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetText(ICharSequence message);
    public Snackbar SetText(string message);
}
[RegisterAttribute("android/support/design/widget/SwipeDismissBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.SwipeDismissBehavior : Behavior {
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_IDLE")]
public static int StateIdle;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    [RegisterAttribute("SWIPE_DIRECTION_ANY")]
public static int SwipeDirectionAny;
    [RegisterAttribute("SWIPE_DIRECTION_END_TO_START")]
public static int SwipeDirectionEndToStart;
    [RegisterAttribute("SWIPE_DIRECTION_START_TO_END")]
public static int SwipeDirectionStartToEnd;
    internal static JniPeerMembers _members;
    private static Delegate cb_getDragState;
    private static Delegate cb_canSwipeDismissView_Landroid_view_View_;
    private static Delegate cb_setDragDismissDistance_F;
    private static Delegate cb_setEndAlphaSwipeDistance_F;
    private static Delegate cb_setListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_;
    private static Delegate cb_setSensitivity_F;
    private static Delegate cb_setStartAlphaSwipeDistance_F;
    private static Delegate cb_setSwipeDirection_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int DragState { get; }
    protected SwipeDismissBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    private static SwipeDismissBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDragStateHandler();
    private static int n_GetDragState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDragState", "()I", "GetGetDragStateHandler")]
public virtual int get_DragState();
    private static Delegate GetCanSwipeDismissView_Landroid_view_View_Handler();
    private static bool n_CanSwipeDismissView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("canSwipeDismissView", "(Landroid/view/View;)Z", "GetCanSwipeDismissView_Landroid_view_View_Handler")]
public virtual bool CanSwipeDismissView(View view);
    private static Delegate GetSetDragDismissDistance_FHandler();
    private static void n_SetDragDismissDistance_F(IntPtr jnienv, IntPtr native__this, float distance);
    [RegisterAttribute("setDragDismissDistance", "(F)V", "GetSetDragDismissDistance_FHandler")]
public virtual void SetDragDismissDistance(float distance);
    private static Delegate GetSetEndAlphaSwipeDistance_FHandler();
    private static void n_SetEndAlphaSwipeDistance_F(IntPtr jnienv, IntPtr native__this, float fraction);
    [RegisterAttribute("setEndAlphaSwipeDistance", "(F)V", "GetSetEndAlphaSwipeDistance_FHandler")]
public virtual void SetEndAlphaSwipeDistance(float fraction);
    private static Delegate GetSetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_Handler();
    private static void n_SetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setListener", "(Landroid/support/design/widget/SwipeDismissBehavior$OnDismissListener;)V", "GetSetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_Handler")]
public virtual void SetListener(IOnDismissListener listener);
    private static Delegate GetSetSensitivity_FHandler();
    private static void n_SetSensitivity_F(IntPtr jnienv, IntPtr native__this, float sensitivity);
    [RegisterAttribute("setSensitivity", "(F)V", "GetSetSensitivity_FHandler")]
public virtual void SetSensitivity(float sensitivity);
    private static Delegate GetSetStartAlphaSwipeDistance_FHandler();
    private static void n_SetStartAlphaSwipeDistance_F(IntPtr jnienv, IntPtr native__this, float fraction);
    [RegisterAttribute("setStartAlphaSwipeDistance", "(F)V", "GetSetStartAlphaSwipeDistance_FHandler")]
public virtual void SetStartAlphaSwipeDistance(float fraction);
    private static Delegate GetSetSwipeDirection_IHandler();
    private static void n_SetSwipeDirection_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("setSwipeDirection", "(I)V", "GetSetSwipeDirection_IHandler")]
public virtual void SetSwipeDirection(int direction);
    private IOnDismissListenerImplementor __CreateIOnDismissListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/TabItem")]
public class Android.Support.Design.Widget.TabItem : View {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal TabItem(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TabItem(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TabItem(Context context, IAttributeSet attrs);
    private static TabItem();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/TabLayout")]
public class Android.Support.Design.Widget.TabLayout : HorizontalScrollView {
    [RegisterAttribute("GRAVITY_CENTER")]
public static int GravityCenter;
    [RegisterAttribute("GRAVITY_FILL")]
public static int GravityFill;
    [RegisterAttribute("MODE_FIXED")]
public static int ModeFixed;
    [RegisterAttribute("MODE_SCROLLABLE")]
public static int ModeScrollable;
    internal static JniPeerMembers _members;
    private static Delegate cb_getSelectedTabPosition;
    private static Delegate cb_getTabCount;
    private static Delegate cb_getTabGravity;
    private static Delegate cb_setTabGravity_I;
    private static Delegate cb_getTabMode;
    private static Delegate cb_setTabMode_I;
    private static Delegate cb_getTabTextColors;
    private static Delegate cb_setTabTextColors_Landroid_content_res_ColorStateList_;
    private static Delegate cb_addOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_Z;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_I;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_IZ;
    private static Delegate cb_clearOnTabSelectedListeners;
    private static Delegate cb_getTabAt_I;
    private static Delegate cb_newTab;
    private static Delegate cb_removeAllTabs;
    private static Delegate cb_removeOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_;
    private static Delegate cb_removeTab_Landroid_support_design_widget_TabLayout_Tab_;
    private static Delegate cb_removeTabAt_I;
    private static Delegate cb_setOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_;
    private static Delegate cb_setScrollPosition_IFZ;
    private static Delegate cb_setSelectedTabIndicatorColor_I;
    private static Delegate cb_setSelectedTabIndicatorHeight_I;
    private static Delegate cb_setTabTextColors_II;
    private static Delegate cb_setTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_;
    private static Delegate cb_setupWithViewPager_Landroid_support_v4_view_ViewPager_;
    private static Delegate cb_setupWithViewPager_Landroid_support_v4_view_ViewPager_Z;
    private WeakReference weak_implementor_AddOnTabSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int SelectedTabPosition { get; }
    public int TabCount { get; }
    public int TabGravity { get; public set; }
    public int TabMode { get; public set; }
    public ColorStateList TabTextColors { get; public set; }
    protected TabLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TabLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TabLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TabLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TabLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSelectedTabPositionHandler();
    private static int n_GetSelectedTabPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSelectedTabPosition", "()I", "GetGetSelectedTabPositionHandler")]
public virtual int get_SelectedTabPosition();
    private static Delegate GetGetTabCountHandler();
    private static int n_GetTabCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTabCount", "()I", "GetGetTabCountHandler")]
public virtual int get_TabCount();
    private static Delegate GetGetTabGravityHandler();
    private static int n_GetTabGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabGravity_IHandler();
    private static void n_SetTabGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getTabGravity", "()I", "GetGetTabGravityHandler")]
public virtual int get_TabGravity();
    [RegisterAttribute("setTabGravity", "(I)V", "GetSetTabGravity_IHandler")]
public virtual void set_TabGravity(int value);
    private static Delegate GetGetTabModeHandler();
    private static int n_GetTabMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabMode_IHandler();
    private static void n_SetTabMode_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getTabMode", "()I", "GetGetTabModeHandler")]
public virtual int get_TabMode();
    [RegisterAttribute("setTabMode", "(I)V", "GetSetTabMode_IHandler")]
public virtual void set_TabMode(int value);
    private static Delegate GetGetTabTextColorsHandler();
    private static IntPtr n_GetTabTextColors(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabTextColors_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTabTextColors_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getTabTextColors", "()Landroid/content/res/ColorStateList;", "GetGetTabTextColorsHandler")]
public virtual ColorStateList get_TabTextColors();
    [RegisterAttribute("setTabTextColors", "(Landroid/content/res/ColorStateList;)V", "GetSetTabTextColors_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_TabTextColors(ColorStateList value);
    private static Delegate GetAddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler();
    private static void n_AddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$OnTabSelectedListener;)V", "GetAddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler")]
public virtual void AddOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_Handler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_(IntPtr jnienv, IntPtr native__this, IntPtr native_tab);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_Handler")]
public virtual void AddTab(Tab tab);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_ZHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, bool setSelected);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;Z)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_ZHandler")]
public virtual void AddTab(Tab tab, bool setSelected);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_I(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, int position);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;I)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IHandler")]
public virtual void AddTab(Tab tab, int position);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IZHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_IZ(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, int position, bool setSelected);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;IZ)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IZHandler")]
public virtual void AddTab(Tab tab, int position, bool setSelected);
    private static Delegate GetClearOnTabSelectedListenersHandler();
    private static void n_ClearOnTabSelectedListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearOnTabSelectedListeners", "()V", "GetClearOnTabSelectedListenersHandler")]
public virtual void ClearOnTabSelectedListeners();
    private static Delegate GetGetTabAt_IHandler();
    private static IntPtr n_GetTabAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getTabAt", "(I)Landroid/support/design/widget/TabLayout$Tab;", "GetGetTabAt_IHandler")]
public virtual Tab GetTabAt(int index);
    private static Delegate GetNewTabHandler();
    private static IntPtr n_NewTab(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("newTab", "()Landroid/support/design/widget/TabLayout$Tab;", "GetNewTabHandler")]
public virtual Tab NewTab();
    private static Delegate GetRemoveAllTabsHandler();
    private static void n_RemoveAllTabs(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllTabs", "()V", "GetRemoveAllTabsHandler")]
public virtual void RemoveAllTabs();
    private static Delegate GetRemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler();
    private static void n_RemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$OnTabSelectedListener;)V", "GetRemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler")]
public virtual void RemoveOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetRemoveTab_Landroid_support_design_widget_TabLayout_Tab_Handler();
    private static void n_RemoveTab_Landroid_support_design_widget_TabLayout_Tab_(IntPtr jnienv, IntPtr native__this, IntPtr native_tab);
    [RegisterAttribute("removeTab", "(Landroid/support/design/widget/TabLayout$Tab;)V", "GetRemoveTab_Landroid_support_design_widget_TabLayout_Tab_Handler")]
public virtual void RemoveTab(Tab tab);
    private static Delegate GetRemoveTabAt_IHandler();
    private static void n_RemoveTabAt_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("removeTabAt", "(I)V", "GetRemoveTabAt_IHandler")]
public virtual void RemoveTabAt(int position);
    private static Delegate GetSetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler();
    private static void n_SetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$OnTabSelectedListener;)V", "GetSetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_OnTabSelectedListener_Handler")]
public virtual void SetOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetSetScrollPosition_IFZHandler();
    private static void n_SetScrollPosition_IFZ(IntPtr jnienv, IntPtr native__this, int position, float positionOffset, bool updateSelectedText);
    [RegisterAttribute("setScrollPosition", "(IFZ)V", "GetSetScrollPosition_IFZHandler")]
public virtual void SetScrollPosition(int position, float positionOffset, bool updateSelectedText);
    private static Delegate GetSetSelectedTabIndicatorColor_IHandler();
    private static void n_SetSelectedTabIndicatorColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setSelectedTabIndicatorColor", "(I)V", "GetSetSelectedTabIndicatorColor_IHandler")]
public virtual void SetSelectedTabIndicatorColor(int color);
    private static Delegate GetSetSelectedTabIndicatorHeight_IHandler();
    private static void n_SetSelectedTabIndicatorHeight_I(IntPtr jnienv, IntPtr native__this, int height);
    [RegisterAttribute("setSelectedTabIndicatorHeight", "(I)V", "GetSetSelectedTabIndicatorHeight_IHandler")]
public virtual void SetSelectedTabIndicatorHeight(int height);
    private static Delegate GetSetTabTextColors_IIHandler();
    private static void n_SetTabTextColors_II(IntPtr jnienv, IntPtr native__this, int normalColor, int selectedColor);
    [RegisterAttribute("setTabTextColors", "(II)V", "GetSetTabTextColors_IIHandler")]
public virtual void SetTabTextColors(int normalColor, int selectedColor);
    private static Delegate GetSetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_Handler();
    private static void n_SetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_adapter);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setTabsFromPagerAdapter", "(Landroid/support/v4/view/PagerAdapter;)V", "GetSetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_Handler")]
public virtual void SetTabsFromPagerAdapter(PagerAdapter adapter);
    private static Delegate GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_Handler();
    private static void n_SetupWithViewPager_Landroid_support_v4_view_ViewPager_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewPager);
    [RegisterAttribute("setupWithViewPager", "(Landroid/support/v4/view/ViewPager;)V", "GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_Handler")]
public virtual void SetupWithViewPager(ViewPager viewPager);
    private static Delegate GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_ZHandler();
    private static void n_SetupWithViewPager_Landroid_support_v4_view_ViewPager_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_viewPager, bool autoRefresh);
    [RegisterAttribute("setupWithViewPager", "(Landroid/support/v4/view/ViewPager;Z)V", "GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_ZHandler")]
public virtual void SetupWithViewPager(ViewPager viewPager, bool autoRefresh);
    public void add_TabReselected(EventHandler`1<TabReselectedEventArgs> value);
    public void remove_TabReselected(EventHandler`1<TabReselectedEventArgs> value);
    public void add_TabSelected(EventHandler`1<TabSelectedEventArgs> value);
    public void remove_TabSelected(EventHandler`1<TabSelectedEventArgs> value);
    public void add_TabUnselected(EventHandler`1<TabUnselectedEventArgs> value);
    public void remove_TabUnselected(EventHandler`1<TabUnselectedEventArgs> value);
    private IOnTabSelectedListenerImplementor __CreateIOnTabSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/TextInputEditText")]
public class Android.Support.Design.Widget.TextInputEditText : AppCompatEditText {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TextInputEditText(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TextInputEditText(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TextInputEditText(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TextInputEditText(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TextInputEditText();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/TextInputLayout")]
public class Android.Support.Design.Widget.TextInputLayout : LinearLayout {
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_setEnabled_Z;
    internal static JniPeerMembers _members;
    private static Delegate cb_isCounterEnabled;
    private static Delegate cb_setCounterEnabled_Z;
    private static Delegate cb_getCounterMaxLength;
    private static Delegate cb_setCounterMaxLength_I;
    private static Delegate cb_getEditText;
    private static Delegate cb_getError;
    private static Delegate cb_setError_Ljava_lang_CharSequence_;
    private static Delegate cb_isErrorEnabled;
    private static Delegate cb_setErrorEnabled_Z;
    private static Delegate cb_getHint;
    private static Delegate cb_setHint_Ljava_lang_CharSequence_;
    private static Delegate cb_isHintAnimationEnabled;
    private static Delegate cb_setHintAnimationEnabled_Z;
    private static Delegate cb_isHintEnabled;
    private static Delegate cb_setHintEnabled_Z;
    private static Delegate cb_getPasswordVisibilityToggleContentDescription;
    private static Delegate cb_setPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_getPasswordVisibilityToggleDrawable;
    private static Delegate cb_setPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isPasswordVisibilityToggleEnabled;
    private static Delegate cb_setPasswordVisibilityToggleEnabled_Z;
    private static Delegate cb_getTypeface;
    private static Delegate cb_setTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_dispatchRestoreInstanceState_Landroid_util_SparseArray_;
    private static Delegate cb_onSaveInstanceState;
    private static Delegate cb_setErrorTextAppearance_I;
    private static Delegate cb_setHintTextAppearance_I;
    private static Delegate cb_setPasswordVisibilityToggleContentDescription_I;
    private static Delegate cb_setPasswordVisibilityToggleDrawable_I;
    private static Delegate cb_setPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_;
    public bool Enabled { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool CounterEnabled { get; public set; }
    public int CounterMaxLength { get; public set; }
    public EditText EditText { get; }
    public ICharSequence ErrorFormatted { get; public set; }
    public string Error { get; public set; }
    public bool ErrorEnabled { get; public set; }
    public ICharSequence HintFormatted { get; public set; }
    public string Hint { get; public set; }
    public bool HintAnimationEnabled { get; public set; }
    public bool HintEnabled { get; public set; }
    public ICharSequence PasswordVisibilityToggleContentDescriptionFormatted { get; public set; }
    public string PasswordVisibilityToggleContentDescription { get; public set; }
    public Drawable PasswordVisibilityToggleDrawable { get; public set; }
    public bool PasswordVisibilityToggleEnabled { get; public set; }
    public Typeface Typeface { get; public set; }
    protected TextInputLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TextInputLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TextInputLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TextInputLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TextInputLayout();
    public virtual bool get_Enabled();
    public virtual void set_Enabled(bool value);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCounterEnabledHandler();
    private static bool n_IsCounterEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCounterEnabled_ZHandler();
    private static void n_SetCounterEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isCounterEnabled", "()Z", "GetIsCounterEnabledHandler")]
public virtual bool get_CounterEnabled();
    [RegisterAttribute("setCounterEnabled", "(Z)V", "GetSetCounterEnabled_ZHandler")]
public virtual void set_CounterEnabled(bool value);
    private static Delegate GetGetCounterMaxLengthHandler();
    private static int n_GetCounterMaxLength(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCounterMaxLength_IHandler();
    private static void n_SetCounterMaxLength_I(IntPtr jnienv, IntPtr native__this, int maxLength);
    [RegisterAttribute("getCounterMaxLength", "()I", "GetGetCounterMaxLengthHandler")]
public virtual int get_CounterMaxLength();
    [RegisterAttribute("setCounterMaxLength", "(I)V", "GetSetCounterMaxLength_IHandler")]
public virtual void set_CounterMaxLength(int value);
    private static Delegate GetGetEditTextHandler();
    private static IntPtr n_GetEditText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEditText", "()Landroid/widget/EditText;", "GetGetEditTextHandler")]
public virtual EditText get_EditText();
    private static Delegate GetGetErrorHandler();
    private static IntPtr n_GetError(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetError_Ljava_lang_CharSequence_Handler();
    private static void n_SetError_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_error);
    [RegisterAttribute("getError", "()Ljava/lang/CharSequence;", "GetGetErrorHandler")]
public virtual ICharSequence get_ErrorFormatted();
    [RegisterAttribute("setError", "(Ljava/lang/CharSequence;)V", "GetSetError_Ljava_lang_CharSequence_Handler")]
public virtual void set_ErrorFormatted(ICharSequence value);
    public string get_Error();
    public void set_Error(string value);
    private static Delegate GetIsErrorEnabledHandler();
    private static bool n_IsErrorEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetErrorEnabled_ZHandler();
    private static void n_SetErrorEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isErrorEnabled", "()Z", "GetIsErrorEnabledHandler")]
public virtual bool get_ErrorEnabled();
    [RegisterAttribute("setErrorEnabled", "(Z)V", "GetSetErrorEnabled_ZHandler")]
public virtual void set_ErrorEnabled(bool value);
    private static Delegate GetGetHintHandler();
    private static IntPtr n_GetHint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHint_Ljava_lang_CharSequence_Handler();
    private static void n_SetHint_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_hint);
    [RegisterAttribute("getHint", "()Ljava/lang/CharSequence;", "GetGetHintHandler")]
public virtual ICharSequence get_HintFormatted();
    [RegisterAttribute("setHint", "(Ljava/lang/CharSequence;)V", "GetSetHint_Ljava_lang_CharSequence_Handler")]
public virtual void set_HintFormatted(ICharSequence value);
    public string get_Hint();
    public void set_Hint(string value);
    private static Delegate GetIsHintAnimationEnabledHandler();
    private static bool n_IsHintAnimationEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHintAnimationEnabled_ZHandler();
    private static void n_SetHintAnimationEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isHintAnimationEnabled", "()Z", "GetIsHintAnimationEnabledHandler")]
public virtual bool get_HintAnimationEnabled();
    [RegisterAttribute("setHintAnimationEnabled", "(Z)V", "GetSetHintAnimationEnabled_ZHandler")]
public virtual void set_HintAnimationEnabled(bool value);
    private static Delegate GetIsHintEnabledHandler();
    private static bool n_IsHintEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHintEnabled_ZHandler();
    private static void n_SetHintEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isHintEnabled", "()Z", "GetIsHintEnabledHandler")]
public virtual bool get_HintEnabled();
    [RegisterAttribute("setHintEnabled", "(Z)V", "GetSetHintEnabled_ZHandler")]
public virtual void set_HintEnabled(bool value);
    private static Delegate GetGetPasswordVisibilityToggleContentDescriptionHandler();
    private static IntPtr n_GetPasswordVisibilityToggleContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_description);
    [RegisterAttribute("getPasswordVisibilityToggleContentDescription", "()Ljava/lang/CharSequence;", "GetGetPasswordVisibilityToggleContentDescriptionHandler")]
public virtual ICharSequence get_PasswordVisibilityToggleContentDescriptionFormatted();
    [RegisterAttribute("setPasswordVisibilityToggleContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_PasswordVisibilityToggleContentDescriptionFormatted(ICharSequence value);
    public string get_PasswordVisibilityToggleContentDescription();
    public void set_PasswordVisibilityToggleContentDescription(string value);
    private static Delegate GetGetPasswordVisibilityToggleDrawableHandler();
    private static IntPtr n_GetPasswordVisibilityToggleDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("getPasswordVisibilityToggleDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetPasswordVisibilityToggleDrawableHandler")]
public virtual Drawable get_PasswordVisibilityToggleDrawable();
    [RegisterAttribute("setPasswordVisibilityToggleDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_PasswordVisibilityToggleDrawable(Drawable value);
    private static Delegate GetIsPasswordVisibilityToggleEnabledHandler();
    private static bool n_IsPasswordVisibilityToggleEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleEnabled_ZHandler();
    private static void n_SetPasswordVisibilityToggleEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isPasswordVisibilityToggleEnabled", "()Z", "GetIsPasswordVisibilityToggleEnabledHandler")]
public virtual bool get_PasswordVisibilityToggleEnabled();
    [RegisterAttribute("setPasswordVisibilityToggleEnabled", "(Z)V", "GetSetPasswordVisibilityToggleEnabled_ZHandler")]
public virtual void set_PasswordVisibilityToggleEnabled(bool value);
    private static Delegate GetGetTypefaceHandler();
    private static IntPtr n_GetTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")]
public virtual Typeface get_Typeface();
    [RegisterAttribute("setTypeface", "(Landroid/graphics/Typeface;)V", "GetSetTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_Typeface(Typeface value);
    private static Delegate GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler();
    private static void n_DispatchRestoreInstanceState_Landroid_util_SparseArray_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [RegisterAttribute("dispatchRestoreInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler")]
protected virtual void DispatchRestoreInstanceState(SparseArray container);
    private static Delegate GetOnSaveInstanceStateHandler();
    private static IntPtr n_OnSaveInstanceState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
public virtual IParcelable OnSaveInstanceState();
    private static Delegate GetSetErrorTextAppearance_IHandler();
    private static void n_SetErrorTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setErrorTextAppearance", "(I)V", "GetSetErrorTextAppearance_IHandler")]
public virtual void SetErrorTextAppearance(int resId);
    private static Delegate GetSetHintTextAppearance_IHandler();
    private static void n_SetHintTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setHintTextAppearance", "(I)V", "GetSetHintTextAppearance_IHandler")]
public virtual void SetHintTextAppearance(int resId);
    private static Delegate GetSetPasswordVisibilityToggleContentDescription_IHandler();
    private static void n_SetPasswordVisibilityToggleContentDescription_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setPasswordVisibilityToggleContentDescription", "(I)V", "GetSetPasswordVisibilityToggleContentDescription_IHandler")]
public virtual void SetPasswordVisibilityToggleContentDescription(int resId);
    private static Delegate GetSetPasswordVisibilityToggleDrawable_IHandler();
    private static void n_SetPasswordVisibilityToggleDrawable_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setPasswordVisibilityToggleDrawable", "(I)V", "GetSetPasswordVisibilityToggleDrawable_IHandler")]
public virtual void SetPasswordVisibilityToggleDrawable(int resId);
    private static Delegate GetSetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintList);
    [RegisterAttribute("setPasswordVisibilityToggleTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetPasswordVisibilityToggleTintList(ColorStateList tintList);
    private static Delegate GetSetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_mode);
    [RegisterAttribute("setPasswordVisibilityToggleTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void SetPasswordVisibilityToggleTintMode(Mode mode);
}
[RegisterAttribute("android/support/design/widget/ViewOffsetBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.ViewOffsetBehavior : Behavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_getLeftAndRightOffset;
    private static Delegate cb_getTopAndBottomOffset;
    private static Delegate cb_layoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I;
    private static Delegate cb_setLeftAndRightOffset_I;
    private static Delegate cb_setTopAndBottomOffset_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int LeftAndRightOffset { get; }
    public int TopAndBottomOffset { get; }
    protected ViewOffsetBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ViewOffsetBehavior(Context context, IAttributeSet attrs);
    private static ViewOffsetBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLeftAndRightOffsetHandler();
    private static int n_GetLeftAndRightOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLeftAndRightOffset", "()I", "GetGetLeftAndRightOffsetHandler")]
public virtual int get_LeftAndRightOffset();
    private static Delegate GetGetTopAndBottomOffsetHandler();
    private static int n_GetTopAndBottomOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTopAndBottomOffset", "()I", "GetGetTopAndBottomOffsetHandler")]
public virtual int get_TopAndBottomOffset();
    private static Delegate GetLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler();
    private static void n_LayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("layoutChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;I)V", "GetLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler")]
protected virtual void LayoutChild(CoordinatorLayout parent, Object child, int layoutDirection);
    private static Delegate GetSetLeftAndRightOffset_IHandler();
    private static bool n_SetLeftAndRightOffset_I(IntPtr jnienv, IntPtr native__this, int offset);
    [RegisterAttribute("setLeftAndRightOffset", "(I)Z", "GetSetLeftAndRightOffset_IHandler")]
public virtual bool SetLeftAndRightOffset(int offset);
    private static Delegate GetSetTopAndBottomOffset_IHandler();
    private static bool n_SetTopAndBottomOffset_I(IntPtr jnienv, IntPtr native__this, int offset);
    [RegisterAttribute("setTopAndBottomOffset", "(I)Z", "GetSetTopAndBottomOffset_IHandler")]
public virtual bool SetTopAndBottomOffset(int offset);
}
[RegisterAttribute("android/support/design/widget/VisibilityAwareImageButton")]
public class Android.Support.Design.Widget.VisibilityAwareImageButton : ImageButton {
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    internal static JniPeerMembers _members;
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected VisibilityAwareImageButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public VisibilityAwareImageButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public VisibilityAwareImageButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public VisibilityAwareImageButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static VisibilityAwareImageButton();
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_visibility);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates visibility);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
