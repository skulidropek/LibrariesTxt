[RegisterAttribute("android/support/design/animation/AnimationUtils")]
public class Android.Support.Design.Animation.AnimationUtils : Object {
    internal static JniPeerMembers _members;
    [RegisterAttribute("DECELERATE_INTERPOLATOR")]
public static ITimeInterpolator DecelerateInterpolator { get; }
    [RegisterAttribute("FAST_OUT_LINEAR_IN_INTERPOLATOR")]
public static ITimeInterpolator FastOutLinearInInterpolator { get; }
    [RegisterAttribute("FAST_OUT_SLOW_IN_INTERPOLATOR")]
public static ITimeInterpolator FastOutSlowInInterpolator { get; }
    [RegisterAttribute("LINEAR_INTERPOLATOR")]
public static ITimeInterpolator LinearInterpolator { get; }
    [RegisterAttribute("LINEAR_OUT_SLOW_IN_INTERPOLATOR")]
public static ITimeInterpolator LinearOutSlowInInterpolator { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected AnimationUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static AnimationUtils();
    public static ITimeInterpolator get_DecelerateInterpolator();
    public static ITimeInterpolator get_FastOutLinearInInterpolator();
    public static ITimeInterpolator get_FastOutSlowInInterpolator();
    public static ITimeInterpolator get_LinearInterpolator();
    public static ITimeInterpolator get_LinearOutSlowInInterpolator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("lerp", "(FFF)F", "")]
public static float Lerp(float startValue, float endValue, float fraction);
    [RegisterAttribute("lerp", "(IIF)I", "")]
public static int Lerp(int startValue, int endValue, float fraction);
}
[RegisterAttribute("android/support/design/animation/AnimatorSetCompat")]
public class Android.Support.Design.Animation.AnimatorSetCompat : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected AnimatorSetCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AnimatorSetCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("playTogether", "(Landroid/animation/AnimatorSet;Ljava/util/List;)V", "")]
public static void PlayTogether(AnimatorSet animatorSet, IList`1<Animator> items);
}
[RegisterAttribute("android/support/design/animation/ArgbEvaluatorCompat")]
public class Android.Support.Design.Animation.ArgbEvaluatorCompat : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_evaluate_FLjava_lang_Integer_Ljava_lang_Integer_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public static ArgbEvaluatorCompat Instance { get; }
    protected ArgbEvaluatorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ArgbEvaluatorCompat();
    public sealed virtual Object Evaluate(float fraction, Object startValue, Object endValue);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "()Landroid/support/design/animation/ArgbEvaluatorCompat;", "GetGetInstanceHandler")]
public static ArgbEvaluatorCompat get_Instance();
    private static Delegate GetEvaluate_FLjava_lang_Integer_Ljava_lang_Integer_Handler();
    private static IntPtr n_Evaluate_FLjava_lang_Integer_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, float fraction, IntPtr native_startValue, IntPtr native_endValue);
    [RegisterAttribute("evaluate", "(FLjava/lang/Integer;Ljava/lang/Integer;)Ljava/lang/Integer;", "GetEvaluate_FLjava_lang_Integer_Ljava_lang_Integer_Handler")]
public virtual Integer Evaluate(float fraction, Integer startValue, Integer endValue);
}
[RegisterAttribute("android/support/design/animation/ChildrenAlphaProperty")]
public class Android.Support.Design.Animation.ChildrenAlphaProperty : Property {
    internal static JniPeerMembers _members;
    private static Delegate cb_get_Landroid_view_ViewGroup_;
    private static Delegate cb_set_Landroid_view_ViewGroup_Ljava_lang_Float_;
    [RegisterAttribute("CHILDREN_ALPHA")]
public static Property ChildrenAlpha { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ChildrenAlphaProperty(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChildrenAlphaProperty();
    public static Property get_ChildrenAlpha();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGet_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_Get_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("get", "(Landroid/view/ViewGroup;)Ljava/lang/Float;", "GetGet_Landroid_view_ViewGroup_Handler")]
public virtual Object Get(Object object);
    private static Delegate GetSet_Landroid_view_ViewGroup_Ljava_lang_Float_Handler();
    private static void n_Set_Landroid_view_ViewGroup_Ljava_lang_Float_(IntPtr jnienv, IntPtr native__this, IntPtr native__object, IntPtr native_value);
    [RegisterAttribute("set", "(Landroid/view/ViewGroup;Ljava/lang/Float;)V", "GetSet_Landroid_view_ViewGroup_Ljava_lang_Float_Handler")]
public virtual void Set(ViewGroup object, Float value);
}
[RegisterAttribute("android/support/design/animation/DrawableAlphaProperty")]
public class Android.Support.Design.Animation.DrawableAlphaProperty : Property {
    internal static JniPeerMembers _members;
    private static Delegate cb_get_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_set_Landroid_graphics_drawable_Drawable_Ljava_lang_Integer_;
    [RegisterAttribute("DRAWABLE_ALPHA_COMPAT")]
public static Property DrawableAlphaCompat { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DrawableAlphaProperty(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableAlphaProperty();
    public static Property get_DrawableAlphaCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGet_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_Get_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("get", "(Landroid/graphics/drawable/Drawable;)Ljava/lang/Integer;", "GetGet_Landroid_graphics_drawable_Drawable_Handler")]
public virtual Object Get(Object object);
    private static Delegate GetSet_Landroid_graphics_drawable_Drawable_Ljava_lang_Integer_Handler();
    private static void n_Set_Landroid_graphics_drawable_Drawable_Ljava_lang_Integer_(IntPtr jnienv, IntPtr native__this, IntPtr native__object, IntPtr native_value);
    [RegisterAttribute("set", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Integer;)V", "GetSet_Landroid_graphics_drawable_Drawable_Ljava_lang_Integer_Handler")]
public virtual void Set(Drawable object, Integer value);
}
[RegisterAttribute("android/support/design/animation/ImageMatrixProperty")]
public class Android.Support.Design.Animation.ImageMatrixProperty : Property {
    internal static JniPeerMembers _members;
    private static Delegate cb_get_Landroid_widget_ImageView_;
    private static Delegate cb_set_Landroid_widget_ImageView_Landroid_graphics_Matrix_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ImageMatrixProperty(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageMatrixProperty();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGet_Landroid_widget_ImageView_Handler();
    private static IntPtr n_Get_Landroid_widget_ImageView_(IntPtr jnienv, IntPtr native__this, IntPtr native__object);
    [RegisterAttribute("get", "(Landroid/widget/ImageView;)Landroid/graphics/Matrix;", "GetGet_Landroid_widget_ImageView_Handler")]
public virtual Object Get(Object object);
    private static Delegate GetSet_Landroid_widget_ImageView_Landroid_graphics_Matrix_Handler();
    private static void n_Set_Landroid_widget_ImageView_Landroid_graphics_Matrix_(IntPtr jnienv, IntPtr native__this, IntPtr native__object, IntPtr native_value);
    [RegisterAttribute("set", "(Landroid/widget/ImageView;Landroid/graphics/Matrix;)V", "GetSet_Landroid_widget_ImageView_Landroid_graphics_Matrix_Handler")]
public virtual void Set(ImageView object, Matrix value);
}
[RegisterAttribute("android/support/design/animation/MatrixEvaluator")]
public class Android.Support.Design.Animation.MatrixEvaluator : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_evaluate_FLandroid_graphics_Matrix_Landroid_graphics_Matrix_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MatrixEvaluator(IntPtr javaReference, JniHandleOwnership transfer);
    private static MatrixEvaluator();
    public sealed virtual Object Evaluate(float fraction, Object startValue, Object endValue);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEvaluate_FLandroid_graphics_Matrix_Landroid_graphics_Matrix_Handler();
    private static IntPtr n_Evaluate_FLandroid_graphics_Matrix_Landroid_graphics_Matrix_(IntPtr jnienv, IntPtr native__this, float fraction, IntPtr native_startValue, IntPtr native_endValue);
    [RegisterAttribute("evaluate", "(FLandroid/graphics/Matrix;Landroid/graphics/Matrix;)Landroid/graphics/Matrix;", "GetEvaluate_FLandroid_graphics_Matrix_Landroid_graphics_Matrix_Handler")]
public virtual Matrix Evaluate(float fraction, Matrix startValue, Matrix endValue);
}
[RegisterAttribute("android/support/design/animation/MotionSpec")]
public class Android.Support.Design.Animation.MotionSpec : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getTotalDuration;
    private static Delegate cb_getTiming_Ljava_lang_String_;
    private static Delegate cb_hasTiming_Ljava_lang_String_;
    private static Delegate cb_setTiming_Ljava_lang_String_Landroid_support_design_animation_MotionTiming_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public long TotalDuration { get; }
    protected MotionSpec(IntPtr javaReference, JniHandleOwnership transfer);
    private static MotionSpec();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetTotalDurationHandler();
    private static long n_GetTotalDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTotalDuration", "()J", "GetGetTotalDurationHandler")]
public virtual long get_TotalDuration();
    [RegisterAttribute("createFromAttribute", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/support/design/animation/MotionSpec;", "")]
public static MotionSpec CreateFromAttribute(Context context, TypedArray attributes, int index);
    [RegisterAttribute("createFromResource", "(Landroid/content/Context;I)Landroid/support/design/animation/MotionSpec;", "")]
public static MotionSpec CreateFromResource(Context context, int id);
    private static Delegate GetGetTiming_Ljava_lang_String_Handler();
    private static IntPtr n_GetTiming_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_name);
    [RegisterAttribute("getTiming", "(Ljava/lang/String;)Landroid/support/design/animation/MotionTiming;", "GetGetTiming_Ljava_lang_String_Handler")]
public virtual MotionTiming GetTiming(string name);
    private static Delegate GetHasTiming_Ljava_lang_String_Handler();
    private static bool n_HasTiming_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_name);
    [RegisterAttribute("hasTiming", "(Ljava/lang/String;)Z", "GetHasTiming_Ljava_lang_String_Handler")]
public virtual bool HasTiming(string name);
    private static Delegate GetSetTiming_Ljava_lang_String_Landroid_support_design_animation_MotionTiming_Handler();
    private static void n_SetTiming_Ljava_lang_String_Landroid_support_design_animation_MotionTiming_(IntPtr jnienv, IntPtr native__this, IntPtr native_name, IntPtr native_timing);
    [RegisterAttribute("setTiming", "(Ljava/lang/String;Landroid/support/design/animation/MotionTiming;)V", "GetSetTiming_Ljava_lang_String_Landroid_support_design_animation_MotionTiming_Handler")]
public virtual void SetTiming(string name, MotionTiming timing);
}
[RegisterAttribute("android/support/design/animation/MotionTiming")]
public class Android.Support.Design.Animation.MotionTiming : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getDelay;
    private static Delegate cb_getDuration;
    private static Delegate cb_getInterpolator;
    private static Delegate cb_getRepeatCount;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_apply_Landroid_animation_Animator_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public long Delay { get; }
    public long Duration { get; }
    public ITimeInterpolator Interpolator { get; }
    public int RepeatCount { get; }
    public int RepeatMode { get; }
    protected MotionTiming(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(JJ)V", "")]
public MotionTiming(long delay, long duration);
    [RegisterAttribute(".ctor", "(JJLandroid/animation/TimeInterpolator;)V", "")]
public MotionTiming(long delay, long duration, ITimeInterpolator interpolator);
    private static MotionTiming();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDelayHandler();
    private static long n_GetDelay(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDelay", "()J", "GetGetDelayHandler")]
public virtual long get_Delay();
    private static Delegate GetGetDurationHandler();
    private static long n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public virtual long get_Duration();
    private static Delegate GetGetInterpolatorHandler();
    private static IntPtr n_GetInterpolator(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInterpolator", "()Landroid/animation/TimeInterpolator;", "GetGetInterpolatorHandler")]
public virtual ITimeInterpolator get_Interpolator();
    private static Delegate GetGetRepeatCountHandler();
    private static int n_GetRepeatCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRepeatCount", "()I", "GetGetRepeatCountHandler")]
public virtual int get_RepeatCount();
    private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    private static Delegate GetApply_Landroid_animation_Animator_Handler();
    private static void n_Apply_Landroid_animation_Animator_(IntPtr jnienv, IntPtr native__this, IntPtr native_animator);
    [RegisterAttribute("apply", "(Landroid/animation/Animator;)V", "GetApply_Landroid_animation_Animator_Handler")]
public virtual void Apply(Animator animator);
}
[RegisterAttribute("android/support/design/animation/Positioning")]
public class Android.Support.Design.Animation.Positioning : Object {
    internal static JniPeerMembers _members;
    [RegisterAttribute("gravity")]
public int Gravity { get; public set; }
    [RegisterAttribute("xAdjustment")]
public float XAdjustment { get; public set; }
    [RegisterAttribute("yAdjustment")]
public float YAdjustment { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected Positioning(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(IFF)V", "")]
public Positioning(int gravity, float xAdjustment, float yAdjustment);
    private static Positioning();
    public int get_Gravity();
    public void set_Gravity(int value);
    public float get_XAdjustment();
    public void set_XAdjustment(float value);
    public float get_YAdjustment();
    public void set_YAdjustment(float value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/behavior/HideBottomViewOnScrollBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Behavior.HideBottomViewOnScrollBehavior : Behavior {
    [RegisterAttribute("ENTER_ANIMATION_DURATION")]
protected static int EnterAnimationDuration;
    [RegisterAttribute("EXIT_ANIMATION_DURATION")]
protected static int ExitAnimationDuration;
    internal static JniPeerMembers _members;
    private static Delegate cb_onLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I;
    private static Delegate cb_onNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIII;
    private static Delegate cb_onStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_I;
    private static Delegate cb_slideDown_Landroid_view_View_;
    private static Delegate cb_slideUp_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected HideBottomViewOnScrollBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public HideBottomViewOnScrollBehavior(Context context, IAttributeSet attrs);
    private static HideBottomViewOnScrollBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler();
    private static bool n_OnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("onLayoutChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;I)Z", "GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler")]
public virtual bool OnLayoutChild(CoordinatorLayout parent, Object child, int layoutDirection);
    private static Delegate GetOnNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIIIHandler();
    private static void n_OnNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;IIII)V", "GetOnNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIIIHandler")]
public virtual void OnNestedScroll(CoordinatorLayout coordinatorLayout, Object child, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    private static Delegate GetOnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_IHandler();
    private static bool n_OnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_directTargetChild, IntPtr native_target, int nestedScrollAxes);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;Landroid/view/View;I)Z", "GetOnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_IHandler")]
public virtual bool OnStartNestedScroll(CoordinatorLayout coordinatorLayout, Object child, View directTargetChild, View target, int nestedScrollAxes);
    private static Delegate GetSlideDown_Landroid_view_View_Handler();
    private static void n_SlideDown_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("slideDown", "(Landroid/view/View;)V", "GetSlideDown_Landroid_view_View_Handler")]
protected virtual void SlideDown(Object child);
    private static Delegate GetSlideUp_Landroid_view_View_Handler();
    private static void n_SlideUp_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("slideUp", "(Landroid/view/View;)V", "GetSlideUp_Landroid_view_View_Handler")]
protected virtual void SlideUp(Object child);
}
[RegisterAttribute("android/support/design/bottomappbar/BottomAppBar")]
public class Android.Support.Design.BottomAppBar.BottomAppBar : Toolbar {
    [RegisterAttribute("FAB_ALIGNMENT_MODE_CENTER")]
public static int FabAlignmentModeCenter;
    [RegisterAttribute("FAB_ALIGNMENT_MODE_END")]
public static int FabAlignmentModeEnd;
    internal static JniPeerMembers _members;
    private static Delegate cb_getBackgroundTint;
    private static Delegate cb_setBackgroundTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getCradleVerticalOffset;
    private static Delegate cb_setCradleVerticalOffset_F;
    private static Delegate cb_getFabAlignmentMode;
    private static Delegate cb_setFabAlignmentMode_I;
    private static Delegate cb_getFabCradleMargin;
    private static Delegate cb_setFabCradleMargin_F;
    private static Delegate cb_getFabCradleRoundedCornerRadius;
    private static Delegate cb_setFabCradleRoundedCornerRadius_F;
    private static Delegate cb_getHideOnScroll;
    private static Delegate cb_setHideOnScroll_Z;
    private static Delegate cb_getBehavior;
    private static Delegate cb_replaceMenu_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList BackgroundTint { get; public set; }
    public float CradleVerticalOffset { get; public set; }
    public int FabAlignmentMode { get; public set; }
    public float FabCradleMargin { get; public set; }
    public float FabCradleRoundedCornerRadius { get; public set; }
    public bool HideOnScroll { get; public set; }
    protected BottomAppBar(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomAppBar(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomAppBar(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BottomAppBar(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BottomAppBar();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBackgroundTintHandler();
    private static IntPtr n_GetBackgroundTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBackgroundTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetBackgroundTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_backgroundTint);
    [RegisterAttribute("getBackgroundTint", "()Landroid/content/res/ColorStateList;", "GetGetBackgroundTintHandler")]
public virtual ColorStateList get_BackgroundTint();
    [RegisterAttribute("setBackgroundTint", "(Landroid/content/res/ColorStateList;)V", "GetSetBackgroundTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_BackgroundTint(ColorStateList value);
    private static Delegate GetGetCradleVerticalOffsetHandler();
    private static float n_GetCradleVerticalOffset(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCradleVerticalOffset_FHandler();
    private static void n_SetCradleVerticalOffset_F(IntPtr jnienv, IntPtr native__this, float verticalOffset);
    [RegisterAttribute("getCradleVerticalOffset", "()F", "GetGetCradleVerticalOffsetHandler")]
public virtual float get_CradleVerticalOffset();
    [RegisterAttribute("setCradleVerticalOffset", "(F)V", "GetSetCradleVerticalOffset_FHandler")]
public virtual void set_CradleVerticalOffset(float value);
    private static Delegate GetGetFabAlignmentModeHandler();
    private static int n_GetFabAlignmentMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFabAlignmentMode_IHandler();
    private static void n_SetFabAlignmentMode_I(IntPtr jnienv, IntPtr native__this, int fabAlignmentMode);
    [RegisterAttribute("getFabAlignmentMode", "()I", "GetGetFabAlignmentModeHandler")]
public virtual int get_FabAlignmentMode();
    [RegisterAttribute("setFabAlignmentMode", "(I)V", "GetSetFabAlignmentMode_IHandler")]
public virtual void set_FabAlignmentMode(int value);
    private static Delegate GetGetFabCradleMarginHandler();
    private static float n_GetFabCradleMargin(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFabCradleMargin_FHandler();
    private static void n_SetFabCradleMargin_F(IntPtr jnienv, IntPtr native__this, float cradleMargin);
    [RegisterAttribute("getFabCradleMargin", "()F", "GetGetFabCradleMarginHandler")]
public virtual float get_FabCradleMargin();
    [RegisterAttribute("setFabCradleMargin", "(F)V", "GetSetFabCradleMargin_FHandler")]
public virtual void set_FabCradleMargin(float value);
    private static Delegate GetGetFabCradleRoundedCornerRadiusHandler();
    private static float n_GetFabCradleRoundedCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFabCradleRoundedCornerRadius_FHandler();
    private static void n_SetFabCradleRoundedCornerRadius_F(IntPtr jnienv, IntPtr native__this, float roundedCornerRadius);
    [RegisterAttribute("getFabCradleRoundedCornerRadius", "()F", "GetGetFabCradleRoundedCornerRadiusHandler")]
public virtual float get_FabCradleRoundedCornerRadius();
    [RegisterAttribute("setFabCradleRoundedCornerRadius", "(F)V", "GetSetFabCradleRoundedCornerRadius_FHandler")]
public virtual void set_FabCradleRoundedCornerRadius(float value);
    private static Delegate GetGetHideOnScrollHandler();
    private static bool n_GetHideOnScroll(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideOnScroll_ZHandler();
    private static void n_SetHideOnScroll_Z(IntPtr jnienv, IntPtr native__this, bool hide);
    [RegisterAttribute("getHideOnScroll", "()Z", "GetGetHideOnScrollHandler")]
public virtual bool get_HideOnScroll();
    [RegisterAttribute("setHideOnScroll", "(Z)V", "GetSetHideOnScroll_ZHandler")]
public virtual void set_HideOnScroll(bool value);
    private static Delegate GetGetBehaviorHandler();
    private static IntPtr n_GetBehavior(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBehavior", "()Landroid/support/design/widget/CoordinatorLayout$Behavior;", "GetGetBehaviorHandler")]
public virtual Behavior GetBehavior();
    private static Delegate GetReplaceMenu_IHandler();
    private static void n_ReplaceMenu_I(IntPtr jnienv, IntPtr native__this, int newMenu);
    [RegisterAttribute("replaceMenu", "(I)V", "GetReplaceMenu_IHandler")]
public virtual void ReplaceMenu(int newMenu);
}
[RegisterAttribute("android/support/design/bottomappbar/BottomAppBarTopEdgeTreatment")]
public class Android.Support.Design.BottomAppBar.BottomAppBarTopEdgeTreatment : EdgeTreatment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BottomAppBarTopEdgeTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FFF)V", "")]
public BottomAppBarTopEdgeTreatment(float fabMargin, float roundedCornerRadius, float cradleVerticalOffset);
    private static BottomAppBarTopEdgeTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/bottomnavigation/LabelVisibilityMode", "", "Android.Support.Design.BottomNavigation.ILabelVisibilityModeInvoker")]
public interface Android.Support.Design.BottomNavigation.ILabelVisibilityMode {
}
[RegisterAttribute("android/support/design/bottomnavigation/LabelVisibilityMode")]
internal class Android.Support.Design.BottomNavigation.ILabelVisibilityModeInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ILabelVisibilityModeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILabelVisibilityModeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ILabelVisibilityMode GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ToString();
}
[RegisterAttribute("android/support/design/bottomnavigation/LabelVisibilityMode")]
public abstract class Android.Support.Design.BottomNavigation.LabelVisibilityMode : Object {
    [RegisterAttribute("LABEL_VISIBILITY_AUTO")]
public static int LabelVisibilityAuto;
    [RegisterAttribute("LABEL_VISIBILITY_LABELED")]
public static int LabelVisibilityLabeled;
    [RegisterAttribute("LABEL_VISIBILITY_SELECTED")]
public static int LabelVisibilitySelected;
    [RegisterAttribute("LABEL_VISIBILITY_UNLABELED")]
public static int LabelVisibilityUnlabeled;
}
[AnnotationAttribute("android.support.design.bottomnavigation.LabelVisibilityMode")]
public class Android.Support.Design.BottomNavigation.LabelVisibilityModeAttribute : Attribute {
}
[RegisterAttribute("android/support/design/bottomnavigation/LabelVisibilityMode")]
[ObsoleteAttribute("Use the 'LabelVisibilityMode' type. This type will be removed in a future release.")]
public abstract class Android.Support.Design.BottomNavigation.LabelVisibilityModeConsts : LabelVisibilityMode {
}
[RegisterAttribute("android/support/design/button/MaterialButton")]
public class Android.Support.Design.Button.MaterialButton : AppCompatButton {
    [RegisterAttribute("ICON_GRAVITY_START")]
public static int IconGravityStart;
    [RegisterAttribute("ICON_GRAVITY_TEXT_START")]
public static int IconGravityTextStart;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCornerRadius;
    private static Delegate cb_setCornerRadius_I;
    private static Delegate cb_getIcon;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getIconGravity;
    private static Delegate cb_setIconGravity_I;
    private static Delegate cb_getIconPadding;
    private static Delegate cb_setIconPadding_I;
    private static Delegate cb_getIconSize;
    private static Delegate cb_setIconSize_I;
    private static Delegate cb_getIconTint;
    private static Delegate cb_setIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getIconTintMode;
    private static Delegate cb_setIconTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static Delegate cb_getRippleColor;
    private static Delegate cb_setRippleColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getStrokeColor;
    private static Delegate cb_setStrokeColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getStrokeWidth;
    private static Delegate cb_setStrokeWidth_I;
    private static Delegate cb_setCornerRadiusResource_I;
    private static Delegate cb_setIconResource_I;
    private static Delegate cb_setIconTintResource_I;
    private static Delegate cb_setRippleColorResource_I;
    private static Delegate cb_setStrokeColorResource_I;
    private static Delegate cb_setStrokeWidthResource_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CornerRadius { get; public set; }
    public Drawable Icon { get; public set; }
    public int IconGravity { get; public set; }
    public int IconPadding { get; public set; }
    public int IconSize { get; public set; }
    public ColorStateList IconTint { get; public set; }
    public Mode IconTintMode { get; public set; }
    public ColorStateList RippleColor { get; public set; }
    public ColorStateList StrokeColor { get; public set; }
    public int StrokeWidth { get; public set; }
    protected MaterialButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MaterialButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public MaterialButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public MaterialButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static MaterialButton();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCornerRadiusHandler();
    private static int n_GetCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCornerRadius_IHandler();
    private static void n_SetCornerRadius_I(IntPtr jnienv, IntPtr native__this, int cornerRadius);
    [RegisterAttribute("getCornerRadius", "()I", "GetGetCornerRadiusHandler")]
public virtual int get_CornerRadius();
    [RegisterAttribute("setCornerRadius", "(I)V", "GetSetCornerRadius_IHandler")]
public virtual void set_CornerRadius(int value);
    private static Delegate GetGetIconHandler();
    private static IntPtr n_GetIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("getIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetIconHandler")]
public virtual Drawable get_Icon();
    [RegisterAttribute("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_Icon(Drawable value);
    private static Delegate GetGetIconGravityHandler();
    private static int n_GetIconGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconGravity_IHandler();
    private static void n_SetIconGravity_I(IntPtr jnienv, IntPtr native__this, int iconGravity);
    [RegisterAttribute("getIconGravity", "()I", "GetGetIconGravityHandler")]
public virtual int get_IconGravity();
    [RegisterAttribute("setIconGravity", "(I)V", "GetSetIconGravity_IHandler")]
public virtual void set_IconGravity(int value);
    private static Delegate GetGetIconPaddingHandler();
    private static int n_GetIconPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconPadding_IHandler();
    private static void n_SetIconPadding_I(IntPtr jnienv, IntPtr native__this, int iconPadding);
    [RegisterAttribute("getIconPadding", "()I", "GetGetIconPaddingHandler")]
public virtual int get_IconPadding();
    [RegisterAttribute("setIconPadding", "(I)V", "GetSetIconPadding_IHandler")]
public virtual void set_IconPadding(int value);
    private static Delegate GetGetIconSizeHandler();
    private static int n_GetIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconSize_IHandler();
    private static void n_SetIconSize_I(IntPtr jnienv, IntPtr native__this, int iconSize);
    [RegisterAttribute("getIconSize", "()I", "GetGetIconSizeHandler")]
public virtual int get_IconSize();
    [RegisterAttribute("setIconSize", "(I)V", "GetSetIconSize_IHandler")]
public virtual void set_IconSize(int value);
    private static Delegate GetGetIconTintHandler();
    private static IntPtr n_GetIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_iconTint);
    [RegisterAttribute("getIconTint", "()Landroid/content/res/ColorStateList;", "GetGetIconTintHandler")]
public virtual ColorStateList get_IconTint();
    [RegisterAttribute("setIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_IconTint(ColorStateList value);
    private static Delegate GetGetIconTintModeHandler();
    private static IntPtr n_GetIconTintMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetIconTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_iconTintMode);
    [RegisterAttribute("getIconTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetIconTintModeHandler")]
public virtual Mode get_IconTintMode();
    [RegisterAttribute("setIconTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetIconTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void set_IconTintMode(Mode value);
    private static Delegate GetGetRippleColorHandler();
    private static IntPtr n_GetRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRippleColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetRippleColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_rippleColor);
    [RegisterAttribute("getRippleColor", "()Landroid/content/res/ColorStateList;", "GetGetRippleColorHandler")]
public virtual ColorStateList get_RippleColor();
    [RegisterAttribute("setRippleColor", "(Landroid/content/res/ColorStateList;)V", "GetSetRippleColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_RippleColor(ColorStateList value);
    private static Delegate GetGetStrokeColorHandler();
    private static IntPtr n_GetStrokeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetStrokeColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_strokeColor);
    [RegisterAttribute("getStrokeColor", "()Landroid/content/res/ColorStateList;", "GetGetStrokeColorHandler")]
public virtual ColorStateList get_StrokeColor();
    [RegisterAttribute("setStrokeColor", "(Landroid/content/res/ColorStateList;)V", "GetSetStrokeColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_StrokeColor(ColorStateList value);
    private static Delegate GetGetStrokeWidthHandler();
    private static int n_GetStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeWidth_IHandler();
    private static void n_SetStrokeWidth_I(IntPtr jnienv, IntPtr native__this, int strokeWidth);
    [RegisterAttribute("getStrokeWidth", "()I", "GetGetStrokeWidthHandler")]
public virtual int get_StrokeWidth();
    [RegisterAttribute("setStrokeWidth", "(I)V", "GetSetStrokeWidth_IHandler")]
public virtual void set_StrokeWidth(int value);
    private static Delegate GetSetCornerRadiusResource_IHandler();
    private static void n_SetCornerRadiusResource_I(IntPtr jnienv, IntPtr native__this, int cornerRadiusResourceId);
    [RegisterAttribute("setCornerRadiusResource", "(I)V", "GetSetCornerRadiusResource_IHandler")]
public virtual void SetCornerRadiusResource(int cornerRadiusResourceId);
    private static Delegate GetSetIconResource_IHandler();
    private static void n_SetIconResource_I(IntPtr jnienv, IntPtr native__this, int iconResourceId);
    [RegisterAttribute("setIconResource", "(I)V", "GetSetIconResource_IHandler")]
public virtual void SetIconResource(int iconResourceId);
    private static Delegate GetSetIconTintResource_IHandler();
    private static void n_SetIconTintResource_I(IntPtr jnienv, IntPtr native__this, int iconTintResourceId);
    [RegisterAttribute("setIconTintResource", "(I)V", "GetSetIconTintResource_IHandler")]
public virtual void SetIconTintResource(int iconTintResourceId);
    private static Delegate GetSetRippleColorResource_IHandler();
    private static void n_SetRippleColorResource_I(IntPtr jnienv, IntPtr native__this, int rippleColorResourceId);
    [RegisterAttribute("setRippleColorResource", "(I)V", "GetSetRippleColorResource_IHandler")]
public virtual void SetRippleColorResource(int rippleColorResourceId);
    private static Delegate GetSetStrokeColorResource_IHandler();
    private static void n_SetStrokeColorResource_I(IntPtr jnienv, IntPtr native__this, int strokeColorResourceId);
    [RegisterAttribute("setStrokeColorResource", "(I)V", "GetSetStrokeColorResource_IHandler")]
public virtual void SetStrokeColorResource(int strokeColorResourceId);
    private static Delegate GetSetStrokeWidthResource_IHandler();
    private static void n_SetStrokeWidthResource_I(IntPtr jnienv, IntPtr native__this, int strokeWidthResourceId);
    [RegisterAttribute("setStrokeWidthResource", "(I)V", "GetSetStrokeWidthResource_IHandler")]
public virtual void SetStrokeWidthResource(int strokeWidthResourceId);
}
[RegisterAttribute("android/support/design/canvas/CanvasCompat")]
public class Android.Support.Design.Canvas.CanvasCompat : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CanvasCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static CanvasCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("saveLayerAlpha", "(Landroid/graphics/Canvas;Landroid/graphics/RectF;I)I", "")]
public static int SaveLayerAlpha(Canvas canvas, RectF bounds, int alpha);
    [RegisterAttribute("saveLayerAlpha", "(Landroid/graphics/Canvas;FFFFI)I", "")]
public static int SaveLayerAlpha(Canvas canvas, float left, float top, float right, float bottom, int alpha);
}
[RegisterAttribute("android/support/design/card/MaterialCardView")]
public class Android.Support.Design.Card.MaterialCardView : CardView {
    internal static JniPeerMembers _members;
    private static Delegate cb_getStrokeColor;
    private static Delegate cb_setStrokeColor_I;
    private static Delegate cb_getStrokeWidth;
    private static Delegate cb_setStrokeWidth_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int StrokeColor { get; public set; }
    public int StrokeWidth { get; public set; }
    protected MaterialCardView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MaterialCardView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public MaterialCardView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public MaterialCardView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static MaterialCardView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetStrokeColorHandler();
    private static int n_GetStrokeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeColor_IHandler();
    private static void n_SetStrokeColor_I(IntPtr jnienv, IntPtr native__this, int strokeColor);
    [RegisterAttribute("getStrokeColor", "()I", "GetGetStrokeColorHandler")]
public virtual int get_StrokeColor();
    [RegisterAttribute("setStrokeColor", "(I)V", "GetSetStrokeColor_IHandler")]
public virtual void set_StrokeColor(int value);
    private static Delegate GetGetStrokeWidthHandler();
    private static int n_GetStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeWidth_IHandler();
    private static void n_SetStrokeWidth_I(IntPtr jnienv, IntPtr native__this, int strokeWidth);
    [RegisterAttribute("getStrokeWidth", "()I", "GetGetStrokeWidthHandler")]
public virtual int get_StrokeWidth();
    [RegisterAttribute("setStrokeWidth", "(I)V", "GetSetStrokeWidth_IHandler")]
public virtual void set_StrokeWidth(int value);
}
[RegisterAttribute("android/support/design/chip/Chip")]
public class Android.Support.Design.Chip.Chip : AppCompatCheckBox {
    internal static JniPeerMembers _members;
    private static Delegate cb_isCheckable;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_getCheckedIcon;
    private static Delegate cb_setCheckedIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isCheckedIconEnabled;
    private static Delegate cb_setCheckedIconEnabled_Z;
    private static Delegate cb_isCheckedIconVisible;
    private static Delegate cb_setCheckedIconVisible_Z;
    private static Delegate cb_getChipBackgroundColor;
    private static Delegate cb_setChipBackgroundColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getChipCornerRadius;
    private static Delegate cb_setChipCornerRadius_F;
    private static Delegate cb_getChipDrawable;
    private static Delegate cb_getChipEndPadding;
    private static Delegate cb_setChipEndPadding_F;
    private static Delegate cb_getChipIcon;
    private static Delegate cb_setChipIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isChipIconEnabled;
    private static Delegate cb_setChipIconEnabled_Z;
    private static Delegate cb_getChipIconSize;
    private static Delegate cb_setChipIconSize_F;
    private static Delegate cb_getChipIconTint;
    private static Delegate cb_setChipIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_isChipIconVisible;
    private static Delegate cb_setChipIconVisible_Z;
    private static Delegate cb_getChipMinHeight;
    private static Delegate cb_setChipMinHeight_F;
    private static Delegate cb_getChipStartPadding;
    private static Delegate cb_setChipStartPadding_F;
    private static Delegate cb_getChipStrokeColor;
    private static Delegate cb_setChipStrokeColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getChipStrokeWidth;
    private static Delegate cb_setChipStrokeWidth_F;
    private static Delegate cb_getChipText;
    private static Delegate cb_setChipText_Ljava_lang_CharSequence_;
    private static Delegate cb_getCloseIcon;
    private static Delegate cb_setCloseIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCloseIconContentDescription;
    private static Delegate cb_setCloseIconContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isCloseIconEnabled;
    private static Delegate cb_setCloseIconEnabled_Z;
    private static Delegate cb_getCloseIconEndPadding;
    private static Delegate cb_setCloseIconEndPadding_F;
    private static Delegate cb_getCloseIconSize;
    private static Delegate cb_setCloseIconSize_F;
    private static Delegate cb_getCloseIconStartPadding;
    private static Delegate cb_setCloseIconStartPadding_F;
    private static Delegate cb_getCloseIconTint;
    private static Delegate cb_setCloseIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_isCloseIconVisible;
    private static Delegate cb_setCloseIconVisible_Z;
    private static Delegate cb_getHideMotionSpec;
    private static Delegate cb_setHideMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_getIconEndPadding;
    private static Delegate cb_setIconEndPadding_F;
    private static Delegate cb_getIconStartPadding;
    private static Delegate cb_setIconStartPadding_F;
    private static Delegate cb_getRippleColor;
    private static Delegate cb_setRippleColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getShowMotionSpec;
    private static Delegate cb_setShowMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_getTextEndPadding;
    private static Delegate cb_setTextEndPadding_F;
    private static Delegate cb_getTextStartPadding;
    private static Delegate cb_setTextStartPadding_F;
    private static Delegate cb_onChipDrawableSizeChange;
    private static Delegate cb_performCloseIconClick;
    private static Delegate cb_setCheckableResource_I;
    private static Delegate cb_setCheckedIconEnabledResource_I;
    private static Delegate cb_setCheckedIconResource_I;
    private static Delegate cb_setCheckedIconVisible_I;
    private static Delegate cb_setChipBackgroundColorResource_I;
    private static Delegate cb_setChipCornerRadiusResource_I;
    private static Delegate cb_setChipDrawable_Landroid_support_design_chip_ChipDrawable_;
    private static Delegate cb_setChipEndPaddingResource_I;
    private static Delegate cb_setChipIconEnabledResource_I;
    private static Delegate cb_setChipIconResource_I;
    private static Delegate cb_setChipIconSizeResource_I;
    private static Delegate cb_setChipIconTintResource_I;
    private static Delegate cb_setChipIconVisible_I;
    private static Delegate cb_setChipMinHeightResource_I;
    private static Delegate cb_setChipStartPaddingResource_I;
    private static Delegate cb_setChipStrokeColorResource_I;
    private static Delegate cb_setChipStrokeWidthResource_I;
    private static Delegate cb_setChipTextResource_I;
    private static Delegate cb_setCloseIconEnabledResource_I;
    private static Delegate cb_setCloseIconEndPaddingResource_I;
    private static Delegate cb_setCloseIconResource_I;
    private static Delegate cb_setCloseIconSizeResource_I;
    private static Delegate cb_setCloseIconStartPaddingResource_I;
    private static Delegate cb_setCloseIconTintResource_I;
    private static Delegate cb_setCloseIconVisible_I;
    private static Delegate cb_setHideMotionSpecResource_I;
    private static Delegate cb_setIconEndPaddingResource_I;
    private static Delegate cb_setIconStartPaddingResource_I;
    private static Delegate cb_setOnCloseIconClickListener_Landroid_view_View_OnClickListener_;
    private static Delegate cb_setRippleColorResource_I;
    private static Delegate cb_setShowMotionSpecResource_I;
    private static Delegate cb_setTextAppearance_Landroid_support_design_resources_TextAppearance_;
    private static Delegate cb_setTextAppearanceResource_I;
    private static Delegate cb_setTextEndPaddingResource_I;
    private static Delegate cb_setTextStartPaddingResource_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Checkable { get; public set; }
    public Drawable CheckedIcon { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool CheckedIconEnabled { get; public set; }
    public bool CheckedIconVisible { get; public set; }
    public ColorStateList ChipBackgroundColor { get; public set; }
    public float ChipCornerRadius { get; public set; }
    public Drawable ChipDrawable { get; }
    public float ChipEndPadding { get; public set; }
    public Drawable ChipIcon { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool ChipIconEnabled { get; public set; }
    public float ChipIconSize { get; public set; }
    public ColorStateList ChipIconTint { get; public set; }
    public bool ChipIconVisible { get; public set; }
    public float ChipMinHeight { get; public set; }
    public float ChipStartPadding { get; public set; }
    public ColorStateList ChipStrokeColor { get; public set; }
    public float ChipStrokeWidth { get; public set; }
    [ObsoleteAttribute("deprecated")]
public ICharSequence ChipTextFormatted { get; public set; }
    public string ChipText { get; public set; }
    public Drawable CloseIcon { get; public set; }
    public ICharSequence CloseIconContentDescriptionFormatted { get; public set; }
    public string CloseIconContentDescription { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool CloseIconEnabled { get; public set; }
    public float CloseIconEndPadding { get; public set; }
    public float CloseIconSize { get; public set; }
    public float CloseIconStartPadding { get; public set; }
    public ColorStateList CloseIconTint { get; public set; }
    public bool CloseIconVisible { get; public set; }
    public MotionSpec HideMotionSpec { get; public set; }
    public float IconEndPadding { get; public set; }
    public float IconStartPadding { get; public set; }
    public ColorStateList RippleColor { get; public set; }
    public MotionSpec ShowMotionSpec { get; public set; }
    public float TextEndPadding { get; public set; }
    public float TextStartPadding { get; public set; }
    protected Chip(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public Chip(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public Chip(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public Chip(Context context, IAttributeSet attrs, int defStyleAttr);
    private static Chip();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("isCheckable", "()Z", "GetIsCheckableHandler")]
public virtual bool get_Checkable();
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void set_Checkable(bool value);
    private static Delegate GetGetCheckedIconHandler();
    private static IntPtr n_GetCheckedIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCheckedIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_checkedIcon);
    [RegisterAttribute("getCheckedIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetCheckedIconHandler")]
public virtual Drawable get_CheckedIcon();
    [RegisterAttribute("setCheckedIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCheckedIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CheckedIcon(Drawable value);
    private static Delegate GetIsCheckedIconEnabledHandler();
    private static bool n_IsCheckedIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIconEnabled_ZHandler();
    private static void n_SetCheckedIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool checkedIconEnabled);
    [RegisterAttribute("isCheckedIconEnabled", "()Z", "GetIsCheckedIconEnabledHandler")]
public virtual bool get_CheckedIconEnabled();
    [RegisterAttribute("setCheckedIconEnabled", "(Z)V", "GetSetCheckedIconEnabled_ZHandler")]
public virtual void set_CheckedIconEnabled(bool value);
    private static Delegate GetIsCheckedIconVisibleHandler();
    private static bool n_IsCheckedIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIconVisible_ZHandler();
    private static void n_SetCheckedIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool checkedIconVisible);
    [RegisterAttribute("isCheckedIconVisible", "()Z", "GetIsCheckedIconVisibleHandler")]
public virtual bool get_CheckedIconVisible();
    [RegisterAttribute("setCheckedIconVisible", "(Z)V", "GetSetCheckedIconVisible_ZHandler")]
public virtual void set_CheckedIconVisible(bool value);
    private static Delegate GetGetChipBackgroundColorHandler();
    private static IntPtr n_GetChipBackgroundColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipBackgroundColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipBackgroundColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipBackgroundColor);
    [RegisterAttribute("getChipBackgroundColor", "()Landroid/content/res/ColorStateList;", "GetGetChipBackgroundColorHandler")]
public virtual ColorStateList get_ChipBackgroundColor();
    [RegisterAttribute("setChipBackgroundColor", "(Landroid/content/res/ColorStateList;)V", "GetSetChipBackgroundColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipBackgroundColor(ColorStateList value);
    private static Delegate GetGetChipCornerRadiusHandler();
    private static float n_GetChipCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipCornerRadius_FHandler();
    private static void n_SetChipCornerRadius_F(IntPtr jnienv, IntPtr native__this, float chipCornerRadius);
    [RegisterAttribute("getChipCornerRadius", "()F", "GetGetChipCornerRadiusHandler")]
public virtual float get_ChipCornerRadius();
    [RegisterAttribute("setChipCornerRadius", "(F)V", "GetSetChipCornerRadius_FHandler")]
public virtual void set_ChipCornerRadius(float value);
    private static Delegate GetGetChipDrawableHandler();
    private static IntPtr n_GetChipDrawable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChipDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetChipDrawableHandler")]
public virtual Drawable get_ChipDrawable();
    private static Delegate GetGetChipEndPaddingHandler();
    private static float n_GetChipEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipEndPadding_FHandler();
    private static void n_SetChipEndPadding_F(IntPtr jnienv, IntPtr native__this, float chipEndPadding);
    [RegisterAttribute("getChipEndPadding", "()F", "GetGetChipEndPaddingHandler")]
public virtual float get_ChipEndPadding();
    [RegisterAttribute("setChipEndPadding", "(F)V", "GetSetChipEndPadding_FHandler")]
public virtual void set_ChipEndPadding(float value);
    private static Delegate GetGetChipIconHandler();
    private static IntPtr n_GetChipIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetChipIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipIcon);
    [RegisterAttribute("getChipIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetChipIconHandler")]
public virtual Drawable get_ChipIcon();
    [RegisterAttribute("setChipIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetChipIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ChipIcon(Drawable value);
    private static Delegate GetIsChipIconEnabledHandler();
    private static bool n_IsChipIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconEnabled_ZHandler();
    private static void n_SetChipIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool chipIconEnabled);
    [RegisterAttribute("isChipIconEnabled", "()Z", "GetIsChipIconEnabledHandler")]
public virtual bool get_ChipIconEnabled();
    [RegisterAttribute("setChipIconEnabled", "(Z)V", "GetSetChipIconEnabled_ZHandler")]
public virtual void set_ChipIconEnabled(bool value);
    private static Delegate GetGetChipIconSizeHandler();
    private static float n_GetChipIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconSize_FHandler();
    private static void n_SetChipIconSize_F(IntPtr jnienv, IntPtr native__this, float chipIconSize);
    [RegisterAttribute("getChipIconSize", "()F", "GetGetChipIconSizeHandler")]
public virtual float get_ChipIconSize();
    [RegisterAttribute("setChipIconSize", "(F)V", "GetSetChipIconSize_FHandler")]
public virtual void set_ChipIconSize(float value);
    private static Delegate GetGetChipIconTintHandler();
    private static IntPtr n_GetChipIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipIconTint);
    [RegisterAttribute("getChipIconTint", "()Landroid/content/res/ColorStateList;", "GetGetChipIconTintHandler")]
public virtual ColorStateList get_ChipIconTint();
    [RegisterAttribute("setChipIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetChipIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipIconTint(ColorStateList value);
    private static Delegate GetIsChipIconVisibleHandler();
    private static bool n_IsChipIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconVisible_ZHandler();
    private static void n_SetChipIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool chipIconVisible);
    [RegisterAttribute("isChipIconVisible", "()Z", "GetIsChipIconVisibleHandler")]
public virtual bool get_ChipIconVisible();
    [RegisterAttribute("setChipIconVisible", "(Z)V", "GetSetChipIconVisible_ZHandler")]
public virtual void set_ChipIconVisible(bool value);
    private static Delegate GetGetChipMinHeightHandler();
    private static float n_GetChipMinHeight(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipMinHeight_FHandler();
    private static void n_SetChipMinHeight_F(IntPtr jnienv, IntPtr native__this, float minHeight);
    [RegisterAttribute("getChipMinHeight", "()F", "GetGetChipMinHeightHandler")]
public virtual float get_ChipMinHeight();
    [RegisterAttribute("setChipMinHeight", "(F)V", "GetSetChipMinHeight_FHandler")]
public virtual void set_ChipMinHeight(float value);
    private static Delegate GetGetChipStartPaddingHandler();
    private static float n_GetChipStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStartPadding_FHandler();
    private static void n_SetChipStartPadding_F(IntPtr jnienv, IntPtr native__this, float chipStartPadding);
    [RegisterAttribute("getChipStartPadding", "()F", "GetGetChipStartPaddingHandler")]
public virtual float get_ChipStartPadding();
    [RegisterAttribute("setChipStartPadding", "(F)V", "GetSetChipStartPadding_FHandler")]
public virtual void set_ChipStartPadding(float value);
    private static Delegate GetGetChipStrokeColorHandler();
    private static IntPtr n_GetChipStrokeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStrokeColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipStrokeColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipStrokeColor);
    [RegisterAttribute("getChipStrokeColor", "()Landroid/content/res/ColorStateList;", "GetGetChipStrokeColorHandler")]
public virtual ColorStateList get_ChipStrokeColor();
    [RegisterAttribute("setChipStrokeColor", "(Landroid/content/res/ColorStateList;)V", "GetSetChipStrokeColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipStrokeColor(ColorStateList value);
    private static Delegate GetGetChipStrokeWidthHandler();
    private static float n_GetChipStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStrokeWidth_FHandler();
    private static void n_SetChipStrokeWidth_F(IntPtr jnienv, IntPtr native__this, float chipStrokeWidth);
    [RegisterAttribute("getChipStrokeWidth", "()F", "GetGetChipStrokeWidthHandler")]
public virtual float get_ChipStrokeWidth();
    [RegisterAttribute("setChipStrokeWidth", "(F)V", "GetSetChipStrokeWidth_FHandler")]
public virtual void set_ChipStrokeWidth(float value);
    private static Delegate GetGetChipTextHandler();
    private static IntPtr n_GetChipText(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipText_Ljava_lang_CharSequence_Handler();
    private static void n_SetChipText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipText);
    [RegisterAttribute("getChipText", "()Ljava/lang/CharSequence;", "GetGetChipTextHandler")]
public virtual ICharSequence get_ChipTextFormatted();
    [RegisterAttribute("setChipText", "(Ljava/lang/CharSequence;)V", "GetSetChipText_Ljava_lang_CharSequence_Handler")]
public virtual void set_ChipTextFormatted(ICharSequence value);
    public string get_ChipText();
    public void set_ChipText(string value);
    private static Delegate GetGetCloseIconHandler();
    private static IntPtr n_GetCloseIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCloseIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIcon);
    [RegisterAttribute("getCloseIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetCloseIconHandler")]
public virtual Drawable get_CloseIcon();
    [RegisterAttribute("setCloseIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCloseIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CloseIcon(Drawable value);
    private static Delegate GetGetCloseIconContentDescriptionHandler();
    private static IntPtr n_GetCloseIconContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetCloseIconContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIconContentDescription);
    [RegisterAttribute("getCloseIconContentDescription", "()Ljava/lang/CharSequence;", "GetGetCloseIconContentDescriptionHandler")]
public virtual ICharSequence get_CloseIconContentDescriptionFormatted();
    [RegisterAttribute("setCloseIconContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetCloseIconContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_CloseIconContentDescriptionFormatted(ICharSequence value);
    public string get_CloseIconContentDescription();
    public void set_CloseIconContentDescription(string value);
    private static Delegate GetIsCloseIconEnabledHandler();
    private static bool n_IsCloseIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconEnabled_ZHandler();
    private static void n_SetCloseIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool closeIconEnabled);
    [RegisterAttribute("isCloseIconEnabled", "()Z", "GetIsCloseIconEnabledHandler")]
public virtual bool get_CloseIconEnabled();
    [RegisterAttribute("setCloseIconEnabled", "(Z)V", "GetSetCloseIconEnabled_ZHandler")]
public virtual void set_CloseIconEnabled(bool value);
    private static Delegate GetGetCloseIconEndPaddingHandler();
    private static float n_GetCloseIconEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconEndPadding_FHandler();
    private static void n_SetCloseIconEndPadding_F(IntPtr jnienv, IntPtr native__this, float closeIconEndPadding);
    [RegisterAttribute("getCloseIconEndPadding", "()F", "GetGetCloseIconEndPaddingHandler")]
public virtual float get_CloseIconEndPadding();
    [RegisterAttribute("setCloseIconEndPadding", "(F)V", "GetSetCloseIconEndPadding_FHandler")]
public virtual void set_CloseIconEndPadding(float value);
    private static Delegate GetGetCloseIconSizeHandler();
    private static float n_GetCloseIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconSize_FHandler();
    private static void n_SetCloseIconSize_F(IntPtr jnienv, IntPtr native__this, float closeIconSize);
    [RegisterAttribute("getCloseIconSize", "()F", "GetGetCloseIconSizeHandler")]
public virtual float get_CloseIconSize();
    [RegisterAttribute("setCloseIconSize", "(F)V", "GetSetCloseIconSize_FHandler")]
public virtual void set_CloseIconSize(float value);
    private static Delegate GetGetCloseIconStartPaddingHandler();
    private static float n_GetCloseIconStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconStartPadding_FHandler();
    private static void n_SetCloseIconStartPadding_F(IntPtr jnienv, IntPtr native__this, float closeIconStartPadding);
    [RegisterAttribute("getCloseIconStartPadding", "()F", "GetGetCloseIconStartPaddingHandler")]
public virtual float get_CloseIconStartPadding();
    [RegisterAttribute("setCloseIconStartPadding", "(F)V", "GetSetCloseIconStartPadding_FHandler")]
public virtual void set_CloseIconStartPadding(float value);
    private static Delegate GetGetCloseIconTintHandler();
    private static IntPtr n_GetCloseIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetCloseIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIconTint);
    [RegisterAttribute("getCloseIconTint", "()Landroid/content/res/ColorStateList;", "GetGetCloseIconTintHandler")]
public virtual ColorStateList get_CloseIconTint();
    [RegisterAttribute("setCloseIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetCloseIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_CloseIconTint(ColorStateList value);
    private static Delegate GetIsCloseIconVisibleHandler();
    private static bool n_IsCloseIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconVisible_ZHandler();
    private static void n_SetCloseIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool closeIconVisible);
    [RegisterAttribute("isCloseIconVisible", "()Z", "GetIsCloseIconVisibleHandler")]
public virtual bool get_CloseIconVisible();
    [RegisterAttribute("setCloseIconVisible", "(Z)V", "GetSetCloseIconVisible_ZHandler")]
public virtual void set_CloseIconVisible(bool value);
    private static Delegate GetGetHideMotionSpecHandler();
    private static IntPtr n_GetHideMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetHideMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_hideMotionSpec);
    [RegisterAttribute("getHideMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetHideMotionSpecHandler")]
public virtual MotionSpec get_HideMotionSpec();
    [RegisterAttribute("setHideMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_HideMotionSpec(MotionSpec value);
    private static Delegate GetGetIconEndPaddingHandler();
    private static float n_GetIconEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconEndPadding_FHandler();
    private static void n_SetIconEndPadding_F(IntPtr jnienv, IntPtr native__this, float iconEndPadding);
    [RegisterAttribute("getIconEndPadding", "()F", "GetGetIconEndPaddingHandler")]
public virtual float get_IconEndPadding();
    [RegisterAttribute("setIconEndPadding", "(F)V", "GetSetIconEndPadding_FHandler")]
public virtual void set_IconEndPadding(float value);
    private static Delegate GetGetIconStartPaddingHandler();
    private static float n_GetIconStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconStartPadding_FHandler();
    private static void n_SetIconStartPadding_F(IntPtr jnienv, IntPtr native__this, float iconStartPadding);
    [RegisterAttribute("getIconStartPadding", "()F", "GetGetIconStartPaddingHandler")]
public virtual float get_IconStartPadding();
    [RegisterAttribute("setIconStartPadding", "(F)V", "GetSetIconStartPadding_FHandler")]
public virtual void set_IconStartPadding(float value);
    private static Delegate GetGetRippleColorHandler();
    private static IntPtr n_GetRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRippleColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetRippleColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_rippleColor);
    [RegisterAttribute("getRippleColor", "()Landroid/content/res/ColorStateList;", "GetGetRippleColorHandler")]
public virtual ColorStateList get_RippleColor();
    [RegisterAttribute("setRippleColor", "(Landroid/content/res/ColorStateList;)V", "GetSetRippleColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_RippleColor(ColorStateList value);
    private static Delegate GetGetShowMotionSpecHandler();
    private static IntPtr n_GetShowMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetShowMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_showMotionSpec);
    [RegisterAttribute("getShowMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetShowMotionSpecHandler")]
public virtual MotionSpec get_ShowMotionSpec();
    [RegisterAttribute("setShowMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_ShowMotionSpec(MotionSpec value);
    private static Delegate GetGetTextEndPaddingHandler();
    private static float n_GetTextEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextEndPadding_FHandler();
    private static void n_SetTextEndPadding_F(IntPtr jnienv, IntPtr native__this, float textEndPadding);
    [RegisterAttribute("getTextEndPadding", "()F", "GetGetTextEndPaddingHandler")]
public virtual float get_TextEndPadding();
    [RegisterAttribute("setTextEndPadding", "(F)V", "GetSetTextEndPadding_FHandler")]
public virtual void set_TextEndPadding(float value);
    private static Delegate GetGetTextStartPaddingHandler();
    private static float n_GetTextStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextStartPadding_FHandler();
    private static void n_SetTextStartPadding_F(IntPtr jnienv, IntPtr native__this, float textStartPadding);
    [RegisterAttribute("getTextStartPadding", "()F", "GetGetTextStartPaddingHandler")]
public virtual float get_TextStartPadding();
    [RegisterAttribute("setTextStartPadding", "(F)V", "GetSetTextStartPadding_FHandler")]
public virtual void set_TextStartPadding(float value);
    private static Delegate GetOnChipDrawableSizeChangeHandler();
    private static void n_OnChipDrawableSizeChange(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onChipDrawableSizeChange", "()V", "GetOnChipDrawableSizeChangeHandler")]
public virtual void OnChipDrawableSizeChange();
    private static Delegate GetPerformCloseIconClickHandler();
    private static bool n_PerformCloseIconClick(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("performCloseIconClick", "()Z", "GetPerformCloseIconClickHandler")]
public virtual bool PerformCloseIconClick();
    private static Delegate GetSetCheckableResource_IHandler();
    private static void n_SetCheckableResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckableResource", "(I)V", "GetSetCheckableResource_IHandler")]
public virtual void SetCheckableResource(int id);
    private static Delegate GetSetCheckedIconEnabledResource_IHandler();
    private static void n_SetCheckedIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCheckedIconEnabledResource", "(I)V", "GetSetCheckedIconEnabledResource_IHandler")]
public virtual void SetCheckedIconEnabledResource(int id);
    private static Delegate GetSetCheckedIconResource_IHandler();
    private static void n_SetCheckedIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedIconResource", "(I)V", "GetSetCheckedIconResource_IHandler")]
public virtual void SetCheckedIconResource(int id);
    private static Delegate GetSetCheckedIconVisible_IHandler();
    private static void n_SetCheckedIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedIconVisible", "(I)V", "GetSetCheckedIconVisible_IHandler")]
public virtual void SetCheckedIconVisible(int id);
    private static Delegate GetSetChipBackgroundColorResource_IHandler();
    private static void n_SetChipBackgroundColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipBackgroundColorResource", "(I)V", "GetSetChipBackgroundColorResource_IHandler")]
public virtual void SetChipBackgroundColorResource(int id);
    private static Delegate GetSetChipCornerRadiusResource_IHandler();
    private static void n_SetChipCornerRadiusResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipCornerRadiusResource", "(I)V", "GetSetChipCornerRadiusResource_IHandler")]
public virtual void SetChipCornerRadiusResource(int id);
    private static Delegate GetSetChipDrawable_Landroid_support_design_chip_ChipDrawable_Handler();
    private static void n_SetChipDrawable_Landroid_support_design_chip_ChipDrawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("setChipDrawable", "(Landroid/support/design/chip/ChipDrawable;)V", "GetSetChipDrawable_Landroid_support_design_chip_ChipDrawable_Handler")]
public virtual void SetChipDrawable(ChipDrawable drawable);
    private static Delegate GetSetChipEndPaddingResource_IHandler();
    private static void n_SetChipEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipEndPaddingResource", "(I)V", "GetSetChipEndPaddingResource_IHandler")]
public virtual void SetChipEndPaddingResource(int id);
    private static Delegate GetSetChipIconEnabledResource_IHandler();
    private static void n_SetChipIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setChipIconEnabledResource", "(I)V", "GetSetChipIconEnabledResource_IHandler")]
public virtual void SetChipIconEnabledResource(int id);
    private static Delegate GetSetChipIconResource_IHandler();
    private static void n_SetChipIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconResource", "(I)V", "GetSetChipIconResource_IHandler")]
public virtual void SetChipIconResource(int id);
    private static Delegate GetSetChipIconSizeResource_IHandler();
    private static void n_SetChipIconSizeResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconSizeResource", "(I)V", "GetSetChipIconSizeResource_IHandler")]
public virtual void SetChipIconSizeResource(int id);
    private static Delegate GetSetChipIconTintResource_IHandler();
    private static void n_SetChipIconTintResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconTintResource", "(I)V", "GetSetChipIconTintResource_IHandler")]
public virtual void SetChipIconTintResource(int id);
    private static Delegate GetSetChipIconVisible_IHandler();
    private static void n_SetChipIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconVisible", "(I)V", "GetSetChipIconVisible_IHandler")]
public virtual void SetChipIconVisible(int id);
    private static Delegate GetSetChipMinHeightResource_IHandler();
    private static void n_SetChipMinHeightResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipMinHeightResource", "(I)V", "GetSetChipMinHeightResource_IHandler")]
public virtual void SetChipMinHeightResource(int id);
    private static Delegate GetSetChipStartPaddingResource_IHandler();
    private static void n_SetChipStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStartPaddingResource", "(I)V", "GetSetChipStartPaddingResource_IHandler")]
public virtual void SetChipStartPaddingResource(int id);
    private static Delegate GetSetChipStrokeColorResource_IHandler();
    private static void n_SetChipStrokeColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStrokeColorResource", "(I)V", "GetSetChipStrokeColorResource_IHandler")]
public virtual void SetChipStrokeColorResource(int id);
    private static Delegate GetSetChipStrokeWidthResource_IHandler();
    private static void n_SetChipStrokeWidthResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStrokeWidthResource", "(I)V", "GetSetChipStrokeWidthResource_IHandler")]
public virtual void SetChipStrokeWidthResource(int id);
    private static Delegate GetSetChipTextResource_IHandler();
    private static void n_SetChipTextResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setChipTextResource", "(I)V", "GetSetChipTextResource_IHandler")]
public virtual void SetChipTextResource(int id);
    private static Delegate GetSetCloseIconEnabledResource_IHandler();
    private static void n_SetCloseIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCloseIconEnabledResource", "(I)V", "GetSetCloseIconEnabledResource_IHandler")]
public virtual void SetCloseIconEnabledResource(int id);
    private static Delegate GetSetCloseIconEndPaddingResource_IHandler();
    private static void n_SetCloseIconEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconEndPaddingResource", "(I)V", "GetSetCloseIconEndPaddingResource_IHandler")]
public virtual void SetCloseIconEndPaddingResource(int id);
    private static Delegate GetSetCloseIconResource_IHandler();
    private static void n_SetCloseIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconResource", "(I)V", "GetSetCloseIconResource_IHandler")]
public virtual void SetCloseIconResource(int id);
    private static Delegate GetSetCloseIconSizeResource_IHandler();
    private static void n_SetCloseIconSizeResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconSizeResource", "(I)V", "GetSetCloseIconSizeResource_IHandler")]
public virtual void SetCloseIconSizeResource(int id);
    private static Delegate GetSetCloseIconStartPaddingResource_IHandler();
    private static void n_SetCloseIconStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconStartPaddingResource", "(I)V", "GetSetCloseIconStartPaddingResource_IHandler")]
public virtual void SetCloseIconStartPaddingResource(int id);
    private static Delegate GetSetCloseIconTintResource_IHandler();
    private static void n_SetCloseIconTintResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconTintResource", "(I)V", "GetSetCloseIconTintResource_IHandler")]
public virtual void SetCloseIconTintResource(int id);
    private static Delegate GetSetCloseIconVisible_IHandler();
    private static void n_SetCloseIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconVisible", "(I)V", "GetSetCloseIconVisible_IHandler")]
public virtual void SetCloseIconVisible(int id);
    private static Delegate GetSetHideMotionSpecResource_IHandler();
    private static void n_SetHideMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setHideMotionSpecResource", "(I)V", "GetSetHideMotionSpecResource_IHandler")]
public virtual void SetHideMotionSpecResource(int id);
    private static Delegate GetSetIconEndPaddingResource_IHandler();
    private static void n_SetIconEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setIconEndPaddingResource", "(I)V", "GetSetIconEndPaddingResource_IHandler")]
public virtual void SetIconEndPaddingResource(int id);
    private static Delegate GetSetIconStartPaddingResource_IHandler();
    private static void n_SetIconStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setIconStartPaddingResource", "(I)V", "GetSetIconStartPaddingResource_IHandler")]
public virtual void SetIconStartPaddingResource(int id);
    private static Delegate GetSetOnCloseIconClickListener_Landroid_view_View_OnClickListener_Handler();
    private static void n_SetOnCloseIconClickListener_Landroid_view_View_OnClickListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnCloseIconClickListener", "(Landroid/view/View$OnClickListener;)V", "GetSetOnCloseIconClickListener_Landroid_view_View_OnClickListener_Handler")]
public virtual void SetOnCloseIconClickListener(IOnClickListener listener);
    private static Delegate GetSetRippleColorResource_IHandler();
    private static void n_SetRippleColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setRippleColorResource", "(I)V", "GetSetRippleColorResource_IHandler")]
public virtual void SetRippleColorResource(int id);
    private static Delegate GetSetShowMotionSpecResource_IHandler();
    private static void n_SetShowMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setShowMotionSpecResource", "(I)V", "GetSetShowMotionSpecResource_IHandler")]
public virtual void SetShowMotionSpecResource(int id);
    private static Delegate GetSetTextAppearance_Landroid_support_design_resources_TextAppearance_Handler();
    private static void n_SetTextAppearance_Landroid_support_design_resources_TextAppearance_(IntPtr jnienv, IntPtr native__this, IntPtr native_textAppearance);
    [RegisterAttribute("setTextAppearance", "(Landroid/support/design/resources/TextAppearance;)V", "GetSetTextAppearance_Landroid_support_design_resources_TextAppearance_Handler")]
public virtual void SetTextAppearance(TextAppearance textAppearance);
    private static Delegate GetSetTextAppearanceResource_IHandler();
    private static void n_SetTextAppearanceResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextAppearanceResource", "(I)V", "GetSetTextAppearanceResource_IHandler")]
public virtual void SetTextAppearanceResource(int id);
    private static Delegate GetSetTextEndPaddingResource_IHandler();
    private static void n_SetTextEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextEndPaddingResource", "(I)V", "GetSetTextEndPaddingResource_IHandler")]
public virtual void SetTextEndPaddingResource(int id);
    private static Delegate GetSetTextStartPaddingResource_IHandler();
    private static void n_SetTextStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextStartPaddingResource", "(I)V", "GetSetTextStartPaddingResource_IHandler")]
public virtual void SetTextStartPaddingResource(int id);
}
[RegisterAttribute("android/support/design/chip/ChipDrawable")]
public class Android.Support.Design.Chip.ChipDrawable : Drawable {
    internal static JniPeerMembers _members;
    private static Delegate cb_isCheckable;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_getCheckedIcon;
    private static Delegate cb_setCheckedIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isCheckedIconEnabled;
    private static Delegate cb_setCheckedIconEnabled_Z;
    private static Delegate cb_isCheckedIconVisible;
    private static Delegate cb_setCheckedIconVisible_Z;
    private static Delegate cb_getChipBackgroundColor;
    private static Delegate cb_setChipBackgroundColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getChipCornerRadius;
    private static Delegate cb_setChipCornerRadius_F;
    private static Delegate cb_getChipEndPadding;
    private static Delegate cb_setChipEndPadding_F;
    private static Delegate cb_getChipIcon;
    private static Delegate cb_setChipIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isChipIconEnabled;
    private static Delegate cb_setChipIconEnabled_Z;
    private static Delegate cb_getChipIconSize;
    private static Delegate cb_setChipIconSize_F;
    private static Delegate cb_getChipIconTint;
    private static Delegate cb_setChipIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_isChipIconVisible;
    private static Delegate cb_setChipIconVisible_Z;
    private static Delegate cb_getChipMinHeight;
    private static Delegate cb_setChipMinHeight_F;
    private static Delegate cb_getChipStartPadding;
    private static Delegate cb_setChipStartPadding_F;
    private static Delegate cb_getChipStrokeColor;
    private static Delegate cb_setChipStrokeColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getChipStrokeWidth;
    private static Delegate cb_setChipStrokeWidth_F;
    private static Delegate cb_getCloseIcon;
    private static Delegate cb_setCloseIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCloseIconContentDescription;
    private static Delegate cb_setCloseIconContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isCloseIconEnabled;
    private static Delegate cb_setCloseIconEnabled_Z;
    private static Delegate cb_getCloseIconEndPadding;
    private static Delegate cb_setCloseIconEndPadding_F;
    private static Delegate cb_getCloseIconSize;
    private static Delegate cb_setCloseIconSize_F;
    private static Delegate cb_getCloseIconStartPadding;
    private static Delegate cb_setCloseIconStartPadding_F;
    private static Delegate cb_getCloseIconTint;
    private static Delegate cb_setCloseIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_isCloseIconVisible;
    private static Delegate cb_setCloseIconVisible_Z;
    private static Delegate cb_getEllipsize;
    private static Delegate cb_setEllipsize_Landroid_text_TextUtils_TruncateAt_;
    private static Delegate cb_getHideMotionSpec;
    private static Delegate cb_setHideMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_getIconEndPadding;
    private static Delegate cb_setIconEndPadding_F;
    private static Delegate cb_getIconStartPadding;
    private static Delegate cb_setIconStartPadding_F;
    private static Delegate cb_isCloseIconStateful;
    private static Delegate cb_getMaxWidth;
    private static Delegate cb_setMaxWidth_I;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getRippleColor;
    private static Delegate cb_setRippleColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getShowMotionSpec;
    private static Delegate cb_setShowMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_getText;
    private static Delegate cb_setText_Ljava_lang_CharSequence_;
    private static Delegate cb_getTextAppearance;
    private static Delegate cb_setTextAppearance_Landroid_support_design_resources_TextAppearance_;
    private static Delegate cb_getTextEndPadding;
    private static Delegate cb_setTextEndPadding_F;
    private static Delegate cb_getTextStartPadding;
    private static Delegate cb_setTextStartPadding_F;
    private static Delegate cb_getUseCompatRipple;
    private static Delegate cb_setUseCompatRipple_Z;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_getChipTouchBounds_Landroid_graphics_RectF_;
    private static Delegate cb_getCloseIconState;
    private static Delegate cb_getCloseIconTouchBounds_Landroid_graphics_RectF_;
    private static Delegate cb_invalidateDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_onSizeChange;
    private static Delegate cb_scheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_J;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setCheckableResource_I;
    private static Delegate cb_setCheckedIconEnabledResource_I;
    private static Delegate cb_setCheckedIconResource_I;
    private static Delegate cb_setCheckedIconVisible_I;
    private static Delegate cb_setChipBackgroundColorResource_I;
    private static Delegate cb_setChipCornerRadiusResource_I;
    private static Delegate cb_setChipEndPaddingResource_I;
    private static Delegate cb_setChipIconEnabledResource_I;
    private static Delegate cb_setChipIconResource_I;
    private static Delegate cb_setChipIconSizeResource_I;
    private static Delegate cb_setChipIconTintResource_I;
    private static Delegate cb_setChipIconVisible_I;
    private static Delegate cb_setChipMinHeightResource_I;
    private static Delegate cb_setChipStartPaddingResource_I;
    private static Delegate cb_setChipStrokeColorResource_I;
    private static Delegate cb_setChipStrokeWidthResource_I;
    private static Delegate cb_setCloseIconEnabledResource_I;
    private static Delegate cb_setCloseIconEndPaddingResource_I;
    private static Delegate cb_setCloseIconResource_I;
    private static Delegate cb_setCloseIconSizeResource_I;
    private static Delegate cb_setCloseIconStartPaddingResource_I;
    private static Delegate cb_setCloseIconState_arrayI;
    private static Delegate cb_setCloseIconTintResource_I;
    private static Delegate cb_setCloseIconVisible_I;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setDelegate_Landroid_support_design_chip_ChipDrawable_Delegate_;
    private static Delegate cb_setHideMotionSpecResource_I;
    private static Delegate cb_setIconEndPaddingResource_I;
    private static Delegate cb_setIconStartPaddingResource_I;
    private static Delegate cb_setRippleColorResource_I;
    private static Delegate cb_setShowMotionSpecResource_I;
    private static Delegate cb_setTextAppearanceResource_I;
    private static Delegate cb_setTextEndPaddingResource_I;
    private static Delegate cb_setTextResource_I;
    private static Delegate cb_setTextStartPaddingResource_I;
    private static Delegate cb_unscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Checkable { get; public set; }
    public Drawable CheckedIcon { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool CheckedIconEnabled { get; public set; }
    public bool CheckedIconVisible { get; public set; }
    public ColorStateList ChipBackgroundColor { get; public set; }
    public float ChipCornerRadius { get; public set; }
    public float ChipEndPadding { get; public set; }
    public Drawable ChipIcon { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool ChipIconEnabled { get; public set; }
    public float ChipIconSize { get; public set; }
    public ColorStateList ChipIconTint { get; public set; }
    public bool ChipIconVisible { get; public set; }
    public float ChipMinHeight { get; public set; }
    public float ChipStartPadding { get; public set; }
    public ColorStateList ChipStrokeColor { get; public set; }
    public float ChipStrokeWidth { get; public set; }
    public Drawable CloseIcon { get; public set; }
    public ICharSequence CloseIconContentDescriptionFormatted { get; public set; }
    public string CloseIconContentDescription { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool CloseIconEnabled { get; public set; }
    public float CloseIconEndPadding { get; public set; }
    public float CloseIconSize { get; public set; }
    public float CloseIconStartPadding { get; public set; }
    public ColorStateList CloseIconTint { get; public set; }
    public bool CloseIconVisible { get; public set; }
    public TruncateAt Ellipsize { get; public set; }
    public MotionSpec HideMotionSpec { get; public set; }
    public float IconEndPadding { get; public set; }
    public float IconStartPadding { get; public set; }
    public bool IsCloseIconStateful { get; }
    public int MaxWidth { get; public set; }
    public int Opacity { get; }
    public ColorStateList RippleColor { get; public set; }
    public MotionSpec ShowMotionSpec { get; public set; }
    public ICharSequence TextFormatted { get; public set; }
    public string Text { get; public set; }
    public TextAppearance TextAppearance { get; public set; }
    public float TextEndPadding { get; public set; }
    public float TextStartPadding { get; public set; }
    public bool UseCompatRipple { get; public set; }
    protected ChipDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChipDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("isCheckable", "()Z", "GetIsCheckableHandler")]
public virtual bool get_Checkable();
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void set_Checkable(bool value);
    private static Delegate GetGetCheckedIconHandler();
    private static IntPtr n_GetCheckedIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCheckedIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_checkedIcon);
    [RegisterAttribute("getCheckedIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetCheckedIconHandler")]
public virtual Drawable get_CheckedIcon();
    [RegisterAttribute("setCheckedIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCheckedIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CheckedIcon(Drawable value);
    private static Delegate GetIsCheckedIconEnabledHandler();
    private static bool n_IsCheckedIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIconEnabled_ZHandler();
    private static void n_SetCheckedIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool checkedIconEnabled);
    [RegisterAttribute("isCheckedIconEnabled", "()Z", "GetIsCheckedIconEnabledHandler")]
public virtual bool get_CheckedIconEnabled();
    [RegisterAttribute("setCheckedIconEnabled", "(Z)V", "GetSetCheckedIconEnabled_ZHandler")]
public virtual void set_CheckedIconEnabled(bool value);
    private static Delegate GetIsCheckedIconVisibleHandler();
    private static bool n_IsCheckedIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedIconVisible_ZHandler();
    private static void n_SetCheckedIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool checkedIconVisible);
    [RegisterAttribute("isCheckedIconVisible", "()Z", "GetIsCheckedIconVisibleHandler")]
public virtual bool get_CheckedIconVisible();
    [RegisterAttribute("setCheckedIconVisible", "(Z)V", "GetSetCheckedIconVisible_ZHandler")]
public virtual void set_CheckedIconVisible(bool value);
    private static Delegate GetGetChipBackgroundColorHandler();
    private static IntPtr n_GetChipBackgroundColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipBackgroundColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipBackgroundColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipBackgroundColor);
    [RegisterAttribute("getChipBackgroundColor", "()Landroid/content/res/ColorStateList;", "GetGetChipBackgroundColorHandler")]
public virtual ColorStateList get_ChipBackgroundColor();
    [RegisterAttribute("setChipBackgroundColor", "(Landroid/content/res/ColorStateList;)V", "GetSetChipBackgroundColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipBackgroundColor(ColorStateList value);
    private static Delegate GetGetChipCornerRadiusHandler();
    private static float n_GetChipCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipCornerRadius_FHandler();
    private static void n_SetChipCornerRadius_F(IntPtr jnienv, IntPtr native__this, float chipCornerRadius);
    [RegisterAttribute("getChipCornerRadius", "()F", "GetGetChipCornerRadiusHandler")]
public virtual float get_ChipCornerRadius();
    [RegisterAttribute("setChipCornerRadius", "(F)V", "GetSetChipCornerRadius_FHandler")]
public virtual void set_ChipCornerRadius(float value);
    private static Delegate GetGetChipEndPaddingHandler();
    private static float n_GetChipEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipEndPadding_FHandler();
    private static void n_SetChipEndPadding_F(IntPtr jnienv, IntPtr native__this, float chipEndPadding);
    [RegisterAttribute("getChipEndPadding", "()F", "GetGetChipEndPaddingHandler")]
public virtual float get_ChipEndPadding();
    [RegisterAttribute("setChipEndPadding", "(F)V", "GetSetChipEndPadding_FHandler")]
public virtual void set_ChipEndPadding(float value);
    private static Delegate GetGetChipIconHandler();
    private static IntPtr n_GetChipIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetChipIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipIcon);
    [RegisterAttribute("getChipIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetChipIconHandler")]
public virtual Drawable get_ChipIcon();
    [RegisterAttribute("setChipIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetChipIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ChipIcon(Drawable value);
    private static Delegate GetIsChipIconEnabledHandler();
    private static bool n_IsChipIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconEnabled_ZHandler();
    private static void n_SetChipIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool chipIconEnabled);
    [RegisterAttribute("isChipIconEnabled", "()Z", "GetIsChipIconEnabledHandler")]
public virtual bool get_ChipIconEnabled();
    [RegisterAttribute("setChipIconEnabled", "(Z)V", "GetSetChipIconEnabled_ZHandler")]
public virtual void set_ChipIconEnabled(bool value);
    private static Delegate GetGetChipIconSizeHandler();
    private static float n_GetChipIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconSize_FHandler();
    private static void n_SetChipIconSize_F(IntPtr jnienv, IntPtr native__this, float chipIconSize);
    [RegisterAttribute("getChipIconSize", "()F", "GetGetChipIconSizeHandler")]
public virtual float get_ChipIconSize();
    [RegisterAttribute("setChipIconSize", "(F)V", "GetSetChipIconSize_FHandler")]
public virtual void set_ChipIconSize(float value);
    private static Delegate GetGetChipIconTintHandler();
    private static IntPtr n_GetChipIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipIconTint);
    [RegisterAttribute("getChipIconTint", "()Landroid/content/res/ColorStateList;", "GetGetChipIconTintHandler")]
public virtual ColorStateList get_ChipIconTint();
    [RegisterAttribute("setChipIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetChipIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipIconTint(ColorStateList value);
    private static Delegate GetIsChipIconVisibleHandler();
    private static bool n_IsChipIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipIconVisible_ZHandler();
    private static void n_SetChipIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool chipIconVisible);
    [RegisterAttribute("isChipIconVisible", "()Z", "GetIsChipIconVisibleHandler")]
public virtual bool get_ChipIconVisible();
    [RegisterAttribute("setChipIconVisible", "(Z)V", "GetSetChipIconVisible_ZHandler")]
public virtual void set_ChipIconVisible(bool value);
    private static Delegate GetGetChipMinHeightHandler();
    private static float n_GetChipMinHeight(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipMinHeight_FHandler();
    private static void n_SetChipMinHeight_F(IntPtr jnienv, IntPtr native__this, float chipMinHeight);
    [RegisterAttribute("getChipMinHeight", "()F", "GetGetChipMinHeightHandler")]
public virtual float get_ChipMinHeight();
    [RegisterAttribute("setChipMinHeight", "(F)V", "GetSetChipMinHeight_FHandler")]
public virtual void set_ChipMinHeight(float value);
    private static Delegate GetGetChipStartPaddingHandler();
    private static float n_GetChipStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStartPadding_FHandler();
    private static void n_SetChipStartPadding_F(IntPtr jnienv, IntPtr native__this, float chipStartPadding);
    [RegisterAttribute("getChipStartPadding", "()F", "GetGetChipStartPaddingHandler")]
public virtual float get_ChipStartPadding();
    [RegisterAttribute("setChipStartPadding", "(F)V", "GetSetChipStartPadding_FHandler")]
public virtual void set_ChipStartPadding(float value);
    private static Delegate GetGetChipStrokeColorHandler();
    private static IntPtr n_GetChipStrokeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStrokeColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetChipStrokeColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_chipStrokeColor);
    [RegisterAttribute("getChipStrokeColor", "()Landroid/content/res/ColorStateList;", "GetGetChipStrokeColorHandler")]
public virtual ColorStateList get_ChipStrokeColor();
    [RegisterAttribute("setChipStrokeColor", "(Landroid/content/res/ColorStateList;)V", "GetSetChipStrokeColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ChipStrokeColor(ColorStateList value);
    private static Delegate GetGetChipStrokeWidthHandler();
    private static float n_GetChipStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipStrokeWidth_FHandler();
    private static void n_SetChipStrokeWidth_F(IntPtr jnienv, IntPtr native__this, float chipStrokeWidth);
    [RegisterAttribute("getChipStrokeWidth", "()F", "GetGetChipStrokeWidthHandler")]
public virtual float get_ChipStrokeWidth();
    [RegisterAttribute("setChipStrokeWidth", "(F)V", "GetSetChipStrokeWidth_FHandler")]
public virtual void set_ChipStrokeWidth(float value);
    private static Delegate GetGetCloseIconHandler();
    private static IntPtr n_GetCloseIcon(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCloseIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIcon);
    [RegisterAttribute("getCloseIcon", "()Landroid/graphics/drawable/Drawable;", "GetGetCloseIconHandler")]
public virtual Drawable get_CloseIcon();
    [RegisterAttribute("setCloseIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCloseIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CloseIcon(Drawable value);
    private static Delegate GetGetCloseIconContentDescriptionHandler();
    private static IntPtr n_GetCloseIconContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetCloseIconContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIconContentDescription);
    [RegisterAttribute("getCloseIconContentDescription", "()Ljava/lang/CharSequence;", "GetGetCloseIconContentDescriptionHandler")]
public virtual ICharSequence get_CloseIconContentDescriptionFormatted();
    [RegisterAttribute("setCloseIconContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetCloseIconContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_CloseIconContentDescriptionFormatted(ICharSequence value);
    public string get_CloseIconContentDescription();
    public void set_CloseIconContentDescription(string value);
    private static Delegate GetIsCloseIconEnabledHandler();
    private static bool n_IsCloseIconEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconEnabled_ZHandler();
    private static void n_SetCloseIconEnabled_Z(IntPtr jnienv, IntPtr native__this, bool closeIconEnabled);
    [RegisterAttribute("isCloseIconEnabled", "()Z", "GetIsCloseIconEnabledHandler")]
public virtual bool get_CloseIconEnabled();
    [RegisterAttribute("setCloseIconEnabled", "(Z)V", "GetSetCloseIconEnabled_ZHandler")]
public virtual void set_CloseIconEnabled(bool value);
    private static Delegate GetGetCloseIconEndPaddingHandler();
    private static float n_GetCloseIconEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconEndPadding_FHandler();
    private static void n_SetCloseIconEndPadding_F(IntPtr jnienv, IntPtr native__this, float closeIconEndPadding);
    [RegisterAttribute("getCloseIconEndPadding", "()F", "GetGetCloseIconEndPaddingHandler")]
public virtual float get_CloseIconEndPadding();
    [RegisterAttribute("setCloseIconEndPadding", "(F)V", "GetSetCloseIconEndPadding_FHandler")]
public virtual void set_CloseIconEndPadding(float value);
    private static Delegate GetGetCloseIconSizeHandler();
    private static float n_GetCloseIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconSize_FHandler();
    private static void n_SetCloseIconSize_F(IntPtr jnienv, IntPtr native__this, float closeIconSize);
    [RegisterAttribute("getCloseIconSize", "()F", "GetGetCloseIconSizeHandler")]
public virtual float get_CloseIconSize();
    [RegisterAttribute("setCloseIconSize", "(F)V", "GetSetCloseIconSize_FHandler")]
public virtual void set_CloseIconSize(float value);
    private static Delegate GetGetCloseIconStartPaddingHandler();
    private static float n_GetCloseIconStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconStartPadding_FHandler();
    private static void n_SetCloseIconStartPadding_F(IntPtr jnienv, IntPtr native__this, float closeIconStartPadding);
    [RegisterAttribute("getCloseIconStartPadding", "()F", "GetGetCloseIconStartPaddingHandler")]
public virtual float get_CloseIconStartPadding();
    [RegisterAttribute("setCloseIconStartPadding", "(F)V", "GetSetCloseIconStartPadding_FHandler")]
public virtual void set_CloseIconStartPadding(float value);
    private static Delegate GetGetCloseIconTintHandler();
    private static IntPtr n_GetCloseIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetCloseIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_closeIconTint);
    [RegisterAttribute("getCloseIconTint", "()Landroid/content/res/ColorStateList;", "GetGetCloseIconTintHandler")]
public virtual ColorStateList get_CloseIconTint();
    [RegisterAttribute("setCloseIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetCloseIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_CloseIconTint(ColorStateList value);
    private static Delegate GetIsCloseIconVisibleHandler();
    private static bool n_IsCloseIconVisible(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCloseIconVisible_ZHandler();
    private static void n_SetCloseIconVisible_Z(IntPtr jnienv, IntPtr native__this, bool closeIconVisible);
    [RegisterAttribute("isCloseIconVisible", "()Z", "GetIsCloseIconVisibleHandler")]
public virtual bool get_CloseIconVisible();
    [RegisterAttribute("setCloseIconVisible", "(Z)V", "GetSetCloseIconVisible_ZHandler")]
public virtual void set_CloseIconVisible(bool value);
    private static Delegate GetGetEllipsizeHandler();
    private static IntPtr n_GetEllipsize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetEllipsize_Landroid_text_TextUtils_TruncateAt_Handler();
    private static void n_SetEllipsize_Landroid_text_TextUtils_TruncateAt_(IntPtr jnienv, IntPtr native__this, IntPtr native_truncateAt);
    [RegisterAttribute("getEllipsize", "()Landroid/text/TextUtils$TruncateAt;", "GetGetEllipsizeHandler")]
public virtual TruncateAt get_Ellipsize();
    [RegisterAttribute("setEllipsize", "(Landroid/text/TextUtils$TruncateAt;)V", "GetSetEllipsize_Landroid_text_TextUtils_TruncateAt_Handler")]
public virtual void set_Ellipsize(TruncateAt value);
    private static Delegate GetGetHideMotionSpecHandler();
    private static IntPtr n_GetHideMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetHideMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_hideMotionSpec);
    [RegisterAttribute("getHideMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetHideMotionSpecHandler")]
public virtual MotionSpec get_HideMotionSpec();
    [RegisterAttribute("setHideMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_HideMotionSpec(MotionSpec value);
    private static Delegate GetGetIconEndPaddingHandler();
    private static float n_GetIconEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconEndPadding_FHandler();
    private static void n_SetIconEndPadding_F(IntPtr jnienv, IntPtr native__this, float iconEndPadding);
    [RegisterAttribute("getIconEndPadding", "()F", "GetGetIconEndPaddingHandler")]
public virtual float get_IconEndPadding();
    [RegisterAttribute("setIconEndPadding", "(F)V", "GetSetIconEndPadding_FHandler")]
public virtual void set_IconEndPadding(float value);
    private static Delegate GetGetIconStartPaddingHandler();
    private static float n_GetIconStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconStartPadding_FHandler();
    private static void n_SetIconStartPadding_F(IntPtr jnienv, IntPtr native__this, float iconStartPadding);
    [RegisterAttribute("getIconStartPadding", "()F", "GetGetIconStartPaddingHandler")]
public virtual float get_IconStartPadding();
    [RegisterAttribute("setIconStartPadding", "(F)V", "GetSetIconStartPadding_FHandler")]
public virtual void set_IconStartPadding(float value);
    private static Delegate GetIsCloseIconStatefulHandler();
    private static bool n_IsCloseIconStateful(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isCloseIconStateful", "()Z", "GetIsCloseIconStatefulHandler")]
public virtual bool get_IsCloseIconStateful();
    private static Delegate GetGetMaxWidthHandler();
    private static int n_GetMaxWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxWidth_IHandler();
    private static void n_SetMaxWidth_I(IntPtr jnienv, IntPtr native__this, int maxWidth);
    [RegisterAttribute("getMaxWidth", "()I", "GetGetMaxWidthHandler")]
public virtual int get_MaxWidth();
    [RegisterAttribute("setMaxWidth", "(I)V", "GetSetMaxWidth_IHandler")]
public virtual void set_MaxWidth(int value);
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetGetRippleColorHandler();
    private static IntPtr n_GetRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRippleColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetRippleColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_rippleColor);
    [RegisterAttribute("getRippleColor", "()Landroid/content/res/ColorStateList;", "GetGetRippleColorHandler")]
public virtual ColorStateList get_RippleColor();
    [RegisterAttribute("setRippleColor", "(Landroid/content/res/ColorStateList;)V", "GetSetRippleColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_RippleColor(ColorStateList value);
    private static Delegate GetGetShowMotionSpecHandler();
    private static IntPtr n_GetShowMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetShowMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_showMotionSpec);
    [RegisterAttribute("getShowMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetShowMotionSpecHandler")]
public virtual MotionSpec get_ShowMotionSpec();
    [RegisterAttribute("setShowMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_ShowMotionSpec(MotionSpec value);
    private static Delegate GetGetTextHandler();
    private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetText_Ljava_lang_CharSequence_Handler();
    private static void n_SetText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_text);
    [RegisterAttribute("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")]
public virtual ICharSequence get_TextFormatted();
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")]
public virtual void set_TextFormatted(ICharSequence value);
    public string get_Text();
    public void set_Text(string value);
    private static Delegate GetGetTextAppearanceHandler();
    private static IntPtr n_GetTextAppearance(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextAppearance_Landroid_support_design_resources_TextAppearance_Handler();
    private static void n_SetTextAppearance_Landroid_support_design_resources_TextAppearance_(IntPtr jnienv, IntPtr native__this, IntPtr native_textAppearance);
    [RegisterAttribute("getTextAppearance", "()Landroid/support/design/resources/TextAppearance;", "GetGetTextAppearanceHandler")]
public virtual TextAppearance get_TextAppearance();
    [RegisterAttribute("setTextAppearance", "(Landroid/support/design/resources/TextAppearance;)V", "GetSetTextAppearance_Landroid_support_design_resources_TextAppearance_Handler")]
public virtual void set_TextAppearance(TextAppearance value);
    private static Delegate GetGetTextEndPaddingHandler();
    private static float n_GetTextEndPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextEndPadding_FHandler();
    private static void n_SetTextEndPadding_F(IntPtr jnienv, IntPtr native__this, float textEndPadding);
    [RegisterAttribute("getTextEndPadding", "()F", "GetGetTextEndPaddingHandler")]
public virtual float get_TextEndPadding();
    [RegisterAttribute("setTextEndPadding", "(F)V", "GetSetTextEndPadding_FHandler")]
public virtual void set_TextEndPadding(float value);
    private static Delegate GetGetTextStartPaddingHandler();
    private static float n_GetTextStartPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTextStartPadding_FHandler();
    private static void n_SetTextStartPadding_F(IntPtr jnienv, IntPtr native__this, float textStartPadding);
    [RegisterAttribute("getTextStartPadding", "()F", "GetGetTextStartPaddingHandler")]
public virtual float get_TextStartPadding();
    [RegisterAttribute("setTextStartPadding", "(F)V", "GetSetTextStartPadding_FHandler")]
public virtual void set_TextStartPadding(float value);
    private static Delegate GetGetUseCompatRippleHandler();
    private static bool n_GetUseCompatRipple(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUseCompatRipple_ZHandler();
    private static void n_SetUseCompatRipple_Z(IntPtr jnienv, IntPtr native__this, bool useCompatRipple);
    [RegisterAttribute("getUseCompatRipple", "()Z", "GetGetUseCompatRippleHandler")]
public virtual bool get_UseCompatRipple();
    [RegisterAttribute("setUseCompatRipple", "(Z)V", "GetSetUseCompatRipple_ZHandler")]
public virtual void set_UseCompatRipple(bool value);
    [RegisterAttribute("createFromAttributes", "(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/support/design/chip/ChipDrawable;", "")]
public static ChipDrawable CreateFromAttributes(Context context, IAttributeSet attrs, int defStyleAttr, int defStyleRes);
    [RegisterAttribute("createFromResource", "(Landroid/content/Context;I)Landroid/support/design/chip/ChipDrawable;", "")]
public static ChipDrawable CreateFromResource(Context context, int id);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetGetChipTouchBounds_Landroid_graphics_RectF_Handler();
    private static void n_GetChipTouchBounds_Landroid_graphics_RectF_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("getChipTouchBounds", "(Landroid/graphics/RectF;)V", "GetGetChipTouchBounds_Landroid_graphics_RectF_Handler")]
public virtual void GetChipTouchBounds(RectF bounds);
    private static Delegate GetGetCloseIconStateHandler();
    private static IntPtr n_GetCloseIconState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCloseIconState", "()[I", "GetGetCloseIconStateHandler")]
public virtual Int32[] GetCloseIconState();
    private static Delegate GetGetCloseIconTouchBounds_Landroid_graphics_RectF_Handler();
    private static void n_GetCloseIconTouchBounds_Landroid_graphics_RectF_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("getCloseIconTouchBounds", "(Landroid/graphics/RectF;)V", "GetGetCloseIconTouchBounds_Landroid_graphics_RectF_Handler")]
public virtual void GetCloseIconTouchBounds(RectF bounds);
    private static Delegate GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_InvalidateDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_who);
    [RegisterAttribute("invalidateDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetInvalidateDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void InvalidateDrawable(Drawable who);
    private static Delegate GetOnSizeChangeHandler();
    private static void n_OnSizeChange(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSizeChange", "()V", "GetOnSizeChangeHandler")]
protected virtual void OnSizeChange();
    private static Delegate GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler();
    private static void n_ScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_J(IntPtr jnienv, IntPtr native__this, IntPtr native_who, IntPtr native_what, long when);
    [RegisterAttribute("scheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;J)V", "GetScheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_JHandler")]
public virtual void ScheduleDrawable(Drawable who, IRunnable what, long when);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetCheckableResource_IHandler();
    private static void n_SetCheckableResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckableResource", "(I)V", "GetSetCheckableResource_IHandler")]
public virtual void SetCheckableResource(int id);
    private static Delegate GetSetCheckedIconEnabledResource_IHandler();
    private static void n_SetCheckedIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCheckedIconEnabledResource", "(I)V", "GetSetCheckedIconEnabledResource_IHandler")]
public virtual void SetCheckedIconEnabledResource(int id);
    private static Delegate GetSetCheckedIconResource_IHandler();
    private static void n_SetCheckedIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedIconResource", "(I)V", "GetSetCheckedIconResource_IHandler")]
public virtual void SetCheckedIconResource(int id);
    private static Delegate GetSetCheckedIconVisible_IHandler();
    private static void n_SetCheckedIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedIconVisible", "(I)V", "GetSetCheckedIconVisible_IHandler")]
public virtual void SetCheckedIconVisible(int id);
    private static Delegate GetSetChipBackgroundColorResource_IHandler();
    private static void n_SetChipBackgroundColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipBackgroundColorResource", "(I)V", "GetSetChipBackgroundColorResource_IHandler")]
public virtual void SetChipBackgroundColorResource(int id);
    private static Delegate GetSetChipCornerRadiusResource_IHandler();
    private static void n_SetChipCornerRadiusResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipCornerRadiusResource", "(I)V", "GetSetChipCornerRadiusResource_IHandler")]
public virtual void SetChipCornerRadiusResource(int id);
    private static Delegate GetSetChipEndPaddingResource_IHandler();
    private static void n_SetChipEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipEndPaddingResource", "(I)V", "GetSetChipEndPaddingResource_IHandler")]
public virtual void SetChipEndPaddingResource(int id);
    private static Delegate GetSetChipIconEnabledResource_IHandler();
    private static void n_SetChipIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setChipIconEnabledResource", "(I)V", "GetSetChipIconEnabledResource_IHandler")]
public virtual void SetChipIconEnabledResource(int id);
    private static Delegate GetSetChipIconResource_IHandler();
    private static void n_SetChipIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconResource", "(I)V", "GetSetChipIconResource_IHandler")]
public virtual void SetChipIconResource(int id);
    private static Delegate GetSetChipIconSizeResource_IHandler();
    private static void n_SetChipIconSizeResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconSizeResource", "(I)V", "GetSetChipIconSizeResource_IHandler")]
public virtual void SetChipIconSizeResource(int id);
    private static Delegate GetSetChipIconTintResource_IHandler();
    private static void n_SetChipIconTintResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconTintResource", "(I)V", "GetSetChipIconTintResource_IHandler")]
public virtual void SetChipIconTintResource(int id);
    private static Delegate GetSetChipIconVisible_IHandler();
    private static void n_SetChipIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipIconVisible", "(I)V", "GetSetChipIconVisible_IHandler")]
public virtual void SetChipIconVisible(int id);
    private static Delegate GetSetChipMinHeightResource_IHandler();
    private static void n_SetChipMinHeightResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipMinHeightResource", "(I)V", "GetSetChipMinHeightResource_IHandler")]
public virtual void SetChipMinHeightResource(int id);
    private static Delegate GetSetChipStartPaddingResource_IHandler();
    private static void n_SetChipStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStartPaddingResource", "(I)V", "GetSetChipStartPaddingResource_IHandler")]
public virtual void SetChipStartPaddingResource(int id);
    private static Delegate GetSetChipStrokeColorResource_IHandler();
    private static void n_SetChipStrokeColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStrokeColorResource", "(I)V", "GetSetChipStrokeColorResource_IHandler")]
public virtual void SetChipStrokeColorResource(int id);
    private static Delegate GetSetChipStrokeWidthResource_IHandler();
    private static void n_SetChipStrokeWidthResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipStrokeWidthResource", "(I)V", "GetSetChipStrokeWidthResource_IHandler")]
public virtual void SetChipStrokeWidthResource(int id);
    private static Delegate GetSetCloseIconEnabledResource_IHandler();
    private static void n_SetCloseIconEnabledResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCloseIconEnabledResource", "(I)V", "GetSetCloseIconEnabledResource_IHandler")]
public virtual void SetCloseIconEnabledResource(int id);
    private static Delegate GetSetCloseIconEndPaddingResource_IHandler();
    private static void n_SetCloseIconEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconEndPaddingResource", "(I)V", "GetSetCloseIconEndPaddingResource_IHandler")]
public virtual void SetCloseIconEndPaddingResource(int id);
    private static Delegate GetSetCloseIconResource_IHandler();
    private static void n_SetCloseIconResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconResource", "(I)V", "GetSetCloseIconResource_IHandler")]
public virtual void SetCloseIconResource(int id);
    private static Delegate GetSetCloseIconSizeResource_IHandler();
    private static void n_SetCloseIconSizeResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconSizeResource", "(I)V", "GetSetCloseIconSizeResource_IHandler")]
public virtual void SetCloseIconSizeResource(int id);
    private static Delegate GetSetCloseIconStartPaddingResource_IHandler();
    private static void n_SetCloseIconStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconStartPaddingResource", "(I)V", "GetSetCloseIconStartPaddingResource_IHandler")]
public virtual void SetCloseIconStartPaddingResource(int id);
    private static Delegate GetSetCloseIconState_arrayIHandler();
    private static bool n_SetCloseIconState_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_stateSet);
    [RegisterAttribute("setCloseIconState", "([I)Z", "GetSetCloseIconState_arrayIHandler")]
public virtual bool SetCloseIconState(Int32[] stateSet);
    private static Delegate GetSetCloseIconTintResource_IHandler();
    private static void n_SetCloseIconTintResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconTintResource", "(I)V", "GetSetCloseIconTintResource_IHandler")]
public virtual void SetCloseIconTintResource(int id);
    private static Delegate GetSetCloseIconVisible_IHandler();
    private static void n_SetCloseIconVisible_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCloseIconVisible", "(I)V", "GetSetCloseIconVisible_IHandler")]
public virtual void SetCloseIconVisible(int id);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetDelegate_Landroid_support_design_chip_ChipDrawable_Delegate_Handler();
    private static void n_SetDelegate_Landroid_support_design_chip_ChipDrawable_Delegate_(IntPtr jnienv, IntPtr native__this, IntPtr native__delegate);
    [RegisterAttribute("setDelegate", "(Landroid/support/design/chip/ChipDrawable$Delegate;)V", "GetSetDelegate_Landroid_support_design_chip_ChipDrawable_Delegate_Handler")]
public virtual void SetDelegate(IDelegate delegate);
    private static Delegate GetSetHideMotionSpecResource_IHandler();
    private static void n_SetHideMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setHideMotionSpecResource", "(I)V", "GetSetHideMotionSpecResource_IHandler")]
public virtual void SetHideMotionSpecResource(int id);
    private static Delegate GetSetIconEndPaddingResource_IHandler();
    private static void n_SetIconEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setIconEndPaddingResource", "(I)V", "GetSetIconEndPaddingResource_IHandler")]
public virtual void SetIconEndPaddingResource(int id);
    private static Delegate GetSetIconStartPaddingResource_IHandler();
    private static void n_SetIconStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setIconStartPaddingResource", "(I)V", "GetSetIconStartPaddingResource_IHandler")]
public virtual void SetIconStartPaddingResource(int id);
    private static Delegate GetSetRippleColorResource_IHandler();
    private static void n_SetRippleColorResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setRippleColorResource", "(I)V", "GetSetRippleColorResource_IHandler")]
public virtual void SetRippleColorResource(int id);
    private static Delegate GetSetShowMotionSpecResource_IHandler();
    private static void n_SetShowMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setShowMotionSpecResource", "(I)V", "GetSetShowMotionSpecResource_IHandler")]
public virtual void SetShowMotionSpecResource(int id);
    private static Delegate GetSetTextAppearanceResource_IHandler();
    private static void n_SetTextAppearanceResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextAppearanceResource", "(I)V", "GetSetTextAppearanceResource_IHandler")]
public virtual void SetTextAppearanceResource(int id);
    private static Delegate GetSetTextEndPaddingResource_IHandler();
    private static void n_SetTextEndPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextEndPaddingResource", "(I)V", "GetSetTextEndPaddingResource_IHandler")]
public virtual void SetTextEndPaddingResource(int id);
    private static Delegate GetSetTextResource_IHandler();
    private static void n_SetTextResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextResource", "(I)V", "GetSetTextResource_IHandler")]
public virtual void SetTextResource(int id);
    private static Delegate GetSetTextStartPaddingResource_IHandler();
    private static void n_SetTextStartPaddingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setTextStartPaddingResource", "(I)V", "GetSetTextStartPaddingResource_IHandler")]
public virtual void SetTextStartPaddingResource(int id);
    private static Delegate GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler();
    private static void n_UnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_who, IntPtr native_what);
    [RegisterAttribute("unscheduleDrawable", "(Landroid/graphics/drawable/Drawable;Ljava/lang/Runnable;)V", "GetUnscheduleDrawable_Landroid_graphics_drawable_Drawable_Ljava_lang_Runnable_Handler")]
public virtual void UnscheduleDrawable(Drawable who, IRunnable what);
}
[RegisterAttribute("android/support/design/chip/ChipGroup")]
public class Android.Support.Design.Chip.ChipGroup : FlowLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCheckedChipId;
    private static Delegate cb_getChipSpacingHorizontal;
    private static Delegate cb_setChipSpacingHorizontal_I;
    private static Delegate cb_getChipSpacingVertical;
    private static Delegate cb_setChipSpacingVertical_I;
    private static Delegate cb_isSingleSelection;
    private static Delegate cb_setSingleSelection_Z;
    private static Delegate cb_check_I;
    private static Delegate cb_clearCheck;
    private static Delegate cb_setChipSpacing_I;
    private static Delegate cb_setChipSpacingHorizontalResource_I;
    private static Delegate cb_setChipSpacingResource_I;
    private static Delegate cb_setChipSpacingVerticalResource_I;
    private static Delegate cb_setDividerDrawableHorizontal_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setDividerDrawableVertical_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setFlexWrap_I;
    private static Delegate cb_setOnCheckedChangeListener_Landroid_support_design_chip_ChipGroup_OnCheckedChangeListener_;
    private static Delegate cb_setShowDividerHorizontal_I;
    private static Delegate cb_setShowDividerVertical_I;
    private static Delegate cb_setSingleLine_I;
    private static Delegate cb_setSingleSelection_I;
    private WeakReference weak_implementor_SetOnCheckedChangeListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CheckedChipId { get; }
    public int ChipSpacingHorizontal { get; public set; }
    public int ChipSpacingVertical { get; public set; }
    public bool SingleSelection { get; public set; }
    protected ChipGroup(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ChipGroup(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ChipGroup(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public ChipGroup(Context context, IAttributeSet attrs, int defStyleAttr);
    private static ChipGroup();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCheckedChipIdHandler();
    private static int n_GetCheckedChipId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCheckedChipId", "()I", "GetGetCheckedChipIdHandler")]
public virtual int get_CheckedChipId();
    private static Delegate GetGetChipSpacingHorizontalHandler();
    private static int n_GetChipSpacingHorizontal(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipSpacingHorizontal_IHandler();
    private static void n_SetChipSpacingHorizontal_I(IntPtr jnienv, IntPtr native__this, int chipSpacingHorizontal);
    [RegisterAttribute("getChipSpacingHorizontal", "()I", "GetGetChipSpacingHorizontalHandler")]
public virtual int get_ChipSpacingHorizontal();
    [RegisterAttribute("setChipSpacingHorizontal", "(I)V", "GetSetChipSpacingHorizontal_IHandler")]
public virtual void set_ChipSpacingHorizontal(int value);
    private static Delegate GetGetChipSpacingVerticalHandler();
    private static int n_GetChipSpacingVertical(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChipSpacingVertical_IHandler();
    private static void n_SetChipSpacingVertical_I(IntPtr jnienv, IntPtr native__this, int chipSpacingVertical);
    [RegisterAttribute("getChipSpacingVertical", "()I", "GetGetChipSpacingVerticalHandler")]
public virtual int get_ChipSpacingVertical();
    [RegisterAttribute("setChipSpacingVertical", "(I)V", "GetSetChipSpacingVertical_IHandler")]
public virtual void set_ChipSpacingVertical(int value);
    private static Delegate GetIsSingleSelectionHandler();
    private static bool n_IsSingleSelection(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSingleSelection_ZHandler();
    private static void n_SetSingleSelection_Z(IntPtr jnienv, IntPtr native__this, bool singleSelection);
    [RegisterAttribute("isSingleSelection", "()Z", "GetIsSingleSelectionHandler")]
public virtual bool get_SingleSelection();
    [RegisterAttribute("setSingleSelection", "(Z)V", "GetSetSingleSelection_ZHandler")]
public virtual void set_SingleSelection(bool value);
    private static Delegate GetCheck_IHandler();
    private static void n_Check_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("check", "(I)V", "GetCheck_IHandler")]
public virtual void Check(int id);
    private static Delegate GetClearCheckHandler();
    private static void n_ClearCheck(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearCheck", "()V", "GetClearCheckHandler")]
public virtual void ClearCheck();
    private static Delegate GetSetChipSpacing_IHandler();
    private static void n_SetChipSpacing_I(IntPtr jnienv, IntPtr native__this, int chipSpacing);
    [RegisterAttribute("setChipSpacing", "(I)V", "GetSetChipSpacing_IHandler")]
public virtual void SetChipSpacing(int chipSpacing);
    private static Delegate GetSetChipSpacingHorizontalResource_IHandler();
    private static void n_SetChipSpacingHorizontalResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipSpacingHorizontalResource", "(I)V", "GetSetChipSpacingHorizontalResource_IHandler")]
public virtual void SetChipSpacingHorizontalResource(int id);
    private static Delegate GetSetChipSpacingResource_IHandler();
    private static void n_SetChipSpacingResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipSpacingResource", "(I)V", "GetSetChipSpacingResource_IHandler")]
public virtual void SetChipSpacingResource(int id);
    private static Delegate GetSetChipSpacingVerticalResource_IHandler();
    private static void n_SetChipSpacingVerticalResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setChipSpacingVerticalResource", "(I)V", "GetSetChipSpacingVerticalResource_IHandler")]
public virtual void SetChipSpacingVerticalResource(int id);
    private static Delegate GetSetDividerDrawableHorizontal_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetDividerDrawableHorizontal_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_divider);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setDividerDrawableHorizontal", "(Landroid/graphics/drawable/Drawable;)V", "GetSetDividerDrawableHorizontal_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetDividerDrawableHorizontal(Drawable divider);
    private static Delegate GetSetDividerDrawableVertical_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetDividerDrawableVertical_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_divider);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setDividerDrawableVertical", "(Landroid/graphics/drawable/Drawable;)V", "GetSetDividerDrawableVertical_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetDividerDrawableVertical(Drawable divider);
    private static Delegate GetSetFlexWrap_IHandler();
    private static void n_SetFlexWrap_I(IntPtr jnienv, IntPtr native__this, int flexWrap);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setFlexWrap", "(I)V", "GetSetFlexWrap_IHandler")]
public virtual void SetFlexWrap(int flexWrap);
    private static Delegate GetSetOnCheckedChangeListener_Landroid_support_design_chip_ChipGroup_OnCheckedChangeListener_Handler();
    private static void n_SetOnCheckedChangeListener_Landroid_support_design_chip_ChipGroup_OnCheckedChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnCheckedChangeListener", "(Landroid/support/design/chip/ChipGroup$OnCheckedChangeListener;)V", "GetSetOnCheckedChangeListener_Landroid_support_design_chip_ChipGroup_OnCheckedChangeListener_Handler")]
public virtual void SetOnCheckedChangeListener(IOnCheckedChangeListener listener);
    private static Delegate GetSetShowDividerHorizontal_IHandler();
    private static void n_SetShowDividerHorizontal_I(IntPtr jnienv, IntPtr native__this, int dividerMode);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShowDividerHorizontal", "(I)V", "GetSetShowDividerHorizontal_IHandler")]
public virtual void SetShowDividerHorizontal(int dividerMode);
    private static Delegate GetSetShowDividerVertical_IHandler();
    private static void n_SetShowDividerVertical_I(IntPtr jnienv, IntPtr native__this, int dividerMode);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShowDividerVertical", "(I)V", "GetSetShowDividerVertical_IHandler")]
public virtual void SetShowDividerVertical(int dividerMode);
    private static Delegate GetSetSingleLine_IHandler();
    private static void n_SetSingleLine_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setSingleLine", "(I)V", "GetSetSingleLine_IHandler")]
public virtual void SetSingleLine(int id);
    private static Delegate GetSetSingleSelection_IHandler();
    private static void n_SetSingleSelection_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setSingleSelection", "(I)V", "GetSetSingleSelection_IHandler")]
public virtual void SetSingleSelection(int id);
    public void add_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    public void remove_CheckedChange(EventHandler`1<CheckedChangeEventArgs> value);
    private IOnCheckedChangeListenerImplementor __CreateIOnCheckedChangeListenerImplementor();
}
[RegisterAttribute("android/support/design/circularreveal/cardview/CircularRevealCardView")]
public class Android.Support.Design.CircularReveal.CardView.CircularRevealCardView : CardView {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealCardView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealCardView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealCardView(Context context, IAttributeSet attrs);
    private static CircularRevealCardView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealCompat")]
public class Android.Support.Design.CircularReveal.CircularRevealCompat : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal CircularRevealCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircularRevealCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createCircularReveal", "(Landroid/support/design/circularreveal/CircularRevealWidget;FFF)Landroid/animation/Animator;", "")]
public static Animator CreateCircularReveal(ICircularRevealWidget view, float centerX, float centerY, float endRadius);
    [RegisterAttribute("createCircularReveal", "(Landroid/support/design/circularreveal/CircularRevealWidget;FFFF)Landroid/animation/Animator;", "")]
public static Animator CreateCircularReveal(ICircularRevealWidget view, float centerX, float centerY, float startRadius, float endRadius);
    [RegisterAttribute("createCircularRevealListener", "(Landroid/support/design/circularreveal/CircularRevealWidget;)Landroid/animation/Animator$AnimatorListener;", "")]
public static IAnimatorListener CreateCircularRevealListener(ICircularRevealWidget view);
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealFrameLayout")]
public class Android.Support.Design.CircularReveal.CircularRevealFrameLayout : FrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealFrameLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealFrameLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealFrameLayout(Context context, IAttributeSet attrs);
    private static CircularRevealFrameLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealGridLayout")]
public class Android.Support.Design.CircularReveal.CircularRevealGridLayout : GridLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealGridLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealGridLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealGridLayout(Context context, IAttributeSet attrs);
    private static CircularRevealGridLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealHelper")]
public class Android.Support.Design.CircularReveal.CircularRevealHelper : Object {
    [RegisterAttribute("BITMAP_SHADER")]
public static int BitmapShader;
    [RegisterAttribute("CLIP_PATH")]
public static int ClipPath;
    [RegisterAttribute("REVEAL_ANIMATOR")]
public static int RevealAnimator;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_isOpaque;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    [RegisterAttribute("STRATEGY")]
public static int Strategy { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public bool IsOpaque { get; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealHelper(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircularRevealHelper();
    public static int get_Strategy();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetIsOpaqueHandler();
    private static bool n_IsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOpaque", "()Z", "GetIsOpaqueHandler")]
public virtual bool get_IsOpaque();
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealLinearLayout")]
public class Android.Support.Design.CircularReveal.CircularRevealLinearLayout : LinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealLinearLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealLinearLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealLinearLayout(Context context, IAttributeSet attrs);
    private static CircularRevealLinearLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealRelativeLayout")]
public class Android.Support.Design.CircularReveal.CircularRevealRelativeLayout : RelativeLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealRelativeLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealRelativeLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealRelativeLayout(Context context, IAttributeSet attrs);
    private static CircularRevealRelativeLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealWidget$CircularRevealEvaluator")]
public class Android.Support.Design.CircularReveal.CircularRevealWidgetCircularRevealEvaluator : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_evaluate_FLandroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    [RegisterAttribute("CIRCULAR_REVEAL")]
public static ITypeEvaluator CircularReveal { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CircularRevealWidgetCircularRevealEvaluator(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircularRevealWidgetCircularRevealEvaluator();
    public sealed virtual Object Evaluate(float fraction, Object startValue, Object endValue);
    public static ITypeEvaluator get_CircularReveal();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetEvaluate_FLandroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static IntPtr n_Evaluate_FLandroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, float fraction, IntPtr native_startValue, IntPtr native_endValue);
    [RegisterAttribute("evaluate", "(FLandroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetEvaluate_FLandroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual CircularRevealWidgetRevealInfo Evaluate(float fraction, CircularRevealWidgetRevealInfo startValue, CircularRevealWidgetRevealInfo endValue);
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealWidget$RevealInfo")]
public class Android.Support.Design.CircularReveal.CircularRevealWidgetRevealInfo : Object {
    [RegisterAttribute("INVALID_RADIUS")]
public static float InvalidRadius;
    internal static JniPeerMembers _members;
    private static Delegate cb_isInvalid;
    private static Delegate cb_set_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_set_FFF;
    [RegisterAttribute("centerX")]
public float CenterX { get; public set; }
    [RegisterAttribute("centerY")]
public float CenterY { get; public set; }
    [RegisterAttribute("radius")]
public float Radius { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsInvalid { get; }
    protected CircularRevealWidgetRevealInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "")]
public CircularRevealWidgetRevealInfo(CircularRevealWidgetRevealInfo other);
    [RegisterAttribute(".ctor", "(FFF)V", "")]
public CircularRevealWidgetRevealInfo(float centerX, float centerY, float radius);
    private static CircularRevealWidgetRevealInfo();
    public float get_CenterX();
    public void set_CenterX(float value);
    public float get_CenterY();
    public void set_CenterY(float value);
    public float get_Radius();
    public void set_Radius(float value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsInvalidHandler();
    private static bool n_IsInvalid(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isInvalid", "()Z", "GetIsInvalidHandler")]
public virtual bool get_IsInvalid();
    private static Delegate GetSet_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_Set_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    [RegisterAttribute("set", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSet_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void Set(CircularRevealWidgetRevealInfo other);
    private static Delegate GetSet_FFFHandler();
    private static void n_Set_FFF(IntPtr jnienv, IntPtr native__this, float centerX, float centerY, float radius);
    [RegisterAttribute("set", "(FFF)V", "GetSet_FFFHandler")]
public virtual void Set(float centerX, float centerY, float radius);
}
[RegisterAttribute("android/support/design/circularreveal/coordinatorlayout/CircularRevealCoordinatorLayout")]
public class Android.Support.Design.CircularReveal.CoordinatorLayout.CircularRevealCoordinatorLayout : CoordinatorLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private static Delegate cb_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    protected CircularRevealCoordinatorLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularRevealCoordinatorLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CircularRevealCoordinatorLayout(Context context, IAttributeSet attrs);
    private static CircularRevealCoordinatorLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler")]
public virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler")]
public virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler")]
public virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_revealInfo);
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler")]
public virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler")]
public virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("actualDraw", "(Landroid/graphics/Canvas;)V", "GetActualDraw_Landroid_graphics_Canvas_Handler")]
public virtual void ActualDraw(Canvas canvas);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("actualIsOpaque", "()Z", "GetActualIsOpaqueHandler")]
public virtual bool ActualIsOpaque();
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler")]
public virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler")]
public virtual void DestroyCircularRevealCache();
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealWidget", "", "Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker")]
public interface Android.Support.Design.CircularReveal.ICircularRevealWidget {
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public bool IsOpaque { get; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    [RegisterAttribute("getCircularRevealOverlayDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetCircularRevealOverlayDrawableHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual Drawable get_CircularRevealOverlayDrawable();
    [RegisterAttribute("setCircularRevealOverlayDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void set_CircularRevealOverlayDrawable(Drawable value);
    [RegisterAttribute("getCircularRevealScrimColor", "()I", "GetGetCircularRevealScrimColorHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual int get_CircularRevealScrimColor();
    [RegisterAttribute("setCircularRevealScrimColor", "(I)V", "GetSetCircularRevealScrimColor_IHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void set_CircularRevealScrimColor(int value);
    [RegisterAttribute("isOpaque", "()Z", "GetIsOpaqueHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual bool get_IsOpaque();
    [RegisterAttribute("getRevealInfo", "()Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;", "GetGetRevealInfoHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    [RegisterAttribute("setRevealInfo", "(Landroid/support/design/circularreveal/CircularRevealWidget$RevealInfo;)V", "GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    [RegisterAttribute("buildCircularRevealCache", "()V", "GetBuildCircularRevealCacheHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void BuildCircularRevealCache();
    [RegisterAttribute("destroyCircularRevealCache", "()V", "GetDestroyCircularRevealCacheHandler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void DestroyCircularRevealCache();
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler:Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void Draw(Canvas p0);
}
[RegisterAttribute("android/support/design/circularreveal/CircularRevealWidget")]
internal class Android.Support.Design.CircularReveal.ICircularRevealWidgetInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getCircularRevealOverlayDrawable;
    private static Delegate cb_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_getCircularRevealOverlayDrawable;
    private IntPtr id_setCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getCircularRevealScrimColor;
    private static Delegate cb_setCircularRevealScrimColor_I;
    private IntPtr id_getCircularRevealScrimColor;
    private IntPtr id_setCircularRevealScrimColor_I;
    private static Delegate cb_isOpaque;
    private IntPtr id_isOpaque;
    private static Delegate cb_getRevealInfo;
    private static Delegate cb_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private IntPtr id_getRevealInfo;
    private IntPtr id_setRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_;
    private static Delegate cb_buildCircularRevealCache;
    private IntPtr id_buildCircularRevealCache;
    private static Delegate cb_destroyCircularRevealCache;
    private IntPtr id_destroyCircularRevealCache;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private IntPtr id_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualDraw_Landroid_graphics_Canvas_;
    private IntPtr id_actualDraw_Landroid_graphics_Canvas_;
    private static Delegate cb_actualIsOpaque;
    private IntPtr id_actualIsOpaque;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable CircularRevealOverlayDrawable { get; public set; }
    public int CircularRevealScrimColor { get; public set; }
    public bool IsOpaque { get; }
    public CircularRevealWidgetRevealInfo RevealInfo { get; public set; }
    public ICircularRevealWidgetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICircularRevealWidgetInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static ICircularRevealWidget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCircularRevealOverlayDrawableHandler();
    private static IntPtr n_GetCircularRevealOverlayDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetCircularRevealOverlayDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Drawable get_CircularRevealOverlayDrawable();
    public sealed virtual void set_CircularRevealOverlayDrawable(Drawable value);
    private static Delegate GetGetCircularRevealScrimColorHandler();
    private static int n_GetCircularRevealScrimColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircularRevealScrimColor_IHandler();
    private static void n_SetCircularRevealScrimColor_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual int get_CircularRevealScrimColor();
    public sealed virtual void set_CircularRevealScrimColor(int value);
    private static Delegate GetIsOpaqueHandler();
    private static bool n_IsOpaque(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsOpaque();
    private static Delegate GetGetRevealInfoHandler();
    private static IntPtr n_GetRevealInfo(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_Handler();
    private static void n_SetRevealInfo_Landroid_support_design_circularreveal_CircularRevealWidget_RevealInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual CircularRevealWidgetRevealInfo get_RevealInfo();
    public sealed virtual void set_RevealInfo(CircularRevealWidgetRevealInfo value);
    private static Delegate GetBuildCircularRevealCacheHandler();
    private static void n_BuildCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void BuildCircularRevealCache();
    private static Delegate GetDestroyCircularRevealCacheHandler();
    private static void n_DestroyCircularRevealCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void DestroyCircularRevealCache();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Draw(Canvas p0);
    private static Delegate GetActualDraw_Landroid_graphics_Canvas_Handler();
    private static void n_ActualDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void ActualDraw(Canvas p0);
    private static Delegate GetActualIsOpaqueHandler();
    private static bool n_ActualIsOpaque(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool ActualIsOpaque();
}
[RegisterAttribute("android/support/design/drawable/DrawableUtils")]
public class Android.Support.Design.Drawable.DrawableUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DrawableUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("updateTintFilter", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;", "")]
public static PorterDuffColorFilter UpdateTintFilter(Drawable drawable, ColorStateList tint, Mode tintMode);
}
[RegisterAttribute("android/support/design/expandable/ExpandableWidgetHelper")]
public class Android.Support.Design.Expandable.ExpandableWidgetHelper : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ExpandedComponentIdHint { get; public set; }
    public bool IsExpanded { get; }
    internal ExpandableWidgetHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/design/expandable/ExpandableWidget;)V", "")]
public ExpandableWidgetHelper(IExpandableWidget widget);
    private static ExpandableWidgetHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExpandedComponentIdHint", "()I", "GetGetExpandedComponentIdHintHandler")]
public int get_ExpandedComponentIdHint();
    [RegisterAttribute("setExpandedComponentIdHint", "(I)V", "GetSetExpandedComponentIdHint_IHandler")]
public void set_ExpandedComponentIdHint(int value);
    [RegisterAttribute("isExpanded", "()Z", "GetIsExpandedHandler")]
public bool get_IsExpanded();
    [RegisterAttribute("onRestoreInstanceState", "(Landroid/os/Bundle;)V", "")]
public void OnRestoreInstanceState(Bundle state);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Bundle;", "")]
public Bundle OnSaveInstanceState();
    [RegisterAttribute("setExpanded", "(Z)Z", "")]
public bool SetExpanded(bool expanded);
}
[RegisterAttribute("android/support/design/expandable/ExpandableTransformationWidget", "", "Android.Support.Design.Expandable.IExpandableTransformationWidgetInvoker")]
public interface Android.Support.Design.Expandable.IExpandableTransformationWidget {
    public int ExpandedComponentIdHint { get; public set; }
    [RegisterAttribute("getExpandedComponentIdHint", "()I", "GetGetExpandedComponentIdHintHandler:Android.Support.Design.Expandable.IExpandableTransformationWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual int get_ExpandedComponentIdHint();
    [RegisterAttribute("setExpandedComponentIdHint", "(I)V", "GetSetExpandedComponentIdHint_IHandler:Android.Support.Design.Expandable.IExpandableTransformationWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void set_ExpandedComponentIdHint(int value);
}
[RegisterAttribute("android/support/design/expandable/ExpandableTransformationWidget")]
internal class Android.Support.Design.Expandable.IExpandableTransformationWidgetInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getExpandedComponentIdHint;
    private static Delegate cb_setExpandedComponentIdHint_I;
    private IntPtr id_getExpandedComponentIdHint;
    private IntPtr id_setExpandedComponentIdHint_I;
    private static Delegate cb_isExpanded;
    private IntPtr id_isExpanded;
    private static Delegate cb_setExpanded_Z;
    private IntPtr id_setExpanded_Z;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ExpandedComponentIdHint { get; public set; }
    public bool IsExpanded { get; }
    public IExpandableTransformationWidgetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExpandableTransformationWidgetInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IExpandableTransformationWidget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetExpandedComponentIdHintHandler();
    private static int n_GetExpandedComponentIdHint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedComponentIdHint_IHandler();
    private static void n_SetExpandedComponentIdHint_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual int get_ExpandedComponentIdHint();
    public sealed virtual void set_ExpandedComponentIdHint(int value);
    private static Delegate GetIsExpandedHandler();
    private static bool n_IsExpanded(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsExpanded();
    private static Delegate GetSetExpanded_ZHandler();
    private static bool n_SetExpanded_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool SetExpanded(bool p0);
}
[RegisterAttribute("android/support/design/expandable/ExpandableWidget", "", "Android.Support.Design.Expandable.IExpandableWidgetInvoker")]
public interface Android.Support.Design.Expandable.IExpandableWidget {
    public bool IsExpanded { get; }
    [RegisterAttribute("isExpanded", "()Z", "GetIsExpandedHandler:Android.Support.Design.Expandable.IExpandableWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual bool get_IsExpanded();
    [RegisterAttribute("setExpanded", "(Z)Z", "GetSetExpanded_ZHandler:Android.Support.Design.Expandable.IExpandableWidgetInvoker, Xamarin.Android.Support.Design")]
public abstract virtual bool SetExpanded(bool p0);
}
[RegisterAttribute("android/support/design/expandable/ExpandableWidget")]
internal class Android.Support.Design.Expandable.IExpandableWidgetInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isExpanded;
    private IntPtr id_isExpanded;
    private static Delegate cb_setExpanded_Z;
    private IntPtr id_setExpanded_Z;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsExpanded { get; }
    public IExpandableWidgetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExpandableWidgetInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IExpandableWidget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsExpandedHandler();
    private static bool n_IsExpanded(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsExpanded();
    private static Delegate GetSetExpanded_ZHandler();
    private static bool n_SetExpanded_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool SetExpanded(bool p0);
}
[RegisterAttribute("android/support/design/internal/BaselineLayout")]
public class Android.Support.Design.Internal.BaselineLayout : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_onLayout_ZIIII;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BaselineLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BaselineLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BaselineLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BaselineLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BaselineLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
}
[RegisterAttribute("android/support/design/internal/BottomNavigationItemView")]
public class Android.Support.Design.Internal.BottomNavigationItemView : FrameLayout {
    [RegisterAttribute("INVALID_ITEM_POSITION")]
public static int InvalidItemPosition;
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemData;
    private static Delegate cb_getItemPosition;
    private static Delegate cb_setItemPosition_I;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuItemImpl_I;
    private static Delegate cb_onCreateDrawableState_I;
    private static Delegate cb_prefersCondensedTitle;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIconSize_I;
    private static Delegate cb_setIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setItemBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setItemBackground_I;
    private static Delegate cb_setLabelVisibilityMode_I;
    private static Delegate cb_setShifting_Z;
    private static Delegate cb_setShortcut_ZC;
    private static Delegate cb_setTextAppearanceActive_I;
    private static Delegate cb_setTextAppearanceInactive_I;
    private static Delegate cb_setTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_showsIcon;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public MenuItemImpl ItemData { get; }
    public int ItemPosition { get; public set; }
    protected BottomNavigationItemView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationItemView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationItemView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BottomNavigationItemView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BottomNavigationItemView();
    public sealed virtual void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemDataHandler();
    private static IntPtr n_GetItemData(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getItemData", "()Landroid/support/v7/view/menu/MenuItemImpl;", "GetGetItemDataHandler")]
public virtual MenuItemImpl get_ItemData();
    private static Delegate GetGetItemPositionHandler();
    private static int n_GetItemPosition(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemPosition_IHandler();
    private static void n_SetItemPosition_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("getItemPosition", "()I", "GetGetItemPositionHandler")]
public virtual int get_ItemPosition();
    [RegisterAttribute("setItemPosition", "(I)V", "GetSetItemPosition_IHandler")]
public virtual void set_ItemPosition(int value);
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuItemImpl_I(IntPtr jnienv, IntPtr native__this, IntPtr native_itemData, int menuType);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuItemImpl;I)V", "GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler")]
public virtual void Initialize(MenuItemImpl itemData, int menuType);
    private static Delegate GetOnCreateDrawableState_IHandler();
    private static IntPtr n_OnCreateDrawableState_I(IntPtr jnienv, IntPtr native__this, int extraSpace);
    [RegisterAttribute("onCreateDrawableState", "(I)[I", "GetOnCreateDrawableState_IHandler")]
public virtual Int32[] OnCreateDrawableState(int extraSpace);
    private static Delegate GetPrefersCondensedTitleHandler();
    private static bool n_PrefersCondensedTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prefersCondensedTitle", "()Z", "GetPrefersCondensedTitleHandler")]
public virtual bool PrefersCondensedTitle();
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void SetChecked(bool checked);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_iconDrawable);
    [RegisterAttribute("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetIcon(Drawable iconDrawable);
    private static Delegate GetSetIconSize_IHandler();
    private static void n_SetIconSize_I(IntPtr jnienv, IntPtr native__this, int iconSize);
    [RegisterAttribute("setIconSize", "(I)V", "GetSetIconSize_IHandler")]
public virtual void SetIconSize(int iconSize);
    private static Delegate GetSetIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("setIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetIconTintList(ColorStateList tint);
    private static Delegate GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetItemBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_background);
    [RegisterAttribute("setItemBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetItemBackground(Drawable background);
    private static Delegate GetSetItemBackground_IHandler();
    private static void n_SetItemBackground_I(IntPtr jnienv, IntPtr native__this, int background);
    [RegisterAttribute("setItemBackground", "(I)V", "GetSetItemBackground_IHandler")]
public virtual void SetItemBackground(int background);
    private static Delegate GetSetLabelVisibilityMode_IHandler();
    private static void n_SetLabelVisibilityMode_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("setLabelVisibilityMode", "(I)V", "GetSetLabelVisibilityMode_IHandler")]
public virtual void SetLabelVisibilityMode(int mode);
    private static Delegate GetSetShifting_ZHandler();
    private static void n_SetShifting_Z(IntPtr jnienv, IntPtr native__this, bool shifting);
    [RegisterAttribute("setShifting", "(Z)V", "GetSetShifting_ZHandler")]
public virtual void SetShifting(bool shifting);
    private static Delegate GetSetShortcut_ZCHandler();
    private static void n_SetShortcut_ZC(IntPtr jnienv, IntPtr native__this, bool showShortcut, char shortcutKey);
    [RegisterAttribute("setShortcut", "(ZC)V", "GetSetShortcut_ZCHandler")]
public virtual void SetShortcut(bool showShortcut, char shortcutKey);
    private static Delegate GetSetTextAppearanceActive_IHandler();
    private static void n_SetTextAppearanceActive_I(IntPtr jnienv, IntPtr native__this, int activeTextAppearance);
    [RegisterAttribute("setTextAppearanceActive", "(I)V", "GetSetTextAppearanceActive_IHandler")]
public virtual void SetTextAppearanceActive(int activeTextAppearance);
    private static Delegate GetSetTextAppearanceInactive_IHandler();
    private static void n_SetTextAppearanceInactive_I(IntPtr jnienv, IntPtr native__this, int inactiveTextAppearance);
    [RegisterAttribute("setTextAppearanceInactive", "(I)V", "GetSetTextAppearanceInactive_IHandler")]
public virtual void SetTextAppearanceInactive(int inactiveTextAppearance);
    private static Delegate GetSetTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("setTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTextColor(ColorStateList color);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetTitle(ICharSequence title);
    public void SetTitle(string title);
    private static Delegate GetShowsIconHandler();
    private static bool n_ShowsIcon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showsIcon", "()Z", "GetShowsIconHandler")]
public virtual bool ShowsIcon();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationMenu")]
public class Android.Support.Design.Internal.BottomNavigationMenu : MenuBuilder {
    [RegisterAttribute("MAX_ITEM_COUNT")]
public static int MaxItemCount;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BottomNavigationMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationMenu(Context context);
    private static BottomNavigationMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationMenuView")]
public class Android.Support.Design.Internal.BottomNavigationMenuView : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_getIconTintList;
    private static Delegate cb_setIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemBackground;
    private static Delegate cb_setItemBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getItemBackgroundRes;
    private static Delegate cb_setItemBackgroundRes_I;
    private static Delegate cb_isItemHorizontalTranslationEnabled;
    private static Delegate cb_setItemHorizontalTranslationEnabled_Z;
    private static Delegate cb_getItemIconSize;
    private static Delegate cb_setItemIconSize_I;
    private static Delegate cb_getItemTextAppearanceActive;
    private static Delegate cb_setItemTextAppearanceActive_I;
    private static Delegate cb_getItemTextAppearanceInactive;
    private static Delegate cb_setItemTextAppearanceInactive_I;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getLabelVisibilityMode;
    private static Delegate cb_setLabelVisibilityMode_I;
    private static Delegate cb_getSelectedItemId;
    private static Delegate cb_getWindowAnimations;
    private static Delegate cb_buildMenuView;
    private static Delegate cb_createDefaultColorStateList_I;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuBuilder_;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_setPresenter_Landroid_support_design_internal_BottomNavigationPresenter_;
    private static Delegate cb_updateMenuView;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList IconTintList { get; public set; }
    public Drawable ItemBackground { get; public set; }
    public int ItemBackgroundRes { get; public set; }
    public bool ItemHorizontalTranslationEnabled { get; public set; }
    public int ItemIconSize { get; public set; }
    public int ItemTextAppearanceActive { get; public set; }
    public int ItemTextAppearanceInactive { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public int LabelVisibilityMode { get; public set; }
    public int SelectedItemId { get; }
    public int WindowAnimations { get; }
    protected BottomNavigationMenuView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationMenuView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationMenuView(Context context, IAttributeSet attrs);
    private static BottomNavigationMenuView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIconTintListHandler();
    private static IntPtr n_GetIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetIconTintListHandler")]
public virtual ColorStateList get_IconTintList();
    [RegisterAttribute("setIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_IconTintList(ColorStateList value);
    private static Delegate GetGetItemBackgroundHandler();
    private static IntPtr n_GetItemBackground(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetItemBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_background);
    [RegisterAttribute("getItemBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetItemBackgroundHandler")]
public virtual Drawable get_ItemBackground();
    [RegisterAttribute("setItemBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ItemBackground(Drawable value);
    private static Delegate GetGetItemBackgroundResHandler();
    private static int n_GetItemBackgroundRes(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackgroundRes_IHandler();
    private static void n_SetItemBackgroundRes_I(IntPtr jnienv, IntPtr native__this, int background);
    [RegisterAttribute("getItemBackgroundRes", "()I", "GetGetItemBackgroundResHandler")]
public virtual int get_ItemBackgroundRes();
    [RegisterAttribute("setItemBackgroundRes", "(I)V", "GetSetItemBackgroundRes_IHandler")]
public virtual void set_ItemBackgroundRes(int value);
    private static Delegate GetIsItemHorizontalTranslationEnabledHandler();
    private static bool n_IsItemHorizontalTranslationEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemHorizontalTranslationEnabled_ZHandler();
    private static void n_SetItemHorizontalTranslationEnabled_Z(IntPtr jnienv, IntPtr native__this, bool itemHorizontalTranslationEnabled);
    [RegisterAttribute("isItemHorizontalTranslationEnabled", "()Z", "GetIsItemHorizontalTranslationEnabledHandler")]
public virtual bool get_ItemHorizontalTranslationEnabled();
    [RegisterAttribute("setItemHorizontalTranslationEnabled", "(Z)V", "GetSetItemHorizontalTranslationEnabled_ZHandler")]
public virtual void set_ItemHorizontalTranslationEnabled(bool value);
    private static Delegate GetGetItemIconSizeHandler();
    private static int n_GetItemIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconSize_IHandler();
    private static void n_SetItemIconSize_I(IntPtr jnienv, IntPtr native__this, int iconSize);
    [RegisterAttribute("getItemIconSize", "()I", "GetGetItemIconSizeHandler")]
public virtual int get_ItemIconSize();
    [RegisterAttribute("setItemIconSize", "(I)V", "GetSetItemIconSize_IHandler")]
public virtual void set_ItemIconSize(int value);
    private static Delegate GetGetItemTextAppearanceActiveHandler();
    private static int n_GetItemTextAppearanceActive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextAppearanceActive_IHandler();
    private static void n_SetItemTextAppearanceActive_I(IntPtr jnienv, IntPtr native__this, int textAppearanceRes);
    [RegisterAttribute("getItemTextAppearanceActive", "()I", "GetGetItemTextAppearanceActiveHandler")]
public virtual int get_ItemTextAppearanceActive();
    [RegisterAttribute("setItemTextAppearanceActive", "(I)V", "GetSetItemTextAppearanceActive_IHandler")]
public virtual void set_ItemTextAppearanceActive(int value);
    private static Delegate GetGetItemTextAppearanceInactiveHandler();
    private static int n_GetItemTextAppearanceInactive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextAppearanceInactive_IHandler();
    private static void n_SetItemTextAppearanceInactive_I(IntPtr jnienv, IntPtr native__this, int textAppearanceRes);
    [RegisterAttribute("getItemTextAppearanceInactive", "()I", "GetGetItemTextAppearanceInactiveHandler")]
public virtual int get_ItemTextAppearanceInactive();
    [RegisterAttribute("setItemTextAppearanceInactive", "(I)V", "GetSetItemTextAppearanceInactive_IHandler")]
public virtual void set_ItemTextAppearanceInactive(int value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetLabelVisibilityModeHandler();
    private static int n_GetLabelVisibilityMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLabelVisibilityMode_IHandler();
    private static void n_SetLabelVisibilityMode_I(IntPtr jnienv, IntPtr native__this, int labelVisibilityMode);
    [RegisterAttribute("getLabelVisibilityMode", "()I", "GetGetLabelVisibilityModeHandler")]
public virtual int get_LabelVisibilityMode();
    [RegisterAttribute("setLabelVisibilityMode", "(I)V", "GetSetLabelVisibilityMode_IHandler")]
public virtual void set_LabelVisibilityMode(int value);
    private static Delegate GetGetSelectedItemIdHandler();
    private static int n_GetSelectedItemId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSelectedItemId", "()I", "GetGetSelectedItemIdHandler")]
public virtual int get_SelectedItemId();
    private static Delegate GetGetWindowAnimationsHandler();
    private static int n_GetWindowAnimations(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowAnimations", "()I", "GetGetWindowAnimationsHandler")]
public virtual int get_WindowAnimations();
    private static Delegate GetBuildMenuViewHandler();
    private static void n_BuildMenuView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("buildMenuView", "()V", "GetBuildMenuViewHandler")]
public virtual void BuildMenuView();
    private static Delegate GetCreateDefaultColorStateList_IHandler();
    private static IntPtr n_CreateDefaultColorStateList_I(IntPtr jnienv, IntPtr native__this, int baseColorThemeAttr);
    [RegisterAttribute("createDefaultColorStateList", "(I)Landroid/content/res/ColorStateList;", "GetCreateDefaultColorStateList_IHandler")]
public virtual ColorStateList CreateDefaultColorStateList(int baseColorThemeAttr);
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void Initialize(MenuBuilder menu);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private static Delegate GetSetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_Handler();
    private static void n_SetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_(IntPtr jnienv, IntPtr native__this, IntPtr native_presenter);
    [RegisterAttribute("setPresenter", "(Landroid/support/design/internal/BottomNavigationPresenter;)V", "GetSetPresenter_Landroid_support_design_internal_BottomNavigationPresenter_Handler")]
public virtual void SetPresenter(BottomNavigationPresenter presenter);
    private static Delegate GetUpdateMenuViewHandler();
    private static void n_UpdateMenuView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("updateMenuView", "()V", "GetUpdateMenuViewHandler")]
public virtual void UpdateMenuView();
}
[RegisterAttribute("android/support/design/internal/BottomNavigationPresenter")]
public class Android.Support.Design.Internal.BottomNavigationPresenter : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getId;
    private static Delegate cb_setId_I;
    private static Delegate cb_collapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_;
    private static Delegate cb_expandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_;
    private static Delegate cb_flagActionItems;
    private static Delegate cb_getMenuView_Landroid_view_ViewGroup_;
    private static Delegate cb_initForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_;
    private static Delegate cb_onCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_Z;
    private static Delegate cb_onRestoreInstanceState_Landroid_os_Parcelable_;
    private static Delegate cb_onSaveInstanceState;
    private static Delegate cb_onSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_;
    private static Delegate cb_setBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_;
    private static Delegate cb_setCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_;
    private static Delegate cb_setUpdateSuspended_Z;
    private static Delegate cb_updateMenuView_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Id { get; public set; }
    protected BottomNavigationPresenter(IntPtr javaReference, JniHandleOwnership transfer);
    private static BottomNavigationPresenter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetId_IHandler();
    private static void n_SetId_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    [RegisterAttribute("setId", "(I)V", "GetSetId_IHandler")]
public virtual void set_Id(int value);
    private static Delegate GetCollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler();
    private static bool n_CollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, IntPtr native_item);
    [RegisterAttribute("collapseItemActionView", "(Landroid/support/v7/view/menu/MenuBuilder;Landroid/support/v7/view/menu/MenuItemImpl;)Z", "GetCollapseItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler")]
public virtual bool CollapseItemActionView(MenuBuilder menu, MenuItemImpl item);
    private static Delegate GetExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler();
    private static bool n_ExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, IntPtr native_item);
    [RegisterAttribute("expandItemActionView", "(Landroid/support/v7/view/menu/MenuBuilder;Landroid/support/v7/view/menu/MenuItemImpl;)Z", "GetExpandItemActionView_Landroid_support_v7_view_menu_MenuBuilder_Landroid_support_v7_view_menu_MenuItemImpl_Handler")]
public virtual bool ExpandItemActionView(MenuBuilder menu, MenuItemImpl item);
    private static Delegate GetFlagActionItemsHandler();
    private static bool n_FlagActionItems(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flagActionItems", "()Z", "GetFlagActionItemsHandler")]
public virtual bool FlagActionItems();
    private static Delegate GetGetMenuView_Landroid_view_ViewGroup_Handler();
    private static IntPtr n_GetMenuView_Landroid_view_ViewGroup_(IntPtr jnienv, IntPtr native__this, IntPtr native_root);
    [RegisterAttribute("getMenuView", "(Landroid/view/ViewGroup;)Landroid/support/v7/view/menu/MenuView;", "GetGetMenuView_Landroid_view_ViewGroup_Handler")]
public virtual IMenuView GetMenuView(ViewGroup root);
    private static Delegate GetInitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_InitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_menu);
    [RegisterAttribute("initForMenu", "(Landroid/content/Context;Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitForMenu_Landroid_content_Context_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void InitForMenu(Context context, MenuBuilder menu);
    private static Delegate GetOnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_ZHandler();
    private static void n_OnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, bool allMenusAreClosing);
    [RegisterAttribute("onCloseMenu", "(Landroid/support/v7/view/menu/MenuBuilder;Z)V", "GetOnCloseMenu_Landroid_support_v7_view_menu_MenuBuilder_ZHandler")]
public virtual void OnCloseMenu(MenuBuilder menu, bool allMenusAreClosing);
    private static Delegate GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler();
    private static void n_OnRestoreInstanceState_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("onRestoreInstanceState", "(Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_os_Parcelable_Handler")]
public virtual void OnRestoreInstanceState(IParcelable state);
    private static Delegate GetOnSaveInstanceStateHandler();
    private static IntPtr n_OnSaveInstanceState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
public virtual IParcelable OnSaveInstanceState();
    private static Delegate GetOnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_Handler();
    private static bool n_OnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_subMenu);
    [RegisterAttribute("onSubMenuSelected", "(Landroid/support/v7/view/menu/SubMenuBuilder;)Z", "GetOnSubMenuSelected_Landroid_support_v7_view_menu_SubMenuBuilder_Handler")]
public virtual bool OnSubMenuSelected(SubMenuBuilder subMenu);
    private static Delegate GetSetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_Handler();
    private static void n_SetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_(IntPtr jnienv, IntPtr native__this, IntPtr native_menuView);
    [RegisterAttribute("setBottomNavigationMenuView", "(Landroid/support/design/internal/BottomNavigationMenuView;)V", "GetSetBottomNavigationMenuView_Landroid_support_design_internal_BottomNavigationMenuView_Handler")]
public virtual void SetBottomNavigationMenuView(BottomNavigationMenuView menuView);
    private static Delegate GetSetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_Handler();
    private static void n_SetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("setCallback", "(Landroid/support/v7/view/menu/MenuPresenter$Callback;)V", "GetSetCallback_Landroid_support_v7_view_menu_MenuPresenter_Callback_Handler")]
public virtual void SetCallback(IMenuPresenterCallback cb);
    private static Delegate GetSetUpdateSuspended_ZHandler();
    private static void n_SetUpdateSuspended_Z(IntPtr jnienv, IntPtr native__this, bool updateSuspended);
    [RegisterAttribute("setUpdateSuspended", "(Z)V", "GetSetUpdateSuspended_ZHandler")]
public virtual void SetUpdateSuspended(bool updateSuspended);
    private static Delegate GetUpdateMenuView_ZHandler();
    private static void n_UpdateMenuView_Z(IntPtr jnienv, IntPtr native__this, bool cleared);
    [RegisterAttribute("updateMenuView", "(Z)V", "GetUpdateMenuView_ZHandler")]
public virtual void UpdateMenuView(bool cleared);
}
[AnnotationAttribute("android.support.design.internal.Experimental")]
public class Android.Support.Design.Internal.ExperimentalAttribute : Attribute {
    [CompilerGeneratedAttribute]
private string <Value>k__BackingField;
    [RegisterAttribute("value")]
public string Value { get; public set; }
    [CompilerGeneratedAttribute]
public string get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(string value);
}
[RegisterAttribute("android/support/design/internal/FlowLayout")]
public class Android.Support.Design.Internal.FlowLayout : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_isSingleLine;
    private static Delegate cb_getItemSpacing;
    private static Delegate cb_setItemSpacing_I;
    private static Delegate cb_getLineSpacing;
    private static Delegate cb_setLineSpacing_I;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_setSingleLine_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected bool IsSingleLine { get; }
    protected int ItemSpacing { get; protected set; }
    protected int LineSpacing { get; protected set; }
    protected FlowLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public FlowLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FlowLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public FlowLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;II)V", "")]
public FlowLayout(Context context, IAttributeSet attrs, int defStyleAttr, int defStyleRes);
    private static FlowLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsSingleLineHandler();
    private static bool n_IsSingleLine(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSingleLine", "()Z", "GetIsSingleLineHandler")]
protected virtual bool get_IsSingleLine();
    private static Delegate GetGetItemSpacingHandler();
    private static int n_GetItemSpacing(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemSpacing_IHandler();
    private static void n_SetItemSpacing_I(IntPtr jnienv, IntPtr native__this, int itemSpacing);
    [RegisterAttribute("getItemSpacing", "()I", "GetGetItemSpacingHandler")]
protected virtual int get_ItemSpacing();
    [RegisterAttribute("setItemSpacing", "(I)V", "GetSetItemSpacing_IHandler")]
protected virtual void set_ItemSpacing(int value);
    private static Delegate GetGetLineSpacingHandler();
    private static int n_GetLineSpacing(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLineSpacing_IHandler();
    private static void n_SetLineSpacing_I(IntPtr jnienv, IntPtr native__this, int lineSpacing);
    [RegisterAttribute("getLineSpacing", "()I", "GetGetLineSpacingHandler")]
protected virtual int get_LineSpacing();
    [RegisterAttribute("setLineSpacing", "(I)V", "GetSetLineSpacing_IHandler")]
protected virtual void set_LineSpacing(int value);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool sizeChanged, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool sizeChanged, int left, int top, int right, int bottom);
    private static Delegate GetSetSingleLine_ZHandler();
    private static void n_SetSingleLine_Z(IntPtr jnienv, IntPtr native__this, bool singleLine);
    [RegisterAttribute("setSingleLine", "(Z)V", "GetSetSingleLine_ZHandler")]
public virtual void SetSingleLine(bool singleLine);
}
[RegisterAttribute("android/support/design/internal/ForegroundLinearLayout")]
public class Android.Support.Design.Internal.ForegroundLinearLayout : LinearLayoutCompat {
    internal static JniPeerMembers _members;
    [RegisterAttribute("mForegroundInPadding")]
protected bool MForegroundInPadding { get; protected set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ForegroundLinearLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ForegroundLinearLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ForegroundLinearLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public ForegroundLinearLayout(Context context, IAttributeSet attrs, int defStyle);
    private static ForegroundLinearLayout();
    protected bool get_MForegroundInPadding();
    protected void set_MForegroundInPadding(bool value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/Experimental", "", "Android.Support.Design.Internal.IExperimentalInvoker")]
public interface Android.Support.Design.Internal.IExperimental {
    [RegisterAttribute("value", "()Ljava/lang/String;", "GetValueHandler:Android.Support.Design.Internal.IExperimentalInvoker, Xamarin.Android.Support.Design")]
public abstract virtual string Value();
}
[RegisterAttribute("android/support/design/internal/Experimental")]
internal class Android.Support.Design.Internal.IExperimentalInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_value;
    private IntPtr id_value;
    private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IExperimentalInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExperimentalInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IExperimental GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetValueHandler();
    private static IntPtr n_Value(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string Value();
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ToString();
}
[RegisterAttribute("android/support/design/internal/NavigationMenu")]
public class Android.Support.Design.Internal.NavigationMenu : MenuBuilder {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NavigationMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenu(Context context);
    private static NavigationMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/NavigationMenuItemView")]
public class Android.Support.Design.Internal.NavigationMenuItemView : ForegroundLinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemData;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuItemImpl_I;
    private static Delegate cb_prefersCondensedTitle;
    private static Delegate cb_recycle;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_setHorizontalPadding_I;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIconPadding_I;
    private static Delegate cb_setNeedsEmptyIcon_Z;
    private static Delegate cb_setShortcut_ZC;
    private static Delegate cb_setTextAppearance_I;
    private static Delegate cb_setTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_showsIcon;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public MenuItemImpl ItemData { get; }
    protected NavigationMenuItemView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenuItemView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationMenuItemView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationMenuItemView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationMenuItemView();
    public sealed virtual void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemDataHandler();
    private static IntPtr n_GetItemData(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getItemData", "()Landroid/support/v7/view/menu/MenuItemImpl;", "GetGetItemDataHandler")]
public virtual MenuItemImpl get_ItemData();
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuItemImpl_I(IntPtr jnienv, IntPtr native__this, IntPtr native_itemData, int menuType);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuItemImpl;I)V", "GetInitialize_Landroid_support_v7_view_menu_MenuItemImpl_IHandler")]
public virtual void Initialize(MenuItemImpl itemData, int menuType);
    private static Delegate GetPrefersCondensedTitleHandler();
    private static bool n_PrefersCondensedTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prefersCondensedTitle", "()Z", "GetPrefersCondensedTitleHandler")]
public virtual bool PrefersCondensedTitle();
    private static Delegate GetRecycleHandler();
    private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void SetChecked(bool checked);
    private static Delegate GetSetHorizontalPadding_IHandler();
    private static void n_SetHorizontalPadding_I(IntPtr jnienv, IntPtr native__this, int padding);
    [RegisterAttribute("setHorizontalPadding", "(I)V", "GetSetHorizontalPadding_IHandler")]
public virtual void SetHorizontalPadding(int padding);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("setIcon", "(Landroid/graphics/drawable/Drawable;)V", "GetSetIcon_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetIcon(Drawable icon);
    private static Delegate GetSetIconPadding_IHandler();
    private static void n_SetIconPadding_I(IntPtr jnienv, IntPtr native__this, int padding);
    [RegisterAttribute("setIconPadding", "(I)V", "GetSetIconPadding_IHandler")]
public virtual void SetIconPadding(int padding);
    private static Delegate GetSetNeedsEmptyIcon_ZHandler();
    private static void n_SetNeedsEmptyIcon_Z(IntPtr jnienv, IntPtr native__this, bool needsEmptyIcon);
    [RegisterAttribute("setNeedsEmptyIcon", "(Z)V", "GetSetNeedsEmptyIcon_ZHandler")]
public virtual void SetNeedsEmptyIcon(bool needsEmptyIcon);
    private static Delegate GetSetShortcut_ZCHandler();
    private static void n_SetShortcut_ZC(IntPtr jnienv, IntPtr native__this, bool showShortcut, char shortcutKey);
    [RegisterAttribute("setShortcut", "(ZC)V", "GetSetShortcut_ZCHandler")]
public virtual void SetShortcut(bool showShortcut, char shortcutKey);
    private static Delegate GetSetTextAppearance_IHandler();
    private static void n_SetTextAppearance_I(IntPtr jnienv, IntPtr native__this, int textAppearance);
    [RegisterAttribute("setTextAppearance", "(I)V", "GetSetTextAppearance_IHandler")]
public virtual void SetTextAppearance(int textAppearance);
    private static Delegate GetSetTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTextColor(ColorStateList colors);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetTitle(ICharSequence title);
    public void SetTitle(string title);
    private static Delegate GetShowsIconHandler();
    private static bool n_ShowsIcon(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showsIcon", "()Z", "GetShowsIconHandler")]
public virtual bool ShowsIcon();
}
[RegisterAttribute("android/support/design/internal/NavigationMenuView")]
public class Android.Support.Design.Internal.NavigationMenuView : RecyclerView {
    internal static JniPeerMembers _members;
    private static Delegate cb_getWindowAnimations;
    private static Delegate cb_initialize_Landroid_support_v7_view_menu_MenuBuilder_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int WindowAnimations { get; }
    protected NavigationMenuView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationMenuView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationMenuView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationMenuView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationMenuView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetWindowAnimationsHandler();
    private static int n_GetWindowAnimations(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowAnimations", "()I", "GetGetWindowAnimationsHandler")]
public virtual int get_WindowAnimations();
    private static Delegate GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler();
    private static void n_Initialize_Landroid_support_v7_view_menu_MenuBuilder_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("initialize", "(Landroid/support/v7/view/menu/MenuBuilder;)V", "GetInitialize_Landroid_support_v7_view_menu_MenuBuilder_Handler")]
public virtual void Initialize(MenuBuilder menu);
}
[RegisterAttribute("android/support/design/internal/NavigationSubMenu")]
public class Android.Support.Design.Internal.NavigationSubMenu : SubMenuBuilder {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected NavigationSubMenu(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/design/internal/NavigationMenu;Landroid/support/v7/view/menu/MenuItemImpl;)V", "")]
public NavigationSubMenu(Context context, NavigationMenu menu, MenuItemImpl item);
    private static NavigationSubMenu();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/internal/ParcelableSparseArray")]
public class Android.Support.Design.Internal.ParcelableSparseArray : SparseArray {
    internal static JniPeerMembers _members;
    private static Delegate cb_describeContents;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ParcelableSparseArray(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)V", "")]
public ParcelableSparseArray(Parcel source, ClassLoader loader);
    private static ParcelableSparseArray();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parcel, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel parcel, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/design/internal/ScrimInsetsFrameLayout")]
public class Android.Support.Design.Internal.ScrimInsetsFrameLayout : FrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_onInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ScrimInsetsFrameLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ScrimInsetsFrameLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ScrimInsetsFrameLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public ScrimInsetsFrameLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static ScrimInsetsFrameLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_Handler();
    private static void n_OnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_insets);
    [RegisterAttribute("onInsetsChanged", "(Landroid/support/v4/view/WindowInsetsCompat;)V", "GetOnInsetsChanged_Landroid_support_v4_view_WindowInsetsCompat_Handler")]
protected virtual void OnInsetsChanged(WindowInsetsCompat insets);
}
[RegisterAttribute("android/support/design/internal/TextScale")]
public class Android.Support.Design.Internal.TextScale : Transition {
    internal static JniPeerMembers _members;
    private static Delegate cb_captureEndValues_Landroid_support_transition_TransitionValues_;
    private static Delegate cb_captureStartValues_Landroid_support_transition_TransitionValues_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TextScale(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextScale();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCaptureEndValues_Landroid_support_transition_TransitionValues_Handler();
    private static void n_CaptureEndValues_Landroid_support_transition_TransitionValues_(IntPtr jnienv, IntPtr native__this, IntPtr native_transitionValues);
    [RegisterAttribute("captureEndValues", "(Landroid/support/transition/TransitionValues;)V", "GetCaptureEndValues_Landroid_support_transition_TransitionValues_Handler")]
public virtual void CaptureEndValues(TransitionValues transitionValues);
    private static Delegate GetCaptureStartValues_Landroid_support_transition_TransitionValues_Handler();
    private static void n_CaptureStartValues_Landroid_support_transition_TransitionValues_(IntPtr jnienv, IntPtr native__this, IntPtr native_transitionValues);
    [RegisterAttribute("captureStartValues", "(Landroid/support/transition/TransitionValues;)V", "GetCaptureStartValues_Landroid_support_transition_TransitionValues_Handler")]
public virtual void CaptureStartValues(TransitionValues transitionValues);
}
[RegisterAttribute("android/support/design/internal/ThemeEnforcement")]
public class Android.Support.Design.Internal.ThemeEnforcement : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal ThemeEnforcement(IntPtr javaReference, JniHandleOwnership transfer);
    private static ThemeEnforcement();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkAppCompatTheme", "(Landroid/content/Context;)V", "")]
public static void CheckAppCompatTheme(Context context);
    [RegisterAttribute("checkMaterialTheme", "(Landroid/content/Context;)V", "")]
public static void CheckMaterialTheme(Context context);
    [RegisterAttribute("isAppCompatTheme", "(Landroid/content/Context;)Z", "")]
public static bool IsAppCompatTheme(Context context);
    [RegisterAttribute("isMaterialTheme", "(Landroid/content/Context;)Z", "")]
public static bool IsMaterialTheme(Context context);
    [RegisterAttribute("obtainStyledAttributes", "(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;", "")]
public static TypedArray ObtainStyledAttributes(Context context, IAttributeSet set, Int32[] attrs, int defStyleAttr, int defStyleRes, Int32[] textAppearanceResIndices);
    [RegisterAttribute("obtainTintedStyledAttributes", "(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/support/v7/widget/TintTypedArray;", "")]
public static TintTypedArray ObtainTintedStyledAttributes(Context context, IAttributeSet set, Int32[] attrs, int defStyleAttr, int defStyleRes, Int32[] textAppearanceResIndices);
}
[RegisterAttribute("android/support/design/internal/ViewUtils")]
public class Android.Support.Design.Internal.ViewUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ViewUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isLayoutRtl", "(Landroid/view/View;)Z", "")]
public static bool IsLayoutRtl(View view);
    [RegisterAttribute("parseTintMode", "(ILandroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode ParseTintMode(int value, Mode defaultMode);
}
[RegisterAttribute("android/support/design/resources/MaterialResources")]
public class Android.Support.Design.Resources.MaterialResources : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MaterialResources(IntPtr javaReference, JniHandleOwnership transfer);
    private static MaterialResources();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getColorStateList", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetColorStateList(Context context, TypedArray attributes, int index);
    [RegisterAttribute("getDrawable", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Context context, TypedArray attributes, int index);
    [RegisterAttribute("getTextAppearance", "(Landroid/content/Context;Landroid/content/res/TypedArray;I)Landroid/support/design/resources/TextAppearance;", "")]
public static TextAppearance GetTextAppearance(Context context, TypedArray attributes, int index);
}
[RegisterAttribute("android/support/design/resources/TextAppearance")]
public class Android.Support.Design.Resources.TextAppearance : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getFont_Landroid_content_Context_;
    private static Delegate cb_getFontAsync_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_;
    private static Delegate cb_updateDrawState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_;
    private static Delegate cb_updateMeasureState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_;
    private static Delegate cb_updateTextPaintMeasureState_Landroid_text_TextPaint_Landroid_graphics_Typeface_;
    [RegisterAttribute("fontFamily")]
public string FontFamily { get; public set; }
    [RegisterAttribute("shadowColor")]
public ColorStateList ShadowColor { get; public set; }
    [RegisterAttribute("shadowDx")]
public float ShadowDx { get; public set; }
    [RegisterAttribute("shadowDy")]
public float ShadowDy { get; public set; }
    [RegisterAttribute("shadowRadius")]
public float ShadowRadius { get; public set; }
    [RegisterAttribute("textAllCaps")]
public bool TextAllCaps { get; public set; }
    [RegisterAttribute("textColor")]
public ColorStateList TextColor { get; public set; }
    [RegisterAttribute("textColorHint")]
public ColorStateList TextColorHint { get; public set; }
    [RegisterAttribute("textColorLink")]
public ColorStateList TextColorLink { get; public set; }
    [RegisterAttribute("textSize")]
public float TextSize { get; public set; }
    [RegisterAttribute("textStyle")]
public int TextStyle { get; public set; }
    [RegisterAttribute("typeface")]
public int Typeface { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TextAppearance(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public TextAppearance(Context context, int id);
    private static TextAppearance();
    public string get_FontFamily();
    public void set_FontFamily(string value);
    public ColorStateList get_ShadowColor();
    public void set_ShadowColor(ColorStateList value);
    public float get_ShadowDx();
    public void set_ShadowDx(float value);
    public float get_ShadowDy();
    public void set_ShadowDy(float value);
    public float get_ShadowRadius();
    public void set_ShadowRadius(float value);
    public bool get_TextAllCaps();
    public void set_TextAllCaps(bool value);
    public ColorStateList get_TextColor();
    public void set_TextColor(ColorStateList value);
    public ColorStateList get_TextColorHint();
    public void set_TextColorHint(ColorStateList value);
    public ColorStateList get_TextColorLink();
    public void set_TextColorLink(ColorStateList value);
    public float get_TextSize();
    public void set_TextSize(float value);
    public int get_TextStyle();
    public void set_TextStyle(int value);
    public int get_Typeface();
    public void set_Typeface(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetFont_Landroid_content_Context_Handler();
    private static IntPtr n_GetFont_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("getFont", "(Landroid/content/Context;)Landroid/graphics/Typeface;", "GetGetFont_Landroid_content_Context_Handler")]
public virtual Typeface GetFont(Context context);
    private static Delegate GetGetFontAsync_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler();
    private static void n_GetFontAsync_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_textPaint, IntPtr native__callback);
    [RegisterAttribute("getFontAsync", "(Landroid/content/Context;Landroid/text/TextPaint;Landroid/support/v4/content/res/ResourcesCompat$FontCallback;)V", "GetGetFontAsync_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler")]
public virtual void GetFontAsync(Context context, TextPaint textPaint, FontCallback callback);
    private static Delegate GetUpdateDrawState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler();
    private static void n_UpdateDrawState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_textPaint, IntPtr native__callback);
    [RegisterAttribute("updateDrawState", "(Landroid/content/Context;Landroid/text/TextPaint;Landroid/support/v4/content/res/ResourcesCompat$FontCallback;)V", "GetUpdateDrawState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler")]
public virtual void UpdateDrawState(Context context, TextPaint textPaint, FontCallback callback);
    private static Delegate GetUpdateMeasureState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler();
    private static void n_UpdateMeasureState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_textPaint, IntPtr native__callback);
    [RegisterAttribute("updateMeasureState", "(Landroid/content/Context;Landroid/text/TextPaint;Landroid/support/v4/content/res/ResourcesCompat$FontCallback;)V", "GetUpdateMeasureState_Landroid_content_Context_Landroid_text_TextPaint_Landroid_support_v4_content_res_ResourcesCompat_FontCallback_Handler")]
public virtual void UpdateMeasureState(Context context, TextPaint textPaint, FontCallback callback);
    private static Delegate GetUpdateTextPaintMeasureState_Landroid_text_TextPaint_Landroid_graphics_Typeface_Handler();
    private static void n_UpdateTextPaintMeasureState_Landroid_text_TextPaint_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_textPaint, IntPtr native_typeface);
    [RegisterAttribute("updateTextPaintMeasureState", "(Landroid/text/TextPaint;Landroid/graphics/Typeface;)V", "GetUpdateTextPaintMeasureState_Landroid_text_TextPaint_Landroid_graphics_Typeface_Handler")]
public virtual void UpdateTextPaintMeasureState(TextPaint textPaint, Typeface typeface);
}
[RegisterAttribute("android/support/design/resources/TextAppearanceConfig")]
public class Android.Support.Design.Resources.TextAppearanceConfig : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TextAppearanceConfig(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextAppearanceConfig();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("setShouldLoadFontSynchronously", "(Z)V", "")]
public static void SetShouldLoadFontSynchronously(bool flag);
    [RegisterAttribute("shouldLoadFontSynchronously", "()Z", "")]
public static bool ShouldLoadFontSynchronously();
}
[RegisterAttribute("android/support/design/ripple/RippleUtils")]
public class Android.Support.Design.Ripple.RippleUtils : Object {
    internal static JniPeerMembers _members;
    [RegisterAttribute("USE_FRAMEWORK_RIPPLE")]
public static bool UseFrameworkRipple { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected RippleUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static RippleUtils();
    public static bool get_UseFrameworkRipple();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("convertToRippleDrawableColor", "(Landroid/content/res/ColorStateList;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList ConvertToRippleDrawableColor(ColorStateList rippleColor);
}
[RegisterAttribute("android/support/design/shape/CornerTreatment")]
public class Android.Support.Design.Shape.CornerTreatment : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCornerPath_FFLandroid_support_design_shape_ShapePath_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CornerTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    private static CornerTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCornerPath_FFLandroid_support_design_shape_ShapePath_Handler();
    private static void n_GetCornerPath_FFLandroid_support_design_shape_ShapePath_(IntPtr jnienv, IntPtr native__this, float angle, float interpolation, IntPtr native_shapePath);
    [RegisterAttribute("getCornerPath", "(FFLandroid/support/design/shape/ShapePath;)V", "GetGetCornerPath_FFLandroid_support_design_shape_ShapePath_Handler")]
public virtual void GetCornerPath(float angle, float interpolation, ShapePath shapePath);
}
[RegisterAttribute("android/support/design/shape/CutCornerTreatment")]
public class Android.Support.Design.Shape.CutCornerTreatment : CornerTreatment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CutCornerTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(F)V", "")]
public CutCornerTreatment(float size);
    private static CutCornerTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/shape/EdgeTreatment")]
public class Android.Support.Design.Shape.EdgeTreatment : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getEdgePath_FFLandroid_support_design_shape_ShapePath_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected EdgeTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    private static EdgeTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetEdgePath_FFLandroid_support_design_shape_ShapePath_Handler();
    private static void n_GetEdgePath_FFLandroid_support_design_shape_ShapePath_(IntPtr jnienv, IntPtr native__this, float length, float interpolation, IntPtr native_shapePath);
    [RegisterAttribute("getEdgePath", "(FFLandroid/support/design/shape/ShapePath;)V", "GetGetEdgePath_FFLandroid_support_design_shape_ShapePath_Handler")]
public virtual void GetEdgePath(float length, float interpolation, ShapePath shapePath);
}
[RegisterAttribute("android/support/design/shape/InterpolateOnScrollPositionChangeHelper")]
public class Android.Support.Design.Shape.InterpolateOnScrollPositionChangeHelper : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_setContainingScrollView_Landroid_widget_ScrollView_;
    private static Delegate cb_setMaterialShapeDrawable_Landroid_support_design_shape_MaterialShapeDrawable_;
    private static Delegate cb_startListeningForScrollChanges_Landroid_view_ViewTreeObserver_;
    private static Delegate cb_stopListeningForScrollChanges_Landroid_view_ViewTreeObserver_;
    private static Delegate cb_updateInterpolationForScreenPosition;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected InterpolateOnScrollPositionChangeHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;Landroid/support/design/shape/MaterialShapeDrawable;Landroid/widget/ScrollView;)V", "")]
public InterpolateOnScrollPositionChangeHelper(View shapedView, MaterialShapeDrawable materialShapeDrawable, ScrollView containingScrollView);
    private static InterpolateOnScrollPositionChangeHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSetContainingScrollView_Landroid_widget_ScrollView_Handler();
    private static void n_SetContainingScrollView_Landroid_widget_ScrollView_(IntPtr jnienv, IntPtr native__this, IntPtr native_containingScrollView);
    [RegisterAttribute("setContainingScrollView", "(Landroid/widget/ScrollView;)V", "GetSetContainingScrollView_Landroid_widget_ScrollView_Handler")]
public virtual void SetContainingScrollView(ScrollView containingScrollView);
    private static Delegate GetSetMaterialShapeDrawable_Landroid_support_design_shape_MaterialShapeDrawable_Handler();
    private static void n_SetMaterialShapeDrawable_Landroid_support_design_shape_MaterialShapeDrawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_materialShapeDrawable);
    [RegisterAttribute("setMaterialShapeDrawable", "(Landroid/support/design/shape/MaterialShapeDrawable;)V", "GetSetMaterialShapeDrawable_Landroid_support_design_shape_MaterialShapeDrawable_Handler")]
public virtual void SetMaterialShapeDrawable(MaterialShapeDrawable materialShapeDrawable);
    private static Delegate GetStartListeningForScrollChanges_Landroid_view_ViewTreeObserver_Handler();
    private static void n_StartListeningForScrollChanges_Landroid_view_ViewTreeObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewTreeObserver);
    [RegisterAttribute("startListeningForScrollChanges", "(Landroid/view/ViewTreeObserver;)V", "GetStartListeningForScrollChanges_Landroid_view_ViewTreeObserver_Handler")]
public virtual void StartListeningForScrollChanges(ViewTreeObserver viewTreeObserver);
    private static Delegate GetStopListeningForScrollChanges_Landroid_view_ViewTreeObserver_Handler();
    private static void n_StopListeningForScrollChanges_Landroid_view_ViewTreeObserver_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewTreeObserver);
    [RegisterAttribute("stopListeningForScrollChanges", "(Landroid/view/ViewTreeObserver;)V", "GetStopListeningForScrollChanges_Landroid_view_ViewTreeObserver_Handler")]
public virtual void StopListeningForScrollChanges(ViewTreeObserver viewTreeObserver);
    private static Delegate GetUpdateInterpolationForScreenPositionHandler();
    private static void n_UpdateInterpolationForScreenPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("updateInterpolationForScreenPosition", "()V", "GetUpdateInterpolationForScreenPositionHandler")]
public virtual void UpdateInterpolationForScreenPosition();
}
[RegisterAttribute("android/support/design/shape/MaterialShapeDrawable")]
public class Android.Support.Design.Shape.MaterialShapeDrawable : Drawable {
    internal static JniPeerMembers _members;
    private static Delegate cb_getInterpolation;
    private static Delegate cb_setInterpolation_F;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getPaintStyle;
    private static Delegate cb_setPaintStyle_Landroid_graphics_Paint_Style_;
    private static Delegate cb_getScale;
    private static Delegate cb_setScale_F;
    private static Delegate cb_getShadowElevation;
    private static Delegate cb_setShadowElevation_I;
    private static Delegate cb_isShadowEnabled;
    private static Delegate cb_setShadowEnabled_Z;
    private static Delegate cb_getShadowRadius;
    private static Delegate cb_setShadowRadius_I;
    private static Delegate cb_getShapedViewModel;
    private static Delegate cb_setShapedViewModel_Landroid_support_design_shape_ShapePathModel_;
    private static Delegate cb_getStrokeWidth;
    private static Delegate cb_setStrokeWidth_F;
    private static Delegate cb_getTintList;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_getPathForSize_IILandroid_graphics_Path_;
    private static Delegate cb_isPointInTransparentRegion_II;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setShadowColor_I;
    private static Delegate cb_setUseTintColorForShadow_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float Interpolation { get; public set; }
    public int Opacity { get; }
    public Style PaintStyle { get; public set; }
    public float Scale { get; public set; }
    public int ShadowElevation { get; public set; }
    public bool ShadowEnabled { get; public set; }
    public int ShadowRadius { get; public set; }
    public ShapePathModel ShapedViewModel { get; public set; }
    public float StrokeWidth { get; public set; }
    public ColorStateList TintList { get; }
    protected MaterialShapeDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/support/design/shape/ShapePathModel;)V", "")]
public MaterialShapeDrawable(ShapePathModel shapePathModel);
    private static MaterialShapeDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInterpolationHandler();
    private static float n_GetInterpolation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInterpolation_FHandler();
    private static void n_SetInterpolation_F(IntPtr jnienv, IntPtr native__this, float interpolation);
    [RegisterAttribute("getInterpolation", "()F", "GetGetInterpolationHandler")]
public virtual float get_Interpolation();
    [RegisterAttribute("setInterpolation", "(F)V", "GetSetInterpolation_FHandler")]
public virtual void set_Interpolation(float value);
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetGetPaintStyleHandler();
    private static IntPtr n_GetPaintStyle(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPaintStyle_Landroid_graphics_Paint_Style_Handler();
    private static void n_SetPaintStyle_Landroid_graphics_Paint_Style_(IntPtr jnienv, IntPtr native__this, IntPtr native_paintStyle);
    [RegisterAttribute("getPaintStyle", "()Landroid/graphics/Paint$Style;", "GetGetPaintStyleHandler")]
public virtual Style get_PaintStyle();
    [RegisterAttribute("setPaintStyle", "(Landroid/graphics/Paint$Style;)V", "GetSetPaintStyle_Landroid_graphics_Paint_Style_Handler")]
public virtual void set_PaintStyle(Style value);
    private static Delegate GetGetScaleHandler();
    private static float n_GetScale(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScale_FHandler();
    private static void n_SetScale_F(IntPtr jnienv, IntPtr native__this, float scale);
    [RegisterAttribute("getScale", "()F", "GetGetScaleHandler")]
public virtual float get_Scale();
    [RegisterAttribute("setScale", "(F)V", "GetSetScale_FHandler")]
public virtual void set_Scale(float value);
    private static Delegate GetGetShadowElevationHandler();
    private static int n_GetShadowElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShadowElevation_IHandler();
    private static void n_SetShadowElevation_I(IntPtr jnienv, IntPtr native__this, int shadowElevation);
    [RegisterAttribute("getShadowElevation", "()I", "GetGetShadowElevationHandler")]
public virtual int get_ShadowElevation();
    [RegisterAttribute("setShadowElevation", "(I)V", "GetSetShadowElevation_IHandler")]
public virtual void set_ShadowElevation(int value);
    private static Delegate GetIsShadowEnabledHandler();
    private static bool n_IsShadowEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShadowEnabled_ZHandler();
    private static void n_SetShadowEnabled_Z(IntPtr jnienv, IntPtr native__this, bool shadowEnabled);
    [RegisterAttribute("isShadowEnabled", "()Z", "GetIsShadowEnabledHandler")]
public virtual bool get_ShadowEnabled();
    [RegisterAttribute("setShadowEnabled", "(Z)V", "GetSetShadowEnabled_ZHandler")]
public virtual void set_ShadowEnabled(bool value);
    private static Delegate GetGetShadowRadiusHandler();
    private static int n_GetShadowRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShadowRadius_IHandler();
    private static void n_SetShadowRadius_I(IntPtr jnienv, IntPtr native__this, int shadowRadius);
    [RegisterAttribute("getShadowRadius", "()I", "GetGetShadowRadiusHandler")]
public virtual int get_ShadowRadius();
    [RegisterAttribute("setShadowRadius", "(I)V", "GetSetShadowRadius_IHandler")]
public virtual void set_ShadowRadius(int value);
    private static Delegate GetGetShapedViewModelHandler();
    private static IntPtr n_GetShapedViewModel(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShapedViewModel_Landroid_support_design_shape_ShapePathModel_Handler();
    private static void n_SetShapedViewModel_Landroid_support_design_shape_ShapePathModel_(IntPtr jnienv, IntPtr native__this, IntPtr native_shapedViewModel);
    [RegisterAttribute("getShapedViewModel", "()Landroid/support/design/shape/ShapePathModel;", "GetGetShapedViewModelHandler")]
public virtual ShapePathModel get_ShapedViewModel();
    [RegisterAttribute("setShapedViewModel", "(Landroid/support/design/shape/ShapePathModel;)V", "GetSetShapedViewModel_Landroid_support_design_shape_ShapePathModel_Handler")]
public virtual void set_ShapedViewModel(ShapePathModel value);
    private static Delegate GetGetStrokeWidthHandler();
    private static float n_GetStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeWidth_FHandler();
    private static void n_SetStrokeWidth_F(IntPtr jnienv, IntPtr native__this, float strokeWidth);
    [RegisterAttribute("getStrokeWidth", "()F", "GetGetStrokeWidthHandler")]
public virtual float get_StrokeWidth();
    [RegisterAttribute("setStrokeWidth", "(F)V", "GetSetStrokeWidth_FHandler")]
public virtual void set_StrokeWidth(float value);
    private static Delegate GetGetTintListHandler();
    private static IntPtr n_GetTintList(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTintList", "()Landroid/content/res/ColorStateList;", "GetGetTintListHandler")]
public virtual ColorStateList get_TintList();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetGetPathForSize_IILandroid_graphics_Path_Handler();
    private static void n_GetPathForSize_IILandroid_graphics_Path_(IntPtr jnienv, IntPtr native__this, int width, int height, IntPtr native_path);
    [RegisterAttribute("getPathForSize", "(IILandroid/graphics/Path;)V", "GetGetPathForSize_IILandroid_graphics_Path_Handler")]
public virtual void GetPathForSize(int width, int height, Path path);
    private static Delegate GetIsPointInTransparentRegion_IIHandler();
    private static bool n_IsPointInTransparentRegion_II(IntPtr jnienv, IntPtr native__this, int x, int y);
    [RegisterAttribute("isPointInTransparentRegion", "(II)Z", "GetIsPointInTransparentRegion_IIHandler")]
public virtual bool IsPointInTransparentRegion(int x, int y);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetShadowColor_IHandler();
    private static void n_SetShadowColor_I(IntPtr jnienv, IntPtr native__this, int shadowColor);
    [RegisterAttribute("setShadowColor", "(I)V", "GetSetShadowColor_IHandler")]
public virtual void SetShadowColor(int shadowColor);
    private static Delegate GetSetUseTintColorForShadow_ZHandler();
    private static void n_SetUseTintColorForShadow_Z(IntPtr jnienv, IntPtr native__this, bool useTintColorForShadow);
    [RegisterAttribute("setUseTintColorForShadow", "(Z)V", "GetSetUseTintColorForShadow_ZHandler")]
public virtual void SetUseTintColorForShadow(bool useTintColorForShadow);
}
[RegisterAttribute("android/support/design/shape/RoundedCornerTreatment")]
public class Android.Support.Design.Shape.RoundedCornerTreatment : CornerTreatment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected RoundedCornerTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(F)V", "")]
public RoundedCornerTreatment(float radius);
    private static RoundedCornerTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/shape/ShapePath")]
public class Android.Support.Design.Shape.ShapePath : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_addArc_FFFFFF;
    private static Delegate cb_applyToPath_Landroid_graphics_Matrix_Landroid_graphics_Path_;
    private static Delegate cb_lineTo_FF;
    private static Delegate cb_quadToPoint_FFFF;
    private static Delegate cb_reset_FF;
    [RegisterAttribute("endX")]
public float EndX { get; public set; }
    [RegisterAttribute("endY")]
public float EndY { get; public set; }
    [RegisterAttribute("startX")]
public float StartX { get; public set; }
    [RegisterAttribute("startY")]
public float StartY { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ShapePath(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FF)V", "")]
public ShapePath(float startX, float startY);
    private static ShapePath();
    public float get_EndX();
    public void set_EndX(float value);
    public float get_EndY();
    public void set_EndY(float value);
    public float get_StartX();
    public void set_StartX(float value);
    public float get_StartY();
    public void set_StartY(float value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAddArc_FFFFFFHandler();
    private static void n_AddArc_FFFFFF(IntPtr jnienv, IntPtr native__this, float left, float top, float right, float bottom, float startAngle, float sweepAngle);
    [RegisterAttribute("addArc", "(FFFFFF)V", "GetAddArc_FFFFFFHandler")]
public virtual void AddArc(float left, float top, float right, float bottom, float startAngle, float sweepAngle);
    private static Delegate GetApplyToPath_Landroid_graphics_Matrix_Landroid_graphics_Path_Handler();
    private static void n_ApplyToPath_Landroid_graphics_Matrix_Landroid_graphics_Path_(IntPtr jnienv, IntPtr native__this, IntPtr native_transform, IntPtr native_path);
    [RegisterAttribute("applyToPath", "(Landroid/graphics/Matrix;Landroid/graphics/Path;)V", "GetApplyToPath_Landroid_graphics_Matrix_Landroid_graphics_Path_Handler")]
public virtual void ApplyToPath(Matrix transform, Path path);
    private static Delegate GetLineTo_FFHandler();
    private static void n_LineTo_FF(IntPtr jnienv, IntPtr native__this, float x, float y);
    [RegisterAttribute("lineTo", "(FF)V", "GetLineTo_FFHandler")]
public virtual void LineTo(float x, float y);
    private static Delegate GetQuadToPoint_FFFFHandler();
    private static void n_QuadToPoint_FFFF(IntPtr jnienv, IntPtr native__this, float controlX, float controlY, float toX, float toY);
    [RegisterAttribute("quadToPoint", "(FFFF)V", "GetQuadToPoint_FFFFHandler")]
public virtual void QuadToPoint(float controlX, float controlY, float toX, float toY);
    private static Delegate GetReset_FFHandler();
    private static void n_Reset_FF(IntPtr jnienv, IntPtr native__this, float startX, float startY);
    [RegisterAttribute("reset", "(FF)V", "GetReset_FFHandler")]
public virtual void Reset(float startX, float startY);
}
[RegisterAttribute("android/support/design/shape/ShapePathModel")]
public class Android.Support.Design.Shape.ShapePathModel : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getBottomEdge;
    private static Delegate cb_setBottomEdge_Landroid_support_design_shape_EdgeTreatment_;
    private static Delegate cb_getBottomLeftCorner;
    private static Delegate cb_setBottomLeftCorner_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_getBottomRightCorner;
    private static Delegate cb_setBottomRightCorner_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_getLeftEdge;
    private static Delegate cb_setLeftEdge_Landroid_support_design_shape_EdgeTreatment_;
    private static Delegate cb_getRightEdge;
    private static Delegate cb_setRightEdge_Landroid_support_design_shape_EdgeTreatment_;
    private static Delegate cb_getTopEdge;
    private static Delegate cb_setTopEdge_Landroid_support_design_shape_EdgeTreatment_;
    private static Delegate cb_getTopLeftCorner;
    private static Delegate cb_setTopLeftCorner_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_getTopRightCorner;
    private static Delegate cb_setTopRightCorner_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_setAllCorners_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_setAllEdges_Landroid_support_design_shape_EdgeTreatment_;
    private static Delegate cb_setCornerTreatments_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_;
    private static Delegate cb_setEdgeTreatments_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public EdgeTreatment BottomEdge { get; public set; }
    public CornerTreatment BottomLeftCorner { get; public set; }
    public CornerTreatment BottomRightCorner { get; public set; }
    public EdgeTreatment LeftEdge { get; public set; }
    public EdgeTreatment RightEdge { get; public set; }
    public EdgeTreatment TopEdge { get; public set; }
    public CornerTreatment TopLeftCorner { get; public set; }
    public CornerTreatment TopRightCorner { get; public set; }
    protected ShapePathModel(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShapePathModel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBottomEdgeHandler();
    private static IntPtr n_GetBottomEdge(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBottomEdge_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetBottomEdge_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_bottomEdge);
    [RegisterAttribute("getBottomEdge", "()Landroid/support/design/shape/EdgeTreatment;", "GetGetBottomEdgeHandler")]
public virtual EdgeTreatment get_BottomEdge();
    [RegisterAttribute("setBottomEdge", "(Landroid/support/design/shape/EdgeTreatment;)V", "GetSetBottomEdge_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void set_BottomEdge(EdgeTreatment value);
    private static Delegate GetGetBottomLeftCornerHandler();
    private static IntPtr n_GetBottomLeftCorner(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBottomLeftCorner_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetBottomLeftCorner_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_bottomLeftCorner);
    [RegisterAttribute("getBottomLeftCorner", "()Landroid/support/design/shape/CornerTreatment;", "GetGetBottomLeftCornerHandler")]
public virtual CornerTreatment get_BottomLeftCorner();
    [RegisterAttribute("setBottomLeftCorner", "(Landroid/support/design/shape/CornerTreatment;)V", "GetSetBottomLeftCorner_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void set_BottomLeftCorner(CornerTreatment value);
    private static Delegate GetGetBottomRightCornerHandler();
    private static IntPtr n_GetBottomRightCorner(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBottomRightCorner_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetBottomRightCorner_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_bottomRightCorner);
    [RegisterAttribute("getBottomRightCorner", "()Landroid/support/design/shape/CornerTreatment;", "GetGetBottomRightCornerHandler")]
public virtual CornerTreatment get_BottomRightCorner();
    [RegisterAttribute("setBottomRightCorner", "(Landroid/support/design/shape/CornerTreatment;)V", "GetSetBottomRightCorner_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void set_BottomRightCorner(CornerTreatment value);
    private static Delegate GetGetLeftEdgeHandler();
    private static IntPtr n_GetLeftEdge(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLeftEdge_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetLeftEdge_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_leftEdge);
    [RegisterAttribute("getLeftEdge", "()Landroid/support/design/shape/EdgeTreatment;", "GetGetLeftEdgeHandler")]
public virtual EdgeTreatment get_LeftEdge();
    [RegisterAttribute("setLeftEdge", "(Landroid/support/design/shape/EdgeTreatment;)V", "GetSetLeftEdge_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void set_LeftEdge(EdgeTreatment value);
    private static Delegate GetGetRightEdgeHandler();
    private static IntPtr n_GetRightEdge(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRightEdge_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetRightEdge_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_rightEdge);
    [RegisterAttribute("getRightEdge", "()Landroid/support/design/shape/EdgeTreatment;", "GetGetRightEdgeHandler")]
public virtual EdgeTreatment get_RightEdge();
    [RegisterAttribute("setRightEdge", "(Landroid/support/design/shape/EdgeTreatment;)V", "GetSetRightEdge_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void set_RightEdge(EdgeTreatment value);
    private static Delegate GetGetTopEdgeHandler();
    private static IntPtr n_GetTopEdge(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTopEdge_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetTopEdge_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_topEdge);
    [RegisterAttribute("getTopEdge", "()Landroid/support/design/shape/EdgeTreatment;", "GetGetTopEdgeHandler")]
public virtual EdgeTreatment get_TopEdge();
    [RegisterAttribute("setTopEdge", "(Landroid/support/design/shape/EdgeTreatment;)V", "GetSetTopEdge_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void set_TopEdge(EdgeTreatment value);
    private static Delegate GetGetTopLeftCornerHandler();
    private static IntPtr n_GetTopLeftCorner(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTopLeftCorner_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetTopLeftCorner_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_topLeftCorner);
    [RegisterAttribute("getTopLeftCorner", "()Landroid/support/design/shape/CornerTreatment;", "GetGetTopLeftCornerHandler")]
public virtual CornerTreatment get_TopLeftCorner();
    [RegisterAttribute("setTopLeftCorner", "(Landroid/support/design/shape/CornerTreatment;)V", "GetSetTopLeftCorner_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void set_TopLeftCorner(CornerTreatment value);
    private static Delegate GetGetTopRightCornerHandler();
    private static IntPtr n_GetTopRightCorner(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTopRightCorner_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetTopRightCorner_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_topRightCorner);
    [RegisterAttribute("getTopRightCorner", "()Landroid/support/design/shape/CornerTreatment;", "GetGetTopRightCornerHandler")]
public virtual CornerTreatment get_TopRightCorner();
    [RegisterAttribute("setTopRightCorner", "(Landroid/support/design/shape/CornerTreatment;)V", "GetSetTopRightCorner_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void set_TopRightCorner(CornerTreatment value);
    private static Delegate GetSetAllCorners_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetAllCorners_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_cornerTreatment);
    [RegisterAttribute("setAllCorners", "(Landroid/support/design/shape/CornerTreatment;)V", "GetSetAllCorners_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void SetAllCorners(CornerTreatment cornerTreatment);
    private static Delegate GetSetAllEdges_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetAllEdges_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_edgeTreatment);
    [RegisterAttribute("setAllEdges", "(Landroid/support/design/shape/EdgeTreatment;)V", "GetSetAllEdges_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void SetAllEdges(EdgeTreatment edgeTreatment);
    private static Delegate GetSetCornerTreatments_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Handler();
    private static void n_SetCornerTreatments_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_topLeftCorner, IntPtr native_topRightCorner, IntPtr native_bottomRightCorner, IntPtr native_bottomLeftCorner);
    [RegisterAttribute("setCornerTreatments", "(Landroid/support/design/shape/CornerTreatment;Landroid/support/design/shape/CornerTreatment;Landroid/support/design/shape/CornerTreatment;Landroid/support/design/shape/CornerTreatment;)V", "GetSetCornerTreatments_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Landroid_support_design_shape_CornerTreatment_Handler")]
public virtual void SetCornerTreatments(CornerTreatment topLeftCorner, CornerTreatment topRightCorner, CornerTreatment bottomRightCorner, CornerTreatment bottomLeftCorner);
    private static Delegate GetSetEdgeTreatments_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Handler();
    private static void n_SetEdgeTreatments_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_(IntPtr jnienv, IntPtr native__this, IntPtr native_leftEdge, IntPtr native_topEdge, IntPtr native_rightEdge, IntPtr native_bottomEdge);
    [RegisterAttribute("setEdgeTreatments", "(Landroid/support/design/shape/EdgeTreatment;Landroid/support/design/shape/EdgeTreatment;Landroid/support/design/shape/EdgeTreatment;Landroid/support/design/shape/EdgeTreatment;)V", "GetSetEdgeTreatments_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Landroid_support_design_shape_EdgeTreatment_Handler")]
public virtual void SetEdgeTreatments(EdgeTreatment leftEdge, EdgeTreatment topEdge, EdgeTreatment rightEdge, EdgeTreatment bottomEdge);
}
[RegisterAttribute("android/support/design/shape/TriangleEdgeTreatment")]
public class Android.Support.Design.Shape.TriangleEdgeTreatment : EdgeTreatment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TriangleEdgeTreatment(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FZ)V", "")]
public TriangleEdgeTreatment(float size, bool inside);
    private static TriangleEdgeTreatment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/snackbar/ContentViewCallback", "", "Android.Support.Design.Snackbar.IContentViewCallbackInvoker")]
public interface Android.Support.Design.Snackbar.IContentViewCallback {
    [RegisterAttribute("animateContentIn", "(II)V", "GetAnimateContentIn_IIHandler:Android.Support.Design.Snackbar.IContentViewCallbackInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void AnimateContentIn(int p0, int p1);
    [RegisterAttribute("animateContentOut", "(II)V", "GetAnimateContentOut_IIHandler:Android.Support.Design.Snackbar.IContentViewCallbackInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void AnimateContentOut(int p0, int p1);
}
[RegisterAttribute("android/support/design/snackbar/ContentViewCallback")]
internal class Android.Support.Design.Snackbar.IContentViewCallbackInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_animateContentIn_II;
    private IntPtr id_animateContentIn_II;
    private static Delegate cb_animateContentOut_II;
    private IntPtr id_animateContentOut_II;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IContentViewCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IContentViewCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IContentViewCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnimateContentIn_IIHandler();
    private static void n_AnimateContentIn_II(IntPtr jnienv, IntPtr native__this, int p0, int p1);
    public sealed virtual void AnimateContentIn(int p0, int p1);
    private static Delegate GetAnimateContentOut_IIHandler();
    private static void n_AnimateContentOut_II(IntPtr jnienv, IntPtr native__this, int p0, int p1);
    public sealed virtual void AnimateContentOut(int p0, int p1);
}
[RegisterAttribute("android/support/design/stateful/ExtendableSavedState")]
public class Android.Support.Design.Stateful.ExtendableSavedState : AbsSavedState {
    internal static JniPeerMembers _members;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    [RegisterAttribute("extendableStates")]
public SimpleArrayMap ExtendableStates { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ExtendableSavedState(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcelable;)V", "")]
public ExtendableSavedState(IParcelable superState);
    private static ExtendableSavedState();
    public static IParcelableCreator get_Creator();
    public SimpleArrayMap get_ExtendableStates();
    public void set_ExtendableStates(SimpleArrayMap value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/theme/MaterialComponentsViewInflater")]
public class Android.Support.Design.Theme.MaterialComponentsViewInflater : AppCompatViewInflater {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MaterialComponentsViewInflater(IntPtr javaReference, JniHandleOwnership transfer);
    private static MaterialComponentsViewInflater();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/transformation/ExpandableBehavior")]
public abstract class Android.Support.Design.Transformation.ExpandableBehavior : Behavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_findExpandableWidget_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_;
    private static Delegate cb_layoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static Delegate cb_onExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZ;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ExpandableBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ExpandableBehavior(Context context, IAttributeSet attrs);
    private static ExpandableBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetFindExpandableWidget_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Handler();
    private static IntPtr n_FindExpandableWidget_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child);
    [RegisterAttribute("findExpandableWidget", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;)Landroid/support/design/expandable/ExpandableWidget;", "GetFindExpandableWidget_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Handler")]
protected virtual IExpandableWidget FindExpandableWidget(CoordinatorLayout parent, View child);
    [RegisterAttribute("from", "(Landroid/view/View;Ljava/lang/Class;)Landroid/support/design/transformation/ExpandableBehavior;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object From(View view, Class klass);
    private static Delegate GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_LayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public abstract virtual bool LayoutDependsOn(CoordinatorLayout p0, View p1, View p2);
    private static Delegate GetOnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZHandler();
    private static bool n_OnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZ(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, bool p2, bool p3);
    [RegisterAttribute("onExpandedStateChange", "(Landroid/view/View;Landroid/view/View;ZZ)Z", "GetOnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected abstract virtual bool OnExpandedStateChange(View p0, View p1, bool p2, bool p3);
}
[RegisterAttribute("android/support/design/transformation/ExpandableBehavior")]
internal class Android.Support.Design.Transformation.ExpandableBehaviorInvoker : ExpandableBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public ExpandableBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ExpandableBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public virtual bool LayoutDependsOn(CoordinatorLayout p0, View p1, View p2);
    [RegisterAttribute("onExpandedStateChange", "(Landroid/view/View;Landroid/view/View;ZZ)Z", "GetOnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected virtual bool OnExpandedStateChange(View p0, View p1, bool p2, bool p3);
}
[RegisterAttribute("android/support/design/transformation/ExpandableTransformationBehavior")]
public abstract class Android.Support.Design.Transformation.ExpandableTransformationBehavior : ExpandableBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_onCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ;
    private static Delegate cb_onExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZ;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ExpandableTransformationBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ExpandableTransformationBehavior(Context context, IAttributeSet attrs);
    private static ExpandableTransformationBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler();
    private static IntPtr n_OnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, bool p2, bool p3);
    [RegisterAttribute("onCreateExpandedStateChangeAnimation", "(Landroid/view/View;Landroid/view/View;ZZ)Landroid/animation/AnimatorSet;", "GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected abstract virtual AnimatorSet OnCreateExpandedStateChangeAnimation(View p0, View p1, bool p2, bool p3);
    private static Delegate GetOnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZHandler();
    private static bool n_OnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZ(IntPtr jnienv, IntPtr native__this, IntPtr native_dependency, IntPtr native_child, bool expanded, bool animated);
    [RegisterAttribute("onExpandedStateChange", "(Landroid/view/View;Landroid/view/View;ZZ)Z", "GetOnExpandedStateChange_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected virtual bool OnExpandedStateChange(View dependency, View child, bool expanded, bool animated);
}
[RegisterAttribute("android/support/design/transformation/ExpandableTransformationBehavior")]
internal class Android.Support.Design.Transformation.ExpandableTransformationBehaviorInvoker : ExpandableTransformationBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public ExpandableTransformationBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ExpandableTransformationBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCreateExpandedStateChangeAnimation", "(Landroid/view/View;Landroid/view/View;ZZ)Landroid/animation/AnimatorSet;", "GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected virtual AnimatorSet OnCreateExpandedStateChangeAnimation(View p0, View p1, bool p2, bool p3);
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public virtual bool LayoutDependsOn(CoordinatorLayout p0, View p1, View p2);
}
[RegisterAttribute("android/support/design/transformation/FabTransformationBehavior")]
public abstract class Android.Support.Design.Transformation.FabTransformationBehavior : ExpandableTransformationBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_layoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static Delegate cb_onCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ;
    private static Delegate cb_onCreateMotionSpec_Landroid_content_Context_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FabTransformationBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FabTransformationBehavior(Context context, IAttributeSet attrs);
    private static FabTransformationBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_LayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_dependency);
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public virtual bool LayoutDependsOn(CoordinatorLayout parent, View child, View dependency);
    private static Delegate GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler();
    private static IntPtr n_OnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ(IntPtr jnienv, IntPtr native__this, IntPtr native_dependency, IntPtr native_child, bool expanded, bool isAnimating);
    [RegisterAttribute("onCreateExpandedStateChangeAnimation", "(Landroid/view/View;Landroid/view/View;ZZ)Landroid/animation/AnimatorSet;", "GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected virtual AnimatorSet OnCreateExpandedStateChangeAnimation(View dependency, View child, bool expanded, bool isAnimating);
    private static Delegate GetOnCreateMotionSpec_Landroid_content_Context_ZHandler();
    private static IntPtr n_OnCreateMotionSpec_Landroid_content_Context_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, bool p1);
    [RegisterAttribute("onCreateMotionSpec", "(Landroid/content/Context;Z)Landroid/support/design/transformation/FabTransformationBehavior$FabTransformationSpec;", "GetOnCreateMotionSpec_Landroid_content_Context_ZHandler")]
protected abstract virtual FabTransformationSpec OnCreateMotionSpec(Context p0, bool p1);
}
[RegisterAttribute("android/support/design/transformation/FabTransformationBehavior")]
internal class Android.Support.Design.Transformation.FabTransformationBehaviorInvoker : FabTransformationBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public FabTransformationBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static FabTransformationBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCreateMotionSpec", "(Landroid/content/Context;Z)Landroid/support/design/transformation/FabTransformationBehavior$FabTransformationSpec;", "GetOnCreateMotionSpec_Landroid_content_Context_ZHandler")]
protected virtual FabTransformationSpec OnCreateMotionSpec(Context p0, bool p1);
}
[RegisterAttribute("android/support/design/transformation/FabTransformationScrimBehavior")]
public class Android.Support.Design.Transformation.FabTransformationScrimBehavior : ExpandableTransformationBehavior {
    [RegisterAttribute("COLLAPSE_DELAY")]
public static long CollapseDelay;
    [RegisterAttribute("COLLAPSE_DURATION")]
public static long CollapseDuration;
    [RegisterAttribute("EXPAND_DELAY")]
public static long ExpandDelay;
    [RegisterAttribute("EXPAND_DURATION")]
public static long ExpandDuration;
    internal static JniPeerMembers _members;
    private static Delegate cb_layoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_;
    private static Delegate cb_onCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FabTransformationScrimBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FabTransformationScrimBehavior(Context context, IAttributeSet attrs);
    private static FabTransformationScrimBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler();
    private static bool n_LayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_dependency);
    [RegisterAttribute("layoutDependsOn", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z", "GetLayoutDependsOn_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Handler")]
public virtual bool LayoutDependsOn(CoordinatorLayout parent, View child, View dependency);
    private static Delegate GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler();
    private static IntPtr n_OnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZ(IntPtr jnienv, IntPtr native__this, IntPtr native_dependency, IntPtr native_child, bool expanded, bool isAnimating);
    [RegisterAttribute("onCreateExpandedStateChangeAnimation", "(Landroid/view/View;Landroid/view/View;ZZ)Landroid/animation/AnimatorSet;", "GetOnCreateExpandedStateChangeAnimation_Landroid_view_View_Landroid_view_View_ZZHandler")]
protected virtual AnimatorSet OnCreateExpandedStateChangeAnimation(View dependency, View child, bool expanded, bool isAnimating);
}
[RegisterAttribute("android/support/design/transformation/FabTransformationSheetBehavior")]
public class Android.Support.Design.Transformation.FabTransformationSheetBehavior : FabTransformationBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_onCreateMotionSpec_Landroid_content_Context_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected FabTransformationSheetBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FabTransformationSheetBehavior(Context context, IAttributeSet attrs);
    private static FabTransformationSheetBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCreateMotionSpec_Landroid_content_Context_ZHandler();
    private static IntPtr n_OnCreateMotionSpec_Landroid_content_Context_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_context, bool expanded);
    [RegisterAttribute("onCreateMotionSpec", "(Landroid/content/Context;Z)Landroid/support/design/transformation/FabTransformationBehavior$FabTransformationSpec;", "GetOnCreateMotionSpec_Landroid_content_Context_ZHandler")]
protected virtual FabTransformationSpec OnCreateMotionSpec(Context context, bool expanded);
}
[RegisterAttribute("android/support/design/transformation/TransformationChildCard")]
public class Android.Support.Design.Transformation.TransformationChildCard : CircularRevealCardView {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TransformationChildCard(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TransformationChildCard(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TransformationChildCard(Context context, IAttributeSet attrs);
    private static TransformationChildCard();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/transformation/TransformationChildLayout")]
public class Android.Support.Design.Transformation.TransformationChildLayout : CircularRevealFrameLayout {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TransformationChildLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TransformationChildLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TransformationChildLayout(Context context, IAttributeSet attrs);
    private static TransformationChildLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/AppBarLayout")]
public class Android.Support.Design.Widget.AppBarLayout : LinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_isLiftOnScroll;
    private static Delegate cb_setLiftOnScroll_Z;
    private static Delegate cb_getTargetElevation;
    private static Delegate cb_setTargetElevation_F;
    private static Delegate cb_addOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_;
    private static Delegate cb_removeOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_;
    private static Delegate cb_setExpanded_Z;
    private static Delegate cb_setExpanded_ZZ;
    private static Delegate cb_setLiftable_Z;
    private static Delegate cb_setLifted_Z;
    private WeakReference weak_implementor_AddOnOffsetChangedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool LiftOnScroll { get; public set; }
    public int MinimumHeightForVisibleOverlappingContent { get; }
    [ObsoleteAttribute("deprecated")]
public float TargetElevation { get; public set; }
    public int TotalScrollRange { get; }
    protected AppBarLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public AppBarLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public AppBarLayout(Context context, IAttributeSet attrs);
    private static AppBarLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsLiftOnScrollHandler();
    private static bool n_IsLiftOnScroll(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLiftOnScroll_ZHandler();
    private static void n_SetLiftOnScroll_Z(IntPtr jnienv, IntPtr native__this, bool liftOnScroll);
    [RegisterAttribute("isLiftOnScroll", "()Z", "GetIsLiftOnScrollHandler")]
public virtual bool get_LiftOnScroll();
    [RegisterAttribute("setLiftOnScroll", "(Z)V", "GetSetLiftOnScroll_ZHandler")]
public virtual void set_LiftOnScroll(bool value);
    [RegisterAttribute("getMinimumHeightForVisibleOverlappingContent", "()I", "GetGetMinimumHeightForVisibleOverlappingContentHandler")]
public int get_MinimumHeightForVisibleOverlappingContent();
    private static Delegate GetGetTargetElevationHandler();
    private static float n_GetTargetElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTargetElevation_FHandler();
    private static void n_SetTargetElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getTargetElevation", "()F", "GetGetTargetElevationHandler")]
public virtual float get_TargetElevation();
    [RegisterAttribute("setTargetElevation", "(F)V", "GetSetTargetElevation_FHandler")]
public virtual void set_TargetElevation(float value);
    [RegisterAttribute("getTotalScrollRange", "()I", "GetGetTotalScrollRangeHandler")]
public int get_TotalScrollRange();
    private static Delegate GetAddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler();
    private static void n_AddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnOffsetChangedListener", "(Landroid/support/design/widget/AppBarLayout$OnOffsetChangedListener;)V", "GetAddOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler")]
public virtual void AddOnOffsetChangedListener(IOnOffsetChangedListener listener);
    private static Delegate GetRemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler();
    private static void n_RemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnOffsetChangedListener", "(Landroid/support/design/widget/AppBarLayout$OnOffsetChangedListener;)V", "GetRemoveOnOffsetChangedListener_Landroid_support_design_widget_AppBarLayout_OnOffsetChangedListener_Handler")]
public virtual void RemoveOnOffsetChangedListener(IOnOffsetChangedListener listener);
    private static Delegate GetSetExpanded_ZHandler();
    private static void n_SetExpanded_Z(IntPtr jnienv, IntPtr native__this, bool expanded);
    [RegisterAttribute("setExpanded", "(Z)V", "GetSetExpanded_ZHandler")]
public virtual void SetExpanded(bool expanded);
    private static Delegate GetSetExpanded_ZZHandler();
    private static void n_SetExpanded_ZZ(IntPtr jnienv, IntPtr native__this, bool expanded, bool animate);
    [RegisterAttribute("setExpanded", "(ZZ)V", "GetSetExpanded_ZZHandler")]
public virtual void SetExpanded(bool expanded, bool animate);
    private static Delegate GetSetLiftable_ZHandler();
    private static bool n_SetLiftable_Z(IntPtr jnienv, IntPtr native__this, bool liftable);
    [RegisterAttribute("setLiftable", "(Z)Z", "GetSetLiftable_ZHandler")]
public virtual bool SetLiftable(bool liftable);
    private static Delegate GetSetLifted_ZHandler();
    private static bool n_SetLifted_Z(IntPtr jnienv, IntPtr native__this, bool lifted);
    [RegisterAttribute("setLifted", "(Z)Z", "GetSetLifted_ZHandler")]
public virtual bool SetLifted(bool lifted);
    public void add_OffsetChanged(EventHandler`1<OffsetChangedEventArgs> value);
    public void remove_OffsetChanged(EventHandler`1<OffsetChangedEventArgs> value);
    private IOnOffsetChangedListenerImplementor __CreateIOnOffsetChangedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/BaseTransientBottomBar")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.Design.Widget.BaseTransientBottomBar : Object {
    [RegisterAttribute("LENGTH_INDEFINITE")]
public static int LengthIndefinite;
    [RegisterAttribute("LENGTH_LONG")]
public static int LengthLong;
    [RegisterAttribute("LENGTH_SHORT")]
public static int LengthShort;
    internal static JniPeerMembers _members;
    private static Delegate cb_getContext;
    private static Delegate cb_getDuration;
    private static Delegate cb_hasSnackbarStyleAttr;
    private static Delegate cb_isShown;
    private static Delegate cb_isShownOrQueued;
    private static Delegate cb_getNewBehavior;
    private static Delegate cb_getSnackbarBaseLayoutResId;
    private static Delegate cb_getView;
    private static Delegate cb_addCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_;
    private static Delegate cb_dismiss;
    private static Delegate cb_dispatchDismiss_I;
    private static Delegate cb_getBehavior;
    private static Delegate cb_removeCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_;
    private static Delegate cb_setBehavior_Landroid_support_design_widget_BaseTransientBottomBar_Behavior_;
    private static Delegate cb_setDuration_I;
    private static Delegate cb_show;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Context Context { get; }
    public int Duration { get; }
    protected bool HasSnackbarStyleAttr { get; }
    public bool IsShown { get; }
    public bool IsShownOrQueued { get; }
    protected SwipeDismissBehavior NewBehavior { get; }
    protected int SnackbarBaseLayoutResId { get; }
    public View View { get; }
    protected BaseTransientBottomBar(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/support/design/snackbar/ContentViewCallback;)V", "")]
protected BaseTransientBottomBar(ViewGroup parent, View content, IContentViewCallback contentViewCallback);
    private static BaseTransientBottomBar();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetGetDurationHandler();
    private static int n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()I", "GetGetDurationHandler")]
public virtual int get_Duration();
    private static Delegate GetHasSnackbarStyleAttrHandler();
    private static bool n_HasSnackbarStyleAttr(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSnackbarStyleAttr", "()Z", "GetHasSnackbarStyleAttrHandler")]
protected virtual bool get_HasSnackbarStyleAttr();
    private static Delegate GetIsShownHandler();
    private static bool n_IsShown(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isShown", "()Z", "GetIsShownHandler")]
public virtual bool get_IsShown();
    private static Delegate GetIsShownOrQueuedHandler();
    private static bool n_IsShownOrQueued(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isShownOrQueued", "()Z", "GetIsShownOrQueuedHandler")]
public virtual bool get_IsShownOrQueued();
    private static Delegate GetGetNewBehaviorHandler();
    private static IntPtr n_GetNewBehavior(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getNewBehavior", "()Landroid/support/design/widget/SwipeDismissBehavior;", "GetGetNewBehaviorHandler")]
protected virtual SwipeDismissBehavior get_NewBehavior();
    private static Delegate GetGetSnackbarBaseLayoutResIdHandler();
    private static int n_GetSnackbarBaseLayoutResId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSnackbarBaseLayoutResId", "()I", "GetGetSnackbarBaseLayoutResIdHandler")]
protected virtual int get_SnackbarBaseLayoutResId();
    private static Delegate GetGetViewHandler();
    private static IntPtr n_GetView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getView", "()Landroid/view/View;", "GetGetViewHandler")]
public virtual View get_View();
    private static Delegate GetAddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler();
    private static IntPtr n_AddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [RegisterAttribute("addCallback", "(Landroid/support/design/widget/BaseTransientBottomBar$BaseCallback;)Landroid/support/design/widget/BaseTransientBottomBar;", "GetAddCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler")]
public virtual Object AddCallback(BaseCallback callback);
    private static Delegate GetDismissHandler();
    private static void n_Dismiss(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("dismiss", "()V", "GetDismissHandler")]
public virtual void Dismiss();
    private static Delegate GetDispatchDismiss_IHandler();
    private static void n_DispatchDismiss_I(IntPtr jnienv, IntPtr native__this, int e);
    [RegisterAttribute("dispatchDismiss", "(I)V", "GetDispatchDismiss_IHandler")]
protected virtual void DispatchDismiss(int e);
    private static Delegate GetGetBehaviorHandler();
    private static IntPtr n_GetBehavior(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBehavior", "()Landroid/support/design/widget/BaseTransientBottomBar$Behavior;", "GetGetBehaviorHandler")]
public virtual Behavior GetBehavior();
    private static Delegate GetRemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler();
    private static IntPtr n_RemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [RegisterAttribute("removeCallback", "(Landroid/support/design/widget/BaseTransientBottomBar$BaseCallback;)Landroid/support/design/widget/BaseTransientBottomBar;", "GetRemoveCallback_Landroid_support_design_widget_BaseTransientBottomBar_BaseCallback_Handler")]
public virtual Object RemoveCallback(BaseCallback callback);
    private static Delegate GetSetBehavior_Landroid_support_design_widget_BaseTransientBottomBar_Behavior_Handler();
    private static IntPtr n_SetBehavior_Landroid_support_design_widget_BaseTransientBottomBar_Behavior_(IntPtr jnienv, IntPtr native__this, IntPtr native_behavior);
    [RegisterAttribute("setBehavior", "(Landroid/support/design/widget/BaseTransientBottomBar$Behavior;)Landroid/support/design/widget/BaseTransientBottomBar;", "GetSetBehavior_Landroid_support_design_widget_BaseTransientBottomBar_Behavior_Handler")]
public virtual Object SetBehavior(Behavior behavior);
    private static Delegate GetSetDuration_IHandler();
    private static IntPtr n_SetDuration_I(IntPtr jnienv, IntPtr native__this, int duration);
    [RegisterAttribute("setDuration", "(I)Landroid/support/design/widget/BaseTransientBottomBar;", "GetSetDuration_IHandler")]
public virtual Object SetDuration(int duration);
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
}
[RegisterAttribute("android/support/design/widget/BaseTransientBottomBar")]
internal class Android.Support.Design.Widget.BaseTransientBottomBarInvoker : BaseTransientBottomBar {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public BaseTransientBottomBarInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static BaseTransientBottomBarInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/BottomNavigationView")]
public class Android.Support.Design.Widget.BottomNavigationView : FrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getItemBackground;
    private static Delegate cb_setItemBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getItemBackgroundResource;
    private static Delegate cb_setItemBackgroundResource_I;
    private static Delegate cb_isItemHorizontalTranslationEnabled;
    private static Delegate cb_setItemHorizontalTranslationEnabled_Z;
    private static Delegate cb_getItemIconSize;
    private static Delegate cb_setItemIconSize_I;
    private static Delegate cb_getItemIconTintList;
    private static Delegate cb_setItemIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemTextAppearanceActive;
    private static Delegate cb_setItemTextAppearanceActive_I;
    private static Delegate cb_getItemTextAppearanceInactive;
    private static Delegate cb_setItemTextAppearanceInactive_I;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getLabelVisibilityMode;
    private static Delegate cb_setLabelVisibilityMode_I;
    private static Delegate cb_getMaxItemCount;
    private static Delegate cb_getMenu;
    private static Delegate cb_getSelectedItemId;
    private static Delegate cb_setSelectedItemId_I;
    private static Delegate cb_inflateMenu_I;
    private static Delegate cb_setItemIconSizeRes_I;
    private static Delegate cb_setOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_;
    private static Delegate cb_setOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_;
    private WeakReference weak_implementor_SetOnNavigationItemReselectedListener;
    private WeakReference weak_implementor_SetOnNavigationItemSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Drawable ItemBackground { get; public set; }
    public int ItemBackgroundResource { get; public set; }
    public bool ItemHorizontalTranslationEnabled { get; public set; }
    public int ItemIconSize { get; public set; }
    public ColorStateList ItemIconTintList { get; public set; }
    public int ItemTextAppearanceActive { get; public set; }
    public int ItemTextAppearanceInactive { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public int LabelVisibilityMode { get; public set; }
    public int MaxItemCount { get; }
    public IMenu Menu { get; }
    public int SelectedItemId { get; public set; }
    protected BottomNavigationView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomNavigationView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomNavigationView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public BottomNavigationView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static BottomNavigationView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetItemBackgroundHandler();
    private static IntPtr n_GetItemBackground(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetItemBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_background);
    [RegisterAttribute("getItemBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetItemBackgroundHandler")]
public virtual Drawable get_ItemBackground();
    [RegisterAttribute("setItemBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ItemBackground(Drawable value);
    private static Delegate GetGetItemBackgroundResourceHandler();
    private static int n_GetItemBackgroundResource(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackgroundResource_IHandler();
    private static void n_SetItemBackgroundResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("getItemBackgroundResource", "()I", "GetGetItemBackgroundResourceHandler")]
public virtual int get_ItemBackgroundResource();
    [RegisterAttribute("setItemBackgroundResource", "(I)V", "GetSetItemBackgroundResource_IHandler")]
public virtual void set_ItemBackgroundResource(int value);
    private static Delegate GetIsItemHorizontalTranslationEnabledHandler();
    private static bool n_IsItemHorizontalTranslationEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemHorizontalTranslationEnabled_ZHandler();
    private static void n_SetItemHorizontalTranslationEnabled_Z(IntPtr jnienv, IntPtr native__this, bool itemHorizontalTranslationEnabled);
    [RegisterAttribute("isItemHorizontalTranslationEnabled", "()Z", "GetIsItemHorizontalTranslationEnabledHandler")]
public virtual bool get_ItemHorizontalTranslationEnabled();
    [RegisterAttribute("setItemHorizontalTranslationEnabled", "(Z)V", "GetSetItemHorizontalTranslationEnabled_ZHandler")]
public virtual void set_ItemHorizontalTranslationEnabled(bool value);
    private static Delegate GetGetItemIconSizeHandler();
    private static int n_GetItemIconSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconSize_IHandler();
    private static void n_SetItemIconSize_I(IntPtr jnienv, IntPtr native__this, int iconSize);
    [RegisterAttribute("getItemIconSize", "()I", "GetGetItemIconSizeHandler")]
public virtual int get_ItemIconSize();
    [RegisterAttribute("setItemIconSize", "(I)V", "GetSetItemIconSize_IHandler")]
public virtual void set_ItemIconSize(int value);
    private static Delegate GetGetItemIconTintListHandler();
    private static IntPtr n_GetItemIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getItemIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetItemIconTintListHandler")]
public virtual ColorStateList get_ItemIconTintList();
    [RegisterAttribute("setItemIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemIconTintList(ColorStateList value);
    private static Delegate GetGetItemTextAppearanceActiveHandler();
    private static int n_GetItemTextAppearanceActive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextAppearanceActive_IHandler();
    private static void n_SetItemTextAppearanceActive_I(IntPtr jnienv, IntPtr native__this, int textAppearanceRes);
    [RegisterAttribute("getItemTextAppearanceActive", "()I", "GetGetItemTextAppearanceActiveHandler")]
public virtual int get_ItemTextAppearanceActive();
    [RegisterAttribute("setItemTextAppearanceActive", "(I)V", "GetSetItemTextAppearanceActive_IHandler")]
public virtual void set_ItemTextAppearanceActive(int value);
    private static Delegate GetGetItemTextAppearanceInactiveHandler();
    private static int n_GetItemTextAppearanceInactive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextAppearanceInactive_IHandler();
    private static void n_SetItemTextAppearanceInactive_I(IntPtr jnienv, IntPtr native__this, int textAppearanceRes);
    [RegisterAttribute("getItemTextAppearanceInactive", "()I", "GetGetItemTextAppearanceInactiveHandler")]
public virtual int get_ItemTextAppearanceInactive();
    [RegisterAttribute("setItemTextAppearanceInactive", "(I)V", "GetSetItemTextAppearanceInactive_IHandler")]
public virtual void set_ItemTextAppearanceInactive(int value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetLabelVisibilityModeHandler();
    private static int n_GetLabelVisibilityMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetLabelVisibilityMode_IHandler();
    private static void n_SetLabelVisibilityMode_I(IntPtr jnienv, IntPtr native__this, int labelVisibilityMode);
    [RegisterAttribute("getLabelVisibilityMode", "()I", "GetGetLabelVisibilityModeHandler")]
public virtual int get_LabelVisibilityMode();
    [RegisterAttribute("setLabelVisibilityMode", "(I)V", "GetSetLabelVisibilityMode_IHandler")]
public virtual void set_LabelVisibilityMode(int value);
    private static Delegate GetGetMaxItemCountHandler();
    private static int n_GetMaxItemCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxItemCount", "()I", "GetGetMaxItemCountHandler")]
public virtual int get_MaxItemCount();
    private static Delegate GetGetMenuHandler();
    private static IntPtr n_GetMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMenu", "()Landroid/view/Menu;", "GetGetMenuHandler")]
public virtual IMenu get_Menu();
    private static Delegate GetGetSelectedItemIdHandler();
    private static int n_GetSelectedItemId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSelectedItemId_IHandler();
    private static void n_SetSelectedItemId_I(IntPtr jnienv, IntPtr native__this, int itemId);
    [RegisterAttribute("getSelectedItemId", "()I", "GetGetSelectedItemIdHandler")]
public virtual int get_SelectedItemId();
    [RegisterAttribute("setSelectedItemId", "(I)V", "GetSetSelectedItemId_IHandler")]
public virtual void set_SelectedItemId(int value);
    private static Delegate GetInflateMenu_IHandler();
    private static void n_InflateMenu_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("inflateMenu", "(I)V", "GetInflateMenu_IHandler")]
public virtual void InflateMenu(int resId);
    private static Delegate GetSetItemIconSizeRes_IHandler();
    private static void n_SetItemIconSizeRes_I(IntPtr jnienv, IntPtr native__this, int iconSizeRes);
    [RegisterAttribute("setItemIconSizeRes", "(I)V", "GetSetItemIconSizeRes_IHandler")]
public virtual void SetItemIconSizeRes(int iconSizeRes);
    private static Delegate GetSetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_Handler();
    private static void n_SetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnNavigationItemReselectedListener", "(Landroid/support/design/widget/BottomNavigationView$OnNavigationItemReselectedListener;)V", "GetSetOnNavigationItemReselectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemReselectedListener_Handler")]
public virtual void SetOnNavigationItemReselectedListener(IOnNavigationItemReselectedListener listener);
    private static Delegate GetSetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_Handler();
    private static void n_SetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnNavigationItemSelectedListener", "(Landroid/support/design/widget/BottomNavigationView$OnNavigationItemSelectedListener;)V", "GetSetOnNavigationItemSelectedListener_Landroid_support_design_widget_BottomNavigationView_OnNavigationItemSelectedListener_Handler")]
public virtual void SetOnNavigationItemSelectedListener(IOnNavigationItemSelectedListener listener);
    public void add_NavigationItemReselected(EventHandler`1<NavigationItemReselectedEventArgs> value);
    public void remove_NavigationItemReselected(EventHandler`1<NavigationItemReselectedEventArgs> value);
    private IOnNavigationItemReselectedListenerImplementor __CreateIOnNavigationItemReselectedListenerImplementor();
    public void add_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    public void remove_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    private IOnNavigationItemSelectedListenerImplementor __CreateIOnNavigationItemSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/BottomSheetBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.BottomSheetBehavior : Behavior {
    [RegisterAttribute("PEEK_HEIGHT_AUTO")]
public static int PeekHeightAuto;
    [RegisterAttribute("STATE_COLLAPSED")]
public static int StateCollapsed;
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_EXPANDED")]
public static int StateExpanded;
    [RegisterAttribute("STATE_HALF_EXPANDED")]
public static int StateHalfExpanded;
    [RegisterAttribute("STATE_HIDDEN")]
public static int StateHidden;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    internal static JniPeerMembers _members;
    private static Delegate cb_isFitToContents;
    private static Delegate cb_setFitToContents_Z;
    private static Delegate cb_isHideable;
    private static Delegate cb_setHideable_Z;
    private static Delegate cb_getSkipCollapsed;
    private static Delegate cb_setSkipCollapsed_Z;
    private static Delegate cb_onInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_onLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I;
    private static Delegate cb_onNestedPreFling_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_FF;
    private static Delegate cb_onNestedPreScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIarrayII;
    private static Delegate cb_onRestoreInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_os_Parcelable_;
    private static Delegate cb_onSaveInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_;
    private static Delegate cb_onStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_II;
    private static Delegate cb_onStopNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_I;
    private static Delegate cb_onTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_setBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool FitToContents { get; public set; }
    public bool Hideable { get; public set; }
    public int PeekHeight { get; public set; }
    public bool SkipCollapsed { get; public set; }
    public int State { get; public set; }
    protected BottomSheetBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public BottomSheetBehavior(Context context, IAttributeSet attrs);
    private static BottomSheetBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsFitToContentsHandler();
    private static bool n_IsFitToContents(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFitToContents_ZHandler();
    private static void n_SetFitToContents_Z(IntPtr jnienv, IntPtr native__this, bool fitToContents);
    [RegisterAttribute("isFitToContents", "()Z", "GetIsFitToContentsHandler")]
public virtual bool get_FitToContents();
    [RegisterAttribute("setFitToContents", "(Z)V", "GetSetFitToContents_ZHandler")]
public virtual void set_FitToContents(bool value);
    private static Delegate GetIsHideableHandler();
    private static bool n_IsHideable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideable_ZHandler();
    private static void n_SetHideable_Z(IntPtr jnienv, IntPtr native__this, bool hideable);
    [RegisterAttribute("isHideable", "()Z", "GetIsHideableHandler")]
public virtual bool get_Hideable();
    [RegisterAttribute("setHideable", "(Z)V", "GetSetHideable_ZHandler")]
public virtual void set_Hideable(bool value);
    [RegisterAttribute("getPeekHeight", "()I", "GetGetPeekHeightHandler")]
public int get_PeekHeight();
    [RegisterAttribute("setPeekHeight", "(I)V", "GetSetPeekHeight_IHandler")]
public void set_PeekHeight(int value);
    private static Delegate GetGetSkipCollapsedHandler();
    private static bool n_GetSkipCollapsed(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSkipCollapsed_ZHandler();
    private static void n_SetSkipCollapsed_Z(IntPtr jnienv, IntPtr native__this, bool skipCollapsed);
    [RegisterAttribute("getSkipCollapsed", "()Z", "GetGetSkipCollapsedHandler")]
public virtual bool get_SkipCollapsed();
    [RegisterAttribute("setSkipCollapsed", "(Z)V", "GetSetSkipCollapsed_ZHandler")]
public virtual void set_SkipCollapsed(bool value);
    [RegisterAttribute("getState", "()I", "GetGetStateHandler")]
public int get_State();
    [RegisterAttribute("setState", "(I)V", "GetSetState_IHandler")]
public void set_State(int value);
    [RegisterAttribute("from", "(Landroid/view/View;)Landroid/support/design/widget/BottomSheetBehavior;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static BottomSheetBehavior From(Object view);
    private static Delegate GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_event);
    [RegisterAttribute("onInterceptTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnInterceptTouchEvent(CoordinatorLayout parent, Object child, MotionEvent event_);
    private static Delegate GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler();
    private static bool n_OnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("onLayoutChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;I)Z", "GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler")]
public virtual bool OnLayoutChild(CoordinatorLayout parent, Object child, int layoutDirection);
    private static Delegate GetOnNestedPreFling_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_FFHandler();
    private static bool n_OnNestedPreFling_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_FF(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_target, float velocityX, float velocityY);
    [RegisterAttribute("onNestedPreFling", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;FF)Z", "GetOnNestedPreFling_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_FFHandler")]
public virtual bool OnNestedPreFling(CoordinatorLayout coordinatorLayout, Object child, View target, float velocityX, float velocityY);
    private static Delegate GetOnNestedPreScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIarrayIIHandler();
    private static void n_OnNestedPreScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIarrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_target, int dx, int dy, IntPtr native_consumed, int type);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;II[II)V", "GetOnNestedPreScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IIarrayIIHandler")]
public virtual void OnNestedPreScroll(CoordinatorLayout coordinatorLayout, Object child, View target, int dx, int dy, Int32[] consumed, int type);
    private static Delegate GetOnRestoreInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_os_Parcelable_Handler();
    private static void n_OnRestoreInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_state);
    [RegisterAttribute("onRestoreInstanceState", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/os/Parcelable;)V", "GetOnRestoreInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_os_Parcelable_Handler")]
public virtual void OnRestoreInstanceState(CoordinatorLayout parent, Object child, IParcelable state);
    private static Delegate GetOnSaveInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Handler();
    private static IntPtr n_OnSaveInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child);
    [RegisterAttribute("onSaveInstanceState", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;)Landroid/os/Parcelable;", "GetOnSaveInstanceState_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Handler")]
public virtual IParcelable OnSaveInstanceState(CoordinatorLayout parent, Object child);
    private static Delegate GetOnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_IIHandler();
    private static bool n_OnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_directTargetChild, IntPtr native_target, int axes, int type);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;Landroid/view/View;II)Z", "GetOnStartNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual bool OnStartNestedScroll(CoordinatorLayout coordinatorLayout, Object child, View directTargetChild, View target, int axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_coordinatorLayout, IntPtr native_child, IntPtr native_target, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;I)V", "GetOnStopNestedScroll_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_View_IHandler")]
public virtual void OnStopNestedScroll(CoordinatorLayout coordinatorLayout, Object child, View target, int type);
    private static Delegate GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_event);
    [RegisterAttribute("onTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouchEvent(CoordinatorLayout parent, Object child, MotionEvent event_);
    private static Delegate GetSetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_Handler();
    private static void n_SetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [RegisterAttribute("setBottomSheetCallback", "(Landroid/support/design/widget/BottomSheetBehavior$BottomSheetCallback;)V", "GetSetBottomSheetCallback_Landroid_support_design_widget_BottomSheetBehavior_BottomSheetCallback_Handler")]
public virtual void SetBottomSheetCallback(BottomSheetCallback callback);
}
[RegisterAttribute("android/support/design/widget/BottomSheetDialog")]
public class Android.Support.Design.Widget.BottomSheetDialog : AppCompatDialog {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BottomSheetDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public BottomSheetDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ZLandroid/content/DialogInterface$OnCancelListener;)V", "")]
protected BottomSheetDialog(Context context, bool cancelable, IDialogInterfaceOnCancelListener cancelListener);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public BottomSheetDialog(Context context, int theme);
    private static BottomSheetDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/BottomSheetDialogFragment")]
public class Android.Support.Design.Widget.BottomSheetDialogFragment : AppCompatDialogFragment {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected BottomSheetDialogFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static BottomSheetDialogFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/CheckableImageButton")]
public class Android.Support.Design.Widget.CheckableImageButton : AppCompatImageButton {
    internal static JniPeerMembers _members;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_toggle;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Checked { get; public set; }
    protected CheckableImageButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CheckableImageButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CheckableImageButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public CheckableImageButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static CheckableImageButton();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    private static Delegate GetToggleHandler();
    private static void n_Toggle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toggle", "()V", "GetToggleHandler")]
public virtual void Toggle();
}
[RegisterAttribute("android/support/design/widget/CircularBorderDrawable")]
public class Android.Support.Design.Widget.CircularBorderDrawable : Drawable {
    internal static JniPeerMembers _members;
    private static Delegate cb_getOpacity;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setBorderTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setBorderWidth_F;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setGradientColors_IIII;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Opacity { get; }
    protected CircularBorderDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    private static CircularBorderDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetBorderTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetBorderTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("setBorderTint", "(Landroid/content/res/ColorStateList;)V", "GetSetBorderTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetBorderTint(ColorStateList tint);
    private static Delegate GetSetBorderWidth_FHandler();
    private static void n_SetBorderWidth_F(IntPtr jnienv, IntPtr native__this, float width);
    [RegisterAttribute("setBorderWidth", "(F)V", "GetSetBorderWidth_FHandler")]
public virtual void SetBorderWidth(float width);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetGradientColors_IIIIHandler();
    private static void n_SetGradientColors_IIII(IntPtr jnienv, IntPtr native__this, int topOuterStrokeColor, int topInnerStrokeColor, int bottomOuterStrokeColor, int bottomInnerStrokeColor);
    [RegisterAttribute("setGradientColors", "(IIII)V", "GetSetGradientColors_IIIIHandler")]
public virtual void SetGradientColors(int topOuterStrokeColor, int topInnerStrokeColor, int bottomOuterStrokeColor, int bottomInnerStrokeColor);
    [RegisterAttribute("setRotation", "(F)V", "")]
public void SetRotation(float rotation);
}
[RegisterAttribute("android/support/design/widget/CollapsingTextHelper")]
public class Android.Support.Design.Widget.CollapsingTextHelper : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ColorStateList CollapsedTextColor { get; public set; }
    public int CollapsedTextGravity { get; public set; }
    public float CollapsedTextHeight { get; }
    public float CollapsedTextSize { get; public set; }
    public Typeface CollapsedTypeface { get; public set; }
    public int CurrentCollapsedTextColor { get; }
    public ColorStateList ExpandedTextColor { get; public set; }
    public int ExpandedTextGravity { get; public set; }
    public float ExpandedTextSize { get; public set; }
    public Typeface ExpandedTypeface { get; public set; }
    public float ExpansionFraction { get; public set; }
    public bool IsStateful { get; }
    public ICharSequence TextFormatted { get; public set; }
    public string Text { get; public set; }
    internal CollapsingTextHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public CollapsingTextHelper(View view);
    private static CollapsingTextHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCollapsedTextColor", "()Landroid/content/res/ColorStateList;", "GetGetCollapsedTextColorHandler")]
public ColorStateList get_CollapsedTextColor();
    [RegisterAttribute("setCollapsedTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetCollapsedTextColor_Landroid_content_res_ColorStateList_Handler")]
public void set_CollapsedTextColor(ColorStateList value);
    [RegisterAttribute("getCollapsedTextGravity", "()I", "GetGetCollapsedTextGravityHandler")]
public int get_CollapsedTextGravity();
    [RegisterAttribute("setCollapsedTextGravity", "(I)V", "GetSetCollapsedTextGravity_IHandler")]
public void set_CollapsedTextGravity(int value);
    [RegisterAttribute("getCollapsedTextHeight", "()F", "GetGetCollapsedTextHeightHandler")]
public float get_CollapsedTextHeight();
    [RegisterAttribute("getCollapsedTextSize", "()F", "GetGetCollapsedTextSizeHandler")]
public float get_CollapsedTextSize();
    [RegisterAttribute("setCollapsedTextSize", "(F)V", "GetSetCollapsedTextSize_FHandler")]
public void set_CollapsedTextSize(float value);
    [RegisterAttribute("getCollapsedTypeface", "()Landroid/graphics/Typeface;", "GetGetCollapsedTypefaceHandler")]
public Typeface get_CollapsedTypeface();
    [RegisterAttribute("setCollapsedTypeface", "(Landroid/graphics/Typeface;)V", "GetSetCollapsedTypeface_Landroid_graphics_Typeface_Handler")]
public void set_CollapsedTypeface(Typeface value);
    [RegisterAttribute("getCurrentCollapsedTextColor", "()I", "GetGetCurrentCollapsedTextColorHandler")]
public int get_CurrentCollapsedTextColor();
    [RegisterAttribute("getExpandedTextColor", "()Landroid/content/res/ColorStateList;", "GetGetExpandedTextColorHandler")]
public ColorStateList get_ExpandedTextColor();
    [RegisterAttribute("setExpandedTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetExpandedTextColor_Landroid_content_res_ColorStateList_Handler")]
public void set_ExpandedTextColor(ColorStateList value);
    [RegisterAttribute("getExpandedTextGravity", "()I", "GetGetExpandedTextGravityHandler")]
public int get_ExpandedTextGravity();
    [RegisterAttribute("setExpandedTextGravity", "(I)V", "GetSetExpandedTextGravity_IHandler")]
public void set_ExpandedTextGravity(int value);
    [RegisterAttribute("getExpandedTextSize", "()F", "GetGetExpandedTextSizeHandler")]
public float get_ExpandedTextSize();
    [RegisterAttribute("setExpandedTextSize", "(F)V", "GetSetExpandedTextSize_FHandler")]
public void set_ExpandedTextSize(float value);
    [RegisterAttribute("getExpandedTypeface", "()Landroid/graphics/Typeface;", "GetGetExpandedTypefaceHandler")]
public Typeface get_ExpandedTypeface();
    [RegisterAttribute("setExpandedTypeface", "(Landroid/graphics/Typeface;)V", "GetSetExpandedTypeface_Landroid_graphics_Typeface_Handler")]
public void set_ExpandedTypeface(Typeface value);
    [RegisterAttribute("getExpansionFraction", "()F", "GetGetExpansionFractionHandler")]
public float get_ExpansionFraction();
    [RegisterAttribute("setExpansionFraction", "(F)V", "GetSetExpansionFraction_FHandler")]
public void set_ExpansionFraction(float value);
    [RegisterAttribute("isStateful", "()Z", "GetIsStatefulHandler")]
public bool get_IsStateful();
    [RegisterAttribute("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")]
public ICharSequence get_TextFormatted();
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")]
public void set_TextFormatted(ICharSequence value);
    public string get_Text();
    public void set_Text(string value);
    [RegisterAttribute("calculateCollapsedTextWidth", "()F", "")]
public float CalculateCollapsedTextWidth();
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "")]
public void Draw(Canvas canvas);
    [RegisterAttribute("getCollapsedTextActualBounds", "(Landroid/graphics/RectF;)V", "")]
public void GetCollapsedTextActualBounds(RectF bounds);
    [RegisterAttribute("recalculate", "()V", "")]
public void Recalculate();
    [RegisterAttribute("setCollapsedBounds", "(IIII)V", "")]
public void SetCollapsedBounds(int left, int top, int right, int bottom);
    [RegisterAttribute("setCollapsedTextAppearance", "(I)V", "")]
public void SetCollapsedTextAppearance(int resId);
    [RegisterAttribute("setExpandedBounds", "(IIII)V", "")]
public void SetExpandedBounds(int left, int top, int right, int bottom);
    [RegisterAttribute("setExpandedTextAppearance", "(I)V", "")]
public void SetExpandedTextAppearance(int resId);
    [RegisterAttribute("setPositionInterpolator", "(Landroid/animation/TimeInterpolator;)V", "")]
public void SetPositionInterpolator(ITimeInterpolator interpolator);
    [RegisterAttribute("setState", "([I)Z", "")]
public bool SetState(Int32[] state);
    [RegisterAttribute("setTextSizeInterpolator", "(Landroid/animation/TimeInterpolator;)V", "")]
public void SetTextSizeInterpolator(ITimeInterpolator interpolator);
    [RegisterAttribute("setTypefaces", "(Landroid/graphics/Typeface;)V", "")]
public void SetTypefaces(Typeface typeface);
}
[RegisterAttribute("android/support/design/widget/CollapsingToolbarLayout")]
public class Android.Support.Design.Widget.CollapsingToolbarLayout : FrameLayout {
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCollapsedTitleGravity;
    private static Delegate cb_setCollapsedTitleGravity_I;
    private static Delegate cb_getCollapsedTitleTypeface;
    private static Delegate cb_setCollapsedTitleTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_getContentScrim;
    private static Delegate cb_setContentScrim_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getExpandedTitleGravity;
    private static Delegate cb_setExpandedTitleGravity_I;
    private static Delegate cb_getExpandedTitleMarginBottom;
    private static Delegate cb_setExpandedTitleMarginBottom_I;
    private static Delegate cb_getExpandedTitleMarginEnd;
    private static Delegate cb_setExpandedTitleMarginEnd_I;
    private static Delegate cb_getExpandedTitleMarginStart;
    private static Delegate cb_setExpandedTitleMarginStart_I;
    private static Delegate cb_getExpandedTitleMarginTop;
    private static Delegate cb_setExpandedTitleMarginTop_I;
    private static Delegate cb_getExpandedTitleTypeface;
    private static Delegate cb_setExpandedTitleTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_getScrimAnimationDuration;
    private static Delegate cb_setScrimAnimationDuration_J;
    private static Delegate cb_getScrimVisibleHeightTrigger;
    private static Delegate cb_setScrimVisibleHeightTrigger_I;
    private static Delegate cb_getStatusBarScrim;
    private static Delegate cb_setStatusBarScrim_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getTitle;
    private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_isTitleEnabled;
    private static Delegate cb_setTitleEnabled_Z;
    private static Delegate cb_setCollapsedTitleTextAppearance_I;
    private static Delegate cb_setCollapsedTitleTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setCollapsedTitleTextColor_I;
    private static Delegate cb_setContentScrimColor_I;
    private static Delegate cb_setContentScrimResource_I;
    private static Delegate cb_setExpandedTitleColor_I;
    private static Delegate cb_setExpandedTitleMargin_IIII;
    private static Delegate cb_setExpandedTitleTextAppearance_I;
    private static Delegate cb_setExpandedTitleTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setScrimsShown_Z;
    private static Delegate cb_setScrimsShown_ZZ;
    private static Delegate cb_setStatusBarScrimColor_I;
    private static Delegate cb_setStatusBarScrimResource_I;
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CollapsedTitleGravity { get; public set; }
    public Typeface CollapsedTitleTypeface { get; public set; }
    public Drawable ContentScrim { get; public set; }
    public int ExpandedTitleGravity { get; public set; }
    public int ExpandedTitleMarginBottom { get; public set; }
    public int ExpandedTitleMarginEnd { get; public set; }
    public int ExpandedTitleMarginStart { get; public set; }
    public int ExpandedTitleMarginTop { get; public set; }
    public Typeface ExpandedTitleTypeface { get; public set; }
    public long ScrimAnimationDuration { get; public set; }
    public int ScrimVisibleHeightTrigger { get; public set; }
    public Drawable StatusBarScrim { get; public set; }
    public ICharSequence TitleFormatted { get; public set; }
    public string Title { get; public set; }
    public bool TitleEnabled { get; public set; }
    protected CollapsingToolbarLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CollapsingToolbarLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public CollapsingToolbarLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public CollapsingToolbarLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static CollapsingToolbarLayout();
    public void SetTitle(string title);
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_visibility);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates visibility);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCollapsedTitleGravityHandler();
    private static int n_GetCollapsedTitleGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCollapsedTitleGravity_IHandler();
    private static void n_SetCollapsedTitleGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getCollapsedTitleGravity", "()I", "GetGetCollapsedTitleGravityHandler")]
public virtual int get_CollapsedTitleGravity();
    [RegisterAttribute("setCollapsedTitleGravity", "(I)V", "GetSetCollapsedTitleGravity_IHandler")]
public virtual void set_CollapsedTitleGravity(int value);
    private static Delegate GetGetCollapsedTitleTypefaceHandler();
    private static IntPtr n_GetCollapsedTitleTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCollapsedTitleTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetCollapsedTitleTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getCollapsedTitleTypeface", "()Landroid/graphics/Typeface;", "GetGetCollapsedTitleTypefaceHandler")]
public virtual Typeface get_CollapsedTitleTypeface();
    [RegisterAttribute("setCollapsedTitleTypeface", "(Landroid/graphics/Typeface;)V", "GetSetCollapsedTitleTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_CollapsedTitleTypeface(Typeface value);
    private static Delegate GetGetContentScrimHandler();
    private static IntPtr n_GetContentScrim(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetContentScrim_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetContentScrim_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getContentScrim", "()Landroid/graphics/drawable/Drawable;", "GetGetContentScrimHandler")]
public virtual Drawable get_ContentScrim();
    [RegisterAttribute("setContentScrim", "(Landroid/graphics/drawable/Drawable;)V", "GetSetContentScrim_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ContentScrim(Drawable value);
    private static Delegate GetGetExpandedTitleGravityHandler();
    private static int n_GetExpandedTitleGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleGravity_IHandler();
    private static void n_SetExpandedTitleGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getExpandedTitleGravity", "()I", "GetGetExpandedTitleGravityHandler")]
public virtual int get_ExpandedTitleGravity();
    [RegisterAttribute("setExpandedTitleGravity", "(I)V", "GetSetExpandedTitleGravity_IHandler")]
public virtual void set_ExpandedTitleGravity(int value);
    private static Delegate GetGetExpandedTitleMarginBottomHandler();
    private static int n_GetExpandedTitleMarginBottom(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginBottom_IHandler();
    private static void n_SetExpandedTitleMarginBottom_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginBottom", "()I", "GetGetExpandedTitleMarginBottomHandler")]
public virtual int get_ExpandedTitleMarginBottom();
    [RegisterAttribute("setExpandedTitleMarginBottom", "(I)V", "GetSetExpandedTitleMarginBottom_IHandler")]
public virtual void set_ExpandedTitleMarginBottom(int value);
    private static Delegate GetGetExpandedTitleMarginEndHandler();
    private static int n_GetExpandedTitleMarginEnd(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginEnd_IHandler();
    private static void n_SetExpandedTitleMarginEnd_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginEnd", "()I", "GetGetExpandedTitleMarginEndHandler")]
public virtual int get_ExpandedTitleMarginEnd();
    [RegisterAttribute("setExpandedTitleMarginEnd", "(I)V", "GetSetExpandedTitleMarginEnd_IHandler")]
public virtual void set_ExpandedTitleMarginEnd(int value);
    private static Delegate GetGetExpandedTitleMarginStartHandler();
    private static int n_GetExpandedTitleMarginStart(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginStart_IHandler();
    private static void n_SetExpandedTitleMarginStart_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginStart", "()I", "GetGetExpandedTitleMarginStartHandler")]
public virtual int get_ExpandedTitleMarginStart();
    [RegisterAttribute("setExpandedTitleMarginStart", "(I)V", "GetSetExpandedTitleMarginStart_IHandler")]
public virtual void set_ExpandedTitleMarginStart(int value);
    private static Delegate GetGetExpandedTitleMarginTopHandler();
    private static int n_GetExpandedTitleMarginTop(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleMarginTop_IHandler();
    private static void n_SetExpandedTitleMarginTop_I(IntPtr jnienv, IntPtr native__this, int margin);
    [RegisterAttribute("getExpandedTitleMarginTop", "()I", "GetGetExpandedTitleMarginTopHandler")]
public virtual int get_ExpandedTitleMarginTop();
    [RegisterAttribute("setExpandedTitleMarginTop", "(I)V", "GetSetExpandedTitleMarginTop_IHandler")]
public virtual void set_ExpandedTitleMarginTop(int value);
    private static Delegate GetGetExpandedTitleTypefaceHandler();
    private static IntPtr n_GetExpandedTitleTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedTitleTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetExpandedTitleTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getExpandedTitleTypeface", "()Landroid/graphics/Typeface;", "GetGetExpandedTitleTypefaceHandler")]
public virtual Typeface get_ExpandedTitleTypeface();
    [RegisterAttribute("setExpandedTitleTypeface", "(Landroid/graphics/Typeface;)V", "GetSetExpandedTitleTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_ExpandedTitleTypeface(Typeface value);
    private static Delegate GetGetScrimAnimationDurationHandler();
    private static long n_GetScrimAnimationDuration(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrimAnimationDuration_JHandler();
    private static void n_SetScrimAnimationDuration_J(IntPtr jnienv, IntPtr native__this, long duration);
    [RegisterAttribute("getScrimAnimationDuration", "()J", "GetGetScrimAnimationDurationHandler")]
public virtual long get_ScrimAnimationDuration();
    [RegisterAttribute("setScrimAnimationDuration", "(J)V", "GetSetScrimAnimationDuration_JHandler")]
public virtual void set_ScrimAnimationDuration(long value);
    private static Delegate GetGetScrimVisibleHeightTriggerHandler();
    private static int n_GetScrimVisibleHeightTrigger(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetScrimVisibleHeightTrigger_IHandler();
    private static void n_SetScrimVisibleHeightTrigger_I(IntPtr jnienv, IntPtr native__this, int height);
    [RegisterAttribute("getScrimVisibleHeightTrigger", "()I", "GetGetScrimVisibleHeightTriggerHandler")]
public virtual int get_ScrimVisibleHeightTrigger();
    [RegisterAttribute("setScrimVisibleHeightTrigger", "(I)V", "GetSetScrimVisibleHeightTrigger_IHandler")]
public virtual void set_ScrimVisibleHeightTrigger(int value);
    private static Delegate GetGetStatusBarScrimHandler();
    private static IntPtr n_GetStatusBarScrim(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStatusBarScrim_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetStatusBarScrim_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [RegisterAttribute("getStatusBarScrim", "()Landroid/graphics/drawable/Drawable;", "GetGetStatusBarScrimHandler")]
public virtual Drawable get_StatusBarScrim();
    [RegisterAttribute("setStatusBarScrim", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStatusBarScrim_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_StatusBarScrim(Drawable value);
    private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")]
public virtual ICharSequence get_TitleFormatted();
    [RegisterAttribute("setTitle", "(Ljava/lang/CharSequence;)V", "GetSetTitle_Ljava_lang_CharSequence_Handler")]
public virtual void set_TitleFormatted(ICharSequence value);
    public string get_Title();
    public void set_Title(string value);
    private static Delegate GetIsTitleEnabledHandler();
    private static bool n_IsTitleEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTitleEnabled_ZHandler();
    private static void n_SetTitleEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isTitleEnabled", "()Z", "GetIsTitleEnabledHandler")]
public virtual bool get_TitleEnabled();
    [RegisterAttribute("setTitleEnabled", "(Z)V", "GetSetTitleEnabled_ZHandler")]
public virtual void set_TitleEnabled(bool value);
    private static Delegate GetSetCollapsedTitleTextAppearance_IHandler();
    private static void n_SetCollapsedTitleTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setCollapsedTitleTextAppearance", "(I)V", "GetSetCollapsedTitleTextAppearance_IHandler")]
public virtual void SetCollapsedTitleTextAppearance(int resId);
    private static Delegate GetSetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setCollapsedTitleTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetCollapsedTitleTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetCollapsedTitleTextColor(ColorStateList colors);
    private static Delegate GetSetCollapsedTitleTextColor_IHandler();
    private static void n_SetCollapsedTitleTextColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setCollapsedTitleTextColor", "(I)V", "GetSetCollapsedTitleTextColor_IHandler")]
public virtual void SetCollapsedTitleTextColor(int color);
    private static Delegate GetSetContentScrimColor_IHandler();
    private static void n_SetContentScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setContentScrimColor", "(I)V", "GetSetContentScrimColor_IHandler")]
public virtual void SetContentScrimColor(int color);
    private static Delegate GetSetContentScrimResource_IHandler();
    private static void n_SetContentScrimResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setContentScrimResource", "(I)V", "GetSetContentScrimResource_IHandler")]
public virtual void SetContentScrimResource(int resId);
    private static Delegate GetSetExpandedTitleColor_IHandler();
    private static void n_SetExpandedTitleColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setExpandedTitleColor", "(I)V", "GetSetExpandedTitleColor_IHandler")]
public virtual void SetExpandedTitleColor(int color);
    private static Delegate GetSetExpandedTitleMargin_IIIIHandler();
    private static void n_SetExpandedTitleMargin_IIII(IntPtr jnienv, IntPtr native__this, int start, int top, int end, int bottom);
    [RegisterAttribute("setExpandedTitleMargin", "(IIII)V", "GetSetExpandedTitleMargin_IIIIHandler")]
public virtual void SetExpandedTitleMargin(int start, int top, int end, int bottom);
    private static Delegate GetSetExpandedTitleTextAppearance_IHandler();
    private static void n_SetExpandedTitleTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setExpandedTitleTextAppearance", "(I)V", "GetSetExpandedTitleTextAppearance_IHandler")]
public virtual void SetExpandedTitleTextAppearance(int resId);
    private static Delegate GetSetExpandedTitleTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetExpandedTitleTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setExpandedTitleTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetExpandedTitleTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetExpandedTitleTextColor(ColorStateList colors);
    private static Delegate GetSetScrimsShown_ZHandler();
    private static void n_SetScrimsShown_Z(IntPtr jnienv, IntPtr native__this, bool shown);
    [RegisterAttribute("setScrimsShown", "(Z)V", "GetSetScrimsShown_ZHandler")]
public virtual void SetScrimsShown(bool shown);
    private static Delegate GetSetScrimsShown_ZZHandler();
    private static void n_SetScrimsShown_ZZ(IntPtr jnienv, IntPtr native__this, bool shown, bool animate);
    [RegisterAttribute("setScrimsShown", "(ZZ)V", "GetSetScrimsShown_ZZHandler")]
public virtual void SetScrimsShown(bool shown, bool animate);
    private static Delegate GetSetStatusBarScrimColor_IHandler();
    private static void n_SetStatusBarScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setStatusBarScrimColor", "(I)V", "GetSetStatusBarScrimColor_IHandler")]
public virtual void SetStatusBarScrimColor(int color);
    private static Delegate GetSetStatusBarScrimResource_IHandler();
    private static void n_SetStatusBarScrimResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setStatusBarScrimResource", "(I)V", "GetSetStatusBarScrimResource_IHandler")]
public virtual void SetStatusBarScrimResource(int resId);
}
[RegisterAttribute("android/support/design/widget/DescendantOffsetUtils")]
public class Android.Support.Design.Widget.DescendantOffsetUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DescendantOffsetUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static DescendantOffsetUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDescendantRect", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/graphics/Rect;)V", "")]
public static void GetDescendantRect(ViewGroup parent, View descendant, Rect out);
    [RegisterAttribute("offsetDescendantRect", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/graphics/Rect;)V", "")]
public static void OffsetDescendantRect(ViewGroup parent, View descendant, Rect rect);
}
[RegisterAttribute("android/support/design/widget/DrawableUtils")]
public class Android.Support.Design.Widget.DrawableUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected DrawableUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("setContainerConstantState", "(Landroid/graphics/drawable/DrawableContainer;Landroid/graphics/drawable/Drawable$ConstantState;)Z", "")]
public static bool SetContainerConstantState(DrawableContainer drawable, ConstantState constantState);
}
[RegisterAttribute("android/support/design/widget/FloatingActionButton")]
public class Android.Support.Design.Widget.FloatingActionButton : VisibilityAwareImageButton {
    [RegisterAttribute("NO_CUSTOM_SIZE")]
public static int NoCustomSize;
    [RegisterAttribute("SIZE_AUTO")]
public static int SizeAuto;
    [RegisterAttribute("SIZE_MINI")]
public static int SizeMini;
    [RegisterAttribute("SIZE_NORMAL")]
public static int SizeNormal;
    internal static JniPeerMembers _members;
    private static Delegate cb_getCompatElevation;
    private static Delegate cb_setCompatElevation_F;
    private static Delegate cb_getCompatHoveredFocusedTranslationZ;
    private static Delegate cb_setCompatHoveredFocusedTranslationZ_F;
    private static Delegate cb_getCompatPressedTranslationZ;
    private static Delegate cb_setCompatPressedTranslationZ_F;
    private static Delegate cb_getContentBackground;
    private static Delegate cb_getCustomSize;
    private static Delegate cb_setCustomSize_I;
    private static Delegate cb_getExpandedComponentIdHint;
    private static Delegate cb_setExpandedComponentIdHint_I;
    private static Delegate cb_getHideMotionSpec;
    private static Delegate cb_setHideMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_isExpanded;
    private static Delegate cb_isOrWillBeHidden;
    private static Delegate cb_isOrWillBeShown;
    private static Delegate cb_getRippleColor;
    private static Delegate cb_setRippleColor_I;
    private static Delegate cb_getRippleColorStateList;
    private static Delegate cb_getShowMotionSpec;
    private static Delegate cb_setShowMotionSpec_Landroid_support_design_animation_MotionSpec_;
    private static Delegate cb_getSize;
    private static Delegate cb_setSize_I;
    private static Delegate cb_getSupportBackgroundTintList;
    private static Delegate cb_setSupportBackgroundTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportBackgroundTintMode;
    private static Delegate cb_setSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static Delegate cb_getSupportImageTintList;
    private static Delegate cb_setSupportImageTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportImageTintMode;
    private static Delegate cb_setSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static Delegate cb_getUseCompatPadding;
    private static Delegate cb_setUseCompatPadding_Z;
    private static Delegate cb_addOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_addOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_clearCustomSize;
    private static Delegate cb_getContentRect_Landroid_graphics_Rect_;
    private static Delegate cb_getMeasuredContentRect_Landroid_graphics_Rect_;
    private static Delegate cb_hide;
    private static Delegate cb_hide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_;
    private static Delegate cb_removeOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_removeOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_;
    private static Delegate cb_setCompatElevationResource_I;
    private static Delegate cb_setCompatHoveredFocusedTranslationZResource_I;
    private static Delegate cb_setCompatPressedTranslationZResource_I;
    private static Delegate cb_setExpanded_Z;
    private static Delegate cb_setHideMotionSpecResource_I;
    private static Delegate cb_setRippleColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setShowMotionSpecResource_I;
    private static Delegate cb_show;
    private static Delegate cb_show_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float CompatElevation { get; public set; }
    public float CompatHoveredFocusedTranslationZ { get; public set; }
    public float CompatPressedTranslationZ { get; public set; }
    public Drawable ContentBackground { get; }
    public int CustomSize { get; public set; }
    public int ExpandedComponentIdHint { get; public set; }
    public MotionSpec HideMotionSpec { get; public set; }
    public bool IsExpanded { get; }
    public bool IsOrWillBeHidden { get; }
    public bool IsOrWillBeShown { get; }
    public int RippleColor { get; public set; }
    public ColorStateList RippleColorStateList { get; }
    public MotionSpec ShowMotionSpec { get; public set; }
    public int Size { get; public set; }
    public ColorStateList SupportBackgroundTintList { get; public set; }
    public Mode SupportBackgroundTintMode { get; public set; }
    public ColorStateList SupportImageTintList { get; public set; }
    public Mode SupportImageTintMode { get; public set; }
    public bool UseCompatPadding { get; public set; }
    protected FloatingActionButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public FloatingActionButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FloatingActionButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public FloatingActionButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static FloatingActionButton();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCompatElevationHandler();
    private static float n_GetCompatElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCompatElevation_FHandler();
    private static void n_SetCompatElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getCompatElevation", "()F", "GetGetCompatElevationHandler")]
public virtual float get_CompatElevation();
    [RegisterAttribute("setCompatElevation", "(F)V", "GetSetCompatElevation_FHandler")]
public virtual void set_CompatElevation(float value);
    private static Delegate GetGetCompatHoveredFocusedTranslationZHandler();
    private static float n_GetCompatHoveredFocusedTranslationZ(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCompatHoveredFocusedTranslationZ_FHandler();
    private static void n_SetCompatHoveredFocusedTranslationZ_F(IntPtr jnienv, IntPtr native__this, float translationZ);
    [RegisterAttribute("getCompatHoveredFocusedTranslationZ", "()F", "GetGetCompatHoveredFocusedTranslationZHandler")]
public virtual float get_CompatHoveredFocusedTranslationZ();
    [RegisterAttribute("setCompatHoveredFocusedTranslationZ", "(F)V", "GetSetCompatHoveredFocusedTranslationZ_FHandler")]
public virtual void set_CompatHoveredFocusedTranslationZ(float value);
    private static Delegate GetGetCompatPressedTranslationZHandler();
    private static float n_GetCompatPressedTranslationZ(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCompatPressedTranslationZ_FHandler();
    private static void n_SetCompatPressedTranslationZ_F(IntPtr jnienv, IntPtr native__this, float translationZ);
    [RegisterAttribute("getCompatPressedTranslationZ", "()F", "GetGetCompatPressedTranslationZHandler")]
public virtual float get_CompatPressedTranslationZ();
    [RegisterAttribute("setCompatPressedTranslationZ", "(F)V", "GetSetCompatPressedTranslationZ_FHandler")]
public virtual void set_CompatPressedTranslationZ(float value);
    private static Delegate GetGetContentBackgroundHandler();
    private static IntPtr n_GetContentBackground(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContentBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetContentBackgroundHandler")]
public virtual Drawable get_ContentBackground();
    private static Delegate GetGetCustomSizeHandler();
    private static int n_GetCustomSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCustomSize_IHandler();
    private static void n_SetCustomSize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("getCustomSize", "()I", "GetGetCustomSizeHandler")]
public virtual int get_CustomSize();
    [RegisterAttribute("setCustomSize", "(I)V", "GetSetCustomSize_IHandler")]
public virtual void set_CustomSize(int value);
    private static Delegate GetGetExpandedComponentIdHintHandler();
    private static int n_GetExpandedComponentIdHint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetExpandedComponentIdHint_IHandler();
    private static void n_SetExpandedComponentIdHint_I(IntPtr jnienv, IntPtr native__this, int expandedComponentIdHint);
    [RegisterAttribute("getExpandedComponentIdHint", "()I", "GetGetExpandedComponentIdHintHandler")]
public virtual int get_ExpandedComponentIdHint();
    [RegisterAttribute("setExpandedComponentIdHint", "(I)V", "GetSetExpandedComponentIdHint_IHandler")]
public virtual void set_ExpandedComponentIdHint(int value);
    private static Delegate GetGetHideMotionSpecHandler();
    private static IntPtr n_GetHideMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetHideMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_spec);
    [RegisterAttribute("getHideMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetHideMotionSpecHandler")]
public virtual MotionSpec get_HideMotionSpec();
    [RegisterAttribute("setHideMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetHideMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_HideMotionSpec(MotionSpec value);
    private static Delegate GetIsExpandedHandler();
    private static bool n_IsExpanded(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isExpanded", "()Z", "GetIsExpandedHandler")]
public virtual bool get_IsExpanded();
    private static Delegate GetIsOrWillBeHiddenHandler();
    private static bool n_IsOrWillBeHidden(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOrWillBeHidden", "()Z", "GetIsOrWillBeHiddenHandler")]
public virtual bool get_IsOrWillBeHidden();
    private static Delegate GetIsOrWillBeShownHandler();
    private static bool n_IsOrWillBeShown(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOrWillBeShown", "()Z", "GetIsOrWillBeShownHandler")]
public virtual bool get_IsOrWillBeShown();
    private static Delegate GetGetRippleColorHandler();
    private static int n_GetRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRippleColor_IHandler();
    private static void n_SetRippleColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getRippleColor", "()I", "GetGetRippleColorHandler")]
public virtual int get_RippleColor();
    [RegisterAttribute("setRippleColor", "(I)V", "GetSetRippleColor_IHandler")]
public virtual void set_RippleColor(int value);
    private static Delegate GetGetRippleColorStateListHandler();
    private static IntPtr n_GetRippleColorStateList(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRippleColorStateList", "()Landroid/content/res/ColorStateList;", "GetGetRippleColorStateListHandler")]
public virtual ColorStateList get_RippleColorStateList();
    private static Delegate GetGetShowMotionSpecHandler();
    private static IntPtr n_GetShowMotionSpec(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler();
    private static void n_SetShowMotionSpec_Landroid_support_design_animation_MotionSpec_(IntPtr jnienv, IntPtr native__this, IntPtr native_spec);
    [RegisterAttribute("getShowMotionSpec", "()Landroid/support/design/animation/MotionSpec;", "GetGetShowMotionSpecHandler")]
public virtual MotionSpec get_ShowMotionSpec();
    [RegisterAttribute("setShowMotionSpec", "(Landroid/support/design/animation/MotionSpec;)V", "GetSetShowMotionSpec_Landroid_support_design_animation_MotionSpec_Handler")]
public virtual void set_ShowMotionSpec(MotionSpec value);
    private static Delegate GetGetSizeHandler();
    private static int n_GetSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSize_IHandler();
    private static void n_SetSize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("getSize", "()I", "GetGetSizeHandler")]
public virtual int get_Size();
    [RegisterAttribute("setSize", "(I)V", "GetSetSize_IHandler")]
public virtual void set_Size(int value);
    private static Delegate GetGetSupportBackgroundTintListHandler();
    private static IntPtr n_GetSupportBackgroundTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportBackgroundTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getSupportBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportBackgroundTintListHandler")]
public virtual ColorStateList get_SupportBackgroundTintList();
    [RegisterAttribute("setSupportBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_SupportBackgroundTintList(ColorStateList value);
    private static Delegate GetGetSupportBackgroundTintModeHandler();
    private static IntPtr n_GetSupportBackgroundTintMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    [RegisterAttribute("getSupportBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportBackgroundTintModeHandler")]
public virtual Mode get_SupportBackgroundTintMode();
    [RegisterAttribute("setSupportBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void set_SupportBackgroundTintMode(Mode value);
    private static Delegate GetGetSupportImageTintListHandler();
    private static IntPtr n_GetSupportImageTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportImageTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportImageTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getSupportImageTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportImageTintListHandler")]
public virtual ColorStateList get_SupportImageTintList();
    [RegisterAttribute("setSupportImageTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportImageTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_SupportImageTintList(ColorStateList value);
    private static Delegate GetGetSupportImageTintModeHandler();
    private static IntPtr n_GetSupportImageTintMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    [RegisterAttribute("getSupportImageTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportImageTintModeHandler")]
public virtual Mode get_SupportImageTintMode();
    [RegisterAttribute("setSupportImageTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void set_SupportImageTintMode(Mode value);
    private static Delegate GetGetUseCompatPaddingHandler();
    private static bool n_GetUseCompatPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetUseCompatPadding_ZHandler();
    private static void n_SetUseCompatPadding_Z(IntPtr jnienv, IntPtr native__this, bool useCompatPadding);
    [RegisterAttribute("getUseCompatPadding", "()Z", "GetGetUseCompatPaddingHandler")]
public virtual bool get_UseCompatPadding();
    [RegisterAttribute("setUseCompatPadding", "(Z)V", "GetSetUseCompatPadding_ZHandler")]
public virtual void set_UseCompatPadding(bool value);
    private static Delegate GetAddOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_AddOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnHideAnimationListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void AddOnHideAnimationListener(IAnimatorListener listener);
    private static Delegate GetAddOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_AddOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnShowAnimationListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetAddOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void AddOnShowAnimationListener(IAnimatorListener listener);
    private static Delegate GetClearCustomSizeHandler();
    private static void n_ClearCustomSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearCustomSize", "()V", "GetClearCustomSizeHandler")]
public virtual void ClearCustomSize();
    private static Delegate GetGetContentRect_Landroid_graphics_Rect_Handler();
    private static bool n_GetContentRect_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getContentRect", "(Landroid/graphics/Rect;)Z", "GetGetContentRect_Landroid_graphics_Rect_Handler")]
public virtual bool GetContentRect(Rect rect);
    private static Delegate GetGetMeasuredContentRect_Landroid_graphics_Rect_Handler();
    private static void n_GetMeasuredContentRect_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [RegisterAttribute("getMeasuredContentRect", "(Landroid/graphics/Rect;)V", "GetGetMeasuredContentRect_Landroid_graphics_Rect_Handler")]
public virtual void GetMeasuredContentRect(Rect rect);
    private static Delegate GetHideHandler();
    private static void n_Hide(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hide", "()V", "GetHideHandler")]
public virtual void Hide();
    private static Delegate GetHide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler();
    private static void n_Hide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("hide", "(Landroid/support/design/widget/FloatingActionButton$OnVisibilityChangedListener;)V", "GetHide_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler")]
public virtual void Hide(OnVisibilityChangedListener listener);
    private static Delegate GetRemoveOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_RemoveOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnHideAnimationListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveOnHideAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void RemoveOnHideAnimationListener(IAnimatorListener listener);
    private static Delegate GetRemoveOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler();
    private static void n_RemoveOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnShowAnimationListener", "(Landroid/animation/Animator$AnimatorListener;)V", "GetRemoveOnShowAnimationListener_Landroid_animation_Animator_AnimatorListener_Handler")]
public virtual void RemoveOnShowAnimationListener(IAnimatorListener listener);
    private static Delegate GetSetCompatElevationResource_IHandler();
    private static void n_SetCompatElevationResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCompatElevationResource", "(I)V", "GetSetCompatElevationResource_IHandler")]
public virtual void SetCompatElevationResource(int id);
    private static Delegate GetSetCompatHoveredFocusedTranslationZResource_IHandler();
    private static void n_SetCompatHoveredFocusedTranslationZResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCompatHoveredFocusedTranslationZResource", "(I)V", "GetSetCompatHoveredFocusedTranslationZResource_IHandler")]
public virtual void SetCompatHoveredFocusedTranslationZResource(int id);
    private static Delegate GetSetCompatPressedTranslationZResource_IHandler();
    private static void n_SetCompatPressedTranslationZResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCompatPressedTranslationZResource", "(I)V", "GetSetCompatPressedTranslationZResource_IHandler")]
public virtual void SetCompatPressedTranslationZResource(int id);
    private static Delegate GetSetExpanded_ZHandler();
    private static bool n_SetExpanded_Z(IntPtr jnienv, IntPtr native__this, bool expanded);
    [RegisterAttribute("setExpanded", "(Z)Z", "GetSetExpanded_ZHandler")]
public virtual bool SetExpanded(bool expanded);
    private static Delegate GetSetHideMotionSpecResource_IHandler();
    private static void n_SetHideMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setHideMotionSpecResource", "(I)V", "GetSetHideMotionSpecResource_IHandler")]
public virtual void SetHideMotionSpecResource(int id);
    private static Delegate GetSetRippleColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetRippleColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("setRippleColor", "(Landroid/content/res/ColorStateList;)V", "GetSetRippleColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetRippleColor(ColorStateList color);
    private static Delegate GetSetShowMotionSpecResource_IHandler();
    private static void n_SetShowMotionSpecResource_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setShowMotionSpecResource", "(I)V", "GetSetShowMotionSpecResource_IHandler")]
public virtual void SetShowMotionSpecResource(int id);
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
    private static Delegate GetShow_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler();
    private static void n_Show_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_visibility);
    [RegisterAttribute("show", "(Landroid/support/design/widget/FloatingActionButton$OnVisibilityChangedListener;)V", "GetShow_Landroid_support_design_widget_FloatingActionButton_OnVisibilityChangedListener_Handler")]
public virtual void Show(OnVisibilityChangedListener visibility);
}
[RegisterAttribute("android/support/design/widget/HeaderBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class Android.Support.Design.Widget.HeaderBehavior : ViewOffsetBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_onInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_onTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected HeaderBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public HeaderBehavior(Context context, IAttributeSet attrs);
    private static HeaderBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_ev);
    [RegisterAttribute("onInterceptTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnInterceptTouchEvent(CoordinatorLayout parent, Object child, MotionEvent ev);
    private static Delegate GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_ev);
    [RegisterAttribute("onTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouchEvent(CoordinatorLayout parent, Object child, MotionEvent ev);
}
[RegisterAttribute("android/support/design/widget/HeaderBehavior")]
internal class Android.Support.Design.Widget.HeaderBehaviorInvoker : HeaderBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public HeaderBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static HeaderBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/HeaderScrollingViewBehavior")]
public abstract class Android.Support.Design.Widget.HeaderScrollingViewBehavior : ViewOffsetBehavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_onMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIII;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int OverlayTop { get; public set; }
    protected HeaderScrollingViewBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public HeaderScrollingViewBehavior(Context context, IAttributeSet attrs);
    private static HeaderScrollingViewBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOverlayTop", "()I", "GetGetOverlayTopHandler")]
public int get_OverlayTop();
    [RegisterAttribute("setOverlayTop", "(I)V", "GetSetOverlayTop_IHandler")]
public void set_OverlayTop(int value);
    private static Delegate GetOnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIIIHandler();
    private static bool n_OnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
    [RegisterAttribute("onMeasureChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;IIII)Z", "GetOnMeasureChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IIIIHandler")]
public virtual bool OnMeasureChild(CoordinatorLayout parent, View child, int parentWidthMeasureSpec, int widthUsed, int parentHeightMeasureSpec, int heightUsed);
}
[RegisterAttribute("android/support/design/widget/HeaderScrollingViewBehavior")]
internal class Android.Support.Design.Widget.HeaderScrollingViewBehaviorInvoker : HeaderScrollingViewBehavior {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public HeaderScrollingViewBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static HeaderScrollingViewBehaviorInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/ShadowViewDelegate", "", "Android.Support.Design.Widget.IShadowViewDelegateInvoker")]
public interface Android.Support.Design.Widget.IShadowViewDelegate {
    public bool IsCompatPaddingEnabled { get; }
    public float Radius { get; }
    [RegisterAttribute("isCompatPaddingEnabled", "()Z", "GetIsCompatPaddingEnabledHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual bool get_IsCompatPaddingEnabled();
    [RegisterAttribute("getRadius", "()F", "GetGetRadiusHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual float get_Radius();
    [RegisterAttribute("setBackgroundDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void SetBackgroundDrawable(Drawable p0);
    [RegisterAttribute("setShadowPadding", "(IIII)V", "GetSetShadowPadding_IIIIHandler:Android.Support.Design.Widget.IShadowViewDelegateInvoker, Xamarin.Android.Support.Design")]
public abstract virtual void SetShadowPadding(int p0, int p1, int p2, int p3);
}
[RegisterAttribute("android/support/design/widget/ShadowViewDelegate")]
internal class Android.Support.Design.Widget.IShadowViewDelegateInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isCompatPaddingEnabled;
    private IntPtr id_isCompatPaddingEnabled;
    private static Delegate cb_getRadius;
    private IntPtr id_getRadius;
    private static Delegate cb_setBackgroundDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setBackgroundDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowPadding_IIII;
    private IntPtr id_setShadowPadding_IIII;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsCompatPaddingEnabled { get; }
    public float Radius { get; }
    public IShadowViewDelegateInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IShadowViewDelegateInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IShadowViewDelegate GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsCompatPaddingEnabledHandler();
    private static bool n_IsCompatPaddingEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompatPaddingEnabled();
    private static Delegate GetGetRadiusHandler();
    private static float n_GetRadius(IntPtr jnienv, IntPtr native__this);
    public sealed virtual float get_Radius();
    private static Delegate GetSetBackgroundDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetBackgroundDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetBackgroundDrawable(Drawable p0);
    private static Delegate GetSetShadowPadding_IIIIHandler();
    private static void n_SetShadowPadding_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    public sealed virtual void SetShadowPadding(int p0, int p1, int p2, int p3);
}
[RegisterAttribute("android/support/design/widget/MathUtils")]
public class Android.Support.Design.Widget.MathUtils : Object {
    [RegisterAttribute("DEFAULT_EPSILON")]
public static float DefaultEpsilon;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal MathUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static MathUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("dist", "(FFFF)F", "")]
public static float Dist(float x1, float y1, float x2, float y2);
    [RegisterAttribute("distanceToFurthestCorner", "(FFFFFF)F", "")]
public static float DistanceToFurthestCorner(float pointX, float pointY, float rectLeft, float rectTop, float rectRight, float rectBottom);
    [RegisterAttribute("geq", "(FFF)Z", "")]
public static bool Geq(float a, float b, float epsilon);
    [RegisterAttribute("lerp", "(FFF)F", "")]
public static float Lerp(float start, float stop, float amount);
}
[RegisterAttribute("android/support/design/widget/NavigationView")]
public class Android.Support.Design.Widget.NavigationView : ScrimInsetsFrameLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCheckedItem;
    private static Delegate cb_setCheckedItem_Landroid_view_MenuItem_;
    private static Delegate cb_getHeaderCount;
    private static Delegate cb_getItemBackground;
    private static Delegate cb_setItemBackground_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_getItemHorizontalPadding;
    private static Delegate cb_setItemHorizontalPadding_I;
    private static Delegate cb_getItemIconPadding;
    private static Delegate cb_setItemIconPadding_I;
    private static Delegate cb_getItemIconTintList;
    private static Delegate cb_setItemIconTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getItemTextColor;
    private static Delegate cb_setItemTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getMenu;
    private static Delegate cb_addHeaderView_Landroid_view_View_;
    private static Delegate cb_getHeaderView_I;
    private static Delegate cb_inflateHeaderView_I;
    private static Delegate cb_inflateMenu_I;
    private static Delegate cb_removeHeaderView_Landroid_view_View_;
    private static Delegate cb_setCheckedItem_I;
    private static Delegate cb_setItemBackgroundResource_I;
    private static Delegate cb_setItemHorizontalPaddingResource_I;
    private static Delegate cb_setItemIconPaddingResource_I;
    private static Delegate cb_setItemTextAppearance_I;
    private static Delegate cb_setNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_;
    private WeakReference weak_implementor_SetNavigationItemSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IMenuItem CheckedItem { get; public set; }
    public int HeaderCount { get; }
    public Drawable ItemBackground { get; public set; }
    public int ItemHorizontalPadding { get; public set; }
    public int ItemIconPadding { get; public set; }
    public ColorStateList ItemIconTintList { get; public set; }
    public ColorStateList ItemTextColor { get; public set; }
    public IMenu Menu { get; }
    protected NavigationView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NavigationView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NavigationView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NavigationView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NavigationView();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCheckedItemHandler();
    private static IntPtr n_GetCheckedItem(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCheckedItem_Landroid_view_MenuItem_Handler();
    private static void n_SetCheckedItem_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_checkedItem);
    [RegisterAttribute("getCheckedItem", "()Landroid/view/MenuItem;", "GetGetCheckedItemHandler")]
public virtual IMenuItem get_CheckedItem();
    [RegisterAttribute("setCheckedItem", "(Landroid/view/MenuItem;)V", "GetSetCheckedItem_Landroid_view_MenuItem_Handler")]
public virtual void set_CheckedItem(IMenuItem value);
    private static Delegate GetGetHeaderCountHandler();
    private static int n_GetHeaderCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHeaderCount", "()I", "GetGetHeaderCountHandler")]
public virtual int get_HeaderCount();
    private static Delegate GetGetItemBackgroundHandler();
    private static IntPtr n_GetItemBackground(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetItemBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemBackground);
    [RegisterAttribute("getItemBackground", "()Landroid/graphics/drawable/Drawable;", "GetGetItemBackgroundHandler")]
public virtual Drawable get_ItemBackground();
    [RegisterAttribute("setItemBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetItemBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_ItemBackground(Drawable value);
    private static Delegate GetGetItemHorizontalPaddingHandler();
    private static int n_GetItemHorizontalPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemHorizontalPadding_IHandler();
    private static void n_SetItemHorizontalPadding_I(IntPtr jnienv, IntPtr native__this, int padding);
    [RegisterAttribute("getItemHorizontalPadding", "()I", "GetGetItemHorizontalPaddingHandler")]
public virtual int get_ItemHorizontalPadding();
    [RegisterAttribute("setItemHorizontalPadding", "(I)V", "GetSetItemHorizontalPadding_IHandler")]
public virtual void set_ItemHorizontalPadding(int value);
    private static Delegate GetGetItemIconPaddingHandler();
    private static int n_GetItemIconPadding(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconPadding_IHandler();
    private static void n_SetItemIconPadding_I(IntPtr jnienv, IntPtr native__this, int padding);
    [RegisterAttribute("getItemIconPadding", "()I", "GetGetItemIconPaddingHandler")]
public virtual int get_ItemIconPadding();
    [RegisterAttribute("setItemIconPadding", "(I)V", "GetSetItemIconPadding_IHandler")]
public virtual void set_ItemIconPadding(int value);
    private static Delegate GetGetItemIconTintListHandler();
    private static IntPtr n_GetItemIconTintList(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("getItemIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetItemIconTintListHandler")]
public virtual ColorStateList get_ItemIconTintList();
    [RegisterAttribute("setItemIconTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetItemIconTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemIconTintList(ColorStateList value);
    private static Delegate GetGetItemTextColorHandler();
    private static IntPtr n_GetItemTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetItemTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getItemTextColor", "()Landroid/content/res/ColorStateList;", "GetGetItemTextColorHandler")]
public virtual ColorStateList get_ItemTextColor();
    [RegisterAttribute("setItemTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetItemTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_ItemTextColor(ColorStateList value);
    private static Delegate GetGetMenuHandler();
    private static IntPtr n_GetMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMenu", "()Landroid/view/Menu;", "GetGetMenuHandler")]
public virtual IMenu get_Menu();
    private static Delegate GetAddHeaderView_Landroid_view_View_Handler();
    private static void n_AddHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("addHeaderView", "(Landroid/view/View;)V", "GetAddHeaderView_Landroid_view_View_Handler")]
public virtual void AddHeaderView(View view);
    private static Delegate GetGetHeaderView_IHandler();
    private static IntPtr n_GetHeaderView_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getHeaderView", "(I)Landroid/view/View;", "GetGetHeaderView_IHandler")]
public virtual View GetHeaderView(int index);
    private static Delegate GetInflateHeaderView_IHandler();
    private static IntPtr n_InflateHeaderView_I(IntPtr jnienv, IntPtr native__this, int res);
    [RegisterAttribute("inflateHeaderView", "(I)Landroid/view/View;", "GetInflateHeaderView_IHandler")]
public virtual View InflateHeaderView(int res);
    private static Delegate GetInflateMenu_IHandler();
    private static void n_InflateMenu_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("inflateMenu", "(I)V", "GetInflateMenu_IHandler")]
public virtual void InflateMenu(int resId);
    private static Delegate GetRemoveHeaderView_Landroid_view_View_Handler();
    private static void n_RemoveHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("removeHeaderView", "(Landroid/view/View;)V", "GetRemoveHeaderView_Landroid_view_View_Handler")]
public virtual void RemoveHeaderView(View view);
    private static Delegate GetSetCheckedItem_IHandler();
    private static void n_SetCheckedItem_I(IntPtr jnienv, IntPtr native__this, int id);
    [RegisterAttribute("setCheckedItem", "(I)V", "GetSetCheckedItem_IHandler")]
public virtual void SetCheckedItem(int id);
    private static Delegate GetSetItemBackgroundResource_IHandler();
    private static void n_SetItemBackgroundResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setItemBackgroundResource", "(I)V", "GetSetItemBackgroundResource_IHandler")]
public virtual void SetItemBackgroundResource(int resId);
    private static Delegate GetSetItemHorizontalPaddingResource_IHandler();
    private static void n_SetItemHorizontalPaddingResource_I(IntPtr jnienv, IntPtr native__this, int paddingResource);
    [RegisterAttribute("setItemHorizontalPaddingResource", "(I)V", "GetSetItemHorizontalPaddingResource_IHandler")]
public virtual void SetItemHorizontalPaddingResource(int paddingResource);
    private static Delegate GetSetItemIconPaddingResource_IHandler();
    private static void n_SetItemIconPaddingResource_I(IntPtr jnienv, IntPtr native__this, int paddingResource);
    [RegisterAttribute("setItemIconPaddingResource", "(I)V", "GetSetItemIconPaddingResource_IHandler")]
public virtual void SetItemIconPaddingResource(int paddingResource);
    private static Delegate GetSetItemTextAppearance_IHandler();
    private static void n_SetItemTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setItemTextAppearance", "(I)V", "GetSetItemTextAppearance_IHandler")]
public virtual void SetItemTextAppearance(int resId);
    private static Delegate GetSetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_Handler();
    private static void n_SetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setNavigationItemSelectedListener", "(Landroid/support/design/widget/NavigationView$OnNavigationItemSelectedListener;)V", "GetSetNavigationItemSelectedListener_Landroid_support_design_widget_NavigationView_OnNavigationItemSelectedListener_Handler")]
public virtual void SetNavigationItemSelectedListener(IOnNavigationItemSelectedListener listener);
    public void add_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    public void remove_NavigationItemSelected(EventHandler`1<NavigationItemSelectedEventArgs> value);
    private IOnNavigationItemSelectedListenerImplementor __CreateIOnNavigationItemSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/ShadowDrawableWrapper")]
public class Android.Support.Design.Widget.ShadowDrawableWrapper : DrawableWrapper {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCornerRadius;
    private static Delegate cb_setCornerRadius_F;
    private static Delegate cb_getMaxShadowSize;
    private static Delegate cb_setMaxShadowSize_F;
    private static Delegate cb_getMinHeight;
    private static Delegate cb_getMinWidth;
    private static Delegate cb_getShadowSize;
    private static Delegate cb_setShadowSize_F;
    private static Delegate cb_setAddPaddingForCorners_Z;
    private static Delegate cb_setShadowSize_FF;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public float CornerRadius { get; public set; }
    public float MaxShadowSize { get; public set; }
    public float MinHeight { get; }
    public float MinWidth { get; }
    public float ShadowSize { get; public set; }
    protected ShadowDrawableWrapper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/graphics/drawable/Drawable;FFF)V", "")]
public ShadowDrawableWrapper(Context context, Drawable content, float radius, float shadowSize, float maxShadowSize);
    private static ShadowDrawableWrapper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCornerRadiusHandler();
    private static float n_GetCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCornerRadius_FHandler();
    private static void n_SetCornerRadius_F(IntPtr jnienv, IntPtr native__this, float radius);
    [RegisterAttribute("getCornerRadius", "()F", "GetGetCornerRadiusHandler")]
public virtual float get_CornerRadius();
    [RegisterAttribute("setCornerRadius", "(F)V", "GetSetCornerRadius_FHandler")]
public virtual void set_CornerRadius(float value);
    private static Delegate GetGetMaxShadowSizeHandler();
    private static float n_GetMaxShadowSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetMaxShadowSize_FHandler();
    private static void n_SetMaxShadowSize_F(IntPtr jnienv, IntPtr native__this, float size);
    [RegisterAttribute("getMaxShadowSize", "()F", "GetGetMaxShadowSizeHandler")]
public virtual float get_MaxShadowSize();
    [RegisterAttribute("setMaxShadowSize", "(F)V", "GetSetMaxShadowSize_FHandler")]
public virtual void set_MaxShadowSize(float value);
    private static Delegate GetGetMinHeightHandler();
    private static float n_GetMinHeight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinHeight", "()F", "GetGetMinHeightHandler")]
public virtual float get_MinHeight();
    private static Delegate GetGetMinWidthHandler();
    private static float n_GetMinWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinWidth", "()F", "GetGetMinWidthHandler")]
public virtual float get_MinWidth();
    private static Delegate GetGetShadowSizeHandler();
    private static float n_GetShadowSize(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShadowSize_FHandler();
    private static void n_SetShadowSize_F(IntPtr jnienv, IntPtr native__this, float size);
    [RegisterAttribute("getShadowSize", "()F", "GetGetShadowSizeHandler")]
public virtual float get_ShadowSize();
    [RegisterAttribute("setShadowSize", "(F)V", "GetSetShadowSize_FHandler")]
public virtual void set_ShadowSize(float value);
    [RegisterAttribute("calculateHorizontalPadding", "(FFZ)F", "")]
public static float CalculateHorizontalPadding(float maxShadowSize, float cornerRadius, bool addPaddingForCorners);
    [RegisterAttribute("calculateVerticalPadding", "(FFZ)F", "")]
public static float CalculateVerticalPadding(float maxShadowSize, float cornerRadius, bool addPaddingForCorners);
    private static Delegate GetSetAddPaddingForCorners_ZHandler();
    private static void n_SetAddPaddingForCorners_Z(IntPtr jnienv, IntPtr native__this, bool addPaddingForCorners);
    [RegisterAttribute("setAddPaddingForCorners", "(Z)V", "GetSetAddPaddingForCorners_ZHandler")]
public virtual void SetAddPaddingForCorners(bool addPaddingForCorners);
    [RegisterAttribute("setRotation", "(F)V", "")]
public void SetRotation(float rotation);
    private static Delegate GetSetShadowSize_FFHandler();
    private static void n_SetShadowSize_FF(IntPtr jnienv, IntPtr native__this, float shadowSize, float maxShadowSize);
    [RegisterAttribute("setShadowSize", "(FF)V", "GetSetShadowSize_FFHandler")]
public virtual void SetShadowSize(float shadowSize, float maxShadowSize);
}
[RegisterAttribute("android/support/design/widget/Snackbar")]
public class Android.Support.Design.Widget.Snackbar : BaseTransientBottomBar {
    [RegisterAttribute("LENGTH_INDEFINITE")]
public static int LengthIndefinite;
    [RegisterAttribute("LENGTH_LONG")]
public static int LengthLong;
    [RegisterAttribute("LENGTH_SHORT")]
public static int LengthShort;
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal Snackbar(IntPtr javaReference, JniHandleOwnership transfer);
    private static Snackbar();
    public Snackbar SetAction(string text, Action`1<View> clickHandler);
    public Snackbar SetAction(ICharSequence text, Action`1<View> clickHandler);
    public Snackbar SetAction(int resId, Action`1<View> clickHandler);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasSnackbarButtonStyleAttr", "(Landroid/content/Context;)Z", "")]
protected static bool HasSnackbarButtonStyleAttr(Context context);
    [RegisterAttribute("make", "(Landroid/view/View;II)Landroid/support/design/widget/Snackbar;", "")]
public static Snackbar Make(View view, int resId, int duration);
    [RegisterAttribute("make", "(Landroid/view/View;Ljava/lang/CharSequence;I)Landroid/support/design/widget/Snackbar;", "")]
public static Snackbar Make(View view, ICharSequence text, int duration);
    public static Snackbar Make(View view, string text, int duration);
    [RegisterAttribute("setAction", "(ILandroid/view/View$OnClickListener;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetAction(int resId, IOnClickListener listener);
    [RegisterAttribute("setAction", "(Ljava/lang/CharSequence;Landroid/view/View$OnClickListener;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetAction(ICharSequence text, IOnClickListener listener);
    public Snackbar SetAction(string text, IOnClickListener listener);
    [RegisterAttribute("setActionTextColor", "(Landroid/content/res/ColorStateList;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetActionTextColor(ColorStateList colors);
    [RegisterAttribute("setActionTextColor", "(I)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetActionTextColor(int color);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setCallback", "(Landroid/support/design/widget/Snackbar$Callback;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetCallback(Callback callback);
    [RegisterAttribute("setText", "(I)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetText(int resId);
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)Landroid/support/design/widget/Snackbar;", "")]
public Snackbar SetText(ICharSequence message);
    public Snackbar SetText(string message);
}
[RegisterAttribute("android/support/design/widget/SnackbarContentLayout")]
public class Android.Support.Design.Widget.SnackbarContentLayout : LinearLayout {
    internal static JniPeerMembers _members;
    private static Delegate cb_getActionView;
    private static Delegate cb_getMessageView;
    private static Delegate cb_animateContentIn_II;
    private static Delegate cb_animateContentOut_II;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Button ActionView { get; }
    public TextView MessageView { get; }
    protected SnackbarContentLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SnackbarContentLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SnackbarContentLayout(Context context, IAttributeSet attrs);
    private static SnackbarContentLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetActionViewHandler();
    private static IntPtr n_GetActionView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActionView", "()Landroid/widget/Button;", "GetGetActionViewHandler")]
public virtual Button get_ActionView();
    private static Delegate GetGetMessageViewHandler();
    private static IntPtr n_GetMessageView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMessageView", "()Landroid/widget/TextView;", "GetGetMessageViewHandler")]
public virtual TextView get_MessageView();
    private static Delegate GetAnimateContentIn_IIHandler();
    private static void n_AnimateContentIn_II(IntPtr jnienv, IntPtr native__this, int delay, int duration);
    [RegisterAttribute("animateContentIn", "(II)V", "GetAnimateContentIn_IIHandler")]
public virtual void AnimateContentIn(int delay, int duration);
    private static Delegate GetAnimateContentOut_IIHandler();
    private static void n_AnimateContentOut_II(IntPtr jnienv, IntPtr native__this, int delay, int duration);
    [RegisterAttribute("animateContentOut", "(II)V", "GetAnimateContentOut_IIHandler")]
public virtual void AnimateContentOut(int delay, int duration);
}
[RegisterAttribute("android/support/design/widget/StateListAnimator")]
public class Android.Support.Design.Widget.StateListAnimator : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal StateListAnimator(IntPtr javaReference, JniHandleOwnership transfer);
    private static StateListAnimator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addState", "([ILandroid/animation/ValueAnimator;)V", "")]
public void AddState(Int32[] specs, ValueAnimator animator);
    [RegisterAttribute("jumpToCurrentState", "()V", "")]
public void JumpToCurrentState();
    [RegisterAttribute("setState", "([I)V", "")]
public void SetState(Int32[] state);
}
[RegisterAttribute("android/support/design/widget/SwipeDismissBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.SwipeDismissBehavior : Behavior {
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_IDLE")]
public static int StateIdle;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    [RegisterAttribute("SWIPE_DIRECTION_ANY")]
public static int SwipeDirectionAny;
    [RegisterAttribute("SWIPE_DIRECTION_END_TO_START")]
public static int SwipeDirectionEndToStart;
    [RegisterAttribute("SWIPE_DIRECTION_START_TO_END")]
public static int SwipeDirectionStartToEnd;
    internal static JniPeerMembers _members;
    private static Delegate cb_getDragState;
    private static Delegate cb_canSwipeDismissView_Landroid_view_View_;
    private static Delegate cb_onInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_onTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_;
    private static Delegate cb_setDragDismissDistance_F;
    private static Delegate cb_setEndAlphaSwipeDistance_F;
    private static Delegate cb_setListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_;
    private static Delegate cb_setSensitivity_F;
    private static Delegate cb_setStartAlphaSwipeDistance_F;
    private static Delegate cb_setSwipeDirection_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int DragState { get; }
    protected SwipeDismissBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    private static SwipeDismissBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDragStateHandler();
    private static int n_GetDragState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDragState", "()I", "GetGetDragStateHandler")]
public virtual int get_DragState();
    private static Delegate GetCanSwipeDismissView_Landroid_view_View_Handler();
    private static bool n_CanSwipeDismissView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("canSwipeDismissView", "(Landroid/view/View;)Z", "GetCanSwipeDismissView_Landroid_view_View_Handler")]
public virtual bool CanSwipeDismissView(View view);
    private static Delegate GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_event);
    [RegisterAttribute("onInterceptTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnInterceptTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnInterceptTouchEvent(CoordinatorLayout parent, Object child, MotionEvent event_);
    private static Delegate GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, IntPtr native_event);
    [RegisterAttribute("onTouchEvent", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouchEvent_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouchEvent(CoordinatorLayout parent, Object child, MotionEvent event_);
    private static Delegate GetSetDragDismissDistance_FHandler();
    private static void n_SetDragDismissDistance_F(IntPtr jnienv, IntPtr native__this, float distance);
    [RegisterAttribute("setDragDismissDistance", "(F)V", "GetSetDragDismissDistance_FHandler")]
public virtual void SetDragDismissDistance(float distance);
    private static Delegate GetSetEndAlphaSwipeDistance_FHandler();
    private static void n_SetEndAlphaSwipeDistance_F(IntPtr jnienv, IntPtr native__this, float fraction);
    [RegisterAttribute("setEndAlphaSwipeDistance", "(F)V", "GetSetEndAlphaSwipeDistance_FHandler")]
public virtual void SetEndAlphaSwipeDistance(float fraction);
    private static Delegate GetSetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_Handler();
    private static void n_SetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setListener", "(Landroid/support/design/widget/SwipeDismissBehavior$OnDismissListener;)V", "GetSetListener_Landroid_support_design_widget_SwipeDismissBehavior_OnDismissListener_Handler")]
public virtual void SetListener(IOnDismissListener listener);
    private static Delegate GetSetSensitivity_FHandler();
    private static void n_SetSensitivity_F(IntPtr jnienv, IntPtr native__this, float sensitivity);
    [RegisterAttribute("setSensitivity", "(F)V", "GetSetSensitivity_FHandler")]
public virtual void SetSensitivity(float sensitivity);
    private static Delegate GetSetStartAlphaSwipeDistance_FHandler();
    private static void n_SetStartAlphaSwipeDistance_F(IntPtr jnienv, IntPtr native__this, float fraction);
    [RegisterAttribute("setStartAlphaSwipeDistance", "(F)V", "GetSetStartAlphaSwipeDistance_FHandler")]
public virtual void SetStartAlphaSwipeDistance(float fraction);
    private static Delegate GetSetSwipeDirection_IHandler();
    private static void n_SetSwipeDirection_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("setSwipeDirection", "(I)V", "GetSetSwipeDirection_IHandler")]
public virtual void SetSwipeDirection(int direction);
    private IOnDismissListenerImplementor __CreateIOnDismissListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/TabItem")]
public class Android.Support.Design.Widget.TabItem : View {
    internal static JniPeerMembers _members;
    [RegisterAttribute("customLayout")]
public int CustomLayout { get; public set; }
    [RegisterAttribute("icon")]
public Drawable Icon { get; public set; }
    [RegisterAttribute("text")]
public ICharSequence Text { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TabItem(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TabItem(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TabItem(Context context, IAttributeSet attrs);
    private static TabItem();
    public int get_CustomLayout();
    public void set_CustomLayout(int value);
    public Drawable get_Icon();
    public void set_Icon(Drawable value);
    public ICharSequence get_Text();
    public void set_Text(ICharSequence value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/TabLayout")]
public class Android.Support.Design.Widget.TabLayout : HorizontalScrollView {
    [RegisterAttribute("GRAVITY_CENTER")]
public static int GravityCenter;
    [RegisterAttribute("GRAVITY_FILL")]
public static int GravityFill;
    [RegisterAttribute("INDICATOR_GRAVITY_BOTTOM")]
public static int IndicatorGravityBottom;
    [RegisterAttribute("INDICATOR_GRAVITY_CENTER")]
public static int IndicatorGravityCenter;
    [RegisterAttribute("INDICATOR_GRAVITY_STRETCH")]
public static int IndicatorGravityStretch;
    [RegisterAttribute("INDICATOR_GRAVITY_TOP")]
public static int IndicatorGravityTop;
    [RegisterAttribute("MODE_FIXED")]
public static int ModeFixed;
    [RegisterAttribute("MODE_SCROLLABLE")]
public static int ModeScrollable;
    internal static JniPeerMembers _members;
    private static Delegate cb_hasUnboundedRipple;
    private static Delegate cb_isInlineLabel;
    private static Delegate cb_setInlineLabel_Z;
    private static Delegate cb_getSelectedTabPosition;
    private static Delegate cb_getTabCount;
    private static Delegate cb_getTabGravity;
    private static Delegate cb_setTabGravity_I;
    private static Delegate cb_getTabIconTint;
    private static Delegate cb_setTabIconTint_Landroid_content_res_ColorStateList_;
    private static Delegate cb_isTabIndicatorFullWidth;
    private static Delegate cb_setTabIndicatorFullWidth_Z;
    private static Delegate cb_getTabIndicatorGravity;
    private static Delegate cb_getTabMode;
    private static Delegate cb_setTabMode_I;
    private static Delegate cb_getTabRippleColor;
    private static Delegate cb_setTabRippleColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getTabSelectedIndicator;
    private static Delegate cb_getTabTextColors;
    private static Delegate cb_setTabTextColors_Landroid_content_res_ColorStateList_;
    private static Delegate cb_addOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_Z;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_I;
    private static Delegate cb_addTab_Landroid_support_design_widget_TabLayout_Tab_IZ;
    private static Delegate cb_clearOnTabSelectedListeners;
    private static Delegate cb_createTabFromPool;
    private static Delegate cb_getTabAt_I;
    private static Delegate cb_newTab;
    private static Delegate cb_releaseFromTabPool_Landroid_support_design_widget_TabLayout_Tab_;
    private static Delegate cb_removeAllTabs;
    private static Delegate cb_removeOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_;
    private static Delegate cb_removeTab_Landroid_support_design_widget_TabLayout_Tab_;
    private static Delegate cb_removeTabAt_I;
    private static Delegate cb_setInlineLabelResource_I;
    private static Delegate cb_setOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_;
    private static Delegate cb_setScrollPosition_IFZ;
    private static Delegate cb_setSelectedTabIndicator_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setSelectedTabIndicator_I;
    private static Delegate cb_setSelectedTabIndicatorColor_I;
    private static Delegate cb_setSelectedTabIndicatorGravity_I;
    private static Delegate cb_setSelectedTabIndicatorHeight_I;
    private static Delegate cb_setTabIconTintResource_I;
    private static Delegate cb_setTabRippleColorResource_I;
    private static Delegate cb_setTabTextColors_II;
    private static Delegate cb_setTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_;
    private static Delegate cb_setUnboundedRipple_Z;
    private static Delegate cb_setUnboundedRippleResource_I;
    private static Delegate cb_setupWithViewPager_Landroid_support_v4_view_ViewPager_;
    private static Delegate cb_setupWithViewPager_Landroid_support_v4_view_ViewPager_Z;
    private WeakReference weak_implementor_AddOnTabSelectedListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasUnboundedRipple { get; }
    public bool InlineLabel { get; public set; }
    public int SelectedTabPosition { get; }
    public int TabCount { get; }
    public int TabGravity { get; public set; }
    public ColorStateList TabIconTint { get; public set; }
    public bool TabIndicatorFullWidth { get; public set; }
    public int TabIndicatorGravity { get; }
    public int TabMode { get; public set; }
    public ColorStateList TabRippleColor { get; public set; }
    public Drawable TabSelectedIndicator { get; }
    public ColorStateList TabTextColors { get; public set; }
    protected TabLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TabLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TabLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TabLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TabLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasUnboundedRippleHandler();
    private static bool n_HasUnboundedRipple(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasUnboundedRipple", "()Z", "GetHasUnboundedRippleHandler")]
public virtual bool get_HasUnboundedRipple();
    private static Delegate GetIsInlineLabelHandler();
    private static bool n_IsInlineLabel(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInlineLabel_ZHandler();
    private static void n_SetInlineLabel_Z(IntPtr jnienv, IntPtr native__this, bool inline);
    [RegisterAttribute("isInlineLabel", "()Z", "GetIsInlineLabelHandler")]
public virtual bool get_InlineLabel();
    [RegisterAttribute("setInlineLabel", "(Z)V", "GetSetInlineLabel_ZHandler")]
public virtual void set_InlineLabel(bool value);
    private static Delegate GetGetSelectedTabPositionHandler();
    private static int n_GetSelectedTabPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSelectedTabPosition", "()I", "GetGetSelectedTabPositionHandler")]
public virtual int get_SelectedTabPosition();
    private static Delegate GetGetTabCountHandler();
    private static int n_GetTabCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTabCount", "()I", "GetGetTabCountHandler")]
public virtual int get_TabCount();
    private static Delegate GetGetTabGravityHandler();
    private static int n_GetTabGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabGravity_IHandler();
    private static void n_SetTabGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getTabGravity", "()I", "GetGetTabGravityHandler")]
public virtual int get_TabGravity();
    [RegisterAttribute("setTabGravity", "(I)V", "GetSetTabGravity_IHandler")]
public virtual void set_TabGravity(int value);
    private static Delegate GetGetTabIconTintHandler();
    private static IntPtr n_GetTabIconTint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabIconTint_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTabIconTint_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_iconTint);
    [RegisterAttribute("getTabIconTint", "()Landroid/content/res/ColorStateList;", "GetGetTabIconTintHandler")]
public virtual ColorStateList get_TabIconTint();
    [RegisterAttribute("setTabIconTint", "(Landroid/content/res/ColorStateList;)V", "GetSetTabIconTint_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_TabIconTint(ColorStateList value);
    private static Delegate GetIsTabIndicatorFullWidthHandler();
    private static bool n_IsTabIndicatorFullWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabIndicatorFullWidth_ZHandler();
    private static void n_SetTabIndicatorFullWidth_Z(IntPtr jnienv, IntPtr native__this, bool tabIndicatorFullWidth);
    [RegisterAttribute("isTabIndicatorFullWidth", "()Z", "GetIsTabIndicatorFullWidthHandler")]
public virtual bool get_TabIndicatorFullWidth();
    [RegisterAttribute("setTabIndicatorFullWidth", "(Z)V", "GetSetTabIndicatorFullWidth_ZHandler")]
public virtual void set_TabIndicatorFullWidth(bool value);
    private static Delegate GetGetTabIndicatorGravityHandler();
    private static int n_GetTabIndicatorGravity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTabIndicatorGravity", "()I", "GetGetTabIndicatorGravityHandler")]
public virtual int get_TabIndicatorGravity();
    private static Delegate GetGetTabModeHandler();
    private static int n_GetTabMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabMode_IHandler();
    private static void n_SetTabMode_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getTabMode", "()I", "GetGetTabModeHandler")]
public virtual int get_TabMode();
    [RegisterAttribute("setTabMode", "(I)V", "GetSetTabMode_IHandler")]
public virtual void set_TabMode(int value);
    private static Delegate GetGetTabRippleColorHandler();
    private static IntPtr n_GetTabRippleColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabRippleColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTabRippleColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_color);
    [RegisterAttribute("getTabRippleColor", "()Landroid/content/res/ColorStateList;", "GetGetTabRippleColorHandler")]
public virtual ColorStateList get_TabRippleColor();
    [RegisterAttribute("setTabRippleColor", "(Landroid/content/res/ColorStateList;)V", "GetSetTabRippleColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_TabRippleColor(ColorStateList value);
    private static Delegate GetGetTabSelectedIndicatorHandler();
    private static IntPtr n_GetTabSelectedIndicator(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTabSelectedIndicator", "()Landroid/graphics/drawable/Drawable;", "GetGetTabSelectedIndicatorHandler")]
public virtual Drawable get_TabSelectedIndicator();
    private static Delegate GetGetTabTextColorsHandler();
    private static IntPtr n_GetTabTextColors(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTabTextColors_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTabTextColors_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getTabTextColors", "()Landroid/content/res/ColorStateList;", "GetGetTabTextColorsHandler")]
public virtual ColorStateList get_TabTextColors();
    [RegisterAttribute("setTabTextColors", "(Landroid/content/res/ColorStateList;)V", "GetSetTabTextColors_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_TabTextColors(ColorStateList value);
    private static Delegate GetAddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler();
    private static void n_AddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$BaseOnTabSelectedListener;)V", "GetAddOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler")]
public virtual void AddOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_Handler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_(IntPtr jnienv, IntPtr native__this, IntPtr native_tab);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_Handler")]
public virtual void AddTab(Tab tab);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_ZHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, bool setSelected);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;Z)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_ZHandler")]
public virtual void AddTab(Tab tab, bool setSelected);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_I(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, int position);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;I)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IHandler")]
public virtual void AddTab(Tab tab, int position);
    private static Delegate GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IZHandler();
    private static void n_AddTab_Landroid_support_design_widget_TabLayout_Tab_IZ(IntPtr jnienv, IntPtr native__this, IntPtr native_tab, int position, bool setSelected);
    [RegisterAttribute("addTab", "(Landroid/support/design/widget/TabLayout$Tab;IZ)V", "GetAddTab_Landroid_support_design_widget_TabLayout_Tab_IZHandler")]
public virtual void AddTab(Tab tab, int position, bool setSelected);
    private static Delegate GetClearOnTabSelectedListenersHandler();
    private static void n_ClearOnTabSelectedListeners(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearOnTabSelectedListeners", "()V", "GetClearOnTabSelectedListenersHandler")]
public virtual void ClearOnTabSelectedListeners();
    private static Delegate GetCreateTabFromPoolHandler();
    private static IntPtr n_CreateTabFromPool(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("createTabFromPool", "()Landroid/support/design/widget/TabLayout$Tab;", "GetCreateTabFromPoolHandler")]
protected virtual Tab CreateTabFromPool();
    private static Delegate GetGetTabAt_IHandler();
    private static IntPtr n_GetTabAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getTabAt", "(I)Landroid/support/design/widget/TabLayout$Tab;", "GetGetTabAt_IHandler")]
public virtual Tab GetTabAt(int index);
    private static Delegate GetNewTabHandler();
    private static IntPtr n_NewTab(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("newTab", "()Landroid/support/design/widget/TabLayout$Tab;", "GetNewTabHandler")]
public virtual Tab NewTab();
    private static Delegate GetReleaseFromTabPool_Landroid_support_design_widget_TabLayout_Tab_Handler();
    private static bool n_ReleaseFromTabPool_Landroid_support_design_widget_TabLayout_Tab_(IntPtr jnienv, IntPtr native__this, IntPtr native_tab);
    [RegisterAttribute("releaseFromTabPool", "(Landroid/support/design/widget/TabLayout$Tab;)Z", "GetReleaseFromTabPool_Landroid_support_design_widget_TabLayout_Tab_Handler")]
protected virtual bool ReleaseFromTabPool(Tab tab);
    private static Delegate GetRemoveAllTabsHandler();
    private static void n_RemoveAllTabs(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("removeAllTabs", "()V", "GetRemoveAllTabsHandler")]
public virtual void RemoveAllTabs();
    private static Delegate GetRemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler();
    private static void n_RemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$BaseOnTabSelectedListener;)V", "GetRemoveOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler")]
public virtual void RemoveOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetRemoveTab_Landroid_support_design_widget_TabLayout_Tab_Handler();
    private static void n_RemoveTab_Landroid_support_design_widget_TabLayout_Tab_(IntPtr jnienv, IntPtr native__this, IntPtr native_tab);
    [RegisterAttribute("removeTab", "(Landroid/support/design/widget/TabLayout$Tab;)V", "GetRemoveTab_Landroid_support_design_widget_TabLayout_Tab_Handler")]
public virtual void RemoveTab(Tab tab);
    private static Delegate GetRemoveTabAt_IHandler();
    private static void n_RemoveTabAt_I(IntPtr jnienv, IntPtr native__this, int position);
    [RegisterAttribute("removeTabAt", "(I)V", "GetRemoveTabAt_IHandler")]
public virtual void RemoveTabAt(int position);
    private static Delegate GetSetInlineLabelResource_IHandler();
    private static void n_SetInlineLabelResource_I(IntPtr jnienv, IntPtr native__this, int inlineResourceId);
    [RegisterAttribute("setInlineLabelResource", "(I)V", "GetSetInlineLabelResource_IHandler")]
public virtual void SetInlineLabelResource(int inlineResourceId);
    private static Delegate GetSetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler();
    private static void n_SetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOnTabSelectedListener", "(Landroid/support/design/widget/TabLayout$BaseOnTabSelectedListener;)V", "GetSetOnTabSelectedListener_Landroid_support_design_widget_TabLayout_BaseOnTabSelectedListener_Handler")]
public virtual void SetOnTabSelectedListener(IOnTabSelectedListener listener);
    private static Delegate GetSetScrollPosition_IFZHandler();
    private static void n_SetScrollPosition_IFZ(IntPtr jnienv, IntPtr native__this, int position, float positionOffset, bool updateSelectedText);
    [RegisterAttribute("setScrollPosition", "(IFZ)V", "GetSetScrollPosition_IFZHandler")]
public virtual void SetScrollPosition(int position, float positionOffset, bool updateSelectedText);
    private static Delegate GetSetSelectedTabIndicator_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetSelectedTabIndicator_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_tabSelectedIndicator);
    [RegisterAttribute("setSelectedTabIndicator", "(Landroid/graphics/drawable/Drawable;)V", "GetSetSelectedTabIndicator_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetSelectedTabIndicator(Drawable tabSelectedIndicator);
    private static Delegate GetSetSelectedTabIndicator_IHandler();
    private static void n_SetSelectedTabIndicator_I(IntPtr jnienv, IntPtr native__this, int tabSelectedIndicatorResourceId);
    [RegisterAttribute("setSelectedTabIndicator", "(I)V", "GetSetSelectedTabIndicator_IHandler")]
public virtual void SetSelectedTabIndicator(int tabSelectedIndicatorResourceId);
    private static Delegate GetSetSelectedTabIndicatorColor_IHandler();
    private static void n_SetSelectedTabIndicatorColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setSelectedTabIndicatorColor", "(I)V", "GetSetSelectedTabIndicatorColor_IHandler")]
public virtual void SetSelectedTabIndicatorColor(int color);
    private static Delegate GetSetSelectedTabIndicatorGravity_IHandler();
    private static void n_SetSelectedTabIndicatorGravity_I(IntPtr jnienv, IntPtr native__this, int indicatorGravity);
    [RegisterAttribute("setSelectedTabIndicatorGravity", "(I)V", "GetSetSelectedTabIndicatorGravity_IHandler")]
public virtual void SetSelectedTabIndicatorGravity(int indicatorGravity);
    private static Delegate GetSetSelectedTabIndicatorHeight_IHandler();
    private static void n_SetSelectedTabIndicatorHeight_I(IntPtr jnienv, IntPtr native__this, int height);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setSelectedTabIndicatorHeight", "(I)V", "GetSetSelectedTabIndicatorHeight_IHandler")]
public virtual void SetSelectedTabIndicatorHeight(int height);
    private static Delegate GetSetTabIconTintResource_IHandler();
    private static void n_SetTabIconTintResource_I(IntPtr jnienv, IntPtr native__this, int iconTintResourceId);
    [RegisterAttribute("setTabIconTintResource", "(I)V", "GetSetTabIconTintResource_IHandler")]
public virtual void SetTabIconTintResource(int iconTintResourceId);
    private static Delegate GetSetTabRippleColorResource_IHandler();
    private static void n_SetTabRippleColorResource_I(IntPtr jnienv, IntPtr native__this, int tabRippleColorResourceId);
    [RegisterAttribute("setTabRippleColorResource", "(I)V", "GetSetTabRippleColorResource_IHandler")]
public virtual void SetTabRippleColorResource(int tabRippleColorResourceId);
    private static Delegate GetSetTabTextColors_IIHandler();
    private static void n_SetTabTextColors_II(IntPtr jnienv, IntPtr native__this, int normalColor, int selectedColor);
    [RegisterAttribute("setTabTextColors", "(II)V", "GetSetTabTextColors_IIHandler")]
public virtual void SetTabTextColors(int normalColor, int selectedColor);
    private static Delegate GetSetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_Handler();
    private static void n_SetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_(IntPtr jnienv, IntPtr native__this, IntPtr native_adapter);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setTabsFromPagerAdapter", "(Landroid/support/v4/view/PagerAdapter;)V", "GetSetTabsFromPagerAdapter_Landroid_support_v4_view_PagerAdapter_Handler")]
public virtual void SetTabsFromPagerAdapter(PagerAdapter adapter);
    private static Delegate GetSetUnboundedRipple_ZHandler();
    private static void n_SetUnboundedRipple_Z(IntPtr jnienv, IntPtr native__this, bool unboundedRipple);
    [RegisterAttribute("setUnboundedRipple", "(Z)V", "GetSetUnboundedRipple_ZHandler")]
public virtual void SetUnboundedRipple(bool unboundedRipple);
    private static Delegate GetSetUnboundedRippleResource_IHandler();
    private static void n_SetUnboundedRippleResource_I(IntPtr jnienv, IntPtr native__this, int unboundedRippleResourceId);
    [RegisterAttribute("setUnboundedRippleResource", "(I)V", "GetSetUnboundedRippleResource_IHandler")]
public virtual void SetUnboundedRippleResource(int unboundedRippleResourceId);
    private static Delegate GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_Handler();
    private static void n_SetupWithViewPager_Landroid_support_v4_view_ViewPager_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewPager);
    [RegisterAttribute("setupWithViewPager", "(Landroid/support/v4/view/ViewPager;)V", "GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_Handler")]
public virtual void SetupWithViewPager(ViewPager viewPager);
    private static Delegate GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_ZHandler();
    private static void n_SetupWithViewPager_Landroid_support_v4_view_ViewPager_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_viewPager, bool autoRefresh);
    [RegisterAttribute("setupWithViewPager", "(Landroid/support/v4/view/ViewPager;Z)V", "GetSetupWithViewPager_Landroid_support_v4_view_ViewPager_ZHandler")]
public virtual void SetupWithViewPager(ViewPager viewPager, bool autoRefresh);
    public void add_TabReselected(EventHandler`1<TabReselectedEventArgs> value);
    public void remove_TabReselected(EventHandler`1<TabReselectedEventArgs> value);
    public void add_TabSelected(EventHandler`1<TabSelectedEventArgs> value);
    public void remove_TabSelected(EventHandler`1<TabSelectedEventArgs> value);
    public void add_TabUnselected(EventHandler`1<TabUnselectedEventArgs> value);
    public void remove_TabUnselected(EventHandler`1<TabUnselectedEventArgs> value);
    private IOnTabSelectedListenerImplementor __CreateIOnTabSelectedListenerImplementor();
}
[RegisterAttribute("android/support/design/widget/TextInputEditText")]
public class Android.Support.Design.Widget.TextInputEditText : AppCompatEditText {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TextInputEditText(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TextInputEditText(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TextInputEditText(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TextInputEditText(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TextInputEditText();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/design/widget/TextInputLayout")]
public class Android.Support.Design.Widget.TextInputLayout : LinearLayout {
    private static Delegate cb_setEnabled_Z;
    private static IntPtr id_setEnabled_Z;
    [RegisterAttribute("BOX_BACKGROUND_FILLED")]
public static int BoxBackgroundFilled;
    [RegisterAttribute("BOX_BACKGROUND_NONE")]
public static int BoxBackgroundNone;
    [RegisterAttribute("BOX_BACKGROUND_OUTLINE")]
public static int BoxBackgroundOutline;
    internal static JniPeerMembers _members;
    private static Delegate cb_getBoxBackgroundColor;
    private static Delegate cb_setBoxBackgroundColor_I;
    private static Delegate cb_getBoxCornerRadiusBottomEnd;
    private static Delegate cb_getBoxCornerRadiusBottomStart;
    private static Delegate cb_getBoxCornerRadiusTopEnd;
    private static Delegate cb_getBoxCornerRadiusTopStart;
    private static Delegate cb_getBoxStrokeColor;
    private static Delegate cb_setBoxStrokeColor_I;
    private static Delegate cb_isCounterEnabled;
    private static Delegate cb_setCounterEnabled_Z;
    private static Delegate cb_getCounterMaxLength;
    private static Delegate cb_setCounterMaxLength_I;
    private static Delegate cb_getDefaultHintTextColor;
    private static Delegate cb_setDefaultHintTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getEditText;
    private static Delegate cb_getError;
    private static Delegate cb_setError_Ljava_lang_CharSequence_;
    private static Delegate cb_getErrorCurrentTextColors;
    private static Delegate cb_isErrorEnabled;
    private static Delegate cb_setErrorEnabled_Z;
    private static Delegate cb_getHelperText;
    private static Delegate cb_setHelperText_Ljava_lang_CharSequence_;
    private static Delegate cb_getHelperTextCurrentTextColor;
    private static Delegate cb_isHelperTextEnabled;
    private static Delegate cb_setHelperTextEnabled_Z;
    private static Delegate cb_getHint;
    private static Delegate cb_setHint_Ljava_lang_CharSequence_;
    private static Delegate cb_isHintAnimationEnabled;
    private static Delegate cb_setHintAnimationEnabled_Z;
    private static Delegate cb_isHintEnabled;
    private static Delegate cb_setHintEnabled_Z;
    private static Delegate cb_getPasswordVisibilityToggleContentDescription;
    private static Delegate cb_setPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_getPasswordVisibilityToggleDrawable;
    private static Delegate cb_setPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_isPasswordVisibilityToggleEnabled;
    private static Delegate cb_setPasswordVisibilityToggleEnabled_Z;
    private static Delegate cb_getTypeface;
    private static Delegate cb_setTypeface_Landroid_graphics_Typeface_;
    private static Delegate cb_dispatchRestoreInstanceState_Landroid_util_SparseArray_;
    private static Delegate cb_onSaveInstanceState;
    private static Delegate cb_passwordVisibilityToggleRequested_Z;
    private static Delegate cb_setBoxBackgroundColorResource_I;
    private static Delegate cb_setBoxBackgroundMode_I;
    private static Delegate cb_setBoxCornerRadii_FFFF;
    private static Delegate cb_setBoxCornerRadiiResources_IIII;
    private static Delegate cb_setErrorTextAppearance_I;
    private static Delegate cb_setErrorTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setHelperTextColor_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setHelperTextTextAppearance_I;
    private static Delegate cb_setHintTextAppearance_I;
    private static Delegate cb_setPasswordVisibilityToggleContentDescription_I;
    private static Delegate cb_setPasswordVisibilityToggleDrawable_I;
    private static Delegate cb_setPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static Delegate cb_setTextInputAccessibilityDelegate_Landroid_support_design_widget_TextInputLayout_AccessibilityDelegate_;
    public bool Enabled { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int BoxBackgroundColor { get; public set; }
    public float BoxCornerRadiusBottomEnd { get; }
    public float BoxCornerRadiusBottomStart { get; }
    public float BoxCornerRadiusTopEnd { get; }
    public float BoxCornerRadiusTopStart { get; }
    public int BoxStrokeColor { get; public set; }
    public bool CounterEnabled { get; public set; }
    public int CounterMaxLength { get; public set; }
    public ColorStateList DefaultHintTextColor { get; public set; }
    public EditText EditText { get; }
    public ICharSequence ErrorFormatted { get; public set; }
    public string Error { get; public set; }
    public int ErrorCurrentTextColors { get; }
    public bool ErrorEnabled { get; public set; }
    public ICharSequence HelperTextFormatted { get; public set; }
    public string HelperText { get; public set; }
    public int HelperTextCurrentTextColor { get; }
    public bool HelperTextEnabled { get; public set; }
    public ICharSequence HintFormatted { get; public set; }
    public string Hint { get; public set; }
    public bool HintAnimationEnabled { get; public set; }
    public bool HintEnabled { get; public set; }
    public ICharSequence PasswordVisibilityToggleContentDescriptionFormatted { get; public set; }
    public string PasswordVisibilityToggleContentDescription { get; public set; }
    public Drawable PasswordVisibilityToggleDrawable { get; public set; }
    public bool PasswordVisibilityToggleEnabled { get; public set; }
    public Typeface Typeface { get; public set; }
    protected TextInputLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public TextInputLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public TextInputLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public TextInputLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static TextInputLayout();
    public virtual bool get_Enabled();
    public virtual void set_Enabled(bool value);
    private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public void SetEnabled(bool enabled);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBoxBackgroundColorHandler();
    private static int n_GetBoxBackgroundColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBoxBackgroundColor_IHandler();
    private static void n_SetBoxBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int boxBackgroundColor);
    [RegisterAttribute("getBoxBackgroundColor", "()I", "GetGetBoxBackgroundColorHandler")]
public virtual int get_BoxBackgroundColor();
    [RegisterAttribute("setBoxBackgroundColor", "(I)V", "GetSetBoxBackgroundColor_IHandler")]
public virtual void set_BoxBackgroundColor(int value);
    private static Delegate GetGetBoxCornerRadiusBottomEndHandler();
    private static float n_GetBoxCornerRadiusBottomEnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBoxCornerRadiusBottomEnd", "()F", "GetGetBoxCornerRadiusBottomEndHandler")]
public virtual float get_BoxCornerRadiusBottomEnd();
    private static Delegate GetGetBoxCornerRadiusBottomStartHandler();
    private static float n_GetBoxCornerRadiusBottomStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBoxCornerRadiusBottomStart", "()F", "GetGetBoxCornerRadiusBottomStartHandler")]
public virtual float get_BoxCornerRadiusBottomStart();
    private static Delegate GetGetBoxCornerRadiusTopEndHandler();
    private static float n_GetBoxCornerRadiusTopEnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBoxCornerRadiusTopEnd", "()F", "GetGetBoxCornerRadiusTopEndHandler")]
public virtual float get_BoxCornerRadiusTopEnd();
    private static Delegate GetGetBoxCornerRadiusTopStartHandler();
    private static float n_GetBoxCornerRadiusTopStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBoxCornerRadiusTopStart", "()F", "GetGetBoxCornerRadiusTopStartHandler")]
public virtual float get_BoxCornerRadiusTopStart();
    private static Delegate GetGetBoxStrokeColorHandler();
    private static int n_GetBoxStrokeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBoxStrokeColor_IHandler();
    private static void n_SetBoxStrokeColor_I(IntPtr jnienv, IntPtr native__this, int boxStrokeColor);
    [RegisterAttribute("getBoxStrokeColor", "()I", "GetGetBoxStrokeColorHandler")]
public virtual int get_BoxStrokeColor();
    [RegisterAttribute("setBoxStrokeColor", "(I)V", "GetSetBoxStrokeColor_IHandler")]
public virtual void set_BoxStrokeColor(int value);
    private static Delegate GetIsCounterEnabledHandler();
    private static bool n_IsCounterEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCounterEnabled_ZHandler();
    private static void n_SetCounterEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isCounterEnabled", "()Z", "GetIsCounterEnabledHandler")]
public virtual bool get_CounterEnabled();
    [RegisterAttribute("setCounterEnabled", "(Z)V", "GetSetCounterEnabled_ZHandler")]
public virtual void set_CounterEnabled(bool value);
    private static Delegate GetGetCounterMaxLengthHandler();
    private static int n_GetCounterMaxLength(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCounterMaxLength_IHandler();
    private static void n_SetCounterMaxLength_I(IntPtr jnienv, IntPtr native__this, int maxLength);
    [RegisterAttribute("getCounterMaxLength", "()I", "GetGetCounterMaxLengthHandler")]
public virtual int get_CounterMaxLength();
    [RegisterAttribute("setCounterMaxLength", "(I)V", "GetSetCounterMaxLength_IHandler")]
public virtual void set_CounterMaxLength(int value);
    private static Delegate GetGetDefaultHintTextColorHandler();
    private static IntPtr n_GetDefaultHintTextColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDefaultHintTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetDefaultHintTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColor);
    [RegisterAttribute("getDefaultHintTextColor", "()Landroid/content/res/ColorStateList;", "GetGetDefaultHintTextColorHandler")]
public virtual ColorStateList get_DefaultHintTextColor();
    [RegisterAttribute("setDefaultHintTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetDefaultHintTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void set_DefaultHintTextColor(ColorStateList value);
    private static Delegate GetGetEditTextHandler();
    private static IntPtr n_GetEditText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEditText", "()Landroid/widget/EditText;", "GetGetEditTextHandler")]
public virtual EditText get_EditText();
    private static Delegate GetGetErrorHandler();
    private static IntPtr n_GetError(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetError_Ljava_lang_CharSequence_Handler();
    private static void n_SetError_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_errorText);
    [RegisterAttribute("getError", "()Ljava/lang/CharSequence;", "GetGetErrorHandler")]
public virtual ICharSequence get_ErrorFormatted();
    [RegisterAttribute("setError", "(Ljava/lang/CharSequence;)V", "GetSetError_Ljava_lang_CharSequence_Handler")]
public virtual void set_ErrorFormatted(ICharSequence value);
    public string get_Error();
    public void set_Error(string value);
    private static Delegate GetGetErrorCurrentTextColorsHandler();
    private static int n_GetErrorCurrentTextColors(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getErrorCurrentTextColors", "()I", "GetGetErrorCurrentTextColorsHandler")]
public virtual int get_ErrorCurrentTextColors();
    private static Delegate GetIsErrorEnabledHandler();
    private static bool n_IsErrorEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetErrorEnabled_ZHandler();
    private static void n_SetErrorEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isErrorEnabled", "()Z", "GetIsErrorEnabledHandler")]
public virtual bool get_ErrorEnabled();
    [RegisterAttribute("setErrorEnabled", "(Z)V", "GetSetErrorEnabled_ZHandler")]
public virtual void set_ErrorEnabled(bool value);
    private static Delegate GetGetHelperTextHandler();
    private static IntPtr n_GetHelperText(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHelperText_Ljava_lang_CharSequence_Handler();
    private static void n_SetHelperText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_helperText);
    [RegisterAttribute("getHelperText", "()Ljava/lang/CharSequence;", "GetGetHelperTextHandler")]
public virtual ICharSequence get_HelperTextFormatted();
    [RegisterAttribute("setHelperText", "(Ljava/lang/CharSequence;)V", "GetSetHelperText_Ljava_lang_CharSequence_Handler")]
public virtual void set_HelperTextFormatted(ICharSequence value);
    public string get_HelperText();
    public void set_HelperText(string value);
    private static Delegate GetGetHelperTextCurrentTextColorHandler();
    private static int n_GetHelperTextCurrentTextColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getHelperTextCurrentTextColor", "()I", "GetGetHelperTextCurrentTextColorHandler")]
public virtual int get_HelperTextCurrentTextColor();
    private static Delegate GetIsHelperTextEnabledHandler();
    private static bool n_IsHelperTextEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHelperTextEnabled_ZHandler();
    private static void n_SetHelperTextEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isHelperTextEnabled", "()Z", "GetIsHelperTextEnabledHandler")]
public virtual bool get_HelperTextEnabled();
    [RegisterAttribute("setHelperTextEnabled", "(Z)V", "GetSetHelperTextEnabled_ZHandler")]
public virtual void set_HelperTextEnabled(bool value);
    private static Delegate GetGetHintHandler();
    private static IntPtr n_GetHint(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHint_Ljava_lang_CharSequence_Handler();
    private static void n_SetHint_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_hint);
    [RegisterAttribute("getHint", "()Ljava/lang/CharSequence;", "GetGetHintHandler")]
public virtual ICharSequence get_HintFormatted();
    [RegisterAttribute("setHint", "(Ljava/lang/CharSequence;)V", "GetSetHint_Ljava_lang_CharSequence_Handler")]
public virtual void set_HintFormatted(ICharSequence value);
    public string get_Hint();
    public void set_Hint(string value);
    private static Delegate GetIsHintAnimationEnabledHandler();
    private static bool n_IsHintAnimationEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHintAnimationEnabled_ZHandler();
    private static void n_SetHintAnimationEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isHintAnimationEnabled", "()Z", "GetIsHintAnimationEnabledHandler")]
public virtual bool get_HintAnimationEnabled();
    [RegisterAttribute("setHintAnimationEnabled", "(Z)V", "GetSetHintAnimationEnabled_ZHandler")]
public virtual void set_HintAnimationEnabled(bool value);
    private static Delegate GetIsHintEnabledHandler();
    private static bool n_IsHintEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetHintEnabled_ZHandler();
    private static void n_SetHintEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isHintEnabled", "()Z", "GetIsHintEnabledHandler")]
public virtual bool get_HintEnabled();
    [RegisterAttribute("setHintEnabled", "(Z)V", "GetSetHintEnabled_ZHandler")]
public virtual void set_HintEnabled(bool value);
    private static Delegate GetGetPasswordVisibilityToggleContentDescriptionHandler();
    private static IntPtr n_GetPasswordVisibilityToggleContentDescription(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_description);
    [RegisterAttribute("getPasswordVisibilityToggleContentDescription", "()Ljava/lang/CharSequence;", "GetGetPasswordVisibilityToggleContentDescriptionHandler")]
public virtual ICharSequence get_PasswordVisibilityToggleContentDescriptionFormatted();
    [RegisterAttribute("setPasswordVisibilityToggleContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetPasswordVisibilityToggleContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_PasswordVisibilityToggleContentDescriptionFormatted(ICharSequence value);
    public string get_PasswordVisibilityToggleContentDescription();
    public void set_PasswordVisibilityToggleContentDescription(string value);
    private static Delegate GetGetPasswordVisibilityToggleDrawableHandler();
    private static IntPtr n_GetPasswordVisibilityToggleDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    [RegisterAttribute("getPasswordVisibilityToggleDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetPasswordVisibilityToggleDrawableHandler")]
public virtual Drawable get_PasswordVisibilityToggleDrawable();
    [RegisterAttribute("setPasswordVisibilityToggleDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetPasswordVisibilityToggleDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void set_PasswordVisibilityToggleDrawable(Drawable value);
    private static Delegate GetIsPasswordVisibilityToggleEnabledHandler();
    private static bool n_IsPasswordVisibilityToggleEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetPasswordVisibilityToggleEnabled_ZHandler();
    private static void n_SetPasswordVisibilityToggleEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isPasswordVisibilityToggleEnabled", "()Z", "GetIsPasswordVisibilityToggleEnabledHandler")]
public virtual bool get_PasswordVisibilityToggleEnabled();
    [RegisterAttribute("setPasswordVisibilityToggleEnabled", "(Z)V", "GetSetPasswordVisibilityToggleEnabled_ZHandler")]
public virtual void set_PasswordVisibilityToggleEnabled(bool value);
    private static Delegate GetGetTypefaceHandler();
    private static IntPtr n_GetTypeface(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetTypeface_Landroid_graphics_Typeface_Handler();
    private static void n_SetTypeface_Landroid_graphics_Typeface_(IntPtr jnienv, IntPtr native__this, IntPtr native_typeface);
    [RegisterAttribute("getTypeface", "()Landroid/graphics/Typeface;", "GetGetTypefaceHandler")]
public virtual Typeface get_Typeface();
    [RegisterAttribute("setTypeface", "(Landroid/graphics/Typeface;)V", "GetSetTypeface_Landroid_graphics_Typeface_Handler")]
public virtual void set_Typeface(Typeface value);
    private static Delegate GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler();
    private static void n_DispatchRestoreInstanceState_Landroid_util_SparseArray_(IntPtr jnienv, IntPtr native__this, IntPtr native_container);
    [RegisterAttribute("dispatchRestoreInstanceState", "(Landroid/util/SparseArray;)V", "GetDispatchRestoreInstanceState_Landroid_util_SparseArray_Handler")]
protected virtual void DispatchRestoreInstanceState(SparseArray container);
    private static Delegate GetOnSaveInstanceStateHandler();
    private static IntPtr n_OnSaveInstanceState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSaveInstanceState", "()Landroid/os/Parcelable;", "GetOnSaveInstanceStateHandler")]
public virtual IParcelable OnSaveInstanceState();
    private static Delegate GetPasswordVisibilityToggleRequested_ZHandler();
    private static void n_PasswordVisibilityToggleRequested_Z(IntPtr jnienv, IntPtr native__this, bool shouldSkipAnimations);
    [RegisterAttribute("passwordVisibilityToggleRequested", "(Z)V", "GetPasswordVisibilityToggleRequested_ZHandler")]
public virtual void PasswordVisibilityToggleRequested(bool shouldSkipAnimations);
    private static Delegate GetSetBoxBackgroundColorResource_IHandler();
    private static void n_SetBoxBackgroundColorResource_I(IntPtr jnienv, IntPtr native__this, int boxBackgroundColorId);
    [RegisterAttribute("setBoxBackgroundColorResource", "(I)V", "GetSetBoxBackgroundColorResource_IHandler")]
public virtual void SetBoxBackgroundColorResource(int boxBackgroundColorId);
    private static Delegate GetSetBoxBackgroundMode_IHandler();
    private static void n_SetBoxBackgroundMode_I(IntPtr jnienv, IntPtr native__this, int boxBackgroundMode);
    [RegisterAttribute("setBoxBackgroundMode", "(I)V", "GetSetBoxBackgroundMode_IHandler")]
public virtual void SetBoxBackgroundMode(int boxBackgroundMode);
    private static Delegate GetSetBoxCornerRadii_FFFFHandler();
    private static void n_SetBoxCornerRadii_FFFF(IntPtr jnienv, IntPtr native__this, float boxCornerRadiusTopStart, float boxCornerRadiusTopEnd, float boxCornerRadiusBottomStart, float boxCornerRadiusBottomEnd);
    [RegisterAttribute("setBoxCornerRadii", "(FFFF)V", "GetSetBoxCornerRadii_FFFFHandler")]
public virtual void SetBoxCornerRadii(float boxCornerRadiusTopStart, float boxCornerRadiusTopEnd, float boxCornerRadiusBottomStart, float boxCornerRadiusBottomEnd);
    private static Delegate GetSetBoxCornerRadiiResources_IIIIHandler();
    private static void n_SetBoxCornerRadiiResources_IIII(IntPtr jnienv, IntPtr native__this, int boxCornerRadiusTopStartId, int boxCornerRadiusTopEndId, int boxCornerRadiusBottomEndId, int boxCornerRadiusBottomStartId);
    [RegisterAttribute("setBoxCornerRadiiResources", "(IIII)V", "GetSetBoxCornerRadiiResources_IIIIHandler")]
public virtual void SetBoxCornerRadiiResources(int boxCornerRadiusTopStartId, int boxCornerRadiusTopEndId, int boxCornerRadiusBottomEndId, int boxCornerRadiusBottomStartId);
    private static Delegate GetSetErrorTextAppearance_IHandler();
    private static void n_SetErrorTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setErrorTextAppearance", "(I)V", "GetSetErrorTextAppearance_IHandler")]
public virtual void SetErrorTextAppearance(int resId);
    private static Delegate GetSetErrorTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetErrorTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColors);
    [RegisterAttribute("setErrorTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetErrorTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetErrorTextColor(ColorStateList textColors);
    private static Delegate GetSetHelperTextColor_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetHelperTextColor_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_textColors);
    [RegisterAttribute("setHelperTextColor", "(Landroid/content/res/ColorStateList;)V", "GetSetHelperTextColor_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetHelperTextColor(ColorStateList textColors);
    private static Delegate GetSetHelperTextTextAppearance_IHandler();
    private static void n_SetHelperTextTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setHelperTextTextAppearance", "(I)V", "GetSetHelperTextTextAppearance_IHandler")]
public virtual void SetHelperTextTextAppearance(int resId);
    private static Delegate GetSetHintTextAppearance_IHandler();
    private static void n_SetHintTextAppearance_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setHintTextAppearance", "(I)V", "GetSetHintTextAppearance_IHandler")]
public virtual void SetHintTextAppearance(int resId);
    private static Delegate GetSetPasswordVisibilityToggleContentDescription_IHandler();
    private static void n_SetPasswordVisibilityToggleContentDescription_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setPasswordVisibilityToggleContentDescription", "(I)V", "GetSetPasswordVisibilityToggleContentDescription_IHandler")]
public virtual void SetPasswordVisibilityToggleContentDescription(int resId);
    private static Delegate GetSetPasswordVisibilityToggleDrawable_IHandler();
    private static void n_SetPasswordVisibilityToggleDrawable_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setPasswordVisibilityToggleDrawable", "(I)V", "GetSetPasswordVisibilityToggleDrawable_IHandler")]
public virtual void SetPasswordVisibilityToggleDrawable(int resId);
    private static Delegate GetSetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintList);
    [RegisterAttribute("setPasswordVisibilityToggleTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetPasswordVisibilityToggleTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetPasswordVisibilityToggleTintList(ColorStateList tintList);
    private static Delegate GetSetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_mode);
    [RegisterAttribute("setPasswordVisibilityToggleTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetPasswordVisibilityToggleTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void SetPasswordVisibilityToggleTintMode(Mode mode);
    private static Delegate GetSetTextInputAccessibilityDelegate_Landroid_support_design_widget_TextInputLayout_AccessibilityDelegate_Handler();
    private static void n_SetTextInputAccessibilityDelegate_Landroid_support_design_widget_TextInputLayout_AccessibilityDelegate_(IntPtr jnienv, IntPtr native__this, IntPtr native__delegate);
    [RegisterAttribute("setTextInputAccessibilityDelegate", "(Landroid/support/design/widget/TextInputLayout$AccessibilityDelegate;)V", "GetSetTextInputAccessibilityDelegate_Landroid_support_design_widget_TextInputLayout_AccessibilityDelegate_Handler")]
public virtual void SetTextInputAccessibilityDelegate(AccessibilityDelegate delegate);
}
[RegisterAttribute("android/support/design/widget/ViewOffsetBehavior")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Android.Support.Design.Widget.ViewOffsetBehavior : Behavior {
    internal static JniPeerMembers _members;
    private static Delegate cb_getLeftAndRightOffset;
    private static Delegate cb_getTopAndBottomOffset;
    private static Delegate cb_layoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I;
    private static Delegate cb_onLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I;
    private static Delegate cb_setLeftAndRightOffset_I;
    private static Delegate cb_setTopAndBottomOffset_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int LeftAndRightOffset { get; }
    public int TopAndBottomOffset { get; }
    protected ViewOffsetBehavior(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ViewOffsetBehavior(Context context, IAttributeSet attrs);
    private static ViewOffsetBehavior();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLeftAndRightOffsetHandler();
    private static int n_GetLeftAndRightOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLeftAndRightOffset", "()I", "GetGetLeftAndRightOffsetHandler")]
public virtual int get_LeftAndRightOffset();
    private static Delegate GetGetTopAndBottomOffsetHandler();
    private static int n_GetTopAndBottomOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTopAndBottomOffset", "()I", "GetGetTopAndBottomOffsetHandler")]
public virtual int get_TopAndBottomOffset();
    private static Delegate GetLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler();
    private static void n_LayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("layoutChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;I)V", "GetLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler")]
protected virtual void LayoutChild(CoordinatorLayout parent, Object child, int layoutDirection);
    private static Delegate GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler();
    private static bool n_OnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_child, int layoutDirection);
    [RegisterAttribute("onLayoutChild", "(Landroid/support/design/widget/CoordinatorLayout;Landroid/view/View;I)Z", "GetOnLayoutChild_Landroid_support_design_widget_CoordinatorLayout_Landroid_view_View_IHandler")]
public virtual bool OnLayoutChild(CoordinatorLayout parent, Object child, int layoutDirection);
    private static Delegate GetSetLeftAndRightOffset_IHandler();
    private static bool n_SetLeftAndRightOffset_I(IntPtr jnienv, IntPtr native__this, int offset);
    [RegisterAttribute("setLeftAndRightOffset", "(I)Z", "GetSetLeftAndRightOffset_IHandler")]
public virtual bool SetLeftAndRightOffset(int offset);
    private static Delegate GetSetTopAndBottomOffset_IHandler();
    private static bool n_SetTopAndBottomOffset_I(IntPtr jnienv, IntPtr native__this, int offset);
    [RegisterAttribute("setTopAndBottomOffset", "(I)Z", "GetSetTopAndBottomOffset_IHandler")]
public virtual bool SetTopAndBottomOffset(int offset);
}
[RegisterAttribute("android/support/design/widget/VisibilityAwareImageButton")]
public class Android.Support.Design.Widget.VisibilityAwareImageButton : ImageButton {
    private static Delegate cb_setVisibility_I;
    private static IntPtr id_setVisibility_I;
    internal static JniPeerMembers _members;
    public ViewStates Visibility { get; public set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int UserSetVisibility { get; }
    protected VisibilityAwareImageButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public VisibilityAwareImageButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public VisibilityAwareImageButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public VisibilityAwareImageButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static VisibilityAwareImageButton();
    public virtual ViewStates get_Visibility();
    public virtual void set_Visibility(ViewStates value);
    private static Delegate GetSetVisibility_IHandler();
    private static void n_SetVisibility_I(IntPtr jnienv, IntPtr native__this, int native_visibility);
    [RegisterAttribute("setVisibility", "(I)V", "GetSetVisibility_IHandler")]
public void SetVisibility(ViewStates visibility);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getUserSetVisibility", "()I", "GetGetUserSetVisibilityHandler")]
public int get_UserSetVisibility();
    [RegisterAttribute("internalSetVisibility", "(IZ)V", "")]
public void InternalSetVisibility(int visibility, bool fromUser);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_android_support_design_bottomappbar_mappings;
    private static String[] package_android_support_design_circularreveal_mappings;
    private static String[] package_android_support_design_circularreveal_cardview_mappings;
    private static String[] package_android_support_design_circularreveal_coordinatorlayout_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_design_bottomappbar_package(string klass);
    private static Type lookup_android_support_design_circularreveal_package(string klass);
    private static Type lookup_android_support_design_circularreveal_cardview_package(string klass);
    private static Type lookup_android_support_design_circularreveal_coordinatorlayout_package(string klass);
}
