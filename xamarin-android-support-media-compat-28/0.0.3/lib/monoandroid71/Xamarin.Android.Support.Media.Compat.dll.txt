[RegisterAttribute("android/support/mediacompat/BuildConfig")]
public class Android.Support.MediaCompat.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/media/MediaBrowserCompat")]
public class Android.Support.V4.Media.MediaBrowserCompat : Object {
    [RegisterAttribute("EXTRA_PAGE")]
public static string ExtraPage;
    [RegisterAttribute("EXTRA_PAGE_SIZE")]
public static string ExtraPageSize;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_content_ComponentName_Landroid_support_v4_media_MediaBrowserCompat_ConnectionCallback_Landroid_os_Bundle_;
    private static IntPtr id_getExtras;
    private static IntPtr id_isConnected;
    private static IntPtr id_getRoot;
    private static IntPtr id_getServiceComponent;
    private static IntPtr id_getSessionToken;
    private static IntPtr id_connect;
    private static IntPtr id_disconnect;
    private static IntPtr id_getItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserCompat_ItemCallback_;
    private static IntPtr id_search_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserCompat_SearchCallback_;
    private static IntPtr id_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserCompat_CustomActionCallback_;
    private static IntPtr id_subscribe_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserCompat_SubscriptionCallback_;
    private static IntPtr id_subscribe_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserCompat_SubscriptionCallback_;
    private static IntPtr id_unsubscribe_Ljava_lang_String_;
    private static IntPtr id_unsubscribe_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserCompat_SubscriptionCallback_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Bundle Extras { get; }
    public bool IsConnected { get; }
    public string Root { get; }
    public ComponentName ServiceComponent { get; }
    public Token SessionToken { get; }
    internal MediaBrowserCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/content/ComponentName;Landroid/support/v4/media/MediaBrowserCompat$ConnectionCallback;Landroid/os/Bundle;)V", "")]
public MediaBrowserCompat(Context context, ComponentName serviceComponent, ConnectionCallback callback, Bundle rootHints);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public Bundle get_Extras();
    [RegisterAttribute("isConnected", "()Z", "GetIsConnectedHandler")]
public bool get_IsConnected();
    [RegisterAttribute("getRoot", "()Ljava/lang/String;", "GetGetRootHandler")]
public string get_Root();
    [RegisterAttribute("getServiceComponent", "()Landroid/content/ComponentName;", "GetGetServiceComponentHandler")]
public ComponentName get_ServiceComponent();
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public Token get_SessionToken();
    [RegisterAttribute("connect", "()V", "")]
public void Connect();
    [RegisterAttribute("disconnect", "()V", "")]
public void Disconnect();
    [RegisterAttribute("getItem", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$ItemCallback;)V", "")]
public void GetItem(string mediaId, ItemCallback cb);
    [RegisterAttribute("search", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$SearchCallback;)V", "")]
public void Search(string query, Bundle extras, SearchCallback callback);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$CustomActionCallback;)V", "")]
public void SendCustomAction(string action, Bundle extras, CustomActionCallback callback);
    [RegisterAttribute("subscribe", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Subscribe(string parentId, Bundle options, SubscriptionCallback callback);
    [RegisterAttribute("subscribe", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Subscribe(string parentId, SubscriptionCallback callback);
    [RegisterAttribute("unsubscribe", "(Ljava/lang/String;)V", "")]
public void Unsubscribe(string parentId);
    [RegisterAttribute("unsubscribe", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Unsubscribe(string parentId, SubscriptionCallback callback);
}
[RegisterAttribute("android/support/v4/media/MediaBrowserCompatUtils")]
public class Android.Support.V4.Media.MediaBrowserCompatUtils : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_areSameOptions_Landroid_os_Bundle_Landroid_os_Bundle_;
    private static IntPtr id_hasDuplicatedItems_Landroid_os_Bundle_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MediaBrowserCompatUtils(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("areSameOptions", "(Landroid/os/Bundle;Landroid/os/Bundle;)Z", "")]
public static bool AreSameOptions(Bundle options1, Bundle options2);
    [RegisterAttribute("hasDuplicatedItems", "(Landroid/os/Bundle;Landroid/os/Bundle;)Z", "")]
public static bool HasDuplicatedItems(Bundle options1, Bundle options2);
}
[RegisterAttribute("android/support/v4/media/MediaBrowserServiceCompat")]
public abstract class Android.Support.V4.Media.MediaBrowserServiceCompat : Service {
    [RegisterAttribute("KEY_MEDIA_ITEM")]
public static string KeyMediaItem;
    [RegisterAttribute("KEY_SEARCH_RESULTS")]
public static string KeySearchResults;
    [RegisterAttribute("SERVICE_INTERFACE")]
public static string ServiceInterface;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_getBrowserRootHints;
    private static Delegate cb_getSessionToken;
    private static Delegate cb_setSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_;
    private static IntPtr id_getSessionToken;
    private static IntPtr id_setSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_;
    private static Delegate cb_dump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_;
    private static IntPtr id_dump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_;
    private static Delegate cb_notifyChildrenChanged_Ljava_lang_String_;
    private static IntPtr id_notifyChildrenChanged_Ljava_lang_String_;
    private static Delegate cb_notifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_notifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onBind_Landroid_content_Intent_;
    private static IntPtr id_onBind_Landroid_content_Intent_;
    private static Delegate cb_onCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static IntPtr id_onCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static Delegate cb_onGetRoot_Ljava_lang_String_ILandroid_os_Bundle_;
    private static Delegate cb_onLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static Delegate cb_onLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_;
    private static IntPtr id_onLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_;
    private static Delegate cb_onLoadItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static IntPtr id_onLoadItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static Delegate cb_onSearch_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    private static IntPtr id_onSearch_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Bundle BrowserRootHints { get; }
    public Token SessionToken { get; public set; }
    protected MediaBrowserServiceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBrowserRootHints", "()Landroid/os/Bundle;", "GetGetBrowserRootHintsHandler")]
public Bundle get_BrowserRootHints();
    private static Delegate GetGetSessionTokenHandler();
    private static IntPtr n_GetSessionToken(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_Handler();
    private static void n_SetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_(IntPtr jnienv, IntPtr native__this, IntPtr native_token);
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public virtual Token get_SessionToken();
    [RegisterAttribute("setSessionToken", "(Landroid/support/v4/media/session/MediaSessionCompat$Token;)V", "GetSetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_Handler")]
public virtual void set_SessionToken(Token value);
    private static Delegate GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler();
    private static void n_Dump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fd, IntPtr native_writer, IntPtr native_args);
    [RegisterAttribute("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]
public virtual void Dump(FileDescriptor fd, PrintWriter writer, String[] args);
    private static Delegate GetNotifyChildrenChanged_Ljava_lang_String_Handler();
    private static void n_NotifyChildrenChanged_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId);
    [RegisterAttribute("notifyChildrenChanged", "(Ljava/lang/String;)V", "GetNotifyChildrenChanged_Ljava_lang_String_Handler")]
public virtual void NotifyChildrenChanged(string parentId);
    private static Delegate GetNotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_NotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_options);
    [RegisterAttribute("notifyChildrenChanged", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetNotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void NotifyChildrenChanged(string parentId, Bundle options);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
    private static Delegate GetOnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_action, IntPtr native_extras, IntPtr native_result);
    [RegisterAttribute("onCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;)V", "GetOnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnCustomAction(string action, Bundle extras, Result result);
    private static Delegate GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler();
    private static IntPtr n_OnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_clientPackageName, int clientUid, IntPtr native_rootHints);
    [RegisterAttribute("onGetRoot", "(Ljava/lang/String;ILandroid/os/Bundle;)Landroid/support/v4/media/MediaBrowserServiceCompat$BrowserRoot;", "GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler")]
public abstract virtual BrowserRoot OnGetRoot(string clientPackageName, int clientUid, Bundle rootHints);
    private static Delegate GetOnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_result);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler")]
public abstract virtual void OnLoadChildren(string parentId, Result result);
    private static Delegate GetOnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_Handler();
    private static void n_OnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_result, IntPtr native_options);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;Landroid/os/Bundle;)V", "GetOnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_Handler")]
public virtual void OnLoadChildren(string parentId, Result result, Bundle options);
    private static Delegate GetOnLoadItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnLoadItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemId, IntPtr native_result);
    [RegisterAttribute("onLoadItem", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadItem_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnLoadItem(string itemId, Result result);
    private static Delegate GetOnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_query, IntPtr native_extras, IntPtr native_result);
    [RegisterAttribute("onSearch", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;)V", "GetOnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnSearch(string query, Bundle extras, Result result);
}
[RegisterAttribute("android/support/v4/media/MediaBrowserServiceCompat")]
internal class Android.Support.V4.Media.MediaBrowserServiceCompatInvoker : MediaBrowserServiceCompat {
    private static IntPtr id_onGetRoot_Ljava_lang_String_ILandroid_os_Bundle_;
    private static IntPtr id_onLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_;
    protected Type ThresholdType { get; }
    public MediaBrowserServiceCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onGetRoot", "(Ljava/lang/String;ILandroid/os/Bundle;)Landroid/support/v4/media/MediaBrowserServiceCompat$BrowserRoot;", "GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler")]
public virtual BrowserRoot OnGetRoot(string clientPackageName, int clientUid, Bundle rootHints);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadChildren_Ljava_lang_String_Landroid_support_v4_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnLoadChildren(string parentId, Result result);
}
[RegisterAttribute("android/support/v4/media/MediaDescriptionCompat")]
public class Android.Support.V4.Media.MediaDescriptionCompat : Object {
    [RegisterAttribute("BT_FOLDER_TYPE_ALBUMS")]
public static long BtFolderTypeAlbums;
    [RegisterAttribute("BT_FOLDER_TYPE_ARTISTS")]
public static long BtFolderTypeArtists;
    [RegisterAttribute("BT_FOLDER_TYPE_GENRES")]
public static long BtFolderTypeGenres;
    [RegisterAttribute("BT_FOLDER_TYPE_MIXED")]
public static long BtFolderTypeMixed;
    [RegisterAttribute("BT_FOLDER_TYPE_PLAYLISTS")]
public static long BtFolderTypePlaylists;
    [RegisterAttribute("BT_FOLDER_TYPE_TITLES")]
public static long BtFolderTypeTitles;
    [RegisterAttribute("BT_FOLDER_TYPE_YEARS")]
public static long BtFolderTypeYears;
    private static IntPtr CREATOR_jfieldId;
    [RegisterAttribute("DESCRIPTION_KEY_MEDIA_URI")]
public static string DescriptionKeyMediaUri;
    [RegisterAttribute("DESCRIPTION_KEY_NULL_BUNDLE_FLAG")]
public static string DescriptionKeyNullBundleFlag;
    [RegisterAttribute("EXTRA_BT_FOLDER_TYPE")]
public static string ExtraBtFolderType;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getDescription;
    private static IntPtr id_getExtras;
    private static IntPtr id_getIconBitmap;
    private static IntPtr id_getIconUri;
    private static IntPtr id_getMediaDescription;
    private static IntPtr id_getMediaId;
    private static IntPtr id_getMediaUri;
    private static IntPtr id_getSubtitle;
    private static IntPtr id_getTitle;
    private static IntPtr id_describeContents;
    private static IntPtr id_fromMediaDescription_Ljava_lang_Object_;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public ICharSequence DescriptionFormatted { get; }
    public string Description { get; }
    public Bundle Extras { get; }
    public Bitmap IconBitmap { get; }
    public Uri IconUri { get; }
    public Object MediaDescription { get; }
    public string MediaId { get; }
    public Uri MediaUri { get; }
    public ICharSequence SubtitleFormatted { get; }
    public string Subtitle { get; }
    public ICharSequence TitleFormatted { get; }
    public string Title { get; }
    internal MediaDescriptionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDescription", "()Ljava/lang/CharSequence;", "GetGetDescriptionHandler")]
public ICharSequence get_DescriptionFormatted();
    public string get_Description();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public Bundle get_Extras();
    [RegisterAttribute("getIconBitmap", "()Landroid/graphics/Bitmap;", "GetGetIconBitmapHandler")]
public Bitmap get_IconBitmap();
    [RegisterAttribute("getIconUri", "()Landroid/net/Uri;", "GetGetIconUriHandler")]
public Uri get_IconUri();
    [RegisterAttribute("getMediaDescription", "()Ljava/lang/Object;", "GetGetMediaDescriptionHandler")]
public Object get_MediaDescription();
    [RegisterAttribute("getMediaId", "()Ljava/lang/String;", "GetGetMediaIdHandler")]
public string get_MediaId();
    [RegisterAttribute("getMediaUri", "()Landroid/net/Uri;", "GetGetMediaUriHandler")]
public Uri get_MediaUri();
    [RegisterAttribute("getSubtitle", "()Ljava/lang/CharSequence;", "GetGetSubtitleHandler")]
public ICharSequence get_SubtitleFormatted();
    public string get_Subtitle();
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")]
public ICharSequence get_TitleFormatted();
    public string get_Title();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromMediaDescription", "(Ljava/lang/Object;)Landroid/support/v4/media/MediaDescriptionCompat;", "")]
public static MediaDescriptionCompat FromMediaDescription(Object descriptionObj);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/media/MediaMetadataCompat")]
public class Android.Support.V4.Media.MediaMetadataCompat : Object {
    private static IntPtr CREATOR_jfieldId;
    [RegisterAttribute("METADATA_KEY_ADVERTISEMENT")]
public static string MetadataKeyAdvertisement;
    [RegisterAttribute("METADATA_KEY_ALBUM")]
public static string MetadataKeyAlbum;
    [RegisterAttribute("METADATA_KEY_ALBUM_ART")]
public static string MetadataKeyAlbumArt;
    [RegisterAttribute("METADATA_KEY_ALBUM_ARTIST")]
public static string MetadataKeyAlbumArtist;
    [RegisterAttribute("METADATA_KEY_ALBUM_ART_URI")]
public static string MetadataKeyAlbumArtUri;
    [RegisterAttribute("METADATA_KEY_ART")]
public static string MetadataKeyArt;
    [RegisterAttribute("METADATA_KEY_ARTIST")]
public static string MetadataKeyArtist;
    [RegisterAttribute("METADATA_KEY_ART_URI")]
public static string MetadataKeyArtUri;
    [RegisterAttribute("METADATA_KEY_AUTHOR")]
public static string MetadataKeyAuthor;
    [RegisterAttribute("METADATA_KEY_BT_FOLDER_TYPE")]
public static string MetadataKeyBtFolderType;
    [RegisterAttribute("METADATA_KEY_COMPILATION")]
public static string MetadataKeyCompilation;
    [RegisterAttribute("METADATA_KEY_COMPOSER")]
public static string MetadataKeyComposer;
    [RegisterAttribute("METADATA_KEY_DATE")]
public static string MetadataKeyDate;
    [RegisterAttribute("METADATA_KEY_DISC_NUMBER")]
public static string MetadataKeyDiscNumber;
    [RegisterAttribute("METADATA_KEY_DISPLAY_DESCRIPTION")]
public static string MetadataKeyDisplayDescription;
    [RegisterAttribute("METADATA_KEY_DISPLAY_ICON")]
public static string MetadataKeyDisplayIcon;
    [RegisterAttribute("METADATA_KEY_DISPLAY_ICON_URI")]
public static string MetadataKeyDisplayIconUri;
    [RegisterAttribute("METADATA_KEY_DISPLAY_SUBTITLE")]
public static string MetadataKeyDisplaySubtitle;
    [RegisterAttribute("METADATA_KEY_DISPLAY_TITLE")]
public static string MetadataKeyDisplayTitle;
    [RegisterAttribute("METADATA_KEY_DURATION")]
public static string MetadataKeyDuration;
    [RegisterAttribute("METADATA_KEY_GENRE")]
public static string MetadataKeyGenre;
    [RegisterAttribute("METADATA_KEY_MEDIA_ID")]
public static string MetadataKeyMediaId;
    [RegisterAttribute("METADATA_KEY_MEDIA_URI")]
public static string MetadataKeyMediaUri;
    [RegisterAttribute("METADATA_KEY_NUM_TRACKS")]
public static string MetadataKeyNumTracks;
    [RegisterAttribute("METADATA_KEY_RATING")]
public static string MetadataKeyRating;
    [RegisterAttribute("METADATA_KEY_TITLE")]
public static string MetadataKeyTitle;
    [RegisterAttribute("METADATA_KEY_TRACK_NUMBER")]
public static string MetadataKeyTrackNumber;
    [RegisterAttribute("METADATA_KEY_USER_RATING")]
public static string MetadataKeyUserRating;
    [RegisterAttribute("METADATA_KEY_WRITER")]
public static string MetadataKeyWriter;
    [RegisterAttribute("METADATA_KEY_YEAR")]
public static string MetadataKeyYear;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getBundle;
    private static IntPtr id_getDescription;
    private static IntPtr id_getMediaMetadata;
    private static IntPtr id_containsKey_Ljava_lang_String_;
    private static IntPtr id_describeContents;
    private static IntPtr id_fromMediaMetadata_Ljava_lang_Object_;
    private static IntPtr id_getBitmap_Ljava_lang_String_;
    private static IntPtr id_getLong_Ljava_lang_String_;
    private static IntPtr id_getRating_Ljava_lang_String_;
    private static IntPtr id_getString_Ljava_lang_String_;
    private static IntPtr id_getText_Ljava_lang_String_;
    private static IntPtr id_keySet;
    private static IntPtr id_size;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Bundle Bundle { get; }
    public MediaDescriptionCompat Description { get; }
    public Object MediaMetadata { get; }
    internal MediaMetadataCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBundle", "()Landroid/os/Bundle;", "GetGetBundleHandler")]
public Bundle get_Bundle();
    [RegisterAttribute("getDescription", "()Landroid/support/v4/media/MediaDescriptionCompat;", "GetGetDescriptionHandler")]
public MediaDescriptionCompat get_Description();
    [RegisterAttribute("getMediaMetadata", "()Ljava/lang/Object;", "GetGetMediaMetadataHandler")]
public Object get_MediaMetadata();
    [RegisterAttribute("containsKey", "(Ljava/lang/String;)Z", "")]
public bool ContainsKey(string key);
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromMediaMetadata", "(Ljava/lang/Object;)Landroid/support/v4/media/MediaMetadataCompat;", "")]
public static MediaMetadataCompat FromMediaMetadata(Object metadataObj);
    [RegisterAttribute("getBitmap", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "")]
public Bitmap GetBitmap(string key);
    [RegisterAttribute("getLong", "(Ljava/lang/String;)J", "")]
public long GetLong(string key);
    [RegisterAttribute("getRating", "(Ljava/lang/String;)Landroid/support/v4/media/RatingCompat;", "")]
public RatingCompat GetRating(string key);
    [RegisterAttribute("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public string GetString(string key);
    [RegisterAttribute("getText", "(Ljava/lang/String;)Ljava/lang/CharSequence;", "")]
public ICharSequence GetTextFormatted(string key);
    public string GetText(string key);
    [RegisterAttribute("keySet", "()Ljava/util/Set;", "")]
public ICollection`1<string> KeySet();
    [RegisterAttribute("size", "()I", "")]
public int Size();
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/media/RatingCompat")]
public class Android.Support.V4.Media.RatingCompat : Object {
    private static IntPtr CREATOR_jfieldId;
    [RegisterAttribute("RATING_3_STARS")]
public static int Rating3Stars;
    [RegisterAttribute("RATING_4_STARS")]
public static int Rating4Stars;
    [RegisterAttribute("RATING_5_STARS")]
public static int Rating5Stars;
    [RegisterAttribute("RATING_HEART")]
public static int RatingHeart;
    [RegisterAttribute("RATING_NONE")]
public static int RatingNone;
    [RegisterAttribute("RATING_PERCENTAGE")]
public static int RatingPercentage;
    [RegisterAttribute("RATING_THUMB_UP_DOWN")]
public static int RatingThumbUpDown;
    internal static IntPtr java_class_handle;
    private static IntPtr id_hasHeart;
    private static IntPtr id_isRated;
    private static IntPtr id_isThumbUp;
    private static IntPtr id_getPercentRating;
    private static IntPtr id_getRating;
    private static IntPtr id_getRatingStyle;
    private static IntPtr id_getStarRating;
    private static IntPtr id_describeContents;
    private static IntPtr id_fromRating_Ljava_lang_Object_;
    private static IntPtr id_newHeartRating_Z;
    private static IntPtr id_newPercentageRating_F;
    private static IntPtr id_newStarRating_IF;
    private static IntPtr id_newThumbRating_Z;
    private static IntPtr id_newUnratedRating_I;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool HasHeart { get; }
    public bool IsRated { get; }
    public bool IsThumbUp { get; }
    public float PercentRating { get; }
    public Object Rating { get; }
    public int RatingStyle { get; }
    public float StarRating { get; }
    internal RatingCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasHeart", "()Z", "GetHasHeartHandler")]
public bool get_HasHeart();
    [RegisterAttribute("isRated", "()Z", "GetIsRatedHandler")]
public bool get_IsRated();
    [RegisterAttribute("isThumbUp", "()Z", "GetIsThumbUpHandler")]
public bool get_IsThumbUp();
    [RegisterAttribute("getPercentRating", "()F", "GetGetPercentRatingHandler")]
public float get_PercentRating();
    [RegisterAttribute("getRating", "()Ljava/lang/Object;", "GetGetRatingHandler")]
public Object get_Rating();
    [RegisterAttribute("getRatingStyle", "()I", "GetGetRatingStyleHandler")]
public int get_RatingStyle();
    [RegisterAttribute("getStarRating", "()F", "GetGetStarRatingHandler")]
public float get_StarRating();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromRating", "(Ljava/lang/Object;)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat FromRating(Object ratingObj);
    [RegisterAttribute("newHeartRating", "(Z)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewHeartRating(bool hasHeart);
    [RegisterAttribute("newPercentageRating", "(F)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewPercentageRating(float percent);
    [RegisterAttribute("newStarRating", "(IF)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewStarRating(int starRatingStyle, float starRating);
    [RegisterAttribute("newThumbRating", "(Z)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewThumbRating(bool thumbIsUp);
    [RegisterAttribute("newUnratedRating", "(I)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewUnratedRating(int ratingStyle);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback", "", "Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker")]
public interface Android.Support.V4.Media.Session.IMediaControllerCallback {
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnCaptioningEnabledChanged(bool p0);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnEvent(string p0, Bundle p1);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnExtrasChanged(Bundle p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnQueueTitleChanged(ICharSequence p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnRepeatModeChanged(int p0);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnSessionDestroyed();
    [RegisterAttribute("onShuffleModeChanged", "(Z)V", "GetOnShuffleModeChanged_ZHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnShuffleModeChanged(bool p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[ExtensionAttribute]
public static class Android.Support.V4.Media.Session.IMediaControllerCallbackExtensions : object {
    [ExtensionAttribute]
public static void OnQueueTitleChanged(IMediaControllerCallback self, string p0);
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback")]
internal class Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_onCaptioningEnabledChanged_Z;
    private IntPtr id_onCaptioningEnabledChanged_Z;
    private static Delegate cb_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onExtrasChanged_Landroid_os_Bundle_;
    private IntPtr id_onExtrasChanged_Landroid_os_Bundle_;
    private static Delegate cb_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private IntPtr id_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private IntPtr id_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_onQueueChanged_Ljava_util_List_;
    private IntPtr id_onQueueChanged_Ljava_util_List_;
    private static Delegate cb_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private IntPtr id_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static Delegate cb_onRepeatModeChanged_I;
    private IntPtr id_onRepeatModeChanged_I;
    private static Delegate cb_onSessionDestroyed;
    private IntPtr id_onSessionDestroyed;
    private static Delegate cb_onShuffleModeChanged_Z;
    private IntPtr id_onShuffleModeChanged_Z;
    private static Delegate cb_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    private IntPtr id_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IMediaControllerCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMediaControllerCallbackInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IMediaControllerCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCaptioningEnabledChanged_ZHandler();
    private static void n_OnCaptioningEnabledChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual void OnCaptioningEnabledChanged(bool p0);
    private static Delegate GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void OnEvent(string p0, Bundle p1);
    private static Delegate GetOnExtrasChanged_Landroid_os_Bundle_Handler();
    private static void n_OnExtrasChanged_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnExtrasChanged(Bundle p0);
    private static Delegate GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_OnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnMetadataChanged(MediaMetadataCompat p0);
    private static Delegate GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_OnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    private static Delegate GetOnQueueChanged_Ljava_util_List_Handler();
    private static void n_OnQueueChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnQueueChanged(IList`1<QueueItem> p0);
    private static Delegate GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler();
    private static void n_OnQueueTitleChanged_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnQueueTitleChanged(ICharSequence p0);
    private static Delegate GetOnRepeatModeChanged_IHandler();
    private static void n_OnRepeatModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void OnRepeatModeChanged(int p0);
    private static Delegate GetOnSessionDestroyedHandler();
    private static void n_OnSessionDestroyed(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnSessionDestroyed();
    private static Delegate GetOnShuffleModeChanged_ZHandler();
    private static void n_OnShuffleModeChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual void OnShuffleModeChanged(bool p0);
    private static Delegate GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler();
    private static void n_OnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession", "", "Android.Support.V4.Media.Session.IMediaSessionInvoker")]
public interface Android.Support.V4.Media.Session.IMediaSession {
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public bool ShuffleModeEnabled { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void set_CaptioningEnabled(bool value);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual long get_Flags();
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual bool get_IsTransportControlEnabled();
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual PendingIntent get_LaunchPendingIntent();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual ICharSequence get_QueueTitleFormatted();
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void set_RepeatMode(int value);
    [RegisterAttribute("isShuffleModeEnabled", "()Z", "GetIsShuffleModeEnabledHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual bool get_ShuffleModeEnabled();
    [RegisterAttribute("setShuffleModeEnabled", "(Z)V", "GetSetShuffleModeEnabled_ZHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void set_ShuffleModeEnabled(bool value);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual string get_Tag();
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual ParcelableVolumeInfo get_VolumeAttributes();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void AddQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void AdjustVolume(int p0, int p1, string p2);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void FastForward();
    [RegisterAttribute("next", "()V", "GetNextHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Next();
    [RegisterAttribute("pause", "()V", "GetPauseHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Pause();
    [RegisterAttribute("play", "()V", "GetPlayHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Play();
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PlayFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PlayFromSearch(string p0, Bundle p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PlayFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Prepare();
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PrepareFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PrepareFromSearch(string p0, Bundle p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void PrepareFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Previous();
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Rate(RatingCompat p0);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void RemoveQueueItemAt(int p0);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Rewind();
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void SeekTo(long p0);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void SendCustomAction(string p0, Bundle p1);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual bool SendMediaButton(KeyEvent p0);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void SetVolumeTo(int p0, int p1, string p2);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void SkipToQueueItem(long p0);
    [RegisterAttribute("stop", "()V", "GetStopHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void Stop();
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.Android.Support.Media.Compat")]
public abstract virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession")]
internal class Android.Support.V4.Media.Session.IMediaSessionInvoker : Object {
    private static IntPtr java_class_ref;
    private IntPtr class_ref;
    private static Delegate cb_isCaptioningEnabled;
    private static Delegate cb_setCaptioningEnabled_Z;
    private IntPtr id_isCaptioningEnabled;
    private IntPtr id_setCaptioningEnabled_Z;
    private static Delegate cb_getExtras;
    private IntPtr id_getExtras;
    private static Delegate cb_getFlags;
    private IntPtr id_getFlags;
    private static Delegate cb_isTransportControlEnabled;
    private IntPtr id_isTransportControlEnabled;
    private static Delegate cb_getLaunchPendingIntent;
    private IntPtr id_getLaunchPendingIntent;
    private static Delegate cb_getMetadata;
    private IntPtr id_getMetadata;
    private static Delegate cb_getPackageName;
    private IntPtr id_getPackageName;
    private static Delegate cb_getPlaybackState;
    private IntPtr id_getPlaybackState;
    private static Delegate cb_getQueue;
    private IntPtr id_getQueue;
    private static Delegate cb_getQueueTitle;
    private IntPtr id_getQueueTitle;
    private static Delegate cb_getRatingType;
    private IntPtr id_getRatingType;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private IntPtr id_getRepeatMode;
    private IntPtr id_setRepeatMode_I;
    private static Delegate cb_isShuffleModeEnabled;
    private static Delegate cb_setShuffleModeEnabled_Z;
    private IntPtr id_isShuffleModeEnabled;
    private IntPtr id_setShuffleModeEnabled_Z;
    private static Delegate cb_getTag;
    private IntPtr id_getTag;
    private static Delegate cb_getVolumeAttributes;
    private IntPtr id_getVolumeAttributes;
    private static Delegate cb_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private IntPtr id_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private IntPtr id_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static Delegate cb_adjustVolume_IILjava_lang_String_;
    private IntPtr id_adjustVolume_IILjava_lang_String_;
    private static Delegate cb_fastForward;
    private IntPtr id_fastForward;
    private static Delegate cb_next;
    private IntPtr id_next;
    private static Delegate cb_pause;
    private IntPtr id_pause;
    private static Delegate cb_play;
    private IntPtr id_play;
    private static Delegate cb_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private IntPtr id_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_prepare;
    private IntPtr id_prepare;
    private static Delegate cb_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private IntPtr id_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_previous;
    private IntPtr id_previous;
    private static Delegate cb_rate_Landroid_support_v4_media_RatingCompat_;
    private IntPtr id_rate_Landroid_support_v4_media_RatingCompat_;
    private static Delegate cb_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private IntPtr id_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private IntPtr id_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_removeQueueItemAt_I;
    private IntPtr id_removeQueueItemAt_I;
    private static Delegate cb_rewind;
    private IntPtr id_rewind;
    private static Delegate cb_seekTo_J;
    private IntPtr id_seekTo_J;
    private static Delegate cb_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_sendMediaButton_Landroid_view_KeyEvent_;
    private IntPtr id_sendMediaButton_Landroid_view_KeyEvent_;
    private static Delegate cb_setVolumeTo_IILjava_lang_String_;
    private IntPtr id_setVolumeTo_IILjava_lang_String_;
    private static Delegate cb_skipToQueueItem_J;
    private IntPtr id_skipToQueueItem_J;
    private static Delegate cb_stop;
    private IntPtr id_stop;
    private static Delegate cb_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private IntPtr id_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public bool ShuffleModeEnabled { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    public IMediaSessionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMediaSessionInvoker();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IMediaSession GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsCaptioningEnabledHandler();
    private static bool n_IsCaptioningEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool get_CaptioningEnabled();
    public sealed virtual void set_CaptioningEnabled(bool value);
    private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Bundle get_Extras();
    private static Delegate GetGetFlagsHandler();
    private static long n_GetFlags(IntPtr jnienv, IntPtr native__this);
    public sealed virtual long get_Flags();
    private static Delegate GetIsTransportControlEnabledHandler();
    private static bool n_IsTransportControlEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsTransportControlEnabled();
    private static Delegate GetGetLaunchPendingIntentHandler();
    private static IntPtr n_GetLaunchPendingIntent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual PendingIntent get_LaunchPendingIntent();
    private static Delegate GetGetMetadataHandler();
    private static IntPtr n_GetMetadata(IntPtr jnienv, IntPtr native__this);
    public sealed virtual MediaMetadataCompat get_Metadata();
    private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_PackageName();
    private static Delegate GetGetPlaybackStateHandler();
    private static IntPtr n_GetPlaybackState(IntPtr jnienv, IntPtr native__this);
    public sealed virtual PlaybackStateCompat get_PlaybackState();
    private static Delegate GetGetQueueHandler();
    private static IntPtr n_GetQueue(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList`1<QueueItem> get_Queue();
    private static Delegate GetGetQueueTitleHandler();
    private static IntPtr n_GetQueueTitle(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICharSequence get_QueueTitleFormatted();
    private static Delegate GetGetRatingTypeHandler();
    private static int n_GetRatingType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_RatingType();
    private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual int get_RepeatMode();
    public sealed virtual void set_RepeatMode(int value);
    private static Delegate GetIsShuffleModeEnabledHandler();
    private static bool n_IsShuffleModeEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShuffleModeEnabled_ZHandler();
    private static void n_SetShuffleModeEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool get_ShuffleModeEnabled();
    public sealed virtual void set_ShuffleModeEnabled(bool value);
    private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Tag();
    private static Delegate GetGetVolumeAttributesHandler();
    private static IntPtr n_GetVolumeAttributes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ParcelableVolumeInfo get_VolumeAttributes();
    private static Delegate GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_AddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddQueueItem(MediaDescriptionCompat p0);
    private static Delegate GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler();
    private static void n_AddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1);
    public sealed virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    private static Delegate GetAdjustVolume_IILjava_lang_String_Handler();
    private static void n_AdjustVolume_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual void AdjustVolume(int p0, int p1, string p2);
    private static Delegate GetFastForwardHandler();
    private static void n_FastForward(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void FastForward();
    private static Delegate GetNextHandler();
    private static void n_Next(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Next();
    private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Pause();
    private static Delegate GetPlayHandler();
    private static void n_Play(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Play();
    private static Delegate GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromMediaId(string p0, Bundle p1);
    private static Delegate GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromSearch(string p0, Bundle p1);
    private static Delegate GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromUri(Uri p0, Bundle p1);
    private static Delegate GetPrepareHandler();
    private static void n_Prepare(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Prepare();
    private static Delegate GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromMediaId(string p0, Bundle p1);
    private static Delegate GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromSearch(string p0, Bundle p1);
    private static Delegate GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromUri(Uri p0, Bundle p1);
    private static Delegate GetPreviousHandler();
    private static void n_Previous(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Previous();
    private static Delegate GetRate_Landroid_support_v4_media_RatingCompat_Handler();
    private static void n_Rate_Landroid_support_v4_media_RatingCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Rate(RatingCompat p0);
    private static Delegate GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_RegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    private static Delegate GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_RemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    private static Delegate GetRemoveQueueItemAt_IHandler();
    private static void n_RemoveQueueItemAt_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void RemoveQueueItemAt(int p0);
    private static Delegate GetRewindHandler();
    private static void n_Rewind(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Rewind();
    private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    public sealed virtual void SeekTo(long p0);
    private static Delegate GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendCustomAction_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void SendCustomAction(string p0, Bundle p1);
    private static Delegate GetSendMediaButton_Landroid_view_KeyEvent_Handler();
    private static bool n_SendMediaButton_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool SendMediaButton(KeyEvent p0);
    private static Delegate GetSetVolumeTo_IILjava_lang_String_Handler();
    private static void n_SetVolumeTo_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual void SetVolumeTo(int p0, int p1, string p2);
    private static Delegate GetSkipToQueueItem_JHandler();
    private static void n_SkipToQueueItem_J(IntPtr jnienv, IntPtr native__this, long p0);
    public sealed virtual void SkipToQueueItem(long p0);
    private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Stop();
    private static Delegate GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_UnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[RegisterAttribute("android/support/v4/media/session/MediaButtonReceiver")]
public class Android.Support.V4.Media.Session.MediaButtonReceiver : BroadcastReceiver {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static IntPtr id_buildMediaButtonPendingIntent_Landroid_content_Context_Landroid_content_ComponentName_J;
    private static IntPtr id_buildMediaButtonPendingIntent_Landroid_content_Context_J;
    private static IntPtr id_handleIntent_Landroid_support_v4_media_session_MediaSessionCompat_Landroid_content_Intent_;
    private static Delegate cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
    private static IntPtr id_onReceive_Landroid_content_Context_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MediaButtonReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildMediaButtonPendingIntent", "(Landroid/content/Context;Landroid/content/ComponentName;J)Landroid/app/PendingIntent;", "")]
public static PendingIntent BuildMediaButtonPendingIntent(Context context, ComponentName mbrComponent, long action);
    [RegisterAttribute("buildMediaButtonPendingIntent", "(Landroid/content/Context;J)Landroid/app/PendingIntent;", "")]
public static PendingIntent BuildMediaButtonPendingIntent(Context context, long action);
    [RegisterAttribute("handleIntent", "(Landroid/support/v4/media/session/MediaSessionCompat;Landroid/content/Intent;)Landroid/view/KeyEvent;", "")]
public static KeyEvent HandleIntent(MediaSessionCompat mediaSessionCompat, Intent intent);
    private static Delegate GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler();
    private static void n_OnReceive_Landroid_content_Context_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_intent);
    [RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
public virtual void OnReceive(Context context, Intent intent);
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$Stub")]
public abstract class Android.Support.V4.Media.Session.MediaControllerCallbackStub : Binder {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_asBinder;
    private static IntPtr id_asBinder;
    private static IntPtr id_asInterface_Landroid_os_IBinder_;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static IntPtr id_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_onCaptioningEnabledChanged_Z;
    private static Delegate cb_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onExtrasChanged_Landroid_os_Bundle_;
    private static Delegate cb_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_onQueueChanged_Ljava_util_List_;
    private static Delegate cb_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static Delegate cb_onRepeatModeChanged_I;
    private static Delegate cb_onSessionDestroyed;
    private static Delegate cb_onShuffleModeChanged_Z;
    private static Delegate cb_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected MediaControllerCallbackStub(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/media/session/IMediaControllerCallback;", "")]
public static IMediaControllerCallback AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetOnCaptioningEnabledChanged_ZHandler();
    private static void n_OnCaptioningEnabledChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler")]
public abstract virtual void OnCaptioningEnabledChanged(bool p0);
    private static Delegate GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void OnEvent(string p0, Bundle p1);
    private static Delegate GetOnExtrasChanged_Landroid_os_Bundle_Handler();
    private static void n_OnExtrasChanged_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler")]
public abstract virtual void OnExtrasChanged(Bundle p0);
    private static Delegate GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_OnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public abstract virtual void OnMetadataChanged(MediaMetadataCompat p0);
    private static Delegate GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_OnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public abstract virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    private static Delegate GetOnQueueChanged_Ljava_util_List_Handler();
    private static void n_OnQueueChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler")]
public abstract virtual void OnQueueChanged(IList`1<QueueItem> p0);
    private static Delegate GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler();
    private static void n_OnQueueTitleChanged_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler")]
public abstract virtual void OnQueueTitleChanged(ICharSequence p0);
    public void OnQueueTitleChanged(string p0);
    private static Delegate GetOnRepeatModeChanged_IHandler();
    private static void n_OnRepeatModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler")]
public abstract virtual void OnRepeatModeChanged(int p0);
    private static Delegate GetOnSessionDestroyedHandler();
    private static void n_OnSessionDestroyed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler")]
public abstract virtual void OnSessionDestroyed();
    private static Delegate GetOnShuffleModeChanged_ZHandler();
    private static void n_OnShuffleModeChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("onShuffleModeChanged", "(Z)V", "GetOnShuffleModeChanged_ZHandler")]
public abstract virtual void OnShuffleModeChanged(bool p0);
    private static Delegate GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler();
    private static void n_OnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler")]
public abstract virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$Stub")]
internal class Android.Support.V4.Media.Session.MediaControllerCallbackStubInvoker : MediaControllerCallbackStub {
    private static IntPtr id_onCaptioningEnabledChanged_Z;
    private static IntPtr id_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_onExtrasChanged_Landroid_os_Bundle_;
    private static IntPtr id_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static IntPtr id_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static IntPtr id_onQueueChanged_Ljava_util_List_;
    private static IntPtr id_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static IntPtr id_onRepeatModeChanged_I;
    private static IntPtr id_onSessionDestroyed;
    private static IntPtr id_onShuffleModeChanged_Z;
    private static IntPtr id_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    protected Type ThresholdType { get; }
    public MediaControllerCallbackStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler")]
public virtual void OnCaptioningEnabledChanged(bool p0);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void OnEvent(string p0, Bundle p1);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler")]
public virtual void OnExtrasChanged(Bundle p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler")]
public virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler")]
public virtual void OnQueueTitleChanged(ICharSequence p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler")]
public virtual void OnRepeatModeChanged(int p0);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler")]
public virtual void OnSessionDestroyed();
    [RegisterAttribute("onShuffleModeChanged", "(Z)V", "GetOnShuffleModeChanged_ZHandler")]
public virtual void OnShuffleModeChanged(bool p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler")]
public virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[RegisterAttribute("android/support/v4/media/session/MediaControllerCompat")]
public class Android.Support.V4.Media.Session.MediaControllerCompat : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_support_v4_media_session_MediaSessionCompat_;
    private static IntPtr id_ctor_Landroid_content_Context_Landroid_support_v4_media_session_MediaSessionCompat_Token_;
    private static IntPtr id_getExtras;
    private static IntPtr id_getFlags;
    private static IntPtr id_isCaptioningEnabled;
    private static IntPtr id_isShuffleModeEnabled;
    private static IntPtr id_getMediaController;
    private static IntPtr id_getMetadata;
    private static IntPtr id_getPackageName;
    private static IntPtr id_getPlaybackState;
    private static IntPtr id_getQueue;
    private static IntPtr id_getQueueTitle;
    private static IntPtr id_getRatingType;
    private static IntPtr id_getRepeatMode;
    private static IntPtr id_getSessionActivity;
    private static IntPtr id_getSessionToken;
    private static IntPtr id_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static IntPtr id_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static IntPtr id_adjustVolume_II;
    private static IntPtr id_dispatchMediaButtonEvent_Landroid_view_KeyEvent_;
    private static IntPtr id_getMediaController_Landroid_app_Activity_;
    private static IntPtr id_getPlaybackInfo;
    private static IntPtr id_getTransportControls;
    private static IntPtr id_registerCallback_Landroid_support_v4_media_session_MediaControllerCompat_Callback_;
    private static IntPtr id_registerCallback_Landroid_support_v4_media_session_MediaControllerCompat_Callback_Landroid_os_Handler_;
    private static IntPtr id_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static IntPtr id_removeQueueItemAt_I;
    private static IntPtr id_sendCommand_Ljava_lang_String_Landroid_os_Bundle_Landroid_os_ResultReceiver_;
    private static IntPtr id_setMediaController_Landroid_app_Activity_Landroid_support_v4_media_session_MediaControllerCompat_;
    private static IntPtr id_setVolumeTo_II;
    private static IntPtr id_unregisterCallback_Landroid_support_v4_media_session_MediaControllerCompat_Callback_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsCaptioningEnabled { get; }
    public bool IsShuffleModeEnabled { get; }
    public Object MediaController { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public string QueueTitle { get; }
    public int RatingType { get; }
    public int RepeatMode { get; }
    public PendingIntent SessionActivity { get; }
    public Token SessionToken { get; }
    internal MediaControllerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/v4/media/session/MediaSessionCompat;)V", "")]
public MediaControllerCompat(Context context, MediaSessionCompat session);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/v4/media/session/MediaSessionCompat$Token;)V", "")]
public MediaControllerCompat(Context context, Token sessionToken);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public long get_Flags();
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public bool get_IsCaptioningEnabled();
    [RegisterAttribute("isShuffleModeEnabled", "()Z", "GetIsShuffleModeEnabledHandler")]
public bool get_IsShuffleModeEnabled();
    [RegisterAttribute("getMediaController", "()Ljava/lang/Object;", "GetGetMediaControllerHandler")]
public Object get_MediaController();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public ICharSequence get_QueueTitleFormatted();
    public string get_QueueTitle();
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public int get_RepeatMode();
    [RegisterAttribute("getSessionActivity", "()Landroid/app/PendingIntent;", "GetGetSessionActivityHandler")]
public PendingIntent get_SessionActivity();
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public Token get_SessionToken();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "")]
public void AddQueueItem(MediaDescriptionCompat description);
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "")]
public void AddQueueItem(MediaDescriptionCompat description, int index);
    [RegisterAttribute("adjustVolume", "(II)V", "")]
public void AdjustVolume(int direction, int flags);
    [RegisterAttribute("dispatchMediaButtonEvent", "(Landroid/view/KeyEvent;)Z", "")]
public bool DispatchMediaButtonEvent(KeyEvent keyEvent);
    [RegisterAttribute("getMediaController", "(Landroid/app/Activity;)Landroid/support/v4/media/session/MediaControllerCompat;", "")]
public static MediaControllerCompat GetMediaController(Activity activity);
    [RegisterAttribute("getPlaybackInfo", "()Landroid/support/v4/media/session/MediaControllerCompat$PlaybackInfo;", "")]
public PlaybackInfo GetPlaybackInfo();
    [RegisterAttribute("getTransportControls", "()Landroid/support/v4/media/session/MediaControllerCompat$TransportControls;", "")]
public TransportControls GetTransportControls();
    [RegisterAttribute("registerCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;)V", "")]
public void RegisterCallback(Callback callback);
    [RegisterAttribute("registerCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;Landroid/os/Handler;)V", "")]
public void RegisterCallback(Callback callback, Handler handler);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "")]
public void RemoveQueueItem(MediaDescriptionCompat description);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "")]
public void RemoveQueueItemAt(int index);
    [RegisterAttribute("sendCommand", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/ResultReceiver;)V", "")]
public void SendCommand(string command, Bundle params, ResultReceiver cb);
    [RegisterAttribute("setMediaController", "(Landroid/app/Activity;Landroid/support/v4/media/session/MediaControllerCompat;)V", "")]
public static void SetMediaController(Activity activity, MediaControllerCompat mediaController);
    [RegisterAttribute("setVolumeTo", "(II)V", "")]
public void SetVolumeTo(int value, int flags);
    [RegisterAttribute("unregisterCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;)V", "")]
public void UnregisterCallback(Callback callback);
}
[RegisterAttribute("android/support/v4/media/session/MediaSessionCompat")]
public class Android.Support.V4.Media.Session.MediaSessionCompat : Object {
    [RegisterAttribute("ACTION_FLAG_AS_INAPPROPRIATE")]
public static string ActionFlagAsInappropriate;
    [RegisterAttribute("ACTION_SKIP_AD")]
public static string ActionSkipAd;
    [RegisterAttribute("FLAG_HANDLES_MEDIA_BUTTONS")]
public static int FlagHandlesMediaButtons;
    [RegisterAttribute("FLAG_HANDLES_QUEUE_COMMANDS")]
public static int FlagHandlesQueueCommands;
    [RegisterAttribute("FLAG_HANDLES_TRANSPORT_CONTROLS")]
public static int FlagHandlesTransportControls;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_content_Context_Ljava_lang_String_;
    private static IntPtr id_ctor_Landroid_content_Context_Ljava_lang_String_Landroid_content_ComponentName_Landroid_app_PendingIntent_;
    private static Delegate cb_isActive;
    private static Delegate cb_setActive_Z;
    private static IntPtr id_isActive;
    private static IntPtr id_setActive_Z;
    private static Delegate cb_getCallingPackage;
    private static IntPtr id_getCallingPackage;
    private static Delegate cb_getController;
    private static IntPtr id_getController;
    private static Delegate cb_getMediaSession;
    private static IntPtr id_getMediaSession;
    private static Delegate cb_getRemoteControlClient;
    private static IntPtr id_getRemoteControlClient;
    private static Delegate cb_getSessionToken;
    private static IntPtr id_getSessionToken;
    private static Delegate cb_addOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    private static IntPtr id_addOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    private static IntPtr id_fromMediaSession_Landroid_content_Context_Ljava_lang_Object_;
    private static IntPtr id_obtain_Landroid_content_Context_Ljava_lang_Object_;
    private static Delegate cb_release;
    private static IntPtr id_release;
    private static Delegate cb_removeOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    private static IntPtr id_removeOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    private static Delegate cb_sendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_sendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_;
    private static IntPtr id_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_;
    private static Delegate cb_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_;
    private static IntPtr id_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_;
    private static Delegate cb_setCaptioningEnabled_Z;
    private static IntPtr id_setCaptioningEnabled_Z;
    private static Delegate cb_setExtras_Landroid_os_Bundle_;
    private static IntPtr id_setExtras_Landroid_os_Bundle_;
    private static Delegate cb_setFlags_I;
    private static IntPtr id_setFlags_I;
    private static Delegate cb_setMediaButtonReceiver_Landroid_app_PendingIntent_;
    private static IntPtr id_setMediaButtonReceiver_Landroid_app_PendingIntent_;
    private static Delegate cb_setMetadata_Landroid_support_v4_media_MediaMetadataCompat_;
    private static IntPtr id_setMetadata_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_setPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static IntPtr id_setPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_setPlaybackToLocal_I;
    private static IntPtr id_setPlaybackToLocal_I;
    private static Delegate cb_setPlaybackToRemote_Landroid_support_v4_media_VolumeProviderCompat_;
    private static IntPtr id_setPlaybackToRemote_Landroid_support_v4_media_VolumeProviderCompat_;
    private static Delegate cb_setQueue_Ljava_util_List_;
    private static IntPtr id_setQueue_Ljava_util_List_;
    private static Delegate cb_setQueueTitle_Ljava_lang_CharSequence_;
    private static IntPtr id_setQueueTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_setRatingType_I;
    private static IntPtr id_setRatingType_I;
    private static Delegate cb_setRepeatMode_I;
    private static IntPtr id_setRepeatMode_I;
    private static Delegate cb_setSessionActivity_Landroid_app_PendingIntent_;
    private static IntPtr id_setSessionActivity_Landroid_app_PendingIntent_;
    private static Delegate cb_setShuffleModeEnabled_Z;
    private static IntPtr id_setShuffleModeEnabled_Z;
    private WeakReference weak_implementor_AddOnActiveChangeListener;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool Active { get; public set; }
    public string CallingPackage { get; }
    public MediaControllerCompat Controller { get; }
    public Object MediaSession { get; }
    public Object RemoteControlClient { get; }
    public Token SessionToken { get; }
    protected MediaSessionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;)V", "")]
public MediaSessionCompat(Context context, string tag);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/content/ComponentName;Landroid/app/PendingIntent;)V", "")]
public MediaSessionCompat(Context context, string tag, ComponentName mbrComponent, PendingIntent mbrIntent);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetActive_ZHandler();
    private static void n_SetActive_Z(IntPtr jnienv, IntPtr native__this, bool active);
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler")]
public virtual bool get_Active();
    [RegisterAttribute("setActive", "(Z)V", "GetSetActive_ZHandler")]
public virtual void set_Active(bool value);
    private static Delegate GetGetCallingPackageHandler();
    private static IntPtr n_GetCallingPackage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCallingPackage", "()Ljava/lang/String;", "GetGetCallingPackageHandler")]
public virtual string get_CallingPackage();
    private static Delegate GetGetControllerHandler();
    private static IntPtr n_GetController(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getController", "()Landroid/support/v4/media/session/MediaControllerCompat;", "GetGetControllerHandler")]
public virtual MediaControllerCompat get_Controller();
    private static Delegate GetGetMediaSessionHandler();
    private static IntPtr n_GetMediaSession(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMediaSession", "()Ljava/lang/Object;", "GetGetMediaSessionHandler")]
public virtual Object get_MediaSession();
    private static Delegate GetGetRemoteControlClientHandler();
    private static IntPtr n_GetRemoteControlClient(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRemoteControlClient", "()Ljava/lang/Object;", "GetGetRemoteControlClientHandler")]
public virtual Object get_RemoteControlClient();
    private static Delegate GetGetSessionTokenHandler();
    private static IntPtr n_GetSessionToken(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public virtual Token get_SessionToken();
    private static Delegate GetAddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler();
    private static void n_AddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addOnActiveChangeListener", "(Landroid/support/v4/media/session/MediaSessionCompat$OnActiveChangeListener;)V", "GetAddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler")]
public virtual void AddOnActiveChangeListener(IOnActiveChangeListener listener);
    [RegisterAttribute("fromMediaSession", "(Landroid/content/Context;Ljava/lang/Object;)Landroid/support/v4/media/session/MediaSessionCompat;", "")]
public static MediaSessionCompat FromMediaSession(Context context, Object mediaSession);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("obtain", "(Landroid/content/Context;Ljava/lang/Object;)Landroid/support/v4/media/session/MediaSessionCompat;", "")]
public static MediaSessionCompat Obtain(Context context, Object mediaSession);
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("release", "()V", "GetReleaseHandler")]
public virtual void Release();
    private static Delegate GetRemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler();
    private static void n_RemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeOnActiveChangeListener", "(Landroid/support/v4/media/session/MediaSessionCompat$OnActiveChangeListener;)V", "GetRemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler")]
public virtual void RemoveOnActiveChangeListener(IOnActiveChangeListener listener);
    private static Delegate GetSendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native__event, IntPtr native_extras);
    [RegisterAttribute("sendSessionEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void SendSessionEvent(string event, Bundle extras);
    private static Delegate GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Handler();
    private static void n_SetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("setCallback", "(Landroid/support/v4/media/session/MediaSessionCompat$Callback;)V", "GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Handler")]
public virtual void SetCallback(Callback callback);
    private static Delegate GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_Handler();
    private static void n_SetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback, IntPtr native_handler);
    [RegisterAttribute("setCallback", "(Landroid/support/v4/media/session/MediaSessionCompat$Callback;Landroid/os/Handler;)V", "GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_Handler")]
public virtual void SetCallback(Callback callback, Handler handler);
    private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public virtual void SetCaptioningEnabled(bool enabled);
    private static Delegate GetSetExtras_Landroid_os_Bundle_Handler();
    private static void n_SetExtras_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras);
    [RegisterAttribute("setExtras", "(Landroid/os/Bundle;)V", "GetSetExtras_Landroid_os_Bundle_Handler")]
public virtual void SetExtras(Bundle extras);
    private static Delegate GetSetFlags_IHandler();
    private static void n_SetFlags_I(IntPtr jnienv, IntPtr native__this, int flags);
    [RegisterAttribute("setFlags", "(I)V", "GetSetFlags_IHandler")]
public virtual void SetFlags(int flags);
    private static Delegate GetSetMediaButtonReceiver_Landroid_app_PendingIntent_Handler();
    private static void n_SetMediaButtonReceiver_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_mbr);
    [RegisterAttribute("setMediaButtonReceiver", "(Landroid/app/PendingIntent;)V", "GetSetMediaButtonReceiver_Landroid_app_PendingIntent_Handler")]
public virtual void SetMediaButtonReceiver(PendingIntent mbr);
    private static Delegate GetSetMetadata_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_SetMetadata_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_metadata);
    [RegisterAttribute("setMetadata", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetSetMetadata_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public virtual void SetMetadata(MediaMetadataCompat metadata);
    private static Delegate GetSetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_SetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("setPlaybackState", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetSetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public virtual void SetPlaybackState(PlaybackStateCompat state);
    private static Delegate GetSetPlaybackToLocal_IHandler();
    private static void n_SetPlaybackToLocal_I(IntPtr jnienv, IntPtr native__this, int stream);
    [RegisterAttribute("setPlaybackToLocal", "(I)V", "GetSetPlaybackToLocal_IHandler")]
public virtual void SetPlaybackToLocal(int stream);
    private static Delegate GetSetPlaybackToRemote_Landroid_support_v4_media_VolumeProviderCompat_Handler();
    private static void n_SetPlaybackToRemote_Landroid_support_v4_media_VolumeProviderCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_volumeProvider);
    [RegisterAttribute("setPlaybackToRemote", "(Landroid/support/v4/media/VolumeProviderCompat;)V", "GetSetPlaybackToRemote_Landroid_support_v4_media_VolumeProviderCompat_Handler")]
public virtual void SetPlaybackToRemote(VolumeProviderCompat volumeProvider);
    private static Delegate GetSetQueue_Ljava_util_List_Handler();
    private static void n_SetQueue_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_queue);
    [RegisterAttribute("setQueue", "(Ljava/util/List;)V", "GetSetQueue_Ljava_util_List_Handler")]
public virtual void SetQueue(IList`1<QueueItem> queue);
    private static Delegate GetSetQueueTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetQueueTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("setQueueTitle", "(Ljava/lang/CharSequence;)V", "GetSetQueueTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetQueueTitle(ICharSequence title);
    public void SetQueueTitle(string title);
    private static Delegate GetSetRatingType_IHandler();
    private static void n_SetRatingType_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("setRatingType", "(I)V", "GetSetRatingType_IHandler")]
public virtual void SetRatingType(int type);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int repeatMode);
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void SetRepeatMode(int repeatMode);
    private static Delegate GetSetSessionActivity_Landroid_app_PendingIntent_Handler();
    private static void n_SetSessionActivity_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_pi);
    [RegisterAttribute("setSessionActivity", "(Landroid/app/PendingIntent;)V", "GetSetSessionActivity_Landroid_app_PendingIntent_Handler")]
public virtual void SetSessionActivity(PendingIntent pi);
    private static Delegate GetSetShuffleModeEnabled_ZHandler();
    private static void n_SetShuffleModeEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setShuffleModeEnabled", "(Z)V", "GetSetShuffleModeEnabled_ZHandler")]
public virtual void SetShuffleModeEnabled(bool enabled);
    public void add_ActiveChange(EventHandler value);
    public void remove_ActiveChange(EventHandler value);
    private IOnActiveChangeListenerImplementor __CreateIOnActiveChangeListenerImplementor();
    [CompilerGeneratedAttribute]
private void <remove_ActiveChange>b__179_0(IOnActiveChangeListener __v);
}
[ExtensionAttribute]
public static class Android.Support.V4.Media.Session.MediaSessionCompatIMediaSessionImplExtensions : object {
    [ExtensionAttribute]
public static void SetQueueTitle(IMediaSessionImpl self, string p0);
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession$Stub")]
public abstract class Android.Support.V4.Media.Session.MediaSessionStub : Binder {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_asBinder;
    private static IntPtr id_asBinder;
    private static IntPtr id_asInterface_Landroid_os_IBinder_;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static IntPtr id_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static Delegate cb_adjustVolume_IILjava_lang_String_;
    private static Delegate cb_fastForward;
    private static Delegate cb_next;
    private static Delegate cb_pause;
    private static Delegate cb_play;
    private static Delegate cb_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_prepare;
    private static Delegate cb_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_previous;
    private static Delegate cb_rate_Landroid_support_v4_media_RatingCompat_;
    private static Delegate cb_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_removeQueueItemAt_I;
    private static Delegate cb_rewind;
    private static Delegate cb_seekTo_J;
    private static Delegate cb_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_sendMediaButton_Landroid_view_KeyEvent_;
    private static Delegate cb_setVolumeTo_IILjava_lang_String_;
    private static Delegate cb_skipToQueueItem_J;
    private static Delegate cb_stop;
    private static Delegate cb_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_isCaptioningEnabled;
    private static Delegate cb_setCaptioningEnabled_Z;
    private static Delegate cb_getExtras;
    private static Delegate cb_getFlags;
    private static Delegate cb_isTransportControlEnabled;
    private static Delegate cb_getLaunchPendingIntent;
    private static Delegate cb_getMetadata;
    private static Delegate cb_getPackageName;
    private static Delegate cb_getPlaybackState;
    private static Delegate cb_getQueue;
    private static Delegate cb_getQueueTitle;
    private static Delegate cb_getRatingType;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private static Delegate cb_isShuffleModeEnabled;
    private static Delegate cb_setShuffleModeEnabled_Z;
    private static Delegate cb_getTag;
    private static Delegate cb_getVolumeAttributes;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public string QueueTitle { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public bool ShuffleModeEnabled { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    protected MediaSessionStub(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/media/session/IMediaSession;", "")]
public static IMediaSession AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_AddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public abstract virtual void AddQueueItem(MediaDescriptionCompat p0);
    private static Delegate GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler();
    private static void n_AddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler")]
public abstract virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    private static Delegate GetAdjustVolume_IILjava_lang_String_Handler();
    private static void n_AdjustVolume_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler")]
public abstract virtual void AdjustVolume(int p0, int p1, string p2);
    private static Delegate GetFastForwardHandler();
    private static void n_FastForward(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler")]
public abstract virtual void FastForward();
    private static Delegate GetNextHandler();
    private static void n_Next(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("next", "()V", "GetNextHandler")]
public abstract virtual void Next();
    private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public abstract virtual void Pause();
    private static Delegate GetPlayHandler();
    private static void n_Play(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("play", "()V", "GetPlayHandler")]
public abstract virtual void Play();
    private static Delegate GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromMediaId(string p0, Bundle p1);
    private static Delegate GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromSearch(string p0, Bundle p1);
    private static Delegate GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromUri(Uri p0, Bundle p1);
    private static Delegate GetPrepareHandler();
    private static void n_Prepare(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler")]
public abstract virtual void Prepare();
    private static Delegate GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromMediaId(string p0, Bundle p1);
    private static Delegate GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromSearch(string p0, Bundle p1);
    private static Delegate GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromUri(Uri p0, Bundle p1);
    private static Delegate GetPreviousHandler();
    private static void n_Previous(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler")]
public abstract virtual void Previous();
    private static Delegate GetRate_Landroid_support_v4_media_RatingCompat_Handler();
    private static void n_Rate_Landroid_support_v4_media_RatingCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler")]
public abstract virtual void Rate(RatingCompat p0);
    private static Delegate GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_RegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public abstract virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    private static Delegate GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_RemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public abstract virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    private static Delegate GetRemoveQueueItemAt_IHandler();
    private static void n_RemoveQueueItemAt_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler")]
public abstract virtual void RemoveQueueItemAt(int p0);
    private static Delegate GetRewindHandler();
    private static void n_Rewind(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler")]
public abstract virtual void Rewind();
    private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public abstract virtual void SeekTo(long p0);
    private static Delegate GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendCustomAction_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void SendCustomAction(string p0, Bundle p1);
    private static Delegate GetSendMediaButton_Landroid_view_KeyEvent_Handler();
    private static bool n_SendMediaButton_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler")]
public abstract virtual bool SendMediaButton(KeyEvent p0);
    private static Delegate GetSetVolumeTo_IILjava_lang_String_Handler();
    private static void n_SetVolumeTo_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler")]
public abstract virtual void SetVolumeTo(int p0, int p1, string p2);
    private static Delegate GetSkipToQueueItem_JHandler();
    private static void n_SkipToQueueItem_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler")]
public abstract virtual void SkipToQueueItem(long p0);
    private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public abstract virtual void Stop();
    private static Delegate GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_UnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public abstract virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
    private static Delegate GetIsCaptioningEnabledHandler();
    private static bool n_IsCaptioningEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public abstract virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public abstract virtual void set_CaptioningEnabled(bool value);
    private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public abstract virtual Bundle get_Extras();
    private static Delegate GetGetFlagsHandler();
    private static long n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public abstract virtual long get_Flags();
    private static Delegate GetIsTransportControlEnabledHandler();
    private static bool n_IsTransportControlEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler")]
public abstract virtual bool get_IsTransportControlEnabled();
    private static Delegate GetGetLaunchPendingIntentHandler();
    private static IntPtr n_GetLaunchPendingIntent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler")]
public abstract virtual PendingIntent get_LaunchPendingIntent();
    private static Delegate GetGetMetadataHandler();
    private static IntPtr n_GetMetadata(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public abstract virtual MediaMetadataCompat get_Metadata();
    private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public abstract virtual string get_PackageName();
    private static Delegate GetGetPlaybackStateHandler();
    private static IntPtr n_GetPlaybackState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public abstract virtual PlaybackStateCompat get_PlaybackState();
    private static Delegate GetGetQueueHandler();
    private static IntPtr n_GetQueue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public abstract virtual IList`1<QueueItem> get_Queue();
    private static Delegate GetGetQueueTitleHandler();
    private static IntPtr n_GetQueueTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public abstract virtual ICharSequence get_QueueTitleFormatted();
    public string get_QueueTitle();
    private static Delegate GetGetRatingTypeHandler();
    private static int n_GetRatingType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public abstract virtual int get_RatingType();
    private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public abstract virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public abstract virtual void set_RepeatMode(int value);
    private static Delegate GetIsShuffleModeEnabledHandler();
    private static bool n_IsShuffleModeEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetShuffleModeEnabled_ZHandler();
    private static void n_SetShuffleModeEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isShuffleModeEnabled", "()Z", "GetIsShuffleModeEnabledHandler")]
public abstract virtual bool get_ShuffleModeEnabled();
    [RegisterAttribute("setShuffleModeEnabled", "(Z)V", "GetSetShuffleModeEnabled_ZHandler")]
public abstract virtual void set_ShuffleModeEnabled(bool value);
    private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler")]
public abstract virtual string get_Tag();
    private static Delegate GetGetVolumeAttributesHandler();
    private static IntPtr n_GetVolumeAttributes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler")]
public abstract virtual ParcelableVolumeInfo get_VolumeAttributes();
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession$Stub")]
internal class Android.Support.V4.Media.Session.MediaSessionStubInvoker : MediaSessionStub {
    private static IntPtr id_isCaptioningEnabled;
    private static IntPtr id_setCaptioningEnabled_Z;
    private static IntPtr id_getExtras;
    private static IntPtr id_getFlags;
    private static IntPtr id_isTransportControlEnabled;
    private static IntPtr id_getLaunchPendingIntent;
    private static IntPtr id_getMetadata;
    private static IntPtr id_getPackageName;
    private static IntPtr id_getPlaybackState;
    private static IntPtr id_getQueue;
    private static IntPtr id_getQueueTitle;
    private static IntPtr id_getRatingType;
    private static IntPtr id_getRepeatMode;
    private static IntPtr id_setRepeatMode_I;
    private static IntPtr id_isShuffleModeEnabled;
    private static IntPtr id_setShuffleModeEnabled_Z;
    private static IntPtr id_getTag;
    private static IntPtr id_getVolumeAttributes;
    private static IntPtr id_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static IntPtr id_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static IntPtr id_adjustVolume_IILjava_lang_String_;
    private static IntPtr id_fastForward;
    private static IntPtr id_next;
    private static IntPtr id_pause;
    private static IntPtr id_play;
    private static IntPtr id_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static IntPtr id_prepare;
    private static IntPtr id_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static IntPtr id_previous;
    private static IntPtr id_rate_Landroid_support_v4_media_RatingCompat_;
    private static IntPtr id_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static IntPtr id_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static IntPtr id_removeQueueItemAt_I;
    private static IntPtr id_rewind;
    private static IntPtr id_seekTo_J;
    private static IntPtr id_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static IntPtr id_sendMediaButton_Landroid_view_KeyEvent_;
    private static IntPtr id_setVolumeTo_IILjava_lang_String_;
    private static IntPtr id_skipToQueueItem_J;
    private static IntPtr id_stop;
    private static IntPtr id_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public bool ShuffleModeEnabled { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    public MediaSessionStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public virtual void set_CaptioningEnabled(bool value);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public virtual long get_Flags();
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler")]
public virtual bool get_IsTransportControlEnabled();
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler")]
public virtual PendingIntent get_LaunchPendingIntent();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public virtual MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public virtual string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public virtual PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public virtual IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public virtual ICharSequence get_QueueTitleFormatted();
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public virtual int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void set_RepeatMode(int value);
    [RegisterAttribute("isShuffleModeEnabled", "()Z", "GetIsShuffleModeEnabledHandler")]
public virtual bool get_ShuffleModeEnabled();
    [RegisterAttribute("setShuffleModeEnabled", "(Z)V", "GetSetShuffleModeEnabled_ZHandler")]
public virtual void set_ShuffleModeEnabled(bool value);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler")]
public virtual string get_Tag();
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler")]
public virtual ParcelableVolumeInfo get_VolumeAttributes();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void AddQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler")]
public virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler")]
public virtual void AdjustVolume(int p0, int p1, string p2);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler")]
public virtual void FastForward();
    [RegisterAttribute("next", "()V", "GetNextHandler")]
public virtual void Next();
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public virtual void Pause();
    [RegisterAttribute("play", "()V", "GetPlayHandler")]
public virtual void Play();
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromSearch(string p0, Bundle p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PlayFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler")]
public virtual void Prepare();
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromSearch(string p0, Bundle p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler")]
public virtual void Previous();
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler")]
public virtual void Rate(RatingCompat p0);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler")]
public virtual void RemoveQueueItemAt(int p0);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler")]
public virtual void Rewind();
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public virtual void SeekTo(long p0);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void SendCustomAction(string p0, Bundle p1);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler")]
public virtual bool SendMediaButton(KeyEvent p0);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler")]
public virtual void SetVolumeTo(int p0, int p1, string p2);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler")]
public virtual void SkipToQueueItem(long p0);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
}
[RegisterAttribute("android/support/v4/media/session/ParcelableVolumeInfo")]
public class Android.Support.V4.Media.Session.ParcelableVolumeInfo : Object {
    private static IntPtr CREATOR_jfieldId;
    private static IntPtr audioStream_jfieldId;
    private static IntPtr controlType_jfieldId;
    private static IntPtr currentVolume_jfieldId;
    private static IntPtr maxVolume_jfieldId;
    private static IntPtr volumeType_jfieldId;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_os_Parcel_;
    private static IntPtr id_ctor_IIIII;
    private static Delegate cb_describeContents;
    private static IntPtr id_describeContents;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    [RegisterAttribute("audioStream")]
public int AudioStream { get; public set; }
    [RegisterAttribute("controlType")]
public int ControlType { get; public set; }
    [RegisterAttribute("currentVolume")]
public int CurrentVolume { get; public set; }
    [RegisterAttribute("maxVolume")]
public int MaxVolume { get; public set; }
    [RegisterAttribute("volumeType")]
public int VolumeType { get; public set; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ParcelableVolumeInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;)V", "")]
public ParcelableVolumeInfo(Parcel from);
    [RegisterAttribute(".ctor", "(IIIII)V", "")]
public ParcelableVolumeInfo(int volumeType, int audioStream, int controlType, int maxVolume, int currentVolume);
    public static IParcelableCreator get_Creator();
    public int get_AudioStream();
    public void set_AudioStream(int value);
    public int get_ControlType();
    public void set_ControlType(int value);
    public int get_CurrentVolume();
    public void set_CurrentVolume(int value);
    public int get_MaxVolume();
    public void set_MaxVolume(int value);
    public int get_VolumeType();
    public void set_VolumeType(int value);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_dest, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("android/support/v4/media/session/PlaybackStateCompat")]
public class Android.Support.V4.Media.Session.PlaybackStateCompat : Object {
    [RegisterAttribute("ACTION_FAST_FORWARD")]
public static long ActionFastForward;
    [RegisterAttribute("ACTION_PAUSE")]
public static long ActionPause;
    [RegisterAttribute("ACTION_PLAY")]
public static long ActionPlay;
    [RegisterAttribute("ACTION_PLAY_FROM_MEDIA_ID")]
public static long ActionPlayFromMediaId;
    [RegisterAttribute("ACTION_PLAY_FROM_SEARCH")]
public static long ActionPlayFromSearch;
    [RegisterAttribute("ACTION_PLAY_FROM_URI")]
public static long ActionPlayFromUri;
    [RegisterAttribute("ACTION_PLAY_PAUSE")]
public static long ActionPlayPause;
    [RegisterAttribute("ACTION_PREPARE")]
public static long ActionPrepare;
    [RegisterAttribute("ACTION_PREPARE_FROM_MEDIA_ID")]
public static long ActionPrepareFromMediaId;
    [RegisterAttribute("ACTION_PREPARE_FROM_SEARCH")]
public static long ActionPrepareFromSearch;
    [RegisterAttribute("ACTION_PREPARE_FROM_URI")]
public static long ActionPrepareFromUri;
    [RegisterAttribute("ACTION_REWIND")]
public static long ActionRewind;
    [RegisterAttribute("ACTION_SEEK_TO")]
public static long ActionSeekTo;
    [RegisterAttribute("ACTION_SET_CAPTIONING_ENABLED")]
public static long ActionSetCaptioningEnabled;
    [RegisterAttribute("ACTION_SET_RATING")]
public static long ActionSetRating;
    [RegisterAttribute("ACTION_SET_REPEAT_MODE")]
public static long ActionSetRepeatMode;
    [RegisterAttribute("ACTION_SET_SHUFFLE_MODE_ENABLED")]
public static long ActionSetShuffleModeEnabled;
    [RegisterAttribute("ACTION_SKIP_TO_NEXT")]
public static long ActionSkipToNext;
    [RegisterAttribute("ACTION_SKIP_TO_PREVIOUS")]
public static long ActionSkipToPrevious;
    [RegisterAttribute("ACTION_SKIP_TO_QUEUE_ITEM")]
public static long ActionSkipToQueueItem;
    [RegisterAttribute("ACTION_STOP")]
public static long ActionStop;
    private static IntPtr CREATOR_jfieldId;
    [RegisterAttribute("ERROR_CODE_ACTION_ABORTED")]
public static int ErrorCodeActionAborted;
    [RegisterAttribute("ERROR_CODE_APP_ERROR")]
public static int ErrorCodeAppError;
    [RegisterAttribute("ERROR_CODE_AUTHENTICATION_EXPIRED")]
public static int ErrorCodeAuthenticationExpired;
    [RegisterAttribute("ERROR_CODE_CONCURRENT_STREAM_LIMIT")]
public static int ErrorCodeConcurrentStreamLimit;
    [RegisterAttribute("ERROR_CODE_CONTENT_ALREADY_PLAYING")]
public static int ErrorCodeContentAlreadyPlaying;
    [RegisterAttribute("ERROR_CODE_END_OF_QUEUE")]
public static int ErrorCodeEndOfQueue;
    [RegisterAttribute("ERROR_CODE_NOT_AVAILABLE_IN_REGION")]
public static int ErrorCodeNotAvailableInRegion;
    [RegisterAttribute("ERROR_CODE_NOT_SUPPORTED")]
public static int ErrorCodeNotSupported;
    [RegisterAttribute("ERROR_CODE_PARENTAL_CONTROL_RESTRICTED")]
public static int ErrorCodeParentalControlRestricted;
    [RegisterAttribute("ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED")]
public static int ErrorCodePremiumAccountRequired;
    [RegisterAttribute("ERROR_CODE_SKIP_LIMIT_REACHED")]
public static int ErrorCodeSkipLimitReached;
    [RegisterAttribute("ERROR_CODE_UNKNOWN_ERROR")]
public static int ErrorCodeUnknownError;
    [RegisterAttribute("PLAYBACK_POSITION_UNKNOWN")]
public static long PlaybackPositionUnknown;
    [RegisterAttribute("REPEAT_MODE_ALL")]
public static int RepeatModeAll;
    [RegisterAttribute("REPEAT_MODE_NONE")]
public static int RepeatModeNone;
    [RegisterAttribute("REPEAT_MODE_ONE")]
public static int RepeatModeOne;
    [RegisterAttribute("STATE_BUFFERING")]
public static int StateBuffering;
    [RegisterAttribute("STATE_CONNECTING")]
public static int StateConnecting;
    [RegisterAttribute("STATE_ERROR")]
public static int StateError;
    [RegisterAttribute("STATE_FAST_FORWARDING")]
public static int StateFastForwarding;
    [RegisterAttribute("STATE_NONE")]
public static int StateNone;
    [RegisterAttribute("STATE_PAUSED")]
public static int StatePaused;
    [RegisterAttribute("STATE_PLAYING")]
public static int StatePlaying;
    [RegisterAttribute("STATE_REWINDING")]
public static int StateRewinding;
    [RegisterAttribute("STATE_SKIPPING_TO_NEXT")]
public static int StateSkippingToNext;
    [RegisterAttribute("STATE_SKIPPING_TO_PREVIOUS")]
public static int StateSkippingToPrevious;
    [RegisterAttribute("STATE_SKIPPING_TO_QUEUE_ITEM")]
public static int StateSkippingToQueueItem;
    [RegisterAttribute("STATE_STOPPED")]
public static int StateStopped;
    internal static IntPtr java_class_handle;
    private static IntPtr id_getActions;
    private static IntPtr id_getActiveQueueItemId;
    private static IntPtr id_getBufferedPosition;
    private static IntPtr id_getCustomActions;
    private static IntPtr id_getErrorCode;
    private static IntPtr id_getErrorMessage;
    private static IntPtr id_getExtras;
    private static IntPtr id_getLastPositionUpdateTime;
    private static IntPtr id_getPlaybackSpeed;
    private static IntPtr id_getPlaybackState;
    private static IntPtr id_getPosition;
    private static IntPtr id_getState;
    private static IntPtr id_describeContents;
    private static IntPtr id_fromPlaybackState_Ljava_lang_Object_;
    private static IntPtr id_toKeyCode_J;
    private static IntPtr id_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public long Actions { get; }
    public long ActiveQueueItemId { get; }
    public long BufferedPosition { get; }
    public IList`1<CustomAction> CustomActions { get; }
    public int ErrorCode { get; }
    public ICharSequence ErrorMessageFormatted { get; }
    public string ErrorMessage { get; }
    public Bundle Extras { get; }
    public long LastPositionUpdateTime { get; }
    public float PlaybackSpeed { get; }
    public Object PlaybackState { get; }
    public long Position { get; }
    public int State { get; }
    internal PlaybackStateCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActions", "()J", "GetGetActionsHandler")]
public long get_Actions();
    [RegisterAttribute("getActiveQueueItemId", "()J", "GetGetActiveQueueItemIdHandler")]
public long get_ActiveQueueItemId();
    [RegisterAttribute("getBufferedPosition", "()J", "GetGetBufferedPositionHandler")]
public long get_BufferedPosition();
    [RegisterAttribute("getCustomActions", "()Ljava/util/List;", "GetGetCustomActionsHandler")]
public IList`1<CustomAction> get_CustomActions();
    [RegisterAttribute("getErrorCode", "()I", "GetGetErrorCodeHandler")]
public int get_ErrorCode();
    [RegisterAttribute("getErrorMessage", "()Ljava/lang/CharSequence;", "GetGetErrorMessageHandler")]
public ICharSequence get_ErrorMessageFormatted();
    public string get_ErrorMessage();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public Bundle get_Extras();
    [RegisterAttribute("getLastPositionUpdateTime", "()J", "GetGetLastPositionUpdateTimeHandler")]
public long get_LastPositionUpdateTime();
    [RegisterAttribute("getPlaybackSpeed", "()F", "GetGetPlaybackSpeedHandler")]
public float get_PlaybackSpeed();
    [RegisterAttribute("getPlaybackState", "()Ljava/lang/Object;", "GetGetPlaybackStateHandler")]
public Object get_PlaybackState();
    [RegisterAttribute("getPosition", "()J", "GetGetPositionHandler")]
public long get_Position();
    [RegisterAttribute("getState", "()I", "GetGetStateHandler")]
public int get_State();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromPlaybackState", "(Ljava/lang/Object;)Landroid/support/v4/media/session/PlaybackStateCompat;", "")]
public static PlaybackStateCompat FromPlaybackState(Object stateObj);
    [RegisterAttribute("toKeyCode", "(J)I", "")]
public static int ToKeyCode(long action);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/media/TransportController")]
public abstract class Android.Support.V4.Media.TransportController : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_getBufferPercentage;
    private static Delegate cb_getCurrentPosition;
    private static Delegate cb_getDuration;
    private static Delegate cb_isPlaying;
    private static Delegate cb_getTransportControlFlags;
    private static Delegate cb_pausePlaying;
    private static Delegate cb_registerStateListener_Landroid_support_v4_media_TransportStateListener_;
    private static Delegate cb_seekTo_J;
    private static Delegate cb_startPlaying;
    private static Delegate cb_stopPlaying;
    private static Delegate cb_unregisterStateListener_Landroid_support_v4_media_TransportStateListener_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int BufferPercentage { get; }
    public long CurrentPosition { get; }
    public long Duration { get; }
    public bool IsPlaying { get; }
    public int TransportControlFlags { get; }
    protected TransportController(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBufferPercentageHandler();
    private static int n_GetBufferPercentage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBufferPercentage", "()I", "GetGetBufferPercentageHandler")]
public abstract virtual int get_BufferPercentage();
    private static Delegate GetGetCurrentPositionHandler();
    private static long n_GetCurrentPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentPosition", "()J", "GetGetCurrentPositionHandler")]
public abstract virtual long get_CurrentPosition();
    private static Delegate GetGetDurationHandler();
    private static long n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public abstract virtual long get_Duration();
    private static Delegate GetIsPlayingHandler();
    private static bool n_IsPlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isPlaying", "()Z", "GetIsPlayingHandler")]
public abstract virtual bool get_IsPlaying();
    private static Delegate GetGetTransportControlFlagsHandler();
    private static int n_GetTransportControlFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransportControlFlags", "()I", "GetGetTransportControlFlagsHandler")]
public abstract virtual int get_TransportControlFlags();
    private static Delegate GetPausePlayingHandler();
    private static void n_PausePlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pausePlaying", "()V", "GetPausePlayingHandler")]
public abstract virtual void PausePlaying();
    private static Delegate GetRegisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler();
    private static void n_RegisterStateListener_Landroid_support_v4_media_TransportStateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("registerStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetRegisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public abstract virtual void RegisterStateListener(TransportStateListener p0);
    private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public abstract virtual void SeekTo(long p0);
    private static Delegate GetStartPlayingHandler();
    private static void n_StartPlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("startPlaying", "()V", "GetStartPlayingHandler")]
public abstract virtual void StartPlaying();
    private static Delegate GetStopPlayingHandler();
    private static void n_StopPlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stopPlaying", "()V", "GetStopPlayingHandler")]
public abstract virtual void StopPlaying();
    private static Delegate GetUnregisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler();
    private static void n_UnregisterStateListener_Landroid_support_v4_media_TransportStateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("unregisterStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetUnregisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public abstract virtual void UnregisterStateListener(TransportStateListener p0);
}
[RegisterAttribute("android/support/v4/media/TransportController")]
internal class Android.Support.V4.Media.TransportControllerInvoker : TransportController {
    private static IntPtr id_getBufferPercentage;
    private static IntPtr id_getCurrentPosition;
    private static IntPtr id_getDuration;
    private static IntPtr id_isPlaying;
    private static IntPtr id_getTransportControlFlags;
    private static IntPtr id_pausePlaying;
    private static IntPtr id_registerStateListener_Landroid_support_v4_media_TransportStateListener_;
    private static IntPtr id_seekTo_J;
    private static IntPtr id_startPlaying;
    private static IntPtr id_stopPlaying;
    private static IntPtr id_unregisterStateListener_Landroid_support_v4_media_TransportStateListener_;
    protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public int BufferPercentage { get; }
    [ObsoleteAttribute("deprecated")]
public long CurrentPosition { get; }
    [ObsoleteAttribute("deprecated")]
public long Duration { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsPlaying { get; }
    [ObsoleteAttribute("deprecated")]
public int TransportControlFlags { get; }
    public TransportControllerInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBufferPercentage", "()I", "GetGetBufferPercentageHandler")]
public virtual int get_BufferPercentage();
    [RegisterAttribute("getCurrentPosition", "()J", "GetGetCurrentPositionHandler")]
public virtual long get_CurrentPosition();
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public virtual long get_Duration();
    [RegisterAttribute("isPlaying", "()Z", "GetIsPlayingHandler")]
public virtual bool get_IsPlaying();
    [RegisterAttribute("getTransportControlFlags", "()I", "GetGetTransportControlFlagsHandler")]
public virtual int get_TransportControlFlags();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("pausePlaying", "()V", "GetPausePlayingHandler")]
public virtual void PausePlaying();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("registerStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetRegisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public virtual void RegisterStateListener(TransportStateListener p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public virtual void SeekTo(long p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startPlaying", "()V", "GetStartPlayingHandler")]
public virtual void StartPlaying();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("stopPlaying", "()V", "GetStopPlayingHandler")]
public virtual void StopPlaying();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("unregisterStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetUnregisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public virtual void UnregisterStateListener(TransportStateListener p0);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/media/TransportMediator")]
public class Android.Support.V4.Media.TransportMediator : TransportController {
    [RegisterAttribute("FLAG_KEY_MEDIA_FAST_FORWARD")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaFastForward;
    [RegisterAttribute("FLAG_KEY_MEDIA_NEXT")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaNext;
    [RegisterAttribute("FLAG_KEY_MEDIA_PAUSE")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaPause;
    [RegisterAttribute("FLAG_KEY_MEDIA_PLAY")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaPlay;
    [RegisterAttribute("FLAG_KEY_MEDIA_PLAY_PAUSE")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaPlayPause;
    [RegisterAttribute("FLAG_KEY_MEDIA_PREVIOUS")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaPrevious;
    [RegisterAttribute("FLAG_KEY_MEDIA_REWIND")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaRewind;
    [RegisterAttribute("FLAG_KEY_MEDIA_STOP")]
[ObsoleteAttribute("deprecated")]
public static int FlagKeyMediaStop;
    [RegisterAttribute("KEYCODE_MEDIA_PAUSE")]
[ObsoleteAttribute("deprecated")]
public static int KeycodeMediaPause;
    [RegisterAttribute("KEYCODE_MEDIA_PLAY")]
[ObsoleteAttribute("deprecated")]
public static int KeycodeMediaPlay;
    [RegisterAttribute("KEYCODE_MEDIA_RECORD")]
[ObsoleteAttribute("deprecated")]
public static int KeycodeMediaRecord;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_Landroid_app_Activity_Landroid_support_v4_media_TransportPerformer_;
    private static IntPtr id_ctor_Landroid_view_View_Landroid_support_v4_media_TransportPerformer_;
    private static Delegate cb_getBufferPercentage;
    private static IntPtr id_getBufferPercentage;
    private static Delegate cb_getCurrentPosition;
    private static IntPtr id_getCurrentPosition;
    private static Delegate cb_getDuration;
    private static IntPtr id_getDuration;
    private static Delegate cb_isPlaying;
    private static IntPtr id_isPlaying;
    private static Delegate cb_getRemoteControlClient;
    private static IntPtr id_getRemoteControlClient;
    private static Delegate cb_getTransportControlFlags;
    private static IntPtr id_getTransportControlFlags;
    private static Delegate cb_destroy;
    private static IntPtr id_destroy;
    private static Delegate cb_dispatchKeyEvent_Landroid_view_KeyEvent_;
    private static IntPtr id_dispatchKeyEvent_Landroid_view_KeyEvent_;
    private static Delegate cb_pausePlaying;
    private static IntPtr id_pausePlaying;
    private static Delegate cb_refreshState;
    private static IntPtr id_refreshState;
    private static Delegate cb_registerStateListener_Landroid_support_v4_media_TransportStateListener_;
    private static IntPtr id_registerStateListener_Landroid_support_v4_media_TransportStateListener_;
    private static Delegate cb_seekTo_J;
    private static IntPtr id_seekTo_J;
    private static Delegate cb_startPlaying;
    private static IntPtr id_startPlaying;
    private static Delegate cb_stopPlaying;
    private static IntPtr id_stopPlaying;
    private static Delegate cb_unregisterStateListener_Landroid_support_v4_media_TransportStateListener_;
    private static IntPtr id_unregisterStateListener_Landroid_support_v4_media_TransportStateListener_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public int BufferPercentage { get; }
    [ObsoleteAttribute("deprecated")]
public long CurrentPosition { get; }
    [ObsoleteAttribute("deprecated")]
public long Duration { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsPlaying { get; }
    [ObsoleteAttribute("deprecated")]
public Object RemoteControlClient { get; }
    [ObsoleteAttribute("deprecated")]
public int TransportControlFlags { get; }
    protected TransportMediator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/app/Activity;Landroid/support/v4/media/TransportPerformer;)V", "")]
public TransportMediator(Activity activity, TransportPerformer callbacks);
    [RegisterAttribute(".ctor", "(Landroid/view/View;Landroid/support/v4/media/TransportPerformer;)V", "")]
public TransportMediator(View view, TransportPerformer callbacks);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBufferPercentageHandler();
    private static int n_GetBufferPercentage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBufferPercentage", "()I", "GetGetBufferPercentageHandler")]
public virtual int get_BufferPercentage();
    private static Delegate GetGetCurrentPositionHandler();
    private static long n_GetCurrentPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrentPosition", "()J", "GetGetCurrentPositionHandler")]
public virtual long get_CurrentPosition();
    private static Delegate GetGetDurationHandler();
    private static long n_GetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDuration", "()J", "GetGetDurationHandler")]
public virtual long get_Duration();
    private static Delegate GetIsPlayingHandler();
    private static bool n_IsPlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isPlaying", "()Z", "GetIsPlayingHandler")]
public virtual bool get_IsPlaying();
    private static Delegate GetGetRemoteControlClientHandler();
    private static IntPtr n_GetRemoteControlClient(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRemoteControlClient", "()Ljava/lang/Object;", "GetGetRemoteControlClientHandler")]
public virtual Object get_RemoteControlClient();
    private static Delegate GetGetTransportControlFlagsHandler();
    private static int n_GetTransportControlFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransportControlFlags", "()I", "GetGetTransportControlFlagsHandler")]
public virtual int get_TransportControlFlags();
    private static Delegate GetDestroyHandler();
    private static void n_Destroy(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("destroy", "()V", "GetDestroyHandler")]
public virtual void Destroy();
    private static Delegate GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_DispatchKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("dispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool DispatchKeyEvent(KeyEvent e);
    private static Delegate GetPausePlayingHandler();
    private static void n_PausePlaying(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("pausePlaying", "()V", "GetPausePlayingHandler")]
public virtual void PausePlaying();
    private static Delegate GetRefreshStateHandler();
    private static void n_RefreshState(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("refreshState", "()V", "GetRefreshStateHandler")]
public virtual void RefreshState();
    private static Delegate GetRegisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler();
    private static void n_RegisterStateListener_Landroid_support_v4_media_TransportStateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("registerStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetRegisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public virtual void RegisterStateListener(TransportStateListener listener);
    private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long pos);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public virtual void SeekTo(long pos);
    private static Delegate GetStartPlayingHandler();
    private static void n_StartPlaying(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startPlaying", "()V", "GetStartPlayingHandler")]
public virtual void StartPlaying();
    private static Delegate GetStopPlayingHandler();
    private static void n_StopPlaying(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("stopPlaying", "()V", "GetStopPlayingHandler")]
public virtual void StopPlaying();
    private static Delegate GetUnregisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler();
    private static void n_UnregisterStateListener_Landroid_support_v4_media_TransportStateListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("unregisterStateListener", "(Landroid/support/v4/media/TransportStateListener;)V", "GetUnregisterStateListener_Landroid_support_v4_media_TransportStateListener_Handler")]
public virtual void UnregisterStateListener(TransportStateListener listener);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/media/TransportPerformer")]
public abstract class Android.Support.V4.Media.TransportPerformer : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_onAudioFocusChange_I;
    private static IntPtr id_onAudioFocusChange_I;
    private static Delegate cb_onGetBufferPercentage;
    private static IntPtr id_onGetBufferPercentage;
    private static Delegate cb_onGetCurrentPosition;
    private static Delegate cb_onGetDuration;
    private static Delegate cb_onGetTransportControlFlags;
    private static IntPtr id_onGetTransportControlFlags;
    private static Delegate cb_onIsPlaying;
    private static Delegate cb_onMediaButtonDown_ILandroid_view_KeyEvent_;
    private static IntPtr id_onMediaButtonDown_ILandroid_view_KeyEvent_;
    private static Delegate cb_onMediaButtonUp_ILandroid_view_KeyEvent_;
    private static IntPtr id_onMediaButtonUp_ILandroid_view_KeyEvent_;
    private static Delegate cb_onPause;
    private static Delegate cb_onSeekTo_J;
    private static Delegate cb_onStart;
    private static Delegate cb_onStop;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TransportPerformer(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnAudioFocusChange_IHandler();
    private static void n_OnAudioFocusChange_I(IntPtr jnienv, IntPtr native__this, int focusChange);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onAudioFocusChange", "(I)V", "GetOnAudioFocusChange_IHandler")]
public virtual void OnAudioFocusChange(int focusChange);
    private static Delegate GetOnGetBufferPercentageHandler();
    private static int n_OnGetBufferPercentage(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onGetBufferPercentage", "()I", "GetOnGetBufferPercentageHandler")]
public virtual int OnGetBufferPercentage();
    private static Delegate GetOnGetCurrentPositionHandler();
    private static long n_OnGetCurrentPosition(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onGetCurrentPosition", "()J", "GetOnGetCurrentPositionHandler")]
public abstract virtual long OnGetCurrentPosition();
    private static Delegate GetOnGetDurationHandler();
    private static long n_OnGetDuration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onGetDuration", "()J", "GetOnGetDurationHandler")]
public abstract virtual long OnGetDuration();
    private static Delegate GetOnGetTransportControlFlagsHandler();
    private static int n_OnGetTransportControlFlags(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onGetTransportControlFlags", "()I", "GetOnGetTransportControlFlagsHandler")]
public virtual int OnGetTransportControlFlags();
    private static Delegate GetOnIsPlayingHandler();
    private static bool n_OnIsPlaying(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onIsPlaying", "()Z", "GetOnIsPlayingHandler")]
public abstract virtual bool OnIsPlaying();
    private static Delegate GetOnMediaButtonDown_ILandroid_view_KeyEvent_Handler();
    private static bool n_OnMediaButtonDown_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int keyCode, IntPtr native_e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onMediaButtonDown", "(ILandroid/view/KeyEvent;)Z", "GetOnMediaButtonDown_ILandroid_view_KeyEvent_Handler")]
public virtual bool OnMediaButtonDown(int keyCode, KeyEvent e);
    private static Delegate GetOnMediaButtonUp_ILandroid_view_KeyEvent_Handler();
    private static bool n_OnMediaButtonUp_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int keyCode, IntPtr native_e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onMediaButtonUp", "(ILandroid/view/KeyEvent;)Z", "GetOnMediaButtonUp_ILandroid_view_KeyEvent_Handler")]
public virtual bool OnMediaButtonUp(int keyCode, KeyEvent e);
    private static Delegate GetOnPauseHandler();
    private static void n_OnPause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPause", "()V", "GetOnPauseHandler")]
public abstract virtual void OnPause();
    private static Delegate GetOnSeekTo_JHandler();
    private static void n_OnSeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("onSeekTo", "(J)V", "GetOnSeekTo_JHandler")]
public abstract virtual void OnSeekTo(long p0);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public abstract virtual void OnStart();
    private static Delegate GetOnStopHandler();
    private static void n_OnStop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public abstract virtual void OnStop();
}
[RegisterAttribute("android/support/v4/media/TransportPerformer")]
internal class Android.Support.V4.Media.TransportPerformerInvoker : TransportPerformer {
    private static IntPtr id_onGetCurrentPosition;
    private static IntPtr id_onGetDuration;
    private static IntPtr id_onIsPlaying;
    private static IntPtr id_onPause;
    private static IntPtr id_onSeekTo_J;
    private static IntPtr id_onStart;
    private static IntPtr id_onStop;
    protected Type ThresholdType { get; }
    public TransportPerformerInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onGetCurrentPosition", "()J", "GetOnGetCurrentPositionHandler")]
public virtual long OnGetCurrentPosition();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onGetDuration", "()J", "GetOnGetDurationHandler")]
public virtual long OnGetDuration();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onIsPlaying", "()Z", "GetOnIsPlayingHandler")]
public virtual bool OnIsPlaying();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPause", "()V", "GetOnPauseHandler")]
public virtual void OnPause();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onSeekTo", "(J)V", "GetOnSeekTo_JHandler")]
public virtual void OnSeekTo(long p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
public virtual void OnStart();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onStop", "()V", "GetOnStopHandler")]
public virtual void OnStop();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("android/support/v4/media/TransportStateListener")]
public class Android.Support.V4.Media.TransportStateListener : Object {
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    private static Delegate cb_onPlayingChanged_Landroid_support_v4_media_TransportController_;
    private static IntPtr id_onPlayingChanged_Landroid_support_v4_media_TransportController_;
    private static Delegate cb_onTransportControlsChanged_Landroid_support_v4_media_TransportController_;
    private static IntPtr id_onTransportControlsChanged_Landroid_support_v4_media_TransportController_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected TransportStateListener(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnPlayingChanged_Landroid_support_v4_media_TransportController_Handler();
    private static void n_OnPlayingChanged_Landroid_support_v4_media_TransportController_(IntPtr jnienv, IntPtr native__this, IntPtr native_controller);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPlayingChanged", "(Landroid/support/v4/media/TransportController;)V", "GetOnPlayingChanged_Landroid_support_v4_media_TransportController_Handler")]
public virtual void OnPlayingChanged(TransportController controller);
    private static Delegate GetOnTransportControlsChanged_Landroid_support_v4_media_TransportController_Handler();
    private static void n_OnTransportControlsChanged_Landroid_support_v4_media_TransportController_(IntPtr jnienv, IntPtr native__this, IntPtr native_controller);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onTransportControlsChanged", "(Landroid/support/v4/media/TransportController;)V", "GetOnTransportControlsChanged_Landroid_support_v4_media_TransportController_Handler")]
public virtual void OnTransportControlsChanged(TransportController controller);
}
[RegisterAttribute("android/support/v4/media/VolumeProviderCompat")]
public abstract class Android.Support.V4.Media.VolumeProviderCompat : Object {
    [RegisterAttribute("VOLUME_CONTROL_ABSOLUTE")]
public static int VolumeControlAbsolute;
    [RegisterAttribute("VOLUME_CONTROL_FIXED")]
public static int VolumeControlFixed;
    [RegisterAttribute("VOLUME_CONTROL_RELATIVE")]
public static int VolumeControlRelative;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor_III;
    private static IntPtr id_getCurrentVolume;
    private static IntPtr id_setCurrentVolume_I;
    private static IntPtr id_getMaxVolume;
    private static IntPtr id_getVolumeControl;
    private static Delegate cb_getVolumeProvider;
    private static IntPtr id_getVolumeProvider;
    private static Delegate cb_onAdjustVolume_I;
    private static IntPtr id_onAdjustVolume_I;
    private static Delegate cb_onSetVolumeTo_I;
    private static IntPtr id_onSetVolumeTo_I;
    private static Delegate cb_setCallback_Landroid_support_v4_media_VolumeProviderCompat_Callback_;
    private static IntPtr id_setCallback_Landroid_support_v4_media_VolumeProviderCompat_Callback_;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CurrentVolume { get; public set; }
    public int MaxVolume { get; }
    public int VolumeControl { get; }
    public Object VolumeProvider { get; }
    protected VolumeProviderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(III)V", "")]
public VolumeProviderCompat(int volumeControl, int maxVolume, int currentVolume);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrentVolume", "()I", "GetGetCurrentVolumeHandler")]
public int get_CurrentVolume();
    [RegisterAttribute("setCurrentVolume", "(I)V", "GetSetCurrentVolume_IHandler")]
public void set_CurrentVolume(int value);
    [RegisterAttribute("getMaxVolume", "()I", "GetGetMaxVolumeHandler")]
public int get_MaxVolume();
    [RegisterAttribute("getVolumeControl", "()I", "GetGetVolumeControlHandler")]
public int get_VolumeControl();
    private static Delegate GetGetVolumeProviderHandler();
    private static IntPtr n_GetVolumeProvider(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeProvider", "()Ljava/lang/Object;", "GetGetVolumeProviderHandler")]
public virtual Object get_VolumeProvider();
    private static Delegate GetOnAdjustVolume_IHandler();
    private static void n_OnAdjustVolume_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("onAdjustVolume", "(I)V", "GetOnAdjustVolume_IHandler")]
public virtual void OnAdjustVolume(int direction);
    private static Delegate GetOnSetVolumeTo_IHandler();
    private static void n_OnSetVolumeTo_I(IntPtr jnienv, IntPtr native__this, int volume);
    [RegisterAttribute("onSetVolumeTo", "(I)V", "GetOnSetVolumeTo_IHandler")]
public virtual void OnSetVolumeTo(int volume);
    private static Delegate GetSetCallback_Landroid_support_v4_media_VolumeProviderCompat_Callback_Handler();
    private static void n_SetCallback_Landroid_support_v4_media_VolumeProviderCompat_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callback);
    [RegisterAttribute("setCallback", "(Landroid/support/v4/media/VolumeProviderCompat$Callback;)V", "GetSetCallback_Landroid_support_v4_media_VolumeProviderCompat_Callback_Handler")]
public virtual void SetCallback(Callback callback);
}
[RegisterAttribute("android/support/v4/media/VolumeProviderCompat")]
internal class Android.Support.V4.Media.VolumeProviderCompatInvoker : VolumeProviderCompat {
    protected Type ThresholdType { get; }
    public VolumeProviderCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_android_support_mediacompat_mappings;
    private static String[] package_android_support_v4_media_session_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_mediacompat_package(string klass);
    private static Type lookup_android_support_v4_media_session_package(string klass);
}
