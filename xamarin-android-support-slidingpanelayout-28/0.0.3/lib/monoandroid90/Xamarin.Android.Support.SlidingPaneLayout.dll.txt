[RegisterAttribute("android/support/v4/widget/SlidingPaneLayout")]
public class Android.Support.V4.Widget.SlidingPaneLayout : ViewGroup {
    internal static JniPeerMembers _members;
    private static Delegate cb_getCoveredFadeColor;
    private static Delegate cb_setCoveredFadeColor_I;
    private static Delegate cb_isOpen;
    private static Delegate cb_isSlideable;
    private static Delegate cb_getParallaxDistance;
    private static Delegate cb_setParallaxDistance_I;
    private static Delegate cb_getSliderFadeColor;
    private static Delegate cb_setSliderFadeColor_I;
    private static Delegate cb_canScroll_Landroid_view_View_ZIII;
    private static Delegate cb_canSlide;
    private static Delegate cb_closePane;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_openPane;
    private static Delegate cb_setPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_;
    private static Delegate cb_setShadowDrawable_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowDrawableLeft_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowDrawableRight_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setShadowResource_I;
    private static Delegate cb_setShadowResourceLeft_I;
    private static Delegate cb_setShadowResourceRight_I;
    private static Delegate cb_smoothSlideClosed;
    private static Delegate cb_smoothSlideOpen;
    private WeakReference weak_implementor_SetPanelSlideListener;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int CoveredFadeColor { get; public set; }
    public bool IsOpen { get; }
    public bool IsSlideable { get; }
    public int ParallaxDistance { get; public set; }
    public int SliderFadeColor { get; public set; }
    protected SlidingPaneLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SlidingPaneLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs, int defStyle);
    private static SlidingPaneLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetCoveredFadeColorHandler();
    private static int n_GetCoveredFadeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCoveredFadeColor_IHandler();
    private static void n_SetCoveredFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCoveredFadeColor", "()I", "GetGetCoveredFadeColorHandler")]
public virtual int get_CoveredFadeColor();
    [RegisterAttribute("setCoveredFadeColor", "(I)V", "GetSetCoveredFadeColor_IHandler")]
public virtual void set_CoveredFadeColor(int value);
    private static Delegate GetIsOpenHandler();
    private static bool n_IsOpen(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOpen", "()Z", "GetIsOpenHandler")]
public virtual bool get_IsOpen();
    private static Delegate GetIsSlideableHandler();
    private static bool n_IsSlideable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSlideable", "()Z", "GetIsSlideableHandler")]
public virtual bool get_IsSlideable();
    private static Delegate GetGetParallaxDistanceHandler();
    private static int n_GetParallaxDistance(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetParallaxDistance_IHandler();
    private static void n_SetParallaxDistance_I(IntPtr jnienv, IntPtr native__this, int parallaxBy);
    [RegisterAttribute("getParallaxDistance", "()I", "GetGetParallaxDistanceHandler")]
public virtual int get_ParallaxDistance();
    [RegisterAttribute("setParallaxDistance", "(I)V", "GetSetParallaxDistance_IHandler")]
public virtual void set_ParallaxDistance(int value);
    private static Delegate GetGetSliderFadeColorHandler();
    private static int n_GetSliderFadeColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSliderFadeColor_IHandler();
    private static void n_SetSliderFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getSliderFadeColor", "()I", "GetGetSliderFadeColorHandler")]
public virtual int get_SliderFadeColor();
    [RegisterAttribute("setSliderFadeColor", "(I)V", "GetSetSliderFadeColor_IHandler")]
public virtual void set_SliderFadeColor(int value);
    private static Delegate GetCanScroll_Landroid_view_View_ZIIIHandler();
    private static bool n_CanScroll_Landroid_view_View_ZIII(IntPtr jnienv, IntPtr native__this, IntPtr native_v, bool checkV, int dx, int x, int y);
    [RegisterAttribute("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")]
protected virtual bool CanScroll(View v, bool checkV, int dx, int x, int y);
    private static Delegate GetCanSlideHandler();
    private static bool n_CanSlide(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("canSlide", "()Z", "GetCanSlideHandler")]
public virtual bool CanSlide();
    private static Delegate GetClosePaneHandler();
    private static bool n_ClosePane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closePane", "()Z", "GetClosePaneHandler")]
public virtual bool ClosePane();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOpenPaneHandler();
    private static bool n_OpenPane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("openPane", "()Z", "GetOpenPaneHandler")]
public virtual bool OpenPane();
    private static Delegate GetSetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_Handler();
    private static void n_SetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setPanelSlideListener", "(Landroid/support/v4/widget/SlidingPaneLayout$PanelSlideListener;)V", "GetSetPanelSlideListener_Landroid_support_v4_widget_SlidingPaneLayout_PanelSlideListener_Handler")]
public virtual void SetPanelSlideListener(IPanelSlideListener listener);
    private static Delegate GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawable(Drawable d);
    private static Delegate GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [RegisterAttribute("setShadowDrawableLeft", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableLeft(Drawable d);
    private static Delegate GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableRight_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [RegisterAttribute("setShadowDrawableRight", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableRight(Drawable d);
    private static Delegate GetSetShadowResource_IHandler();
    private static void n_SetShadowResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowResource", "(I)V", "GetSetShadowResource_IHandler")]
public virtual void SetShadowResource(int resId);
    private static Delegate GetSetShadowResourceLeft_IHandler();
    private static void n_SetShadowResourceLeft_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceLeft", "(I)V", "GetSetShadowResourceLeft_IHandler")]
public virtual void SetShadowResourceLeft(int resId);
    private static Delegate GetSetShadowResourceRight_IHandler();
    private static void n_SetShadowResourceRight_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceRight", "(I)V", "GetSetShadowResourceRight_IHandler")]
public virtual void SetShadowResourceRight(int resId);
    private static Delegate GetSmoothSlideClosedHandler();
    private static void n_SmoothSlideClosed(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideClosed", "()V", "GetSmoothSlideClosedHandler")]
public virtual void SmoothSlideClosed();
    private static Delegate GetSmoothSlideOpenHandler();
    private static void n_SmoothSlideOpen(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideOpen", "()V", "GetSmoothSlideOpenHandler")]
public virtual void SmoothSlideOpen();
    public void add_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void remove_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void add_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void remove_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void add_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    public void remove_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    private IPanelSlideListenerImplementor __CreateIPanelSlideListenerImplementor();
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
