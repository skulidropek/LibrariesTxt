[RegisterAttribute("android/support/v4/widget/CircularProgressDrawable")]
public class Android.Support.V4.Widget.CircularProgressDrawable : Drawable {
    [RegisterAttribute("DEFAULT")]
public static int Default;
    [RegisterAttribute("LARGE")]
public static int Large;
    internal static JniPeerMembers _members;
    private static Delegate cb_getArrowEnabled;
    private static Delegate cb_setArrowEnabled_Z;
    private static Delegate cb_getArrowHeight;
    private static Delegate cb_getArrowScale;
    private static Delegate cb_setArrowScale_F;
    private static Delegate cb_getArrowWidth;
    private static Delegate cb_getBackgroundColor;
    private static Delegate cb_setBackgroundColor_I;
    private static Delegate cb_getCenterRadius;
    private static Delegate cb_setCenterRadius_F;
    private static Delegate cb_getEndTrim;
    private static Delegate cb_isRunning;
    private static Delegate cb_getOpacity;
    private static Delegate cb_getProgressRotation;
    private static Delegate cb_setProgressRotation_F;
    private static Delegate cb_getStartTrim;
    private static Delegate cb_getStrokeCap;
    private static Delegate cb_setStrokeCap_Landroid_graphics_Paint_Cap_;
    private static Delegate cb_getStrokeWidth;
    private static Delegate cb_setStrokeWidth_F;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_getColorSchemeColors;
    private static Delegate cb_setAlpha_I;
    private static Delegate cb_setArrowDimensions_FF;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setColorSchemeColors_arrayI;
    private static Delegate cb_setStartEndTrim_FF;
    private static Delegate cb_setStyle_I;
    private static Delegate cb_start;
    private static Delegate cb_stop;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool ArrowEnabled { get; public set; }
    public float ArrowHeight { get; }
    public float ArrowScale { get; public set; }
    public float ArrowWidth { get; }
    public int BackgroundColor { get; public set; }
    public float CenterRadius { get; public set; }
    public float EndTrim { get; }
    public bool IsRunning { get; }
    public int Opacity { get; }
    public float ProgressRotation { get; public set; }
    public float StartTrim { get; }
    public Cap StrokeCap { get; public set; }
    public float StrokeWidth { get; public set; }
    protected CircularProgressDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public CircularProgressDrawable(Context context);
    private static CircularProgressDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetArrowEnabledHandler();
    private static bool n_GetArrowEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetArrowEnabled_ZHandler();
    private static void n_SetArrowEnabled_Z(IntPtr jnienv, IntPtr native__this, bool show);
    [RegisterAttribute("getArrowEnabled", "()Z", "GetGetArrowEnabledHandler")]
public virtual bool get_ArrowEnabled();
    [RegisterAttribute("setArrowEnabled", "(Z)V", "GetSetArrowEnabled_ZHandler")]
public virtual void set_ArrowEnabled(bool value);
    private static Delegate GetGetArrowHeightHandler();
    private static float n_GetArrowHeight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getArrowHeight", "()F", "GetGetArrowHeightHandler")]
public virtual float get_ArrowHeight();
    private static Delegate GetGetArrowScaleHandler();
    private static float n_GetArrowScale(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetArrowScale_FHandler();
    private static void n_SetArrowScale_F(IntPtr jnienv, IntPtr native__this, float scale);
    [RegisterAttribute("getArrowScale", "()F", "GetGetArrowScaleHandler")]
public virtual float get_ArrowScale();
    [RegisterAttribute("setArrowScale", "(F)V", "GetSetArrowScale_FHandler")]
public virtual void set_ArrowScale(float value);
    private static Delegate GetGetArrowWidthHandler();
    private static float n_GetArrowWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getArrowWidth", "()F", "GetGetArrowWidthHandler")]
public virtual float get_ArrowWidth();
    private static Delegate GetGetBackgroundColorHandler();
    private static int n_GetBackgroundColor(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetBackgroundColor_IHandler();
    private static void n_SetBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getBackgroundColor", "()I", "GetGetBackgroundColorHandler")]
public virtual int get_BackgroundColor();
    [RegisterAttribute("setBackgroundColor", "(I)V", "GetSetBackgroundColor_IHandler")]
public virtual void set_BackgroundColor(int value);
    private static Delegate GetGetCenterRadiusHandler();
    private static float n_GetCenterRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCenterRadius_FHandler();
    private static void n_SetCenterRadius_F(IntPtr jnienv, IntPtr native__this, float centerRadius);
    [RegisterAttribute("getCenterRadius", "()F", "GetGetCenterRadiusHandler")]
public virtual float get_CenterRadius();
    [RegisterAttribute("setCenterRadius", "(F)V", "GetSetCenterRadius_FHandler")]
public virtual void set_CenterRadius(float value);
    private static Delegate GetGetEndTrimHandler();
    private static float n_GetEndTrim(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getEndTrim", "()F", "GetGetEndTrimHandler")]
public virtual float get_EndTrim();
    private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetGetProgressRotationHandler();
    private static float n_GetProgressRotation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetProgressRotation_FHandler();
    private static void n_SetProgressRotation_F(IntPtr jnienv, IntPtr native__this, float rotation);
    [RegisterAttribute("getProgressRotation", "()F", "GetGetProgressRotationHandler")]
public virtual float get_ProgressRotation();
    [RegisterAttribute("setProgressRotation", "(F)V", "GetSetProgressRotation_FHandler")]
public virtual void set_ProgressRotation(float value);
    private static Delegate GetGetStartTrimHandler();
    private static float n_GetStartTrim(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStartTrim", "()F", "GetGetStartTrimHandler")]
public virtual float get_StartTrim();
    private static Delegate GetGetStrokeCapHandler();
    private static IntPtr n_GetStrokeCap(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeCap_Landroid_graphics_Paint_Cap_Handler();
    private static void n_SetStrokeCap_Landroid_graphics_Paint_Cap_(IntPtr jnienv, IntPtr native__this, IntPtr native_strokeCap);
    [RegisterAttribute("getStrokeCap", "()Landroid/graphics/Paint$Cap;", "GetGetStrokeCapHandler")]
public virtual Cap get_StrokeCap();
    [RegisterAttribute("setStrokeCap", "(Landroid/graphics/Paint$Cap;)V", "GetSetStrokeCap_Landroid_graphics_Paint_Cap_Handler")]
public virtual void set_StrokeCap(Cap value);
    private static Delegate GetGetStrokeWidthHandler();
    private static float n_GetStrokeWidth(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetStrokeWidth_FHandler();
    private static void n_SetStrokeWidth_F(IntPtr jnienv, IntPtr native__this, float strokeWidth);
    [RegisterAttribute("getStrokeWidth", "()F", "GetGetStrokeWidthHandler")]
public virtual float get_StrokeWidth();
    [RegisterAttribute("setStrokeWidth", "(F)V", "GetSetStrokeWidth_FHandler")]
public virtual void set_StrokeWidth(float value);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetGetColorSchemeColorsHandler();
    private static IntPtr n_GetColorSchemeColors(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColorSchemeColors", "()[I", "GetGetColorSchemeColorsHandler")]
public virtual Int32[] GetColorSchemeColors();
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetArrowDimensions_FFHandler();
    private static void n_SetArrowDimensions_FF(IntPtr jnienv, IntPtr native__this, float width, float height);
    [RegisterAttribute("setArrowDimensions", "(FF)V", "GetSetArrowDimensions_FFHandler")]
public virtual void SetArrowDimensions(float width, float height);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetColorSchemeColors_arrayIHandler();
    private static void n_SetColorSchemeColors_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setColorSchemeColors", "([I)V", "GetSetColorSchemeColors_arrayIHandler")]
public virtual void SetColorSchemeColors(Int32[] colors);
    private static Delegate GetSetStartEndTrim_FFHandler();
    private static void n_SetStartEndTrim_FF(IntPtr jnienv, IntPtr native__this, float start, float end);
    [RegisterAttribute("setStartEndTrim", "(FF)V", "GetSetStartEndTrim_FFHandler")]
public virtual void SetStartEndTrim(float start, float end);
    private static Delegate GetSetStyle_IHandler();
    private static void n_SetStyle_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("setStyle", "(I)V", "GetSetStyle_IHandler")]
public virtual void SetStyle(int size);
    private static Delegate GetStartHandler();
    private static void n_Start(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("start", "()V", "GetStartHandler")]
public virtual void Start();
    private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
}
[RegisterAttribute("android/support/v4/widget/SwipeRefreshLayout")]
public class Android.Support.V4.Widget.SwipeRefreshLayout : ViewGroup {
    [RegisterAttribute("DEFAULT")]
public static int Default;
    [RegisterAttribute("DEFAULT_SLINGSHOT_DISTANCE")]
public static int DefaultSlingshotDistance;
    [RegisterAttribute("LARGE")]
public static int Large;
    internal static JniPeerMembers _members;
    private static Delegate cb_getProgressCircleDiameter;
    private static Delegate cb_getProgressViewEndOffset;
    private static Delegate cb_getProgressViewStartOffset;
    private static Delegate cb_isRefreshing;
    private static Delegate cb_setRefreshing_Z;
    private static Delegate cb_canChildScrollUp;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_onMeasure_II;
    private static Delegate cb_setColorScheme_arrayI;
    private static Delegate cb_setColorSchemeColors_arrayI;
    private static Delegate cb_setColorSchemeResources_arrayI;
    private static Delegate cb_setDistanceToTriggerSync_I;
    private static Delegate cb_setOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_;
    private static Delegate cb_setOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_;
    private static Delegate cb_setProgressBackgroundColor_I;
    private static Delegate cb_setProgressBackgroundColorSchemeColor_I;
    private static Delegate cb_setProgressBackgroundColorSchemeResource_I;
    private static Delegate cb_setProgressViewEndTarget_ZI;
    private static Delegate cb_setProgressViewOffset_ZII;
    private static Delegate cb_setSize_I;
    private static Delegate cb_setSlingshotDistance_I;
    private WeakReference weak_implementor_SetOnRefreshListener;
    [RegisterAttribute("mFrom")]
protected int MFrom { get; protected set; }
    [RegisterAttribute("mOriginalOffsetTop")]
protected int MOriginalOffsetTop { get; protected set; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int ProgressCircleDiameter { get; }
    public int ProgressViewEndOffset { get; }
    public int ProgressViewStartOffset { get; }
    public bool Refreshing { get; public set; }
    protected SwipeRefreshLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SwipeRefreshLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SwipeRefreshLayout(Context context, IAttributeSet attrs);
    private static SwipeRefreshLayout();
    protected int get_MFrom();
    protected void set_MFrom(int value);
    protected int get_MOriginalOffsetTop();
    protected void set_MOriginalOffsetTop(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetProgressCircleDiameterHandler();
    private static int n_GetProgressCircleDiameter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressCircleDiameter", "()I", "GetGetProgressCircleDiameterHandler")]
public virtual int get_ProgressCircleDiameter();
    private static Delegate GetGetProgressViewEndOffsetHandler();
    private static int n_GetProgressViewEndOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressViewEndOffset", "()I", "GetGetProgressViewEndOffsetHandler")]
public virtual int get_ProgressViewEndOffset();
    private static Delegate GetGetProgressViewStartOffsetHandler();
    private static int n_GetProgressViewStartOffset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getProgressViewStartOffset", "()I", "GetGetProgressViewStartOffsetHandler")]
public virtual int get_ProgressViewStartOffset();
    private static Delegate GetIsRefreshingHandler();
    private static bool n_IsRefreshing(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRefreshing_ZHandler();
    private static void n_SetRefreshing_Z(IntPtr jnienv, IntPtr native__this, bool refreshing);
    [RegisterAttribute("isRefreshing", "()Z", "GetIsRefreshingHandler")]
public virtual bool get_Refreshing();
    [RegisterAttribute("setRefreshing", "(Z)V", "GetSetRefreshing_ZHandler")]
public virtual void set_Refreshing(bool value);
    private static Delegate GetCanChildScrollUpHandler();
    private static bool n_CanChildScrollUp(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canChildScrollUp", "()Z", "GetCanChildScrollUpHandler")]
public virtual bool CanChildScrollUp();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int left, int top, int right, int bottom);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private static Delegate GetOnMeasure_IIHandler();
    private static void n_OnMeasure_II(IntPtr jnienv, IntPtr native__this, int widthMeasureSpec, int heightMeasureSpec);
    [RegisterAttribute("onMeasure", "(II)V", "GetOnMeasure_IIHandler")]
public virtual void OnMeasure(int widthMeasureSpec, int heightMeasureSpec);
    private static Delegate GetSetColorScheme_arrayIHandler();
    private static void n_SetColorScheme_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setColorScheme", "([I)V", "GetSetColorScheme_arrayIHandler")]
public virtual void SetColorScheme(Int32[] colors);
    private static Delegate GetSetColorSchemeColors_arrayIHandler();
    private static void n_SetColorSchemeColors_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colors);
    [RegisterAttribute("setColorSchemeColors", "([I)V", "GetSetColorSchemeColors_arrayIHandler")]
public virtual void SetColorSchemeColors(Int32[] colors);
    private static Delegate GetSetColorSchemeResources_arrayIHandler();
    private static void n_SetColorSchemeResources_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_colorResIds);
    [RegisterAttribute("setColorSchemeResources", "([I)V", "GetSetColorSchemeResources_arrayIHandler")]
public virtual void SetColorSchemeResources(Int32[] colorResIds);
    private static Delegate GetSetDistanceToTriggerSync_IHandler();
    private static void n_SetDistanceToTriggerSync_I(IntPtr jnienv, IntPtr native__this, int distance);
    [RegisterAttribute("setDistanceToTriggerSync", "(I)V", "GetSetDistanceToTriggerSync_IHandler")]
public virtual void SetDistanceToTriggerSync(int distance);
    private static Delegate GetSetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_Handler();
    private static void n_SetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [RegisterAttribute("setOnChildScrollUpCallback", "(Landroid/support/v4/widget/SwipeRefreshLayout$OnChildScrollUpCallback;)V", "GetSetOnChildScrollUpCallback_Landroid_support_v4_widget_SwipeRefreshLayout_OnChildScrollUpCallback_Handler")]
public virtual void SetOnChildScrollUpCallback(IOnChildScrollUpCallback callback);
    private static Delegate GetSetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_Handler();
    private static void n_SetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("setOnRefreshListener", "(Landroid/support/v4/widget/SwipeRefreshLayout$OnRefreshListener;)V", "GetSetOnRefreshListener_Landroid_support_v4_widget_SwipeRefreshLayout_OnRefreshListener_Handler")]
public virtual void SetOnRefreshListener(IOnRefreshListener listener);
    private static Delegate GetSetProgressBackgroundColor_IHandler();
    private static void n_SetProgressBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int colorRes);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setProgressBackgroundColor", "(I)V", "GetSetProgressBackgroundColor_IHandler")]
public virtual void SetProgressBackgroundColor(int colorRes);
    private static Delegate GetSetProgressBackgroundColorSchemeColor_IHandler();
    private static void n_SetProgressBackgroundColorSchemeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setProgressBackgroundColorSchemeColor", "(I)V", "GetSetProgressBackgroundColorSchemeColor_IHandler")]
public virtual void SetProgressBackgroundColorSchemeColor(int color);
    private static Delegate GetSetProgressBackgroundColorSchemeResource_IHandler();
    private static void n_SetProgressBackgroundColorSchemeResource_I(IntPtr jnienv, IntPtr native__this, int colorRes);
    [RegisterAttribute("setProgressBackgroundColorSchemeResource", "(I)V", "GetSetProgressBackgroundColorSchemeResource_IHandler")]
public virtual void SetProgressBackgroundColorSchemeResource(int colorRes);
    private static Delegate GetSetProgressViewEndTarget_ZIHandler();
    private static void n_SetProgressViewEndTarget_ZI(IntPtr jnienv, IntPtr native__this, bool scale, int end);
    [RegisterAttribute("setProgressViewEndTarget", "(ZI)V", "GetSetProgressViewEndTarget_ZIHandler")]
public virtual void SetProgressViewEndTarget(bool scale, int end);
    private static Delegate GetSetProgressViewOffset_ZIIHandler();
    private static void n_SetProgressViewOffset_ZII(IntPtr jnienv, IntPtr native__this, bool scale, int start, int end);
    [RegisterAttribute("setProgressViewOffset", "(ZII)V", "GetSetProgressViewOffset_ZIIHandler")]
public virtual void SetProgressViewOffset(bool scale, int start, int end);
    private static Delegate GetSetSize_IHandler();
    private static void n_SetSize_I(IntPtr jnienv, IntPtr native__this, int size);
    [RegisterAttribute("setSize", "(I)V", "GetSetSize_IHandler")]
public virtual void SetSize(int size);
    private static Delegate GetSetSlingshotDistance_IHandler();
    private static void n_SetSlingshotDistance_I(IntPtr jnienv, IntPtr native__this, int slingshotDistance);
    [RegisterAttribute("setSlingshotDistance", "(I)V", "GetSetSlingshotDistance_IHandler")]
public virtual void SetSlingshotDistance(int slingshotDistance);
    public void add_Refresh(EventHandler value);
    public void remove_Refresh(EventHandler value);
    private IOnRefreshListenerImplementor __CreateIOnRefreshListenerImplementor();
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
