internal static class __Consts : object {
    public static string PackageName;
    public static string AarPath;
}
internal static class __SupportConsts : object {
    public static string Url;
    public static string Version;
    public static string AarVersion;
}
[RegisterAttribute("android/support/graphics/drawable/BuildConfig")]
public class Android.Support.Graphics.Drawable.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    internal static IntPtr java_class_handle;
    private static IntPtr id_ctor;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/graphics/drawable/VectorDrawableCommon")]
public abstract class Android.Support.Graphics.Drawable.VectorDrawableCommon : Drawable {
    internal static IntPtr java_class_handle;
    private static Delegate cb_isAutoMirrored;
    private static Delegate cb_setAutoMirrored_Z;
    private static IntPtr id_isAutoMirrored;
    private static IntPtr id_setAutoMirrored_Z;
    private static Delegate cb_getColorFilter;
    private static IntPtr id_getColorFilter;
    private static Delegate cb_getLayoutDirection;
    private static IntPtr id_getLayoutDirection;
    private static Delegate cb_applyTheme_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_applyTheme_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_setHotspot_FF;
    private static IntPtr id_setHotspot_FF;
    private static Delegate cb_setHotspotBounds_IIII;
    private static IntPtr id_setHotspotBounds_IIII;
    private static Delegate cb_setTint_I;
    private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, float, float> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, int, int, int, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache9;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool AutoMirrored { get; public set; }
    public ColorFilter ColorFilter { get; }
    public int LayoutDirection { get; }
    protected VectorDrawableCommon(IntPtr javaReference, JniHandleOwnership transfer);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsAutoMirroredHandler();
    private static bool n_IsAutoMirrored(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAutoMirrored_ZHandler();
    private static void n_SetAutoMirrored_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")]
public virtual bool get_AutoMirrored();
    [RegisterAttribute("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")]
public virtual void set_AutoMirrored(bool value);
    private static Delegate GetGetColorFilterHandler();
    private static IntPtr n_GetColorFilter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")]
public virtual ColorFilter get_ColorFilter();
    private static Delegate GetGetLayoutDirectionHandler();
    private static int n_GetLayoutDirection(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler")]
public virtual int get_LayoutDirection();
    private static Delegate GetApplyTheme_Landroid_content_res_Resources_Theme_Handler();
    private static void n_ApplyTheme_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")]
public virtual void ApplyTheme(Theme p0);
    private static Delegate GetSetHotspot_FFHandler();
    private static void n_SetHotspot_FF(IntPtr jnienv, IntPtr native__this, float p0, float p1);
    [RegisterAttribute("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")]
public virtual void SetHotspot(float p0, float p1);
    private static Delegate GetSetHotspotBounds_IIIIHandler();
    private static void n_SetHotspotBounds_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    [RegisterAttribute("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")]
public virtual void SetHotspotBounds(int p0, int p1, int p2, int p3);
    private static Delegate GetSetTint_IHandler();
    private static void n_SetTint_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler")]
public abstract virtual void SetTint(int p0);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]
public abstract virtual void SetTintList(ColorStateList p0);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public abstract virtual void SetTintMode(Mode p0);
}
[RegisterAttribute("android/support/graphics/drawable/VectorDrawableCommon")]
internal class Android.Support.Graphics.Drawable.VectorDrawableCommonInvoker : VectorDrawableCommon {
    private static IntPtr id_setTint_I;
    private static IntPtr id_setTintList_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr id_getOpacity;
    private static IntPtr id_draw_Landroid_graphics_Canvas_;
    private static IntPtr id_setAlpha_I;
    private static IntPtr id_setColorFilter_Landroid_graphics_ColorFilter_;
    protected Type ThresholdType { get; }
    public int Opacity { get; }
    public VectorDrawableCommonInvoker(IntPtr handle, JniHandleOwnership transfer);
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler")]
public virtual void SetTint(int p0);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTintList(ColorStateList p0);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void SetTintMode(Mode p0);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter cf);
}
[RegisterAttribute("android/support/graphics/drawable/VectorDrawableCompat")]
public class Android.Support.Graphics.Drawable.VectorDrawableCompat : VectorDrawableCommon {
    internal static IntPtr java_class_handle;
    private static Delegate cb_getAlpha;
    private static Delegate cb_setAlpha_I;
    private static IntPtr id_getAlpha;
    private static IntPtr id_setAlpha_I;
    private static Delegate cb_isAutoMirrored;
    private static Delegate cb_setAutoMirrored_Z;
    private static IntPtr id_isAutoMirrored;
    private static IntPtr id_setAutoMirrored_Z;
    private static Delegate cb_getColorFilter;
    private static IntPtr id_getColorFilter;
    private static Delegate cb_getCurrent;
    private static IntPtr id_getCurrent;
    private static Delegate cb_getLayoutDirection;
    private static IntPtr id_getLayoutDirection;
    private static Delegate cb_getMinimumHeight;
    private static IntPtr id_getMinimumHeight;
    private static Delegate cb_getMinimumWidth;
    private static IntPtr id_getMinimumWidth;
    private static Delegate cb_getOpacity;
    private static IntPtr id_getOpacity;
    private static Delegate cb_getPixelSize;
    private static IntPtr id_getPixelSize;
    private static Delegate cb_getTransparentRegion;
    private static IntPtr id_getTransparentRegion;
    private static Delegate cb_applyTheme_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_applyTheme_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_canApplyTheme;
    private static IntPtr id_canApplyTheme;
    private static Delegate cb_clearColorFilter;
    private static IntPtr id_clearColorFilter;
    private static IntPtr id_create_Landroid_content_res_Resources_ILandroid_content_res_Resources_Theme_;
    private static IntPtr id_createFromXmlInner_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_draw_Landroid_graphics_Canvas_;
    private static IntPtr id_draw_Landroid_graphics_Canvas_;
    private static Delegate cb_getPadding_Landroid_graphics_Rect_;
    private static IntPtr id_getPadding_Landroid_graphics_Rect_;
    private static Delegate cb_getState;
    private static IntPtr id_getState;
    private static Delegate cb_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static IntPtr id_inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_;
    private static Delegate cb_jumpToCurrentState;
    private static IntPtr id_jumpToCurrentState;
    private static Delegate cb_onBoundsChange_Landroid_graphics_Rect_;
    private static IntPtr id_onBoundsChange_Landroid_graphics_Rect_;
    private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    private static IntPtr id_setColorFilter_Landroid_graphics_ColorFilter_;
    private static Delegate cb_setFilterBitmap_Z;
    private static IntPtr id_setFilterBitmap_Z;
    private static Delegate cb_setHotspot_FF;
    private static IntPtr id_setHotspot_FF;
    private static Delegate cb_setHotspotBounds_IIII;
    private static IntPtr id_setHotspotBounds_IIII;
    private static Delegate cb_setState_arrayI;
    private static IntPtr id_setState_arrayI;
    private static Delegate cb_setTint_I;
    private static IntPtr id_setTint_I;
    private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    private static IntPtr id_setTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr id_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache0;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache1;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cache2;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache3;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache4;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache5;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache6;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache7;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache8;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, int> <>f__mg$cache9;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, float> <>f__mg$cacheA;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheB;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheC;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, bool> <>f__mg$cacheD;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cacheE;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cacheF;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache10;
    [CompilerGeneratedAttribute]
private static Func`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache11;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, IntPtr, IntPtr, IntPtr, IntPtr> <>f__mg$cache12;
    [CompilerGeneratedAttribute]
private static Action`2<IntPtr, IntPtr> <>f__mg$cache13;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache14;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache15;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, bool> <>f__mg$cache16;
    [CompilerGeneratedAttribute]
private static Action`4<IntPtr, IntPtr, float, float> <>f__mg$cache17;
    [CompilerGeneratedAttribute]
private static Action`6<IntPtr, IntPtr, int, int, int, int> <>f__mg$cache18;
    [CompilerGeneratedAttribute]
private static Func`4<IntPtr, IntPtr, IntPtr, bool> <>f__mg$cache19;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, int> <>f__mg$cache1A;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1B;
    [CompilerGeneratedAttribute]
private static Action`3<IntPtr, IntPtr, IntPtr> <>f__mg$cache1C;
    internal static IntPtr class_ref { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public int Alpha { get; public set; }
    public bool AutoMirrored { get; public set; }
    public ColorFilter ColorFilter { get; }
    public Drawable Current { get; }
    public int LayoutDirection { get; }
    public int MinimumHeight { get; }
    public int MinimumWidth { get; }
    public int Opacity { get; }
    public float PixelSize { get; }
    public Region TransparentRegion { get; }
    protected VectorDrawableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    public virtual void SetAlpha(int alpha);
    internal static IntPtr get_class_ref();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAlphaHandler();
    private static int n_GetAlpha(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("getAlpha", "()I", "GetGetAlphaHandler")]
public virtual int get_Alpha();
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void set_Alpha(int value);
    private static Delegate GetIsAutoMirroredHandler();
    private static bool n_IsAutoMirrored(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetAutoMirrored_ZHandler();
    private static void n_SetAutoMirrored_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isAutoMirrored", "()Z", "GetIsAutoMirroredHandler")]
public virtual bool get_AutoMirrored();
    [RegisterAttribute("setAutoMirrored", "(Z)V", "GetSetAutoMirrored_ZHandler")]
public virtual void set_AutoMirrored(bool value);
    private static Delegate GetGetColorFilterHandler();
    private static IntPtr n_GetColorFilter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getColorFilter", "()Landroid/graphics/ColorFilter;", "GetGetColorFilterHandler")]
public virtual ColorFilter get_ColorFilter();
    private static Delegate GetGetCurrentHandler();
    private static IntPtr n_GetCurrent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCurrent", "()Landroid/graphics/drawable/Drawable;", "GetGetCurrentHandler")]
public virtual Drawable get_Current();
    private static Delegate GetGetLayoutDirectionHandler();
    private static int n_GetLayoutDirection(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayoutDirection", "()I", "GetGetLayoutDirectionHandler")]
public virtual int get_LayoutDirection();
    private static Delegate GetGetMinimumHeightHandler();
    private static int n_GetMinimumHeight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinimumHeight", "()I", "GetGetMinimumHeightHandler")]
public virtual int get_MinimumHeight();
    private static Delegate GetGetMinimumWidthHandler();
    private static int n_GetMinimumWidth(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMinimumWidth", "()I", "GetGetMinimumWidthHandler")]
public virtual int get_MinimumWidth();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    private static Delegate GetGetPixelSizeHandler();
    private static float n_GetPixelSize(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPixelSize", "()F", "GetGetPixelSizeHandler")]
public virtual float get_PixelSize();
    private static Delegate GetGetTransparentRegionHandler();
    private static IntPtr n_GetTransparentRegion(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransparentRegion", "()Landroid/graphics/Region;", "GetGetTransparentRegionHandler")]
public virtual Region get_TransparentRegion();
    private static Delegate GetApplyTheme_Landroid_content_res_Resources_Theme_Handler();
    private static void n_ApplyTheme_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("applyTheme", "(Landroid/content/res/Resources$Theme;)V", "GetApplyTheme_Landroid_content_res_Resources_Theme_Handler")]
public virtual void ApplyTheme(Theme p0);
    private static Delegate GetCanApplyThemeHandler();
    private static bool n_CanApplyTheme(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canApplyTheme", "()Z", "GetCanApplyThemeHandler")]
public virtual bool CanApplyTheme();
    private static Delegate GetClearColorFilterHandler();
    private static void n_ClearColorFilter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("clearColorFilter", "()V", "GetClearColorFilterHandler")]
public virtual void ClearColorFilter();
    [RegisterAttribute("create", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/support/graphics/drawable/VectorDrawableCompat;", "")]
public static VectorDrawableCompat Create(Resources res, int resId, Theme theme);
    [RegisterAttribute("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/support/graphics/drawable/VectorDrawableCompat;", "")]
public static VectorDrawableCompat CreateFromXmlInner(Resources rValue, XmlReader parser, IAttributeSet attrs, Theme theme);
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetGetPadding_Landroid_graphics_Rect_Handler();
    private static bool n_GetPadding_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("getPadding", "(Landroid/graphics/Rect;)Z", "GetGetPadding_Landroid_graphics_Rect_Handler")]
public virtual bool GetPadding(Rect p0);
    private static Delegate GetGetStateHandler();
    private static IntPtr n_GetState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getState", "()[I", "GetGetStateHandler")]
public virtual Int32[] GetState();
    private static Delegate GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler();
    private static void n_Inflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_(IntPtr jnienv, IntPtr native__this, IntPtr native_res, IntPtr native_parser, IntPtr native_attrs, IntPtr native_theme);
    [RegisterAttribute("inflate", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "GetInflate_Landroid_content_res_Resources_Lorg_xmlpull_v1_XmlPullParser_Landroid_util_AttributeSet_Landroid_content_res_Resources_Theme_Handler")]
public virtual void Inflate(Resources res, XmlReader parser, IAttributeSet attrs, Theme theme);
    private static Delegate GetJumpToCurrentStateHandler();
    private static void n_JumpToCurrentState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("jumpToCurrentState", "()V", "GetJumpToCurrentStateHandler")]
public virtual void JumpToCurrentState();
    private static Delegate GetOnBoundsChange_Landroid_graphics_Rect_Handler();
    private static void n_OnBoundsChange_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onBoundsChange", "(Landroid/graphics/Rect;)V", "GetOnBoundsChange_Landroid_graphics_Rect_Handler")]
protected virtual void OnBoundsChange(Rect p0);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_colorFilter);
    [RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter colorFilter);
    private static Delegate GetSetFilterBitmap_ZHandler();
    private static void n_SetFilterBitmap_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("setFilterBitmap", "(Z)V", "GetSetFilterBitmap_ZHandler")]
public virtual void SetFilterBitmap(bool p0);
    private static Delegate GetSetHotspot_FFHandler();
    private static void n_SetHotspot_FF(IntPtr jnienv, IntPtr native__this, float p0, float p1);
    [RegisterAttribute("setHotspot", "(FF)V", "GetSetHotspot_FFHandler")]
public virtual void SetHotspot(float p0, float p1);
    private static Delegate GetSetHotspotBounds_IIIIHandler();
    private static void n_SetHotspotBounds_IIII(IntPtr jnienv, IntPtr native__this, int p0, int p1, int p2, int p3);
    [RegisterAttribute("setHotspotBounds", "(IIII)V", "GetSetHotspotBounds_IIIIHandler")]
public virtual void SetHotspotBounds(int p0, int p1, int p2, int p3);
    private static Delegate GetSetState_arrayIHandler();
    private static bool n_SetState_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("setState", "([I)Z", "GetSetState_arrayIHandler")]
public virtual bool SetState(Int32[] p0);
    private static Delegate GetSetTint_IHandler();
    private static void n_SetTint_I(IntPtr jnienv, IntPtr native__this, int tint);
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler")]
public virtual void SetTint(int tint);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual void SetTintList(ColorStateList tint);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual void SetTintMode(Mode tintMode);
}
internal class Java.Interop.__TypeRegistrations : object {
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
}
