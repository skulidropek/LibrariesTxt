[RegisterAttribute("androidx/versionedparcelable/CustomVersionedParcelable")]
public abstract class AndroidX.VersionedParcelable.CustomVersionedParcelable : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_onPostParceling;
    private static Delegate cb_onPreParceling_Z;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected CustomVersionedParcelable(IntPtr javaReference, JniHandleOwnership transfer);
    private static CustomVersionedParcelable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnPostParcelingHandler();
    private static void n_OnPostParceling(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPostParceling", "()V", "GetOnPostParcelingHandler")]
public virtual void OnPostParceling();
    private static Delegate GetOnPreParceling_ZHandler();
    private static void n_OnPreParceling_Z(IntPtr jnienv, IntPtr native__this, bool isStream);
    [RegisterAttribute("onPreParceling", "(Z)V", "GetOnPreParceling_ZHandler")]
public virtual void OnPreParceling(bool isStream);
}
[RegisterAttribute("androidx/versionedparcelable/CustomVersionedParcelable")]
internal class AndroidX.VersionedParcelable.CustomVersionedParcelableInvoker : CustomVersionedParcelable {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public CustomVersionedParcelableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static CustomVersionedParcelableInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("androidx/versionedparcelable/NonParcelField", "", "AndroidX.VersionedParcelable.INonParcelFieldInvoker")]
public interface AndroidX.VersionedParcelable.INonParcelField {
}
[RegisterAttribute("androidx/versionedparcelable/NonParcelField")]
internal class AndroidX.VersionedParcelable.INonParcelFieldInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public INonParcelFieldInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INonParcelFieldInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static INonParcelField GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ToString();
}
[RegisterAttribute("androidx/versionedparcelable/ParcelField", "", "AndroidX.VersionedParcelable.IParcelFieldInvoker")]
public interface AndroidX.VersionedParcelable.IParcelField {
    [RegisterAttribute("value", "()I", "GetValueHandler:AndroidX.VersionedParcelable.IParcelFieldInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual int Value();
}
[RegisterAttribute("androidx/versionedparcelable/ParcelField")]
internal class AndroidX.VersionedParcelable.IParcelFieldInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_value;
    private IntPtr id_value;
    private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IParcelFieldInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IParcelFieldInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IParcelField GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetValueHandler();
    private static int n_Value(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Value();
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ToString();
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcelable", "", "AndroidX.VersionedParcelable.IVersionedParcelableInvoker")]
public interface AndroidX.VersionedParcelable.IVersionedParcelable {
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcelable")]
internal class AndroidX.VersionedParcelable.IVersionedParcelableInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public IVersionedParcelableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IVersionedParcelableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IVersionedParcelable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcelize", "", "AndroidX.VersionedParcelable.IVersionedParcelizeInvoker")]
public interface AndroidX.VersionedParcelable.IVersionedParcelize {
    public bool IsCustom { get; }
    [RegisterAttribute("isCustom", "()Z", "GetIsCustomHandler:AndroidX.VersionedParcelable.IVersionedParcelizeInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual bool get_IsCustom();
    [RegisterAttribute("allowSerialization", "()Z", "GetAllowSerializationHandler:AndroidX.VersionedParcelable.IVersionedParcelizeInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual bool AllowSerialization();
    [RegisterAttribute("deprecatedIds", "()[I", "GetDeprecatedIdsHandler:AndroidX.VersionedParcelable.IVersionedParcelizeInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual Int32[] DeprecatedIds();
    [RegisterAttribute("ignoreParcelables", "()Z", "GetIgnoreParcelablesHandler:AndroidX.VersionedParcelable.IVersionedParcelizeInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual bool IgnoreParcelables();
    [RegisterAttribute("jetifyAs", "()Ljava/lang/String;", "GetJetifyAsHandler:AndroidX.VersionedParcelable.IVersionedParcelizeInvoker, Xamarin.Android.Support.VersionedParcelable")]
public abstract virtual string JetifyAs();
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcelize")]
internal class AndroidX.VersionedParcelable.IVersionedParcelizeInvoker : Object {
    internal static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isCustom;
    private IntPtr id_isCustom;
    private static Delegate cb_allowSerialization;
    private IntPtr id_allowSerialization;
    private static Delegate cb_deprecatedIds;
    private IntPtr id_deprecatedIds;
    private static Delegate cb_ignoreParcelables;
    private IntPtr id_ignoreParcelables;
    private static Delegate cb_jetifyAs;
    private IntPtr id_jetifyAs;
    private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsCustom { get; }
    public IVersionedParcelizeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IVersionedParcelizeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    public static IVersionedParcelize GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsCustomHandler();
    private static bool n_IsCustom(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCustom();
    private static Delegate GetAllowSerializationHandler();
    private static bool n_AllowSerialization(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool AllowSerialization();
    private static Delegate GetDeprecatedIdsHandler();
    private static IntPtr n_DeprecatedIds(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Int32[] DeprecatedIds();
    private static Delegate GetIgnoreParcelablesHandler();
    private static bool n_IgnoreParcelables(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool IgnoreParcelables();
    private static Delegate GetJetifyAsHandler();
    private static IntPtr n_JetifyAs(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string JetifyAs();
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string ToString();
}
[AnnotationAttribute("androidx.versionedparcelable.NonParcelField")]
public class AndroidX.VersionedParcelable.NonParcelFieldAttribute : Attribute {
}
[AnnotationAttribute("androidx.versionedparcelable.ParcelField")]
public class AndroidX.VersionedParcelable.ParcelFieldAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Value>k__BackingField;
    [RegisterAttribute("value")]
public int Value { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Value();
    [CompilerGeneratedAttribute]
public void set_Value(int value);
}
[RegisterAttribute("androidx/versionedparcelable/ParcelImpl")]
public class AndroidX.VersionedParcelable.ParcelImpl : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_getVersionedParcel;
    private static Delegate cb_describeContents;
    private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    [JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object VersionedParcel { get; }
    protected ParcelImpl(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/os/Parcel;)V", "")]
protected ParcelImpl(Parcel in);
    [RegisterAttribute(".ctor", "(Landroidx/versionedparcelable/VersionedParcelable;)V", "")]
public ParcelImpl(IVersionedParcelable parcel);
    private static ParcelImpl();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetVersionedParcelHandler();
    private static IntPtr n_GetVersionedParcel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVersionedParcel", "()Landroidx/versionedparcelable/VersionedParcelable;", "GetGetVersionedParcelHandler")]
public virtual Object get_VersionedParcel();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_dest, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[RegisterAttribute("androidx/versionedparcelable/ParcelUtils")]
public class AndroidX.VersionedParcelable.ParcelUtils : Object {
    internal static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    protected ParcelUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static ParcelUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fromInputStream", "(Ljava/io/InputStream;)Landroidx/versionedparcelable/VersionedParcelable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object FromInputStream(Stream input);
    [RegisterAttribute("fromParcelable", "(Landroid/os/Parcelable;)Landroidx/versionedparcelable/VersionedParcelable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object FromParcelable(IParcelable p);
    [RegisterAttribute("toOutputStream", "(Landroidx/versionedparcelable/VersionedParcelable;Ljava/io/OutputStream;)V", "")]
public static void ToOutputStream(IVersionedParcelable obj, Stream output);
    [RegisterAttribute("toParcelable", "(Landroidx/versionedparcelable/VersionedParcelable;)Landroid/os/Parcelable;", "")]
public static IParcelable ToParcelable(IVersionedParcelable obj);
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcel")]
public abstract class AndroidX.VersionedParcelable.VersionedParcel : Object {
    internal static JniPeerMembers _members;
    private static Delegate cb_isStream;
    private static Delegate cb_closeField;
    private static Delegate cb_createSubParcel;
    private static Delegate cb_readArray_arrayLjava_lang_Object_;
    private static Delegate cb_readArray_arrayLjava_lang_Object_I;
    private static Delegate cb_readBoolean;
    private static Delegate cb_readBoolean_ZI;
    private static Delegate cb_readBooleanArray;
    private static Delegate cb_readBooleanArray_arrayZI;
    private static Delegate cb_readBundle;
    private static Delegate cb_readBundle_Landroid_os_Bundle_I;
    private static Delegate cb_readByte_BI;
    private static Delegate cb_readByteArray;
    private static Delegate cb_readByteArray_arrayBI;
    private static Delegate cb_readCharArray_arrayCI;
    private static Delegate cb_readDouble;
    private static Delegate cb_readDouble_DI;
    private static Delegate cb_readDoubleArray;
    private static Delegate cb_readDoubleArray_arrayDI;
    private static Delegate cb_readException_Ljava_lang_Exception_I;
    private static Delegate cb_readField_I;
    private static Delegate cb_readFloat;
    private static Delegate cb_readFloat_FI;
    private static Delegate cb_readFloatArray;
    private static Delegate cb_readFloatArray_arrayFI;
    private static Delegate cb_readInt;
    private static Delegate cb_readInt_II;
    private static Delegate cb_readIntArray;
    private static Delegate cb_readIntArray_arrayII;
    private static Delegate cb_readList_Ljava_util_List_I;
    private static Delegate cb_readLong;
    private static Delegate cb_readLong_JI;
    private static Delegate cb_readLongArray;
    private static Delegate cb_readLongArray_arrayJI;
    private static Delegate cb_readParcelable;
    private static Delegate cb_readParcelable_Landroid_os_Parcelable_I;
    private static Delegate cb_readSerializable;
    private static Delegate cb_readSet_Ljava_util_Set_I;
    private static Delegate cb_readSize_Landroid_util_Size_I;
    private static Delegate cb_readSizeF_Landroid_util_SizeF_I;
    private static Delegate cb_readSparseBooleanArray_Landroid_util_SparseBooleanArray_I;
    private static Delegate cb_readString;
    private static Delegate cb_readString_Ljava_lang_String_I;
    private static Delegate cb_readStrongBinder;
    private static Delegate cb_readStrongBinder_Landroid_os_IBinder_I;
    private static Delegate cb_readVersionedParcelable;
    private static Delegate cb_readVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_I;
    private static Delegate cb_setOutputField_I;
    private static Delegate cb_setSerializationFlags_ZZ;
    private static Delegate cb_writeArray_arrayLjava_lang_Object_;
    private static Delegate cb_writeArray_arrayLjava_lang_Object_I;
    private static Delegate cb_writeBoolean_Z;
    private static Delegate cb_writeBoolean_ZI;
    private static Delegate cb_writeBooleanArray_arrayZ;
    private static Delegate cb_writeBooleanArray_arrayZI;
    private static Delegate cb_writeBundle_Landroid_os_Bundle_;
    private static Delegate cb_writeBundle_Landroid_os_Bundle_I;
    private static Delegate cb_writeByte_BI;
    private static Delegate cb_writeByteArray_arrayB;
    private static Delegate cb_writeByteArray_arrayBI;
    private static Delegate cb_writeByteArray_arrayBII;
    private static Delegate cb_writeByteArray_arrayBIII;
    private static Delegate cb_writeCharArray_arrayCI;
    private static Delegate cb_writeDouble_D;
    private static Delegate cb_writeDouble_DI;
    private static Delegate cb_writeDoubleArray_arrayD;
    private static Delegate cb_writeDoubleArray_arrayDI;
    private static Delegate cb_writeException_Ljava_lang_Exception_I;
    private static Delegate cb_writeFloat_F;
    private static Delegate cb_writeFloat_FI;
    private static Delegate cb_writeFloatArray_arrayF;
    private static Delegate cb_writeFloatArray_arrayFI;
    private static Delegate cb_writeInt_I;
    private static Delegate cb_writeInt_II;
    private static Delegate cb_writeIntArray_arrayI;
    private static Delegate cb_writeIntArray_arrayII;
    private static Delegate cb_writeList_Ljava_util_List_I;
    private static Delegate cb_writeLong_J;
    private static Delegate cb_writeLong_JI;
    private static Delegate cb_writeLongArray_arrayJ;
    private static Delegate cb_writeLongArray_arrayJI;
    private static Delegate cb_writeNoException;
    private static Delegate cb_writeParcelable_Landroid_os_Parcelable_;
    private static Delegate cb_writeParcelable_Landroid_os_Parcelable_I;
    private static Delegate cb_writeSerializable_Ljava_io_Serializable_I;
    private static Delegate cb_writeSet_Ljava_util_Set_I;
    private static Delegate cb_writeSize_Landroid_util_Size_I;
    private static Delegate cb_writeSizeF_Landroid_util_SizeF_I;
    private static Delegate cb_writeSparseBooleanArray_Landroid_util_SparseBooleanArray_I;
    private static Delegate cb_writeString_Ljava_lang_String_;
    private static Delegate cb_writeString_Ljava_lang_String_I;
    private static Delegate cb_writeStrongBinder_Landroid_os_IBinder_;
    private static Delegate cb_writeStrongBinder_Landroid_os_IBinder_I;
    private static Delegate cb_writeStrongInterface_Landroid_os_IInterface_;
    private static Delegate cb_writeStrongInterface_Landroid_os_IInterface_I;
    private static Delegate cb_writeVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_;
    private static Delegate cb_writeVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_I;
    internal static IntPtr class_ref { get; }
    public JniPeerMembers JniPeerMembers { get; }
    protected IntPtr ThresholdClass { get; }
    protected Type ThresholdType { get; }
    public bool IsStream { get; }
    protected VersionedParcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static VersionedParcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStreamHandler();
    private static bool n_IsStream(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStream", "()Z", "GetIsStreamHandler")]
public virtual bool get_IsStream();
    private static Delegate GetCloseFieldHandler();
    private static void n_CloseField(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closeField", "()V", "GetCloseFieldHandler")]
protected abstract virtual void CloseField();
    private static Delegate GetCreateSubParcelHandler();
    private static IntPtr n_CreateSubParcel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("createSubParcel", "()Landroidx/versionedparcelable/VersionedParcel;", "GetCreateSubParcelHandler")]
protected abstract virtual VersionedParcel CreateSubParcel();
    [RegisterAttribute("getRootCause", "(Ljava/lang/Throwable;)Ljava/lang/Throwable;", "")]
protected static Throwable GetRootCause(Throwable t);
    private static Delegate GetReadArray_arrayLjava_lang_Object_Handler();
    private static IntPtr n_ReadArray_arrayLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_def);
    [RegisterAttribute("readArray", "([Ljava/lang/Object;)[Ljava/lang/Object;", "GetReadArray_arrayLjava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected virtual Object[] ReadArray(Object[] def);
    private static Delegate GetReadArray_arrayLjava_lang_Object_IHandler();
    private static IntPtr n_ReadArray_arrayLjava_lang_Object_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readArray", "([Ljava/lang/Object;I)[Ljava/lang/Object;", "GetReadArray_arrayLjava_lang_Object_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object[] ReadArray(Object[] def, int fieldId);
    private static Delegate GetReadBooleanHandler();
    private static bool n_ReadBoolean(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readBoolean", "()Z", "GetReadBooleanHandler")]
protected abstract virtual bool ReadBoolean();
    private static Delegate GetReadBoolean_ZIHandler();
    private static bool n_ReadBoolean_ZI(IntPtr jnienv, IntPtr native__this, bool def, int fieldId);
    [RegisterAttribute("readBoolean", "(ZI)Z", "GetReadBoolean_ZIHandler")]
public virtual bool ReadBoolean(bool def, int fieldId);
    private static Delegate GetReadBooleanArrayHandler();
    private static IntPtr n_ReadBooleanArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readBooleanArray", "()[Z", "GetReadBooleanArrayHandler")]
protected virtual Boolean[] ReadBooleanArray();
    private static Delegate GetReadBooleanArray_arrayZIHandler();
    private static IntPtr n_ReadBooleanArray_arrayZI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readBooleanArray", "([ZI)[Z", "GetReadBooleanArray_arrayZIHandler")]
public virtual Boolean[] ReadBooleanArray(Boolean[] def, int fieldId);
    private static Delegate GetReadBundleHandler();
    private static IntPtr n_ReadBundle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readBundle", "()Landroid/os/Bundle;", "GetReadBundleHandler")]
protected abstract virtual Bundle ReadBundle();
    private static Delegate GetReadBundle_Landroid_os_Bundle_IHandler();
    private static IntPtr n_ReadBundle_Landroid_os_Bundle_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readBundle", "(Landroid/os/Bundle;I)Landroid/os/Bundle;", "GetReadBundle_Landroid_os_Bundle_IHandler")]
public virtual Bundle ReadBundle(Bundle def, int fieldId);
    private static Delegate GetReadByte_BIHandler();
    private static sbyte n_ReadByte_BI(IntPtr jnienv, IntPtr native__this, sbyte def, int fieldId);
    [RegisterAttribute("readByte", "(BI)B", "GetReadByte_BIHandler")]
public virtual sbyte ReadByte(sbyte def, int fieldId);
    private static Delegate GetReadByteArrayHandler();
    private static IntPtr n_ReadByteArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readByteArray", "()[B", "GetReadByteArrayHandler")]
protected abstract virtual Byte[] ReadByteArray();
    private static Delegate GetReadByteArray_arrayBIHandler();
    private static IntPtr n_ReadByteArray_arrayBI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readByteArray", "([BI)[B", "GetReadByteArray_arrayBIHandler")]
public virtual Byte[] ReadByteArray(Byte[] def, int fieldId);
    private static Delegate GetReadCharArray_arrayCIHandler();
    private static IntPtr n_ReadCharArray_arrayCI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readCharArray", "([CI)[C", "GetReadCharArray_arrayCIHandler")]
public virtual Char[] ReadCharArray(Char[] def, int fieldId);
    private static Delegate GetReadDoubleHandler();
    private static double n_ReadDouble(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readDouble", "()D", "GetReadDoubleHandler")]
protected abstract virtual double ReadDouble();
    private static Delegate GetReadDouble_DIHandler();
    private static double n_ReadDouble_DI(IntPtr jnienv, IntPtr native__this, double def, int fieldId);
    [RegisterAttribute("readDouble", "(DI)D", "GetReadDouble_DIHandler")]
public virtual double ReadDouble(double def, int fieldId);
    private static Delegate GetReadDoubleArrayHandler();
    private static IntPtr n_ReadDoubleArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readDoubleArray", "()[D", "GetReadDoubleArrayHandler")]
protected virtual Double[] ReadDoubleArray();
    private static Delegate GetReadDoubleArray_arrayDIHandler();
    private static IntPtr n_ReadDoubleArray_arrayDI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readDoubleArray", "([DI)[D", "GetReadDoubleArray_arrayDIHandler")]
public virtual Double[] ReadDoubleArray(Double[] def, int fieldId);
    private static Delegate GetReadException_Ljava_lang_Exception_IHandler();
    private static IntPtr n_ReadException_Ljava_lang_Exception_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readException", "(Ljava/lang/Exception;I)Ljava/lang/Exception;", "GetReadException_Ljava_lang_Exception_IHandler")]
public virtual Exception ReadException(Exception def, int fieldId);
    private static Delegate GetReadField_IHandler();
    private static bool n_ReadField_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("readField", "(I)Z", "GetReadField_IHandler")]
protected abstract virtual bool ReadField(int p0);
    private static Delegate GetReadFloatHandler();
    private static float n_ReadFloat(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readFloat", "()F", "GetReadFloatHandler")]
protected abstract virtual float ReadFloat();
    private static Delegate GetReadFloat_FIHandler();
    private static float n_ReadFloat_FI(IntPtr jnienv, IntPtr native__this, float def, int fieldId);
    [RegisterAttribute("readFloat", "(FI)F", "GetReadFloat_FIHandler")]
public virtual float ReadFloat(float def, int fieldId);
    private static Delegate GetReadFloatArrayHandler();
    private static IntPtr n_ReadFloatArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readFloatArray", "()[F", "GetReadFloatArrayHandler")]
protected virtual Single[] ReadFloatArray();
    private static Delegate GetReadFloatArray_arrayFIHandler();
    private static IntPtr n_ReadFloatArray_arrayFI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readFloatArray", "([FI)[F", "GetReadFloatArray_arrayFIHandler")]
public virtual Single[] ReadFloatArray(Single[] def, int fieldId);
    [RegisterAttribute("readFromParcel", "(Ljava/lang/String;Landroidx/versionedparcelable/VersionedParcel;)Landroidx/versionedparcelable/VersionedParcelable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected static Object ReadFromParcel(string parcelCls, VersionedParcel versionedParcel);
    private static Delegate GetReadIntHandler();
    private static int n_ReadInt(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readInt", "()I", "GetReadIntHandler")]
protected abstract virtual int ReadInt();
    private static Delegate GetReadInt_IIHandler();
    private static int n_ReadInt_II(IntPtr jnienv, IntPtr native__this, int def, int fieldId);
    [RegisterAttribute("readInt", "(II)I", "GetReadInt_IIHandler")]
public virtual int ReadInt(int def, int fieldId);
    private static Delegate GetReadIntArrayHandler();
    private static IntPtr n_ReadIntArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readIntArray", "()[I", "GetReadIntArrayHandler")]
protected virtual Int32[] ReadIntArray();
    private static Delegate GetReadIntArray_arrayIIHandler();
    private static IntPtr n_ReadIntArray_arrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readIntArray", "([II)[I", "GetReadIntArray_arrayIIHandler")]
public virtual Int32[] ReadIntArray(Int32[] def, int fieldId);
    private static Delegate GetReadList_Ljava_util_List_IHandler();
    private static IntPtr n_ReadList_Ljava_util_List_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readList", "(Ljava/util/List;I)Ljava/util/List;", "GetReadList_Ljava_util_List_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual IList ReadList(IList def, int fieldId);
    private static Delegate GetReadLongHandler();
    private static long n_ReadLong(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readLong", "()J", "GetReadLongHandler")]
protected abstract virtual long ReadLong();
    private static Delegate GetReadLong_JIHandler();
    private static long n_ReadLong_JI(IntPtr jnienv, IntPtr native__this, long def, int fieldId);
    [RegisterAttribute("readLong", "(JI)J", "GetReadLong_JIHandler")]
public virtual long ReadLong(long def, int fieldId);
    private static Delegate GetReadLongArrayHandler();
    private static IntPtr n_ReadLongArray(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readLongArray", "()[J", "GetReadLongArrayHandler")]
protected virtual Int64[] ReadLongArray();
    private static Delegate GetReadLongArray_arrayJIHandler();
    private static IntPtr n_ReadLongArray_arrayJI(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readLongArray", "([JI)[J", "GetReadLongArray_arrayJIHandler")]
public virtual Int64[] ReadLongArray(Int64[] def, int fieldId);
    private static Delegate GetReadParcelableHandler();
    private static IntPtr n_ReadParcelable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readParcelable", "()Landroid/os/Parcelable;", "GetReadParcelableHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected abstract virtual Object ReadParcelable();
    private static Delegate GetReadParcelable_Landroid_os_Parcelable_IHandler();
    private static IntPtr n_ReadParcelable_Landroid_os_Parcelable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readParcelable", "(Landroid/os/Parcelable;I)Landroid/os/Parcelable;", "GetReadParcelable_Landroid_os_Parcelable_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object ReadParcelable(Object def, int fieldId);
    private static Delegate GetReadSerializableHandler();
    private static IntPtr n_ReadSerializable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readSerializable", "()Ljava/io/Serializable;", "GetReadSerializableHandler")]
protected virtual ISerializable ReadSerializable();
    private static Delegate GetReadSet_Ljava_util_Set_IHandler();
    private static IntPtr n_ReadSet_Ljava_util_Set_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readSet", "(Ljava/util/Set;I)Ljava/util/Set;", "GetReadSet_Ljava_util_Set_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual ICollection ReadSet(ICollection def, int fieldId);
    private static Delegate GetReadSize_Landroid_util_Size_IHandler();
    private static IntPtr n_ReadSize_Landroid_util_Size_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readSize", "(Landroid/util/Size;I)Landroid/util/Size;", "GetReadSize_Landroid_util_Size_IHandler")]
public virtual Size ReadSize(Size def, int fieldId);
    private static Delegate GetReadSizeF_Landroid_util_SizeF_IHandler();
    private static IntPtr n_ReadSizeF_Landroid_util_SizeF_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readSizeF", "(Landroid/util/SizeF;I)Landroid/util/SizeF;", "GetReadSizeF_Landroid_util_SizeF_IHandler")]
public virtual SizeF ReadSizeF(SizeF def, int fieldId);
    private static Delegate GetReadSparseBooleanArray_Landroid_util_SparseBooleanArray_IHandler();
    private static IntPtr n_ReadSparseBooleanArray_Landroid_util_SparseBooleanArray_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readSparseBooleanArray", "(Landroid/util/SparseBooleanArray;I)Landroid/util/SparseBooleanArray;", "GetReadSparseBooleanArray_Landroid_util_SparseBooleanArray_IHandler")]
public virtual SparseBooleanArray ReadSparseBooleanArray(SparseBooleanArray def, int fieldId);
    private static Delegate GetReadStringHandler();
    private static IntPtr n_ReadString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readString", "()Ljava/lang/String;", "GetReadStringHandler")]
protected abstract virtual string ReadString();
    private static Delegate GetReadString_Ljava_lang_String_IHandler();
    private static IntPtr n_ReadString_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readString", "(Ljava/lang/String;I)Ljava/lang/String;", "GetReadString_Ljava_lang_String_IHandler")]
public virtual string ReadString(string def, int fieldId);
    private static Delegate GetReadStrongBinderHandler();
    private static IntPtr n_ReadStrongBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readStrongBinder", "()Landroid/os/IBinder;", "GetReadStrongBinderHandler")]
protected abstract virtual IBinder ReadStrongBinder();
    private static Delegate GetReadStrongBinder_Landroid_os_IBinder_IHandler();
    private static IntPtr n_ReadStrongBinder_Landroid_os_IBinder_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readStrongBinder", "(Landroid/os/IBinder;I)Landroid/os/IBinder;", "GetReadStrongBinder_Landroid_os_IBinder_IHandler")]
public virtual IBinder ReadStrongBinder(IBinder def, int fieldId);
    private static Delegate GetReadVersionedParcelableHandler();
    private static IntPtr n_ReadVersionedParcelable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readVersionedParcelable", "()Landroidx/versionedparcelable/VersionedParcelable;", "GetReadVersionedParcelableHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected virtual Object ReadVersionedParcelable();
    private static Delegate GetReadVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_IHandler();
    private static IntPtr n_ReadVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_def, int fieldId);
    [RegisterAttribute("readVersionedParcelable", "(Landroidx/versionedparcelable/VersionedParcelable;I)Landroidx/versionedparcelable/VersionedParcelable;", "GetReadVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object ReadVersionedParcelable(Object def, int fieldId);
    private static Delegate GetSetOutputField_IHandler();
    private static void n_SetOutputField_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("setOutputField", "(I)V", "GetSetOutputField_IHandler")]
protected abstract virtual void SetOutputField(int p0);
    private static Delegate GetSetSerializationFlags_ZZHandler();
    private static void n_SetSerializationFlags_ZZ(IntPtr jnienv, IntPtr native__this, bool allowSerialization, bool ignoreParcelables);
    [RegisterAttribute("setSerializationFlags", "(ZZ)V", "GetSetSerializationFlags_ZZHandler")]
public virtual void SetSerializationFlags(bool allowSerialization, bool ignoreParcelables);
    private static Delegate GetWriteArray_arrayLjava_lang_Object_Handler();
    private static void n_WriteArray_arrayLjava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeArray", "([Ljava/lang/Object;)V", "GetWriteArray_arrayLjava_lang_Object_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected virtual void WriteArray(Object[] val);
    private static Delegate GetWriteArray_arrayLjava_lang_Object_IHandler();
    private static void n_WriteArray_arrayLjava_lang_Object_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeArray", "([Ljava/lang/Object;I)V", "GetWriteArray_arrayLjava_lang_Object_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void WriteArray(Object[] val, int fieldId);
    private static Delegate GetWriteBoolean_ZHandler();
    private static void n_WriteBoolean_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler")]
protected abstract virtual void WriteBoolean(bool p0);
    private static Delegate GetWriteBoolean_ZIHandler();
    private static void n_WriteBoolean_ZI(IntPtr jnienv, IntPtr native__this, bool val, int fieldId);
    [RegisterAttribute("writeBoolean", "(ZI)V", "GetWriteBoolean_ZIHandler")]
public virtual void WriteBoolean(bool val, int fieldId);
    private static Delegate GetWriteBooleanArray_arrayZHandler();
    private static void n_WriteBooleanArray_arrayZ(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeBooleanArray", "([Z)V", "GetWriteBooleanArray_arrayZHandler")]
protected virtual void WriteBooleanArray(Boolean[] val);
    private static Delegate GetWriteBooleanArray_arrayZIHandler();
    private static void n_WriteBooleanArray_arrayZI(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeBooleanArray", "([ZI)V", "GetWriteBooleanArray_arrayZIHandler")]
public virtual void WriteBooleanArray(Boolean[] val, int fieldId);
    private static Delegate GetWriteBundle_Landroid_os_Bundle_Handler();
    private static void n_WriteBundle_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeBundle", "(Landroid/os/Bundle;)V", "GetWriteBundle_Landroid_os_Bundle_Handler")]
protected abstract virtual void WriteBundle(Bundle p0);
    private static Delegate GetWriteBundle_Landroid_os_Bundle_IHandler();
    private static void n_WriteBundle_Landroid_os_Bundle_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeBundle", "(Landroid/os/Bundle;I)V", "GetWriteBundle_Landroid_os_Bundle_IHandler")]
public virtual void WriteBundle(Bundle val, int fieldId);
    private static Delegate GetWriteByte_BIHandler();
    private static void n_WriteByte_BI(IntPtr jnienv, IntPtr native__this, sbyte val, int fieldId);
    [RegisterAttribute("writeByte", "(BI)V", "GetWriteByte_BIHandler")]
public virtual void WriteByte(sbyte val, int fieldId);
    private static Delegate GetWriteByteArray_arrayBHandler();
    private static void n_WriteByteArray_arrayB(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeByteArray", "([B)V", "GetWriteByteArray_arrayBHandler")]
protected abstract virtual void WriteByteArray(Byte[] p0);
    private static Delegate GetWriteByteArray_arrayBIHandler();
    private static void n_WriteByteArray_arrayBI(IntPtr jnienv, IntPtr native__this, IntPtr native_b, int fieldId);
    [RegisterAttribute("writeByteArray", "([BI)V", "GetWriteByteArray_arrayBIHandler")]
public virtual void WriteByteArray(Byte[] b, int fieldId);
    private static Delegate GetWriteByteArray_arrayBIIHandler();
    private static void n_WriteByteArray_arrayBII(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1, int p2);
    [RegisterAttribute("writeByteArray", "([BII)V", "GetWriteByteArray_arrayBIIHandler")]
protected abstract virtual void WriteByteArray(Byte[] p0, int p1, int p2);
    private static Delegate GetWriteByteArray_arrayBIIIHandler();
    private static void n_WriteByteArray_arrayBIII(IntPtr jnienv, IntPtr native__this, IntPtr native_b, int offset, int len, int fieldId);
    [RegisterAttribute("writeByteArray", "([BIII)V", "GetWriteByteArray_arrayBIIIHandler")]
public virtual void WriteByteArray(Byte[] b, int offset, int len, int fieldId);
    private static Delegate GetWriteCharArray_arrayCIHandler();
    private static void n_WriteCharArray_arrayCI(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeCharArray", "([CI)V", "GetWriteCharArray_arrayCIHandler")]
public virtual void WriteCharArray(Char[] val, int fieldId);
    private static Delegate GetWriteDouble_DHandler();
    private static void n_WriteDouble_D(IntPtr jnienv, IntPtr native__this, double p0);
    [RegisterAttribute("writeDouble", "(D)V", "GetWriteDouble_DHandler")]
protected abstract virtual void WriteDouble(double p0);
    private static Delegate GetWriteDouble_DIHandler();
    private static void n_WriteDouble_DI(IntPtr jnienv, IntPtr native__this, double val, int fieldId);
    [RegisterAttribute("writeDouble", "(DI)V", "GetWriteDouble_DIHandler")]
public virtual void WriteDouble(double val, int fieldId);
    private static Delegate GetWriteDoubleArray_arrayDHandler();
    private static void n_WriteDoubleArray_arrayD(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeDoubleArray", "([D)V", "GetWriteDoubleArray_arrayDHandler")]
protected virtual void WriteDoubleArray(Double[] val);
    private static Delegate GetWriteDoubleArray_arrayDIHandler();
    private static void n_WriteDoubleArray_arrayDI(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeDoubleArray", "([DI)V", "GetWriteDoubleArray_arrayDIHandler")]
public virtual void WriteDoubleArray(Double[] val, int fieldId);
    private static Delegate GetWriteException_Ljava_lang_Exception_IHandler();
    private static void n_WriteException_Ljava_lang_Exception_I(IntPtr jnienv, IntPtr native__this, IntPtr native_e, int fieldId);
    [RegisterAttribute("writeException", "(Ljava/lang/Exception;I)V", "GetWriteException_Ljava_lang_Exception_IHandler")]
public virtual void WriteException(Exception e, int fieldId);
    private static Delegate GetWriteFloat_FHandler();
    private static void n_WriteFloat_F(IntPtr jnienv, IntPtr native__this, float p0);
    [RegisterAttribute("writeFloat", "(F)V", "GetWriteFloat_FHandler")]
protected abstract virtual void WriteFloat(float p0);
    private static Delegate GetWriteFloat_FIHandler();
    private static void n_WriteFloat_FI(IntPtr jnienv, IntPtr native__this, float val, int fieldId);
    [RegisterAttribute("writeFloat", "(FI)V", "GetWriteFloat_FIHandler")]
public virtual void WriteFloat(float val, int fieldId);
    private static Delegate GetWriteFloatArray_arrayFHandler();
    private static void n_WriteFloatArray_arrayF(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeFloatArray", "([F)V", "GetWriteFloatArray_arrayFHandler")]
protected virtual void WriteFloatArray(Single[] val);
    private static Delegate GetWriteFloatArray_arrayFIHandler();
    private static void n_WriteFloatArray_arrayFI(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeFloatArray", "([FI)V", "GetWriteFloatArray_arrayFIHandler")]
public virtual void WriteFloatArray(Single[] val, int fieldId);
    private static Delegate GetWriteInt_IHandler();
    private static void n_WriteInt_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("writeInt", "(I)V", "GetWriteInt_IHandler")]
protected abstract virtual void WriteInt(int p0);
    private static Delegate GetWriteInt_IIHandler();
    private static void n_WriteInt_II(IntPtr jnienv, IntPtr native__this, int val, int fieldId);
    [RegisterAttribute("writeInt", "(II)V", "GetWriteInt_IIHandler")]
public virtual void WriteInt(int val, int fieldId);
    private static Delegate GetWriteIntArray_arrayIHandler();
    private static void n_WriteIntArray_arrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeIntArray", "([I)V", "GetWriteIntArray_arrayIHandler")]
protected virtual void WriteIntArray(Int32[] val);
    private static Delegate GetWriteIntArray_arrayIIHandler();
    private static void n_WriteIntArray_arrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeIntArray", "([II)V", "GetWriteIntArray_arrayIIHandler")]
public virtual void WriteIntArray(Int32[] val, int fieldId);
    private static Delegate GetWriteList_Ljava_util_List_IHandler();
    private static void n_WriteList_Ljava_util_List_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeList", "(Ljava/util/List;I)V", "GetWriteList_Ljava_util_List_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void WriteList(IList val, int fieldId);
    private static Delegate GetWriteLong_JHandler();
    private static void n_WriteLong_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("writeLong", "(J)V", "GetWriteLong_JHandler")]
protected abstract virtual void WriteLong(long p0);
    private static Delegate GetWriteLong_JIHandler();
    private static void n_WriteLong_JI(IntPtr jnienv, IntPtr native__this, long val, int fieldId);
    [RegisterAttribute("writeLong", "(JI)V", "GetWriteLong_JIHandler")]
public virtual void WriteLong(long val, int fieldId);
    private static Delegate GetWriteLongArray_arrayJHandler();
    private static void n_WriteLongArray_arrayJ(IntPtr jnienv, IntPtr native__this, IntPtr native_val);
    [RegisterAttribute("writeLongArray", "([J)V", "GetWriteLongArray_arrayJHandler")]
protected virtual void WriteLongArray(Int64[] val);
    private static Delegate GetWriteLongArray_arrayJIHandler();
    private static void n_WriteLongArray_arrayJI(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeLongArray", "([JI)V", "GetWriteLongArray_arrayJIHandler")]
public virtual void WriteLongArray(Int64[] val, int fieldId);
    private static Delegate GetWriteNoExceptionHandler();
    private static void n_WriteNoException(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("writeNoException", "()V", "GetWriteNoExceptionHandler")]
protected virtual void WriteNoException();
    private static Delegate GetWriteParcelable_Landroid_os_Parcelable_Handler();
    private static void n_WriteParcelable_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeParcelable", "(Landroid/os/Parcelable;)V", "GetWriteParcelable_Landroid_os_Parcelable_Handler")]
protected abstract virtual void WriteParcelable(IParcelable p0);
    private static Delegate GetWriteParcelable_Landroid_os_Parcelable_IHandler();
    private static void n_WriteParcelable_Landroid_os_Parcelable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p, int fieldId);
    [RegisterAttribute("writeParcelable", "(Landroid/os/Parcelable;I)V", "GetWriteParcelable_Landroid_os_Parcelable_IHandler")]
public virtual void WriteParcelable(IParcelable p, int fieldId);
    private static Delegate GetWriteSerializable_Ljava_io_Serializable_IHandler();
    private static void n_WriteSerializable_Ljava_io_Serializable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_s, int fieldId);
    [RegisterAttribute("writeSerializable", "(Ljava/io/Serializable;I)V", "GetWriteSerializable_Ljava_io_Serializable_IHandler")]
public virtual void WriteSerializable(ISerializable s, int fieldId);
    private static Delegate GetWriteSet_Ljava_util_Set_IHandler();
    private static void n_WriteSet_Ljava_util_Set_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeSet", "(Ljava/util/Set;I)V", "GetWriteSet_Ljava_util_Set_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void WriteSet(ICollection val, int fieldId);
    private static Delegate GetWriteSize_Landroid_util_Size_IHandler();
    private static void n_WriteSize_Landroid_util_Size_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeSize", "(Landroid/util/Size;I)V", "GetWriteSize_Landroid_util_Size_IHandler")]
public virtual void WriteSize(Size val, int fieldId);
    private static Delegate GetWriteSizeF_Landroid_util_SizeF_IHandler();
    private static void n_WriteSizeF_Landroid_util_SizeF_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeSizeF", "(Landroid/util/SizeF;I)V", "GetWriteSizeF_Landroid_util_SizeF_IHandler")]
public virtual void WriteSizeF(SizeF val, int fieldId);
    private static Delegate GetWriteSparseBooleanArray_Landroid_util_SparseBooleanArray_IHandler();
    private static void n_WriteSparseBooleanArray_Landroid_util_SparseBooleanArray_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeSparseBooleanArray", "(Landroid/util/SparseBooleanArray;I)V", "GetWriteSparseBooleanArray_Landroid_util_SparseBooleanArray_IHandler")]
public virtual void WriteSparseBooleanArray(SparseBooleanArray val, int fieldId);
    private static Delegate GetWriteString_Ljava_lang_String_Handler();
    private static void n_WriteString_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeString", "(Ljava/lang/String;)V", "GetWriteString_Ljava_lang_String_Handler")]
protected abstract virtual void WriteString(string p0);
    private static Delegate GetWriteString_Ljava_lang_String_IHandler();
    private static void n_WriteString_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeString", "(Ljava/lang/String;I)V", "GetWriteString_Ljava_lang_String_IHandler")]
public virtual void WriteString(string val, int fieldId);
    private static Delegate GetWriteStrongBinder_Landroid_os_IBinder_Handler();
    private static void n_WriteStrongBinder_Landroid_os_IBinder_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeStrongBinder", "(Landroid/os/IBinder;)V", "GetWriteStrongBinder_Landroid_os_IBinder_Handler")]
protected abstract virtual void WriteStrongBinder(IBinder p0);
    private static Delegate GetWriteStrongBinder_Landroid_os_IBinder_IHandler();
    private static void n_WriteStrongBinder_Landroid_os_IBinder_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeStrongBinder", "(Landroid/os/IBinder;I)V", "GetWriteStrongBinder_Landroid_os_IBinder_IHandler")]
public virtual void WriteStrongBinder(IBinder val, int fieldId);
    private static Delegate GetWriteStrongInterface_Landroid_os_IInterface_Handler();
    private static void n_WriteStrongInterface_Landroid_os_IInterface_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("writeStrongInterface", "(Landroid/os/IInterface;)V", "GetWriteStrongInterface_Landroid_os_IInterface_Handler")]
protected abstract virtual void WriteStrongInterface(IInterface p0);
    private static Delegate GetWriteStrongInterface_Landroid_os_IInterface_IHandler();
    private static void n_WriteStrongInterface_Landroid_os_IInterface_I(IntPtr jnienv, IntPtr native__this, IntPtr native_val, int fieldId);
    [RegisterAttribute("writeStrongInterface", "(Landroid/os/IInterface;I)V", "GetWriteStrongInterface_Landroid_os_IInterface_IHandler")]
public virtual void WriteStrongInterface(IInterface val, int fieldId);
    [RegisterAttribute("writeToParcel", "(Landroidx/versionedparcelable/VersionedParcelable;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected static void WriteToParcel(Object val, VersionedParcel versionedParcel);
    private static Delegate GetWriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_Handler();
    private static void n_WriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p);
    [RegisterAttribute("writeVersionedParcelable", "(Landroidx/versionedparcelable/VersionedParcelable;)V", "GetWriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_Handler")]
protected virtual void WriteVersionedParcelable(IVersionedParcelable p);
    private static Delegate GetWriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_IHandler();
    private static void n_WriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p, int fieldId);
    [RegisterAttribute("writeVersionedParcelable", "(Landroidx/versionedparcelable/VersionedParcelable;I)V", "GetWriteVersionedParcelable_Landroidx_versionedparcelable_VersionedParcelable_IHandler")]
public virtual void WriteVersionedParcelable(IVersionedParcelable p, int fieldId);
}
[RegisterAttribute("androidx/versionedparcelable/VersionedParcel")]
internal class AndroidX.VersionedParcelable.VersionedParcelInvoker : VersionedParcel {
    internal static JniPeerMembers _members;
    public JniPeerMembers JniPeerMembers { get; }
    protected Type ThresholdType { get; }
    public VersionedParcelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static VersionedParcelInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("closeField", "()V", "GetCloseFieldHandler")]
protected virtual void CloseField();
    [RegisterAttribute("createSubParcel", "()Landroidx/versionedparcelable/VersionedParcel;", "GetCreateSubParcelHandler")]
protected virtual VersionedParcel CreateSubParcel();
    [RegisterAttribute("readBoolean", "()Z", "GetReadBooleanHandler")]
protected virtual bool ReadBoolean();
    [RegisterAttribute("readBundle", "()Landroid/os/Bundle;", "GetReadBundleHandler")]
protected virtual Bundle ReadBundle();
    [RegisterAttribute("readByteArray", "()[B", "GetReadByteArrayHandler")]
protected virtual Byte[] ReadByteArray();
    [RegisterAttribute("readDouble", "()D", "GetReadDoubleHandler")]
protected virtual double ReadDouble();
    [RegisterAttribute("readField", "(I)Z", "GetReadField_IHandler")]
protected virtual bool ReadField(int p0);
    [RegisterAttribute("readFloat", "()F", "GetReadFloatHandler")]
protected virtual float ReadFloat();
    [RegisterAttribute("readInt", "()I", "GetReadIntHandler")]
protected virtual int ReadInt();
    [RegisterAttribute("readLong", "()J", "GetReadLongHandler")]
protected virtual long ReadLong();
    [RegisterAttribute("readParcelable", "()Landroid/os/Parcelable;", "GetReadParcelableHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
protected virtual Object ReadParcelable();
    [RegisterAttribute("readString", "()Ljava/lang/String;", "GetReadStringHandler")]
protected virtual string ReadString();
    [RegisterAttribute("readStrongBinder", "()Landroid/os/IBinder;", "GetReadStrongBinderHandler")]
protected virtual IBinder ReadStrongBinder();
    [RegisterAttribute("setOutputField", "(I)V", "GetSetOutputField_IHandler")]
protected virtual void SetOutputField(int p0);
    [RegisterAttribute("writeBoolean", "(Z)V", "GetWriteBoolean_ZHandler")]
protected virtual void WriteBoolean(bool p0);
    [RegisterAttribute("writeBundle", "(Landroid/os/Bundle;)V", "GetWriteBundle_Landroid_os_Bundle_Handler")]
protected virtual void WriteBundle(Bundle p0);
    [RegisterAttribute("writeByteArray", "([B)V", "GetWriteByteArray_arrayBHandler")]
protected virtual void WriteByteArray(Byte[] p0);
    [RegisterAttribute("writeByteArray", "([BII)V", "GetWriteByteArray_arrayBIIHandler")]
protected virtual void WriteByteArray(Byte[] p0, int p1, int p2);
    [RegisterAttribute("writeDouble", "(D)V", "GetWriteDouble_DHandler")]
protected virtual void WriteDouble(double p0);
    [RegisterAttribute("writeFloat", "(F)V", "GetWriteFloat_FHandler")]
protected virtual void WriteFloat(float p0);
    [RegisterAttribute("writeInt", "(I)V", "GetWriteInt_IHandler")]
protected virtual void WriteInt(int p0);
    [RegisterAttribute("writeLong", "(J)V", "GetWriteLong_JHandler")]
protected virtual void WriteLong(long p0);
    [RegisterAttribute("writeParcelable", "(Landroid/os/Parcelable;)V", "GetWriteParcelable_Landroid_os_Parcelable_Handler")]
protected virtual void WriteParcelable(IParcelable p0);
    [RegisterAttribute("writeString", "(Ljava/lang/String;)V", "GetWriteString_Ljava_lang_String_Handler")]
protected virtual void WriteString(string p0);
    [RegisterAttribute("writeStrongBinder", "(Landroid/os/IBinder;)V", "GetWriteStrongBinder_Landroid_os_IBinder_Handler")]
protected virtual void WriteStrongBinder(IBinder p0);
    [RegisterAttribute("writeStrongInterface", "(Landroid/os/IInterface;)V", "GetWriteStrongInterface_Landroid_os_IInterface_Handler")]
protected virtual void WriteStrongInterface(IInterface p0);
}
[AnnotationAttribute("androidx.versionedparcelable.VersionedParcelize")]
public class AndroidX.VersionedParcelable.VersionedParcelizeAttribute : Attribute {
    [CompilerGeneratedAttribute]
private bool <AllowSerialization>k__BackingField;
    [CompilerGeneratedAttribute]
private Int32[] <DeprecatedIds>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <IgnoreParcelables>k__BackingField;
    [CompilerGeneratedAttribute]
private string <JetifyAs>k__BackingField;
    [RegisterAttribute("allowSerialization")]
public bool AllowSerialization { get; public set; }
    [RegisterAttribute("deprecatedIds")]
public Int32[] DeprecatedIds { get; public set; }
    [RegisterAttribute("ignoreParcelables")]
public bool IgnoreParcelables { get; public set; }
    [RegisterAttribute("jetifyAs")]
public string JetifyAs { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_AllowSerialization();
    [CompilerGeneratedAttribute]
public void set_AllowSerialization(bool value);
    [CompilerGeneratedAttribute]
public Int32[] get_DeprecatedIds();
    [CompilerGeneratedAttribute]
public void set_DeprecatedIds(Int32[] value);
    [CompilerGeneratedAttribute]
public bool get_IgnoreParcelables();
    [CompilerGeneratedAttribute]
public void set_IgnoreParcelables(bool value);
    [CompilerGeneratedAttribute]
public string get_JetifyAs();
    [CompilerGeneratedAttribute]
public void set_JetifyAs(string value);
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_androidx_versionedparcelable_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_versionedparcelable_package(string klass);
}
