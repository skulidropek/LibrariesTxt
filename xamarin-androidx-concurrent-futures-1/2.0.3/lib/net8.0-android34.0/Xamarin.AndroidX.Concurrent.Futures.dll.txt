internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/concurrent/futures/AbstractResolvableFuture")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class AndroidX.Concurrent.Futures.AbstractResolvableFuture : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_afterDone;
    private static Delegate cb_interruptTask;
    private static Delegate cb_pendingToString;
    private static Delegate cb_set_Ljava_lang_Object_;
    private static Delegate cb_setException_Ljava_lang_Throwable_;
    private static Delegate cb_setFuture_Lcom_google_common_util_concurrent_ListenableFuture_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsCancelled { get; }
    public bool IsDone { get; }
    protected AbstractResolvableFuture(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractResolvableFuture();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("isCancelled", "()Z", "")]
public sealed virtual bool get_IsCancelled();
    [RegisterAttribute("isDone", "()Z", "")]
public sealed virtual bool get_IsDone();
    [RegisterAttribute("addListener", "(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V", "")]
public sealed virtual void AddListener(IRunnable listener, IExecutor executor);
    [NullableContextAttribute("1")]
private static Delegate GetAfterDoneHandler();
    private static void n_AfterDone(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("afterDone", "()V", "GetAfterDoneHandler")]
protected virtual void AfterDone();
    [RegisterAttribute("cancel", "(Z)Z", "")]
public sealed virtual bool Cancel(bool mayInterruptIfRunning);
    [RegisterAttribute("get", "()Ljava/lang/Object;", "")]
public sealed virtual Object Get();
    [RegisterAttribute("get", "(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;", "")]
public sealed virtual Object Get(long timeout, TimeUnit unit);
    [NullableContextAttribute("1")]
private static Delegate GetInterruptTaskHandler();
    private static void n_InterruptTask(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("interruptTask", "()V", "GetInterruptTaskHandler")]
protected virtual void InterruptTask();
    [NullableContextAttribute("1")]
private static Delegate GetPendingToStringHandler();
    private static IntPtr n_PendingToString(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pendingToString", "()Ljava/lang/String;", "GetPendingToStringHandler")]
protected virtual string PendingToString();
    [NullableContextAttribute("1")]
private static Delegate GetSet_Ljava_lang_Object_Handler();
    private static bool n_Set_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [RegisterAttribute("set", "(Ljava/lang/Object;)Z", "GetSet_Ljava_lang_Object_Handler")]
protected virtual bool Set(Object value);
    [NullableContextAttribute("1")]
private static Delegate GetSetException_Ljava_lang_Throwable_Handler();
    private static bool n_SetException_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_throwable);
    [RegisterAttribute("setException", "(Ljava/lang/Throwable;)Z", "GetSetException_Ljava_lang_Throwable_Handler")]
protected virtual bool SetException(Throwable throwable);
    [NullableContextAttribute("1")]
private static Delegate GetSetFuture_Lcom_google_common_util_concurrent_ListenableFuture_Handler();
    private static bool n_SetFuture_Lcom_google_common_util_concurrent_ListenableFuture_(IntPtr jnienv, IntPtr native__this, IntPtr native_future);
    [RegisterAttribute("setFuture", "(Lcom/google/common/util/concurrent/ListenableFuture;)Z", "GetSetFuture_Lcom_google_common_util_concurrent_ListenableFuture_Handler")]
protected virtual bool SetFuture(IListenableFuture future);
    [RegisterAttribute("wasInterrupted", "()Z", "")]
protected bool WasInterrupted();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/concurrent/futures/AbstractResolvableFuture")]
internal class AndroidX.Concurrent.Futures.AbstractResolvableFutureInvoker : AbstractResolvableFuture {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AbstractResolvableFutureInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AbstractResolvableFutureInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/concurrent/futures/CallbackToFutureAdapter")]
public class AndroidX.Concurrent.Futures.CallbackToFutureAdapter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CallbackToFutureAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static CallbackToFutureAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getFuture", "(Landroidx/concurrent/futures/CallbackToFutureAdapter$Resolver;)Lcom/google/common/util/concurrent/ListenableFuture;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IListenableFuture GetFuture(IResolver callback);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/concurrent/futures/DirectExecutor")]
public class AndroidX.Concurrent.Futures.DirectExecutor : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("INSTANCE")]
public static DirectExecutor Instance { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DirectExecutor(IntPtr javaReference, JniHandleOwnership transfer);
    private static DirectExecutor();
    [NullableContextAttribute("2")]
public static DirectExecutor get_Instance();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("execute", "(Ljava/lang/Runnable;)V", "")]
public sealed virtual void Execute(IRunnable command);
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Landroidx/concurrent/futures/DirectExecutor;", "")]
public static DirectExecutor ValueOf(string name);
    [RegisterAttribute("values", "()[Landroidx/concurrent/futures/DirectExecutor;", "")]
public static DirectExecutor[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/concurrent/futures/ResolvableFuture")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class AndroidX.Concurrent.Futures.ResolvableFuture : AbstractResolvableFuture {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ResolvableFuture(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResolvableFuture();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "()Landroidx/concurrent/futures/ResolvableFuture;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ResolvableFuture Create();
    [NullableContextAttribute("2")]
[RegisterAttribute("set", "(Ljava/lang/Object;)Z", "")]
public bool Set(Object value);
    [RegisterAttribute("setException", "(Ljava/lang/Throwable;)Z", "")]
public bool SetException(Throwable throwable);
    [RegisterAttribute("setFuture", "(Lcom/google/common/util/concurrent/ListenableFuture;)Z", "")]
public bool SetFuture(IListenableFuture future);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_concurrent_futures_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_concurrent_futures_package(string klass);
}
