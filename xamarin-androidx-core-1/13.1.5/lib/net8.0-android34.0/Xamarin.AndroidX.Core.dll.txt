internal class _JniMarshal_PP_C : MulticastDelegate {
    public _JniMarshal_PP_C(object object, IntPtr method);
    public virtual char Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual char EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_F : MulticastDelegate {
    public _JniMarshal_PP_F(object object, IntPtr method);
    public virtual float Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual float EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPC_L : MulticastDelegate {
    public _JniMarshal_PPC_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, char p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, char p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPCC_L : MulticastDelegate {
    public _JniMarshal_PPCC_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, char p0, char p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, char p0, char p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPCCII_L : MulticastDelegate {
    public _JniMarshal_PPCCII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, char p0, char p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, char p0, char p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPCI_L : MulticastDelegate {
    public _JniMarshal_PPCI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, char p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, char p0, int p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_V : MulticastDelegate {
    public _JniMarshal_PPF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_Z : MulticastDelegate {
    public _JniMarshal_PPF_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFF_L : MulticastDelegate {
    public _JniMarshal_PPFF_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFF_Z : MulticastDelegate {
    public _JniMarshal_PPFF_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFFZ_Z : MulticastDelegate {
    public _JniMarshal_PPFFZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, bool p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_C : MulticastDelegate {
    public _JniMarshal_PPI_C(object object, IntPtr method);
    public virtual char Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual char EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_F : MulticastDelegate {
    public _JniMarshal_PPI_F(object object, IntPtr method);
    public virtual float Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual float EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_I : MulticastDelegate {
    public _JniMarshal_PPI_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_L : MulticastDelegate {
    public _JniMarshal_PPI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_Z : MulticastDelegate {
    public _JniMarshal_PPI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_L : MulticastDelegate {
    public _JniMarshal_PPII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_Z : MulticastDelegate {
    public _JniMarshal_PPII_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIII_L : MulticastDelegate {
    public _JniMarshal_PPIII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIII_L : MulticastDelegate {
    public _JniMarshal_PPIIII_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIII_V : MulticastDelegate {
    public _JniMarshal_PPIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIIII_V : MulticastDelegate {
    public _JniMarshal_PPIIIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, int p4, int p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, int p4, int p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIIL_Z : MulticastDelegate {
    public _JniMarshal_PPIIIIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIILI_Z : MulticastDelegate {
    public _JniMarshal_PPIIIILI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4, int p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4, int p5, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIILIL_V : MulticastDelegate {
    public _JniMarshal_PPIIIILIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4, int p5, IntPtr p6);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, IntPtr p4, int p5, IntPtr p6, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIL_L : MulticastDelegate {
    public _JniMarshal_PPIIIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIILLLIL_I : MulticastDelegate {
    public _JniMarshal_PPIIILLLIL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, IntPtr p3, IntPtr p4, IntPtr p5, int p6, IntPtr p7);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, IntPtr p3, IntPtr p4, IntPtr p5, int p6, IntPtr p7, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIL_I : MulticastDelegate {
    public _JniMarshal_PPIIL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIL_L : MulticastDelegate {
    public _JniMarshal_PPIIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIL_Z : MulticastDelegate {
    public _JniMarshal_PPIIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIILL_Z : MulticastDelegate {
    public _JniMarshal_PPIILL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIILLI_Z : MulticastDelegate {
    public _JniMarshal_PPIILLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, IntPtr p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, IntPtr p3, int p4, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIZ_L : MulticastDelegate {
    public _JniMarshal_PPIIZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, bool p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIL_V : MulticastDelegate {
    public _JniMarshal_PPIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIL_Z : MulticastDelegate {
    public _JniMarshal_PPIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILI_Z : MulticastDelegate {
    public _JniMarshal_PPILI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILL_L : MulticastDelegate {
    public _JniMarshal_PPILL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILL_V : MulticastDelegate {
    public _JniMarshal_PPILL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILLI_Z : MulticastDelegate {
    public _JniMarshal_PPILLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, int p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILLL_V : MulticastDelegate {
    public _JniMarshal_PPILLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIZ_V : MulticastDelegate {
    public _JniMarshal_PPIZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, bool p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIZZ_V : MulticastDelegate {
    public _JniMarshal_PPIZZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, bool p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, bool p1, bool p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_L : MulticastDelegate {
    public _JniMarshal_PPJ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_V : MulticastDelegate {
    public _JniMarshal_PPJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_I : MulticastDelegate {
    public _JniMarshal_PPL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLFF_Z : MulticastDelegate {
    public _JniMarshal_PPLFF_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLFFZ_Z : MulticastDelegate {
    public _JniMarshal_PPLFFZ_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2, bool p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, float p2, bool p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_L : MulticastDelegate {
    public _JniMarshal_PPLI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_V : MulticastDelegate {
    public _JniMarshal_PPLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_Z : MulticastDelegate {
    public _JniMarshal_PPLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLII_V : MulticastDelegate {
    public _JniMarshal_PPLII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLII_Z : MulticastDelegate {
    public _JniMarshal_PPLII_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIII_V : MulticastDelegate {
    public _JniMarshal_PPLIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIII_V : MulticastDelegate {
    public _JniMarshal_PPLIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIIII_V : MulticastDelegate {
    public _JniMarshal_PPLIIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4, int p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4, int p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIIIIL_V : MulticastDelegate {
    public _JniMarshal_PPLIIIIIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4, int p5, IntPtr p6);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, int p3, int p4, int p5, IntPtr p6, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIL_V : MulticastDelegate {
    public _JniMarshal_PPLIIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIIL_Z : MulticastDelegate {
    public _JniMarshal_PPLIIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIILI_V : MulticastDelegate {
    public _JniMarshal_PPLIILI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, IntPtr p3, int p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIL_V : MulticastDelegate {
    public _JniMarshal_PPLIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIL_Z : MulticastDelegate {
    public _JniMarshal_PPLIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLILL_V : MulticastDelegate {
    public _JniMarshal_PPLILL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLILLL_V : MulticastDelegate {
    public _JniMarshal_PPLILLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3, IntPtr p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, IntPtr p3, IntPtr p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLJ_L : MulticastDelegate {
    public _JniMarshal_PPLJ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLJL_L : MulticastDelegate {
    public _JniMarshal_PPLJL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLF_V : MulticastDelegate {
    public _JniMarshal_PPLLF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, float p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, float p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLI_V : MulticastDelegate {
    public _JniMarshal_PPLLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLI_Z : MulticastDelegate {
    public _JniMarshal_PPLLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLII_V : MulticastDelegate {
    public _JniMarshal_PPLLII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLII_Z : MulticastDelegate {
    public _JniMarshal_PPLLII_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, int p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_I : MulticastDelegate {
    public _JniMarshal_PPLLL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_Z : MulticastDelegate {
    public _JniMarshal_PPLLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_I : MulticastDelegate {
    public _JniMarshal_PPLLLL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLZ_L : MulticastDelegate {
    public _JniMarshal_PPLZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLZ_V : MulticastDelegate {
    public _JniMarshal_PPLZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_L : MulticastDelegate {
    public _JniMarshal_PPZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZIZ_L : MulticastDelegate {
    public _JniMarshal_PPZIZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, bool p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, bool p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZZ_V : MulticastDelegate {
    public _JniMarshal_PPZZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, bool p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel", "", "Android.Support.V4.App.INotificationSideChannelInvoker")]
public interface Android.Support.V4.App.INotificationSideChannel {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static INotificationSideChannel();
    public static string get_Descriptor();
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void Cancel(string packageName, int id, string tag);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void CancelAll(string packageName);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler:Android.Support.V4.App.INotificationSideChannelInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel")]
internal class Android.Support.V4.App.INotificationSideChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    private IntPtr id_cancel_Ljava_lang_String_ILjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_cancelAll_Ljava_lang_String_;
    private IntPtr id_cancelAll_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    private IntPtr id_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public INotificationSideChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INotificationSideChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INotificationSideChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(string packageName, int id, string tag);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [NullableContextAttribute("2")]
public sealed virtual void CancelAll(string packageName);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag, IntPtr native_notification);
    [NullableContextAttribute("2")]
public sealed virtual void Notify(string packageName, int id, string tag, Notification notification);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IBinder AsBinder();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel")]
public abstract class Android.Support.V4.App.NotificationSideChannel : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static NotificationSideChannel();
    public static string get_Descriptor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$_Parcel")]
public class Android.Support.V4.App.NotificationSideChannel_Parcel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationSideChannel_Parcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationSideChannel_Parcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/app/INotificationSideChannel")]
[ObsoleteAttribute("Use the 'NotificationSideChannel' type. This type will be removed in a future release.", "True")]
public abstract class Android.Support.V4.App.NotificationSideChannelConsts : NotificationSideChannel {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$Default")]
public class Android.Support.V4.App.NotificationSideChannelDefault : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_cancelAll_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationSideChannelDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationSideChannelDefault();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public virtual void Cancel(string packageName, int id, string tag);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public virtual void CancelAll(string packageName);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag, IntPtr native_notification);
    [NullableContextAttribute("2")]
[RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$Stub")]
public abstract class Android.Support.V4.App.NotificationSideChannelStub : Binder {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_asBinder;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    private static Delegate cb_cancelAll_Ljava_lang_String_;
    private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationSideChannelStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationSideChannelStub();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/app/INotificationSideChannel;", "")]
public static INotificationSideChannel AsInterface(IBinder obj);
    [NullableContextAttribute("1")]
private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    [NullableContextAttribute("1")]
private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag);
    [RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public abstract virtual void Cancel(string packageName, int id, string tag);
    [NullableContextAttribute("1")]
private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public abstract virtual void CancelAll(string packageName);
    [NullableContextAttribute("1")]
private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag, IntPtr native_notification);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public abstract virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/app/INotificationSideChannel$Stub")]
internal class Android.Support.V4.App.NotificationSideChannelStubInvoker : NotificationSideChannelStub {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public NotificationSideChannelStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static NotificationSideChannelStubInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public virtual void Cancel(string packageName, int id, string tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public virtual void CancelAll(string packageName);
    [NullableContextAttribute("2")]
[RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/app/RemoteActionCompatParcelizer")]
public class Android.Support.V4.App.RemoteActionCompatParcelizer : RemoteActionCompatParcelizer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RemoteActionCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static RemoteActionCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/core/app/RemoteActionCompat;", "")]
public static RemoteActionCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/core/app/RemoteActionCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(RemoteActionCompat obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/graphics/drawable/IconCompatParcelizer")]
public class Android.Support.V4.Graphics.Drawable.IconCompatParcelizer : IconCompatParcelizer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal IconCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static IconCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/core/graphics/drawable/IconCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(IconCompat obj, VersionedParcel parcel);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/os/IResultReceiver", "", "Android.Support.V4.OS.IResultReceiverInvoker")]
public interface Android.Support.V4.OS.IResultReceiver {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static IResultReceiver();
    [NullableContextAttribute("2")]
public static string get_Descriptor();
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler:Android.Support.V4.OS.IResultReceiverInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void Send(int resultCode, Bundle resultData);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2", "", "Android.Support.V4.OS.IResultReceiver2Invoker")]
public interface Android.Support.V4.OS.IResultReceiver2 {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static IResultReceiver2();
    [NullableContextAttribute("2")]
public static string get_Descriptor();
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler:Android.Support.V4.OS.IResultReceiver2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void Send(int p0, Bundle p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2")]
internal class Android.Support.V4.OS.IResultReceiver2Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    private IntPtr id_send_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IResultReceiver2Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResultReceiver2Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResultReceiver2 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual void Send(int p0, Bundle p1);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IBinder AsBinder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver")]
internal class Android.Support.V4.OS.IResultReceiverInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    private IntPtr id_send_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IResultReceiverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IResultReceiverInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IResultReceiver GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
public sealed virtual void Send(int resultCode, Bundle resultData);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IBinder AsBinder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/os/ResultReceiver")]
public class Android.Support.V4.OS.ResultReceiver : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_describeContents;
    [NullableAttribute("2")]
private static Delegate cb_onReceiveResult_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    [NullableAttribute("2")]
[RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/os/Handler;)V", "")]
public ResultReceiver(Handler handler);
    private static ResultReceiver();
    [NullableContextAttribute("2")]
public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetOnReceiveResult_ILandroid_os_Bundle_Handler();
    private static void n_OnReceiveResult_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
[RegisterAttribute("onReceiveResult", "(ILandroid/os/Bundle;)V", "GetOnReceiveResult_ILandroid_os_Bundle_Handler")]
protected virtual void OnReceiveResult(int resultCode, Bundle resultData);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int resultCode, Bundle resultData);
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native__out, int native_flags);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel out, ParcelableWriteFlags flags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver$_Parcel")]
public class Android.Support.V4.OS.ResultReceiver_Parcel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiver_Parcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiver_Parcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2")]
public abstract class Android.Support.V4.OS.ResultReceiver2 : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static ResultReceiver2();
    public static string get_Descriptor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2$_Parcel")]
public class Android.Support.V4.OS.ResultReceiver2_Parcel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiver2_Parcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiver2_Parcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/os/IResultReceiver2")]
[ObsoleteAttribute("Use the 'ResultReceiver2' type. This type will be removed in a future release.", "True")]
public abstract class Android.Support.V4.OS.ResultReceiver2Consts : ResultReceiver2 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2$Default")]
public class Android.Support.V4.OS.ResultReceiver2Default : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiver2Default(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiver2Default();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int resultCode, Bundle resultData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2$Stub")]
public abstract class Android.Support.V4.OS.ResultReceiver2Stub : Binder {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiver2Stub(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiver2Stub();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("2")]
[RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/os/IResultReceiver2;", "")]
public static IResultReceiver2 AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int p0, IntPtr native_p1);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public abstract virtual void Send(int p0, Bundle p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver2$Stub")]
internal class Android.Support.V4.OS.ResultReceiver2StubInvoker : ResultReceiver2Stub {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ResultReceiver2StubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ResultReceiver2StubInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int p0, Bundle p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver$Default")]
public class Android.Support.V4.OS.ResultReceiverDefault : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiverDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiverDefault();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int resultCode, Bundle resultData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver$Stub")]
public abstract class Android.Support.V4.OS.ResultReceiverStub : Binder {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    [NullableAttribute("2")]
private static Delegate cb_send_ILandroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ResultReceiverStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResultReceiverStub();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("2")]
[RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/os/IResultReceiver;", "")]
public static IResultReceiver AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetSend_ILandroid_os_Bundle_Handler();
    private static void n_Send_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int resultCode, IntPtr native_resultData);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public abstract virtual void Send(int resultCode, Bundle resultData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/os/IResultReceiver$Stub")]
internal class Android.Support.V4.OS.ResultReceiverStubInvoker : ResultReceiverStub {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ResultReceiverStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ResultReceiverStubInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(ILandroid/os/Bundle;)V", "GetSend_ILandroid_os_Bundle_Handler")]
public virtual void Send(int resultCode, Bundle resultData);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/accessibilityservice/AccessibilityServiceInfoCompat")]
public class AndroidX.Core.AccessibilityService.AccessibilityServiceInfoCompat : Object {
    [RegisterAttribute("CAPABILITY_CAN_FILTER_KEY_EVENTS")]
public static int CapabilityCanFilterKeyEvents;
    [RegisterAttribute("CAPABILITY_CAN_REQUEST_ENHANCED_WEB_ACCESSIBILITY")]
public static int CapabilityCanRequestEnhancedWebAccessibility;
    [RegisterAttribute("CAPABILITY_CAN_REQUEST_TOUCH_EXPLORATION")]
public static int CapabilityCanRequestTouchExploration;
    [RegisterAttribute("CAPABILITY_CAN_RETRIEVE_WINDOW_CONTENT")]
public static int CapabilityCanRetrieveWindowContent;
    [RegisterAttribute("FEEDBACK_ALL_MASK")]
public static int FeedbackAllMask;
    [RegisterAttribute("FEEDBACK_BRAILLE")]
public static int FeedbackBraille;
    [RegisterAttribute("FLAG_INCLUDE_NOT_IMPORTANT_VIEWS")]
public static int FlagIncludeNotImportantViews;
    [RegisterAttribute("FLAG_REPORT_VIEW_IDS")]
public static int FlagReportViewIds;
    [RegisterAttribute("FLAG_REQUEST_ENHANCED_WEB_ACCESSIBILITY")]
public static int FlagRequestEnhancedWebAccessibility;
    [RegisterAttribute("FLAG_REQUEST_FILTER_KEY_EVENTS")]
public static int FlagRequestFilterKeyEvents;
    [RegisterAttribute("FLAG_REQUEST_TOUCH_EXPLORATION_MODE")]
public static int FlagRequestTouchExplorationMode;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AccessibilityServiceInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityServiceInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("capabilityToString", "(I)Ljava/lang/String;", "")]
public static string CapabilityToString(int capability);
    [RegisterAttribute("feedbackTypeToString", "(I)Ljava/lang/String;", "")]
public static string FeedbackTypeToString(int feedbackType);
    [NullableContextAttribute("2")]
[RegisterAttribute("flagToString", "(I)Ljava/lang/String;", "")]
public static string FlagToString(int flag);
    [RegisterAttribute("getCapabilities", "(Landroid/accessibilityservice/AccessibilityServiceInfo;)I", "")]
public static int GetCapabilities(AccessibilityServiceInfo info);
    [RegisterAttribute("loadDescription", "(Landroid/accessibilityservice/AccessibilityServiceInfo;Landroid/content/pm/PackageManager;)Ljava/lang/String;", "")]
public static string LoadDescription(AccessibilityServiceInfo info, PackageManager packageManager);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/ActivityCompat")]
public class AndroidX.Core.App.ActivityCompat : ContextCompat {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public static IPermissionCompatDelegate PermissionCompatDelegate { get; public set; }
    protected ActivityCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getPermissionCompatDelegate", "()Landroidx/core/app/ActivityCompat$PermissionCompatDelegate;", "")]
public static IPermissionCompatDelegate get_PermissionCompatDelegate();
    [NullableContextAttribute("2")]
[RegisterAttribute("setPermissionCompatDelegate", "(Landroidx/core/app/ActivityCompat$PermissionCompatDelegate;)V", "")]
public static void set_PermissionCompatDelegate(IPermissionCompatDelegate value);
    [RegisterAttribute("finishAffinity", "(Landroid/app/Activity;)V", "")]
public static void FinishAffinity(Activity activity);
    [RegisterAttribute("finishAfterTransition", "(Landroid/app/Activity;)V", "")]
public static void FinishAfterTransition(Activity activity);
    [RegisterAttribute("getReferrer", "(Landroid/app/Activity;)Landroid/net/Uri;", "")]
public static Uri GetReferrer(Activity activity);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("invalidateOptionsMenu", "(Landroid/app/Activity;)Z", "")]
public static bool InvalidateOptionsMenu(Activity activity);
    [RegisterAttribute("isLaunchedFromBubble", "(Landroid/app/Activity;)Z", "")]
public static bool IsLaunchedFromBubble(Activity activity);
    [RegisterAttribute("postponeEnterTransition", "(Landroid/app/Activity;)V", "")]
public static void PostponeEnterTransition(Activity activity);
    [RegisterAttribute("recreate", "(Landroid/app/Activity;)V", "")]
public static void Recreate(Activity activity);
    [RegisterAttribute("requestDragAndDropPermissions", "(Landroid/app/Activity;Landroid/view/DragEvent;)Landroidx/core/view/DragAndDropPermissionsCompat;", "")]
public static DragAndDropPermissionsCompat RequestDragAndDropPermissions(Activity activity, DragEvent dragEvent);
    [RegisterAttribute("requestPermissions", "(Landroid/app/Activity;[Ljava/lang/String;I)V", "")]
public static void RequestPermissions(Activity activity, String[] permissions, int requestCode);
    [RegisterAttribute("requireViewById", "(Landroid/app/Activity;I)Landroid/view/View;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RequireViewById(Activity activity, int id);
    [RegisterAttribute("setEnterSharedElementCallback", "(Landroid/app/Activity;Landroidx/core/app/SharedElementCallback;)V", "")]
public static void SetEnterSharedElementCallback(Activity activity, SharedElementCallback callback);
    [RegisterAttribute("setExitSharedElementCallback", "(Landroid/app/Activity;Landroidx/core/app/SharedElementCallback;)V", "")]
public static void SetExitSharedElementCallback(Activity activity, SharedElementCallback callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("setLocusContext", "(Landroid/app/Activity;Landroidx/core/content/LocusIdCompat;Landroid/os/Bundle;)V", "")]
public static void SetLocusContext(Activity activity, LocusIdCompat locusId, Bundle bundle);
    [RegisterAttribute("shouldShowRequestPermissionRationale", "(Landroid/app/Activity;Ljava/lang/String;)Z", "")]
public static bool ShouldShowRequestPermissionRationale(Activity activity, string permission);
    [RegisterAttribute("startActivityForResult", "(Landroid/app/Activity;Landroid/content/Intent;ILandroid/os/Bundle;)V", "")]
public static void StartActivityForResult(Activity activity, Intent intent, int requestCode, Bundle options);
    [RegisterAttribute("startIntentSenderForResult", "(Landroid/app/Activity;Landroid/content/IntentSender;ILandroid/content/Intent;IIILandroid/os/Bundle;)V", "")]
public static void StartIntentSenderForResult(Activity activity, IntentSender intent, int requestCode, Intent fillInIntent, int flagsMask, int flagsValues, int extraFlags, Bundle options);
    [RegisterAttribute("startPostponedEnterTransition", "(Landroid/app/Activity;)V", "")]
public static void StartPostponedEnterTransition(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/ActivityManagerCompat")]
public class AndroidX.Core.App.ActivityManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ActivityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isLowRamDevice", "(Landroid/app/ActivityManager;)Z", "")]
public static bool IsLowRamDevice(ActivityManager activityManager);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/ActivityOptionsCompat")]
public class AndroidX.Core.App.ActivityOptionsCompat : Object {
    [RegisterAttribute("EXTRA_USAGE_TIME_REPORT")]
public static string ExtraUsageTimeReport;
    [RegisterAttribute("EXTRA_USAGE_TIME_REPORT_PACKAGES")]
public static string ExtraUsageTimeReportPackages;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getLaunchBounds;
    [NullableAttribute("2")]
private static Delegate cb_requestUsageTimeReport_Landroid_app_PendingIntent_;
    [NullableAttribute("2")]
private static Delegate cb_setLaunchBounds_Landroid_graphics_Rect_;
    [NullableAttribute("2")]
private static Delegate cb_setShareIdentityEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_toBundle;
    [NullableAttribute("2")]
private static Delegate cb_update_Landroidx_core_app_ActivityOptionsCompat_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Rect LaunchBounds { get; }
    protected ActivityOptionsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityOptionsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLaunchBoundsHandler();
    private static IntPtr n_GetLaunchBounds(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getLaunchBounds", "()Landroid/graphics/Rect;", "GetGetLaunchBoundsHandler")]
public virtual Rect get_LaunchBounds();
    [RegisterAttribute("makeBasic", "()Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeBasic();
    [RegisterAttribute("makeClipRevealAnimation", "(Landroid/view/View;IIII)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeClipRevealAnimation(View source, int startX, int startY, int width, int height);
    [RegisterAttribute("makeCustomAnimation", "(Landroid/content/Context;II)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeCustomAnimation(Context context, int enterResId, int exitResId);
    [RegisterAttribute("makeScaleUpAnimation", "(Landroid/view/View;IIII)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeScaleUpAnimation(View source, int startX, int startY, int startWidth, int startHeight);
    [RegisterAttribute("makeSceneTransitionAnimation", "(Landroid/app/Activity;Landroid/view/View;Ljava/lang/String;)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeSceneTransitionAnimation(Activity activity, View sharedElement, string sharedElementName);
    [RegisterAttribute("makeSceneTransitionAnimation", "(Landroid/app/Activity;[Landroidx/core/util/Pair;)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeSceneTransitionAnimation(Activity activity, Pair[] sharedElements);
    [RegisterAttribute("makeTaskLaunchBehind", "()Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeTaskLaunchBehind();
    [RegisterAttribute("makeThumbnailScaleUpAnimation", "(Landroid/view/View;Landroid/graphics/Bitmap;II)Landroidx/core/app/ActivityOptionsCompat;", "")]
public static ActivityOptionsCompat MakeThumbnailScaleUpAnimation(View source, Bitmap thumbnail, int startX, int startY);
    private static Delegate GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler();
    private static void n_RequestUsageTimeReport_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_receiver);
    [RegisterAttribute("requestUsageTimeReport", "(Landroid/app/PendingIntent;)V", "GetRequestUsageTimeReport_Landroid_app_PendingIntent_Handler")]
public virtual void RequestUsageTimeReport(PendingIntent receiver);
    private static Delegate GetSetLaunchBounds_Landroid_graphics_Rect_Handler();
    private static IntPtr n_SetLaunchBounds_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_screenSpacePixelRect);
    [RegisterAttribute("setLaunchBounds", "(Landroid/graphics/Rect;)Landroidx/core/app/ActivityOptionsCompat;", "GetSetLaunchBounds_Landroid_graphics_Rect_Handler")]
public virtual ActivityOptionsCompat SetLaunchBounds(Rect screenSpacePixelRect);
    private static Delegate GetSetShareIdentityEnabled_ZHandler();
    private static IntPtr n_SetShareIdentityEnabled_Z(IntPtr jnienv, IntPtr native__this, bool shareIdentity);
    [RegisterAttribute("setShareIdentityEnabled", "(Z)Landroidx/core/app/ActivityOptionsCompat;", "GetSetShareIdentityEnabled_ZHandler")]
public virtual ActivityOptionsCompat SetShareIdentityEnabled(bool shareIdentity);
    private static Delegate GetToBundleHandler();
    private static IntPtr n_ToBundle(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")]
public virtual Bundle ToBundle();
    private static Delegate GetUpdate_Landroidx_core_app_ActivityOptionsCompat_Handler();
    private static void n_Update_Landroidx_core_app_ActivityOptionsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_otherOptions);
    [RegisterAttribute("update", "(Landroidx/core/app/ActivityOptionsCompat;)V", "GetUpdate_Landroidx_core_app_ActivityOptionsCompat_Handler")]
public virtual void Update(ActivityOptionsCompat otherOptions);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/AlarmManagerCompat")]
public class AndroidX.Core.App.AlarmManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AlarmManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AlarmManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("canScheduleExactAlarms", "(Landroid/app/AlarmManager;)Z", "")]
public static bool CanScheduleExactAlarms(AlarmManager alarmManager);
    [RegisterAttribute("setAlarmClock", "(Landroid/app/AlarmManager;JLandroid/app/PendingIntent;Landroid/app/PendingIntent;)V", "")]
public static void SetAlarmClock(AlarmManager alarmManager, long triggerTime, PendingIntent showIntent, PendingIntent operation);
    [RegisterAttribute("setAndAllowWhileIdle", "(Landroid/app/AlarmManager;IJLandroid/app/PendingIntent;)V", "")]
public static void SetAndAllowWhileIdle(AlarmManager alarmManager, int type, long triggerAtMillis, PendingIntent operation);
    [RegisterAttribute("setExact", "(Landroid/app/AlarmManager;IJLandroid/app/PendingIntent;)V", "")]
public static void SetExact(AlarmManager alarmManager, int type, long triggerAtMillis, PendingIntent operation);
    [RegisterAttribute("setExactAndAllowWhileIdle", "(Landroid/app/AlarmManager;IJLandroid/app/PendingIntent;)V", "")]
public static void SetExactAndAllowWhileIdle(AlarmManager alarmManager, int type, long triggerAtMillis, PendingIntent operation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/AppComponentFactory")]
public class AndroidX.Core.App.AppComponentFactory : AppComponentFactory {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_instantiateActivityCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_instantiateApplicationCompat_Ljava_lang_ClassLoader_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_instantiateProviderCompat_Ljava_lang_ClassLoader_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_instantiateReceiverCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_instantiateServiceCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AppComponentFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppComponentFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("instantiateActivity", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;", "")]
public sealed virtual Activity InstantiateActivity(ClassLoader cl, string className, Intent intent);
    private static Delegate GetInstantiateActivityCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler();
    private static IntPtr n_InstantiateActivityCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_cl, IntPtr native_className, IntPtr native_intent);
    [RegisterAttribute("instantiateActivityCompat", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Activity;", "GetInstantiateActivityCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler")]
public virtual Activity InstantiateActivityCompat(ClassLoader cl, string className, Intent intent);
    [RegisterAttribute("instantiateApplication", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/app/Application;", "")]
public sealed virtual Application InstantiateApplication(ClassLoader cl, string className);
    private static Delegate GetInstantiateApplicationCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Handler();
    private static IntPtr n_InstantiateApplicationCompat_Ljava_lang_ClassLoader_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_cl, IntPtr native_className);
    [RegisterAttribute("instantiateApplicationCompat", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/app/Application;", "GetInstantiateApplicationCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Handler")]
public virtual Application InstantiateApplicationCompat(ClassLoader cl, string className);
    [RegisterAttribute("instantiateProvider", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/content/ContentProvider;", "")]
public sealed virtual ContentProvider InstantiateProvider(ClassLoader cl, string className);
    private static Delegate GetInstantiateProviderCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Handler();
    private static IntPtr n_InstantiateProviderCompat_Ljava_lang_ClassLoader_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_cl, IntPtr native_className);
    [RegisterAttribute("instantiateProviderCompat", "(Ljava/lang/ClassLoader;Ljava/lang/String;)Landroid/content/ContentProvider;", "GetInstantiateProviderCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Handler")]
public virtual ContentProvider InstantiateProviderCompat(ClassLoader cl, string className);
    [RegisterAttribute("instantiateReceiver", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/content/BroadcastReceiver;", "")]
public sealed virtual BroadcastReceiver InstantiateReceiver(ClassLoader cl, string className, Intent intent);
    private static Delegate GetInstantiateReceiverCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler();
    private static IntPtr n_InstantiateReceiverCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_cl, IntPtr native_className, IntPtr native_intent);
    [RegisterAttribute("instantiateReceiverCompat", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/content/BroadcastReceiver;", "GetInstantiateReceiverCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler")]
public virtual BroadcastReceiver InstantiateReceiverCompat(ClassLoader cl, string className, Intent intent);
    [RegisterAttribute("instantiateService", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Service;", "")]
public sealed virtual Service InstantiateService(ClassLoader cl, string className, Intent intent);
    private static Delegate GetInstantiateServiceCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler();
    private static IntPtr n_InstantiateServiceCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_cl, IntPtr native_className, IntPtr native_intent);
    [RegisterAttribute("instantiateServiceCompat", "(Ljava/lang/ClassLoader;Ljava/lang/String;Landroid/content/Intent;)Landroid/app/Service;", "GetInstantiateServiceCompat_Ljava_lang_ClassLoader_Ljava_lang_String_Landroid_content_Intent_Handler")]
public virtual Service InstantiateServiceCompat(ClassLoader cl, string className, Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/AppLaunchChecker")]
public class AndroidX.Core.App.AppLaunchChecker : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AppLaunchChecker(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppLaunchChecker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasStartedFromLauncher", "(Landroid/content/Context;)Z", "")]
public static bool HasStartedFromLauncher(Context context);
    [RegisterAttribute("onActivityCreate", "(Landroid/app/Activity;)V", "")]
public static void OnActivityCreate(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/AppLocalesStorageHelper")]
public class AndroidX.Core.App.AppLocalesStorageHelper : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AppLocalesStorageHelper(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppLocalesStorageHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("persistLocales", "(Landroid/content/Context;Ljava/lang/String;)V", "")]
public static void PersistLocales(Context context, string locales);
    [RegisterAttribute("readLocales", "(Landroid/content/Context;)Ljava/lang/String;", "")]
public static string ReadLocales(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/AppOpsManagerCompat")]
public class AndroidX.Core.App.AppOpsManagerCompat : Object {
    [RegisterAttribute("MODE_ALLOWED")]
public static int ModeAllowed;
    [RegisterAttribute("MODE_DEFAULT")]
public static int ModeDefault;
    [RegisterAttribute("MODE_ERRORED")]
public static int ModeErrored;
    [RegisterAttribute("MODE_IGNORED")]
public static int ModeIgnored;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AppOpsManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppOpsManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkOrNoteProxyOp", "(Landroid/content/Context;ILjava/lang/String;Ljava/lang/String;)I", "")]
public static int CheckOrNoteProxyOp(Context context, int proxyUid, string op, string proxiedPackageName);
    [RegisterAttribute("noteOp", "(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)I", "")]
public static int NoteOp(Context context, string op, int uid, string packageName);
    [RegisterAttribute("noteOpNoThrow", "(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;)I", "")]
public static int NoteOpNoThrow(Context context, string op, int uid, string packageName);
    [RegisterAttribute("noteProxyOp", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I", "")]
public static int NoteProxyOp(Context context, string op, string proxiedPackageName);
    [RegisterAttribute("noteProxyOpNoThrow", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I", "")]
public static int NoteProxyOpNoThrow(Context context, string op, string proxiedPackageName);
    [RegisterAttribute("permissionToOp", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public static string PermissionToOp(string permission);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/app/BundleCompat")]
public class AndroidX.Core.App.BundleCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BundleCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BundleCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBinder", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/os/IBinder;", "")]
public static IBinder GetBinder(Bundle bundle, string key);
    [NullableContextAttribute("2")]
[RegisterAttribute("putBinder", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/os/IBinder;)V", "")]
public static void PutBinder(Bundle bundle, string key, IBinder binder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/ComponentActivity")]
public class AndroidX.Core.App.ComponentActivity : Activity {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getLifecycle;
    [NullableAttribute("2")]
private static Delegate cb_getExtraData_Ljava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_putExtraData_Landroidx_core_app_ComponentActivity_ExtraData_;
    [NullableAttribute("2")]
private static Delegate cb_superDispatchKeyEvent_Landroid_view_KeyEvent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Lifecycle Lifecycle { get; }
    protected ComponentActivity(IntPtr javaReference, JniHandleOwnership transfer);
    private static ComponentActivity();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetLifecycleHandler();
    private static IntPtr n_GetLifecycle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLifecycle", "()Landroidx/lifecycle/Lifecycle;", "GetGetLifecycleHandler")]
public virtual Lifecycle get_Lifecycle();
    [ObsoleteAttribute]
private static Delegate GetGetExtraData_Ljava_lang_Class_Handler();
    [ObsoleteAttribute]
private static IntPtr n_GetExtraData_Ljava_lang_Class_(IntPtr jnienv, IntPtr native__this, IntPtr native_extraDataClass);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getExtraData", "(Ljava/lang/Class;)Landroidx/core/app/ComponentActivity$ExtraData;", "GetGetExtraData_Ljava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object GetExtraData(Class extraDataClass);
    [ObsoleteAttribute]
private static Delegate GetPutExtraData_Landroidx_core_app_ComponentActivity_ExtraData_Handler();
    [ObsoleteAttribute]
private static void n_PutExtraData_Landroidx_core_app_ComponentActivity_ExtraData_(IntPtr jnienv, IntPtr native__this, IntPtr native_extraData);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("putExtraData", "(Landroidx/core/app/ComponentActivity$ExtraData;)V", "GetPutExtraData_Landroidx_core_app_ComponentActivity_ExtraData_Handler")]
public virtual void PutExtraData(ExtraData extraData);
    [RegisterAttribute("shouldDumpInternalState", "([Ljava/lang/String;)Z", "")]
protected bool ShouldDumpInternalState(String[] args);
    private static Delegate GetSuperDispatchKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_SuperDispatchKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("superDispatchKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetSuperDispatchKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool SuperDispatchKeyEvent(KeyEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/CoreComponentFactory")]
public class AndroidX.Core.App.CoreComponentFactory : AppComponentFactory {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CoreComponentFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoreComponentFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/DialogCompat")]
public class AndroidX.Core.App.DialogCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DialogCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DialogCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("requireViewById", "(Landroid/app/Dialog;I)Landroid/view/View;", "")]
public static View RequireViewById(Dialog dialog, int id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/FrameMetricsAggregator")]
public class AndroidX.Core.App.FrameMetricsAggregator : Object {
    [RegisterAttribute("ANIMATION_DURATION")]
public static int AnimationDuration;
    [RegisterAttribute("ANIMATION_INDEX")]
public static int AnimationIndex;
    [RegisterAttribute("COMMAND_DURATION")]
public static int CommandDuration;
    [RegisterAttribute("COMMAND_INDEX")]
public static int CommandIndex;
    [RegisterAttribute("DELAY_DURATION")]
public static int DelayDuration;
    [RegisterAttribute("DELAY_INDEX")]
public static int DelayIndex;
    [RegisterAttribute("DRAW_DURATION")]
public static int DrawDuration;
    [RegisterAttribute("DRAW_INDEX")]
public static int DrawIndex;
    [RegisterAttribute("EVERY_DURATION")]
public static int EveryDuration;
    [RegisterAttribute("INPUT_DURATION")]
public static int InputDuration;
    [RegisterAttribute("INPUT_INDEX")]
public static int InputIndex;
    [RegisterAttribute("LAYOUT_MEASURE_DURATION")]
public static int LayoutMeasureDuration;
    [RegisterAttribute("LAYOUT_MEASURE_INDEX")]
public static int LayoutMeasureIndex;
    [RegisterAttribute("SWAP_DURATION")]
public static int SwapDuration;
    [RegisterAttribute("SWAP_INDEX")]
public static int SwapIndex;
    [RegisterAttribute("SYNC_DURATION")]
public static int SyncDuration;
    [RegisterAttribute("SYNC_INDEX")]
public static int SyncIndex;
    [RegisterAttribute("TOTAL_DURATION")]
public static int TotalDuration;
    [RegisterAttribute("TOTAL_INDEX")]
public static int TotalIndex;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_add_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_getMetrics;
    [NullableAttribute("2")]
private static Delegate cb_remove_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_reset;
    [NullableAttribute("2")]
private static Delegate cb_stop;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FrameMetricsAggregator(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
public FrameMetricsAggregator(int metricTypeFlags);
    private static FrameMetricsAggregator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAdd_Landroid_app_Activity_Handler();
    private static void n_Add_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("add", "(Landroid/app/Activity;)V", "GetAdd_Landroid_app_Activity_Handler")]
public virtual void Add(Activity activity);
    private static Delegate GetGetMetricsHandler();
    private static IntPtr n_GetMetrics(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMetrics", "()[Landroid/util/SparseIntArray;", "GetGetMetricsHandler")]
public virtual SparseIntArray[] GetMetrics();
    private static Delegate GetRemove_Landroid_app_Activity_Handler();
    private static IntPtr n_Remove_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    [RegisterAttribute("remove", "(Landroid/app/Activity;)[Landroid/util/SparseIntArray;", "GetRemove_Landroid_app_Activity_Handler")]
public virtual SparseIntArray[] Remove(Activity activity);
    private static Delegate GetResetHandler();
    private static IntPtr n_Reset(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("reset", "()[Landroid/util/SparseIntArray;", "GetResetHandler")]
public virtual SparseIntArray[] Reset();
    private static Delegate GetStopHandler();
    private static IntPtr n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()[Landroid/util/SparseIntArray;", "GetStopHandler")]
public virtual SparseIntArray[] Stop();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/GrammaticalInflectionManagerCompat")]
public class AndroidX.Core.App.GrammaticalInflectionManagerCompat : Object {
    [RegisterAttribute("GRAMMATICAL_GENDER_FEMININE")]
public static int GrammaticalGenderFeminine;
    [RegisterAttribute("GRAMMATICAL_GENDER_MASCULINE")]
public static int GrammaticalGenderMasculine;
    [RegisterAttribute("GRAMMATICAL_GENDER_NEUTRAL")]
public static int GrammaticalGenderNeutral;
    [RegisterAttribute("GRAMMATICAL_GENDER_NOT_SPECIFIED")]
public static int GrammaticalGenderNotSpecified;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GrammaticalInflectionManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static GrammaticalInflectionManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getApplicationGrammaticalGender", "(Landroid/content/Context;)I", "")]
public static int GetApplicationGrammaticalGender(Context context);
    [RegisterAttribute("setRequestedApplicationGrammaticalGender", "(Landroid/content/Context;I)V", "")]
public static void SetRequestedApplicationGrammaticalGender(Context context, int grammaticalGender);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/NotificationBuilderWithBuilderAccessor", "", "AndroidX.Core.App.INotificationBuilderWithBuilderAccessorInvoker")]
public interface AndroidX.Core.App.INotificationBuilderWithBuilderAccessor {
    [NullableAttribute("2")]
public Builder Builder { get; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getBuilder", "()Landroid/app/Notification$Builder;", "GetGetBuilderHandler:AndroidX.Core.App.INotificationBuilderWithBuilderAccessorInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Builder get_Builder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationBuilderWithBuilderAccessor")]
internal class AndroidX.Core.App.INotificationBuilderWithBuilderAccessorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getBuilder;
    private IntPtr id_getBuilder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Builder Builder { get; }
    public INotificationBuilderWithBuilderAccessorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INotificationBuilderWithBuilderAccessorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INotificationBuilderWithBuilderAccessor GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetBuilderHandler();
    private static IntPtr n_GetBuilder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Builder get_Builder();
}
[RegisterAttribute("androidx/core/app/OnMultiWindowModeChangedProvider", "", "AndroidX.Core.App.IOnMultiWindowModeChangedProviderInvoker")]
public interface AndroidX.Core.App.IOnMultiWindowModeChangedProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnMultiWindowModeChangedListener", "(Landroidx/core/util/Consumer;)V", "GetAddOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnMultiWindowModeChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnMultiWindowModeChangedListener(IConsumer listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnMultiWindowModeChangedListener", "(Landroidx/core/util/Consumer;)V", "GetRemoveOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnMultiWindowModeChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnMultiWindowModeChangedListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/OnMultiWindowModeChangedProvider")]
internal class AndroidX.Core.App.IOnMultiWindowModeChangedProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_addOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_removeOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnMultiWindowModeChangedProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnMultiWindowModeChangedProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnMultiWindowModeChangedProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_AddOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnMultiWindowModeChangedListener(IConsumer listener);
    private static Delegate GetRemoveOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveOnMultiWindowModeChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnMultiWindowModeChangedListener(IConsumer listener);
}
[RegisterAttribute("androidx/core/app/OnNewIntentProvider", "", "AndroidX.Core.App.IOnNewIntentProviderInvoker")]
public interface AndroidX.Core.App.IOnNewIntentProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnNewIntentListener", "(Landroidx/core/util/Consumer;)V", "GetAddOnNewIntentListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnNewIntentProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnNewIntentListener(IConsumer listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnNewIntentListener", "(Landroidx/core/util/Consumer;)V", "GetRemoveOnNewIntentListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnNewIntentProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnNewIntentListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/OnNewIntentProvider")]
internal class AndroidX.Core.App.IOnNewIntentProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnNewIntentListener_Landroidx_core_util_Consumer_;
    private IntPtr id_addOnNewIntentListener_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnNewIntentListener_Landroidx_core_util_Consumer_;
    private IntPtr id_removeOnNewIntentListener_Landroidx_core_util_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnNewIntentProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnNewIntentProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnNewIntentProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnNewIntentListener_Landroidx_core_util_Consumer_Handler();
    private static void n_AddOnNewIntentListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnNewIntentListener(IConsumer listener);
    private static Delegate GetRemoveOnNewIntentListener_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveOnNewIntentListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnNewIntentListener(IConsumer listener);
}
[RegisterAttribute("androidx/core/app/OnPictureInPictureModeChangedProvider", "", "AndroidX.Core.App.IOnPictureInPictureModeChangedProviderInvoker")]
public interface AndroidX.Core.App.IOnPictureInPictureModeChangedProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnPictureInPictureModeChangedListener", "(Landroidx/core/util/Consumer;)V", "GetAddOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnPictureInPictureModeChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnPictureInPictureModeChangedListener(IConsumer listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnPictureInPictureModeChangedListener", "(Landroidx/core/util/Consumer;)V", "GetRemoveOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.App.IOnPictureInPictureModeChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnPictureInPictureModeChangedListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/OnPictureInPictureModeChangedProvider")]
internal class AndroidX.Core.App.IOnPictureInPictureModeChangedProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_addOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_removeOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnPictureInPictureModeChangedProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnPictureInPictureModeChangedProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnPictureInPictureModeChangedProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_AddOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnPictureInPictureModeChangedListener(IConsumer listener);
    private static Delegate GetRemoveOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveOnPictureInPictureModeChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnPictureInPictureModeChangedListener(IConsumer listener);
}
[RegisterAttribute("androidx/core/app/OnUserLeaveHintProvider", "", "AndroidX.Core.App.IOnUserLeaveHintProviderInvoker")]
public interface AndroidX.Core.App.IOnUserLeaveHintProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnUserLeaveHintListener", "(Ljava/lang/Runnable;)V", "GetAddOnUserLeaveHintListener_Ljava_lang_Runnable_Handler:AndroidX.Core.App.IOnUserLeaveHintProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnUserLeaveHintListener(IRunnable listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnUserLeaveHintListener", "(Ljava/lang/Runnable;)V", "GetRemoveOnUserLeaveHintListener_Ljava_lang_Runnable_Handler:AndroidX.Core.App.IOnUserLeaveHintProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnUserLeaveHintListener(IRunnable listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/OnUserLeaveHintProvider")]
internal class AndroidX.Core.App.IOnUserLeaveHintProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnUserLeaveHintListener_Ljava_lang_Runnable_;
    private IntPtr id_addOnUserLeaveHintListener_Ljava_lang_Runnable_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnUserLeaveHintListener_Ljava_lang_Runnable_;
    private IntPtr id_removeOnUserLeaveHintListener_Ljava_lang_Runnable_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnUserLeaveHintProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnUserLeaveHintProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnUserLeaveHintProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnUserLeaveHintListener_Ljava_lang_Runnable_Handler();
    private static void n_AddOnUserLeaveHintListener_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnUserLeaveHintListener(IRunnable listener);
    private static Delegate GetRemoveOnUserLeaveHintListener_Ljava_lang_Runnable_Handler();
    private static void n_RemoveOnUserLeaveHintListener_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnUserLeaveHintListener(IRunnable listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/app/JobIntentService")]
public abstract class AndroidX.Core.App.JobIntentService : Service {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isStopped;
    [NullableAttribute("2")]
private static Delegate cb_onBind_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_onHandleWork_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_onStopCurrentWork;
    [NullableAttribute("2")]
private static Delegate cb_setInterruptIfStopped_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsStopped { get; }
    protected JobIntentService(IntPtr javaReference, JniHandleOwnership transfer);
    private static JobIntentService();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsStoppedHandler();
    private static bool n_IsStopped(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isStopped", "()Z", "GetIsStoppedHandler")]
public virtual bool get_IsStopped();
    [RegisterAttribute("enqueueWork", "(Landroid/content/Context;Landroid/content/ComponentName;ILandroid/content/Intent;)V", "")]
public static void EnqueueWork(Context context, ComponentName component, int jobId, Intent work);
    [RegisterAttribute("enqueueWork", "(Landroid/content/Context;Ljava/lang/Class;ILandroid/content/Intent;)V", "")]
public static void EnqueueWork(Context context, Class cls, int jobId, Intent work);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
    private static Delegate GetOnHandleWork_Landroid_content_Intent_Handler();
    private static void n_OnHandleWork_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [RegisterAttribute("onHandleWork", "(Landroid/content/Intent;)V", "GetOnHandleWork_Landroid_content_Intent_Handler")]
protected abstract virtual void OnHandleWork(Intent intent);
    private static Delegate GetOnStopCurrentWorkHandler();
    private static bool n_OnStopCurrentWork(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStopCurrentWork", "()Z", "GetOnStopCurrentWorkHandler")]
public virtual bool OnStopCurrentWork();
    private static Delegate GetSetInterruptIfStopped_ZHandler();
    private static void n_SetInterruptIfStopped_Z(IntPtr jnienv, IntPtr native__this, bool interruptIfStopped);
    [RegisterAttribute("setInterruptIfStopped", "(Z)V", "GetSetInterruptIfStopped_ZHandler")]
public virtual void SetInterruptIfStopped(bool interruptIfStopped);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/JobIntentService")]
internal class AndroidX.Core.App.JobIntentServiceInvoker : JobIntentService {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public JobIntentServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static JobIntentServiceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onHandleWork", "(Landroid/content/Intent;)V", "GetOnHandleWork_Landroid_content_Intent_Handler")]
protected virtual void OnHandleWork(Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/LocaleManagerCompat")]
public class AndroidX.Core.App.LocaleManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LocaleManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocaleManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getApplicationLocales", "(Landroid/content/Context;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat GetApplicationLocales(Context context);
    [RegisterAttribute("getSystemLocales", "(Landroid/content/Context;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat GetSystemLocales(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/MultiWindowModeChangedInfo")]
public class AndroidX.Core.App.MultiWindowModeChangedInfo : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsInMultiWindowMode { get; }
    public Configuration NewConfig { get; }
    internal MultiWindowModeChangedInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Z)V", "")]
public MultiWindowModeChangedInfo(bool isInMultiWindowMode);
    [RegisterAttribute(".ctor", "(ZLandroid/content/res/Configuration;)V", "")]
public MultiWindowModeChangedInfo(bool isInMultiWindowMode, Configuration newConfig);
    private static MultiWindowModeChangedInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isInMultiWindowMode", "()Z", "")]
public bool get_IsInMultiWindowMode();
    [RegisterAttribute("getNewConfig", "()Landroid/content/res/Configuration;", "")]
public Configuration get_NewConfig();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NavUtils")]
public class AndroidX.Core.App.NavUtils : Object {
    [RegisterAttribute("PARENT_ACTIVITY")]
public static string ParentActivity;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal NavUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static NavUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getParentActivityIntent", "(Landroid/app/Activity;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Activity sourceActivity);
    [RegisterAttribute("getParentActivityIntent", "(Landroid/content/Context;Landroid/content/ComponentName;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Context context, ComponentName componentName);
    [RegisterAttribute("getParentActivityIntent", "(Landroid/content/Context;Ljava/lang/Class;)Landroid/content/Intent;", "")]
public static Intent GetParentActivityIntent(Context context, Class sourceActivityClass);
    [RegisterAttribute("getParentActivityName", "(Landroid/app/Activity;)Ljava/lang/String;", "")]
public static string GetParentActivityName(Activity sourceActivity);
    [RegisterAttribute("getParentActivityName", "(Landroid/content/Context;Landroid/content/ComponentName;)Ljava/lang/String;", "")]
public static string GetParentActivityName(Context context, ComponentName componentName);
    [RegisterAttribute("navigateUpFromSameTask", "(Landroid/app/Activity;)V", "")]
public static void NavigateUpFromSameTask(Activity sourceActivity);
    [RegisterAttribute("navigateUpTo", "(Landroid/app/Activity;Landroid/content/Intent;)V", "")]
public static void NavigateUpTo(Activity sourceActivity, Intent upIntent);
    [RegisterAttribute("shouldUpRecreateTask", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "")]
public static bool ShouldUpRecreateTask(Activity sourceActivity, Intent targetIntent);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationChannelCompat")]
public class AndroidX.Core.App.NotificationChannelCompat : Object {
    [NullableAttribute("1")]
[RegisterAttribute("DEFAULT_CHANNEL_ID")]
public static string DefaultChannelId;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getAudioAttributes;
    private static Delegate cb_getConversationId;
    private static Delegate cb_getDescription;
    private static Delegate cb_getGroup;
    private static Delegate cb_getId;
    private static Delegate cb_getImportance;
    private static Delegate cb_isImportantConversation;
    private static Delegate cb_getLightColor;
    private static Delegate cb_getLockscreenVisibility;
    private static Delegate cb_getName;
    private static Delegate cb_getParentChannelId;
    private static Delegate cb_getSound;
    private static Delegate cb_canBubble;
    private static Delegate cb_canBypassDnd;
    private static Delegate cb_canShowBadge;
    private static Delegate cb_getVibrationPattern;
    private static Delegate cb_shouldShowLights;
    private static Delegate cb_shouldVibrate;
    private static Delegate cb_toBuilder;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AudioAttributes AudioAttributes { get; }
    public string ConversationId { get; }
    public string Description { get; }
    public string Group { get; }
    [NullableAttribute("1")]
public string Id { get; }
    public int Importance { get; }
    public bool IsImportantConversation { get; }
    public int LightColor { get; }
    public int LockscreenVisibility { get; }
    public ICharSequence NameFormatted { get; }
    public string Name { get; }
    public string ParentChannelId { get; }
    public Uri Sound { get; }
    protected NotificationChannelCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationChannelCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetAudioAttributesHandler();
    private static IntPtr n_GetAudioAttributes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAudioAttributes", "()Landroid/media/AudioAttributes;", "GetGetAudioAttributesHandler")]
public virtual AudioAttributes get_AudioAttributes();
    [NullableContextAttribute("1")]
private static Delegate GetGetConversationIdHandler();
    private static IntPtr n_GetConversationId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getConversationId", "()Ljava/lang/String;", "GetGetConversationIdHandler")]
public virtual string get_ConversationId();
    [NullableContextAttribute("1")]
private static Delegate GetGetDescriptionHandler();
    private static IntPtr n_GetDescription(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDescription", "()Ljava/lang/String;", "GetGetDescriptionHandler")]
public virtual string get_Description();
    [NullableContextAttribute("1")]
private static Delegate GetGetGroupHandler();
    private static IntPtr n_GetGroup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGroup", "()Ljava/lang/String;", "GetGetGroupHandler")]
public virtual string get_Group();
    [NullableContextAttribute("1")]
private static Delegate GetGetIdHandler();
    private static IntPtr n_GetId(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getId", "()Ljava/lang/String;", "GetGetIdHandler")]
public virtual string get_Id();
    [NullableContextAttribute("1")]
private static Delegate GetGetImportanceHandler();
    private static int n_GetImportance(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImportance", "()I", "GetGetImportanceHandler")]
public virtual int get_Importance();
    [NullableContextAttribute("1")]
private static Delegate GetIsImportantConversationHandler();
    private static bool n_IsImportantConversation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isImportantConversation", "()Z", "GetIsImportantConversationHandler")]
public virtual bool get_IsImportantConversation();
    [NullableContextAttribute("1")]
private static Delegate GetGetLightColorHandler();
    private static int n_GetLightColor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLightColor", "()I", "GetGetLightColorHandler")]
public virtual int get_LightColor();
    [NullableContextAttribute("1")]
private static Delegate GetGetLockscreenVisibilityHandler();
    private static int n_GetLockscreenVisibility(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLockscreenVisibility", "()I", "GetGetLockscreenVisibilityHandler")]
public virtual int get_LockscreenVisibility();
    [NullableContextAttribute("1")]
private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getName", "()Ljava/lang/CharSequence;", "GetGetNameHandler")]
public virtual ICharSequence get_NameFormatted();
    public string get_Name();
    [NullableContextAttribute("1")]
private static Delegate GetGetParentChannelIdHandler();
    private static IntPtr n_GetParentChannelId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParentChannelId", "()Ljava/lang/String;", "GetGetParentChannelIdHandler")]
public virtual string get_ParentChannelId();
    [NullableContextAttribute("1")]
private static Delegate GetGetSoundHandler();
    private static IntPtr n_GetSound(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSound", "()Landroid/net/Uri;", "GetGetSoundHandler")]
public virtual Uri get_Sound();
    [NullableContextAttribute("1")]
private static Delegate GetCanBubbleHandler();
    private static bool n_CanBubble(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canBubble", "()Z", "GetCanBubbleHandler")]
public virtual bool CanBubble();
    [NullableContextAttribute("1")]
private static Delegate GetCanBypassDndHandler();
    private static bool n_CanBypassDnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canBypassDnd", "()Z", "GetCanBypassDndHandler")]
public virtual bool CanBypassDnd();
    [NullableContextAttribute("1")]
private static Delegate GetCanShowBadgeHandler();
    private static bool n_CanShowBadge(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canShowBadge", "()Z", "GetCanShowBadgeHandler")]
public virtual bool CanShowBadge();
    [NullableContextAttribute("1")]
private static Delegate GetGetVibrationPatternHandler();
    private static IntPtr n_GetVibrationPattern(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVibrationPattern", "()[J", "GetGetVibrationPatternHandler")]
public virtual Int64[] GetVibrationPattern();
    [NullableContextAttribute("1")]
private static Delegate GetShouldShowLightsHandler();
    private static bool n_ShouldShowLights(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("shouldShowLights", "()Z", "GetShouldShowLightsHandler")]
public virtual bool ShouldShowLights();
    [NullableContextAttribute("1")]
private static Delegate GetShouldVibrateHandler();
    private static bool n_ShouldVibrate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("shouldVibrate", "()Z", "GetShouldVibrateHandler")]
public virtual bool ShouldVibrate();
    [NullableContextAttribute("1")]
private static Delegate GetToBuilderHandler();
    private static IntPtr n_ToBuilder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("toBuilder", "()Landroidx/core/app/NotificationChannelCompat$Builder;", "GetToBuilderHandler")]
public virtual Builder ToBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationChannelGroupCompat")]
public class AndroidX.Core.App.NotificationChannelGroupCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getChannels;
    [NullableAttribute("2")]
private static Delegate cb_getDescription;
    [NullableAttribute("2")]
private static Delegate cb_getId;
    [NullableAttribute("2")]
private static Delegate cb_isBlocked;
    [NullableAttribute("2")]
private static Delegate cb_getName;
    [NullableAttribute("2")]
private static Delegate cb_toBuilder;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<NotificationChannelCompat> Channels { get; }
    [NullableAttribute("2")]
public string Description { get; }
    public string Id { get; }
    public bool IsBlocked { get; }
    [NullableAttribute("2")]
public ICharSequence NameFormatted { get; }
    [NullableAttribute("2")]
public string Name { get; }
    protected NotificationChannelGroupCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationChannelGroupCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetChannelsHandler();
    private static IntPtr n_GetChannels(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChannels", "()Ljava/util/List;", "GetGetChannelsHandler")]
public virtual IList`1<NotificationChannelCompat> get_Channels();
    private static Delegate GetGetDescriptionHandler();
    private static IntPtr n_GetDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDescription", "()Ljava/lang/String;", "GetGetDescriptionHandler")]
public virtual string get_Description();
    private static Delegate GetGetIdHandler();
    private static IntPtr n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()Ljava/lang/String;", "GetGetIdHandler")]
public virtual string get_Id();
    private static Delegate GetIsBlockedHandler();
    private static bool n_IsBlocked(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isBlocked", "()Z", "GetIsBlockedHandler")]
public virtual bool get_IsBlocked();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getName", "()Ljava/lang/CharSequence;", "GetGetNameHandler")]
public virtual ICharSequence get_NameFormatted();
    [NullableContextAttribute("2")]
public string get_Name();
    private static Delegate GetToBuilderHandler();
    private static IntPtr n_ToBuilder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toBuilder", "()Landroidx/core/app/NotificationChannelGroupCompat$Builder;", "GetToBuilderHandler")]
public virtual Builder ToBuilder();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationCompat")]
public class AndroidX.Core.App.NotificationCompat : Object {
    [RegisterAttribute("BADGE_ICON_LARGE")]
public static int BadgeIconLarge;
    [RegisterAttribute("BADGE_ICON_NONE")]
public static int BadgeIconNone;
    [RegisterAttribute("BADGE_ICON_SMALL")]
public static int BadgeIconSmall;
    [RegisterAttribute("CATEGORY_ALARM")]
public static string CategoryAlarm;
    [RegisterAttribute("CATEGORY_CALL")]
public static string CategoryCall;
    [RegisterAttribute("CATEGORY_EMAIL")]
public static string CategoryEmail;
    [RegisterAttribute("CATEGORY_ERROR")]
public static string CategoryError;
    [RegisterAttribute("CATEGORY_EVENT")]
public static string CategoryEvent;
    [RegisterAttribute("CATEGORY_LOCATION_SHARING")]
public static string CategoryLocationSharing;
    [RegisterAttribute("CATEGORY_MESSAGE")]
public static string CategoryMessage;
    [RegisterAttribute("CATEGORY_MISSED_CALL")]
public static string CategoryMissedCall;
    [RegisterAttribute("CATEGORY_NAVIGATION")]
public static string CategoryNavigation;
    [RegisterAttribute("CATEGORY_PROGRESS")]
public static string CategoryProgress;
    [RegisterAttribute("CATEGORY_PROMO")]
public static string CategoryPromo;
    [RegisterAttribute("CATEGORY_RECOMMENDATION")]
public static string CategoryRecommendation;
    [RegisterAttribute("CATEGORY_REMINDER")]
public static string CategoryReminder;
    [RegisterAttribute("CATEGORY_SERVICE")]
public static string CategoryService;
    [RegisterAttribute("CATEGORY_SOCIAL")]
public static string CategorySocial;
    [RegisterAttribute("CATEGORY_STATUS")]
public static string CategoryStatus;
    [RegisterAttribute("CATEGORY_STOPWATCH")]
public static string CategoryStopwatch;
    [RegisterAttribute("CATEGORY_SYSTEM")]
public static string CategorySystem;
    [RegisterAttribute("CATEGORY_TRANSPORT")]
public static string CategoryTransport;
    [RegisterAttribute("CATEGORY_WORKOUT")]
public static string CategoryWorkout;
    [RegisterAttribute("COLOR_DEFAULT")]
public static int ColorDefault;
    [RegisterAttribute("DEFAULT_ALL")]
public static int DefaultAll;
    [RegisterAttribute("DEFAULT_LIGHTS")]
public static int DefaultLights;
    [RegisterAttribute("DEFAULT_SOUND")]
public static int DefaultSound;
    [RegisterAttribute("DEFAULT_VIBRATE")]
public static int DefaultVibrate;
    [RegisterAttribute("EXTRA_ANSWER_COLOR")]
public static string ExtraAnswerColor;
    [RegisterAttribute("EXTRA_ANSWER_INTENT")]
public static string ExtraAnswerIntent;
    [RegisterAttribute("EXTRA_AUDIO_CONTENTS_URI")]
public static string ExtraAudioContentsUri;
    [RegisterAttribute("EXTRA_BACKGROUND_IMAGE_URI")]
public static string ExtraBackgroundImageUri;
    [RegisterAttribute("EXTRA_BIG_TEXT")]
public static string ExtraBigText;
    [RegisterAttribute("EXTRA_CALL_IS_VIDEO")]
public static string ExtraCallIsVideo;
    [RegisterAttribute("EXTRA_CALL_PERSON")]
public static string ExtraCallPerson;
    [RegisterAttribute("EXTRA_CALL_PERSON_COMPAT")]
public static string ExtraCallPersonCompat;
    [RegisterAttribute("EXTRA_CALL_TYPE")]
public static string ExtraCallType;
    [RegisterAttribute("EXTRA_CHANNEL_GROUP_ID")]
public static string ExtraChannelGroupId;
    [RegisterAttribute("EXTRA_CHANNEL_ID")]
public static string ExtraChannelId;
    [RegisterAttribute("EXTRA_CHRONOMETER_COUNT_DOWN")]
public static string ExtraChronometerCountDown;
    [RegisterAttribute("EXTRA_COLORIZED")]
public static string ExtraColorized;
    [RegisterAttribute("EXTRA_COMPACT_ACTIONS")]
public static string ExtraCompactActions;
    [RegisterAttribute("EXTRA_COMPAT_TEMPLATE")]
public static string ExtraCompatTemplate;
    [RegisterAttribute("EXTRA_CONVERSATION_TITLE")]
public static string ExtraConversationTitle;
    [RegisterAttribute("EXTRA_DECLINE_COLOR")]
public static string ExtraDeclineColor;
    [RegisterAttribute("EXTRA_DECLINE_INTENT")]
public static string ExtraDeclineIntent;
    [RegisterAttribute("EXTRA_HANG_UP_INTENT")]
public static string ExtraHangUpIntent;
    [RegisterAttribute("EXTRA_HIDDEN_CONVERSATION_TITLE")]
public static string ExtraHiddenConversationTitle;
    [RegisterAttribute("EXTRA_HISTORIC_MESSAGES")]
public static string ExtraHistoricMessages;
    [RegisterAttribute("EXTRA_INFO_TEXT")]
public static string ExtraInfoText;
    [RegisterAttribute("EXTRA_IS_GROUP_CONVERSATION")]
public static string ExtraIsGroupConversation;
    [RegisterAttribute("EXTRA_LARGE_ICON")]
public static string ExtraLargeIcon;
    [RegisterAttribute("EXTRA_LARGE_ICON_BIG")]
public static string ExtraLargeIconBig;
    [RegisterAttribute("EXTRA_MEDIA_SESSION")]
public static string ExtraMediaSession;
    [RegisterAttribute("EXTRA_MESSAGES")]
public static string ExtraMessages;
    [RegisterAttribute("EXTRA_MESSAGING_STYLE_USER")]
public static string ExtraMessagingStyleUser;
    [RegisterAttribute("EXTRA_NOTIFICATION_ID")]
public static string ExtraNotificationId;
    [RegisterAttribute("EXTRA_NOTIFICATION_TAG")]
public static string ExtraNotificationTag;
    [RegisterAttribute("EXTRA_PEOPLE")]
[ObsoleteAttribute("deprecated")]
public static string ExtraPeople;
    [RegisterAttribute("EXTRA_PEOPLE_LIST")]
public static string ExtraPeopleList;
    [RegisterAttribute("EXTRA_PICTURE")]
public static string ExtraPicture;
    [RegisterAttribute("EXTRA_PICTURE_CONTENT_DESCRIPTION")]
public static string ExtraPictureContentDescription;
    [RegisterAttribute("EXTRA_PICTURE_ICON")]
public static string ExtraPictureIcon;
    [RegisterAttribute("EXTRA_PROGRESS")]
public static string ExtraProgress;
    [RegisterAttribute("EXTRA_PROGRESS_INDETERMINATE")]
public static string ExtraProgressIndeterminate;
    [RegisterAttribute("EXTRA_PROGRESS_MAX")]
public static string ExtraProgressMax;
    [RegisterAttribute("EXTRA_REMOTE_INPUT_HISTORY")]
public static string ExtraRemoteInputHistory;
    [RegisterAttribute("EXTRA_SELF_DISPLAY_NAME")]
public static string ExtraSelfDisplayName;
    [RegisterAttribute("EXTRA_SHOW_BIG_PICTURE_WHEN_COLLAPSED")]
public static string ExtraShowBigPictureWhenCollapsed;
    [RegisterAttribute("EXTRA_SHOW_CHRONOMETER")]
public static string ExtraShowChronometer;
    [RegisterAttribute("EXTRA_SHOW_WHEN")]
public static string ExtraShowWhen;
    [RegisterAttribute("EXTRA_SMALL_ICON")]
public static string ExtraSmallIcon;
    [RegisterAttribute("EXTRA_SUB_TEXT")]
public static string ExtraSubText;
    [RegisterAttribute("EXTRA_SUMMARY_TEXT")]
public static string ExtraSummaryText;
    [RegisterAttribute("EXTRA_TEMPLATE")]
public static string ExtraTemplate;
    [RegisterAttribute("EXTRA_TEXT")]
public static string ExtraText;
    [RegisterAttribute("EXTRA_TEXT_LINES")]
public static string ExtraTextLines;
    [RegisterAttribute("EXTRA_TITLE")]
public static string ExtraTitle;
    [RegisterAttribute("EXTRA_TITLE_BIG")]
public static string ExtraTitleBig;
    [RegisterAttribute("EXTRA_VERIFICATION_ICON")]
public static string ExtraVerificationIcon;
    [RegisterAttribute("EXTRA_VERIFICATION_ICON_COMPAT")]
public static string ExtraVerificationIconCompat;
    [RegisterAttribute("EXTRA_VERIFICATION_TEXT")]
public static string ExtraVerificationText;
    [RegisterAttribute("FLAG_AUTO_CANCEL")]
public static int FlagAutoCancel;
    [RegisterAttribute("FLAG_BUBBLE")]
public static int FlagBubble;
    [RegisterAttribute("FLAG_FOREGROUND_SERVICE")]
public static int FlagForegroundService;
    [RegisterAttribute("FLAG_GROUP_SUMMARY")]
public static int FlagGroupSummary;
    [RegisterAttribute("FLAG_HIGH_PRIORITY")]
[ObsoleteAttribute("deprecated")]
public static int FlagHighPriority;
    [RegisterAttribute("FLAG_INSISTENT")]
public static int FlagInsistent;
    [RegisterAttribute("FLAG_LOCAL_ONLY")]
public static int FlagLocalOnly;
    [RegisterAttribute("FLAG_NO_CLEAR")]
public static int FlagNoClear;
    [RegisterAttribute("FLAG_ONGOING_EVENT")]
public static int FlagOngoingEvent;
    [RegisterAttribute("FLAG_ONLY_ALERT_ONCE")]
public static int FlagOnlyAlertOnce;
    [RegisterAttribute("FLAG_SHOW_LIGHTS")]
public static int FlagShowLights;
    [RegisterAttribute("FOREGROUND_SERVICE_DEFAULT")]
public static int ForegroundServiceDefault;
    [RegisterAttribute("FOREGROUND_SERVICE_DEFERRED")]
public static int ForegroundServiceDeferred;
    [RegisterAttribute("FOREGROUND_SERVICE_IMMEDIATE")]
public static int ForegroundServiceImmediate;
    [RegisterAttribute("GROUP_ALERT_ALL")]
public static int GroupAlertAll;
    [RegisterAttribute("GROUP_ALERT_CHILDREN")]
public static int GroupAlertChildren;
    [RegisterAttribute("GROUP_ALERT_SUMMARY")]
public static int GroupAlertSummary;
    [RegisterAttribute("GROUP_KEY_SILENT")]
public static string GroupKeySilent;
    [RegisterAttribute("INTENT_CATEGORY_NOTIFICATION_PREFERENCES")]
public static string IntentCategoryNotificationPreferences;
    [RegisterAttribute("MAX_ACTION_BUTTONS")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static int MaxActionButtons;
    [RegisterAttribute("PRIORITY_DEFAULT")]
public static int PriorityDefault;
    [RegisterAttribute("PRIORITY_HIGH")]
public static int PriorityHigh;
    [RegisterAttribute("PRIORITY_LOW")]
public static int PriorityLow;
    [RegisterAttribute("PRIORITY_MAX")]
public static int PriorityMax;
    [RegisterAttribute("PRIORITY_MIN")]
public static int PriorityMin;
    [RegisterAttribute("STREAM_DEFAULT")]
public static int StreamDefault;
    [RegisterAttribute("VISIBILITY_PRIVATE")]
public static int VisibilityPrivate;
    [RegisterAttribute("VISIBILITY_PUBLIC")]
public static int VisibilityPublic;
    [RegisterAttribute("VISIBILITY_SECRET")]
public static int VisibilitySecret;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAction", "(Landroid/app/Notification;I)Landroidx/core/app/NotificationCompat$Action;", "")]
public static Action GetAction(Notification notification, int actionIndex);
    [RegisterAttribute("getActionCount", "(Landroid/app/Notification;)I", "")]
public static int GetActionCount(Notification notification);
    [RegisterAttribute("getAllowSystemGeneratedContextualActions", "(Landroid/app/Notification;)Z", "")]
public static bool GetAllowSystemGeneratedContextualActions(Notification notification);
    [RegisterAttribute("getAutoCancel", "(Landroid/app/Notification;)Z", "")]
public static bool GetAutoCancel(Notification notification);
    [RegisterAttribute("getBadgeIconType", "(Landroid/app/Notification;)I", "")]
public static int GetBadgeIconType(Notification notification);
    [RegisterAttribute("getBubbleMetadata", "(Landroid/app/Notification;)Landroidx/core/app/NotificationCompat$BubbleMetadata;", "")]
public static BubbleMetadata GetBubbleMetadata(Notification notification);
    [RegisterAttribute("getCategory", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetCategory(Notification notification);
    [RegisterAttribute("getChannelId", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetChannelId(Notification notification);
    [RegisterAttribute("getColor", "(Landroid/app/Notification;)I", "")]
public static int GetColor(Notification notification);
    [RegisterAttribute("getContentInfo", "(Landroid/app/Notification;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetContentInfoFormatted(Notification notification);
    public static string GetContentInfo(Notification notification);
    [RegisterAttribute("getContentText", "(Landroid/app/Notification;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetContentTextFormatted(Notification notification);
    public static string GetContentText(Notification notification);
    [RegisterAttribute("getContentTitle", "(Landroid/app/Notification;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetContentTitleFormatted(Notification notification);
    public static string GetContentTitle(Notification notification);
    [RegisterAttribute("getExtras", "(Landroid/app/Notification;)Landroid/os/Bundle;", "")]
public static Bundle GetExtras(Notification notification);
    [RegisterAttribute("getGroup", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetGroup(Notification notification);
    [RegisterAttribute("getGroupAlertBehavior", "(Landroid/app/Notification;)I", "")]
public static int GetGroupAlertBehavior(Notification notification);
    [RegisterAttribute("getInvisibleActions", "(Landroid/app/Notification;)Ljava/util/List;", "")]
public static IList`1<Action> GetInvisibleActions(Notification notification);
    [RegisterAttribute("getLocalOnly", "(Landroid/app/Notification;)Z", "")]
public static bool GetLocalOnly(Notification notification);
    [RegisterAttribute("getLocusId", "(Landroid/app/Notification;)Landroidx/core/content/LocusIdCompat;", "")]
public static LocusIdCompat GetLocusId(Notification notification);
    [RegisterAttribute("getOngoing", "(Landroid/app/Notification;)Z", "")]
public static bool GetOngoing(Notification notification);
    [RegisterAttribute("getOnlyAlertOnce", "(Landroid/app/Notification;)Z", "")]
public static bool GetOnlyAlertOnce(Notification notification);
    [RegisterAttribute("getPeople", "(Landroid/app/Notification;)Ljava/util/List;", "")]
public static IList`1<Person> GetPeople(Notification notification);
    [RegisterAttribute("getPublicVersion", "(Landroid/app/Notification;)Landroid/app/Notification;", "")]
public static Notification GetPublicVersion(Notification notification);
    [RegisterAttribute("getSettingsText", "(Landroid/app/Notification;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetSettingsTextFormatted(Notification notification);
    public static string GetSettingsText(Notification notification);
    [RegisterAttribute("getShortcutId", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetShortcutId(Notification notification);
    [RegisterAttribute("getShowWhen", "(Landroid/app/Notification;)Z", "")]
public static bool GetShowWhen(Notification notification);
    [RegisterAttribute("getSortKey", "(Landroid/app/Notification;)Ljava/lang/String;", "")]
public static string GetSortKey(Notification notification);
    [RegisterAttribute("getSubText", "(Landroid/app/Notification;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetSubTextFormatted(Notification notification);
    public static string GetSubText(Notification notification);
    [RegisterAttribute("getTimeoutAfter", "(Landroid/app/Notification;)J", "")]
public static long GetTimeoutAfter(Notification notification);
    [RegisterAttribute("getUsesChronometer", "(Landroid/app/Notification;)Z", "")]
public static bool GetUsesChronometer(Notification notification);
    [RegisterAttribute("getVisibility", "(Landroid/app/Notification;)I", "")]
public static int GetVisibility(Notification notification);
    [RegisterAttribute("isGroupSummary", "(Landroid/app/Notification;)Z", "")]
public static bool IsGroupSummary(Notification notification);
    [NullableContextAttribute("2")]
[RegisterAttribute("reduceLargeIconSize", "(Landroid/content/Context;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;", "")]
public static Bitmap ReduceLargeIconSize(Context context, Bitmap icon);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationCompatExtras")]
public class AndroidX.Core.App.NotificationCompatExtras : Object {
    [RegisterAttribute("EXTRA_ACTION_EXTRAS")]
public static string ExtraActionExtras;
    [RegisterAttribute("EXTRA_GROUP_KEY")]
public static string ExtraGroupKey;
    [RegisterAttribute("EXTRA_GROUP_SUMMARY")]
public static string ExtraGroupSummary;
    [RegisterAttribute("EXTRA_LOCAL_ONLY")]
public static string ExtraLocalOnly;
    [RegisterAttribute("EXTRA_REMOTE_INPUTS")]
public static string ExtraRemoteInputs;
    [RegisterAttribute("EXTRA_SORT_KEY")]
public static string ExtraSortKey;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal NotificationCompatExtras(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationCompatExtras();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationCompatSideChannelService")]
public abstract class AndroidX.Core.App.NotificationCompatSideChannelService : Service {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_lang_String_ILjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_cancelAll_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_;
    [NullableAttribute("2")]
private static Delegate cb_onBind_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationCompatSideChannelService(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationCompatSideChannelService();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCancel_Ljava_lang_String_ILjava_lang_String_Handler();
    private static void n_Cancel_Ljava_lang_String_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public abstract virtual void Cancel(string packageName, int id, string tag);
    private static Delegate GetCancelAll_Ljava_lang_String_Handler();
    private static void n_CancelAll_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public abstract virtual void CancelAll(string packageName);
    private static Delegate GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler();
    private static void n_Notify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName, int id, IntPtr native_tag, IntPtr native_notification);
    [NullableContextAttribute("2")]
[RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public abstract virtual void Notify(string packageName, int id, string tag, Notification notification);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [NullableContextAttribute("2")]
[RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationCompatSideChannelService")]
internal class AndroidX.Core.App.NotificationCompatSideChannelServiceInvoker : NotificationCompatSideChannelService {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public NotificationCompatSideChannelServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static NotificationCompatSideChannelServiceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/String;ILjava/lang/String;)V", "GetCancel_Ljava_lang_String_ILjava_lang_String_Handler")]
public virtual void Cancel(string packageName, int id, string tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancelAll", "(Ljava/lang/String;)V", "GetCancelAll_Ljava_lang_String_Handler")]
public virtual void CancelAll(string packageName);
    [NullableContextAttribute("2")]
[RegisterAttribute("notify", "(Ljava/lang/String;ILjava/lang/String;Landroid/app/Notification;)V", "GetNotify_Ljava_lang_String_ILjava_lang_String_Landroid_app_Notification_Handler")]
public virtual void Notify(string packageName, int id, string tag, Notification notification);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/NotificationManagerCompat")]
public class AndroidX.Core.App.NotificationManagerCompat : Object {
    [RegisterAttribute("ACTION_BIND_SIDE_CHANNEL")]
public static string ActionBindSideChannel;
    [RegisterAttribute("EXTRA_USE_SIDE_CHANNEL")]
public static string ExtraUseSideChannel;
    [RegisterAttribute("IMPORTANCE_DEFAULT")]
public static int ImportanceDefault;
    [RegisterAttribute("IMPORTANCE_HIGH")]
public static int ImportanceHigh;
    [RegisterAttribute("IMPORTANCE_LOW")]
public static int ImportanceLow;
    [RegisterAttribute("IMPORTANCE_MAX")]
public static int ImportanceMax;
    [RegisterAttribute("IMPORTANCE_MIN")]
public static int ImportanceMin;
    [RegisterAttribute("IMPORTANCE_NONE")]
public static int ImportanceNone;
    [RegisterAttribute("IMPORTANCE_UNSPECIFIED")]
public static int ImportanceUnspecified;
    [RegisterAttribute("INTERRUPTION_FILTER_ALARMS")]
public static int InterruptionFilterAlarms;
    [RegisterAttribute("INTERRUPTION_FILTER_ALL")]
public static int InterruptionFilterAll;
    [RegisterAttribute("INTERRUPTION_FILTER_NONE")]
public static int InterruptionFilterNone;
    [RegisterAttribute("INTERRUPTION_FILTER_PRIORITY")]
public static int InterruptionFilterPriority;
    [RegisterAttribute("INTERRUPTION_FILTER_UNKNOWN")]
public static int InterruptionFilterUnknown;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<StatusBarNotification> ActiveNotifications { get; }
    public int CurrentInterruptionFilter { get; }
    public int Importance { get; }
    public IList`1<NotificationChannelGroup> NotificationChannelGroups { get; }
    public IList`1<NotificationChannelGroupCompat> NotificationChannelGroupsCompat { get; }
    public IList`1<NotificationChannel> NotificationChannels { get; }
    public IList`1<NotificationChannelCompat> NotificationChannelsCompat { get; }
    internal NotificationManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActiveNotifications", "()Ljava/util/List;", "")]
public IList`1<StatusBarNotification> get_ActiveNotifications();
    [RegisterAttribute("getCurrentInterruptionFilter", "()I", "")]
public int get_CurrentInterruptionFilter();
    [RegisterAttribute("getImportance", "()I", "")]
public int get_Importance();
    [RegisterAttribute("getNotificationChannelGroups", "()Ljava/util/List;", "")]
public IList`1<NotificationChannelGroup> get_NotificationChannelGroups();
    [RegisterAttribute("getNotificationChannelGroupsCompat", "()Ljava/util/List;", "")]
public IList`1<NotificationChannelGroupCompat> get_NotificationChannelGroupsCompat();
    [RegisterAttribute("getNotificationChannels", "()Ljava/util/List;", "")]
public IList`1<NotificationChannel> get_NotificationChannels();
    [RegisterAttribute("getNotificationChannelsCompat", "()Ljava/util/List;", "")]
public IList`1<NotificationChannelCompat> get_NotificationChannelsCompat();
    [RegisterAttribute("areNotificationsEnabled", "()Z", "")]
public bool AreNotificationsEnabled();
    [RegisterAttribute("canUseFullScreenIntent", "()Z", "")]
public bool CanUseFullScreenIntent();
    [RegisterAttribute("cancel", "(I)V", "")]
public void Cancel(int id);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/String;I)V", "")]
public void Cancel(string tag, int id);
    [RegisterAttribute("cancelAll", "()V", "")]
public void CancelAll();
    [RegisterAttribute("createNotificationChannel", "(Landroid/app/NotificationChannel;)V", "")]
public void CreateNotificationChannel(NotificationChannel channel);
    [RegisterAttribute("createNotificationChannel", "(Landroidx/core/app/NotificationChannelCompat;)V", "")]
public void CreateNotificationChannel(NotificationChannelCompat channel);
    [RegisterAttribute("createNotificationChannelGroup", "(Landroid/app/NotificationChannelGroup;)V", "")]
public void CreateNotificationChannelGroup(NotificationChannelGroup group);
    [RegisterAttribute("createNotificationChannelGroup", "(Landroidx/core/app/NotificationChannelGroupCompat;)V", "")]
public void CreateNotificationChannelGroup(NotificationChannelGroupCompat group);
    [RegisterAttribute("createNotificationChannelGroups", "(Ljava/util/List;)V", "")]
public void CreateNotificationChannelGroups(IList`1<NotificationChannelGroup> groups);
    [RegisterAttribute("createNotificationChannelGroupsCompat", "(Ljava/util/List;)V", "")]
public void CreateNotificationChannelGroupsCompat(IList`1<NotificationChannelGroupCompat> groups);
    [RegisterAttribute("createNotificationChannels", "(Ljava/util/List;)V", "")]
public void CreateNotificationChannels(IList`1<NotificationChannel> channels);
    [RegisterAttribute("createNotificationChannelsCompat", "(Ljava/util/List;)V", "")]
public void CreateNotificationChannelsCompat(IList`1<NotificationChannelCompat> channels);
    [RegisterAttribute("deleteNotificationChannel", "(Ljava/lang/String;)V", "")]
public void DeleteNotificationChannel(string channelId);
    [RegisterAttribute("deleteNotificationChannelGroup", "(Ljava/lang/String;)V", "")]
public void DeleteNotificationChannelGroup(string groupId);
    [RegisterAttribute("deleteUnlistedNotificationChannels", "(Ljava/util/Collection;)V", "")]
public void DeleteUnlistedNotificationChannels(ICollection`1<string> channelIds);
    [RegisterAttribute("from", "(Landroid/content/Context;)Landroidx/core/app/NotificationManagerCompat;", "")]
public static NotificationManagerCompat From(Context context);
    [RegisterAttribute("getEnabledListenerPackages", "(Landroid/content/Context;)Ljava/util/Set;", "")]
public static ICollection`1<string> GetEnabledListenerPackages(Context context);
    [RegisterAttribute("getNotificationChannel", "(Ljava/lang/String;)Landroid/app/NotificationChannel;", "")]
public NotificationChannel GetNotificationChannel(string channelId);
    [RegisterAttribute("getNotificationChannel", "(Ljava/lang/String;Ljava/lang/String;)Landroid/app/NotificationChannel;", "")]
public NotificationChannel GetNotificationChannel(string channelId, string conversationId);
    [RegisterAttribute("getNotificationChannelCompat", "(Ljava/lang/String;)Landroidx/core/app/NotificationChannelCompat;", "")]
public NotificationChannelCompat GetNotificationChannelCompat(string channelId);
    [RegisterAttribute("getNotificationChannelCompat", "(Ljava/lang/String;Ljava/lang/String;)Landroidx/core/app/NotificationChannelCompat;", "")]
public NotificationChannelCompat GetNotificationChannelCompat(string channelId, string conversationId);
    [RegisterAttribute("getNotificationChannelGroup", "(Ljava/lang/String;)Landroid/app/NotificationChannelGroup;", "")]
public NotificationChannelGroup GetNotificationChannelGroup(string channelGroupId);
    [RegisterAttribute("getNotificationChannelGroupCompat", "(Ljava/lang/String;)Landroidx/core/app/NotificationChannelGroupCompat;", "")]
public NotificationChannelGroupCompat GetNotificationChannelGroupCompat(string channelGroupId);
    [RegisterAttribute("notify", "(ILandroid/app/Notification;)V", "")]
public void Notify(int id, Notification notification);
    [RegisterAttribute("notify", "(Ljava/lang/String;ILandroid/app/Notification;)V", "")]
public void Notify(string tag, int id, Notification notification);
    [RegisterAttribute("notify", "(Ljava/util/List;)V", "")]
public void Notify(IList`1<NotificationWithIdAndTag> notificationWithIdAndTags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/PendingIntentCompat")]
public class AndroidX.Core.App.PendingIntentCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PendingIntentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PendingIntentCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActivities", "(Landroid/content/Context;I[Landroid/content/Intent;ILandroid/os/Bundle;Z)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetActivities(Context context, int requestCode, Intent[] intents, int flags, Bundle options, bool isMutable);
    [RegisterAttribute("getActivities", "(Landroid/content/Context;I[Landroid/content/Intent;IZ)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetActivities(Context context, int requestCode, Intent[] intents, int flags, bool isMutable);
    [RegisterAttribute("getActivity", "(Landroid/content/Context;ILandroid/content/Intent;ILandroid/os/Bundle;Z)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetActivity(Context context, int requestCode, Intent intent, int flags, Bundle options, bool isMutable);
    [RegisterAttribute("getActivity", "(Landroid/content/Context;ILandroid/content/Intent;IZ)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetActivity(Context context, int requestCode, Intent intent, int flags, bool isMutable);
    [RegisterAttribute("getBroadcast", "(Landroid/content/Context;ILandroid/content/Intent;IZ)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetBroadcast(Context context, int requestCode, Intent intent, int flags, bool isMutable);
    [RegisterAttribute("getForegroundService", "(Landroid/content/Context;ILandroid/content/Intent;IZ)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetForegroundService(Context context, int requestCode, Intent intent, int flags, bool isMutable);
    [RegisterAttribute("getService", "(Landroid/content/Context;ILandroid/content/Intent;IZ)Landroid/app/PendingIntent;", "")]
public static PendingIntent GetService(Context context, int requestCode, Intent intent, int flags, bool isMutable);
    [RegisterAttribute("send", "(Landroid/app/PendingIntent;Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V", "")]
public static void Send(PendingIntent pendingIntent, Context context, int code, Intent intent, IOnFinished onFinished, Handler handler);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(Landroid/app/PendingIntent;Landroid/content/Context;ILandroid/content/Intent;Landroid/app/PendingIntent$OnFinished;Landroid/os/Handler;Ljava/lang/String;Landroid/os/Bundle;)V", "")]
public static void Send(PendingIntent pendingIntent, Context context, int code, Intent intent, IOnFinished onFinished, Handler handler, string requiredPermissions, Bundle options);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(Landroid/app/PendingIntent;ILandroid/app/PendingIntent$OnFinished;Landroid/os/Handler;)V", "")]
public static void Send(PendingIntent pendingIntent, int code, IOnFinished onFinished, Handler handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/Person")]
public class AndroidX.Core.App.Person : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getIcon;
    [NullableAttribute("2")]
private static Delegate cb_isBot;
    [NullableAttribute("2")]
private static Delegate cb_isImportant;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    [NullableAttribute("2")]
private static Delegate cb_getName;
    [NullableAttribute("2")]
private static Delegate cb_getUri;
    [NullableAttribute("2")]
private static Delegate cb_resolveToLegacyUri;
    [NullableAttribute("2")]
private static Delegate cb_toAndroidPerson;
    [NullableAttribute("2")]
private static Delegate cb_toBuilder;
    [NullableAttribute("2")]
private static Delegate cb_toBundle;
    [NullableAttribute("2")]
private static Delegate cb_toPersistableBundle;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IconCompat Icon { get; }
    public bool IsBot { get; }
    public bool IsImportant { get; }
    [NullableAttribute("2")]
public string Key { get; }
    [NullableAttribute("2")]
public ICharSequence NameFormatted { get; }
    [NullableAttribute("2")]
public string Name { get; }
    [NullableAttribute("2")]
public string Uri { get; }
    protected Person(IntPtr javaReference, JniHandleOwnership transfer);
    private static Person();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetIconHandler();
    private static IntPtr n_GetIcon(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getIcon", "()Landroidx/core/graphics/drawable/IconCompat;", "GetGetIconHandler")]
public virtual IconCompat get_Icon();
    private static Delegate GetIsBotHandler();
    private static bool n_IsBot(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isBot", "()Z", "GetIsBotHandler")]
public virtual bool get_IsBot();
    private static Delegate GetIsImportantHandler();
    private static bool n_IsImportant(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isImportant", "()Z", "GetIsImportantHandler")]
public virtual bool get_IsImportant();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getKey", "()Ljava/lang/String;", "GetGetKeyHandler")]
public virtual string get_Key();
    private static Delegate GetGetNameHandler();
    private static IntPtr n_GetName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getName", "()Ljava/lang/CharSequence;", "GetGetNameHandler")]
public virtual ICharSequence get_NameFormatted();
    [NullableContextAttribute("2")]
public string get_Name();
    private static Delegate GetGetUriHandler();
    private static IntPtr n_GetUri(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getUri", "()Ljava/lang/String;", "GetGetUriHandler")]
public virtual string get_Uri();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("fromAndroidPerson", "(Landroid/app/Person;)Landroidx/core/app/Person;", "")]
public static Person FromAndroidPerson(Person person);
    [RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/core/app/Person;", "")]
public static Person FromBundle(Bundle bundle);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("fromPersistableBundle", "(Landroid/os/PersistableBundle;)Landroidx/core/app/Person;", "")]
public static Person FromPersistableBundle(PersistableBundle bundle);
    private static Delegate GetResolveToLegacyUriHandler();
    private static IntPtr n_ResolveToLegacyUri(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("resolveToLegacyUri", "()Ljava/lang/String;", "GetResolveToLegacyUriHandler")]
public virtual string ResolveToLegacyUri();
    private static Delegate GetToAndroidPersonHandler();
    private static IntPtr n_ToAndroidPerson(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("toAndroidPerson", "()Landroid/app/Person;", "GetToAndroidPersonHandler")]
public virtual Person ToAndroidPerson();
    private static Delegate GetToBuilderHandler();
    private static IntPtr n_ToBuilder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toBuilder", "()Landroidx/core/app/Person$Builder;", "GetToBuilderHandler")]
public virtual Builder ToBuilder();
    private static Delegate GetToBundleHandler();
    private static IntPtr n_ToBundle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")]
public virtual Bundle ToBundle();
    private static Delegate GetToPersistableBundleHandler();
    private static IntPtr n_ToPersistableBundle(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("toPersistableBundle", "()Landroid/os/PersistableBundle;", "GetToPersistableBundleHandler")]
public virtual PersistableBundle ToPersistableBundle();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/PictureInPictureModeChangedInfo")]
public class AndroidX.Core.App.PictureInPictureModeChangedInfo : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsInPictureInPictureMode { get; }
    public Configuration NewConfig { get; }
    internal PictureInPictureModeChangedInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Z)V", "")]
public PictureInPictureModeChangedInfo(bool isInPictureInPictureMode);
    [RegisterAttribute(".ctor", "(ZLandroid/content/res/Configuration;)V", "")]
public PictureInPictureModeChangedInfo(bool isInPictureInPictureMode, Configuration newConfig);
    private static PictureInPictureModeChangedInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isInPictureInPictureMode", "()Z", "")]
public bool get_IsInPictureInPictureMode();
    [RegisterAttribute("getNewConfig", "()Landroid/content/res/Configuration;", "")]
public Configuration get_NewConfig();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/RemoteActionCompat")]
public class AndroidX.Core.App.RemoteActionCompat : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("mActionIntent")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public PendingIntent MActionIntent { get; public set; }
    [RegisterAttribute("mContentDescription")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public ICharSequence MContentDescription { get; public set; }
    [RegisterAttribute("mEnabled")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public bool MEnabled { get; public set; }
    [RegisterAttribute("mIcon")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public IconCompat MIcon { get; public set; }
    [RegisterAttribute("mShouldShowIcon")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public bool MShouldShowIcon { get; public set; }
    [RegisterAttribute("mTitle")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public ICharSequence MTitle { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public PendingIntent ActionIntent { get; }
    public ICharSequence ContentDescriptionFormatted { get; }
    [NullableAttribute("2")]
public string ContentDescription { get; }
    public bool Enabled { get; public set; }
    public IconCompat Icon { get; }
    public ICharSequence TitleFormatted { get; }
    [NullableAttribute("2")]
public string Title { get; }
    internal RemoteActionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/core/app/RemoteActionCompat;)V", "")]
public RemoteActionCompat(RemoteActionCompat other);
    [RegisterAttribute(".ctor", "(Landroidx/core/graphics/drawable/IconCompat;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/app/PendingIntent;)V", "")]
public RemoteActionCompat(IconCompat icon, ICharSequence title, ICharSequence contentDescription, PendingIntent intent);
    [RegisterAttribute(".ctor", "(Landroidx/core/graphics/drawable/IconCompat;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Landroid/app/PendingIntent;)V", "")]
public RemoteActionCompat(IconCompat icon, string title, string contentDescription, PendingIntent intent);
    private static RemoteActionCompat();
    public PendingIntent get_MActionIntent();
    public void set_MActionIntent(PendingIntent value);
    public ICharSequence get_MContentDescription();
    public void set_MContentDescription(ICharSequence value);
    public bool get_MEnabled();
    public void set_MEnabled(bool value);
    public IconCompat get_MIcon();
    public void set_MIcon(IconCompat value);
    public bool get_MShouldShowIcon();
    public void set_MShouldShowIcon(bool value);
    public ICharSequence get_MTitle();
    public void set_MTitle(ICharSequence value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActionIntent", "()Landroid/app/PendingIntent;", "")]
public PendingIntent get_ActionIntent();
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_ContentDescriptionFormatted();
    [NullableContextAttribute("2")]
public string get_ContentDescription();
    [RegisterAttribute("isEnabled", "()Z", "")]
public bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "")]
public void set_Enabled(bool value);
    [RegisterAttribute("getIcon", "()Landroidx/core/graphics/drawable/IconCompat;", "")]
public IconCompat get_Icon();
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_TitleFormatted();
    [NullableContextAttribute("2")]
public string get_Title();
    [RegisterAttribute("createFromRemoteAction", "(Landroid/app/RemoteAction;)Landroidx/core/app/RemoteActionCompat;", "")]
public static RemoteActionCompat CreateFromRemoteAction(RemoteAction remoteAction);
    [RegisterAttribute("setShouldShowIcon", "(Z)V", "")]
public void SetShouldShowIcon(bool shouldShowIcon);
    [RegisterAttribute("shouldShowIcon", "()Z", "")]
public bool ShouldShowIcon();
    [RegisterAttribute("toRemoteAction", "()Landroid/app/RemoteAction;", "")]
public RemoteAction ToRemoteAction();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/RemoteActionCompatParcelizer")]
public class AndroidX.Core.App.RemoteActionCompatParcelizer : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected RemoteActionCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static RemoteActionCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/core/app/RemoteActionCompat;", "")]
public static RemoteActionCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/core/app/RemoteActionCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(RemoteActionCompat obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/RemoteInput")]
public class AndroidX.Core.App.RemoteInput : Object {
    [RegisterAttribute("EDIT_CHOICES_BEFORE_SENDING_AUTO")]
public static int EditChoicesBeforeSendingAuto;
    [RegisterAttribute("EDIT_CHOICES_BEFORE_SENDING_DISABLED")]
public static int EditChoicesBeforeSendingDisabled;
    [RegisterAttribute("EDIT_CHOICES_BEFORE_SENDING_ENABLED")]
public static int EditChoicesBeforeSendingEnabled;
    [RegisterAttribute("EXTRA_RESULTS_DATA")]
public static string ExtraResultsData;
    [RegisterAttribute("RESULTS_CLIP_LABEL")]
public static string ResultsClipLabel;
    [RegisterAttribute("SOURCE_CHOICE")]
public static int SourceChoice;
    [RegisterAttribute("SOURCE_FREE_FORM_INPUT")]
public static int SourceFreeFormInput;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    private bool AllowFreeFormInput { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private ICollection`1<string> AllowedDataTypes { get; }
    public int EditChoicesBeforeSending { get; }
    private Bundle Extras { get; }
    public bool IsDataOnly { get; }
    [NullableAttribute("2")]
private ICharSequence LabelFormatted { get; }
    [NullableAttribute("2")]
private string Label { get; }
    private string ResultKey { get; }
    internal RemoteInput(IntPtr javaReference, JniHandleOwnership transfer);
    private static RemoteInput();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAllowFreeFormInput", "()Z", "")]
private bool get_AllowFreeFormInput();
    [RegisterAttribute("getAllowedDataTypes", "()Ljava/util/Set;", "")]
private ICollection`1<string> get_AllowedDataTypes();
    [RegisterAttribute("getEditChoicesBeforeSending", "()I", "")]
public int get_EditChoicesBeforeSending();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
private Bundle get_Extras();
    [RegisterAttribute("isDataOnly", "()Z", "")]
public bool get_IsDataOnly();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLabel", "()Ljava/lang/CharSequence;", "")]
private ICharSequence get_LabelFormatted();
    [NullableContextAttribute("2")]
private string get_Label();
    [RegisterAttribute("getResultKey", "()Ljava/lang/String;", "")]
private string get_ResultKey();
    [RegisterAttribute("addDataResultToIntent", "(Landroidx/core/app/RemoteInput;Landroid/content/Intent;Ljava/util/Map;)V", "")]
public static void AddDataResultToIntent(RemoteInput remoteInput, Intent intent, IDictionary`2<string, Uri> results);
    [RegisterAttribute("addResultsToIntent", "([Landroidx/core/app/RemoteInput;Landroid/content/Intent;Landroid/os/Bundle;)V", "")]
public static void AddResultsToIntent(RemoteInput[] remoteInputs, Intent intent, Bundle results);
    [RegisterAttribute("getChoices", "()[Ljava/lang/CharSequence;", "")]
private ICharSequence[] GetChoicesFormatted();
    private String[] GetChoices();
    [RegisterAttribute("getDataResultsFromIntent", "(Landroid/content/Intent;Ljava/lang/String;)Ljava/util/Map;", "")]
public static IDictionary`2<string, Uri> GetDataResultsFromIntent(Intent intent, string remoteInputResultKey);
    [RegisterAttribute("getResultsFromIntent", "(Landroid/content/Intent;)Landroid/os/Bundle;", "")]
public static Bundle GetResultsFromIntent(Intent intent);
    [RegisterAttribute("getResultsSource", "(Landroid/content/Intent;)I", "")]
public static int GetResultsSource(Intent intent);
    [RegisterAttribute("setResultsSource", "(Landroid/content/Intent;I)V", "")]
public static void SetResultsSource(Intent intent, int source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/ServiceCompat")]
public class AndroidX.Core.App.ServiceCompat : Object {
    [RegisterAttribute("START_STICKY")]
public static int StartSticky;
    [RegisterAttribute("STOP_FOREGROUND_DETACH")]
public static int StopForegroundDetach;
    [RegisterAttribute("STOP_FOREGROUND_REMOVE")]
public static int StopForegroundRemove;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ServiceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ServiceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("startForeground", "(Landroid/app/Service;ILandroid/app/Notification;I)V", "")]
public static void StartForeground(Service service, int id, Notification notification, int foregroundServiceType);
    [RegisterAttribute("stopForeground", "(Landroid/app/Service;I)V", "")]
public static void StopForeground(Service service, int flags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/ShareCompat")]
public class AndroidX.Core.App.ShareCompat : Object {
    [RegisterAttribute("EXTRA_CALLING_ACTIVITY")]
public static string ExtraCallingActivity;
    [RegisterAttribute("EXTRA_CALLING_ACTIVITY_INTEROP")]
public static string ExtraCallingActivityInterop;
    [RegisterAttribute("EXTRA_CALLING_PACKAGE")]
public static string ExtraCallingPackage;
    [RegisterAttribute("EXTRA_CALLING_PACKAGE_INTEROP")]
public static string ExtraCallingPackageInterop;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ShareCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShareCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("configureMenuItem", "(Landroid/view/Menu;ILandroidx/core/app/ShareCompat$IntentBuilder;)V", "")]
public static void ConfigureMenuItem(IMenu menu, int menuItemId, IntentBuilder shareIntent);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("configureMenuItem", "(Landroid/view/MenuItem;Landroidx/core/app/ShareCompat$IntentBuilder;)V", "")]
public static void ConfigureMenuItem(IMenuItem item, IntentBuilder shareIntent);
    [RegisterAttribute("getCallingActivity", "(Landroid/app/Activity;)Landroid/content/ComponentName;", "")]
public static ComponentName GetCallingActivity(Activity calledActivity);
    [RegisterAttribute("getCallingPackage", "(Landroid/app/Activity;)Ljava/lang/String;", "")]
public static string GetCallingPackage(Activity calledActivity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/SharedElementCallback")]
public abstract class AndroidX.Core.App.SharedElementCallback : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_;
    [NullableAttribute("2")]
private static Delegate cb_onMapSharedElements_Ljava_util_List_Ljava_util_Map_;
    [NullableAttribute("2")]
private static Delegate cb_onRejectSharedElements_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroidx_core_app_SharedElementCallback_OnSharedElementsReadyListener_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SharedElementCallback(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharedElementCallback();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_Handler();
    private static IntPtr n_OnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElement, IntPtr native_viewToGlobalMatrix, IntPtr native_screenBounds);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCaptureSharedElementSnapshot", "(Landroid/view/View;Landroid/graphics/Matrix;Landroid/graphics/RectF;)Landroid/os/Parcelable;", "GetOnCaptureSharedElementSnapshot_Landroid_view_View_Landroid_graphics_Matrix_Landroid_graphics_RectF_Handler")]
public virtual IParcelable OnCaptureSharedElementSnapshot(View sharedElement, Matrix viewToGlobalMatrix, RectF screenBounds);
    private static Delegate GetOnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_Handler();
    private static IntPtr n_OnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_snapshot);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateSnapshotView", "(Landroid/content/Context;Landroid/os/Parcelable;)Landroid/view/View;", "GetOnCreateSnapshotView_Landroid_content_Context_Landroid_os_Parcelable_Handler")]
public virtual View OnCreateSnapshotView(Context context, IParcelable snapshot);
    private static Delegate GetOnMapSharedElements_Ljava_util_List_Ljava_util_Map_Handler();
    private static void n_OnMapSharedElements_Ljava_util_List_Ljava_util_Map_(IntPtr jnienv, IntPtr native__this, IntPtr native_names, IntPtr native_sharedElements);
    [RegisterAttribute("onMapSharedElements", "(Ljava/util/List;Ljava/util/Map;)V", "GetOnMapSharedElements_Ljava_util_List_Ljava_util_Map_Handler")]
public virtual void OnMapSharedElements(IList`1<string> names, IDictionary`2<string, View> sharedElements);
    private static Delegate GetOnRejectSharedElements_Ljava_util_List_Handler();
    private static void n_OnRejectSharedElements_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_rejectedSharedElements);
    [RegisterAttribute("onRejectSharedElements", "(Ljava/util/List;)V", "GetOnRejectSharedElements_Ljava_util_List_Handler")]
public virtual void OnRejectSharedElements(IList`1<View> rejectedSharedElements);
    private static Delegate GetOnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_OnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_sharedElementSnapshots);
    [RegisterAttribute("onSharedElementEnd", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V", "GetOnSharedElementEnd_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void OnSharedElementEnd(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IList`1<View> sharedElementSnapshots);
    private static Delegate GetOnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler();
    private static void n_OnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_sharedElementSnapshots);
    [RegisterAttribute("onSharedElementStart", "(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V", "GetOnSharedElementStart_Ljava_util_List_Ljava_util_List_Ljava_util_List_Handler")]
public virtual void OnSharedElementStart(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IList`1<View> sharedElementSnapshots);
    private static Delegate GetOnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroidx_core_app_SharedElementCallback_OnSharedElementsReadyListener_Handler();
    private static void n_OnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroidx_core_app_SharedElementCallback_OnSharedElementsReadyListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_sharedElementNames, IntPtr native_sharedElements, IntPtr native_listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("onSharedElementsArrived", "(Ljava/util/List;Ljava/util/List;Landroidx/core/app/SharedElementCallback$OnSharedElementsReadyListener;)V", "GetOnSharedElementsArrived_Ljava_util_List_Ljava_util_List_Landroidx_core_app_SharedElementCallback_OnSharedElementsReadyListener_Handler")]
public virtual void OnSharedElementsArrived(IList`1<string> sharedElementNames, IList`1<View> sharedElements, IOnSharedElementsReadyListener listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/SharedElementCallback")]
internal class AndroidX.Core.App.SharedElementCallbackInvoker : SharedElementCallback {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public SharedElementCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static SharedElementCallbackInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/TaskStackBuilder")]
public class AndroidX.Core.App.TaskStackBuilder : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int IntentCount { get; }
    internal TaskStackBuilder(IntPtr javaReference, JniHandleOwnership transfer);
    private static TaskStackBuilder();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getIntentCount", "()I", "")]
public int get_IntentCount();
    [RegisterAttribute("addNextIntent", "(Landroid/content/Intent;)Landroidx/core/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddNextIntent(Intent nextIntent);
    [RegisterAttribute("addNextIntentWithParentStack", "(Landroid/content/Intent;)Landroidx/core/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddNextIntentWithParentStack(Intent nextIntent);
    [RegisterAttribute("addParentStack", "(Landroid/app/Activity;)Landroidx/core/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(Activity sourceActivity);
    [RegisterAttribute("addParentStack", "(Landroid/content/ComponentName;)Landroidx/core/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(ComponentName sourceActivityName);
    [RegisterAttribute("addParentStack", "(Ljava/lang/Class;)Landroidx/core/app/TaskStackBuilder;", "")]
public TaskStackBuilder AddParentStack(Class sourceActivityClass);
    [RegisterAttribute("create", "(Landroid/content/Context;)Landroidx/core/app/TaskStackBuilder;", "")]
public static TaskStackBuilder Create(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute("editIntentAt", "(I)Landroid/content/Intent;", "")]
public Intent EditIntentAt(int index);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("from", "(Landroid/content/Context;)Landroidx/core/app/TaskStackBuilder;", "")]
public static TaskStackBuilder From(Context context);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getIntent", "(I)Landroid/content/Intent;", "")]
public Intent GetIntent(int index);
    [RegisterAttribute("getIntents", "()[Landroid/content/Intent;", "")]
public Intent[] GetIntents();
    [NullableContextAttribute("2")]
[RegisterAttribute("getPendingIntent", "(II)Landroid/app/PendingIntent;", "")]
public PendingIntent GetPendingIntent(int requestCode, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("getPendingIntent", "(IILandroid/os/Bundle;)Landroid/app/PendingIntent;", "")]
public PendingIntent GetPendingIntent(int requestCode, int flags, Bundle options);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("iterator", "()Ljava/util/Iterator;", "")]
public sealed virtual IIterator Iterator();
    [RegisterAttribute("startActivities", "()V", "")]
public void StartActivities();
    [NullableContextAttribute("2")]
[RegisterAttribute("startActivities", "(Landroid/os/Bundle;)V", "")]
public void StartActivities(Bundle options);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback", "", "AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallbackInvoker")]
public interface AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallback {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static IUnusedAppRestrictionsBackportCallback();
    [NullableContextAttribute("2")]
public static string get_Descriptor();
    [RegisterAttribute("onIsPermissionRevocationEnabledForAppResult", "(ZZ)V", "GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler:AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallbackInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnIsPermissionRevocationEnabledForAppResult(bool p0, bool p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback")]
internal class AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onIsPermissionRevocationEnabledForAppResult_ZZ;
    private IntPtr id_onIsPermissionRevocationEnabledForAppResult_ZZ;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IUnusedAppRestrictionsBackportCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IUnusedAppRestrictionsBackportCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IUnusedAppRestrictionsBackportCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler();
    private static void n_OnIsPermissionRevocationEnabledForAppResult_ZZ(IntPtr jnienv, IntPtr native__this, bool p0, bool p1);
    public sealed virtual void OnIsPermissionRevocationEnabledForAppResult(bool p0, bool p1);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IBinder AsBinder();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService", "", "AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportServiceInvoker")]
public interface AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportService {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static IUnusedAppRestrictionsBackportService();
    [NullableContextAttribute("2")]
public static string get_Descriptor();
    [NullableContextAttribute("2")]
[RegisterAttribute("isPermissionRevocationEnabledForApp", "(Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler:AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportServiceInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void IsPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService")]
internal class AndroidX.Core.App.UnusedAppRestrictions.IUnusedAppRestrictionsBackportServiceInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_;
    private IntPtr id_isPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IUnusedAppRestrictionsBackportServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IUnusedAppRestrictionsBackportServiceInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IUnusedAppRestrictionsBackportService GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler();
    private static void n_IsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
public sealed virtual void IsPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback p0);
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IBinder AsBinder();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportCallback : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static UnusedAppRestrictionsBackportCallback();
    public static string get_Descriptor();
}
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback")]
[ObsoleteAttribute("Use the 'UnusedAppRestrictionsBackportCallback' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportCallbackConsts : UnusedAppRestrictionsBackportCallback {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback$Default")]
public class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportCallbackDefault : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_onIsPermissionRevocationEnabledForAppResult_ZZ;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportCallbackDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportCallbackDefault();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    private static Delegate GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler();
    private static void n_OnIsPermissionRevocationEnabledForAppResult_ZZ(IntPtr jnienv, IntPtr native__this, bool success, bool isEnabled);
    [RegisterAttribute("onIsPermissionRevocationEnabledForAppResult", "(ZZ)V", "GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler")]
public virtual void OnIsPermissionRevocationEnabledForAppResult(bool success, bool isEnabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback$Stub")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportCallbackStub : Binder {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    [NullableAttribute("2")]
private static Delegate cb_onIsPermissionRevocationEnabledForAppResult_ZZ;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportCallbackStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportCallbackStub();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("2")]
[RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;", "")]
public static IUnusedAppRestrictionsBackportCallback AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler();
    private static void n_OnIsPermissionRevocationEnabledForAppResult_ZZ(IntPtr jnienv, IntPtr native__this, bool p0, bool p1);
    [RegisterAttribute("onIsPermissionRevocationEnabledForAppResult", "(ZZ)V", "GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler")]
public abstract virtual void OnIsPermissionRevocationEnabledForAppResult(bool p0, bool p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback$Stub")]
internal class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportCallbackStubInvoker : UnusedAppRestrictionsBackportCallbackStub {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public UnusedAppRestrictionsBackportCallbackStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportCallbackStubInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onIsPermissionRevocationEnabledForAppResult", "(ZZ)V", "GetOnIsPermissionRevocationEnabledForAppResult_ZZHandler")]
public virtual void OnIsPermissionRevocationEnabledForAppResult(bool p0, bool p1);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportService : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DESCRIPTOR")]
public static string Descriptor { get; }
    private static UnusedAppRestrictionsBackportService();
    public static string get_Descriptor();
}
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService")]
[ObsoleteAttribute("Use the 'UnusedAppRestrictionsBackportService' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportServiceConsts : UnusedAppRestrictionsBackportService {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService$Default")]
public class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportServiceDefault : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_isPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportServiceDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportServiceDefault();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    private static Delegate GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler();
    private static void n_IsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("isPermissionRevocationEnabledForApp", "(Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler")]
public virtual void IsPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService$Stub")]
public abstract class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportServiceStub : Binder {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_asBinder;
    [NullableAttribute("2")]
private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    [NullableAttribute("2")]
private static Delegate cb_isPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportServiceStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportServiceStub();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("2")]
[RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService;", "")]
public static IUnusedAppRestrictionsBackportService AsInterface(IBinder obj);
    private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    private static Delegate GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler();
    private static void n_IsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("isPermissionRevocationEnabledForApp", "(Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler")]
public abstract virtual void IsPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportService$Stub")]
internal class AndroidX.Core.App.UnusedAppRestrictions.UnusedAppRestrictionsBackportServiceStubInvoker : UnusedAppRestrictionsBackportServiceStub {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public UnusedAppRestrictionsBackportServiceStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportServiceStubInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("isPermissionRevocationEnabledForApp", "(Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabledForApp_Landroidx_core_app_unusedapprestrictions_IUnusedAppRestrictionsBackportCallback_Handler")]
public virtual void IsPermissionRevocationEnabledForApp(IUnusedAppRestrictionsBackportCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/ContentProviderCompat")]
public class AndroidX.Core.Content.ContentProviderCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ContentProviderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContentProviderCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("requireContext", "(Landroid/content/ContentProvider;)Landroid/content/Context;", "")]
public static Context RequireContext(ContentProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/ContentResolverCompat")]
public class AndroidX.Core.Content.ContentResolverCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ContentResolverCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContentResolverCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("query", "(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroid/os/CancellationSignal;)Landroid/database/Cursor;", "")]
public static ICursor Query(ContentResolver resolver, Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder, CancellationSignal cancellationSignal);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("query", "(Landroid/content/ContentResolver;Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Landroidx/core/os/CancellationSignal;)Landroid/database/Cursor;", "")]
public static ICursor Query(ContentResolver resolver, Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder, CancellationSignal cancellationSignal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/ContextCompat")]
public class AndroidX.Core.Content.ContextCompat : Object {
    [RegisterAttribute("RECEIVER_EXPORTED")]
public static int ReceiverExported;
    [RegisterAttribute("RECEIVER_NOT_EXPORTED")]
public static int ReceiverNotExported;
    [RegisterAttribute("RECEIVER_VISIBLE_TO_INSTANT_APPS")]
public static int ReceiverVisibleToInstantApps;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ContextCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContextCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static Permission CheckSelfPermission(Context context, string permission);
    [RegisterAttribute("createAttributionContext", "(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Context;", "")]
public static Context CreateAttributionContext(Context context, string attributionTag);
    [RegisterAttribute("createDeviceProtectedStorageContext", "(Landroid/content/Context;)Landroid/content/Context;", "")]
public static Context CreateDeviceProtectedStorageContext(Context context);
    [RegisterAttribute("getAttributionTag", "(Landroid/content/Context;)Ljava/lang/String;", "")]
public static string GetAttributionTag(Context context);
    [RegisterAttribute("getCodeCacheDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetCodeCacheDir(Context context);
    [RegisterAttribute("getColor", "(Landroid/content/Context;I)I", "")]
public static int GetColor(Context context, int id);
    [RegisterAttribute("getColorStateList", "(Landroid/content/Context;I)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetColorStateList(Context context, int id);
    [RegisterAttribute("getContextForLanguage", "(Landroid/content/Context;)Landroid/content/Context;", "")]
public static Context GetContextForLanguage(Context context);
    [RegisterAttribute("getDataDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetDataDir(Context context);
    [RegisterAttribute("getDisplayOrDefault", "(Landroid/content/Context;)Landroid/view/Display;", "")]
public static Display GetDisplayOrDefault(Context context);
    [RegisterAttribute("getDrawable", "(Landroid/content/Context;I)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Context context, int id);
    [RegisterAttribute("getExternalCacheDirs", "(Landroid/content/Context;)[Ljava/io/File;", "")]
public static File[] GetExternalCacheDirs(Context context);
    [RegisterAttribute("getExternalFilesDirs", "(Landroid/content/Context;Ljava/lang/String;)[Ljava/io/File;", "")]
public static File[] GetExternalFilesDirs(Context context, string type);
    [RegisterAttribute("getMainExecutor", "(Landroid/content/Context;)Ljava/util/concurrent/Executor;", "")]
public static IExecutor GetMainExecutor(Context context);
    [RegisterAttribute("getNoBackupFilesDir", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetNoBackupFilesDir(Context context);
    [RegisterAttribute("getObbDirs", "(Landroid/content/Context;)[Ljava/io/File;", "")]
public static File[] GetObbDirs(Context context);
    [RegisterAttribute("getString", "(Landroid/content/Context;I)Ljava/lang/String;", "")]
public static string GetString(Context context, int resId);
    [RegisterAttribute("getSystemService", "(Landroid/content/Context;Ljava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetSystemService(Context context, Class serviceClass);
    [RegisterAttribute("getSystemServiceName", "(Landroid/content/Context;Ljava/lang/Class;)Ljava/lang/String;", "")]
public static string GetSystemServiceName(Context context, Class serviceClass);
    [RegisterAttribute("isDeviceProtectedStorage", "(Landroid/content/Context;)Z", "")]
public static bool IsDeviceProtectedStorage(Context context);
    [RegisterAttribute("registerReceiver", "(Landroid/content/Context;Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;I)Landroid/content/Intent;", "")]
public static Intent RegisterReceiver(Context context, BroadcastReceiver receiver, IntentFilter filter, int flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("registerReceiver", "(Landroid/content/Context;Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;Ljava/lang/String;Landroid/os/Handler;I)Landroid/content/Intent;", "")]
public static Intent RegisterReceiver(Context context, BroadcastReceiver receiver, IntentFilter filter, string broadcastPermission, Handler scheduler, int flags);
    [RegisterAttribute("startActivities", "(Landroid/content/Context;[Landroid/content/Intent;)Z", "")]
public static bool StartActivities(Context context, Intent[] intents);
    [RegisterAttribute("startActivities", "(Landroid/content/Context;[Landroid/content/Intent;Landroid/os/Bundle;)Z", "")]
public static bool StartActivities(Context context, Intent[] intents, Bundle options);
    [RegisterAttribute("startActivity", "(Landroid/content/Context;Landroid/content/Intent;Landroid/os/Bundle;)V", "")]
public static void StartActivity(Context context, Intent intent, Bundle options);
    [RegisterAttribute("startForegroundService", "(Landroid/content/Context;Landroid/content/Intent;)V", "")]
public static void StartForegroundService(Context context, Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/FileProvider")]
public class AndroidX.Core.Content.FileProvider : ContentProvider {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_delete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_getType_Landroid_net_Uri_;
    [NullableAttribute("2")]
private static Delegate cb_insert_Landroid_net_Uri_Landroid_content_ContentValues_;
    [NullableAttribute("2")]
private static Delegate cb_onCreate;
    [NullableAttribute("2")]
private static Delegate cb_query_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_update_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FileProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(I)V", "")]
protected FileProvider(int resourceId);
    private static FileProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDelete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_Handler();
    private static int n_Delete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_selection, IntPtr native_selectionArgs);
    [RegisterAttribute("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "GetDelete_Landroid_net_Uri_Ljava_lang_String_arrayLjava_lang_String_Handler")]
public virtual int Delete(Uri uri, string selection, String[] selectionArgs);
    private static Delegate GetGetType_Landroid_net_Uri_Handler();
    private static IntPtr n_GetType_Landroid_net_Uri_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri);
    [RegisterAttribute("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "GetGetType_Landroid_net_Uri_Handler")]
public virtual string GetType(Uri uri);
    [RegisterAttribute("getUriForFile", "(Landroid/content/Context;Ljava/lang/String;Ljava/io/File;)Landroid/net/Uri;", "")]
public static Uri GetUriForFile(Context context, string authority, File file);
    [RegisterAttribute("getUriForFile", "(Landroid/content/Context;Ljava/lang/String;Ljava/io/File;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri GetUriForFile(Context context, string authority, File file, string displayName);
    private static Delegate GetInsert_Landroid_net_Uri_Landroid_content_ContentValues_Handler();
    private static IntPtr n_Insert_Landroid_net_Uri_Landroid_content_ContentValues_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_values);
    [RegisterAttribute("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "GetInsert_Landroid_net_Uri_Landroid_content_ContentValues_Handler")]
public virtual Uri Insert(Uri uri, ContentValues values);
    private static Delegate GetOnCreateHandler();
    private static bool n_OnCreate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreate", "()Z", "GetOnCreateHandler")]
public virtual bool OnCreate();
    private static Delegate GetQuery_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_Query_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_projection, IntPtr native_selection, IntPtr native_selectionArgs, IntPtr native_sortOrder);
    [RegisterAttribute("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "GetQuery_Landroid_net_Uri_arrayLjava_lang_String_Ljava_lang_String_arrayLjava_lang_String_Ljava_lang_String_Handler")]
public virtual ICursor Query(Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder);
    private static Delegate GetUpdate_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler();
    private static int n_Update_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_values, IntPtr native_selection, IntPtr native_selectionArgs);
    [RegisterAttribute("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "GetUpdate_Landroid_net_Uri_Landroid_content_ContentValues_Ljava_lang_String_arrayLjava_lang_String_Handler")]
public virtual int Update(Uri uri, ContentValues values, string selection, String[] selectionArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/IntentCompat")]
public class AndroidX.Core.Content.IntentCompat : Object {
    [RegisterAttribute("ACTION_CREATE_REMINDER")]
public static string ActionCreateReminder;
    [RegisterAttribute("CATEGORY_LEANBACK_LAUNCHER")]
public static string CategoryLeanbackLauncher;
    [RegisterAttribute("EXTRA_HTML_TEXT")]
public static string ExtraHtmlText;
    [RegisterAttribute("EXTRA_START_PLAYBACK")]
public static string ExtraStartPlayback;
    [RegisterAttribute("EXTRA_TIME")]
public static string ExtraTime;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal IntentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static IntentCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createManageUnusedAppRestrictionsIntent", "(Landroid/content/Context;Ljava/lang/String;)Landroid/content/Intent;", "")]
public static Intent CreateManageUnusedAppRestrictionsIntent(Context context, string packageName);
    [RegisterAttribute("getParcelableArrayExtra", "(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/Class;)[Landroid/os/Parcelable;", "")]
public static IParcelable[] GetParcelableArrayExtra(Intent in, string name, Class clazz);
    [RegisterAttribute("getParcelableArrayListExtra", "(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/ArrayList;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IList GetParcelableArrayListExtra(Intent in, string name, Class clazz);
    [RegisterAttribute("getParcelableExtra", "(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetParcelableExtra(Intent in, string name, Class clazz);
    [RegisterAttribute("getSerializableExtra", "(Landroid/content/Intent;Ljava/lang/String;Ljava/lang/Class;)Ljava/io/Serializable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetSerializableExtra(Intent in, string key, Class clazz);
    [RegisterAttribute("makeMainSelectorActivity", "(Ljava/lang/String;Ljava/lang/String;)Landroid/content/Intent;", "")]
public static Intent MakeMainSelectorActivity(string selectorAction, string selectorCategory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/IntentSanitizer")]
public class AndroidX.Core.Content.IntentSanitizer : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_sanitize_Landroid_content_Intent_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_sanitizeByFiltering_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_sanitizeByThrowing_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected IntentSanitizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static IntentSanitizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSanitize_Landroid_content_Intent_Landroidx_core_util_Consumer_Handler();
    private static IntPtr n_Sanitize_Landroid_content_Intent_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native__in, IntPtr native_penalty);
    [RegisterAttribute("sanitize", "(Landroid/content/Intent;Landroidx/core/util/Consumer;)Landroid/content/Intent;", "GetSanitize_Landroid_content_Intent_Landroidx_core_util_Consumer_Handler")]
public virtual Intent Sanitize(Intent in, IConsumer penalty);
    private static Delegate GetSanitizeByFiltering_Landroid_content_Intent_Handler();
    private static IntPtr n_SanitizeByFiltering_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native__in);
    [RegisterAttribute("sanitizeByFiltering", "(Landroid/content/Intent;)Landroid/content/Intent;", "GetSanitizeByFiltering_Landroid_content_Intent_Handler")]
public virtual Intent SanitizeByFiltering(Intent in);
    private static Delegate GetSanitizeByThrowing_Landroid_content_Intent_Handler();
    private static IntPtr n_SanitizeByThrowing_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native__in);
    [RegisterAttribute("sanitizeByThrowing", "(Landroid/content/Intent;)Landroid/content/Intent;", "GetSanitizeByThrowing_Landroid_content_Intent_Handler")]
public virtual Intent SanitizeByThrowing(Intent in);
}
[RegisterAttribute("androidx/core/content/OnConfigurationChangedProvider", "", "AndroidX.Core.Content.IOnConfigurationChangedProviderInvoker")]
public interface AndroidX.Core.Content.IOnConfigurationChangedProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnConfigurationChangedListener", "(Landroidx/core/util/Consumer;)V", "GetAddOnConfigurationChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.Content.IOnConfigurationChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnConfigurationChangedListener(IConsumer listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnConfigurationChangedListener", "(Landroidx/core/util/Consumer;)V", "GetRemoveOnConfigurationChangedListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.Content.IOnConfigurationChangedProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnConfigurationChangedListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/OnConfigurationChangedProvider")]
internal class AndroidX.Core.Content.IOnConfigurationChangedProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnConfigurationChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_addOnConfigurationChangedListener_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnConfigurationChangedListener_Landroidx_core_util_Consumer_;
    private IntPtr id_removeOnConfigurationChangedListener_Landroidx_core_util_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnConfigurationChangedProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnConfigurationChangedProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnConfigurationChangedProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnConfigurationChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_AddOnConfigurationChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnConfigurationChangedListener(IConsumer listener);
    private static Delegate GetRemoveOnConfigurationChangedListener_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveOnConfigurationChangedListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnConfigurationChangedListener(IConsumer listener);
}
[RegisterAttribute("androidx/core/content/OnTrimMemoryProvider", "", "AndroidX.Core.Content.IOnTrimMemoryProviderInvoker")]
public interface AndroidX.Core.Content.IOnTrimMemoryProvider {
    [NullableContextAttribute("1")]
[RegisterAttribute("addOnTrimMemoryListener", "(Landroidx/core/util/Consumer;)V", "GetAddOnTrimMemoryListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.Content.IOnTrimMemoryProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddOnTrimMemoryListener(IConsumer listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("removeOnTrimMemoryListener", "(Landroidx/core/util/Consumer;)V", "GetRemoveOnTrimMemoryListener_Landroidx_core_util_Consumer_Handler:AndroidX.Core.Content.IOnTrimMemoryProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveOnTrimMemoryListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/OnTrimMemoryProvider")]
internal class AndroidX.Core.Content.IOnTrimMemoryProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addOnTrimMemoryListener_Landroidx_core_util_Consumer_;
    private IntPtr id_addOnTrimMemoryListener_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_removeOnTrimMemoryListener_Landroidx_core_util_Consumer_;
    private IntPtr id_removeOnTrimMemoryListener_Landroidx_core_util_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnTrimMemoryProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnTrimMemoryProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnTrimMemoryProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddOnTrimMemoryListener_Landroidx_core_util_Consumer_Handler();
    private static void n_AddOnTrimMemoryListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void AddOnTrimMemoryListener(IConsumer listener);
    private static Delegate GetRemoveOnTrimMemoryListener_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveOnTrimMemoryListener_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual void RemoveOnTrimMemoryListener(IConsumer listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/LocusIdCompat")]
public class AndroidX.Core.Content.LocusIdCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Id { get; }
    internal LocusIdCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public LocusIdCompat(string id);
    private static LocusIdCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getId", "()Ljava/lang/String;", "")]
public string get_Id();
    [RegisterAttribute("toLocusId", "()Landroid/content/LocusId;", "")]
public LocusId ToLocusId();
    [RegisterAttribute("toLocusIdCompat", "(Landroid/content/LocusId;)Landroidx/core/content/LocusIdCompat;", "")]
public static LocusIdCompat ToLocusIdCompat(LocusId locusId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/MimeTypeFilter")]
public class AndroidX.Core.Content.MimeTypeFilter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MimeTypeFilter(IntPtr javaReference, JniHandleOwnership transfer);
    private static MimeTypeFilter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("matches", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
public static bool Matches(string mimeType, string filter);
    [NullableContextAttribute("2")]
[RegisterAttribute("matches", "(Ljava/lang/String;[Ljava/lang/String;)Ljava/lang/String;", "")]
public static string Matches(string mimeType, String[] filters);
    [RegisterAttribute("matches", "([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
public static string Matches(String[] mimeTypes, string filter);
    [RegisterAttribute("matchesMany", "([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;", "")]
public static String[] MatchesMany(String[] mimeTypes, string filter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/PackageManagerCompat")]
public class AndroidX.Core.Content.PackageManagerCompat : Object {
    [RegisterAttribute("ACTION_PERMISSION_REVOCATION_SETTINGS")]
public static string ActionPermissionRevocationSettings;
    [RegisterAttribute("LOG_TAG")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string LogTag;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PackageManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PackageManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("areUnusedAppRestrictionsAvailable", "(Landroid/content/pm/PackageManager;)Z", "")]
public static bool AreUnusedAppRestrictionsAvailable(PackageManager packageManager);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getPermissionRevocationVerifierApp", "(Landroid/content/pm/PackageManager;)Ljava/lang/String;", "")]
public static string GetPermissionRevocationVerifierApp(PackageManager packageManager);
    [RegisterAttribute("getUnusedAppRestrictionsStatus", "(Landroid/content/Context;)Lcom/google/common/util/concurrent/ListenableFuture;", "")]
public static IListenableFuture GetUnusedAppRestrictionsStatus(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/PermissionChecker")]
public class AndroidX.Core.Content.PermissionChecker : Object {
    [RegisterAttribute("PERMISSION_DENIED")]
public static int PermissionDenied;
    [RegisterAttribute("PERMISSION_DENIED_APP_OP")]
public static int PermissionDeniedAppOp;
    [RegisterAttribute("PERMISSION_GRANTED")]
public static int PermissionGranted;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PermissionChecker(IntPtr javaReference, JniHandleOwnership transfer);
    private static PermissionChecker();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkCallingOrSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static int CheckCallingOrSelfPermission(Context context, string permission);
    [RegisterAttribute("checkCallingPermission", "(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)I", "")]
public static int CheckCallingPermission(Context context, string permission, string packageName);
    [RegisterAttribute("checkPermission", "(Landroid/content/Context;Ljava/lang/String;IILjava/lang/String;)I", "")]
public static int CheckPermission(Context context, string permission, int pid, int uid, string packageName);
    [RegisterAttribute("checkSelfPermission", "(Landroid/content/Context;Ljava/lang/String;)I", "")]
public static int CheckSelfPermission(Context context, string permission);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/content/pm/ActivityInfoCompat")]
public class AndroidX.Core.Content.PM.ActivityInfoCompat : Object {
    [RegisterAttribute("CONFIG_UI_MODE")]
[ObsoleteAttribute("deprecated")]
public static int ConfigUiMode;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ActivityInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/PackageInfoCompat")]
public class AndroidX.Core.Content.PM.PackageInfoCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PackageInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PackageInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLongVersionCode", "(Landroid/content/pm/PackageInfo;)J", "")]
public static long GetLongVersionCode(PackageInfo info);
    [RegisterAttribute("getSignatures", "(Landroid/content/pm/PackageManager;Ljava/lang/String;)Ljava/util/List;", "")]
public static IList`1<Signature> GetSignatures(PackageManager packageManager, string packageName);
    [RegisterAttribute("hasSignatures", "(Landroid/content/pm/PackageManager;Ljava/lang/String;Ljava/util/Map;Z)Z", "")]
public static bool HasSignatures(PackageManager packageManager, string packageName, IDictionary`2<Byte[], Integer> certificatesAndType, bool matchExact);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/PermissionInfoCompat")]
public class AndroidX.Core.Content.PM.PermissionInfoCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PermissionInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PermissionInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getProtection", "(Landroid/content/pm/PermissionInfo;)I", "")]
public static int GetProtection(PermissionInfo permissionInfo);
    [RegisterAttribute("getProtectionFlags", "(Landroid/content/pm/PermissionInfo;)I", "")]
public static int GetProtectionFlags(PermissionInfo permissionInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/pm/ShortcutInfoChangeListener")]
public abstract class AndroidX.Core.Content.PM.ShortcutInfoChangeListener : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onAllShortcutsRemoved;
    [NullableAttribute("2")]
private static Delegate cb_onShortcutAdded_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onShortcutRemoved_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onShortcutUpdated_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onShortcutUsageReported_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ShortcutInfoChangeListener(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShortcutInfoChangeListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnAllShortcutsRemovedHandler();
    private static void n_OnAllShortcutsRemoved(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAllShortcutsRemoved", "()V", "GetOnAllShortcutsRemovedHandler")]
public virtual void OnAllShortcutsRemoved();
    private static Delegate GetOnShortcutAdded_Ljava_util_List_Handler();
    private static void n_OnShortcutAdded_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcuts);
    [RegisterAttribute("onShortcutAdded", "(Ljava/util/List;)V", "GetOnShortcutAdded_Ljava_util_List_Handler")]
public virtual void OnShortcutAdded(IList`1<ShortcutInfoCompat> shortcuts);
    private static Delegate GetOnShortcutRemoved_Ljava_util_List_Handler();
    private static void n_OnShortcutRemoved_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcutIds);
    [RegisterAttribute("onShortcutRemoved", "(Ljava/util/List;)V", "GetOnShortcutRemoved_Ljava_util_List_Handler")]
public virtual void OnShortcutRemoved(IList`1<string> shortcutIds);
    private static Delegate GetOnShortcutUpdated_Ljava_util_List_Handler();
    private static void n_OnShortcutUpdated_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcuts);
    [RegisterAttribute("onShortcutUpdated", "(Ljava/util/List;)V", "GetOnShortcutUpdated_Ljava_util_List_Handler")]
public virtual void OnShortcutUpdated(IList`1<ShortcutInfoCompat> shortcuts);
    private static Delegate GetOnShortcutUsageReported_Ljava_util_List_Handler();
    private static void n_OnShortcutUsageReported_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcutIds);
    [RegisterAttribute("onShortcutUsageReported", "(Ljava/util/List;)V", "GetOnShortcutUsageReported_Ljava_util_List_Handler")]
public virtual void OnShortcutUsageReported(IList`1<string> shortcutIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/ShortcutInfoChangeListener")]
internal class AndroidX.Core.Content.PM.ShortcutInfoChangeListenerInvoker : ShortcutInfoChangeListener {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ShortcutInfoChangeListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ShortcutInfoChangeListenerInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/ShortcutInfoCompat")]
public class AndroidX.Core.Content.PM.ShortcutInfoCompat : Object {
    [RegisterAttribute("SURFACE_LAUNCHER")]
public static int SurfaceLauncher;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getActivity;
    private static Delegate cb_getCategories;
    private static Delegate cb_getDisabledMessage;
    private static Delegate cb_getDisabledReason;
    private static Delegate cb_getExcludedFromSurfaces;
    private static Delegate cb_getExtras;
    private static Delegate cb_hasKeyFieldsOnly;
    private static Delegate cb_getIcon;
    private static Delegate cb_getId;
    private static Delegate cb_getIntent;
    private static Delegate cb_isCached;
    private static Delegate cb_isDeclaredInManifest;
    private static Delegate cb_isDynamic;
    private static Delegate cb_isEnabled;
    private static Delegate cb_isImmutable;
    private static Delegate cb_isPinned;
    private static Delegate cb_getLastChangedTimestamp;
    private static Delegate cb_getLocusId;
    private static Delegate cb_getLongLabel;
    private static Delegate cb_getPackage;
    private static Delegate cb_getRank;
    private static Delegate cb_getShortLabel;
    private static Delegate cb_getTransientExtras;
    private static Delegate cb_getUserHandle;
    private static Delegate cb_getIntents;
    private static Delegate cb_isExcludedFromSurfaces_I;
    private static Delegate cb_toShortcutInfo;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ComponentName Activity { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public ICollection`1<string> Categories { get; }
    public ICharSequence DisabledMessageFormatted { get; }
    public string DisabledMessage { get; }
    public int DisabledReason { get; }
    public int ExcludedFromSurfaces { get; }
    public PersistableBundle Extras { get; }
    public bool HasKeyFieldsOnly { get; }
    public IconCompat Icon { get; }
    [NullableAttribute("1")]
public string Id { get; }
    [NullableAttribute("1")]
public Intent Intent { get; }
    public bool IsCached { get; }
    public bool IsDeclaredInManifest { get; }
    public bool IsDynamic { get; }
    public bool IsEnabled { get; }
    public bool IsImmutable { get; }
    public bool IsPinned { get; }
    public long LastChangedTimestamp { get; }
    public LocusIdCompat LocusId { get; }
    public ICharSequence LongLabelFormatted { get; }
    public string LongLabel { get; }
    [NullableAttribute("1")]
public string Package { get; }
    public int Rank { get; }
    [NullableAttribute("1")]
public ICharSequence ShortLabelFormatted { get; }
    public string ShortLabel { get; }
    public Bundle TransientExtras { get; }
    public UserHandle UserHandle { get; }
    protected ShortcutInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShortcutInfoCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetActivityHandler();
    private static IntPtr n_GetActivity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActivity", "()Landroid/content/ComponentName;", "GetGetActivityHandler")]
public virtual ComponentName get_Activity();
    [NullableContextAttribute("1")]
private static Delegate GetGetCategoriesHandler();
    private static IntPtr n_GetCategories(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCategories", "()Ljava/util/Set;", "GetGetCategoriesHandler")]
public virtual ICollection`1<string> get_Categories();
    [NullableContextAttribute("1")]
private static Delegate GetGetDisabledMessageHandler();
    private static IntPtr n_GetDisabledMessage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDisabledMessage", "()Ljava/lang/CharSequence;", "GetGetDisabledMessageHandler")]
public virtual ICharSequence get_DisabledMessageFormatted();
    public string get_DisabledMessage();
    [NullableContextAttribute("1")]
private static Delegate GetGetDisabledReasonHandler();
    private static int n_GetDisabledReason(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDisabledReason", "()I", "GetGetDisabledReasonHandler")]
public virtual int get_DisabledReason();
    [NullableContextAttribute("1")]
private static Delegate GetGetExcludedFromSurfacesHandler();
    private static int n_GetExcludedFromSurfaces(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExcludedFromSurfaces", "()I", "GetGetExcludedFromSurfacesHandler")]
public virtual int get_ExcludedFromSurfaces();
    [NullableContextAttribute("1")]
private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/PersistableBundle;", "GetGetExtrasHandler")]
public virtual PersistableBundle get_Extras();
    [NullableContextAttribute("1")]
private static Delegate GetHasKeyFieldsOnlyHandler();
    private static bool n_HasKeyFieldsOnly(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasKeyFieldsOnly", "()Z", "GetHasKeyFieldsOnlyHandler")]
public virtual bool get_HasKeyFieldsOnly();
    [NullableContextAttribute("1")]
private static Delegate GetGetIconHandler();
    private static IntPtr n_GetIcon(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getIcon", "()Landroidx/core/graphics/drawable/IconCompat;", "GetGetIconHandler")]
public virtual IconCompat get_Icon();
    [NullableContextAttribute("1")]
private static Delegate GetGetIdHandler();
    private static IntPtr n_GetId(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getId", "()Ljava/lang/String;", "GetGetIdHandler")]
public virtual string get_Id();
    [NullableContextAttribute("1")]
private static Delegate GetGetIntentHandler();
    private static IntPtr n_GetIntent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getIntent", "()Landroid/content/Intent;", "GetGetIntentHandler")]
public virtual Intent get_Intent();
    [NullableContextAttribute("1")]
private static Delegate GetIsCachedHandler();
    private static bool n_IsCached(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isCached", "()Z", "GetIsCachedHandler")]
public virtual bool get_IsCached();
    [NullableContextAttribute("1")]
private static Delegate GetIsDeclaredInManifestHandler();
    private static bool n_IsDeclaredInManifest(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isDeclaredInManifest", "()Z", "GetIsDeclaredInManifestHandler")]
public virtual bool get_IsDeclaredInManifest();
    [NullableContextAttribute("1")]
private static Delegate GetIsDynamicHandler();
    private static bool n_IsDynamic(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isDynamic", "()Z", "GetIsDynamicHandler")]
public virtual bool get_IsDynamic();
    [NullableContextAttribute("1")]
private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_IsEnabled();
    [NullableContextAttribute("1")]
private static Delegate GetIsImmutableHandler();
    private static bool n_IsImmutable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isImmutable", "()Z", "GetIsImmutableHandler")]
public virtual bool get_IsImmutable();
    [NullableContextAttribute("1")]
private static Delegate GetIsPinnedHandler();
    private static bool n_IsPinned(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isPinned", "()Z", "GetIsPinnedHandler")]
public virtual bool get_IsPinned();
    [NullableContextAttribute("1")]
private static Delegate GetGetLastChangedTimestampHandler();
    private static long n_GetLastChangedTimestamp(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLastChangedTimestamp", "()J", "GetGetLastChangedTimestampHandler")]
public virtual long get_LastChangedTimestamp();
    [NullableContextAttribute("1")]
private static Delegate GetGetLocusIdHandler();
    private static IntPtr n_GetLocusId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLocusId", "()Landroidx/core/content/LocusIdCompat;", "GetGetLocusIdHandler")]
public virtual LocusIdCompat get_LocusId();
    [NullableContextAttribute("1")]
private static Delegate GetGetLongLabelHandler();
    private static IntPtr n_GetLongLabel(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLongLabel", "()Ljava/lang/CharSequence;", "GetGetLongLabelHandler")]
public virtual ICharSequence get_LongLabelFormatted();
    public string get_LongLabel();
    [NullableContextAttribute("1")]
private static Delegate GetGetPackageHandler();
    private static IntPtr n_GetPackage(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getPackage", "()Ljava/lang/String;", "GetGetPackageHandler")]
public virtual string get_Package();
    [NullableContextAttribute("1")]
private static Delegate GetGetRankHandler();
    private static int n_GetRank(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRank", "()I", "GetGetRankHandler")]
public virtual int get_Rank();
    [NullableContextAttribute("1")]
private static Delegate GetGetShortLabelHandler();
    private static IntPtr n_GetShortLabel(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getShortLabel", "()Ljava/lang/CharSequence;", "GetGetShortLabelHandler")]
public virtual ICharSequence get_ShortLabelFormatted();
    public string get_ShortLabel();
    [NullableContextAttribute("1")]
private static Delegate GetGetTransientExtrasHandler();
    private static IntPtr n_GetTransientExtras(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getTransientExtras", "()Landroid/os/Bundle;", "GetGetTransientExtrasHandler")]
public virtual Bundle get_TransientExtras();
    [NullableContextAttribute("1")]
private static Delegate GetGetUserHandleHandler();
    private static IntPtr n_GetUserHandle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getUserHandle", "()Landroid/os/UserHandle;", "GetGetUserHandleHandler")]
public virtual UserHandle get_UserHandle();
    [NullableContextAttribute("1")]
private static Delegate GetGetIntentsHandler();
    private static IntPtr n_GetIntents(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getIntents", "()[Landroid/content/Intent;", "GetGetIntentsHandler")]
public virtual Intent[] GetIntents();
    [NullableContextAttribute("1")]
private static Delegate GetIsExcludedFromSurfaces_IHandler();
    private static bool n_IsExcludedFromSurfaces_I(IntPtr jnienv, IntPtr native__this, int surface);
    [RegisterAttribute("isExcludedFromSurfaces", "(I)Z", "GetIsExcludedFromSurfaces_IHandler")]
public virtual bool IsExcludedFromSurfaces(int surface);
    [NullableContextAttribute("1")]
private static Delegate GetToShortcutInfoHandler();
    private static IntPtr n_ToShortcutInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toShortcutInfo", "()Landroid/content/pm/ShortcutInfo;", "GetToShortcutInfoHandler")]
public virtual ShortcutInfo ToShortcutInfo();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/pm/ShortcutInfoCompatSaver")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract class AndroidX.Core.Content.PM.ShortcutInfoCompatSaver : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getShortcuts;
    [NullableAttribute("2")]
private static Delegate cb_addShortcuts_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_removeAllShortcuts;
    [NullableAttribute("2")]
private static Delegate cb_removeShortcuts_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<ShortcutInfoCompat> Shortcuts { get; }
    protected ShortcutInfoCompatSaver(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShortcutInfoCompatSaver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetShortcutsHandler();
    private static IntPtr n_GetShortcuts(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getShortcuts", "()Ljava/util/List;", "GetGetShortcutsHandler")]
public virtual IList`1<ShortcutInfoCompat> get_Shortcuts();
    private static Delegate GetAddShortcuts_Ljava_util_List_Handler();
    private static IntPtr n_AddShortcuts_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcuts);
    [NullableContextAttribute("2")]
[RegisterAttribute("addShortcuts", "(Ljava/util/List;)Ljava/lang/Object;", "GetAddShortcuts_Ljava_util_List_Handler")]
public abstract virtual Object AddShortcuts(IList`1<ShortcutInfoCompat> shortcuts);
    private static Delegate GetRemoveAllShortcutsHandler();
    private static IntPtr n_RemoveAllShortcuts(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeAllShortcuts", "()Ljava/lang/Object;", "GetRemoveAllShortcutsHandler")]
public abstract virtual Object RemoveAllShortcuts();
    private static Delegate GetRemoveShortcuts_Ljava_util_List_Handler();
    private static IntPtr n_RemoveShortcuts_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_shortcutIds);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeShortcuts", "(Ljava/util/List;)Ljava/lang/Object;", "GetRemoveShortcuts_Ljava_util_List_Handler")]
public abstract virtual Object RemoveShortcuts(IList`1<string> shortcutIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/ShortcutInfoCompatSaver")]
internal class AndroidX.Core.Content.PM.ShortcutInfoCompatSaverInvoker : ShortcutInfoCompatSaver {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ShortcutInfoCompatSaverInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ShortcutInfoCompatSaverInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("addShortcuts", "(Ljava/util/List;)Ljava/lang/Object;", "GetAddShortcuts_Ljava_util_List_Handler")]
public virtual Object AddShortcuts(IList`1<ShortcutInfoCompat> shortcuts);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeAllShortcuts", "()Ljava/lang/Object;", "GetRemoveAllShortcutsHandler")]
public virtual Object RemoveAllShortcuts();
    [NullableContextAttribute("2")]
[RegisterAttribute("removeShortcuts", "(Ljava/util/List;)Ljava/lang/Object;", "GetRemoveShortcuts_Ljava_util_List_Handler")]
public virtual Object RemoveShortcuts(IList`1<string> shortcutIds);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/pm/ShortcutManagerCompat")]
public class AndroidX.Core.Content.PM.ShortcutManagerCompat : Object {
    [RegisterAttribute("EXTRA_SHORTCUT_ID")]
public static string ExtraShortcutId;
    [RegisterAttribute("FLAG_MATCH_CACHED")]
public static int FlagMatchCached;
    [RegisterAttribute("FLAG_MATCH_DYNAMIC")]
public static int FlagMatchDynamic;
    [RegisterAttribute("FLAG_MATCH_MANIFEST")]
public static int FlagMatchManifest;
    [RegisterAttribute("FLAG_MATCH_PINNED")]
public static int FlagMatchPinned;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ShortcutManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShortcutManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addDynamicShortcuts", "(Landroid/content/Context;Ljava/util/List;)Z", "")]
public static bool AddDynamicShortcuts(Context context, IList`1<ShortcutInfoCompat> shortcutInfoList);
    [RegisterAttribute("createShortcutResultIntent", "(Landroid/content/Context;Landroidx/core/content/pm/ShortcutInfoCompat;)Landroid/content/Intent;", "")]
public static Intent CreateShortcutResultIntent(Context context, ShortcutInfoCompat shortcut);
    [RegisterAttribute("disableShortcuts", "(Landroid/content/Context;Ljava/util/List;Ljava/lang/CharSequence;)V", "")]
public static void DisableShortcuts(Context context, IList`1<string> shortcutIds, ICharSequence disabledMessage);
    public static void DisableShortcuts(Context context, IList`1<string> shortcutIds, string disabledMessage);
    [RegisterAttribute("enableShortcuts", "(Landroid/content/Context;Ljava/util/List;)V", "")]
public static void EnableShortcuts(Context context, IList`1<ShortcutInfoCompat> shortcutInfoList);
    [RegisterAttribute("getDynamicShortcuts", "(Landroid/content/Context;)Ljava/util/List;", "")]
public static IList`1<ShortcutInfoCompat> GetDynamicShortcuts(Context context);
    [RegisterAttribute("getIconMaxHeight", "(Landroid/content/Context;)I", "")]
public static int GetIconMaxHeight(Context context);
    [RegisterAttribute("getIconMaxWidth", "(Landroid/content/Context;)I", "")]
public static int GetIconMaxWidth(Context context);
    [RegisterAttribute("getMaxShortcutCountPerActivity", "(Landroid/content/Context;)I", "")]
public static int GetMaxShortcutCountPerActivity(Context context);
    [RegisterAttribute("getShortcuts", "(Landroid/content/Context;I)Ljava/util/List;", "")]
public static IList`1<ShortcutInfoCompat> GetShortcuts(Context context, int matchFlags);
    [RegisterAttribute("isRateLimitingActive", "(Landroid/content/Context;)Z", "")]
public static bool IsRateLimitingActive(Context context);
    [RegisterAttribute("isRequestPinShortcutSupported", "(Landroid/content/Context;)Z", "")]
public static bool IsRequestPinShortcutSupported(Context context);
    [RegisterAttribute("pushDynamicShortcut", "(Landroid/content/Context;Landroidx/core/content/pm/ShortcutInfoCompat;)Z", "")]
public static bool PushDynamicShortcut(Context context, ShortcutInfoCompat shortcut);
    [RegisterAttribute("removeAllDynamicShortcuts", "(Landroid/content/Context;)V", "")]
public static void RemoveAllDynamicShortcuts(Context context);
    [RegisterAttribute("removeDynamicShortcuts", "(Landroid/content/Context;Ljava/util/List;)V", "")]
public static void RemoveDynamicShortcuts(Context context, IList`1<string> shortcutIds);
    [RegisterAttribute("removeLongLivedShortcuts", "(Landroid/content/Context;Ljava/util/List;)V", "")]
public static void RemoveLongLivedShortcuts(Context context, IList`1<string> shortcutIds);
    [RegisterAttribute("reportShortcutUsed", "(Landroid/content/Context;Ljava/lang/String;)V", "")]
public static void ReportShortcutUsed(Context context, string shortcutId);
    [RegisterAttribute("requestPinShortcut", "(Landroid/content/Context;Landroidx/core/content/pm/ShortcutInfoCompat;Landroid/content/IntentSender;)Z", "")]
public static bool RequestPinShortcut(Context context, ShortcutInfoCompat shortcut, IntentSender callback);
    [RegisterAttribute("setDynamicShortcuts", "(Landroid/content/Context;Ljava/util/List;)Z", "")]
public static bool SetDynamicShortcuts(Context context, IList`1<ShortcutInfoCompat> shortcutInfoList);
    [RegisterAttribute("updateShortcuts", "(Landroid/content/Context;Ljava/util/List;)Z", "")]
public static bool UpdateShortcuts(Context context, IList`1<ShortcutInfoCompat> shortcutInfoList);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/pm/ShortcutXmlParser")]
public class AndroidX.Core.Content.PM.ShortcutXmlParser : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ShortcutXmlParser(IntPtr javaReference, JniHandleOwnership transfer);
    private static ShortcutXmlParser();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getShortcutIds", "(Landroid/content/Context;)Ljava/util/List;", "")]
public static IList`1<string> GetShortcutIds(Context context);
    [RegisterAttribute("parseShortcutIds", "(Lorg/xmlpull/v1/XmlPullParser;)Ljava/util/List;", "")]
public static IList`1<string> ParseShortcutIds(XmlReader parser);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/res/CamColor")]
public class AndroidX.Core.Content.Resources.CamColor : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CamColor(IntPtr javaReference, JniHandleOwnership transfer);
    private static CamColor();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getM3HCTfromColor", "(I[F)V", "")]
public static void GetM3HCTfromColor(int color, Single[] outM3HCT);
    [RegisterAttribute("toColor", "(FFF)I", "")]
public static int ToColor(float hue, float chroma, float lStar);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/res/ColorStateListInflaterCompat")]
public class AndroidX.Core.Content.Resources.ColorStateListInflaterCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ColorStateListInflaterCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ColorStateListInflaterCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createFromXml", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList CreateFromXml(Resources r, XmlReader parser, Theme theme);
    [RegisterAttribute("createFromXmlInner", "(Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList CreateFromXmlInner(Resources r, XmlReader parser, IAttributeSet attrs, Theme theme);
    [NullableContextAttribute("2")]
[RegisterAttribute("inflate", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList Inflate(Resources resources, int resId, Theme theme);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/res/ComplexColorCompat")]
public class AndroidX.Core.Content.Resources.ComplexColorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int Color { get; public set; }
    public bool IsGradient { get; }
    public bool IsStateful { get; }
    [NullableAttribute("2")]
public Shader Shader { get; }
    internal ComplexColorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ComplexColorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getColor", "()I", "")]
public int get_Color();
    [RegisterAttribute("setColor", "(I)V", "")]
public void set_Color(int value);
    [RegisterAttribute("isGradient", "()Z", "")]
public bool get_IsGradient();
    [RegisterAttribute("isStateful", "()Z", "")]
public bool get_IsStateful();
    [NullableContextAttribute("2")]
[RegisterAttribute("getShader", "()Landroid/graphics/Shader;", "")]
public Shader get_Shader();
    [NullableContextAttribute("2")]
[RegisterAttribute("inflate", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroidx/core/content/res/ComplexColorCompat;", "")]
public static ComplexColorCompat Inflate(Resources resources, int resId, Theme theme);
    [NullableContextAttribute("2")]
[RegisterAttribute("onStateChanged", "([I)Z", "")]
public bool OnStateChanged(Int32[] stateSet);
    [RegisterAttribute("willDraw", "()Z", "")]
public bool WillDraw();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/res/ConfigurationHelper")]
public class AndroidX.Core.Content.Resources.ConfigurationHelper : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ConfigurationHelper(IntPtr javaReference, JniHandleOwnership transfer);
    private static ConfigurationHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDensityDpi", "(Landroid/content/res/Resources;)I", "")]
public static int GetDensityDpi(Resources resources);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/res/FontResourcesParserCompat")]
public class AndroidX.Core.Content.Resources.FontResourcesParserCompat : Object {
    [RegisterAttribute("FETCH_STRATEGY_ASYNC")]
public static int FetchStrategyAsync;
    [RegisterAttribute("FETCH_STRATEGY_BLOCKING")]
public static int FetchStrategyBlocking;
    [RegisterAttribute("INFINITE_TIMEOUT_VALUE")]
public static int InfiniteTimeoutValue;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FontResourcesParserCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static FontResourcesParserCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("parse", "(Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources;)Landroidx/core/content/res/FontResourcesParserCompat$FamilyResourceEntry;", "")]
public static IFamilyResourceEntry Parse(XmlReader parser, Resources resources);
    [RegisterAttribute("readCerts", "(Landroid/content/res/Resources;I)Ljava/util/List;", "")]
public static IList`1<IList`1<Byte[]>> ReadCerts(Resources resources, int certsId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/res/ResourcesCompat")]
public class AndroidX.Core.Content.Resources.ResourcesCompat : Object {
    [RegisterAttribute("ID_NULL")]
public static int IdNull;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ResourcesCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ResourcesCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("clearCachesForTheme", "(Landroid/content/res/Resources$Theme;)V", "")]
public static void ClearCachesForTheme(Theme theme);
    [RegisterAttribute("getCachedFont", "(Landroid/content/Context;I)Landroid/graphics/Typeface;", "")]
public static Typeface GetCachedFont(Context context, int id);
    [RegisterAttribute("getColor", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)I", "")]
public static int GetColor(Resources res, int id, Theme theme);
    [NullableContextAttribute("2")]
[RegisterAttribute("getColorStateList", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetColorStateList(Resources res, int id, Theme theme);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawable", "(Landroid/content/res/Resources;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(Resources res, int id, Theme theme);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawableForDensity", "(Landroid/content/res/Resources;IILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawableForDensity(Resources res, int id, int density, Theme theme);
    [RegisterAttribute("getFloat", "(Landroid/content/res/Resources;I)F", "")]
public static float GetFloat(Resources res, int id);
    [RegisterAttribute("getFont", "(Landroid/content/Context;I)Landroid/graphics/Typeface;", "")]
public static Typeface GetFont(Context context, int id);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getFont", "(Landroid/content/Context;ILandroid/util/TypedValue;ILandroidx/core/content/res/ResourcesCompat$FontCallback;)Landroid/graphics/Typeface;", "")]
public static Typeface GetFont(Context context, int id, TypedValue value, int style, FontCallback fontCallback);
    [RegisterAttribute("getFont", "(Landroid/content/Context;ILandroidx/core/content/res/ResourcesCompat$FontCallback;Landroid/os/Handler;)V", "")]
public static void GetFont(Context context, int id, FontCallback fontCallback, Handler handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/content/res/TypedArrayUtils")]
public class AndroidX.Core.Content.Resources.TypedArrayUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TypedArrayUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static TypedArrayUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAttr", "(Landroid/content/Context;II)I", "")]
public static int GetAttr(Context context, int attr, int fallbackAttr);
    [RegisterAttribute("getBoolean", "(Landroid/content/res/TypedArray;IIZ)Z", "")]
public static bool GetBoolean(TypedArray a, int index, int fallbackIndex, bool defaultValue);
    [RegisterAttribute("getDrawable", "(Landroid/content/res/TypedArray;II)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetDrawable(TypedArray a, int index, int fallbackIndex);
    [RegisterAttribute("getInt", "(Landroid/content/res/TypedArray;III)I", "")]
public static int GetInt(TypedArray a, int index, int fallbackIndex, int defaultValue);
    [RegisterAttribute("getNamedBoolean", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IZ)Z", "")]
public static bool GetNamedBoolean(TypedArray a, XmlReader parser, string attrName, int resId, bool defaultValue);
    [RegisterAttribute("getNamedColor", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I", "")]
public static int GetNamedColor(TypedArray a, XmlReader parser, string attrName, int resId, int defaultValue);
    [RegisterAttribute("getNamedColorStateList", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;I)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetNamedColorStateList(TypedArray a, XmlReader parser, Theme theme, string attrName, int resId);
    [RegisterAttribute("getNamedComplexColor", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Landroid/content/res/Resources$Theme;Ljava/lang/String;II)Landroidx/core/content/res/ComplexColorCompat;", "")]
public static ComplexColorCompat GetNamedComplexColor(TypedArray a, XmlReader parser, Theme theme, string attrName, int resId, int defaultValue);
    [RegisterAttribute("getNamedFloat", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;IF)F", "")]
public static float GetNamedFloat(TypedArray a, XmlReader parser, string attrName, int resId, float defaultValue);
    [RegisterAttribute("getNamedInt", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I", "")]
public static int GetNamedInt(TypedArray a, XmlReader parser, string attrName, int resId, int defaultValue);
    [RegisterAttribute("getNamedResourceId", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;II)I", "")]
public static int GetNamedResourceId(TypedArray a, XmlReader parser, string attrName, int resId, int defaultValue);
    [RegisterAttribute("getNamedString", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)Ljava/lang/String;", "")]
public static string GetNamedString(TypedArray a, XmlReader parser, string attrName, int resId);
    [RegisterAttribute("getResourceId", "(Landroid/content/res/TypedArray;III)I", "")]
public static int GetResourceId(TypedArray a, int index, int fallbackIndex, int defaultValue);
    [RegisterAttribute("getString", "(Landroid/content/res/TypedArray;II)Ljava/lang/String;", "")]
public static string GetString(TypedArray a, int index, int fallbackIndex);
    [RegisterAttribute("getText", "(Landroid/content/res/TypedArray;II)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetTextFormatted(TypedArray a, int index, int fallbackIndex);
    public static string GetText(TypedArray a, int index, int fallbackIndex);
    [RegisterAttribute("getTextArray", "(Landroid/content/res/TypedArray;II)[Ljava/lang/CharSequence;", "")]
public static ICharSequence[] GetTextArrayFormatted(TypedArray a, int index, int fallbackIndex);
    public static String[] GetTextArray(TypedArray a, int index, int fallbackIndex);
    [RegisterAttribute("hasAttribute", "(Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;)Z", "")]
public static bool HasAttribute(XmlReader parser, string attrName);
    [RegisterAttribute("obtainAttributes", "(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;", "")]
public static TypedArray ObtainAttributes(Resources res, Theme theme, IAttributeSet set, Int32[] attrs);
    [RegisterAttribute("peekNamedValue", "(Landroid/content/res/TypedArray;Lorg/xmlpull/v1/XmlPullParser;Ljava/lang/String;I)Landroid/util/TypedValue;", "")]
public static TypedValue PeekNamedValue(TypedArray a, XmlReader parser, string attrName, int resId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/content/SharedPreferencesCompat")]
public class AndroidX.Core.Content.SharedPreferencesCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SharedPreferencesCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharedPreferencesCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/UnusedAppRestrictionsBackportCallback")]
public class AndroidX.Core.Content.UnusedAppRestrictionsBackportCallback : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onResult_ZZ;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportCallback(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/core/app/unusedapprestrictions/IUnusedAppRestrictionsBackportCallback;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public UnusedAppRestrictionsBackportCallback(IUnusedAppRestrictionsBackportCallback callback);
    private static UnusedAppRestrictionsBackportCallback();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnResult_ZZHandler();
    private static void n_OnResult_ZZ(IntPtr jnienv, IntPtr native__this, bool success, bool enabled);
    [RegisterAttribute("onResult", "(ZZ)V", "GetOnResult_ZZHandler")]
public virtual void OnResult(bool success, bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/UnusedAppRestrictionsBackportService")]
public abstract class AndroidX.Core.Content.UnusedAppRestrictionsBackportService : Service {
    [RegisterAttribute("ACTION_UNUSED_APP_RESTRICTIONS_BACKPORT_CONNECTION")]
public static string ActionUnusedAppRestrictionsBackportConnection;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isPermissionRevocationEnabled_Landroidx_core_content_UnusedAppRestrictionsBackportCallback_;
    [NullableAttribute("2")]
private static Delegate cb_onBind_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UnusedAppRestrictionsBackportService(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportService();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsPermissionRevocationEnabled_Landroidx_core_content_UnusedAppRestrictionsBackportCallback_Handler();
    private static void n_IsPermissionRevocationEnabled_Landroidx_core_content_UnusedAppRestrictionsBackportCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("isPermissionRevocationEnabled", "(Landroidx/core/content/UnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabled_Landroidx_core_content_UnusedAppRestrictionsBackportCallback_Handler")]
protected abstract virtual void IsPermissionRevocationEnabled(UnusedAppRestrictionsBackportCallback p0);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [NullableContextAttribute("2")]
[RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/UnusedAppRestrictionsBackportService")]
internal class AndroidX.Core.Content.UnusedAppRestrictionsBackportServiceInvoker : UnusedAppRestrictionsBackportService {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public UnusedAppRestrictionsBackportServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsBackportServiceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isPermissionRevocationEnabled", "(Landroidx/core/content/UnusedAppRestrictionsBackportCallback;)V", "GetIsPermissionRevocationEnabled_Landroidx_core_content_UnusedAppRestrictionsBackportCallback_Handler")]
protected virtual void IsPermissionRevocationEnabled(UnusedAppRestrictionsBackportCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/UnusedAppRestrictionsConstants")]
public class AndroidX.Core.Content.UnusedAppRestrictionsConstants : Object {
    [RegisterAttribute("API_30")]
public static int Api30;
    [RegisterAttribute("API_30_BACKPORT")]
public static int Api30Backport;
    [RegisterAttribute("API_31")]
public static int Api31;
    [RegisterAttribute("DISABLED")]
public static int Disabled;
    [RegisterAttribute("ERROR")]
public static int Error;
    [RegisterAttribute("FEATURE_NOT_AVAILABLE")]
public static int FeatureNotAvailable;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UnusedAppRestrictionsConstants(IntPtr javaReference, JniHandleOwnership transfer);
    private static UnusedAppRestrictionsConstants();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/content/UriMatcherCompat")]
public class AndroidX.Core.Content.UriMatcherCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UriMatcherCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static UriMatcherCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("asPredicate", "(Landroid/content/UriMatcher;)Landroidx/core/util/Predicate;", "")]
public static IPredicate AsPredicate(UriMatcher matcher);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/database/CursorWindowCompat")]
public class AndroidX.Core.Database.CursorWindowCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CursorWindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static CursorWindowCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Ljava/lang/String;J)Landroid/database/CursorWindow;", "")]
public static CursorWindow Create(string name, long windowSizeBytes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/database/DatabaseUtilsCompat")]
public class AndroidX.Core.Database.DatabaseUtilsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DatabaseUtilsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DatabaseUtilsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("appendSelectionArgs", "([Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;", "")]
public static String[] AppendSelectionArgs(String[] originalValues, String[] newValues);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("concatenateWhere", "(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;", "")]
public static string ConcatenateWhere(string a, string b);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/database/sqlite/SQLiteCursorCompat")]
public class AndroidX.Core.Database.SqlLite.SQLiteCursorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SQLiteCursorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static SQLiteCursorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("setFillWindowForwardOnly", "(Landroid/database/sqlite/SQLiteCursor;Z)V", "")]
public static void SetFillWindowForwardOnly(SQLiteCursor cursor, bool fillWindowForwardOnly);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/BitmapCompat")]
public class AndroidX.Core.Graphics.BitmapCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BitmapCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BitmapCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createScaledBitmap", "(Landroid/graphics/Bitmap;IILandroid/graphics/Rect;Z)Landroid/graphics/Bitmap;", "")]
public static Bitmap CreateScaledBitmap(Bitmap srcBm, int dstW, int dstH, Rect srcRect, bool scaleInLinearSpace);
    [RegisterAttribute("getAllocationByteCount", "(Landroid/graphics/Bitmap;)I", "")]
public static int GetAllocationByteCount(Bitmap bitmap);
    [RegisterAttribute("hasMipMap", "(Landroid/graphics/Bitmap;)Z", "")]
public static bool HasMipMap(Bitmap bitmap);
    [RegisterAttribute("setHasMipMap", "(Landroid/graphics/Bitmap;Z)V", "")]
public static void SetHasMipMap(Bitmap bitmap, bool hasMipMap);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/BlendModeColorFilterCompat")]
public class AndroidX.Core.Graphics.BlendModeColorFilterCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected BlendModeColorFilterCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BlendModeColorFilterCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createBlendModeColorFilterCompat", "(ILandroidx/core/graphics/BlendModeCompat;)Landroid/graphics/ColorFilter;", "")]
public static ColorFilter CreateBlendModeColorFilterCompat(int color, BlendModeCompat blendModeCompat);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/BlendModeCompat")]
public class AndroidX.Core.Graphics.BlendModeCompat : Enum {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("CLEAR")]
public static BlendModeCompat Clear { get; }
    [RegisterAttribute("COLOR")]
public static BlendModeCompat Color { get; }
    [RegisterAttribute("COLOR_BURN")]
public static BlendModeCompat ColorBurn { get; }
    [RegisterAttribute("COLOR_DODGE")]
public static BlendModeCompat ColorDodge { get; }
    [RegisterAttribute("DARKEN")]
public static BlendModeCompat Darken { get; }
    [RegisterAttribute("DIFFERENCE")]
public static BlendModeCompat Difference { get; }
    [RegisterAttribute("DST")]
public static BlendModeCompat Dst { get; }
    [RegisterAttribute("DST_ATOP")]
public static BlendModeCompat DstAtop { get; }
    [RegisterAttribute("DST_IN")]
public static BlendModeCompat DstIn { get; }
    [RegisterAttribute("DST_OUT")]
public static BlendModeCompat DstOut { get; }
    [RegisterAttribute("DST_OVER")]
public static BlendModeCompat DstOver { get; }
    [RegisterAttribute("EXCLUSION")]
public static BlendModeCompat Exclusion { get; }
    [RegisterAttribute("HARD_LIGHT")]
public static BlendModeCompat HardLight { get; }
    [RegisterAttribute("HUE")]
public static BlendModeCompat Hue { get; }
    [RegisterAttribute("LIGHTEN")]
public static BlendModeCompat Lighten { get; }
    [RegisterAttribute("LUMINOSITY")]
public static BlendModeCompat Luminosity { get; }
    [RegisterAttribute("MODULATE")]
public static BlendModeCompat Modulate { get; }
    [RegisterAttribute("MULTIPLY")]
public static BlendModeCompat Multiply { get; }
    [RegisterAttribute("OVERLAY")]
public static BlendModeCompat Overlay { get; }
    [RegisterAttribute("PLUS")]
public static BlendModeCompat Plus { get; }
    [RegisterAttribute("SATURATION")]
public static BlendModeCompat Saturation { get; }
    [RegisterAttribute("SCREEN")]
public static BlendModeCompat Screen { get; }
    [RegisterAttribute("SOFT_LIGHT")]
public static BlendModeCompat SoftLight { get; }
    [RegisterAttribute("SRC")]
public static BlendModeCompat Src { get; }
    [RegisterAttribute("SRC_ATOP")]
public static BlendModeCompat SrcAtop { get; }
    [RegisterAttribute("SRC_IN")]
public static BlendModeCompat SrcIn { get; }
    [RegisterAttribute("SRC_OUT")]
public static BlendModeCompat SrcOut { get; }
    [RegisterAttribute("SRC_OVER")]
public static BlendModeCompat SrcOver { get; }
    [RegisterAttribute("XOR")]
public static BlendModeCompat Xor { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BlendModeCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BlendModeCompat();
    public static BlendModeCompat get_Clear();
    public static BlendModeCompat get_Color();
    public static BlendModeCompat get_ColorBurn();
    public static BlendModeCompat get_ColorDodge();
    public static BlendModeCompat get_Darken();
    public static BlendModeCompat get_Difference();
    public static BlendModeCompat get_Dst();
    public static BlendModeCompat get_DstAtop();
    public static BlendModeCompat get_DstIn();
    public static BlendModeCompat get_DstOut();
    public static BlendModeCompat get_DstOver();
    public static BlendModeCompat get_Exclusion();
    public static BlendModeCompat get_HardLight();
    public static BlendModeCompat get_Hue();
    public static BlendModeCompat get_Lighten();
    public static BlendModeCompat get_Luminosity();
    public static BlendModeCompat get_Modulate();
    public static BlendModeCompat get_Multiply();
    public static BlendModeCompat get_Overlay();
    public static BlendModeCompat get_Plus();
    public static BlendModeCompat get_Saturation();
    public static BlendModeCompat get_Screen();
    public static BlendModeCompat get_SoftLight();
    public static BlendModeCompat get_Src();
    public static BlendModeCompat get_SrcAtop();
    public static BlendModeCompat get_SrcIn();
    public static BlendModeCompat get_SrcOut();
    public static BlendModeCompat get_SrcOver();
    public static BlendModeCompat get_Xor();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("valueOf", "(Ljava/lang/String;)Landroidx/core/graphics/BlendModeCompat;", "")]
public static BlendModeCompat ValueOf(string name);
    [RegisterAttribute("values", "()[Landroidx/core/graphics/BlendModeCompat;", "")]
public static BlendModeCompat[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/ColorUtils")]
public class AndroidX.Core.Graphics.ColorUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ColorUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static ColorUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("HSLToColor", "([F)I", "")]
public static int HSLToColor(Single[] hsl);
    [RegisterAttribute("LABToColor", "(DDD)I", "")]
public static int LABToColor(double l, double a, double b);
    [RegisterAttribute("LABToXYZ", "(DDD[D)V", "")]
public static void LABToXYZ(double l, double a, double b, Double[] outXyz);
    [RegisterAttribute("M3HCTToColor", "(FFF)I", "")]
public static int M3HCTToColor(float hue, float chroma, float tone);
    [RegisterAttribute("RGBToHSL", "(III[F)V", "")]
public static void RGBToHSL(int r, int g, int b, Single[] outHsl);
    [RegisterAttribute("RGBToLAB", "(III[D)V", "")]
public static void RGBToLAB(int r, int g, int b, Double[] outLab);
    [RegisterAttribute("RGBToXYZ", "(III[D)V", "")]
public static void RGBToXYZ(int r, int g, int b, Double[] outXyz);
    [RegisterAttribute("XYZToColor", "(DDD)I", "")]
public static int XYZToColor(double x, double y, double z);
    [RegisterAttribute("XYZToLAB", "(DDD[D)V", "")]
public static void XYZToLAB(double x, double y, double z, Double[] outLab);
    [RegisterAttribute("blendARGB", "(IIF)I", "")]
public static int BlendARGB(int color1, int color2, float ratio);
    [RegisterAttribute("blendHSL", "([F[FF[F)V", "")]
public static void BlendHSL(Single[] hsl1, Single[] hsl2, float ratio, Single[] outResult);
    [RegisterAttribute("blendLAB", "([D[DD[D)V", "")]
public static void BlendLAB(Double[] lab1, Double[] lab2, double ratio, Double[] outResult);
    [RegisterAttribute("calculateContrast", "(II)D", "")]
public static double CalculateContrast(int foreground, int background);
    [RegisterAttribute("calculateLuminance", "(I)D", "")]
public static double CalculateLuminance(int color);
    [RegisterAttribute("calculateMinimumAlpha", "(IIF)I", "")]
public static int CalculateMinimumAlpha(int foreground, int background, float minContrastRatio);
    [RegisterAttribute("colorToHSL", "(I[F)V", "")]
public static void ColorToHSL(int color, Single[] outHsl);
    [RegisterAttribute("colorToLAB", "(I[D)V", "")]
public static void ColorToLAB(int color, Double[] outLab);
    [RegisterAttribute("colorToM3HCT", "(I[F)V", "")]
public static void ColorToM3HCT(int color, Single[] outM3HCT);
    [RegisterAttribute("colorToXYZ", "(I[D)V", "")]
public static void ColorToXYZ(int color, Double[] outXyz);
    [RegisterAttribute("compositeColors", "(Landroid/graphics/Color;Landroid/graphics/Color;)Landroid/graphics/Color;", "")]
public static ColorObject CompositeColors(ColorObject foreground, ColorObject background);
    [RegisterAttribute("compositeColors", "(II)I", "")]
public static int CompositeColors(int foreground, int background);
    [RegisterAttribute("distanceEuclidean", "([D[D)D", "")]
public static double DistanceEuclidean(Double[] labX, Double[] labY);
    [RegisterAttribute("setAlphaComponent", "(II)I", "")]
public static int SetAlphaComponent(int color, int alpha);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/DrawableCompat")]
public class AndroidX.Core.Graphics.Drawable.DrawableCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DrawableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DrawableCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("applyTheme", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/Resources$Theme;)V", "")]
public static void ApplyTheme(Drawable drawable, Theme theme);
    [RegisterAttribute("canApplyTheme", "(Landroid/graphics/drawable/Drawable;)Z", "")]
public static bool CanApplyTheme(Drawable drawable);
    [RegisterAttribute("clearColorFilter", "(Landroid/graphics/drawable/Drawable;)V", "")]
public static void ClearColorFilter(Drawable drawable);
    [RegisterAttribute("getAlpha", "(Landroid/graphics/drawable/Drawable;)I", "")]
public static int GetAlpha(Drawable drawable);
    [RegisterAttribute("getColorFilter", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/ColorFilter;", "")]
public static ColorFilter GetColorFilter(Drawable drawable);
    [RegisterAttribute("getLayoutDirection", "(Landroid/graphics/drawable/Drawable;)I", "")]
public static int GetLayoutDirection(Drawable drawable);
    [RegisterAttribute("inflate", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/Resources;Lorg/xmlpull/v1/XmlPullParser;Landroid/util/AttributeSet;Landroid/content/res/Resources$Theme;)V", "")]
public static void Inflate(Drawable drawable, Resources res, XmlReader parser, IAttributeSet attrs, Theme theme);
    [RegisterAttribute("isAutoMirrored", "(Landroid/graphics/drawable/Drawable;)Z", "")]
public static bool IsAutoMirrored(Drawable drawable);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("jumpToCurrentState", "(Landroid/graphics/drawable/Drawable;)V", "")]
public static void JumpToCurrentState(Drawable drawable);
    [RegisterAttribute("setAutoMirrored", "(Landroid/graphics/drawable/Drawable;Z)V", "")]
public static void SetAutoMirrored(Drawable drawable, bool mirrored);
    [RegisterAttribute("setHotspot", "(Landroid/graphics/drawable/Drawable;FF)V", "")]
public static void SetHotspot(Drawable drawable, float x, float y);
    [RegisterAttribute("setHotspotBounds", "(Landroid/graphics/drawable/Drawable;IIII)V", "")]
public static void SetHotspotBounds(Drawable drawable, int left, int top, int right, int bottom);
    [RegisterAttribute("setLayoutDirection", "(Landroid/graphics/drawable/Drawable;I)Z", "")]
public static bool SetLayoutDirection(Drawable drawable, int layoutDirection);
    [RegisterAttribute("setTint", "(Landroid/graphics/drawable/Drawable;I)V", "")]
public static void SetTint(Drawable drawable, int tint);
    [RegisterAttribute("setTintList", "(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;)V", "")]
public static void SetTintList(Drawable drawable, ColorStateList tint);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/drawable/Drawable;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetTintMode(Drawable drawable, Mode tintMode);
    [RegisterAttribute("unwrap", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Unwrap(Drawable drawable);
    [RegisterAttribute("wrap", "(Landroid/graphics/drawable/Drawable;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable Wrap(Drawable drawable);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/IconCompat")]
public class AndroidX.Core.Graphics.Drawable.IconCompat : CustomVersionedParcelable {
    [RegisterAttribute("TYPE_ADAPTIVE_BITMAP")]
public static int TypeAdaptiveBitmap;
    [RegisterAttribute("TYPE_BITMAP")]
public static int TypeBitmap;
    [RegisterAttribute("TYPE_DATA")]
public static int TypeData;
    [RegisterAttribute("TYPE_RESOURCE")]
public static int TypeResource;
    [RegisterAttribute("TYPE_UNKNOWN")]
public static int TypeUnknown;
    [RegisterAttribute("TYPE_URI")]
public static int TypeUri;
    [RegisterAttribute("TYPE_URI_ADAPTIVE_BITMAP")]
public static int TypeUriAdaptiveBitmap;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getBitmap;
    [NullableAttribute("2")]
private static Delegate cb_getResId;
    [NullableAttribute("2")]
private static Delegate cb_getResPackage;
    [NullableAttribute("2")]
private static Delegate cb_getType;
    [NullableAttribute("2")]
private static Delegate cb_getUri;
    [NullableAttribute("2")]
private static Delegate cb_addToShortcutIntent_Landroid_content_Intent_Landroid_graphics_drawable_Drawable_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_checkResource_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_getUriInputStream_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_loadDrawable_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_setTint_I;
    [NullableAttribute("2")]
private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    [NullableAttribute("2")]
private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    [NullableAttribute("2")]
private static Delegate cb_toBundle;
    [NullableAttribute("2")]
private static Delegate cb_toIcon;
    [NullableAttribute("2")]
private static Delegate cb_toIcon_Landroid_content_Context_;
    [NullableAttribute("2")]
[RegisterAttribute("mData")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public IList`1<byte> MData { get; public set; }
    [RegisterAttribute("mInt1")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MInt1 { get; public set; }
    [RegisterAttribute("mInt2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MInt2 { get; public set; }
    [NullableAttribute("2")]
[RegisterAttribute("mParcelable")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public IParcelable MParcelable { get; public set; }
    [NullableAttribute("2")]
[RegisterAttribute("mString1")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public string MString1 { get; public set; }
    [NullableAttribute("2")]
[RegisterAttribute("mTintList")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public ColorStateList MTintList { get; public set; }
    [NullableAttribute("2")]
[RegisterAttribute("mTintModeStr")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public string MTintModeStr { get; public set; }
    [RegisterAttribute("mType")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MType { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bitmap Bitmap { get; }
    public int ResId { get; }
    public string ResPackage { get; }
    public int Type { get; }
    public Uri Uri { get; }
    protected IconCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static IconCompat();
    [NullableContextAttribute("2")]
public IList`1<byte> get_MData();
    [NullableContextAttribute("2")]
public void set_MData(IList`1<byte> value);
    public int get_MInt1();
    public void set_MInt1(int value);
    public int get_MInt2();
    public void set_MInt2(int value);
    [NullableContextAttribute("2")]
public IParcelable get_MParcelable();
    [NullableContextAttribute("2")]
public void set_MParcelable(IParcelable value);
    [NullableContextAttribute("2")]
public string get_MString1();
    [NullableContextAttribute("2")]
public void set_MString1(string value);
    [NullableContextAttribute("2")]
public ColorStateList get_MTintList();
    [NullableContextAttribute("2")]
public void set_MTintList(ColorStateList value);
    [NullableContextAttribute("2")]
public string get_MTintModeStr();
    [NullableContextAttribute("2")]
public void set_MTintModeStr(string value);
    public int get_MType();
    public void set_MType(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBitmapHandler();
    private static IntPtr n_GetBitmap(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getBitmap", "()Landroid/graphics/Bitmap;", "GetGetBitmapHandler")]
public virtual Bitmap get_Bitmap();
    private static Delegate GetGetResIdHandler();
    private static int n_GetResId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResId", "()I", "GetGetResIdHandler")]
public virtual int get_ResId();
    private static Delegate GetGetResPackageHandler();
    private static IntPtr n_GetResPackage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getResPackage", "()Ljava/lang/String;", "GetGetResPackageHandler")]
public virtual string get_ResPackage();
    private static Delegate GetGetTypeHandler();
    private static int n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()I", "GetGetTypeHandler")]
public virtual int get_Type();
    private static Delegate GetGetUriHandler();
    private static IntPtr n_GetUri(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getUri", "()Landroid/net/Uri;", "GetGetUriHandler")]
public virtual Uri get_Uri();
    private static Delegate GetAddToShortcutIntent_Landroid_content_Intent_Landroid_graphics_drawable_Drawable_Landroid_content_Context_Handler();
    private static void n_AddToShortcutIntent_Landroid_content_Intent_Landroid_graphics_drawable_Drawable_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_outIntent, IntPtr native_badge, IntPtr native_c);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("addToShortcutIntent", "(Landroid/content/Intent;Landroid/graphics/drawable/Drawable;Landroid/content/Context;)V", "GetAddToShortcutIntent_Landroid_content_Intent_Landroid_graphics_drawable_Drawable_Landroid_content_Context_Handler")]
public virtual void AddToShortcutIntent(Intent outIntent, Drawable badge, Context c);
    private static Delegate GetCheckResource_Landroid_content_Context_Handler();
    private static void n_CheckResource_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("checkResource", "(Landroid/content/Context;)V", "GetCheckResource_Landroid_content_Context_Handler")]
public virtual void CheckResource(Context context);
    [RegisterAttribute("createFromBundle", "(Landroid/os/Bundle;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateFromBundle(Bundle bundle);
    [RegisterAttribute("createFromIcon", "(Landroid/content/Context;Landroid/graphics/drawable/Icon;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateFromIcon(Context context, Icon icon);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createFromIcon", "(Landroid/graphics/drawable/Icon;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateFromIcon(Icon icon);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createFromIconOrNullIfZeroResId", "(Landroid/graphics/drawable/Icon;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateFromIconOrNullIfZeroResId(Icon icon);
    [RegisterAttribute("createWithAdaptiveBitmap", "(Landroid/graphics/Bitmap;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithAdaptiveBitmap(Bitmap bits);
    [RegisterAttribute("createWithAdaptiveBitmapContentUri", "(Landroid/net/Uri;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithAdaptiveBitmapContentUri(Uri uri);
    [RegisterAttribute("createWithAdaptiveBitmapContentUri", "(Ljava/lang/String;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithAdaptiveBitmapContentUri(string uri);
    [RegisterAttribute("createWithBitmap", "(Landroid/graphics/Bitmap;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithBitmap(Bitmap bits);
    [RegisterAttribute("createWithContentUri", "(Landroid/net/Uri;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithContentUri(Uri uri);
    [RegisterAttribute("createWithContentUri", "(Ljava/lang/String;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithContentUri(string uri);
    [RegisterAttribute("createWithData", "([BII)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithData(Byte[] data, int offset, int length);
    [RegisterAttribute("createWithResource", "(Landroid/content/Context;I)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithResource(Context context, int resId);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createWithResource", "(Landroid/content/res/Resources;Ljava/lang/String;I)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat CreateWithResource(Resources r, string pkg, int resId);
    private static Delegate GetGetUriInputStream_Landroid_content_Context_Handler();
    private static IntPtr n_GetUriInputStream_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getUriInputStream", "(Landroid/content/Context;)Ljava/io/InputStream;", "GetGetUriInputStream_Landroid_content_Context_Handler")]
public virtual Stream GetUriInputStream(Context context);
    private static Delegate GetLoadDrawable_Landroid_content_Context_Handler();
    private static IntPtr n_LoadDrawable_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("loadDrawable", "(Landroid/content/Context;)Landroid/graphics/drawable/Drawable;", "GetLoadDrawable_Landroid_content_Context_Handler")]
public virtual Drawable LoadDrawable(Context context);
    private static Delegate GetSetTint_IHandler();
    private static IntPtr n_SetTint_I(IntPtr jnienv, IntPtr native__this, int tint);
    [RegisterAttribute("setTint", "(I)Landroidx/core/graphics/drawable/IconCompat;", "GetSetTint_IHandler")]
public virtual IconCompat SetTint(int tint);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static IntPtr n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintList);
    [RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)Landroidx/core/graphics/drawable/IconCompat;", "GetSetTintList_Landroid_content_res_ColorStateList_Handler")]
public virtual IconCompat SetTintList(ColorStateList tintList);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static IntPtr n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_mode);
    [RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)Landroidx/core/graphics/drawable/IconCompat;", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler")]
public virtual IconCompat SetTintMode(Mode mode);
    private static Delegate GetToBundleHandler();
    private static IntPtr n_ToBundle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toBundle", "()Landroid/os/Bundle;", "GetToBundleHandler")]
public virtual Bundle ToBundle();
    [ObsoleteAttribute]
private static Delegate GetToIconHandler();
    [ObsoleteAttribute]
private static IntPtr n_ToIcon(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("toIcon", "()Landroid/graphics/drawable/Icon;", "GetToIconHandler")]
public virtual Icon ToIcon();
    private static Delegate GetToIcon_Landroid_content_Context_Handler();
    private static IntPtr n_ToIcon_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("toIcon", "(Landroid/content/Context;)Landroid/graphics/drawable/Icon;", "GetToIcon_Landroid_content_Context_Handler")]
public virtual Icon ToIcon(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/graphics/drawable/IconCompatParcelizer")]
public class AndroidX.Core.Graphics.Drawable.IconCompatParcelizer : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected IconCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static IconCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/core/graphics/drawable/IconCompat;", "")]
public static IconCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/core/graphics/drawable/IconCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(IconCompat obj, VersionedParcel parcel);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/graphics/drawable/TintAwareDrawable", "", "AndroidX.Core.Graphics.Drawable.ITintAwareDrawableInvoker")]
public interface AndroidX.Core.Graphics.Drawable.ITintAwareDrawable {
    [RegisterAttribute("setTint", "(I)V", "GetSetTint_IHandler:AndroidX.Core.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetTint(int tint);
    [NullableContextAttribute("2")]
[RegisterAttribute("setTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetTintList(ColorStateList tint);
    [NullableContextAttribute("2")]
[RegisterAttribute("setTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Graphics.Drawable.ITintAwareDrawableInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetTintMode(Mode tintMode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/TintAwareDrawable")]
internal class AndroidX.Core.Graphics.Drawable.ITintAwareDrawableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_setTint_I;
    private IntPtr id_setTint_I;
    [NullableAttribute("2")]
private static Delegate cb_setTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_setTintList_Landroid_content_res_ColorStateList_;
    [NullableAttribute("2")]
private static Delegate cb_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_setTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ITintAwareDrawableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintAwareDrawableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITintAwareDrawable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetSetTint_IHandler();
    private static void n_SetTint_I(IntPtr jnienv, IntPtr native__this, int tint);
    public sealed virtual void SetTint(int tint);
    private static Delegate GetSetTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    [NullableContextAttribute("2")]
public sealed virtual void SetTintList(ColorStateList tint);
    private static Delegate GetSetTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    [NullableContextAttribute("2")]
public sealed virtual void SetTintMode(Mode tintMode);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/graphics/drawable/WrappedDrawable", "", "AndroidX.Core.Graphics.Drawable.IWrappedDrawableInvoker")]
public interface AndroidX.Core.Graphics.Drawable.IWrappedDrawable {
    [NullableAttribute("2")]
public Drawable WrappedDrawable { get; public set; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getWrappedDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetWrappedDrawableHandler:AndroidX.Core.Graphics.Drawable.IWrappedDrawableInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Drawable get_WrappedDrawable();
    [NullableContextAttribute("2")]
[RegisterAttribute("setWrappedDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetWrappedDrawable_Landroid_graphics_drawable_Drawable_Handler:AndroidX.Core.Graphics.Drawable.IWrappedDrawableInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_WrappedDrawable(Drawable value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/WrappedDrawable")]
internal class AndroidX.Core.Graphics.Drawable.IWrappedDrawableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getWrappedDrawable;
    [NullableAttribute("2")]
private static Delegate cb_setWrappedDrawable_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_getWrappedDrawable;
    private IntPtr id_setWrappedDrawable_Landroid_graphics_drawable_Drawable_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Drawable WrappedDrawable { get; public set; }
    public IWrappedDrawableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWrappedDrawableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWrappedDrawable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetWrappedDrawableHandler();
    private static IntPtr n_GetWrappedDrawable(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetWrappedDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetWrappedDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawable);
    [NullableContextAttribute("2")]
public sealed virtual Drawable get_WrappedDrawable();
    [NullableContextAttribute("2")]
public sealed virtual void set_WrappedDrawable(Drawable value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/RoundedBitmapDrawable")]
public abstract class AndroidX.Core.Graphics.Drawable.RoundedBitmapDrawable : Drawable {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isCircular;
    [NullableAttribute("2")]
private static Delegate cb_setCircular_Z;
    [NullableAttribute("2")]
private static Delegate cb_getCornerRadius;
    [NullableAttribute("2")]
private static Delegate cb_setCornerRadius_F;
    [NullableAttribute("2")]
private static Delegate cb_getGravity;
    [NullableAttribute("2")]
private static Delegate cb_setGravity_I;
    [NullableAttribute("2")]
private static Delegate cb_hasAntiAlias;
    [NullableAttribute("2")]
private static Delegate cb_hasMipMap;
    [NullableAttribute("2")]
private static Delegate cb_getOpacity;
    [NullableAttribute("2")]
private static Delegate cb_draw_Landroid_graphics_Canvas_;
    [NullableAttribute("2")]
private static Delegate cb_setAlpha_I;
    [NullableAttribute("2")]
private static Delegate cb_setAntiAlias_Z;
    [NullableAttribute("2")]
private static Delegate cb_setColorFilter_Landroid_graphics_ColorFilter_;
    [NullableAttribute("2")]
private static Delegate cb_setMipMap_Z;
    [NullableAttribute("2")]
private static Delegate cb_setTargetDensity_Landroid_graphics_Canvas_;
    [NullableAttribute("2")]
private static Delegate cb_setTargetDensity_Landroid_util_DisplayMetrics_;
    [NullableAttribute("2")]
private static Delegate cb_setTargetDensity_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bitmap Bitmap { get; }
    public bool Circular { get; public set; }
    public float CornerRadius { get; public set; }
    public int Gravity { get; public set; }
    public bool HasAntiAlias { get; }
    public bool HasMipMap { get; }
    public int Opacity { get; }
    public Paint Paint { get; }
    protected RoundedBitmapDrawable(IntPtr javaReference, JniHandleOwnership transfer);
    private static RoundedBitmapDrawable();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmap", "()Landroid/graphics/Bitmap;", "")]
public Bitmap get_Bitmap();
    private static Delegate GetIsCircularHandler();
    private static bool n_IsCircular(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCircular_ZHandler();
    private static void n_SetCircular_Z(IntPtr jnienv, IntPtr native__this, bool circular);
    [RegisterAttribute("isCircular", "()Z", "GetIsCircularHandler")]
public virtual bool get_Circular();
    [RegisterAttribute("setCircular", "(Z)V", "GetSetCircular_ZHandler")]
public virtual void set_Circular(bool value);
    private static Delegate GetGetCornerRadiusHandler();
    private static float n_GetCornerRadius(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetCornerRadius_FHandler();
    private static void n_SetCornerRadius_F(IntPtr jnienv, IntPtr native__this, float cornerRadius);
    [RegisterAttribute("getCornerRadius", "()F", "GetGetCornerRadiusHandler")]
public virtual float get_CornerRadius();
    [RegisterAttribute("setCornerRadius", "(F)V", "GetSetCornerRadius_FHandler")]
public virtual void set_CornerRadius(float value);
    private static Delegate GetGetGravityHandler();
    private static int n_GetGravity(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetGravity_IHandler();
    private static void n_SetGravity_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("getGravity", "()I", "GetGetGravityHandler")]
public virtual int get_Gravity();
    [RegisterAttribute("setGravity", "(I)V", "GetSetGravity_IHandler")]
public virtual void set_Gravity(int value);
    private static Delegate GetHasAntiAliasHandler();
    private static bool n_HasAntiAlias(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasAntiAlias", "()Z", "GetHasAntiAliasHandler")]
public virtual bool get_HasAntiAlias();
    private static Delegate GetHasMipMapHandler();
    private static bool n_HasMipMap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasMipMap", "()Z", "GetHasMipMapHandler")]
public virtual bool get_HasMipMap();
    private static Delegate GetGetOpacityHandler();
    private static int n_GetOpacity(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOpacity", "()I", "GetGetOpacityHandler")]
public virtual int get_Opacity();
    [RegisterAttribute("getPaint", "()Landroid/graphics/Paint;", "")]
public Paint get_Paint();
    private static Delegate GetDraw_Landroid_graphics_Canvas_Handler();
    private static void n_Draw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("draw", "(Landroid/graphics/Canvas;)V", "GetDraw_Landroid_graphics_Canvas_Handler")]
public virtual void Draw(Canvas canvas);
    private static Delegate GetSetAlpha_IHandler();
    private static void n_SetAlpha_I(IntPtr jnienv, IntPtr native__this, int alpha);
    [RegisterAttribute("setAlpha", "(I)V", "GetSetAlpha_IHandler")]
public virtual void SetAlpha(int alpha);
    private static Delegate GetSetAntiAlias_ZHandler();
    private static void n_SetAntiAlias_Z(IntPtr jnienv, IntPtr native__this, bool aa);
    [RegisterAttribute("setAntiAlias", "(Z)V", "GetSetAntiAlias_ZHandler")]
public virtual void SetAntiAlias(bool aa);
    private static Delegate GetSetColorFilter_Landroid_graphics_ColorFilter_Handler();
    private static void n_SetColorFilter_Landroid_graphics_ColorFilter_(IntPtr jnienv, IntPtr native__this, IntPtr native_cf);
    [NullableContextAttribute("2")]
[RegisterAttribute("setColorFilter", "(Landroid/graphics/ColorFilter;)V", "GetSetColorFilter_Landroid_graphics_ColorFilter_Handler")]
public virtual void SetColorFilter(ColorFilter cf);
    private static Delegate GetSetMipMap_ZHandler();
    private static void n_SetMipMap_Z(IntPtr jnienv, IntPtr native__this, bool mipMap);
    [RegisterAttribute("setMipMap", "(Z)V", "GetSetMipMap_ZHandler")]
public virtual void SetMipMap(bool mipMap);
    private static Delegate GetSetTargetDensity_Landroid_graphics_Canvas_Handler();
    private static void n_SetTargetDensity_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_canvas);
    [RegisterAttribute("setTargetDensity", "(Landroid/graphics/Canvas;)V", "GetSetTargetDensity_Landroid_graphics_Canvas_Handler")]
public virtual void SetTargetDensity(Canvas canvas);
    private static Delegate GetSetTargetDensity_Landroid_util_DisplayMetrics_Handler();
    private static void n_SetTargetDensity_Landroid_util_DisplayMetrics_(IntPtr jnienv, IntPtr native__this, IntPtr native_metrics);
    [RegisterAttribute("setTargetDensity", "(Landroid/util/DisplayMetrics;)V", "GetSetTargetDensity_Landroid_util_DisplayMetrics_Handler")]
public virtual void SetTargetDensity(DisplayMetrics metrics);
    private static Delegate GetSetTargetDensity_IHandler();
    private static void n_SetTargetDensity_I(IntPtr jnienv, IntPtr native__this, int density);
    [RegisterAttribute("setTargetDensity", "(I)V", "GetSetTargetDensity_IHandler")]
public virtual void SetTargetDensity(int density);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/RoundedBitmapDrawableFactory")]
public class AndroidX.Core.Graphics.Drawable.RoundedBitmapDrawableFactory : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RoundedBitmapDrawableFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static RoundedBitmapDrawableFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Landroid/graphics/Bitmap;)Landroidx/core/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, Bitmap bitmap);
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Ljava/io/InputStream;)Landroidx/core/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, Stream is);
    [RegisterAttribute("create", "(Landroid/content/res/Resources;Ljava/lang/String;)Landroidx/core/graphics/drawable/RoundedBitmapDrawable;", "")]
public static RoundedBitmapDrawable Create(Resources res, string filepath);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/drawable/RoundedBitmapDrawable")]
internal class AndroidX.Core.Graphics.Drawable.RoundedBitmapDrawableInvoker : RoundedBitmapDrawable {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public RoundedBitmapDrawableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static RoundedBitmapDrawableInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/Insets")]
public class AndroidX.Core.Graphics.Insets : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("bottom")]
public int Bottom { get; public set; }
    [RegisterAttribute("left")]
public int Left { get; public set; }
    [RegisterAttribute("NONE")]
public static Insets None { get; }
    [RegisterAttribute("right")]
public int Right { get; public set; }
    [RegisterAttribute("top")]
public int Top { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Insets(IntPtr javaReference, JniHandleOwnership transfer);
    private static Insets();
    public int get_Bottom();
    public void set_Bottom(int value);
    public int get_Left();
    public void set_Left(int value);
    public static Insets get_None();
    public int get_Right();
    public void set_Right(int value);
    public int get_Top();
    public void set_Top(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("add", "(Landroidx/core/graphics/Insets;Landroidx/core/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets Add(Insets a, Insets b);
    [RegisterAttribute("max", "(Landroidx/core/graphics/Insets;Landroidx/core/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets Max(Insets a, Insets b);
    [RegisterAttribute("min", "(Landroidx/core/graphics/Insets;Landroidx/core/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets Min(Insets a, Insets b);
    [RegisterAttribute("of", "(Landroid/graphics/Rect;)Landroidx/core/graphics/Insets;", "")]
public static Insets Of(Rect r);
    [RegisterAttribute("of", "(IIII)Landroidx/core/graphics/Insets;", "")]
public static Insets Of(int left, int top, int right, int bottom);
    [RegisterAttribute("subtract", "(Landroidx/core/graphics/Insets;Landroidx/core/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets Subtract(Insets a, Insets b);
    [RegisterAttribute("toCompatInsets", "(Landroid/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets ToCompatInsets(Insets insets);
    [RegisterAttribute("toPlatformInsets", "()Landroid/graphics/Insets;", "")]
public Insets ToPlatformInsets();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("wrap", "(Landroid/graphics/Insets;)Landroidx/core/graphics/Insets;", "")]
public static Insets Wrap(Insets insets);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/PaintCompat")]
public class AndroidX.Core.Graphics.PaintCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PaintCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PaintCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasGlyph", "(Landroid/graphics/Paint;Ljava/lang/String;)Z", "")]
public static bool HasGlyph(Paint paint, string string);
    [RegisterAttribute("setBlendMode", "(Landroid/graphics/Paint;Landroidx/core/graphics/BlendModeCompat;)Z", "")]
public static bool SetBlendMode(Paint paint, BlendModeCompat blendMode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/PathParser")]
public class AndroidX.Core.Graphics.PathParser : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PathParser(IntPtr javaReference, JniHandleOwnership transfer);
    private static PathParser();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("canMorph", "([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;)Z", "")]
public static bool CanMorph(PathDataNode[] nodesFrom, PathDataNode[] nodesTo);
    [RegisterAttribute("createNodesFromPathData", "(Ljava/lang/String;)[Landroidx/core/graphics/PathParser$PathDataNode;", "")]
public static PathDataNode[] CreateNodesFromPathData(string pathData);
    [RegisterAttribute("createPathFromPathData", "(Ljava/lang/String;)Landroid/graphics/Path;", "")]
public static Path CreatePathFromPathData(string pathData);
    [RegisterAttribute("deepCopyNodes", "([Landroidx/core/graphics/PathParser$PathDataNode;)[Landroidx/core/graphics/PathParser$PathDataNode;", "")]
public static PathDataNode[] DeepCopyNodes(PathDataNode[] source);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("interpolatePathDataNodes", "([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;F)Z", "")]
public static bool InterpolatePathDataNodes(PathDataNode[] target, PathDataNode[] from, PathDataNode[] to, float fraction);
    [RegisterAttribute("interpolatePathDataNodes", "([Landroidx/core/graphics/PathParser$PathDataNode;F[Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;)V", "")]
public static void InterpolatePathDataNodes(PathDataNode[] target, float fraction, PathDataNode[] from, PathDataNode[] to);
    [RegisterAttribute("nodesToPath", "([Landroidx/core/graphics/PathParser$PathDataNode;Landroid/graphics/Path;)V", "")]
public static void NodesToPath(PathDataNode[] node, Path path);
    [RegisterAttribute("updateNodes", "([Landroidx/core/graphics/PathParser$PathDataNode;[Landroidx/core/graphics/PathParser$PathDataNode;)V", "")]
public static void UpdateNodes(PathDataNode[] target, PathDataNode[] source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/PathSegment")]
public class AndroidX.Core.Graphics.PathSegment : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public PointF End { get; }
    public float EndFraction { get; }
    public PointF Start { get; }
    public float StartFraction { get; }
    internal PathSegment(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/PointF;FLandroid/graphics/PointF;F)V", "")]
public PathSegment(PointF start, float startFraction, PointF end, float endFraction);
    private static PathSegment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEnd", "()Landroid/graphics/PointF;", "")]
public PointF get_End();
    [RegisterAttribute("getEndFraction", "()F", "")]
public float get_EndFraction();
    [RegisterAttribute("getStart", "()Landroid/graphics/PointF;", "")]
public PointF get_Start();
    [RegisterAttribute("getStartFraction", "()F", "")]
public float get_StartFraction();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/PathUtils")]
public class AndroidX.Core.Graphics.PathUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PathUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static PathUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("flatten", "(Landroid/graphics/Path;)Ljava/util/Collection;", "")]
public static ICollection`1<PathSegment> Flatten(Path path);
    [RegisterAttribute("flatten", "(Landroid/graphics/Path;F)Ljava/util/Collection;", "")]
public static ICollection`1<PathSegment> Flatten(Path path, float error);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/graphics/TypefaceCompat")]
public class AndroidX.Core.Graphics.TypefaceCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TypefaceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TypefaceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("clearCache", "()V", "")]
public static void ClearCache();
    [RegisterAttribute("create", "(Landroid/content/Context;Landroid/graphics/Typeface;I)Landroid/graphics/Typeface;", "")]
public static Typeface Create(Context context, Typeface family, int style);
    [RegisterAttribute("create", "(Landroid/content/Context;Landroid/graphics/Typeface;IZ)Landroid/graphics/Typeface;", "")]
public static Typeface Create(Context context, Typeface family, int weight, bool italic);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createFromFontInfo", "(Landroid/content/Context;Landroid/os/CancellationSignal;[Landroidx/core/provider/FontsContractCompat$FontInfo;I)Landroid/graphics/Typeface;", "")]
public static Typeface CreateFromFontInfo(Context context, CancellationSignal cancellationSignal, FontInfo[] fonts, int style);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("createFromResourcesFamilyXml", "(Landroid/content/Context;Landroidx/core/content/res/FontResourcesParserCompat$FamilyResourceEntry;Landroid/content/res/Resources;IILandroidx/core/content/res/ResourcesCompat$FontCallback;Landroid/os/Handler;Z)Landroid/graphics/Typeface;", "")]
public static Typeface CreateFromResourcesFamilyXml(Context context, IFamilyResourceEntry entry, Resources resources, int id, int style, FontCallback fontCallback, Handler handler, bool isRequestFromLayoutInflator);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createFromResourcesFamilyXml", "(Landroid/content/Context;Landroidx/core/content/res/FontResourcesParserCompat$FamilyResourceEntry;Landroid/content/res/Resources;ILjava/lang/String;IILandroidx/core/content/res/ResourcesCompat$FontCallback;Landroid/os/Handler;Z)Landroid/graphics/Typeface;", "")]
public static Typeface CreateFromResourcesFamilyXml(Context context, IFamilyResourceEntry entry, Resources resources, int id, string path, int cookie, int style, FontCallback fontCallback, Handler handler, bool isRequestFromLayoutInflator);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("createFromResourcesFontFile", "(Landroid/content/Context;Landroid/content/res/Resources;ILjava/lang/String;I)Landroid/graphics/Typeface;", "")]
public static Typeface CreateFromResourcesFontFile(Context context, Resources resources, int id, string path, int style);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("createFromResourcesFontFile", "(Landroid/content/Context;Landroid/content/res/Resources;ILjava/lang/String;II)Landroid/graphics/Typeface;", "")]
public static Typeface CreateFromResourcesFontFile(Context context, Resources resources, int id, string path, int cookie, int style);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("findFromCache", "(Landroid/content/res/Resources;II)Landroid/graphics/Typeface;", "")]
public static Typeface FindFromCache(Resources resources, int id, int style);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("findFromCache", "(Landroid/content/res/Resources;ILjava/lang/String;II)Landroid/graphics/Typeface;", "")]
public static Typeface FindFromCache(Resources resources, int id, string path, int cookie, int style);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/graphics/TypefaceCompatUtil")]
public class AndroidX.Core.Graphics.TypefaceCompatUtil : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TypefaceCompatUtil(IntPtr javaReference, JniHandleOwnership transfer);
    private static TypefaceCompatUtil();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("closeQuietly", "(Ljava/io/Closeable;)V", "")]
public static void CloseQuietly(ICloseable c);
    [RegisterAttribute("copyToDirectBuffer", "(Landroid/content/Context;Landroid/content/res/Resources;I)Ljava/nio/ByteBuffer;", "")]
public static ByteBuffer CopyToDirectBuffer(Context context, Resources res, int id);
    [RegisterAttribute("copyToFile", "(Ljava/io/File;Landroid/content/res/Resources;I)Z", "")]
public static bool CopyToFile(File file, Resources res, int id);
    [RegisterAttribute("copyToFile", "(Ljava/io/File;Ljava/io/InputStream;)Z", "")]
public static bool CopyToFile(File file, Stream is);
    [RegisterAttribute("getTempFile", "(Landroid/content/Context;)Ljava/io/File;", "")]
public static File GetTempFile(Context context);
    [RegisterAttribute("mmap", "(Landroid/content/Context;Landroid/os/CancellationSignal;Landroid/net/Uri;)Ljava/nio/ByteBuffer;", "")]
public static ByteBuffer Mmap(Context context, CancellationSignal cancellationSignal, Uri uri);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("readFontInfoIntoByteBuffer", "(Landroid/content/Context;[Landroidx/core/provider/FontsContractCompat$FontInfo;Landroid/os/CancellationSignal;)Ljava/util/Map;", "")]
public static IDictionary`2<Uri, ByteBuffer> ReadFontInfoIntoByteBuffer(Context context, FontInfo[] fonts, CancellationSignal cancellationSignal);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/hardware/display/DisplayManagerCompat")]
public class AndroidX.Core.Hardware.Display.DisplayManagerCompat : Object {
    [RegisterAttribute("DISPLAY_CATEGORY_PRESENTATION")]
public static string DisplayCategoryPresentation;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DisplayManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DisplayManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDisplay", "(I)Landroid/view/Display;", "")]
public Display GetDisplay(int displayId);
    [RegisterAttribute("getDisplays", "()[Landroid/view/Display;", "")]
public Display[] GetDisplays();
    [RegisterAttribute("getDisplays", "(Ljava/lang/String;)[Landroid/view/Display;", "")]
public Display[] GetDisplays(string category);
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/core/hardware/display/DisplayManagerCompat;", "")]
public static DisplayManagerCompat GetInstance(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/hardware/fingerprint/FingerprintManagerCompat")]
public class AndroidX.Core.Hardware.Fingerprint.FingerprintManagerCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_hasEnrolledFingerprints;
    [NullableAttribute("2")]
private static Delegate cb_isHardwareDetected;
    [NullableAttribute("2")]
private static Delegate cb_authenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroid_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_;
    [NullableAttribute("2")]
private static Delegate cb_authenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroidx_core_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasEnrolledFingerprints { get; }
    public bool IsHardwareDetected { get; }
    protected FingerprintManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static FingerprintManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasEnrolledFingerprintsHandler();
    private static bool n_HasEnrolledFingerprints(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasEnrolledFingerprints", "()Z", "GetHasEnrolledFingerprintsHandler")]
public virtual bool get_HasEnrolledFingerprints();
    private static Delegate GetIsHardwareDetectedHandler();
    private static bool n_IsHardwareDetected(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isHardwareDetected", "()Z", "GetIsHardwareDetectedHandler")]
public virtual bool get_IsHardwareDetected();
    private static Delegate GetAuthenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroid_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_Handler();
    private static void n_Authenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroid_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_(IntPtr jnienv, IntPtr native__this, IntPtr native_crypto, int flags, IntPtr native_cancel, IntPtr native__callback, IntPtr native_handler);
    [NullableContextAttribute("2")]
[RegisterAttribute("authenticate", "(Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;ILandroid/os/CancellationSignal;Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$AuthenticationCallback;Landroid/os/Handler;)V", "GetAuthenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroid_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_Handler")]
public virtual void Authenticate(CryptoObject crypto, int flags, CancellationSignal cancel, AuthenticationCallback callback, Handler handler);
    [ObsoleteAttribute]
private static Delegate GetAuthenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroidx_core_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_Handler();
    [ObsoleteAttribute]
private static void n_Authenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroidx_core_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_(IntPtr jnienv, IntPtr native__this, IntPtr native_crypto, int flags, IntPtr native_cancel, IntPtr native__callback, IntPtr native_handler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("authenticate", "(Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$CryptoObject;ILandroidx/core/os/CancellationSignal;Landroidx/core/hardware/fingerprint/FingerprintManagerCompat$AuthenticationCallback;Landroid/os/Handler;)V", "GetAuthenticate_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_CryptoObject_ILandroidx_core_os_CancellationSignal_Landroidx_core_hardware_fingerprint_FingerprintManagerCompat_AuthenticationCallback_Landroid_os_Handler_Handler")]
public virtual void Authenticate(CryptoObject crypto, int flags, CancellationSignal cancel, AuthenticationCallback callback, Handler handler);
    [RegisterAttribute("from", "(Landroid/content/Context;)Landroidx/core/hardware/fingerprint/FingerprintManagerCompat;", "")]
public static FingerprintManagerCompat From(Context context);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/internal/view/SupportMenu", "", "AndroidX.Core.Internal.View.ISupportMenuInvoker")]
public interface AndroidX.Core.Internal.View.ISupportMenu {
    [RegisterAttribute("setGroupDividerEnabled", "(Z)V", "GetSetGroupDividerEnabled_ZHandler:AndroidX.Core.Internal.View.ISupportMenuInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetGroupDividerEnabled(bool isEnabled);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/internal/view/SupportMenu")]
internal class AndroidX.Core.Internal.View.ISupportMenuInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_setGroupDividerEnabled_Z;
    private IntPtr id_setGroupDividerEnabled_Z;
    private static Delegate cb_hasVisibleItems;
    private IntPtr id_hasVisibleItems;
    private static Delegate cb_add_IIII;
    private IntPtr id_add_IIII;
    private static Delegate cb_add_IIILjava_lang_CharSequence_;
    private IntPtr id_add_IIILjava_lang_CharSequence_;
    private static Delegate cb_add_I;
    private IntPtr id_add_I;
    private static Delegate cb_add_Ljava_lang_CharSequence_;
    private IntPtr id_add_Ljava_lang_CharSequence_;
    private static Delegate cb_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private IntPtr id_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private static Delegate cb_addSubMenu_IIII;
    private IntPtr id_addSubMenu_IIII;
    private static Delegate cb_addSubMenu_IIILjava_lang_CharSequence_;
    private IntPtr id_addSubMenu_IIILjava_lang_CharSequence_;
    private static Delegate cb_addSubMenu_I;
    private IntPtr id_addSubMenu_I;
    private static Delegate cb_addSubMenu_Ljava_lang_CharSequence_;
    private IntPtr id_addSubMenu_Ljava_lang_CharSequence_;
    private static Delegate cb_clear;
    private IntPtr id_clear;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static Delegate cb_findItem_I;
    private IntPtr id_findItem_I;
    private static Delegate cb_getItem_I;
    private IntPtr id_getItem_I;
    private static Delegate cb_isShortcutKey_ILandroid_view_KeyEvent_;
    private IntPtr id_isShortcutKey_ILandroid_view_KeyEvent_;
    private static Delegate cb_performIdentifierAction_II;
    private IntPtr id_performIdentifierAction_II;
    private static Delegate cb_performShortcut_ILandroid_view_KeyEvent_I;
    private IntPtr id_performShortcut_ILandroid_view_KeyEvent_I;
    private static Delegate cb_removeGroup_I;
    private IntPtr id_removeGroup_I;
    private static Delegate cb_removeItem_I;
    private IntPtr id_removeItem_I;
    private static Delegate cb_setGroupCheckable_IZZ;
    private IntPtr id_setGroupCheckable_IZZ;
    private static Delegate cb_setGroupEnabled_IZ;
    private IntPtr id_setGroupEnabled_IZ;
    private static Delegate cb_setGroupVisible_IZ;
    private IntPtr id_setGroupVisible_IZ;
    private static Delegate cb_setQwertyMode_Z;
    private IntPtr id_setQwertyMode_Z;
    private static Delegate cb_size;
    private IntPtr id_size;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasVisibleItems { get; }
    public ISupportMenuInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportMenuInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ISupportMenu GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupDividerEnabled_ZHandler();
    private static void n_SetGroupDividerEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    public sealed virtual void SetGroupDividerEnabled(bool isEnabled);
    [NullableContextAttribute("1")]
private static Delegate GetGetHasVisibleItemsHandler();
    private static bool n_GetHasVisibleItems(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasVisibleItems();
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IIIIHandler();
    private static IntPtr n_Add_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_Add_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IHandler();
    private static IntPtr n_Add_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual IMenuItem Add(int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_Add_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem Add(ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_Handler();
    private static int n_AddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_caller, IntPtr native_specifics, IntPtr native_intent, int native_flags, IntPtr native_outSpecificItems);
    public sealed virtual int AddIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, MenuAppendFlags flags, IMenuItem[] outSpecificItems);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IIIIHandler();
    private static IntPtr n_AddSubMenu_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IHandler();
    private static IntPtr n_AddSubMenu_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    [NullableContextAttribute("1")]
private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
    [NullableContextAttribute("1")]
private static Delegate GetFindItem_IHandler();
    private static IntPtr n_FindItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual IMenuItem FindItem(int id);
    [NullableContextAttribute("1")]
private static Delegate GetGetItem_IHandler();
    private static IntPtr n_GetItem_I(IntPtr jnienv, IntPtr native__this, int index);
    public sealed virtual IMenuItem GetItem(int index);
    [NullableContextAttribute("1")]
private static Delegate GetIsShortcutKey_ILandroid_view_KeyEvent_Handler();
    private static bool n_IsShortcutKey_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e);
    public sealed virtual bool IsShortcutKey(Keycode keyCode, KeyEvent e);
    [NullableContextAttribute("1")]
private static Delegate GetPerformIdentifierAction_IIHandler();
    private static bool n_PerformIdentifierAction_II(IntPtr jnienv, IntPtr native__this, int id, int native_flags);
    public sealed virtual bool PerformIdentifierAction(int id, MenuPerformFlags flags);
    [NullableContextAttribute("1")]
private static Delegate GetPerformShortcut_ILandroid_view_KeyEvent_IHandler();
    private static bool n_PerformShortcut_ILandroid_view_KeyEvent_I(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e, int native_flags);
    public sealed virtual bool PerformShortcut(Keycode keyCode, KeyEvent e, MenuPerformFlags flags);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveGroup_IHandler();
    private static void n_RemoveGroup_I(IntPtr jnienv, IntPtr native__this, int groupId);
    public sealed virtual void RemoveGroup(int groupId);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveItem_IHandler();
    private static void n_RemoveItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual void RemoveItem(int id);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupCheckable_IZZHandler();
    private static void n_SetGroupCheckable_IZZ(IntPtr jnienv, IntPtr native__this, int group, bool checkable, bool exclusive);
    public sealed virtual void SetGroupCheckable(int group, bool checkable, bool exclusive);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupEnabled_IZHandler();
    private static void n_SetGroupEnabled_IZ(IntPtr jnienv, IntPtr native__this, int group, bool enabled);
    public sealed virtual void SetGroupEnabled(int group, bool enabled);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupVisible_IZHandler();
    private static void n_SetGroupVisible_IZ(IntPtr jnienv, IntPtr native__this, int group, bool visible);
    public sealed virtual void SetGroupVisible(int group, bool visible);
    [NullableContextAttribute("1")]
private static Delegate GetSetQwertyMode_ZHandler();
    private static void n_SetQwertyMode_Z(IntPtr jnienv, IntPtr native__this, bool isQwerty);
    public sealed virtual void SetQwertyMode(bool isQwerty);
    [NullableContextAttribute("1")]
private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Size();
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/internal/view/SupportMenuItem", "", "AndroidX.Core.Internal.View.ISupportMenuItemInvoker")]
public interface AndroidX.Core.Internal.View.ISupportMenuItem {
    public View ActionView { get; }
    public int AlphabeticModifiers { get; }
    public ICharSequence ContentDescriptionFormatted { get; }
    public ColorStateList IconTintList { get; }
    public Mode IconTintMode { get; }
    public bool IsActionViewExpanded { get; }
    public int NumericModifiers { get; }
    public ActionProvider SupportActionProvider { get; }
    public ICharSequence TooltipTextFormatted { get; }
    [RegisterAttribute("getActionView", "()Landroid/view/View;", "GetGetActionViewHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual View get_ActionView();
    [RegisterAttribute("getAlphabeticModifiers", "()I", "GetGetAlphabeticModifiersHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int get_AlphabeticModifiers();
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ICharSequence get_ContentDescriptionFormatted();
    [RegisterAttribute("getIconTintList", "()Landroid/content/res/ColorStateList;", "GetGetIconTintListHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_IconTintList();
    [RegisterAttribute("getIconTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetIconTintModeHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_IconTintMode();
    [RegisterAttribute("isActionViewExpanded", "()Z", "GetIsActionViewExpandedHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool get_IsActionViewExpanded();
    [RegisterAttribute("getNumericModifiers", "()I", "GetGetNumericModifiersHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int get_NumericModifiers();
    [RegisterAttribute("getSupportActionProvider", "()Landroidx/core/view/ActionProvider;", "GetGetSupportActionProviderHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ActionProvider get_SupportActionProvider();
    [RegisterAttribute("getTooltipText", "()Ljava/lang/CharSequence;", "GetGetTooltipTextHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ICharSequence get_TooltipTextFormatted();
    [RegisterAttribute("collapseActionView", "()Z", "GetCollapseActionViewHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool CollapseActionView();
    [RegisterAttribute("expandActionView", "()Z", "GetExpandActionViewHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool ExpandActionView();
    [RegisterAttribute("requiresActionButton", "()Z", "GetRequiresActionButtonHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool RequiresActionButton();
    [RegisterAttribute("requiresOverflow", "()Z", "GetRequiresOverflowHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool RequiresOverflow();
    [NullableContextAttribute("1")]
[RegisterAttribute("setActionView", "(Landroid/view/View;)Landroid/view/MenuItem;", "GetSetActionView_Landroid_view_View_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetActionView(View view);
    [NullableContextAttribute("1")]
[RegisterAttribute("setActionView", "(I)Landroid/view/MenuItem;", "GetSetActionView_IHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetActionView(int resId);
    [NullableContextAttribute("1")]
[RegisterAttribute("setAlphabeticShortcut", "(CI)Landroid/view/MenuItem;", "GetSetAlphabeticShortcut_CIHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetAlphabeticShortcut(char alphaChar, int alphaModifiers);
    [NullableContextAttribute("1")]
[RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)Landroidx/core/internal/view/SupportMenuItem;", "GetSetContentDescription_Ljava_lang_CharSequence_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ISupportMenuItem SetContentDescription(ICharSequence contentDescription);
    [NullableContextAttribute("1")]
[RegisterAttribute("setIconTintList", "(Landroid/content/res/ColorStateList;)Landroid/view/MenuItem;", "GetSetIconTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetIconTintList(ColorStateList tint);
    [NullableContextAttribute("1")]
[RegisterAttribute("setIconTintMode", "(Landroid/graphics/PorterDuff$Mode;)Landroid/view/MenuItem;", "GetSetIconTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetIconTintMode(Mode tintMode);
    [NullableContextAttribute("1")]
[RegisterAttribute("setNumericShortcut", "(CI)Landroid/view/MenuItem;", "GetSetNumericShortcut_CIHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetNumericShortcut(char numericChar, int numericModifiers);
    [NullableContextAttribute("1")]
[RegisterAttribute("setShortcut", "(CCII)Landroid/view/MenuItem;", "GetSetShortcut_CCIIHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetShortcut(char numericChar, char alphaChar, int numericModifiers, int alphaModifiers);
    [RegisterAttribute("setShowAsAction", "(I)V", "GetSetShowAsAction_IHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetShowAsAction(ShowAsAction actionEnum);
    [NullableContextAttribute("1")]
[RegisterAttribute("setShowAsActionFlags", "(I)Landroid/view/MenuItem;", "GetSetShowAsActionFlags_IHandler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual IMenuItem SetShowAsActionFlags(ShowAsAction actionEnum);
    [NullableContextAttribute("1")]
[RegisterAttribute("setSupportActionProvider", "(Landroidx/core/view/ActionProvider;)Landroidx/core/internal/view/SupportMenuItem;", "GetSetSupportActionProvider_Landroidx_core_view_ActionProvider_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ISupportMenuItem SetSupportActionProvider(ActionProvider actionProvider);
    [NullableContextAttribute("1")]
[RegisterAttribute("setTooltipText", "(Ljava/lang/CharSequence;)Landroidx/core/internal/view/SupportMenuItem;", "GetSetTooltipText_Ljava_lang_CharSequence_Handler:AndroidX.Core.Internal.View.ISupportMenuItemInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ISupportMenuItem SetTooltipText(ICharSequence tooltipText);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ExtensionAttribute]
public static class AndroidX.Core.Internal.View.ISupportMenuItemExtensions : object {
    [ExtensionAttribute]
public static ISupportMenuItem SetContentDescription(ISupportMenuItem self, string contentDescription);
    [ExtensionAttribute]
public static ISupportMenuItem SetTooltipText(ISupportMenuItem self, string tooltipText);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/internal/view/SupportMenuItem")]
internal class AndroidX.Core.Internal.View.ISupportMenuItemInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getActionView;
    private IntPtr id_getActionView;
    [NullableAttribute("2")]
private static Delegate cb_getAlphabeticModifiers;
    private IntPtr id_getAlphabeticModifiers;
    [NullableAttribute("2")]
private static Delegate cb_getContentDescription;
    private IntPtr id_getContentDescription;
    [NullableAttribute("2")]
private static Delegate cb_getIconTintList;
    private IntPtr id_getIconTintList;
    [NullableAttribute("2")]
private static Delegate cb_getIconTintMode;
    private IntPtr id_getIconTintMode;
    [NullableAttribute("2")]
private static Delegate cb_isActionViewExpanded;
    private IntPtr id_isActionViewExpanded;
    [NullableAttribute("2")]
private static Delegate cb_getNumericModifiers;
    private IntPtr id_getNumericModifiers;
    [NullableAttribute("2")]
private static Delegate cb_getSupportActionProvider;
    private IntPtr id_getSupportActionProvider;
    [NullableAttribute("2")]
private static Delegate cb_getTooltipText;
    private IntPtr id_getTooltipText;
    [NullableAttribute("2")]
private static Delegate cb_collapseActionView;
    private IntPtr id_collapseActionView;
    [NullableAttribute("2")]
private static Delegate cb_expandActionView;
    private IntPtr id_expandActionView;
    [NullableAttribute("2")]
private static Delegate cb_requiresActionButton;
    private IntPtr id_requiresActionButton;
    [NullableAttribute("2")]
private static Delegate cb_requiresOverflow;
    private IntPtr id_requiresOverflow;
    [NullableAttribute("2")]
private static Delegate cb_setActionView_Landroid_view_View_;
    private IntPtr id_setActionView_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_setActionView_I;
    private IntPtr id_setActionView_I;
    [NullableAttribute("2")]
private static Delegate cb_setAlphabeticShortcut_CI;
    private IntPtr id_setAlphabeticShortcut_CI;
    [NullableAttribute("2")]
private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    private IntPtr id_setContentDescription_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setIconTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_setIconTintList_Landroid_content_res_ColorStateList_;
    [NullableAttribute("2")]
private static Delegate cb_setIconTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_setIconTintMode_Landroid_graphics_PorterDuff_Mode_;
    [NullableAttribute("2")]
private static Delegate cb_setNumericShortcut_CI;
    private IntPtr id_setNumericShortcut_CI;
    [NullableAttribute("2")]
private static Delegate cb_setShortcut_CCII;
    private IntPtr id_setShortcut_CCII;
    [NullableAttribute("2")]
private static Delegate cb_setShowAsAction_I;
    private IntPtr id_setShowAsAction_I;
    [NullableAttribute("2")]
private static Delegate cb_setShowAsActionFlags_I;
    private IntPtr id_setShowAsActionFlags_I;
    [NullableAttribute("2")]
private static Delegate cb_setSupportActionProvider_Landroidx_core_view_ActionProvider_;
    private IntPtr id_setSupportActionProvider_Landroidx_core_view_ActionProvider_;
    [NullableAttribute("2")]
private static Delegate cb_setTooltipText_Ljava_lang_CharSequence_;
    private IntPtr id_setTooltipText_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_getActionProvider;
    private IntPtr id_getActionProvider;
    [NullableAttribute("2")]
private static Delegate cb_getAlphabeticShortcut;
    private IntPtr id_getAlphabeticShortcut;
    [NullableAttribute("2")]
private static Delegate cb_getGroupId;
    private IntPtr id_getGroupId;
    [NullableAttribute("2")]
private static Delegate cb_hasSubMenu;
    private IntPtr id_hasSubMenu;
    [NullableAttribute("2")]
private static Delegate cb_getIcon;
    private IntPtr id_getIcon;
    [NullableAttribute("2")]
private static Delegate cb_getIntent;
    private IntPtr id_getIntent;
    [NullableAttribute("2")]
private static Delegate cb_isCheckable;
    private IntPtr id_isCheckable;
    [NullableAttribute("2")]
private static Delegate cb_isChecked;
    private IntPtr id_isChecked;
    [NullableAttribute("2")]
private static Delegate cb_isEnabled;
    private IntPtr id_isEnabled;
    [NullableAttribute("2")]
private static Delegate cb_isVisible;
    private IntPtr id_isVisible;
    [NullableAttribute("2")]
private static Delegate cb_getItemId;
    private IntPtr id_getItemId;
    [NullableAttribute("2")]
private static Delegate cb_getMenuInfo;
    private IntPtr id_getMenuInfo;
    [NullableAttribute("2")]
private static Delegate cb_getNumericShortcut;
    private IntPtr id_getNumericShortcut;
    [NullableAttribute("2")]
private static Delegate cb_getOrder;
    private IntPtr id_getOrder;
    [NullableAttribute("2")]
private static Delegate cb_getSubMenu;
    private IntPtr id_getSubMenu;
    [NullableAttribute("2")]
private static Delegate cb_getTitle;
    private IntPtr id_getTitle;
    [NullableAttribute("2")]
private static Delegate cb_getTitleCondensed;
    private IntPtr id_getTitleCondensed;
    [NullableAttribute("2")]
private static Delegate cb_setActionProvider_Landroid_view_ActionProvider_;
    private IntPtr id_setActionProvider_Landroid_view_ActionProvider_;
    [NullableAttribute("2")]
private static Delegate cb_setAlphabeticShortcut_C;
    private IntPtr id_setAlphabeticShortcut_C;
    [NullableAttribute("2")]
private static Delegate cb_setCheckable_Z;
    private IntPtr id_setCheckable_Z;
    [NullableAttribute("2")]
private static Delegate cb_setChecked_Z;
    private IntPtr id_setChecked_Z;
    [NullableAttribute("2")]
private static Delegate cb_setEnabled_Z;
    private IntPtr id_setEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setIcon_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setIcon_I;
    private IntPtr id_setIcon_I;
    [NullableAttribute("2")]
private static Delegate cb_setIntent_Landroid_content_Intent_;
    private IntPtr id_setIntent_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_setNumericShortcut_C;
    private IntPtr id_setNumericShortcut_C;
    [NullableAttribute("2")]
private static Delegate cb_setOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_;
    private IntPtr id_setOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_;
    [NullableAttribute("2")]
private static Delegate cb_setOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_;
    private IntPtr id_setOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_;
    [NullableAttribute("2")]
private static Delegate cb_setShortcut_CC;
    private IntPtr id_setShortcut_CC;
    [NullableAttribute("2")]
private static Delegate cb_setTitle_I;
    private IntPtr id_setTitle_I;
    [NullableAttribute("2")]
private static Delegate cb_setTitle_Ljava_lang_CharSequence_;
    private IntPtr id_setTitle_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setTitleCondensed_Ljava_lang_CharSequence_;
    private IntPtr id_setTitleCondensed_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setVisible_Z;
    private IntPtr id_setVisible_Z;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public View ActionView { get; }
    public int AlphabeticModifiers { get; }
    [NullableAttribute("2")]
public ICharSequence ContentDescriptionFormatted { get; }
    [NullableAttribute("2")]
public ColorStateList IconTintList { get; }
    [NullableAttribute("2")]
public Mode IconTintMode { get; }
    public bool IsActionViewExpanded { get; }
    public int NumericModifiers { get; }
    [NullableAttribute("2")]
public ActionProvider SupportActionProvider { get; }
    [NullableAttribute("2")]
public ICharSequence TooltipTextFormatted { get; }
    [NullableAttribute("2")]
public ActionProvider ActionProvider { get; }
    public char AlphabeticShortcut { get; }
    public int GroupId { get; }
    public bool HasSubMenu { get; }
    [NullableAttribute("2")]
public Drawable Icon { get; }
    [NullableAttribute("2")]
public Intent Intent { get; }
    public bool IsCheckable { get; }
    public bool IsChecked { get; }
    public bool IsEnabled { get; }
    public bool IsVisible { get; }
    public int ItemId { get; }
    [NullableAttribute("2")]
public IContextMenuContextMenuInfo MenuInfo { get; }
    public char NumericShortcut { get; }
    public int Order { get; }
    [NullableAttribute("2")]
public ISubMenu SubMenu { get; }
    [NullableAttribute("2")]
public ICharSequence TitleFormatted { get; }
    [NullableAttribute("2")]
public ICharSequence TitleCondensedFormatted { get; }
    public ISupportMenuItemInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportMenuItemInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISupportMenuItem GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetActionViewHandler();
    private static IntPtr n_GetActionView(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual View get_ActionView();
    private static Delegate GetGetAlphabeticModifiersHandler();
    private static int n_GetAlphabeticModifiers(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_AlphabeticModifiers();
    private static Delegate GetGetContentDescriptionHandler();
    private static IntPtr n_GetContentDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ICharSequence get_ContentDescriptionFormatted();
    private static Delegate GetGetIconTintListHandler();
    private static IntPtr n_GetIconTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ColorStateList get_IconTintList();
    private static Delegate GetGetIconTintModeHandler();
    private static IntPtr n_GetIconTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Mode get_IconTintMode();
    private static Delegate GetIsActionViewExpandedHandler();
    private static bool n_IsActionViewExpanded(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActionViewExpanded();
    private static Delegate GetGetNumericModifiersHandler();
    private static int n_GetNumericModifiers(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_NumericModifiers();
    private static Delegate GetGetSupportActionProviderHandler();
    private static IntPtr n_GetSupportActionProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ActionProvider get_SupportActionProvider();
    private static Delegate GetGetTooltipTextHandler();
    private static IntPtr n_GetTooltipText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ICharSequence get_TooltipTextFormatted();
    private static Delegate GetCollapseActionViewHandler();
    private static bool n_CollapseActionView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool CollapseActionView();
    private static Delegate GetExpandActionViewHandler();
    private static bool n_ExpandActionView(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool ExpandActionView();
    private static Delegate GetRequiresActionButtonHandler();
    private static bool n_RequiresActionButton(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool RequiresActionButton();
    private static Delegate GetRequiresOverflowHandler();
    private static bool n_RequiresOverflow(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool RequiresOverflow();
    private static Delegate GetSetActionView_Landroid_view_View_Handler();
    private static IntPtr n_SetActionView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual IMenuItem SetActionView(View view);
    private static Delegate GetSetActionView_IHandler();
    private static IntPtr n_SetActionView_I(IntPtr jnienv, IntPtr native__this, int resId);
    public sealed virtual IMenuItem SetActionView(int resId);
    private static Delegate GetSetAlphabeticShortcut_CIHandler();
    private static IntPtr n_SetAlphabeticShortcut_CI(IntPtr jnienv, IntPtr native__this, char alphaChar, int alphaModifiers);
    public sealed virtual IMenuItem SetAlphabeticShortcut(char alphaChar, int alphaModifiers);
    private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentDescription);
    public sealed virtual ISupportMenuItem SetContentDescription(ICharSequence contentDescription);
    private static Delegate GetSetIconTintList_Landroid_content_res_ColorStateList_Handler();
    private static IntPtr n_SetIconTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual IMenuItem SetIconTintList(ColorStateList tint);
    private static Delegate GetSetIconTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static IntPtr n_SetIconTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual IMenuItem SetIconTintMode(Mode tintMode);
    private static Delegate GetSetNumericShortcut_CIHandler();
    private static IntPtr n_SetNumericShortcut_CI(IntPtr jnienv, IntPtr native__this, char numericChar, int numericModifiers);
    public sealed virtual IMenuItem SetNumericShortcut(char numericChar, int numericModifiers);
    private static Delegate GetSetShortcut_CCIIHandler();
    private static IntPtr n_SetShortcut_CCII(IntPtr jnienv, IntPtr native__this, char numericChar, char alphaChar, int numericModifiers, int alphaModifiers);
    public sealed virtual IMenuItem SetShortcut(char numericChar, char alphaChar, int numericModifiers, int alphaModifiers);
    private static Delegate GetSetShowAsAction_IHandler();
    private static void n_SetShowAsAction_I(IntPtr jnienv, IntPtr native__this, int native_actionEnum);
    public sealed virtual void SetShowAsAction(ShowAsAction actionEnum);
    private static Delegate GetSetShowAsActionFlags_IHandler();
    private static IntPtr n_SetShowAsActionFlags_I(IntPtr jnienv, IntPtr native__this, int native_actionEnum);
    public sealed virtual IMenuItem SetShowAsActionFlags(ShowAsAction actionEnum);
    private static Delegate GetSetSupportActionProvider_Landroidx_core_view_ActionProvider_Handler();
    private static IntPtr n_SetSupportActionProvider_Landroidx_core_view_ActionProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_actionProvider);
    public sealed virtual ISupportMenuItem SetSupportActionProvider(ActionProvider actionProvider);
    private static Delegate GetSetTooltipText_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetTooltipText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_tooltipText);
    public sealed virtual ISupportMenuItem SetTooltipText(ICharSequence tooltipText);
    private static Delegate GetGetActionProviderHandler();
    private static IntPtr n_GetActionProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ActionProvider get_ActionProvider();
    private static Delegate GetGetAlphabeticShortcutHandler();
    private static char n_GetAlphabeticShortcut(IntPtr jnienv, IntPtr native__this);
    public sealed virtual char get_AlphabeticShortcut();
    private static Delegate GetGetGroupIdHandler();
    private static int n_GetGroupId(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_GroupId();
    private static Delegate GetGetHasSubMenuHandler();
    private static bool n_GetHasSubMenu(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasSubMenu();
    private static Delegate GetGetIconHandler();
    private static IntPtr n_GetIcon(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Drawable get_Icon();
    private static Delegate GetGetIntentHandler();
    private static IntPtr n_GetIntent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Intent get_Intent();
    private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCheckable();
    private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsChecked();
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEnabled();
    private static Delegate GetIsVisibleHandler();
    private static bool n_IsVisible(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsVisible();
    private static Delegate GetGetItemIdHandler();
    private static int n_GetItemId(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_ItemId();
    private static Delegate GetGetMenuInfoHandler();
    private static IntPtr n_GetMenuInfo(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IContextMenuContextMenuInfo get_MenuInfo();
    private static Delegate GetGetNumericShortcutHandler();
    private static char n_GetNumericShortcut(IntPtr jnienv, IntPtr native__this);
    public sealed virtual char get_NumericShortcut();
    private static Delegate GetGetOrderHandler();
    private static int n_GetOrder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_Order();
    private static Delegate GetGetSubMenuHandler();
    private static IntPtr n_GetSubMenu(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ISubMenu get_SubMenu();
    private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ICharSequence get_TitleFormatted();
    private static Delegate GetGetTitleCondensedHandler();
    private static IntPtr n_GetTitleCondensed(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual ICharSequence get_TitleCondensedFormatted();
    private static Delegate GetSetActionProvider_Landroid_view_ActionProvider_Handler();
    private static IntPtr n_SetActionProvider_Landroid_view_ActionProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_actionProvider);
    public sealed virtual IMenuItem SetActionProvider(ActionProvider actionProvider);
    private static Delegate GetSetAlphabeticShortcut_CHandler();
    private static IntPtr n_SetAlphabeticShortcut_C(IntPtr jnienv, IntPtr native__this, char alphaChar);
    public sealed virtual IMenuItem SetAlphabeticShortcut(char alphaChar);
    private static Delegate GetSetCheckable_ZHandler();
    private static IntPtr n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    public sealed virtual IMenuItem SetCheckable(bool checkable);
    private static Delegate GetSetChecked_ZHandler();
    private static IntPtr n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    public sealed virtual IMenuItem SetChecked(bool checked);
    private static Delegate GetSetEnabled_ZHandler();
    private static IntPtr n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual IMenuItem SetEnabled(bool enabled);
    private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual IMenuItem SetIcon(Drawable icon);
    private static Delegate GetSetIcon_IHandler();
    private static IntPtr n_SetIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual IMenuItem SetIcon(int iconRes);
    private static Delegate GetSetIntent_Landroid_content_Intent_Handler();
    private static IntPtr n_SetIntent_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    public sealed virtual IMenuItem SetIntent(Intent intent);
    private static Delegate GetSetNumericShortcut_CHandler();
    private static IntPtr n_SetNumericShortcut_C(IntPtr jnienv, IntPtr native__this, char numericChar);
    public sealed virtual IMenuItem SetNumericShortcut(char numericChar);
    private static Delegate GetSetOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_Handler();
    private static IntPtr n_SetOnActionExpandListener_Landroid_view_MenuItem_OnActionExpandListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    public sealed virtual IMenuItem SetOnActionExpandListener(IMenuItemOnActionExpandListener listener);
    private static Delegate GetSetOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_Handler();
    private static IntPtr n_SetOnMenuItemClickListener_Landroid_view_MenuItem_OnMenuItemClickListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_menuItemClickListener);
    public sealed virtual IMenuItem SetOnMenuItemClickListener(IMenuItemOnMenuItemClickListener menuItemClickListener);
    private static Delegate GetSetShortcut_CCHandler();
    private static IntPtr n_SetShortcut_CC(IntPtr jnienv, IntPtr native__this, char numericChar, char alphaChar);
    public sealed virtual IMenuItem SetShortcut(char numericChar, char alphaChar);
    private static Delegate GetSetTitle_IHandler();
    private static IntPtr n_SetTitle_I(IntPtr jnienv, IntPtr native__this, int title);
    public sealed virtual IMenuItem SetTitle(int title);
    private static Delegate GetSetTitle_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem SetTitle(ICharSequence title);
    private static Delegate GetSetTitleCondensed_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetTitleCondensed_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem SetTitleCondensed(ICharSequence title);
    private static Delegate GetSetVisible_ZHandler();
    private static IntPtr n_SetVisible_Z(IntPtr jnienv, IntPtr native__this, bool visible);
    public sealed virtual IMenuItem SetVisible(bool visible);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/internal/view/SupportSubMenu", "", "AndroidX.Core.Internal.View.ISupportSubMenuInvoker")]
public interface AndroidX.Core.Internal.View.ISupportSubMenu {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/internal/view/SupportSubMenu")]
internal class AndroidX.Core.Internal.View.ISupportSubMenuInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getItem;
    private IntPtr id_getItem;
    private static Delegate cb_clearHeader;
    private IntPtr id_clearHeader;
    private static Delegate cb_setHeaderIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setHeaderIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setHeaderIcon_I;
    private IntPtr id_setHeaderIcon_I;
    private static Delegate cb_setHeaderTitle_I;
    private IntPtr id_setHeaderTitle_I;
    private static Delegate cb_setHeaderTitle_Ljava_lang_CharSequence_;
    private IntPtr id_setHeaderTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_setHeaderView_Landroid_view_View_;
    private IntPtr id_setHeaderView_Landroid_view_View_;
    private static Delegate cb_setIcon_Landroid_graphics_drawable_Drawable_;
    private IntPtr id_setIcon_Landroid_graphics_drawable_Drawable_;
    private static Delegate cb_setIcon_I;
    private IntPtr id_setIcon_I;
    private static Delegate cb_hasVisibleItems;
    private IntPtr id_hasVisibleItems;
    private static Delegate cb_add_IIII;
    private IntPtr id_add_IIII;
    private static Delegate cb_add_IIILjava_lang_CharSequence_;
    private IntPtr id_add_IIILjava_lang_CharSequence_;
    private static Delegate cb_add_I;
    private IntPtr id_add_I;
    private static Delegate cb_add_Ljava_lang_CharSequence_;
    private IntPtr id_add_Ljava_lang_CharSequence_;
    private static Delegate cb_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private IntPtr id_addIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_;
    private static Delegate cb_addSubMenu_IIII;
    private IntPtr id_addSubMenu_IIII;
    private static Delegate cb_addSubMenu_IIILjava_lang_CharSequence_;
    private IntPtr id_addSubMenu_IIILjava_lang_CharSequence_;
    private static Delegate cb_addSubMenu_I;
    private IntPtr id_addSubMenu_I;
    private static Delegate cb_addSubMenu_Ljava_lang_CharSequence_;
    private IntPtr id_addSubMenu_Ljava_lang_CharSequence_;
    private static Delegate cb_clear;
    private IntPtr id_clear;
    private static Delegate cb_close;
    private IntPtr id_close;
    private static Delegate cb_findItem_I;
    private IntPtr id_findItem_I;
    private static Delegate cb_getItem_I;
    private IntPtr id_getItem_I;
    private static Delegate cb_isShortcutKey_ILandroid_view_KeyEvent_;
    private IntPtr id_isShortcutKey_ILandroid_view_KeyEvent_;
    private static Delegate cb_performIdentifierAction_II;
    private IntPtr id_performIdentifierAction_II;
    private static Delegate cb_performShortcut_ILandroid_view_KeyEvent_I;
    private IntPtr id_performShortcut_ILandroid_view_KeyEvent_I;
    private static Delegate cb_removeGroup_I;
    private IntPtr id_removeGroup_I;
    private static Delegate cb_removeItem_I;
    private IntPtr id_removeItem_I;
    private static Delegate cb_setGroupCheckable_IZZ;
    private IntPtr id_setGroupCheckable_IZZ;
    private static Delegate cb_setGroupEnabled_IZ;
    private IntPtr id_setGroupEnabled_IZ;
    private static Delegate cb_setGroupVisible_IZ;
    private IntPtr id_setGroupVisible_IZ;
    private static Delegate cb_setQwertyMode_Z;
    private IntPtr id_setQwertyMode_Z;
    private static Delegate cb_size;
    private IntPtr id_size;
    private static Delegate cb_setGroupDividerEnabled_Z;
    private IntPtr id_setGroupDividerEnabled_Z;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IMenuItem Item { get; }
    public bool HasVisibleItems { get; }
    public ISupportSubMenuInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupportSubMenuInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ISupportSubMenu GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetItemHandler();
    private static IntPtr n_GetItem(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IMenuItem get_Item();
    [NullableContextAttribute("1")]
private static Delegate GetClearHeaderHandler();
    private static void n_ClearHeader(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearHeader();
    [NullableContextAttribute("1")]
private static Delegate GetSetHeaderIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetHeaderIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual ISubMenu SetHeaderIcon(Drawable icon);
    [NullableContextAttribute("1")]
private static Delegate GetSetHeaderIcon_IHandler();
    private static IntPtr n_SetHeaderIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual ISubMenu SetHeaderIcon(int iconRes);
    [NullableContextAttribute("1")]
private static Delegate GetSetHeaderTitle_IHandler();
    private static IntPtr n_SetHeaderTitle_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu SetHeaderTitle(int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetSetHeaderTitle_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_SetHeaderTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu SetHeaderTitle(ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetSetHeaderView_Landroid_view_View_Handler();
    private static IntPtr n_SetHeaderView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual ISubMenu SetHeaderView(View view);
    [NullableContextAttribute("1")]
private static Delegate GetSetIcon_Landroid_graphics_drawable_Drawable_Handler();
    private static IntPtr n_SetIcon_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_icon);
    public sealed virtual ISubMenu SetIcon(Drawable icon);
    [NullableContextAttribute("1")]
private static Delegate GetSetIcon_IHandler();
    private static IntPtr n_SetIcon_I(IntPtr jnienv, IntPtr native__this, int iconRes);
    public sealed virtual ISubMenu SetIcon(int iconRes);
    [NullableContextAttribute("1")]
private static Delegate GetGetHasVisibleItemsHandler();
    private static bool n_GetHasVisibleItems(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasVisibleItems();
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IIIIHandler();
    private static IntPtr n_Add_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_Add_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual IMenuItem Add(int groupId, int itemId, int order, ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_IHandler();
    private static IntPtr n_Add_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual IMenuItem Add(int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAdd_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_Add_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual IMenuItem Add(ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_Handler();
    private static int n_AddIntentOptions_IIILandroid_content_ComponentName_arrayLandroid_content_Intent_Landroid_content_Intent_IarrayLandroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_caller, IntPtr native_specifics, IntPtr native_intent, int native_flags, IntPtr native_outSpecificItems);
    public sealed virtual int AddIntentOptions(int groupId, int itemId, int order, ComponentName caller, Intent[] specifics, Intent intent, MenuAppendFlags flags, IMenuItem[] outSpecificItems);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IIIIHandler();
    private static IntPtr n_AddSubMenu_IIII(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IIILjava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_IIILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int groupId, int itemId, int order, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(int groupId, int itemId, int order, ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_IHandler();
    private static IntPtr n_AddSubMenu_I(IntPtr jnienv, IntPtr native__this, int titleRes);
    public sealed virtual ISubMenu AddSubMenu(int titleRes);
    [NullableContextAttribute("1")]
private static Delegate GetAddSubMenu_Ljava_lang_CharSequence_Handler();
    private static IntPtr n_AddSubMenu_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    public sealed virtual ISubMenu AddSubMenu(ICharSequence title);
    [NullableContextAttribute("1")]
private static Delegate GetClearHandler();
    private static void n_Clear(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Clear();
    [NullableContextAttribute("1")]
private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
    [NullableContextAttribute("1")]
private static Delegate GetFindItem_IHandler();
    private static IntPtr n_FindItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual IMenuItem FindItem(int id);
    [NullableContextAttribute("1")]
private static Delegate GetGetItem_IHandler();
    private static IntPtr n_GetItem_I(IntPtr jnienv, IntPtr native__this, int index);
    public sealed virtual IMenuItem GetItem(int index);
    [NullableContextAttribute("1")]
private static Delegate GetIsShortcutKey_ILandroid_view_KeyEvent_Handler();
    private static bool n_IsShortcutKey_ILandroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e);
    public sealed virtual bool IsShortcutKey(Keycode keyCode, KeyEvent e);
    [NullableContextAttribute("1")]
private static Delegate GetPerformIdentifierAction_IIHandler();
    private static bool n_PerformIdentifierAction_II(IntPtr jnienv, IntPtr native__this, int id, int native_flags);
    public sealed virtual bool PerformIdentifierAction(int id, MenuPerformFlags flags);
    [NullableContextAttribute("1")]
private static Delegate GetPerformShortcut_ILandroid_view_KeyEvent_IHandler();
    private static bool n_PerformShortcut_ILandroid_view_KeyEvent_I(IntPtr jnienv, IntPtr native__this, int native_keyCode, IntPtr native_e, int native_flags);
    public sealed virtual bool PerformShortcut(Keycode keyCode, KeyEvent e, MenuPerformFlags flags);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveGroup_IHandler();
    private static void n_RemoveGroup_I(IntPtr jnienv, IntPtr native__this, int groupId);
    public sealed virtual void RemoveGroup(int groupId);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveItem_IHandler();
    private static void n_RemoveItem_I(IntPtr jnienv, IntPtr native__this, int id);
    public sealed virtual void RemoveItem(int id);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupCheckable_IZZHandler();
    private static void n_SetGroupCheckable_IZZ(IntPtr jnienv, IntPtr native__this, int group, bool checkable, bool exclusive);
    public sealed virtual void SetGroupCheckable(int group, bool checkable, bool exclusive);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupEnabled_IZHandler();
    private static void n_SetGroupEnabled_IZ(IntPtr jnienv, IntPtr native__this, int group, bool enabled);
    public sealed virtual void SetGroupEnabled(int group, bool enabled);
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupVisible_IZHandler();
    private static void n_SetGroupVisible_IZ(IntPtr jnienv, IntPtr native__this, int group, bool visible);
    public sealed virtual void SetGroupVisible(int group, bool visible);
    [NullableContextAttribute("1")]
private static Delegate GetSetQwertyMode_ZHandler();
    private static void n_SetQwertyMode_Z(IntPtr jnienv, IntPtr native__this, bool isQwerty);
    public sealed virtual void SetQwertyMode(bool isQwerty);
    [NullableContextAttribute("1")]
private static Delegate GetSizeHandler();
    private static int n_Size(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Size();
    [NullableContextAttribute("1")]
private static Delegate GetSetGroupDividerEnabled_ZHandler();
    private static void n_SetGroupDividerEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    public sealed virtual void SetGroupDividerEnabled(bool isEnabled);
}
[RegisterAttribute("androidx/core/internal/view/SupportMenu")]
public abstract class AndroidX.Core.Internal.View.SupportMenu : Object {
    [RegisterAttribute("CATEGORY_MASK")]
public static int CategoryMask;
    [RegisterAttribute("CATEGORY_SHIFT")]
public static int CategoryShift;
    [RegisterAttribute("FLAG_KEEP_OPEN_ON_SUBMENU_OPENED")]
public static int FlagKeepOpenOnSubmenuOpened;
    [RegisterAttribute("SUPPORTED_MODIFIERS_MASK")]
public static int SupportedModifiersMask;
    [RegisterAttribute("USER_MASK")]
public static int UserMask;
    [RegisterAttribute("USER_SHIFT")]
public static int UserShift;
}
[RegisterAttribute("androidx/core/internal/view/SupportMenu")]
[ObsoleteAttribute("Use the 'SupportMenu' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.Internal.View.SupportMenuConsts : SupportMenu {
}
[RegisterAttribute("androidx/core/internal/view/SupportMenuItem")]
public abstract class AndroidX.Core.Internal.View.SupportMenuItem : Object {
    [RegisterAttribute("SHOW_AS_ACTION_ALWAYS")]
public static int ShowAsActionAlways;
    [RegisterAttribute("SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW")]
public static int ShowAsActionCollapseActionView;
    [RegisterAttribute("SHOW_AS_ACTION_IF_ROOM")]
public static int ShowAsActionIfRoom;
    [RegisterAttribute("SHOW_AS_ACTION_NEVER")]
public static int ShowAsActionNever;
    [RegisterAttribute("SHOW_AS_ACTION_WITH_TEXT")]
public static int ShowAsActionWithText;
}
[RegisterAttribute("androidx/core/internal/view/SupportMenuItem")]
[ObsoleteAttribute("Use the 'SupportMenuItem' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.Internal.View.SupportMenuItemConsts : SupportMenuItem {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/GnssStatusCompat")]
public abstract class AndroidX.Core.Location.GnssStatusCompat : Object {
    [RegisterAttribute("CONSTELLATION_BEIDOU")]
public static int ConstellationBeidou;
    [RegisterAttribute("CONSTELLATION_GALILEO")]
public static int ConstellationGalileo;
    [RegisterAttribute("CONSTELLATION_GLONASS")]
public static int ConstellationGlonass;
    [RegisterAttribute("CONSTELLATION_GPS")]
public static int ConstellationGps;
    [RegisterAttribute("CONSTELLATION_IRNSS")]
public static int ConstellationIrnss;
    [RegisterAttribute("CONSTELLATION_QZSS")]
public static int ConstellationQzss;
    [RegisterAttribute("CONSTELLATION_SBAS")]
public static int ConstellationSbas;
    [RegisterAttribute("CONSTELLATION_UNKNOWN")]
public static int ConstellationUnknown;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getSatelliteCount;
    [NullableAttribute("2")]
private static Delegate cb_getAzimuthDegrees_I;
    [NullableAttribute("2")]
private static Delegate cb_getBasebandCn0DbHz_I;
    [NullableAttribute("2")]
private static Delegate cb_getCarrierFrequencyHz_I;
    [NullableAttribute("2")]
private static Delegate cb_getCn0DbHz_I;
    [NullableAttribute("2")]
private static Delegate cb_getConstellationType_I;
    [NullableAttribute("2")]
private static Delegate cb_getElevationDegrees_I;
    [NullableAttribute("2")]
private static Delegate cb_getSvid_I;
    [NullableAttribute("2")]
private static Delegate cb_hasAlmanacData_I;
    [NullableAttribute("2")]
private static Delegate cb_hasBasebandCn0DbHz_I;
    [NullableAttribute("2")]
private static Delegate cb_hasCarrierFrequencyHz_I;
    [NullableAttribute("2")]
private static Delegate cb_hasEphemerisData_I;
    [NullableAttribute("2")]
private static Delegate cb_usedInFix_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int SatelliteCount { get; }
    protected GnssStatusCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static GnssStatusCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetSatelliteCountHandler();
    private static int n_GetSatelliteCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSatelliteCount", "()I", "GetGetSatelliteCountHandler")]
public abstract virtual int get_SatelliteCount();
    private static Delegate GetGetAzimuthDegrees_IHandler();
    private static float n_GetAzimuthDegrees_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getAzimuthDegrees", "(I)F", "GetGetAzimuthDegrees_IHandler")]
public abstract virtual float GetAzimuthDegrees(int satelliteIndex);
    private static Delegate GetGetBasebandCn0DbHz_IHandler();
    private static float n_GetBasebandCn0DbHz_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getBasebandCn0DbHz", "(I)F", "GetGetBasebandCn0DbHz_IHandler")]
public abstract virtual float GetBasebandCn0DbHz(int satelliteIndex);
    private static Delegate GetGetCarrierFrequencyHz_IHandler();
    private static float n_GetCarrierFrequencyHz_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getCarrierFrequencyHz", "(I)F", "GetGetCarrierFrequencyHz_IHandler")]
public abstract virtual float GetCarrierFrequencyHz(int satelliteIndex);
    private static Delegate GetGetCn0DbHz_IHandler();
    private static float n_GetCn0DbHz_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getCn0DbHz", "(I)F", "GetGetCn0DbHz_IHandler")]
public abstract virtual float GetCn0DbHz(int satelliteIndex);
    private static Delegate GetGetConstellationType_IHandler();
    private static int n_GetConstellationType_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getConstellationType", "(I)I", "GetGetConstellationType_IHandler")]
public abstract virtual int GetConstellationType(int satelliteIndex);
    private static Delegate GetGetElevationDegrees_IHandler();
    private static float n_GetElevationDegrees_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getElevationDegrees", "(I)F", "GetGetElevationDegrees_IHandler")]
public abstract virtual float GetElevationDegrees(int satelliteIndex);
    private static Delegate GetGetSvid_IHandler();
    private static int n_GetSvid_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("getSvid", "(I)I", "GetGetSvid_IHandler")]
public abstract virtual int GetSvid(int satelliteIndex);
    private static Delegate GetHasAlmanacData_IHandler();
    private static bool n_HasAlmanacData_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("hasAlmanacData", "(I)Z", "GetHasAlmanacData_IHandler")]
public abstract virtual bool HasAlmanacData(int satelliteIndex);
    private static Delegate GetHasBasebandCn0DbHz_IHandler();
    private static bool n_HasBasebandCn0DbHz_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("hasBasebandCn0DbHz", "(I)Z", "GetHasBasebandCn0DbHz_IHandler")]
public abstract virtual bool HasBasebandCn0DbHz(int satelliteIndex);
    private static Delegate GetHasCarrierFrequencyHz_IHandler();
    private static bool n_HasCarrierFrequencyHz_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("hasCarrierFrequencyHz", "(I)Z", "GetHasCarrierFrequencyHz_IHandler")]
public abstract virtual bool HasCarrierFrequencyHz(int satelliteIndex);
    private static Delegate GetHasEphemerisData_IHandler();
    private static bool n_HasEphemerisData_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("hasEphemerisData", "(I)Z", "GetHasEphemerisData_IHandler")]
public abstract virtual bool HasEphemerisData(int satelliteIndex);
    private static Delegate GetUsedInFix_IHandler();
    private static bool n_UsedInFix_I(IntPtr jnienv, IntPtr native__this, int satelliteIndex);
    [RegisterAttribute("usedInFix", "(I)Z", "GetUsedInFix_IHandler")]
public abstract virtual bool UsedInFix(int satelliteIndex);
    [RegisterAttribute("wrap", "(Landroid/location/GnssStatus;)Landroidx/core/location/GnssStatusCompat;", "")]
public static GnssStatusCompat Wrap(GnssStatus gnssStatus);
    [RegisterAttribute("wrap", "(Landroid/location/GpsStatus;)Landroidx/core/location/GnssStatusCompat;", "")]
public static GnssStatusCompat Wrap(GpsStatus gpsStatus);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/GnssStatusCompat")]
internal class AndroidX.Core.Location.GnssStatusCompatInvoker : GnssStatusCompat {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int SatelliteCount { get; }
    public GnssStatusCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static GnssStatusCompatInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getSatelliteCount", "()I", "GetGetSatelliteCountHandler")]
public virtual int get_SatelliteCount();
    [RegisterAttribute("getAzimuthDegrees", "(I)F", "GetGetAzimuthDegrees_IHandler")]
public virtual float GetAzimuthDegrees(int satelliteIndex);
    [RegisterAttribute("getBasebandCn0DbHz", "(I)F", "GetGetBasebandCn0DbHz_IHandler")]
public virtual float GetBasebandCn0DbHz(int satelliteIndex);
    [RegisterAttribute("getCarrierFrequencyHz", "(I)F", "GetGetCarrierFrequencyHz_IHandler")]
public virtual float GetCarrierFrequencyHz(int satelliteIndex);
    [RegisterAttribute("getCn0DbHz", "(I)F", "GetGetCn0DbHz_IHandler")]
public virtual float GetCn0DbHz(int satelliteIndex);
    [RegisterAttribute("getConstellationType", "(I)I", "GetGetConstellationType_IHandler")]
public virtual int GetConstellationType(int satelliteIndex);
    [RegisterAttribute("getElevationDegrees", "(I)F", "GetGetElevationDegrees_IHandler")]
public virtual float GetElevationDegrees(int satelliteIndex);
    [RegisterAttribute("getSvid", "(I)I", "GetGetSvid_IHandler")]
public virtual int GetSvid(int satelliteIndex);
    [RegisterAttribute("hasAlmanacData", "(I)Z", "GetHasAlmanacData_IHandler")]
public virtual bool HasAlmanacData(int satelliteIndex);
    [RegisterAttribute("hasBasebandCn0DbHz", "(I)Z", "GetHasBasebandCn0DbHz_IHandler")]
public virtual bool HasBasebandCn0DbHz(int satelliteIndex);
    [RegisterAttribute("hasCarrierFrequencyHz", "(I)Z", "GetHasCarrierFrequencyHz_IHandler")]
public virtual bool HasCarrierFrequencyHz(int satelliteIndex);
    [RegisterAttribute("hasEphemerisData", "(I)Z", "GetHasEphemerisData_IHandler")]
public virtual bool HasEphemerisData(int satelliteIndex);
    [RegisterAttribute("usedInFix", "(I)Z", "GetUsedInFix_IHandler")]
public virtual bool UsedInFix(int satelliteIndex);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/core/location/LocationListenerCompat", "", "AndroidX.Core.Location.ILocationListenerCompatInvoker")]
public interface AndroidX.Core.Location.ILocationListenerCompat {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onFlushComplete_I;
    [NullableAttribute("2")]
private static Delegate cb_onLocationChanged_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_onProviderDisabled_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_onProviderEnabled_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_onStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_;
    private static ILocationListenerCompat();
    private static Delegate GetOnFlushComplete_IHandler();
    private static void n_OnFlushComplete_I(IntPtr jnienv, IntPtr native__this, int requestCode);
    [RegisterAttribute("onFlushComplete", "(I)V", "GetOnFlushComplete_IHandler:AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core")]
private sealed virtual override void Android.Locations.ILocationListener.OnFlushComplete(int requestCode);
    private static Delegate GetOnLocationChanged_Ljava_util_List_Handler();
    private static void n_OnLocationChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_locations);
    [RegisterAttribute("onLocationChanged", "(Ljava/util/List;)V", "GetOnLocationChanged_Ljava_util_List_Handler:AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core")]
public virtual void OnLocationChanged(IList`1<Location> locations);
    private static Delegate GetOnProviderDisabled_Ljava_lang_String_Handler();
    private static void n_OnProviderDisabled_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider);
    [RegisterAttribute("onProviderDisabled", "(Ljava/lang/String;)V", "GetOnProviderDisabled_Ljava_lang_String_Handler:AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core")]
private sealed virtual override void Android.Locations.ILocationListener.OnProviderDisabled(string provider);
    private static Delegate GetOnProviderEnabled_Ljava_lang_String_Handler();
    private static void n_OnProviderEnabled_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider);
    [RegisterAttribute("onProviderEnabled", "(Ljava/lang/String;)V", "GetOnProviderEnabled_Ljava_lang_String_Handler:AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core")]
private sealed virtual override void Android.Locations.ILocationListener.OnProviderEnabled(string provider);
    private static Delegate GetOnStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_Handler();
    private static void n_OnStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider, int status, IntPtr native_extras);
    [RegisterAttribute("onStatusChanged", "(Ljava/lang/String;ILandroid/os/Bundle;)V", "GetOnStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_Handler:AndroidX.Core.Location.ILocationListenerCompat, Xamarin.AndroidX.Core")]
public virtual void OnStatusChanged(string provider, int status, Bundle extras);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/LocationListenerCompat")]
internal class AndroidX.Core.Location.ILocationListenerCompatInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onLocationChanged_Landroid_location_Location_;
    private IntPtr id_onLocationChanged_Landroid_location_Location_;
    [NullableAttribute("2")]
private static Delegate cb_onStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_;
    private IntPtr id_onStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILocationListenerCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILocationListenerCompatInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ILocationListenerCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnLocationChanged_Landroid_location_Location_Handler();
    private static void n_OnLocationChanged_Landroid_location_Location_(IntPtr jnienv, IntPtr native__this, IntPtr native_location);
    public sealed virtual void OnLocationChanged(Location location);
    private static Delegate GetOnStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_Handler();
    private static void n_OnStatusChanged_Ljava_lang_String_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider, int native_status, IntPtr native_extras);
    [NullableContextAttribute("2")]
public sealed virtual void OnStatusChanged(string provider, Availability status, Bundle extras);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/LocationCompat")]
public class AndroidX.Core.Location.LocationCompat : Object {
    [RegisterAttribute("EXTRA_BEARING_ACCURACY")]
public static string ExtraBearingAccuracy;
    [RegisterAttribute("EXTRA_IS_MOCK")]
public static string ExtraIsMock;
    [RegisterAttribute("EXTRA_MSL_ALTITUDE")]
public static string ExtraMslAltitude;
    [RegisterAttribute("EXTRA_MSL_ALTITUDE_ACCURACY")]
public static string ExtraMslAltitudeAccuracy;
    [RegisterAttribute("EXTRA_SPEED_ACCURACY")]
public static string ExtraSpeedAccuracy;
    [RegisterAttribute("EXTRA_VERTICAL_ACCURACY")]
public static string ExtraVerticalAccuracy;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LocationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBearingAccuracyDegrees", "(Landroid/location/Location;)F", "")]
public static float GetBearingAccuracyDegrees(Location location);
    [RegisterAttribute("getElapsedRealtimeMillis", "(Landroid/location/Location;)J", "")]
public static long GetElapsedRealtimeMillis(Location location);
    [RegisterAttribute("getElapsedRealtimeNanos", "(Landroid/location/Location;)J", "")]
public static long GetElapsedRealtimeNanos(Location location);
    [RegisterAttribute("getMslAltitudeAccuracyMeters", "(Landroid/location/Location;)F", "")]
public static float GetMslAltitudeAccuracyMeters(Location location);
    [RegisterAttribute("getMslAltitudeMeters", "(Landroid/location/Location;)D", "")]
public static double GetMslAltitudeMeters(Location location);
    [RegisterAttribute("getSpeedAccuracyMetersPerSecond", "(Landroid/location/Location;)F", "")]
public static float GetSpeedAccuracyMetersPerSecond(Location location);
    [RegisterAttribute("getVerticalAccuracyMeters", "(Landroid/location/Location;)F", "")]
public static float GetVerticalAccuracyMeters(Location location);
    [RegisterAttribute("hasBearingAccuracy", "(Landroid/location/Location;)Z", "")]
public static bool HasBearingAccuracy(Location location);
    [RegisterAttribute("hasMslAltitude", "(Landroid/location/Location;)Z", "")]
public static bool HasMslAltitude(Location location);
    [RegisterAttribute("hasMslAltitudeAccuracy", "(Landroid/location/Location;)Z", "")]
public static bool HasMslAltitudeAccuracy(Location location);
    [RegisterAttribute("hasSpeedAccuracy", "(Landroid/location/Location;)Z", "")]
public static bool HasSpeedAccuracy(Location location);
    [RegisterAttribute("hasVerticalAccuracy", "(Landroid/location/Location;)Z", "")]
public static bool HasVerticalAccuracy(Location location);
    [RegisterAttribute("isMock", "(Landroid/location/Location;)Z", "")]
public static bool IsMock(Location location);
    [RegisterAttribute("removeBearingAccuracy", "(Landroid/location/Location;)V", "")]
public static void RemoveBearingAccuracy(Location location);
    [RegisterAttribute("removeMslAltitude", "(Landroid/location/Location;)V", "")]
public static void RemoveMslAltitude(Location location);
    [RegisterAttribute("removeMslAltitudeAccuracy", "(Landroid/location/Location;)V", "")]
public static void RemoveMslAltitudeAccuracy(Location location);
    [RegisterAttribute("removeSpeedAccuracy", "(Landroid/location/Location;)V", "")]
public static void RemoveSpeedAccuracy(Location location);
    [RegisterAttribute("removeVerticalAccuracy", "(Landroid/location/Location;)V", "")]
public static void RemoveVerticalAccuracy(Location location);
    [RegisterAttribute("setBearingAccuracyDegrees", "(Landroid/location/Location;F)V", "")]
public static void SetBearingAccuracyDegrees(Location location, float bearingAccuracyD);
    [RegisterAttribute("setMock", "(Landroid/location/Location;Z)V", "")]
public static void SetMock(Location location, bool mock);
    [RegisterAttribute("setMslAltitudeAccuracyMeters", "(Landroid/location/Location;F)V", "")]
public static void SetMslAltitudeAccuracyMeters(Location location, float mslAltitudeAccuracyMeters);
    [RegisterAttribute("setMslAltitudeMeters", "(Landroid/location/Location;D)V", "")]
public static void SetMslAltitudeMeters(Location location, double mslAltitudeMeters);
    [RegisterAttribute("setSpeedAccuracyMetersPerSecond", "(Landroid/location/Location;F)V", "")]
public static void SetSpeedAccuracyMetersPerSecond(Location location, float speedAccuracyMps);
    [RegisterAttribute("setVerticalAccuracyMeters", "(Landroid/location/Location;F)V", "")]
public static void SetVerticalAccuracyMeters(Location location, float verticalAccuracyM);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/LocationManagerCompat")]
public class AndroidX.Core.Location.LocationManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LocationManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocationManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrentLocation", "(Landroid/location/LocationManager;Ljava/lang/String;Landroid/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroidx/core/util/Consumer;)V", "")]
public static void GetCurrentLocation(LocationManager locationManager, string provider, CancellationSignal cancellationSignal, IExecutor executor, IConsumer consumer);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getCurrentLocation", "(Landroid/location/LocationManager;Ljava/lang/String;Landroidx/core/os/CancellationSignal;Ljava/util/concurrent/Executor;Landroidx/core/util/Consumer;)V", "")]
public static void GetCurrentLocation(LocationManager locationManager, string provider, CancellationSignal cancellationSignal, IExecutor executor, IConsumer consumer);
    [RegisterAttribute("getGnssHardwareModelName", "(Landroid/location/LocationManager;)Ljava/lang/String;", "")]
public static string GetGnssHardwareModelName(LocationManager locationManager);
    [RegisterAttribute("getGnssYearOfHardware", "(Landroid/location/LocationManager;)I", "")]
public static int GetGnssYearOfHardware(LocationManager locationManager);
    [RegisterAttribute("hasProvider", "(Landroid/location/LocationManager;Ljava/lang/String;)Z", "")]
public static bool HasProvider(LocationManager locationManager, string provider);
    [RegisterAttribute("isLocationEnabled", "(Landroid/location/LocationManager;)Z", "")]
public static bool IsLocationEnabled(LocationManager locationManager);
    [RegisterAttribute("registerGnssMeasurementsCallback", "(Landroid/location/LocationManager;Landroid/location/GnssMeasurementsEvent$Callback;Landroid/os/Handler;)Z", "")]
public static bool RegisterGnssMeasurementsCallback(LocationManager locationManager, Callback callback, Handler handler);
    [RegisterAttribute("registerGnssMeasurementsCallback", "(Landroid/location/LocationManager;Ljava/util/concurrent/Executor;Landroid/location/GnssMeasurementsEvent$Callback;)Z", "")]
public static bool RegisterGnssMeasurementsCallback(LocationManager locationManager, IExecutor executor, Callback callback);
    [RegisterAttribute("registerGnssStatusCallback", "(Landroid/location/LocationManager;Landroidx/core/location/GnssStatusCompat$Callback;Landroid/os/Handler;)Z", "")]
public static bool RegisterGnssStatusCallback(LocationManager locationManager, Callback callback, Handler handler);
    [RegisterAttribute("registerGnssStatusCallback", "(Landroid/location/LocationManager;Ljava/util/concurrent/Executor;Landroidx/core/location/GnssStatusCompat$Callback;)Z", "")]
public static bool RegisterGnssStatusCallback(LocationManager locationManager, IExecutor executor, Callback callback);
    [RegisterAttribute("removeUpdates", "(Landroid/location/LocationManager;Landroidx/core/location/LocationListenerCompat;)V", "")]
public static void RemoveUpdates(LocationManager locationManager, ILocationListenerCompat listener);
    [RegisterAttribute("requestLocationUpdates", "(Landroid/location/LocationManager;Ljava/lang/String;Landroidx/core/location/LocationRequestCompat;Landroidx/core/location/LocationListenerCompat;Landroid/os/Looper;)V", "")]
public static void RequestLocationUpdates(LocationManager locationManager, string provider, LocationRequestCompat locationRequest, ILocationListenerCompat listener, Looper looper);
    [RegisterAttribute("requestLocationUpdates", "(Landroid/location/LocationManager;Ljava/lang/String;Landroidx/core/location/LocationRequestCompat;Ljava/util/concurrent/Executor;Landroidx/core/location/LocationListenerCompat;)V", "")]
public static void RequestLocationUpdates(LocationManager locationManager, string provider, LocationRequestCompat locationRequest, IExecutor executor, ILocationListenerCompat listener);
    [RegisterAttribute("unregisterGnssMeasurementsCallback", "(Landroid/location/LocationManager;Landroid/location/GnssMeasurementsEvent$Callback;)V", "")]
public static void UnregisterGnssMeasurementsCallback(LocationManager locationManager, Callback callback);
    [RegisterAttribute("unregisterGnssStatusCallback", "(Landroid/location/LocationManager;Landroidx/core/location/GnssStatusCompat$Callback;)V", "")]
public static void UnregisterGnssStatusCallback(LocationManager locationManager, Callback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/location/LocationRequestCompat")]
public class AndroidX.Core.Location.LocationRequestCompat : Object {
    [RegisterAttribute("PASSIVE_INTERVAL")]
public static long PassiveInterval;
    [RegisterAttribute("QUALITY_BALANCED_POWER_ACCURACY")]
public static int QualityBalancedPowerAccuracy;
    [RegisterAttribute("QUALITY_HIGH_ACCURACY")]
public static int QualityHighAccuracy;
    [RegisterAttribute("QUALITY_LOW_POWER")]
public static int QualityLowPower;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long DurationMillis { get; }
    public long IntervalMillis { get; }
    public long MaxUpdateDelayMillis { get; }
    public int MaxUpdates { get; }
    public float MinUpdateDistanceMeters { get; }
    public long MinUpdateIntervalMillis { get; }
    public int Quality { get; }
    internal LocationRequestCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocationRequestCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDurationMillis", "()J", "")]
public long get_DurationMillis();
    [RegisterAttribute("getIntervalMillis", "()J", "")]
public long get_IntervalMillis();
    [RegisterAttribute("getMaxUpdateDelayMillis", "()J", "")]
public long get_MaxUpdateDelayMillis();
    [RegisterAttribute("getMaxUpdates", "()I", "")]
public int get_MaxUpdates();
    [RegisterAttribute("getMinUpdateDistanceMeters", "()F", "")]
public float get_MinUpdateDistanceMeters();
    [RegisterAttribute("getMinUpdateIntervalMillis", "()J", "")]
public long get_MinUpdateIntervalMillis();
    [RegisterAttribute("getQuality", "()I", "")]
public int get_Quality();
    [RegisterAttribute("toLocationRequest", "()Landroid/location/LocationRequest;", "")]
public LocationRequest ToLocationRequest();
    [RegisterAttribute("toLocationRequest", "(Ljava/lang/String;)Landroid/location/LocationRequest;", "")]
public LocationRequest ToLocationRequest(string provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/math/MathUtils")]
public class AndroidX.Core.Math.MathUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MathUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static MathUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addExact", "(II)I", "")]
public static int AddExact(int x, int y);
    [RegisterAttribute("addExact", "(JJ)J", "")]
public static long AddExact(long x, long y);
    [RegisterAttribute("clamp", "(DDD)D", "")]
public static double Clamp(double value, double min, double max);
    [RegisterAttribute("clamp", "(FFF)F", "")]
public static float Clamp(float value, float min, float max);
    [RegisterAttribute("clamp", "(III)I", "")]
public static int Clamp(int value, int min, int max);
    [RegisterAttribute("clamp", "(JJJ)J", "")]
public static long Clamp(long value, long min, long max);
    [RegisterAttribute("decrementExact", "(I)I", "")]
public static int DecrementExact(int a);
    [RegisterAttribute("decrementExact", "(J)J", "")]
public static long DecrementExact(long a);
    [RegisterAttribute("incrementExact", "(I)I", "")]
public static int IncrementExact(int a);
    [RegisterAttribute("incrementExact", "(J)J", "")]
public static long IncrementExact(long a);
    [RegisterAttribute("multiplyExact", "(II)I", "")]
public static int MultiplyExact(int x, int y);
    [RegisterAttribute("multiplyExact", "(JJ)J", "")]
public static long MultiplyExact(long x, long y);
    [RegisterAttribute("negateExact", "(I)I", "")]
public static int NegateExact(int a);
    [RegisterAttribute("negateExact", "(J)J", "")]
public static long NegateExact(long a);
    [RegisterAttribute("subtractExact", "(II)I", "")]
public static int SubtractExact(int x, int y);
    [RegisterAttribute("subtractExact", "(JJ)J", "")]
public static long SubtractExact(long x, long y);
    [RegisterAttribute("toIntExact", "(J)I", "")]
public static int ToIntExact(long value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/net/ConnectivityManagerCompat")]
public class AndroidX.Core.Net.ConnectivityManagerCompat : Object {
    [RegisterAttribute("RESTRICT_BACKGROUND_STATUS_DISABLED")]
public static int RestrictBackgroundStatusDisabled;
    [RegisterAttribute("RESTRICT_BACKGROUND_STATUS_ENABLED")]
public static int RestrictBackgroundStatusEnabled;
    [RegisterAttribute("RESTRICT_BACKGROUND_STATUS_WHITELISTED")]
public static int RestrictBackgroundStatusWhitelisted;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ConnectivityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ConnectivityManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getNetworkInfoFromBroadcast", "(Landroid/net/ConnectivityManager;Landroid/content/Intent;)Landroid/net/NetworkInfo;", "")]
public static NetworkInfo GetNetworkInfoFromBroadcast(ConnectivityManager cm, Intent intent);
    [RegisterAttribute("getRestrictBackgroundStatus", "(Landroid/net/ConnectivityManager;)I", "")]
public static int GetRestrictBackgroundStatus(ConnectivityManager cm);
    [RegisterAttribute("isActiveNetworkMetered", "(Landroid/net/ConnectivityManager;)Z", "")]
public static bool IsActiveNetworkMetered(ConnectivityManager cm);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/net/MailTo")]
public class AndroidX.Core.Net.MailTo : Object {
    [NullableAttribute("1")]
[RegisterAttribute("MAILTO_SCHEME")]
public static string MailtoScheme;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Bcc { get; }
    public string Body { get; }
    public string Cc { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IDictionary`2<string, string> Headers { get; }
    public string Subject { get; }
    public string To { get; }
    internal MailTo(IntPtr javaReference, JniHandleOwnership transfer);
    private static MailTo();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBcc", "()Ljava/lang/String;", "")]
public string get_Bcc();
    [RegisterAttribute("getBody", "()Ljava/lang/String;", "")]
public string get_Body();
    [RegisterAttribute("getCc", "()Ljava/lang/String;", "")]
public string get_Cc();
    [RegisterAttribute("getHeaders", "()Ljava/util/Map;", "")]
public IDictionary`2<string, string> get_Headers();
    [RegisterAttribute("getSubject", "()Ljava/lang/String;", "")]
public string get_Subject();
    [RegisterAttribute("getTo", "()Ljava/lang/String;", "")]
public string get_To();
    [RegisterAttribute("isMailTo", "(Landroid/net/Uri;)Z", "")]
public static bool IsMailTo(Uri uri);
    [RegisterAttribute("isMailTo", "(Ljava/lang/String;)Z", "")]
public static bool IsMailTo(string uri);
    [NullableContextAttribute("1")]
[RegisterAttribute("parse", "(Landroid/net/Uri;)Landroidx/core/net/MailTo;", "")]
public static MailTo Parse(Uri uri);
    [NullableContextAttribute("1")]
[RegisterAttribute("parse", "(Ljava/lang/String;)Landroidx/core/net/MailTo;", "")]
public static MailTo Parse(string uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/net/ParseException")]
public class AndroidX.Core.Net.ParseException : RuntimeException {
    private static JniPeerMembers _members;
    [RegisterAttribute("response")]
public string Response { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ParseException(IntPtr javaReference, JniHandleOwnership transfer);
    private static ParseException();
    public string get_Response();
    public void set_Response(string value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/net/TrafficStatsCompat")]
public class AndroidX.Core.Net.TrafficStatsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public static int ThreadStatsTag { get; public set; }
    internal TrafficStatsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TrafficStatsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getThreadStatsTag", "()I", "")]
public static int get_ThreadStatsTag();
    [RegisterAttribute("setThreadStatsTag", "(I)V", "")]
public static void set_ThreadStatsTag(int value);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("clearThreadStatsTag", "()V", "")]
public static void ClearThreadStatsTag();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("incrementOperationCount", "(I)V", "")]
public static void IncrementOperationCount(int operationCount);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("incrementOperationCount", "(II)V", "")]
public static void IncrementOperationCount(int tag, int operationCount);
    [RegisterAttribute("tagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void TagDatagramSocket(DatagramSocket socket);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("tagSocket", "(Ljava/net/Socket;)V", "")]
public static void TagSocket(Socket socket);
    [RegisterAttribute("untagDatagramSocket", "(Ljava/net/DatagramSocket;)V", "")]
public static void UntagDatagramSocket(DatagramSocket socket);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("untagSocket", "(Ljava/net/Socket;)V", "")]
public static void UntagSocket(Socket socket);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/net/UriCompat")]
public class AndroidX.Core.Net.UriCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UriCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static UriCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("toSafeString", "(Landroid/net/Uri;)Ljava/lang/String;", "")]
public static string ToSafeString(Uri uri);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/BuildCompat")]
public class AndroidX.Core.OS.BuildCompat : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("AD_SERVICES_EXTENSION_INT")]
public static int AdServicesExtensionInt { get; }
    [RegisterAttribute("INSTANCE")]
public static BuildCompat Instance { get; }
    [RegisterAttribute("R_EXTENSION_INT")]
public static int RExtensionInt { get; }
    [RegisterAttribute("S_EXTENSION_INT")]
public static int SExtensionInt { get; }
    [RegisterAttribute("T_EXTENSION_INT")]
public static int TExtensionInt { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastN { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastNMR1 { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastO { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastOMR1 { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastP { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastQ { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastR { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastS { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastSv2 { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastT { get; }
    [ObsoleteAttribute("deprecated")]
public static bool IsAtLeastU { get; }
    public static bool IsAtLeastV { get; }
    internal BuildCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BuildCompat();
    public static int get_AdServicesExtensionInt();
    public static BuildCompat get_Instance();
    public static int get_RExtensionInt();
    public static int get_SExtensionInt();
    public static int get_TExtensionInt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAtLeastN", "()Z", "")]
public static bool get_IsAtLeastN();
    [RegisterAttribute("isAtLeastNMR1", "()Z", "")]
public static bool get_IsAtLeastNMR1();
    [RegisterAttribute("isAtLeastO", "()Z", "")]
public static bool get_IsAtLeastO();
    [RegisterAttribute("isAtLeastOMR1", "()Z", "")]
public static bool get_IsAtLeastOMR1();
    [RegisterAttribute("isAtLeastP", "()Z", "")]
public static bool get_IsAtLeastP();
    [RegisterAttribute("isAtLeastQ", "()Z", "")]
public static bool get_IsAtLeastQ();
    [RegisterAttribute("isAtLeastR", "()Z", "")]
public static bool get_IsAtLeastR();
    [RegisterAttribute("isAtLeastS", "()Z", "")]
public static bool get_IsAtLeastS();
    [RegisterAttribute("isAtLeastSv2", "()Z", "")]
public static bool get_IsAtLeastSv2();
    [RegisterAttribute("isAtLeastT", "()Z", "")]
public static bool get_IsAtLeastT();
    [RegisterAttribute("isAtLeastU", "()Z", "")]
public static bool get_IsAtLeastU();
    [RegisterAttribute("isAtLeastV", "()Z", "")]
public static bool get_IsAtLeastV();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("isAtLeastPreReleaseCodename", "(Ljava/lang/String;Ljava/lang/String;)Z", "")]
public static bool IsAtLeastPreReleaseCodename(string codename, string buildCodename);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/BundleCompat")]
public class AndroidX.Core.OS.BundleCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BundleCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static BundleCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getBinder", "(Landroid/os/Bundle;Ljava/lang/String;)Landroid/os/IBinder;", "")]
public static IBinder GetBinder(Bundle bundle, string key);
    [RegisterAttribute("getParcelable", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetParcelable(Bundle in, string key, Class clazz);
    [RegisterAttribute("getParcelableArray", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Class;)[Landroid/os/Parcelable;", "")]
public static IParcelable[] GetParcelableArray(Bundle in, string key, Class clazz);
    [RegisterAttribute("getParcelableArrayList", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Class;)Ljava/util/ArrayList;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IList GetParcelableArrayList(Bundle in, string key, Class clazz);
    [RegisterAttribute("getSerializable", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Class;)Ljava/io/Serializable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetSerializable(Bundle in, string key, Class clazz);
    [RegisterAttribute("getSparseParcelableArray", "(Landroid/os/Bundle;Ljava/lang/String;Ljava/lang/Class;)Landroid/util/SparseArray;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static SparseArray GetSparseParcelableArray(Bundle in, string key, Class clazz);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("putBinder", "(Landroid/os/Bundle;Ljava/lang/String;Landroid/os/IBinder;)V", "")]
public static void PutBinder(Bundle bundle, string key, IBinder binder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/os/CancellationSignal")]
public class AndroidX.Core.OS.CancellationSignal : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetOnCancelListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object CancellationSignalObject { get; }
    public bool IsCanceled { get; }
    internal CancellationSignal(IntPtr javaReference, JniHandleOwnership transfer);
    private static CancellationSignal();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getCancellationSignalObject", "()Ljava/lang/Object;", "")]
public Object get_CancellationSignalObject();
    [RegisterAttribute("isCanceled", "()Z", "")]
public bool get_IsCanceled();
    [RegisterAttribute("cancel", "()V", "")]
public void Cancel();
    [NullableContextAttribute("2")]
[RegisterAttribute("setOnCancelListener", "(Landroidx/core/os/CancellationSignal$OnCancelListener;)V", "")]
public void SetOnCancelListener(IOnCancelListener listener);
    [RegisterAttribute("throwIfCanceled", "()V", "")]
public void ThrowIfCanceled();
    public void add_CancelEvent(EventHandler value);
    public void remove_CancelEvent(EventHandler value);
    private IOnCancelListenerImplementor __CreateIOnCancelListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/ConfigurationCompat")]
public class AndroidX.Core.OS.ConfigurationCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ConfigurationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ConfigurationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLocales", "(Landroid/content/res/Configuration;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat GetLocales(Configuration configuration);
    [RegisterAttribute("setLocales", "(Landroid/content/res/Configuration;Landroidx/core/os/LocaleListCompat;)V", "")]
public static void SetLocales(Configuration configuration, LocaleListCompat locales);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/EnvironmentCompat")]
public class AndroidX.Core.OS.EnvironmentCompat : Object {
    [RegisterAttribute("MEDIA_UNKNOWN")]
[ObsoleteAttribute("deprecated")]
public static string MediaUnknown;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EnvironmentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static EnvironmentCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getStorageState", "(Ljava/io/File;)Ljava/lang/String;", "")]
public static string GetStorageState(File path);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/ExecutorCompat")]
public class AndroidX.Core.OS.ExecutorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExecutorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExecutorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Landroid/os/Handler;)Ljava/util/concurrent/Executor;", "")]
public static IExecutor Create(Handler handler);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/HandlerCompat")]
public class AndroidX.Core.OS.HandlerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal HandlerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static HandlerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createAsync", "(Landroid/os/Looper;)Landroid/os/Handler;", "")]
public static Handler CreateAsync(Looper looper);
    [RegisterAttribute("createAsync", "(Landroid/os/Looper;Landroid/os/Handler$Callback;)Landroid/os/Handler;", "")]
public static Handler CreateAsync(Looper looper, ICallback callback);
    [RegisterAttribute("hasCallbacks", "(Landroid/os/Handler;Ljava/lang/Runnable;)Z", "")]
public static bool HasCallbacks(Handler handler, IRunnable r);
    [RegisterAttribute("postDelayed", "(Landroid/os/Handler;Ljava/lang/Runnable;Ljava/lang/Object;J)Z", "")]
public static bool PostDelayed(Handler handler, IRunnable r, Object token, long delayMillis);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/os/ParcelableCompatCreatorCallbacks", "", "AndroidX.Core.OS.IParcelableCompatCreatorCallbacksInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Core.OS.IParcelableCompatCreatorCallbacks {
    [NullableContextAttribute("2")]
[RegisterAttribute("createFromParcel", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;)Ljava/lang/Object;", "GetCreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_Handler:AndroidX.Core.OS.IParcelableCompatCreatorCallbacksInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Object CreateFromParcel(Parcel in, ClassLoader loader);
    [RegisterAttribute("newArray", "(I)[Ljava/lang/Object;", "GetNewArray_IHandler:AndroidX.Core.OS.IParcelableCompatCreatorCallbacksInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Object[] NewArray(int size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/ParcelableCompatCreatorCallbacks")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class AndroidX.Core.OS.IParcelableCompatCreatorCallbacksInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_createFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_;
    private IntPtr id_createFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_;
    [NullableAttribute("2")]
private static Delegate cb_newArray_I;
    private IntPtr id_newArray_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IParcelableCompatCreatorCallbacksInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IParcelableCompatCreatorCallbacksInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IParcelableCompatCreatorCallbacks GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_Handler();
    private static IntPtr n_CreateFromParcel_Landroid_os_Parcel_Ljava_lang_ClassLoader_(IntPtr jnienv, IntPtr native__this, IntPtr native__in, IntPtr native_loader);
    [NullableContextAttribute("2")]
public sealed virtual Object CreateFromParcel(Parcel in, ClassLoader loader);
    private static Delegate GetNewArray_IHandler();
    private static IntPtr n_NewArray_I(IntPtr jnienv, IntPtr native__this, int size);
    public sealed virtual Object[] NewArray(int size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/LocaleListCompat")]
public class AndroidX.Core.OS.LocaleListCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static LocaleListCompat AdjustedDefault { get; }
    public static LocaleListCompat Default { get; }
    public static LocaleListCompat EmptyLocaleList { get; }
    public bool IsEmpty { get; }
    internal LocaleListCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocaleListCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAdjustedDefault", "()Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat get_AdjustedDefault();
    [RegisterAttribute("getDefault", "()Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat get_Default();
    [RegisterAttribute("getEmptyLocaleList", "()Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat get_EmptyLocaleList();
    [RegisterAttribute("isEmpty", "()Z", "")]
public bool get_IsEmpty();
    [RegisterAttribute("create", "([Ljava/util/Locale;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat Create(Locale[] localeList);
    [RegisterAttribute("forLanguageTags", "(Ljava/lang/String;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat ForLanguageTags(string list);
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "(I)Ljava/util/Locale;", "")]
public Locale Get(int index);
    [RegisterAttribute("getFirstMatch", "([Ljava/lang/String;)Ljava/util/Locale;", "")]
public Locale GetFirstMatch(String[] supportedLocales);
    [NullableContextAttribute("2")]
[RegisterAttribute("indexOf", "(Ljava/util/Locale;)I", "")]
public int IndexOf(Locale locale);
    [RegisterAttribute("matchesLanguageAndScript", "(Ljava/util/Locale;Ljava/util/Locale;)Z", "")]
public static bool MatchesLanguageAndScript(Locale supported, Locale desired);
    [RegisterAttribute("size", "()I", "")]
public int Size();
    [RegisterAttribute("toLanguageTags", "()Ljava/lang/String;", "")]
public string ToLanguageTags();
    [NullableContextAttribute("2")]
[RegisterAttribute("unwrap", "()Ljava/lang/Object;", "")]
public Object Unwrap();
    [RegisterAttribute("wrap", "(Landroid/os/LocaleList;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat Wrap(LocaleList localeList);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("wrap", "(Ljava/lang/Object;)Landroidx/core/os/LocaleListCompat;", "")]
public static LocaleListCompat Wrap(Object localeList);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/MessageCompat")]
public class AndroidX.Core.OS.MessageCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MessageCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MessageCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAsynchronous", "(Landroid/os/Message;)Z", "")]
public static bool IsAsynchronous(Message message);
    [RegisterAttribute("setAsynchronous", "(Landroid/os/Message;Z)V", "")]
public static void SetAsynchronous(Message message, bool async);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/OperationCanceledException")]
public class AndroidX.Core.OS.OperationCanceledException : RuntimeException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected OperationCanceledException(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public OperationCanceledException(string message);
    private static OperationCanceledException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/os/ParcelableCompat")]
public class AndroidX.Core.OS.ParcelableCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ParcelableCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ParcelableCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("newCreator", "(Landroidx/core/os/ParcelableCompatCreatorCallbacks;)Landroid/os/Parcelable$Creator;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IParcelableCreator NewCreator(IParcelableCompatCreatorCallbacks callbacks);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/ParcelCompat")]
public class AndroidX.Core.OS.ParcelCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ParcelCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ParcelCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("readArray", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)[Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object[] ReadArray(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readArrayList", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/util/ArrayList;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IList ReadArrayList(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readBoolean", "(Landroid/os/Parcel;)Z", "")]
public static bool ReadBoolean(Parcel in);
    [RegisterAttribute("readHashMap", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/HashMap;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IDictionary ReadHashMap(Parcel in, ClassLoader loader, Class clazzKey, Class clazzValue);
    [RegisterAttribute("readList", "(Landroid/os/Parcel;Ljava/util/List;Ljava/lang/ClassLoader;Ljava/lang/Class;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void ReadList(Parcel in, IList outVal, ClassLoader loader, Class clazz);
    [RegisterAttribute("readMap", "(Landroid/os/Parcel;Ljava/util/Map;Ljava/lang/ClassLoader;Ljava/lang/Class;Ljava/lang/Class;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void ReadMap(Parcel in, IDictionary outVal, ClassLoader loader, Class clazzKey, Class clazzValue);
    [RegisterAttribute("readParcelable", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)Landroid/os/Parcelable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ReadParcelable(Parcel in, ClassLoader loader, Class clazz);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("readParcelableArray", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)[Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object[] ReadParcelableArray(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readParcelableArrayTyped", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)[Landroid/os/Parcelable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IParcelable[] ReadParcelableArrayTyped(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readParcelableCreator", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)Landroid/os/Parcelable$Creator;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IParcelableCreator ReadParcelableCreator(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readParcelableList", "(Landroid/os/Parcel;Ljava/util/List;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/util/List;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IList ReadParcelableList(Parcel in, IList list, ClassLoader cl, Class clazz);
    [RegisterAttribute("readSerializable", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/io/Serializable;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ReadSerializable(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("readSparseArray", "(Landroid/os/Parcel;Ljava/lang/ClassLoader;Ljava/lang/Class;)Landroid/util/SparseArray;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static SparseArray ReadSparseArray(Parcel in, ClassLoader loader, Class clazz);
    [RegisterAttribute("writeBoolean", "(Landroid/os/Parcel;Z)V", "")]
public static void WriteBoolean(Parcel out, bool value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/ProcessCompat")]
public class AndroidX.Core.OS.ProcessCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ProcessCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ProcessCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isApplicationUid", "(I)Z", "")]
public static bool IsApplicationUid(int uid);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/os/TraceCompat")]
public class AndroidX.Core.OS.TraceCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static bool IsEnabled { get; }
    internal TraceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TraceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isEnabled", "()Z", "")]
public static bool get_IsEnabled();
    [RegisterAttribute("beginAsyncSection", "(Ljava/lang/String;I)V", "")]
public static void BeginAsyncSection(string methodName, int cookie);
    [RegisterAttribute("beginSection", "(Ljava/lang/String;)V", "")]
public static void BeginSection(string sectionName);
    [RegisterAttribute("endAsyncSection", "(Ljava/lang/String;I)V", "")]
public static void EndAsyncSection(string methodName, int cookie);
    [RegisterAttribute("endSection", "()V", "")]
public static void EndSection();
    [RegisterAttribute("setCounter", "(Ljava/lang/String;I)V", "")]
public static void SetCounter(string counterName, int counterValue);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/UserHandleCompat")]
public class AndroidX.Core.OS.UserHandleCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UserHandleCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static UserHandleCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getUserHandleForUid", "(I)Landroid/os/UserHandle;", "")]
public static UserHandle GetUserHandleForUid(int uid);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/os/UserManagerCompat")]
public class AndroidX.Core.OS.UserManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected UserManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static UserManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isUserUnlocked", "(Landroid/content/Context;)Z", "")]
public static bool IsUserUnlocked(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/provider/DocumentsContractCompat")]
public class AndroidX.Core.Provider.DocumentsContractCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DocumentsContractCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DocumentsContractCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("buildChildDocumentsUri", "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri BuildChildDocumentsUri(string authority, string parentDocumentId);
    [RegisterAttribute("buildChildDocumentsUriUsingTree", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri BuildChildDocumentsUriUsingTree(Uri treeUri, string parentDocumentId);
    [RegisterAttribute("buildDocumentUri", "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri BuildDocumentUri(string authority, string documentId);
    [RegisterAttribute("buildDocumentUriUsingTree", "(Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri BuildDocumentUriUsingTree(Uri treeUri, string documentId);
    [RegisterAttribute("buildTreeDocumentUri", "(Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri BuildTreeDocumentUri(string authority, string documentId);
    [RegisterAttribute("createDocument", "(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri CreateDocument(ContentResolver content, Uri parentDocumentUri, string mimeType, string displayName);
    [RegisterAttribute("getDocumentId", "(Landroid/net/Uri;)Ljava/lang/String;", "")]
public static string GetDocumentId(Uri documentUri);
    [RegisterAttribute("getTreeDocumentId", "(Landroid/net/Uri;)Ljava/lang/String;", "")]
public static string GetTreeDocumentId(Uri documentUri);
    [RegisterAttribute("isDocumentUri", "(Landroid/content/Context;Landroid/net/Uri;)Z", "")]
public static bool IsDocumentUri(Context context, Uri uri);
    [RegisterAttribute("isTreeUri", "(Landroid/net/Uri;)Z", "")]
public static bool IsTreeUri(Uri uri);
    [RegisterAttribute("removeDocument", "(Landroid/content/ContentResolver;Landroid/net/Uri;Landroid/net/Uri;)Z", "")]
public static bool RemoveDocument(ContentResolver content, Uri documentUri, Uri parentDocumentUri);
    [RegisterAttribute("renameDocument", "(Landroid/content/ContentResolver;Landroid/net/Uri;Ljava/lang/String;)Landroid/net/Uri;", "")]
public static Uri RenameDocument(ContentResolver content, Uri documentUri, string displayName);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/provider/FontRequest")]
public class AndroidX.Core.Provider.FontRequest : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<IList`1<Byte[]>> Certificates { get; }
    public int CertificatesArrayResId { get; }
    [NullableAttribute("2")]
[ObsoleteAttribute("deprecated")]
public string Identifier { get; }
    public string ProviderAuthority { get; }
    public string ProviderPackage { get; }
    public string Query { get; }
    internal FontRequest(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V", "")]
public FontRequest(string providerAuthority, string providerPackage, string query, int certificates);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/List;)V", "")]
public FontRequest(string providerAuthority, string providerPackage, string query, IList`1<IList`1<Byte[]>> certificates);
    private static FontRequest();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCertificates", "()Ljava/util/List;", "")]
public IList`1<IList`1<Byte[]>> get_Certificates();
    [RegisterAttribute("getCertificatesArrayResId", "()I", "")]
public int get_CertificatesArrayResId();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getIdentifier", "()Ljava/lang/String;", "")]
public string get_Identifier();
    [RegisterAttribute("getProviderAuthority", "()Ljava/lang/String;", "")]
public string get_ProviderAuthority();
    [RegisterAttribute("getProviderPackage", "()Ljava/lang/String;", "")]
public string get_ProviderPackage();
    [RegisterAttribute("getQuery", "()Ljava/lang/String;", "")]
public string get_Query();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/provider/FontsContractCompat")]
public class AndroidX.Core.Provider.FontsContractCompat : Object {
    [RegisterAttribute("PARCEL_FONT_RESULTS")]
[ObsoleteAttribute("deprecated")]
public static string ParcelFontResults;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected FontsContractCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static FontsContractCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("buildTypeface", "(Landroid/content/Context;Landroid/os/CancellationSignal;[Landroidx/core/provider/FontsContractCompat$FontInfo;)Landroid/graphics/Typeface;", "")]
public static Typeface BuildTypeface(Context context, CancellationSignal cancellationSignal, FontInfo[] fonts);
    [RegisterAttribute("fetchFonts", "(Landroid/content/Context;Landroid/os/CancellationSignal;Landroidx/core/provider/FontRequest;)Landroidx/core/provider/FontsContractCompat$FontFamilyResult;", "")]
public static FontFamilyResult FetchFonts(Context context, CancellationSignal cancellationSignal, FontRequest request);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getFontSync", "(Landroid/content/Context;Landroidx/core/provider/FontRequest;Landroidx/core/content/res/ResourcesCompat$FontCallback;Landroid/os/Handler;ZII)Landroid/graphics/Typeface;", "")]
public static Typeface GetFontSync(Context context, FontRequest request, FontCallback fontCallback, Handler handler, bool isBlockingFetch, int timeout, int style);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getProvider", "(Landroid/content/pm/PackageManager;Landroidx/core/provider/FontRequest;Landroid/content/res/Resources;)Landroid/content/pm/ProviderInfo;", "")]
public static ProviderInfo GetProvider(PackageManager packageManager, FontRequest request, Resources resources);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("prepareFontData", "(Landroid/content/Context;[Landroidx/core/provider/FontsContractCompat$FontInfo;Landroid/os/CancellationSignal;)Ljava/util/Map;", "")]
public static IDictionary`2<Uri, ByteBuffer> PrepareFontData(Context context, FontInfo[] fonts, CancellationSignal cancellationSignal);
    [RegisterAttribute("requestFont", "(Landroid/content/Context;Landroidx/core/provider/FontRequest;Landroidx/core/provider/FontsContractCompat$FontRequestCallback;Landroid/os/Handler;)V", "")]
public static void RequestFont(Context context, FontRequest request, FontRequestCallback callback, Handler handler);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("requestFont", "(Landroid/content/Context;Landroidx/core/provider/FontRequest;IZILandroid/os/Handler;Landroidx/core/provider/FontsContractCompat$FontRequestCallback;)Landroid/graphics/Typeface;", "")]
public static Typeface RequestFont(Context context, FontRequest request, int style, bool isBlockingFetch, int timeout, Handler handler, FontRequestCallback callback);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("resetCache", "()V", "")]
public static void ResetCache();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("resetTypefaceCache", "()V", "")]
public static void ResetTypefaceCache();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/provider/SelfDestructiveThread")]
public class AndroidX.Core.Provider.SelfDestructiveThread : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getGeneration;
    [NullableAttribute("2")]
private static Delegate cb_isRunning;
    [NullableAttribute("2")]
private static Delegate cb_postAndReply_Ljava_util_concurrent_Callable_Landroidx_core_provider_SelfDestructiveThread_ReplyCallback_;
    [NullableAttribute("2")]
private static Delegate cb_postAndWait_Ljava_util_concurrent_Callable_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int Generation { get; }
    public bool IsRunning { get; }
    protected SelfDestructiveThread(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;II)V", "")]
public SelfDestructiveThread(string threadName, int priority, int destructAfterMillisec);
    private static SelfDestructiveThread();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetGenerationHandler();
    private static int n_GetGeneration(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getGeneration", "()I", "GetGetGenerationHandler")]
public virtual int get_Generation();
    private static Delegate GetIsRunningHandler();
    private static bool n_IsRunning(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRunning", "()Z", "GetIsRunningHandler")]
public virtual bool get_IsRunning();
    private static Delegate GetPostAndReply_Ljava_util_concurrent_Callable_Landroidx_core_provider_SelfDestructiveThread_ReplyCallback_Handler();
    private static void n_PostAndReply_Ljava_util_concurrent_Callable_Landroidx_core_provider_SelfDestructiveThread_ReplyCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_callable, IntPtr native_reply);
    [NullableContextAttribute("2")]
[RegisterAttribute("postAndReply", "(Ljava/util/concurrent/Callable;Landroidx/core/provider/SelfDestructiveThread$ReplyCallback;)V", "GetPostAndReply_Ljava_util_concurrent_Callable_Landroidx_core_provider_SelfDestructiveThread_ReplyCallback_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual void PostAndReply(ICallable callable, IReplyCallback reply);
    private static Delegate GetPostAndWait_Ljava_util_concurrent_Callable_IHandler();
    private static IntPtr n_PostAndWait_Ljava_util_concurrent_Callable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_callable, int timeoutMillis);
    [NullableContextAttribute("2")]
[RegisterAttribute("postAndWait", "(Ljava/util/concurrent/Callable;I)Ljava/lang/Object;", "GetPostAndWait_Ljava_util_concurrent_Callable_IHandler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object PostAndWait(ICallable callable, int timeoutMillis);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/service/quicksettings/PendingIntentActivityWrapper")]
public class AndroidX.Core.Service.QuickSettings.PendingIntentActivityWrapper : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    [NullableAttribute("2")]
private static Delegate cb_getFlags;
    [NullableAttribute("2")]
private static Delegate cb_getIntent;
    [NullableAttribute("2")]
private static Delegate cb_isMutable;
    [NullableAttribute("2")]
private static Delegate cb_getOptions;
    [NullableAttribute("2")]
private static Delegate cb_getPendingIntent;
    [NullableAttribute("2")]
private static Delegate cb_getRequestCode;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Context Context { get; }
    public int Flags { get; }
    public Intent Intent { get; }
    public bool IsMutable { get; }
    public Bundle Options { get; }
    [NullableAttribute("2")]
public PendingIntent PendingIntent { get; }
    public int RequestCode { get; }
    protected PendingIntentActivityWrapper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/content/Intent;ILandroid/os/Bundle;Z)V", "")]
public PendingIntentActivityWrapper(Context context, int requestCode, Intent intent, int flags, Bundle options, bool isMutable);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;ILandroid/content/Intent;IZ)V", "")]
public PendingIntentActivityWrapper(Context context, int requestCode, Intent intent, int flags, bool isMutable);
    private static PendingIntentActivityWrapper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetGetFlagsHandler();
    private static int n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()I", "GetGetFlagsHandler")]
public virtual int get_Flags();
    private static Delegate GetGetIntentHandler();
    private static IntPtr n_GetIntent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getIntent", "()Landroid/content/Intent;", "GetGetIntentHandler")]
public virtual Intent get_Intent();
    private static Delegate GetIsMutableHandler();
    private static bool n_IsMutable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMutable", "()Z", "GetIsMutableHandler")]
public virtual bool get_IsMutable();
    private static Delegate GetGetOptionsHandler();
    private static IntPtr n_GetOptions(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOptions", "()Landroid/os/Bundle;", "GetGetOptionsHandler")]
public virtual Bundle get_Options();
    private static Delegate GetGetPendingIntentHandler();
    private static IntPtr n_GetPendingIntent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getPendingIntent", "()Landroid/app/PendingIntent;", "GetGetPendingIntentHandler")]
public virtual PendingIntent get_PendingIntent();
    private static Delegate GetGetRequestCodeHandler();
    private static int n_GetRequestCode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRequestCode", "()I", "GetGetRequestCodeHandler")]
public virtual int get_RequestCode();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/service/quicksettings/TileServiceCompat")]
public class AndroidX.Core.Service.QuickSettings.TileServiceCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TileServiceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TileServiceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("clearTileServiceWrapper", "()V", "")]
public static void ClearTileServiceWrapper();
    [RegisterAttribute("startActivityAndCollapse", "(Landroid/service/quicksettings/TileService;Landroidx/core/service/quicksettings/PendingIntentActivityWrapper;)V", "")]
public static void StartActivityAndCollapse(TileService tileService, PendingIntentActivityWrapper wrapper);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/telephony/mbms/MbmsHelper")]
public class AndroidX.Core.Telephony.Mbms.MbmsHelper : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MbmsHelper(IntPtr javaReference, JniHandleOwnership transfer);
    private static MbmsHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBestNameForService", "(Landroid/content/Context;Landroid/telephony/mbms/ServiceInfo;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetBestNameForServiceFormatted(Context context, ServiceInfo serviceInfo);
    public static string GetBestNameForService(Context context, ServiceInfo serviceInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/telephony/SubscriptionManagerCompat")]
public class AndroidX.Core.Telephony.SubscriptionManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected SubscriptionManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static SubscriptionManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getSlotIndex", "(I)I", "")]
public static int GetSlotIndex(int subId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/telephony/TelephonyManagerCompat")]
public class AndroidX.Core.Telephony.TelephonyManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TelephonyManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TelephonyManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getImei", "(Landroid/telephony/TelephonyManager;)Ljava/lang/String;", "")]
public static string GetImei(TelephonyManager telephonyManager);
    [RegisterAttribute("getSubscriptionId", "(Landroid/telephony/TelephonyManager;)I", "")]
public static int GetSubscriptionId(TelephonyManager telephonyManager);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/BidiFormatter")]
public class AndroidX.Core.Text.BidiFormatter : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static BidiFormatter Instance { get; }
    public bool IsRtlContext { get; }
    public bool StereoReset { get; }
    internal BidiFormatter(IntPtr javaReference, JniHandleOwnership transfer);
    private static BidiFormatter();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "()Landroidx/core/text/BidiFormatter;", "")]
public static BidiFormatter get_Instance();
    [RegisterAttribute("isRtlContext", "()Z", "")]
public bool get_IsRtlContext();
    [RegisterAttribute("getStereoReset", "()Z", "")]
public bool get_StereoReset();
    [RegisterAttribute("getInstance", "(Z)Landroidx/core/text/BidiFormatter;", "")]
public static BidiFormatter GetInstance(bool rtlContext);
    [RegisterAttribute("getInstance", "(Ljava/util/Locale;)Landroidx/core/text/BidiFormatter;", "")]
public static BidiFormatter GetInstance(Locale locale);
    [RegisterAttribute("isRtl", "(Ljava/lang/CharSequence;)Z", "")]
public bool IsRtl(ICharSequence str);
    [RegisterAttribute("isRtl", "(Ljava/lang/String;)Z", "")]
public bool IsRtl(string str);
    [RegisterAttribute("unicodeWrap", "(Ljava/lang/CharSequence;)Ljava/lang/CharSequence;", "")]
public ICharSequence UnicodeWrapFormatted(ICharSequence str);
    public string UnicodeWrap(string str);
    [RegisterAttribute("unicodeWrap", "(Ljava/lang/CharSequence;Landroidx/core/text/TextDirectionHeuristicCompat;)Ljava/lang/CharSequence;", "")]
public ICharSequence UnicodeWrapFormatted(ICharSequence str, ITextDirectionHeuristicCompat heuristic);
    public string UnicodeWrap(string str, ITextDirectionHeuristicCompat heuristic);
    [RegisterAttribute("unicodeWrap", "(Ljava/lang/CharSequence;Landroidx/core/text/TextDirectionHeuristicCompat;Z)Ljava/lang/CharSequence;", "")]
public ICharSequence UnicodeWrapFormatted(ICharSequence str, ITextDirectionHeuristicCompat heuristic, bool isolate);
    public string UnicodeWrap(string str, ITextDirectionHeuristicCompat heuristic, bool isolate);
    [RegisterAttribute("unicodeWrap", "(Ljava/lang/CharSequence;Z)Ljava/lang/CharSequence;", "")]
public ICharSequence UnicodeWrapFormatted(ICharSequence str, bool isolate);
    public string UnicodeWrap(string str, bool isolate);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/HtmlCompat")]
public class AndroidX.Core.Text.HtmlCompat : Object {
    [RegisterAttribute("FROM_HTML_MODE_COMPACT")]
public static int FromHtmlModeCompact;
    [RegisterAttribute("FROM_HTML_MODE_LEGACY")]
public static int FromHtmlModeLegacy;
    [RegisterAttribute("FROM_HTML_OPTION_USE_CSS_COLORS")]
public static int FromHtmlOptionUseCssColors;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_BLOCKQUOTE")]
public static int FromHtmlSeparatorLineBreakBlockquote;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_DIV")]
public static int FromHtmlSeparatorLineBreakDiv;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_HEADING")]
public static int FromHtmlSeparatorLineBreakHeading;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_LIST")]
public static int FromHtmlSeparatorLineBreakList;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_LIST_ITEM")]
public static int FromHtmlSeparatorLineBreakListItem;
    [RegisterAttribute("FROM_HTML_SEPARATOR_LINE_BREAK_PARAGRAPH")]
public static int FromHtmlSeparatorLineBreakParagraph;
    [RegisterAttribute("TO_HTML_PARAGRAPH_LINES_CONSECUTIVE")]
public static int ToHtmlParagraphLinesConsecutive;
    [RegisterAttribute("TO_HTML_PARAGRAPH_LINES_INDIVIDUAL")]
public static int ToHtmlParagraphLinesIndividual;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal HtmlCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static HtmlCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fromHtml", "(Ljava/lang/String;I)Landroid/text/Spanned;", "")]
public static ISpanned FromHtml(string source, int flags);
    [RegisterAttribute("fromHtml", "(Ljava/lang/String;ILandroid/text/Html$ImageGetter;Landroid/text/Html$TagHandler;)Landroid/text/Spanned;", "")]
public static ISpanned FromHtml(string source, int flags, IImageGetter imageGetter, ITagHandler tagHandler);
    [RegisterAttribute("toHtml", "(Landroid/text/Spanned;I)Ljava/lang/String;", "")]
public static string ToHtml(ISpanned text, int options);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/ICUCompat")]
public class AndroidX.Core.Text.ICUCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ICUCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ICUCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("maximizeAndGetScript", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string MaximizeAndGetScript(Locale locale);
}
[RegisterAttribute("androidx/core/text/TextDirectionHeuristicCompat", "", "AndroidX.Core.Text.ITextDirectionHeuristicCompatInvoker")]
public interface AndroidX.Core.Text.ITextDirectionHeuristicCompat {
    [NullableContextAttribute("2")]
[RegisterAttribute("isRtl", "([CII)Z", "GetIsRtl_arrayCIIHandler:AndroidX.Core.Text.ITextDirectionHeuristicCompatInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool IsRtl(Char[] array, int start, int count);
    [NullableContextAttribute("2")]
[RegisterAttribute("isRtl", "(Ljava/lang/CharSequence;II)Z", "GetIsRtl_Ljava_lang_CharSequence_IIHandler:AndroidX.Core.Text.ITextDirectionHeuristicCompatInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool IsRtl(ICharSequence cs, int start, int count);
}
[ExtensionAttribute]
public static class AndroidX.Core.Text.ITextDirectionHeuristicCompatExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static bool IsRtl(ITextDirectionHeuristicCompat self, string cs, int start, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/TextDirectionHeuristicCompat")]
internal class AndroidX.Core.Text.ITextDirectionHeuristicCompatInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isRtl_arrayCII;
    private IntPtr id_isRtl_arrayCII;
    [NullableAttribute("2")]
private static Delegate cb_isRtl_Ljava_lang_CharSequence_II;
    private IntPtr id_isRtl_Ljava_lang_CharSequence_II;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ITextDirectionHeuristicCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITextDirectionHeuristicCompatInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ITextDirectionHeuristicCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsRtl_arrayCIIHandler();
    private static bool n_IsRtl_arrayCII(IntPtr jnienv, IntPtr native__this, IntPtr native_array, int start, int count);
    [NullableContextAttribute("2")]
public sealed virtual bool IsRtl(Char[] array, int start, int count);
    private static Delegate GetIsRtl_Ljava_lang_CharSequence_IIHandler();
    private static bool n_IsRtl_Ljava_lang_CharSequence_II(IntPtr jnienv, IntPtr native__this, IntPtr native_cs, int start, int count);
    [NullableContextAttribute("2")]
public sealed virtual bool IsRtl(ICharSequence cs, int start, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/method/LinkMovementMethodCompat")]
public class AndroidX.Core.Text.Method.LinkMovementMethodCompat : LinkMovementMethod {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static LinkMovementMethodCompat Instance { get; }
    protected LinkMovementMethodCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LinkMovementMethodCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "()Landroidx/core/text/method/LinkMovementMethodCompat;", "")]
public static LinkMovementMethodCompat get_Instance();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/PrecomputedTextCompat")]
public class AndroidX.Core.Text.PrecomputedTextCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getParagraphCount;
    [NullableAttribute("2")]
private static Delegate cb_charAt_I;
    [NullableAttribute("2")]
private static Delegate cb_getParagraphEnd_I;
    [NullableAttribute("2")]
private static Delegate cb_getParagraphStart_I;
    [NullableAttribute("2")]
private static Delegate cb_getParams;
    [NullableAttribute("2")]
private static Delegate cb_getSpanEnd_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSpanFlags_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSpanStart_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSpans_IILjava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_length;
    [NullableAttribute("2")]
private static Delegate cb_nextSpanTransition_IILjava_lang_Class_;
    [NullableAttribute("2")]
private static Delegate cb_removeSpan_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_setSpan_Ljava_lang_Object_III;
    [NullableAttribute("2")]
private static Delegate cb_subSequence_II;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ParagraphCount { get; }
    protected PrecomputedTextCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PrecomputedTextCompat();
    private sealed virtual override IEnumerator System.Collections.IEnumerable.GetEnumerator();
    public sealed virtual IEnumerator`1<char> GetEnumerator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetParagraphCountHandler();
    private static int n_GetParagraphCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParagraphCount", "()I", "GetGetParagraphCountHandler")]
public virtual int get_ParagraphCount();
    private static Delegate GetCharAt_IHandler();
    private static char n_CharAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("charAt", "(I)C", "GetCharAt_IHandler")]
public virtual char CharAt(int index);
    [RegisterAttribute("create", "(Ljava/lang/CharSequence;Landroidx/core/text/PrecomputedTextCompat$Params;)Landroidx/core/text/PrecomputedTextCompat;", "")]
public static PrecomputedTextCompat Create(ICharSequence text, Params params);
    public static PrecomputedTextCompat Create(string text, Params params);
    private static Delegate GetGetParagraphEnd_IHandler();
    private static int n_GetParagraphEnd_I(IntPtr jnienv, IntPtr native__this, int paraIndex);
    [RegisterAttribute("getParagraphEnd", "(I)I", "GetGetParagraphEnd_IHandler")]
public virtual int GetParagraphEnd(int paraIndex);
    private static Delegate GetGetParagraphStart_IHandler();
    private static int n_GetParagraphStart_I(IntPtr jnienv, IntPtr native__this, int paraIndex);
    [RegisterAttribute("getParagraphStart", "(I)I", "GetGetParagraphStart_IHandler")]
public virtual int GetParagraphStart(int paraIndex);
    private static Delegate GetGetParamsHandler();
    private static IntPtr n_GetParams(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParams", "()Landroidx/core/text/PrecomputedTextCompat$Params;", "GetGetParamsHandler")]
public virtual Params GetParams();
    private static Delegate GetGetSpanEnd_Ljava_lang_Object_Handler();
    private static int n_GetSpanEnd_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSpanEnd", "(Ljava/lang/Object;)I", "GetGetSpanEnd_Ljava_lang_Object_Handler")]
public virtual int GetSpanEnd(Object tag);
    private static Delegate GetGetSpanFlags_Ljava_lang_Object_Handler();
    private static int n_GetSpanFlags_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSpanFlags", "(Ljava/lang/Object;)I", "GetGetSpanFlags_Ljava_lang_Object_Handler")]
public virtual SpanTypes GetSpanFlags(Object tag);
    private static Delegate GetGetSpanStart_Ljava_lang_Object_Handler();
    private static int n_GetSpanStart_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSpanStart", "(Ljava/lang/Object;)I", "GetGetSpanStart_Ljava_lang_Object_Handler")]
public virtual int GetSpanStart(Object tag);
    private static Delegate GetGetSpans_IILjava_lang_Class_Handler();
    private static IntPtr n_GetSpans_IILjava_lang_Class_(IntPtr jnienv, IntPtr native__this, int start, int end, IntPtr native_type);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSpans", "(IILjava/lang/Class;)[Ljava/lang/Object;", "GetGetSpans_IILjava_lang_Class_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object[] GetSpans(int start, int end, Class type);
    [RegisterAttribute("getTextFuture", "(Ljava/lang/CharSequence;Landroidx/core/text/PrecomputedTextCompat$Params;Ljava/util/concurrent/Executor;)Ljava/util/concurrent/Future;", "")]
public static IFuture GetTextFuture(ICharSequence charSequence, Params params, IExecutor executor);
    public static IFuture GetTextFuture(string charSequence, Params params, IExecutor executor);
    private static Delegate GetLengthHandler();
    private static int n_Length(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("length", "()I", "GetLengthHandler")]
public virtual int Length();
    private static Delegate GetNextSpanTransition_IILjava_lang_Class_Handler();
    private static int n_NextSpanTransition_IILjava_lang_Class_(IntPtr jnienv, IntPtr native__this, int start, int limit, IntPtr native_type);
    [NullableContextAttribute("2")]
[RegisterAttribute("nextSpanTransition", "(IILjava/lang/Class;)I", "GetNextSpanTransition_IILjava_lang_Class_Handler")]
public virtual int NextSpanTransition(int start, int limit, Class type);
    private static Delegate GetRemoveSpan_Ljava_lang_Object_Handler();
    private static void n_RemoveSpan_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_what);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeSpan", "(Ljava/lang/Object;)V", "GetRemoveSpan_Ljava_lang_Object_Handler")]
public virtual void RemoveSpan(Object what);
    private static Delegate GetSetSpan_Ljava_lang_Object_IIIHandler();
    private static void n_SetSpan_Ljava_lang_Object_III(IntPtr jnienv, IntPtr native__this, IntPtr native_what, int start, int end, int native_flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("setSpan", "(Ljava/lang/Object;III)V", "GetSetSpan_Ljava_lang_Object_IIIHandler")]
public virtual void SetSpan(Object what, int start, int end, SpanTypes flags);
    private static Delegate GetSubSequence_IIHandler();
    private static IntPtr n_SubSequence_II(IntPtr jnienv, IntPtr native__this, int start, int end);
    [NullableContextAttribute("2")]
[RegisterAttribute("subSequence", "(II)Ljava/lang/CharSequence;", "GetSubSequence_IIHandler")]
public virtual ICharSequence SubSequenceFormatted(int start, int end);
    [NullableContextAttribute("2")]
public string SubSequence(int start, int end);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/TextDirectionHeuristicsCompat")]
public class AndroidX.Core.Text.TextDirectionHeuristicsCompat : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("ANYRTL_LTR")]
public static ITextDirectionHeuristicCompat AnyrtlLtr { get; }
    [RegisterAttribute("FIRSTSTRONG_LTR")]
public static ITextDirectionHeuristicCompat FirststrongLtr { get; }
    [RegisterAttribute("FIRSTSTRONG_RTL")]
public static ITextDirectionHeuristicCompat FirststrongRtl { get; }
    [RegisterAttribute("LOCALE")]
public static ITextDirectionHeuristicCompat Locale { get; }
    [RegisterAttribute("LTR")]
public static ITextDirectionHeuristicCompat Ltr { get; }
    [RegisterAttribute("RTL")]
public static ITextDirectionHeuristicCompat Rtl { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TextDirectionHeuristicsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextDirectionHeuristicsCompat();
    public static ITextDirectionHeuristicCompat get_AnyrtlLtr();
    public static ITextDirectionHeuristicCompat get_FirststrongLtr();
    public static ITextDirectionHeuristicCompat get_FirststrongRtl();
    public static ITextDirectionHeuristicCompat get_Locale();
    public static ITextDirectionHeuristicCompat get_Ltr();
    public static ITextDirectionHeuristicCompat get_Rtl();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/TextUtilsCompat")]
public class AndroidX.Core.Text.TextUtilsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TextUtilsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextUtilsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLayoutDirectionFromLocale", "(Ljava/util/Locale;)I", "")]
public static int GetLayoutDirectionFromLocale(Locale locale);
    [RegisterAttribute("htmlEncode", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public static string HtmlEncode(string s);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/util/LinkifyCompat")]
public class AndroidX.Core.Text.Util.LinkifyCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LinkifyCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LinkifyCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;I)Z", "")]
public static bool AddLinks(ISpannable text, int mask);
    [RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;)Z", "")]
public static bool AddLinks(ISpannable text, Pattern pattern, string scheme);
    [NullableContextAttribute("2")]
[RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z", "")]
public static bool AddLinks(ISpannable spannable, Pattern pattern, string scheme, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [NullableContextAttribute("2")]
[RegisterAttribute("addLinks", "(Landroid/text/Spannable;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)Z", "")]
public static bool AddLinks(ISpannable spannable, Pattern pattern, string defaultScheme, String[] schemes, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;I)Z", "")]
public static bool AddLinks(TextView text, int mask);
    [RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string scheme);
    [NullableContextAttribute("2")]
[RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string scheme, IMatchFilter matchFilter, ITransformFilter transformFilter);
    [NullableContextAttribute("2")]
[RegisterAttribute("addLinks", "(Landroid/widget/TextView;Ljava/util/regex/Pattern;Ljava/lang/String;[Ljava/lang/String;Landroid/text/util/Linkify$MatchFilter;Landroid/text/util/Linkify$TransformFilter;)V", "")]
public static void AddLinks(TextView text, Pattern pattern, string defaultScheme, String[] schemes, IMatchFilter matchFilter, ITransformFilter transformFilter);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/text/util/LocalePreferences")]
public class AndroidX.Core.Text.Util.LocalePreferences : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LocalePreferences(IntPtr javaReference, JniHandleOwnership transfer);
    private static LocalePreferences();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCalendarType", "()Ljava/lang/String;", "")]
public static string GetCalendarType();
    [RegisterAttribute("getCalendarType", "(Z)Ljava/lang/String;", "")]
public static string GetCalendarType(bool resolved);
    [RegisterAttribute("getCalendarType", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string GetCalendarType(Locale locale);
    [RegisterAttribute("getCalendarType", "(Ljava/util/Locale;Z)Ljava/lang/String;", "")]
public static string GetCalendarType(Locale locale, bool resolved);
    [RegisterAttribute("getFirstDayOfWeek", "()Ljava/lang/String;", "")]
public static string GetFirstDayOfWeek();
    [RegisterAttribute("getFirstDayOfWeek", "(Z)Ljava/lang/String;", "")]
public static string GetFirstDayOfWeek(bool resolved);
    [RegisterAttribute("getFirstDayOfWeek", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string GetFirstDayOfWeek(Locale locale);
    [RegisterAttribute("getFirstDayOfWeek", "(Ljava/util/Locale;Z)Ljava/lang/String;", "")]
public static string GetFirstDayOfWeek(Locale locale, bool resolved);
    [RegisterAttribute("getHourCycle", "()Ljava/lang/String;", "")]
public static string GetHourCycle();
    [RegisterAttribute("getHourCycle", "(Z)Ljava/lang/String;", "")]
public static string GetHourCycle(bool resolved);
    [RegisterAttribute("getHourCycle", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string GetHourCycle(Locale locale);
    [RegisterAttribute("getHourCycle", "(Ljava/util/Locale;Z)Ljava/lang/String;", "")]
public static string GetHourCycle(Locale locale, bool resolved);
    [RegisterAttribute("getTemperatureUnit", "()Ljava/lang/String;", "")]
public static string GetTemperatureUnit();
    [RegisterAttribute("getTemperatureUnit", "(Z)Ljava/lang/String;", "")]
public static string GetTemperatureUnit(bool resolved);
    [RegisterAttribute("getTemperatureUnit", "(Ljava/util/Locale;)Ljava/lang/String;", "")]
public static string GetTemperatureUnit(Locale locale);
    [RegisterAttribute("getTemperatureUnit", "(Ljava/util/Locale;Z)Ljava/lang/String;", "")]
public static string GetTemperatureUnit(Locale locale, bool resolved);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/AtomicFile")]
public class AndroidX.Core.Util.AtomicFile : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getBaseFile;
    [NullableAttribute("2")]
private static Delegate cb_delete;
    [NullableAttribute("2")]
private static Delegate cb_failWrite_Ljava_io_FileOutputStream_;
    [NullableAttribute("2")]
private static Delegate cb_finishWrite_Ljava_io_FileOutputStream_;
    [NullableAttribute("2")]
private static Delegate cb_openRead;
    [NullableAttribute("2")]
private static Delegate cb_readFully;
    [NullableAttribute("2")]
private static Delegate cb_startWrite;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public File BaseFile { get; }
    protected AtomicFile(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/File;)V", "")]
public AtomicFile(File baseName);
    private static AtomicFile();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetBaseFileHandler();
    private static IntPtr n_GetBaseFile(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getBaseFile", "()Ljava/io/File;", "GetGetBaseFileHandler")]
public virtual File get_BaseFile();
    private static Delegate GetDeleteHandler();
    private static void n_Delete(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("delete", "()V", "GetDeleteHandler")]
public virtual void Delete();
    private static Delegate GetFailWrite_Ljava_io_FileOutputStream_Handler();
    private static void n_FailWrite_Ljava_io_FileOutputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_str);
    [NullableContextAttribute("2")]
[RegisterAttribute("failWrite", "(Ljava/io/FileOutputStream;)V", "GetFailWrite_Ljava_io_FileOutputStream_Handler")]
public virtual void FailWrite(Stream str);
    private static Delegate GetFinishWrite_Ljava_io_FileOutputStream_Handler();
    private static void n_FinishWrite_Ljava_io_FileOutputStream_(IntPtr jnienv, IntPtr native__this, IntPtr native_str);
    [NullableContextAttribute("2")]
[RegisterAttribute("finishWrite", "(Ljava/io/FileOutputStream;)V", "GetFinishWrite_Ljava_io_FileOutputStream_Handler")]
public virtual void FinishWrite(Stream str);
    private static Delegate GetOpenReadHandler();
    private static IntPtr n_OpenRead(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("openRead", "()Ljava/io/FileInputStream;", "GetOpenReadHandler")]
public virtual Stream OpenRead();
    private static Delegate GetReadFullyHandler();
    private static IntPtr n_ReadFully(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("readFully", "()[B", "GetReadFullyHandler")]
public virtual Byte[] ReadFully();
    private static Delegate GetStartWriteHandler();
    private static IntPtr n_StartWrite(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("startWrite", "()Ljava/io/FileOutputStream;", "GetStartWriteHandler")]
public virtual Stream StartWrite();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/util/DebugUtils")]
public class AndroidX.Core.Util.DebugUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DebugUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static DebugUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("buildShortClassTag", "(Ljava/lang/Object;Ljava/lang/StringBuilder;)V", "")]
public static void BuildShortClassTag(Object cls, StringBuilder out);
}
[RegisterAttribute("androidx/core/util/Consumer", "", "AndroidX.Core.Util.IConsumerInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Core.Util.IConsumer {
    [NullableContextAttribute("2")]
[RegisterAttribute("accept", "(Ljava/lang/Object;)V", "GetAccept_Ljava_lang_Object_Handler:AndroidX.Core.Util.IConsumerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void Accept(Object t);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Consumer")]
internal class AndroidX.Core.Util.IConsumerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_accept_Ljava_lang_Object_;
    private IntPtr id_accept_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IConsumerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IConsumerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IConsumer GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAccept_Ljava_lang_Object_Handler();
    private static void n_Accept_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    [NullableContextAttribute("2")]
public sealed virtual void Accept(Object t);
}
[RegisterAttribute("androidx/core/util/Function", "", "AndroidX.Core.Util.IFunctionInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Core.Util.IFunction {
    [NullableContextAttribute("2")]
[RegisterAttribute("apply", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetApply_Ljava_lang_Object_Handler:AndroidX.Core.Util.IFunctionInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Object Apply(Object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Function")]
internal class AndroidX.Core.Util.IFunctionInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_apply_Ljava_lang_Object_;
    private IntPtr id_apply_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IFunctionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFunctionInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IFunction GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetApply_Ljava_lang_Object_Handler();
    private static IntPtr n_Apply_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [NullableContextAttribute("2")]
public sealed virtual Object Apply(Object value);
}
[NullableContextAttribute("2")]
[RegisterAttribute("androidx/core/util/Predicate", "", "AndroidX.Core.Util.IPredicateInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Core.Util.IPredicate {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_and_Landroidx_core_util_Predicate_;
    private static Delegate cb_negate;
    private static Delegate cb_or_Landroidx_core_util_Predicate_;
    private static IPredicate();
    [RegisterAttribute("test", "(Ljava/lang/Object;)Z", "GetTest_Ljava_lang_Object_Handler:AndroidX.Core.Util.IPredicateInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool Test(Object t);
    [NullableContextAttribute("1")]
private static Delegate GetAnd_Landroidx_core_util_Predicate_Handler();
    private static IntPtr n_And_Landroidx_core_util_Predicate_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    [RegisterAttribute("and", "(Landroidx/core/util/Predicate;)Landroidx/core/util/Predicate;", "GetAnd_Landroidx_core_util_Predicate_Handler:AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core")]
public virtual IPredicate And(IPredicate other);
    [RegisterAttribute("isEqual", "(Ljava/lang/Object;)Landroidx/core/util/Predicate;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPredicate IsEqual(Object targetRef);
    [NullableContextAttribute("1")]
private static Delegate GetNegateHandler();
    private static IntPtr n_Negate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("negate", "()Landroidx/core/util/Predicate;", "GetNegateHandler:AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core")]
public virtual IPredicate Negate();
    [RegisterAttribute("not", "(Landroidx/core/util/Predicate;)Landroidx/core/util/Predicate;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPredicate Not(IPredicate target);
    [NullableContextAttribute("1")]
private static Delegate GetOr_Landroidx_core_util_Predicate_Handler();
    private static IntPtr n_Or_Landroidx_core_util_Predicate_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    [RegisterAttribute("or", "(Landroidx/core/util/Predicate;)Landroidx/core/util/Predicate;", "GetOr_Landroidx_core_util_Predicate_Handler:AndroidX.Core.Util.IPredicate, Xamarin.AndroidX.Core")]
public virtual IPredicate Or(IPredicate other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Predicate")]
internal class AndroidX.Core.Util.IPredicateInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_test_Ljava_lang_Object_;
    private IntPtr id_test_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IPredicateInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IPredicateInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IPredicate GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetTest_Ljava_lang_Object_Handler();
    private static bool n_Test_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    [NullableContextAttribute("2")]
public sealed virtual bool Test(Object t);
}
[RegisterAttribute("androidx/core/util/Supplier", "", "AndroidX.Core.Util.ISupplierInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Core.Util.ISupplier {
    [NullableContextAttribute("2")]
[RegisterAttribute("get", "()Ljava/lang/Object;", "GetGetHandler:AndroidX.Core.Util.ISupplierInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Object Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Supplier")]
internal class AndroidX.Core.Util.ISupplierInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_get;
    private IntPtr id_get;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISupplierInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISupplierInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISupplier GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetHandler();
    private static IntPtr n_Get(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object Get();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/util/LogWriter")]
public class AndroidX.Core.Util.LogWriter : Writer {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_close;
    [NullableAttribute("2")]
private static Delegate cb_flush;
    [NullableAttribute("2")]
private static Delegate cb_write_arrayCII;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected LogWriter(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public LogWriter(string tag);
    private static LogWriter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetFlushHandler();
    private static void n_Flush(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flush", "()V", "GetFlushHandler")]
public virtual void Flush();
    private static Delegate GetWrite_arrayCIIHandler();
    private static void n_Write_arrayCII(IntPtr jnienv, IntPtr native__this, IntPtr native_buf, int offset, int count);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "([CII)V", "GetWrite_arrayCIIHandler")]
public virtual void Write(Char[] buf, int offset, int count);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/ObjectsCompat")]
public class AndroidX.Core.Util.ObjectsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ObjectsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ObjectsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("equals", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "")]
public static bool Equals(Object a, Object b);
    [RegisterAttribute("hash", "([Ljava/lang/Object;)I", "")]
public static int Hash(Object[] values);
    [NullableContextAttribute("2")]
[RegisterAttribute("hashCode", "(Ljava/lang/Object;)I", "")]
public static int HashCode(Object o);
    [RegisterAttribute("requireNonNull", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RequireNonNull(Object obj);
    [RegisterAttribute("requireNonNull", "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RequireNonNull(Object obj, string message);
    [NullableContextAttribute("2")]
[RegisterAttribute("toString", "(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;", "")]
public static string ToString(Object o, string nullDefault);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Pair")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class AndroidX.Core.Util.Pair : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("first")]
public Object First { get; public set; }
    [RegisterAttribute("second")]
public Object Second { get; public set; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected Pair(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;Ljava/lang/Object;)V", "")]
public Pair(Object first, Object second);
    private static Pair();
    public Object get_First();
    public void set_First(Object value);
    public Object get_Second();
    public void set_Second(Object value);
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Ljava/lang/Object;Ljava/lang/Object;)Landroidx/core/util/Pair;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Pair Create(Object a, Object b);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/PatternsCompat")]
public class AndroidX.Core.Util.PatternsCompat : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("AUTOLINK_EMAIL_ADDRESS")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static Pattern AutolinkEmailAddress { get; }
    [RegisterAttribute("AUTOLINK_WEB_URL")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static Pattern AutolinkWebUrl { get; }
    [RegisterAttribute("DOMAIN_NAME")]
public static Pattern DomainName { get; }
    [RegisterAttribute("EMAIL_ADDRESS")]
public static Pattern EmailAddress { get; }
    [RegisterAttribute("IP_ADDRESS")]
public static Pattern IpAddress { get; }
    [RegisterAttribute("WEB_URL")]
public static Pattern WebUrl { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PatternsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PatternsCompat();
    public static Pattern get_AutolinkEmailAddress();
    public static Pattern get_AutolinkWebUrl();
    public static Pattern get_DomainName();
    public static Pattern get_EmailAddress();
    public static Pattern get_IpAddress();
    public static Pattern get_WebUrl();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Pools")]
public class AndroidX.Core.Util.Pools : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Pools(IntPtr javaReference, JniHandleOwnership transfer);
    private static Pools();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/util/Preconditions")]
public class AndroidX.Core.Util.Preconditions : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal Preconditions(IntPtr javaReference, JniHandleOwnership transfer);
    private static Preconditions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("checkArgument", "(Z)V", "")]
public static void CheckArgument(bool expression);
    [RegisterAttribute("checkArgument", "(ZLjava/lang/Object;)V", "")]
public static void CheckArgument(bool expression, Object errorMessage);
    [RegisterAttribute("checkArgument", "(ZLjava/lang/String;[Ljava/lang/Object;)V", "")]
public static void CheckArgument(bool expression, string messageTemplate, Object[] messageArgs);
    [RegisterAttribute("checkArgumentFinite", "(FLjava/lang/String;)F", "")]
public static float CheckArgumentFinite(float value, string valueName);
    [RegisterAttribute("checkArgumentInRange", "(DDDLjava/lang/String;)D", "")]
public static double CheckArgumentInRange(double value, double lower, double upper, string valueName);
    [RegisterAttribute("checkArgumentInRange", "(FFFLjava/lang/String;)F", "")]
public static float CheckArgumentInRange(float value, float lower, float upper, string valueName);
    [RegisterAttribute("checkArgumentInRange", "(IIILjava/lang/String;)I", "")]
public static int CheckArgumentInRange(int value, int lower, int upper, string valueName);
    [RegisterAttribute("checkArgumentInRange", "(JJJLjava/lang/String;)J", "")]
public static long CheckArgumentInRange(long value, long lower, long upper, string valueName);
    [RegisterAttribute("checkArgumentNonnegative", "(I)I", "")]
public static int CheckArgumentNonnegative(int value);
    [NullableContextAttribute("2")]
[RegisterAttribute("checkArgumentNonnegative", "(ILjava/lang/String;)I", "")]
public static int CheckArgumentNonnegative(int value, string errorMessage);
    [RegisterAttribute("checkFlagsArgument", "(II)I", "")]
public static int CheckFlagsArgument(int requestedFlags, int allowedFlags);
    [RegisterAttribute("checkNotNull", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CheckNotNull(Object reference);
    [RegisterAttribute("checkNotNull", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CheckNotNull(Object reference, Object errorMessage);
    [RegisterAttribute("checkState", "(Z)V", "")]
public static void CheckState(bool expression);
    [NullableContextAttribute("2")]
[RegisterAttribute("checkState", "(ZLjava/lang/String;)V", "")]
public static void CheckState(bool expression, string message);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/Predicate")]
public abstract class AndroidX.Core.Util.Predicate : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Predicate();
    [RegisterAttribute("isEqual", "(Ljava/lang/Object;)Landroidx/core/util/Predicate;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPredicate IsEqual(Object targetRef);
    [RegisterAttribute("not", "(Landroidx/core/util/Predicate;)Landroidx/core/util/Predicate;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IPredicate Not(IPredicate target);
}
[RegisterAttribute("androidx/core/util/Predicate")]
[ObsoleteAttribute("Use the 'Predicate' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.Util.PredicateConsts : Predicate {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/SizeFCompat")]
public class AndroidX.Core.Util.SizeFCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Height { get; }
    public float Width { get; }
    internal SizeFCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(FF)V", "")]
public SizeFCompat(float width, float height);
    private static SizeFCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getHeight", "()F", "")]
public float get_Height();
    [RegisterAttribute("getWidth", "()F", "")]
public float get_Width();
    [RegisterAttribute("toSizeF", "()Landroid/util/SizeF;", "")]
public SizeF ToSizeF();
    [RegisterAttribute("toSizeFCompat", "(Landroid/util/SizeF;)Landroidx/core/util/SizeFCompat;", "")]
public static SizeFCompat ToSizeFCompat(SizeF size);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/util/TimeUtils")]
public class AndroidX.Core.Util.TimeUtils : Object {
    [RegisterAttribute("HUNDRED_DAY_FIELD_LEN")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static int HundredDayFieldLen;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TimeUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static TimeUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("formatDuration", "(JLjava/io/PrintWriter;)V", "")]
public static void FormatDuration(long duration, PrintWriter pw);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("formatDuration", "(JLjava/io/PrintWriter;I)V", "")]
public static void FormatDuration(long duration, PrintWriter pw, int fieldLen);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("formatDuration", "(JLjava/lang/StringBuilder;)V", "")]
public static void FormatDuration(long duration, StringBuilder builder);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("formatDuration", "(JJLjava/io/PrintWriter;)V", "")]
public static void FormatDuration(long time, long now, PrintWriter pw);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/util/TypedValueCompat")]
public class AndroidX.Core.Util.TypedValueCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected TypedValueCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TypedValueCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("deriveDimension", "(IFLandroid/util/DisplayMetrics;)F", "")]
public static float DeriveDimension(int unitToConvertTo, float pixelValue, DisplayMetrics metrics);
    [RegisterAttribute("dpToPx", "(FLandroid/util/DisplayMetrics;)F", "")]
public static float DpToPx(float dpValue, DisplayMetrics metrics);
    [RegisterAttribute("getUnitFromComplexDimension", "(I)I", "")]
public static int GetUnitFromComplexDimension(int complexDimension);
    [RegisterAttribute("pxToDp", "(FLandroid/util/DisplayMetrics;)F", "")]
public static float PxToDp(float pixelValue, DisplayMetrics metrics);
    [RegisterAttribute("pxToSp", "(FLandroid/util/DisplayMetrics;)F", "")]
public static float PxToSp(float pixelValue, DisplayMetrics metrics);
    [RegisterAttribute("spToPx", "(FLandroid/util/DisplayMetrics;)F", "")]
public static float SpToPx(float spValue, DisplayMetrics metrics);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityClickableSpanCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityClickableSpanCompat : ClickableSpan {
    [RegisterAttribute("SPAN_ID")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string SpanId;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AccessibilityClickableSpanCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(ILandroidx/core/view/accessibility/AccessibilityNodeInfoCompat;I)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public AccessibilityClickableSpanCompat(int originalClickableSpanId, AccessibilityNodeInfoCompat nodeInfoCompat, int clickableSpanActionId);
    private static AccessibilityClickableSpanCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onClick", "(Landroid/view/View;)V", "")]
public virtual void OnClick(View unused);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityEventCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityEventCompat : Object {
    [RegisterAttribute("CONTENT_CHANGE_TYPE_CONTENT_DESCRIPTION")]
public static int ContentChangeTypeContentDescription;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_CONTENT_INVALID")]
public static int ContentChangeTypeContentInvalid;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_DRAG_CANCELLED")]
public static int ContentChangeTypeDragCancelled;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_DRAG_DROPPED")]
public static int ContentChangeTypeDragDropped;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_DRAG_STARTED")]
public static int ContentChangeTypeDragStarted;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_ENABLED")]
public static int ContentChangeTypeEnabled;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_ERROR")]
public static int ContentChangeTypeError;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_PANE_APPEARED")]
public static int ContentChangeTypePaneAppeared;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_PANE_DISAPPEARED")]
public static int ContentChangeTypePaneDisappeared;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_PANE_TITLE")]
public static int ContentChangeTypePaneTitle;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_STATE_DESCRIPTION")]
public static int ContentChangeTypeStateDescription;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_SUBTREE")]
public static int ContentChangeTypeSubtree;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_TEXT")]
public static int ContentChangeTypeText;
    [RegisterAttribute("CONTENT_CHANGE_TYPE_UNDEFINED")]
public static int ContentChangeTypeUndefined;
    [RegisterAttribute("TYPES_ALL_MASK")]
public static int TypesAllMask;
    [RegisterAttribute("TYPE_ANNOUNCEMENT")]
public static int TypeAnnouncement;
    [RegisterAttribute("TYPE_ASSIST_READING_CONTEXT")]
public static int TypeAssistReadingContext;
    [RegisterAttribute("TYPE_GESTURE_DETECTION_END")]
public static int TypeGestureDetectionEnd;
    [RegisterAttribute("TYPE_GESTURE_DETECTION_START")]
public static int TypeGestureDetectionStart;
    [RegisterAttribute("TYPE_TOUCH_EXPLORATION_GESTURE_END")]
[ObsoleteAttribute("deprecated")]
public static int TypeTouchExplorationGestureEnd;
    [RegisterAttribute("TYPE_TOUCH_EXPLORATION_GESTURE_START")]
[ObsoleteAttribute("deprecated")]
public static int TypeTouchExplorationGestureStart;
    [RegisterAttribute("TYPE_TOUCH_INTERACTION_END")]
public static int TypeTouchInteractionEnd;
    [RegisterAttribute("TYPE_TOUCH_INTERACTION_START")]
public static int TypeTouchInteractionStart;
    [RegisterAttribute("TYPE_VIEW_ACCESSIBILITY_FOCUSED")]
public static int TypeViewAccessibilityFocused;
    [RegisterAttribute("TYPE_VIEW_ACCESSIBILITY_FOCUS_CLEARED")]
public static int TypeViewAccessibilityFocusCleared;
    [RegisterAttribute("TYPE_VIEW_CONTEXT_CLICKED")]
public static int TypeViewContextClicked;
    [RegisterAttribute("TYPE_VIEW_HOVER_ENTER")]
[ObsoleteAttribute("deprecated")]
public static int TypeViewHoverEnter;
    [RegisterAttribute("TYPE_VIEW_HOVER_EXIT")]
[ObsoleteAttribute("deprecated")]
public static int TypeViewHoverExit;
    [RegisterAttribute("TYPE_VIEW_SCROLLED")]
[ObsoleteAttribute("deprecated")]
public static int TypeViewScrolled;
    [RegisterAttribute("TYPE_VIEW_TARGETED_BY_SCROLL")]
public static int TypeViewTargetedByScroll;
    [RegisterAttribute("TYPE_VIEW_TEXT_SELECTION_CHANGED")]
[ObsoleteAttribute("deprecated")]
public static int TypeViewTextSelectionChanged;
    [RegisterAttribute("TYPE_VIEW_TEXT_TRAVERSED_AT_MOVEMENT_GRANULARITY")]
public static int TypeViewTextTraversedAtMovementGranularity;
    [RegisterAttribute("TYPE_WINDOWS_CHANGED")]
public static int TypeWindowsChanged;
    [RegisterAttribute("TYPE_WINDOW_CONTENT_CHANGED")]
[ObsoleteAttribute("deprecated")]
public static int TypeWindowContentChanged;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AccessibilityEventCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityEventCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("appendRecord", "(Landroid/view/accessibility/AccessibilityEvent;Landroidx/core/view/accessibility/AccessibilityRecordCompat;)V", "")]
public static void AppendRecord(AccessibilityEvent e, AccessibilityRecordCompat record);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("asRecord", "(Landroid/view/accessibility/AccessibilityEvent;)Landroidx/core/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat AsRecord(AccessibilityEvent e);
    [RegisterAttribute("getAction", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetAction(AccessibilityEvent e);
    [RegisterAttribute("getContentChangeTypes", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetContentChangeTypes(AccessibilityEvent e);
    [RegisterAttribute("getMovementGranularity", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetMovementGranularity(AccessibilityEvent e);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getRecord", "(Landroid/view/accessibility/AccessibilityEvent;I)Landroidx/core/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat GetRecord(AccessibilityEvent e, int index);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getRecordCount", "(Landroid/view/accessibility/AccessibilityEvent;)I", "")]
public static int GetRecordCount(AccessibilityEvent e);
    [RegisterAttribute("isAccessibilityDataSensitive", "(Landroid/view/accessibility/AccessibilityEvent;)Z", "")]
public static bool IsAccessibilityDataSensitive(AccessibilityEvent e);
    [RegisterAttribute("setAccessibilityDataSensitive", "(Landroid/view/accessibility/AccessibilityEvent;Z)V", "")]
public static void SetAccessibilityDataSensitive(AccessibilityEvent e, bool accessibilityDataSensitive);
    [RegisterAttribute("setAction", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public static void SetAction(AccessibilityEvent e, int action);
    [RegisterAttribute("setContentChangeTypes", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public static void SetContentChangeTypes(AccessibilityEvent e, int changeTypes);
    [RegisterAttribute("setMovementGranularity", "(Landroid/view/accessibility/AccessibilityEvent;I)V", "")]
public static void SetMovementGranularity(AccessibilityEvent e, int granularity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityManagerCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityManagerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AccessibilityManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("addAccessibilityStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z", "")]
public static bool AddAccessibilityStateChangeListener(AccessibilityManager manager, IAccessibilityStateChangeListener listener);
    [RegisterAttribute("addTouchExplorationStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z", "")]
public static bool AddTouchExplorationStateChangeListener(AccessibilityManager manager, ITouchExplorationStateChangeListener listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getEnabledAccessibilityServiceList", "(Landroid/view/accessibility/AccessibilityManager;I)Ljava/util/List;", "")]
public static IList`1<AccessibilityServiceInfo> GetEnabledAccessibilityServiceList(AccessibilityManager manager, int feedbackTypeFlags);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getInstalledAccessibilityServiceList", "(Landroid/view/accessibility/AccessibilityManager;)Ljava/util/List;", "")]
public static IList`1<AccessibilityServiceInfo> GetInstalledAccessibilityServiceList(AccessibilityManager manager);
    [RegisterAttribute("isRequestFromAccessibilityTool", "(Landroid/view/accessibility/AccessibilityManager;)Z", "")]
public static bool IsRequestFromAccessibilityTool(AccessibilityManager manager);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("isTouchExplorationEnabled", "(Landroid/view/accessibility/AccessibilityManager;)Z", "")]
public static bool IsTouchExplorationEnabled(AccessibilityManager manager);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("removeAccessibilityStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$AccessibilityStateChangeListener;)Z", "")]
public static bool RemoveAccessibilityStateChangeListener(AccessibilityManager manager, IAccessibilityStateChangeListener listener);
    [RegisterAttribute("removeTouchExplorationStateChangeListener", "(Landroid/view/accessibility/AccessibilityManager;Landroidx/core/view/accessibility/AccessibilityManagerCompat$TouchExplorationStateChangeListener;)Z", "")]
public static bool RemoveTouchExplorationStateChangeListener(AccessibilityManager manager, ITouchExplorationStateChangeListener listener);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityNodeInfoCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityNodeInfoCompat : Object {
    [RegisterAttribute("ACTION_ACCESSIBILITY_FOCUS")]
public static int ActionAccessibilityFocus;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_COLUMN_INT")]
public static string ActionArgumentColumnInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_DIRECTION_INT")]
public static string ActionArgumentDirectionInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_EXTEND_SELECTION_BOOLEAN")]
public static string ActionArgumentExtendSelectionBoolean;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_HTML_ELEMENT_STRING")]
public static string ActionArgumentHtmlElementString;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_MOVEMENT_GRANULARITY_INT")]
public static string ActionArgumentMovementGranularityInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_MOVE_WINDOW_X")]
public static string ActionArgumentMoveWindowX;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_MOVE_WINDOW_Y")]
public static string ActionArgumentMoveWindowY;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_PRESS_AND_HOLD_DURATION_MILLIS_INT")]
public static string ActionArgumentPressAndHoldDurationMillisInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_PROGRESS_VALUE")]
public static string ActionArgumentProgressValue;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_ROW_INT")]
public static string ActionArgumentRowInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_SCROLL_AMOUNT_FLOAT")]
public static string ActionArgumentScrollAmountFloat;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_SELECTION_END_INT")]
public static string ActionArgumentSelectionEndInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_SELECTION_START_INT")]
public static string ActionArgumentSelectionStartInt;
    [NullableAttribute("1")]
[RegisterAttribute("ACTION_ARGUMENT_SET_TEXT_CHARSEQUENCE")]
public static string ActionArgumentSetTextCharsequence;
    [RegisterAttribute("ACTION_CLEAR_ACCESSIBILITY_FOCUS")]
public static int ActionClearAccessibilityFocus;
    [RegisterAttribute("ACTION_CLEAR_FOCUS")]
public static int ActionClearFocus;
    [RegisterAttribute("ACTION_CLEAR_SELECTION")]
public static int ActionClearSelection;
    [RegisterAttribute("ACTION_CLICK")]
public static int ActionClick;
    [RegisterAttribute("ACTION_COLLAPSE")]
public static int ActionCollapse;
    [RegisterAttribute("ACTION_COPY")]
public static int ActionCopy;
    [RegisterAttribute("ACTION_CUT")]
public static int ActionCut;
    [RegisterAttribute("ACTION_DISMISS")]
public static int ActionDismiss;
    [RegisterAttribute("ACTION_EXPAND")]
public static int ActionExpand;
    [RegisterAttribute("ACTION_FOCUS")]
public static int ActionFocus;
    [RegisterAttribute("ACTION_LONG_CLICK")]
public static int ActionLongClick;
    [RegisterAttribute("ACTION_NEXT_AT_MOVEMENT_GRANULARITY")]
public static int ActionNextAtMovementGranularity;
    [RegisterAttribute("ACTION_NEXT_HTML_ELEMENT")]
public static int ActionNextHtmlElement;
    [RegisterAttribute("ACTION_PASTE")]
public static int ActionPaste;
    [RegisterAttribute("ACTION_PREVIOUS_AT_MOVEMENT_GRANULARITY")]
public static int ActionPreviousAtMovementGranularity;
    [RegisterAttribute("ACTION_PREVIOUS_HTML_ELEMENT")]
public static int ActionPreviousHtmlElement;
    [RegisterAttribute("ACTION_SCROLL_BACKWARD")]
public static int ActionScrollBackward;
    [RegisterAttribute("ACTION_SCROLL_FORWARD")]
public static int ActionScrollForward;
    [RegisterAttribute("ACTION_SELECT")]
public static int ActionSelect;
    [RegisterAttribute("ACTION_SET_SELECTION")]
public static int ActionSetSelection;
    [RegisterAttribute("ACTION_SET_TEXT")]
public static int ActionSetText;
    [NullableAttribute("1")]
[RegisterAttribute("EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_LENGTH")]
public static string ExtraDataTextCharacterLocationArgLength;
    [RegisterAttribute("EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_MAX_LENGTH")]
public static int ExtraDataTextCharacterLocationArgMaxLength;
    [NullableAttribute("1")]
[RegisterAttribute("EXTRA_DATA_TEXT_CHARACTER_LOCATION_ARG_START_INDEX")]
public static string ExtraDataTextCharacterLocationArgStartIndex;
    [NullableAttribute("1")]
[RegisterAttribute("EXTRA_DATA_TEXT_CHARACTER_LOCATION_KEY")]
public static string ExtraDataTextCharacterLocationKey;
    [RegisterAttribute("FLAG_PREFETCH_ANCESTORS")]
public static int FlagPrefetchAncestors;
    [RegisterAttribute("FLAG_PREFETCH_DESCENDANTS_BREADTH_FIRST")]
public static int FlagPrefetchDescendantsBreadthFirst;
    [RegisterAttribute("FLAG_PREFETCH_DESCENDANTS_DEPTH_FIRST")]
public static int FlagPrefetchDescendantsDepthFirst;
    [RegisterAttribute("FLAG_PREFETCH_DESCENDANTS_HYBRID")]
public static int FlagPrefetchDescendantsHybrid;
    [RegisterAttribute("FLAG_PREFETCH_SIBLINGS")]
public static int FlagPrefetchSiblings;
    [RegisterAttribute("FLAG_PREFETCH_UNINTERRUPTIBLE")]
public static int FlagPrefetchUninterruptible;
    [RegisterAttribute("FOCUS_ACCESSIBILITY")]
public static int FocusAccessibility;
    [RegisterAttribute("FOCUS_INPUT")]
public static int FocusInput;
    [RegisterAttribute("MAX_NUMBER_OF_PREFETCHED_NODES")]
public static int MaxNumberOfPrefetchedNodes;
    [RegisterAttribute("MOVEMENT_GRANULARITY_CHARACTER")]
public static int MovementGranularityCharacter;
    [RegisterAttribute("MOVEMENT_GRANULARITY_LINE")]
public static int MovementGranularityLine;
    [RegisterAttribute("MOVEMENT_GRANULARITY_PAGE")]
public static int MovementGranularityPage;
    [RegisterAttribute("MOVEMENT_GRANULARITY_PARAGRAPH")]
public static int MovementGranularityParagraph;
    [RegisterAttribute("MOVEMENT_GRANULARITY_WORD")]
public static int MovementGranularityWord;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_isAccessibilityDataSensitive;
    private static Delegate cb_setAccessibilityDataSensitive_Z;
    private static Delegate cb_isAccessibilityFocused;
    private static Delegate cb_setAccessibilityFocused_Z;
    private static Delegate cb_getActionList;
    private static Delegate cb_getActions;
    private static Delegate cb_getAvailableExtraData;
    private static Delegate cb_setAvailableExtraData_Ljava_util_List_;
    private static Delegate cb_isCheckable;
    private static Delegate cb_setCheckable_Z;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_getChildCount;
    private static Delegate cb_getClassName;
    private static Delegate cb_setClassName_Ljava_lang_CharSequence_;
    private static Delegate cb_isClickable;
    private static Delegate cb_setClickable_Z;
    private static Delegate cb_getCollectionInfo;
    private static Delegate cb_getCollectionItemInfo;
    private static Delegate cb_getContainerTitle;
    private static Delegate cb_setContainerTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_getContentDescription;
    private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isContentInvalid;
    private static Delegate cb_setContentInvalid_Z;
    private static Delegate cb_isContextClickable;
    private static Delegate cb_setContextClickable_Z;
    private static Delegate cb_isDismissable;
    private static Delegate cb_setDismissable_Z;
    private static Delegate cb_getDrawingOrder;
    private static Delegate cb_setDrawingOrder_I;
    private static Delegate cb_isEditable;
    private static Delegate cb_setEditable_Z;
    private static Delegate cb_isEnabled;
    private static Delegate cb_setEnabled_Z;
    private static Delegate cb_getError;
    private static Delegate cb_setError_Ljava_lang_CharSequence_;
    private static Delegate cb_getExtraRenderingInfo;
    private static Delegate cb_getExtras;
    private static Delegate cb_isFocusable;
    private static Delegate cb_setFocusable_Z;
    private static Delegate cb_isFocused;
    private static Delegate cb_setFocused_Z;
    private static Delegate cb_isGranularScrollingSupported;
    private static Delegate cb_setGranularScrollingSupported_Z;
    private static Delegate cb_hasRequestInitialAccessibilityFocus;
    private static Delegate cb_isHeading;
    private static Delegate cb_setHeading_Z;
    private static Delegate cb_getHintText;
    private static Delegate cb_setHintText_Ljava_lang_CharSequence_;
    private static Delegate cb_isImportantForAccessibility;
    private static Delegate cb_setImportantForAccessibility_Z;
    private static Delegate cb_getInfo;
    private static Delegate cb_getInputType;
    private static Delegate cb_setInputType_I;
    private static Delegate cb_getLabelFor;
    private static Delegate cb_getLabeledBy;
    private static Delegate cb_getLiveRegion;
    private static Delegate cb_setLiveRegion_I;
    private static Delegate cb_isLongClickable;
    private static Delegate cb_setLongClickable_Z;
    private static Delegate cb_getMaxTextLength;
    private static Delegate cb_setMaxTextLength_I;
    private static Delegate cb_getMinDurationBetweenContentChangesMillis;
    private static Delegate cb_setMinDurationBetweenContentChangesMillis_J;
    private static Delegate cb_getMovementGranularities;
    private static Delegate cb_setMovementGranularities_I;
    private static Delegate cb_isMultiLine;
    private static Delegate cb_setMultiLine_Z;
    private static Delegate cb_getPackageName;
    private static Delegate cb_setPackageName_Ljava_lang_CharSequence_;
    private static Delegate cb_getPaneTitle;
    private static Delegate cb_setPaneTitle_Ljava_lang_CharSequence_;
    private static Delegate cb_getParent;
    private static Delegate cb_isPassword;
    private static Delegate cb_setPassword_Z;
    private static Delegate cb_getRangeInfo;
    private static Delegate cb_setRangeInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_;
    private static Delegate cb_getRoleDescription;
    private static Delegate cb_setRoleDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_isScreenReaderFocusable;
    private static Delegate cb_setScreenReaderFocusable_Z;
    private static Delegate cb_isScrollable;
    private static Delegate cb_setScrollable_Z;
    private static Delegate cb_isSelected;
    private static Delegate cb_setSelected_Z;
    private static Delegate cb_isShowingHintText;
    private static Delegate cb_setShowingHintText_Z;
    private static Delegate cb_getStateDescription;
    private static Delegate cb_setStateDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_getText;
    private static Delegate cb_setText_Ljava_lang_CharSequence_;
    private static Delegate cb_isTextEntryKey;
    private static Delegate cb_setTextEntryKey_Z;
    private static Delegate cb_isTextSelectable;
    private static Delegate cb_setTextSelectable_Z;
    private static Delegate cb_getTextSelectionEnd;
    private static Delegate cb_getTextSelectionStart;
    private static Delegate cb_getTooltipText;
    private static Delegate cb_setTooltipText_Ljava_lang_CharSequence_;
    private static Delegate cb_getTouchDelegateInfo;
    private static Delegate cb_setTouchDelegateInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_TouchDelegateInfoCompat_;
    private static Delegate cb_getTraversalAfter;
    private static Delegate cb_getTraversalBefore;
    private static Delegate cb_getUniqueId;
    private static Delegate cb_setUniqueId_Ljava_lang_String_;
    private static Delegate cb_getViewIdResourceName;
    private static Delegate cb_setViewIdResourceName_Ljava_lang_String_;
    private static Delegate cb_isVisibleToUser;
    private static Delegate cb_setVisibleToUser_Z;
    private static Delegate cb_getWindow;
    private static Delegate cb_getWindowId;
    private static Delegate cb_addAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static Delegate cb_addAction_I;
    private static Delegate cb_addChild_Landroid_view_View_;
    private static Delegate cb_addChild_Landroid_view_View_I;
    private static Delegate cb_addSpansToExtras_Ljava_lang_CharSequence_Landroid_view_View_;
    private static Delegate cb_canOpenPopup;
    private static Delegate cb_findAccessibilityNodeInfosByText_Ljava_lang_String_;
    private static Delegate cb_findAccessibilityNodeInfosByViewId_Ljava_lang_String_;
    private static Delegate cb_findFocus_I;
    private static Delegate cb_focusSearch_I;
    private static Delegate cb_getBoundsInParent_Landroid_graphics_Rect_;
    private static Delegate cb_getBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_getBoundsInWindow_Landroid_graphics_Rect_;
    private static Delegate cb_getChild_I;
    private static Delegate cb_getChild_II;
    private static Delegate cb_getParent_I;
    private static Delegate cb_performAction_I;
    private static Delegate cb_performAction_ILandroid_os_Bundle_;
    private static Delegate cb_recycle;
    private static Delegate cb_refresh;
    private static Delegate cb_removeAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_;
    private static Delegate cb_removeChild_Landroid_view_View_;
    private static Delegate cb_removeChild_Landroid_view_View_I;
    private static Delegate cb_setBoundsInParent_Landroid_graphics_Rect_;
    private static Delegate cb_setBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_setBoundsInWindow_Landroid_graphics_Rect_;
    private static Delegate cb_setCanOpenPopup_Z;
    private static Delegate cb_setCollectionInfo_Ljava_lang_Object_;
    private static Delegate cb_setCollectionItemInfo_Ljava_lang_Object_;
    private static Delegate cb_setLabelFor_Landroid_view_View_;
    private static Delegate cb_setLabelFor_Landroid_view_View_I;
    private static Delegate cb_setLabeledBy_Landroid_view_View_;
    private static Delegate cb_setLabeledBy_Landroid_view_View_I;
    private static Delegate cb_setParent_Landroid_view_View_;
    private static Delegate cb_setParent_Landroid_view_View_I;
    private static Delegate cb_setQueryFromAppProcessEnabled_Landroid_view_View_Z;
    private static Delegate cb_setRequestInitialAccessibilityFocus_Z;
    private static Delegate cb_setSource_Landroid_view_View_;
    private static Delegate cb_setSource_Landroid_view_View_I;
    private static Delegate cb_setTextSelection_II;
    private static Delegate cb_setTraversalAfter_Landroid_view_View_;
    private static Delegate cb_setTraversalAfter_Landroid_view_View_I;
    private static Delegate cb_setTraversalBefore_Landroid_view_View_;
    private static Delegate cb_setTraversalBefore_Landroid_view_View_I;
    private static Delegate cb_unwrap;
    [RegisterAttribute("mParentVirtualDescendantId")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MParentVirtualDescendantId { get; public set; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool AccessibilityDataSensitive { get; public set; }
    public bool AccessibilityFocused { get; public set; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<AccessibilityActionCompat> ActionList { get; }
    [ObsoleteAttribute("deprecated")]
public int Actions { get; }
    [NullableAttribute("1")]
public IList`1<string> AvailableExtraData { get; public set; }
    public bool Checkable { get; public set; }
    public bool Checked { get; public set; }
    public int ChildCount { get; }
    public ICharSequence ClassNameFormatted { get; public set; }
    public string ClassName { get; public set; }
    public bool Clickable { get; public set; }
    public CollectionInfoCompat CollectionInfo { get; }
    public CollectionItemInfoCompat CollectionItemInfo { get; }
    public ICharSequence ContainerTitleFormatted { get; public set; }
    public string ContainerTitle { get; public set; }
    public ICharSequence ContentDescriptionFormatted { get; public set; }
    public string ContentDescription { get; public set; }
    public bool ContentInvalid { get; public set; }
    public bool ContextClickable { get; public set; }
    public bool Dismissable { get; public set; }
    public int DrawingOrder { get; public set; }
    public bool Editable { get; public set; }
    public bool Enabled { get; public set; }
    public ICharSequence ErrorFormatted { get; public set; }
    public string Error { get; public set; }
    public ExtraRenderingInfo ExtraRenderingInfo { get; }
    public Bundle Extras { get; }
    public bool Focusable { get; public set; }
    public bool Focused { get; public set; }
    public bool GranularScrollingSupported { get; public set; }
    public bool HasRequestInitialAccessibilityFocus { get; }
    public bool Heading { get; public set; }
    public ICharSequence HintTextFormatted { get; public set; }
    public string HintText { get; public set; }
    public bool ImportantForAccessibility { get; public set; }
    [ObsoleteAttribute("deprecated")]
public Object Info { get; }
    public int InputType { get; public set; }
    public AccessibilityNodeInfoCompat LabelFor { get; }
    public AccessibilityNodeInfoCompat LabeledBy { get; }
    public int LiveRegion { get; public set; }
    public bool LongClickable { get; public set; }
    public int MaxTextLength { get; public set; }
    public long MinDurationBetweenContentChangesMillis { get; public set; }
    public int MovementGranularities { get; public set; }
    public bool MultiLine { get; public set; }
    public ICharSequence PackageNameFormatted { get; public set; }
    public string PackageName { get; public set; }
    public ICharSequence PaneTitleFormatted { get; public set; }
    public string PaneTitle { get; public set; }
    public AccessibilityNodeInfoCompat Parent { get; }
    public bool Password { get; public set; }
    public RangeInfoCompat RangeInfo { get; public set; }
    public ICharSequence RoleDescriptionFormatted { get; public set; }
    public string RoleDescription { get; public set; }
    public bool ScreenReaderFocusable { get; public set; }
    public bool Scrollable { get; public set; }
    public bool Selected { get; public set; }
    public bool ShowingHintText { get; public set; }
    public ICharSequence StateDescriptionFormatted { get; public set; }
    public string StateDescription { get; public set; }
    public ICharSequence TextFormatted { get; public set; }
    public string Text { get; public set; }
    public bool TextEntryKey { get; public set; }
    public bool TextSelectable { get; public set; }
    public int TextSelectionEnd { get; }
    public int TextSelectionStart { get; }
    public ICharSequence TooltipTextFormatted { get; public set; }
    public string TooltipText { get; public set; }
    public TouchDelegateInfoCompat TouchDelegateInfo { get; public set; }
    public AccessibilityNodeInfoCompat TraversalAfter { get; }
    public AccessibilityNodeInfoCompat TraversalBefore { get; }
    public string UniqueId { get; public set; }
    public string ViewIdResourceName { get; public set; }
    public bool VisibleToUser { get; public set; }
    public AccessibilityWindowInfoCompat Window { get; }
    public int WindowId { get; }
    protected AccessibilityNodeInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
[ObsoleteAttribute("deprecated")]
public AccessibilityNodeInfoCompat(Object info);
    private static AccessibilityNodeInfoCompat();
    public int get_MParentVirtualDescendantId();
    public void set_MParentVirtualDescendantId(int value);
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetIsAccessibilityDataSensitiveHandler();
    private static bool n_IsAccessibilityDataSensitive(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetAccessibilityDataSensitive_ZHandler();
    private static void n_SetAccessibilityDataSensitive_Z(IntPtr jnienv, IntPtr native__this, bool accessibilityDataSensitive);
    [RegisterAttribute("isAccessibilityDataSensitive", "()Z", "GetIsAccessibilityDataSensitiveHandler")]
public virtual bool get_AccessibilityDataSensitive();
    [RegisterAttribute("setAccessibilityDataSensitive", "(Z)V", "GetSetAccessibilityDataSensitive_ZHandler")]
public virtual void set_AccessibilityDataSensitive(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsAccessibilityFocusedHandler();
    private static bool n_IsAccessibilityFocused(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetAccessibilityFocused_ZHandler();
    private static void n_SetAccessibilityFocused_Z(IntPtr jnienv, IntPtr native__this, bool focused);
    [RegisterAttribute("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")]
public virtual bool get_AccessibilityFocused();
    [RegisterAttribute("setAccessibilityFocused", "(Z)V", "GetSetAccessibilityFocused_ZHandler")]
public virtual void set_AccessibilityFocused(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetActionListHandler();
    private static IntPtr n_GetActionList(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActionList", "()Ljava/util/List;", "GetGetActionListHandler")]
public virtual IList`1<AccessibilityActionCompat> get_ActionList();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetActionsHandler();
    [ObsoleteAttribute]
private static int n_GetActions(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getActions", "()I", "GetGetActionsHandler")]
public virtual int get_Actions();
    [NullableContextAttribute("1")]
private static Delegate GetGetAvailableExtraDataHandler();
    private static IntPtr n_GetAvailableExtraData(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetAvailableExtraData_Ljava_util_List_Handler();
    private static void n_SetAvailableExtraData_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_extraDataKeys);
    [NullableContextAttribute("1")]
[RegisterAttribute("getAvailableExtraData", "()Ljava/util/List;", "GetGetAvailableExtraDataHandler")]
public virtual IList`1<string> get_AvailableExtraData();
    [NullableContextAttribute("1")]
[RegisterAttribute("setAvailableExtraData", "(Ljava/util/List;)V", "GetSetAvailableExtraData_Ljava_util_List_Handler")]
public virtual void set_AvailableExtraData(IList`1<string> value);
    [NullableContextAttribute("1")]
private static Delegate GetIsCheckableHandler();
    private static bool n_IsCheckable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetCheckable_ZHandler();
    private static void n_SetCheckable_Z(IntPtr jnienv, IntPtr native__this, bool checkable);
    [RegisterAttribute("isCheckable", "()Z", "GetIsCheckableHandler")]
public virtual bool get_Checkable();
    [RegisterAttribute("setCheckable", "(Z)V", "GetSetCheckable_ZHandler")]
public virtual void set_Checkable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsCheckedHandler();
    private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetChecked_ZHandler();
    private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool checked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetChildCountHandler();
    private static int n_GetChildCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChildCount", "()I", "GetGetChildCountHandler")]
public virtual int get_ChildCount();
    [NullableContextAttribute("1")]
private static Delegate GetGetClassNameHandler();
    private static IntPtr n_GetClassName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetClassName_Ljava_lang_CharSequence_Handler();
    private static void n_SetClassName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_className);
    [RegisterAttribute("getClassName", "()Ljava/lang/CharSequence;", "GetGetClassNameHandler")]
public virtual ICharSequence get_ClassNameFormatted();
    [RegisterAttribute("setClassName", "(Ljava/lang/CharSequence;)V", "GetSetClassName_Ljava_lang_CharSequence_Handler")]
public virtual void set_ClassNameFormatted(ICharSequence value);
    public string get_ClassName();
    public void set_ClassName(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsClickableHandler();
    private static bool n_IsClickable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetClickable_ZHandler();
    private static void n_SetClickable_Z(IntPtr jnienv, IntPtr native__this, bool clickable);
    [RegisterAttribute("isClickable", "()Z", "GetIsClickableHandler")]
public virtual bool get_Clickable();
    [RegisterAttribute("setClickable", "(Z)V", "GetSetClickable_ZHandler")]
public virtual void set_Clickable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetCollectionInfoHandler();
    private static IntPtr n_GetCollectionInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCollectionInfo", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionInfoCompat;", "GetGetCollectionInfoHandler")]
public virtual CollectionInfoCompat get_CollectionInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetCollectionItemInfoHandler();
    private static IntPtr n_GetCollectionItemInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getCollectionItemInfo", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$CollectionItemInfoCompat;", "GetGetCollectionItemInfoHandler")]
public virtual CollectionItemInfoCompat get_CollectionItemInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetContainerTitleHandler();
    private static IntPtr n_GetContainerTitle(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetContainerTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetContainerTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_containerTitle);
    [RegisterAttribute("getContainerTitle", "()Ljava/lang/CharSequence;", "GetGetContainerTitleHandler")]
public virtual ICharSequence get_ContainerTitleFormatted();
    [RegisterAttribute("setContainerTitle", "(Ljava/lang/CharSequence;)V", "GetSetContainerTitle_Ljava_lang_CharSequence_Handler")]
public virtual void set_ContainerTitleFormatted(ICharSequence value);
    public string get_ContainerTitle();
    public void set_ContainerTitle(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetContentDescriptionHandler();
    private static IntPtr n_GetContentDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentDescription);
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")]
public virtual ICharSequence get_ContentDescriptionFormatted();
    [RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_ContentDescriptionFormatted(ICharSequence value);
    public string get_ContentDescription();
    public void set_ContentDescription(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsContentInvalidHandler();
    private static bool n_IsContentInvalid(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetContentInvalid_ZHandler();
    private static void n_SetContentInvalid_Z(IntPtr jnienv, IntPtr native__this, bool contentInvalid);
    [RegisterAttribute("isContentInvalid", "()Z", "GetIsContentInvalidHandler")]
public virtual bool get_ContentInvalid();
    [RegisterAttribute("setContentInvalid", "(Z)V", "GetSetContentInvalid_ZHandler")]
public virtual void set_ContentInvalid(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsContextClickableHandler();
    private static bool n_IsContextClickable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetContextClickable_ZHandler();
    private static void n_SetContextClickable_Z(IntPtr jnienv, IntPtr native__this, bool contextClickable);
    [RegisterAttribute("isContextClickable", "()Z", "GetIsContextClickableHandler")]
public virtual bool get_ContextClickable();
    [RegisterAttribute("setContextClickable", "(Z)V", "GetSetContextClickable_ZHandler")]
public virtual void set_ContextClickable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsDismissableHandler();
    private static bool n_IsDismissable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetDismissable_ZHandler();
    private static void n_SetDismissable_Z(IntPtr jnienv, IntPtr native__this, bool dismissable);
    [RegisterAttribute("isDismissable", "()Z", "GetIsDismissableHandler")]
public virtual bool get_Dismissable();
    [RegisterAttribute("setDismissable", "(Z)V", "GetSetDismissable_ZHandler")]
public virtual void set_Dismissable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetDrawingOrderHandler();
    private static int n_GetDrawingOrder(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetDrawingOrder_IHandler();
    private static void n_SetDrawingOrder_I(IntPtr jnienv, IntPtr native__this, int drawingOrderInParent);
    [RegisterAttribute("getDrawingOrder", "()I", "GetGetDrawingOrderHandler")]
public virtual int get_DrawingOrder();
    [RegisterAttribute("setDrawingOrder", "(I)V", "GetSetDrawingOrder_IHandler")]
public virtual void set_DrawingOrder(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsEditableHandler();
    private static bool n_IsEditable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetEditable_ZHandler();
    private static void n_SetEditable_Z(IntPtr jnienv, IntPtr native__this, bool editable);
    [RegisterAttribute("isEditable", "()Z", "GetIsEditableHandler")]
public virtual bool get_Editable();
    [RegisterAttribute("setEditable", "(Z)V", "GetSetEditable_ZHandler")]
public virtual void set_Editable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetEnabled_ZHandler();
    private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public virtual void set_Enabled(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetErrorHandler();
    private static IntPtr n_GetError(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetError_Ljava_lang_CharSequence_Handler();
    private static void n_SetError_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_error);
    [RegisterAttribute("getError", "()Ljava/lang/CharSequence;", "GetGetErrorHandler")]
public virtual ICharSequence get_ErrorFormatted();
    [RegisterAttribute("setError", "(Ljava/lang/CharSequence;)V", "GetSetError_Ljava_lang_CharSequence_Handler")]
public virtual void set_ErrorFormatted(ICharSequence value);
    public string get_Error();
    public void set_Error(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetExtraRenderingInfoHandler();
    private static IntPtr n_GetExtraRenderingInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtraRenderingInfo", "()Landroid/view/accessibility/AccessibilityNodeInfo$ExtraRenderingInfo;", "GetGetExtraRenderingInfoHandler")]
public virtual ExtraRenderingInfo get_ExtraRenderingInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    [NullableContextAttribute("1")]
private static Delegate GetIsFocusableHandler();
    private static bool n_IsFocusable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetFocusable_ZHandler();
    private static void n_SetFocusable_Z(IntPtr jnienv, IntPtr native__this, bool focusable);
    [RegisterAttribute("isFocusable", "()Z", "GetIsFocusableHandler")]
public virtual bool get_Focusable();
    [RegisterAttribute("setFocusable", "(Z)V", "GetSetFocusable_ZHandler")]
public virtual void set_Focusable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsFocusedHandler();
    private static bool n_IsFocused(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetFocused_ZHandler();
    private static void n_SetFocused_Z(IntPtr jnienv, IntPtr native__this, bool focused);
    [RegisterAttribute("isFocused", "()Z", "GetIsFocusedHandler")]
public virtual bool get_Focused();
    [RegisterAttribute("setFocused", "(Z)V", "GetSetFocused_ZHandler")]
public virtual void set_Focused(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsGranularScrollingSupportedHandler();
    private static bool n_IsGranularScrollingSupported(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetGranularScrollingSupported_ZHandler();
    private static void n_SetGranularScrollingSupported_Z(IntPtr jnienv, IntPtr native__this, bool granularScrollingSupported);
    [RegisterAttribute("isGranularScrollingSupported", "()Z", "GetIsGranularScrollingSupportedHandler")]
public virtual bool get_GranularScrollingSupported();
    [RegisterAttribute("setGranularScrollingSupported", "(Z)V", "GetSetGranularScrollingSupported_ZHandler")]
public virtual void set_GranularScrollingSupported(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetHasRequestInitialAccessibilityFocusHandler();
    private static bool n_HasRequestInitialAccessibilityFocus(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasRequestInitialAccessibilityFocus", "()Z", "GetHasRequestInitialAccessibilityFocusHandler")]
public virtual bool get_HasRequestInitialAccessibilityFocus();
    [NullableContextAttribute("1")]
private static Delegate GetIsHeadingHandler();
    private static bool n_IsHeading(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetHeading_ZHandler();
    private static void n_SetHeading_Z(IntPtr jnienv, IntPtr native__this, bool isHeading);
    [RegisterAttribute("isHeading", "()Z", "GetIsHeadingHandler")]
public virtual bool get_Heading();
    [RegisterAttribute("setHeading", "(Z)V", "GetSetHeading_ZHandler")]
public virtual void set_Heading(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetHintTextHandler();
    private static IntPtr n_GetHintText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetHintText_Ljava_lang_CharSequence_Handler();
    private static void n_SetHintText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_hintText);
    [RegisterAttribute("getHintText", "()Ljava/lang/CharSequence;", "GetGetHintTextHandler")]
public virtual ICharSequence get_HintTextFormatted();
    [RegisterAttribute("setHintText", "(Ljava/lang/CharSequence;)V", "GetSetHintText_Ljava_lang_CharSequence_Handler")]
public virtual void set_HintTextFormatted(ICharSequence value);
    public string get_HintText();
    public void set_HintText(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsImportantForAccessibilityHandler();
    private static bool n_IsImportantForAccessibility(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetImportantForAccessibility_ZHandler();
    private static void n_SetImportantForAccessibility_Z(IntPtr jnienv, IntPtr native__this, bool important);
    [RegisterAttribute("isImportantForAccessibility", "()Z", "GetIsImportantForAccessibilityHandler")]
public virtual bool get_ImportantForAccessibility();
    [RegisterAttribute("setImportantForAccessibility", "(Z)V", "GetSetImportantForAccessibility_ZHandler")]
public virtual void set_ImportantForAccessibility(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetInfoHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getInfo", "()Ljava/lang/Object;", "GetGetInfoHandler")]
public virtual Object get_Info();
    [NullableContextAttribute("1")]
private static Delegate GetGetInputTypeHandler();
    private static int n_GetInputType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetInputType_IHandler();
    private static void n_SetInputType_I(IntPtr jnienv, IntPtr native__this, int inputType);
    [RegisterAttribute("getInputType", "()I", "GetGetInputTypeHandler")]
public virtual int get_InputType();
    [RegisterAttribute("setInputType", "(I)V", "GetSetInputType_IHandler")]
public virtual void set_InputType(int value);
    [NullableContextAttribute("1")]
private static Delegate GetGetLabelForHandler();
    private static IntPtr n_GetLabelFor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLabelFor", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetLabelForHandler")]
public virtual AccessibilityNodeInfoCompat get_LabelFor();
    [NullableContextAttribute("1")]
private static Delegate GetGetLabeledByHandler();
    private static IntPtr n_GetLabeledBy(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLabeledBy", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetLabeledByHandler")]
public virtual AccessibilityNodeInfoCompat get_LabeledBy();
    [NullableContextAttribute("1")]
private static Delegate GetGetLiveRegionHandler();
    private static int n_GetLiveRegion(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetLiveRegion_IHandler();
    private static void n_SetLiveRegion_I(IntPtr jnienv, IntPtr native__this, int mode);
    [RegisterAttribute("getLiveRegion", "()I", "GetGetLiveRegionHandler")]
public virtual int get_LiveRegion();
    [RegisterAttribute("setLiveRegion", "(I)V", "GetSetLiveRegion_IHandler")]
public virtual void set_LiveRegion(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsLongClickableHandler();
    private static bool n_IsLongClickable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetLongClickable_ZHandler();
    private static void n_SetLongClickable_Z(IntPtr jnienv, IntPtr native__this, bool longClickable);
    [RegisterAttribute("isLongClickable", "()Z", "GetIsLongClickableHandler")]
public virtual bool get_LongClickable();
    [RegisterAttribute("setLongClickable", "(Z)V", "GetSetLongClickable_ZHandler")]
public virtual void set_LongClickable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetMaxTextLengthHandler();
    private static int n_GetMaxTextLength(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetMaxTextLength_IHandler();
    private static void n_SetMaxTextLength_I(IntPtr jnienv, IntPtr native__this, int max);
    [RegisterAttribute("getMaxTextLength", "()I", "GetGetMaxTextLengthHandler")]
public virtual int get_MaxTextLength();
    [RegisterAttribute("setMaxTextLength", "(I)V", "GetSetMaxTextLength_IHandler")]
public virtual void set_MaxTextLength(int value);
    [NullableContextAttribute("1")]
private static Delegate GetGetMinDurationBetweenContentChangesMillisHandler();
    private static long n_GetMinDurationBetweenContentChangesMillis(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetMinDurationBetweenContentChangesMillis_JHandler();
    private static void n_SetMinDurationBetweenContentChangesMillis_J(IntPtr jnienv, IntPtr native__this, long duration);
    [RegisterAttribute("getMinDurationBetweenContentChangesMillis", "()J", "GetGetMinDurationBetweenContentChangesMillisHandler")]
public virtual long get_MinDurationBetweenContentChangesMillis();
    [RegisterAttribute("setMinDurationBetweenContentChangesMillis", "(J)V", "GetSetMinDurationBetweenContentChangesMillis_JHandler")]
public virtual void set_MinDurationBetweenContentChangesMillis(long value);
    [NullableContextAttribute("1")]
private static Delegate GetGetMovementGranularitiesHandler();
    private static int n_GetMovementGranularities(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetMovementGranularities_IHandler();
    private static void n_SetMovementGranularities_I(IntPtr jnienv, IntPtr native__this, int granularities);
    [RegisterAttribute("getMovementGranularities", "()I", "GetGetMovementGranularitiesHandler")]
public virtual int get_MovementGranularities();
    [RegisterAttribute("setMovementGranularities", "(I)V", "GetSetMovementGranularities_IHandler")]
public virtual void set_MovementGranularities(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsMultiLineHandler();
    private static bool n_IsMultiLine(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetMultiLine_ZHandler();
    private static void n_SetMultiLine_Z(IntPtr jnienv, IntPtr native__this, bool multiLine);
    [RegisterAttribute("isMultiLine", "()Z", "GetIsMultiLineHandler")]
public virtual bool get_MultiLine();
    [RegisterAttribute("setMultiLine", "(Z)V", "GetSetMultiLine_ZHandler")]
public virtual void set_MultiLine(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetPackageName_Ljava_lang_CharSequence_Handler();
    private static void n_SetPackageName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_packageName);
    [RegisterAttribute("getPackageName", "()Ljava/lang/CharSequence;", "GetGetPackageNameHandler")]
public virtual ICharSequence get_PackageNameFormatted();
    [RegisterAttribute("setPackageName", "(Ljava/lang/CharSequence;)V", "GetSetPackageName_Ljava_lang_CharSequence_Handler")]
public virtual void set_PackageNameFormatted(ICharSequence value);
    public string get_PackageName();
    public void set_PackageName(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetPaneTitleHandler();
    private static IntPtr n_GetPaneTitle(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetPaneTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetPaneTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_paneTitle);
    [RegisterAttribute("getPaneTitle", "()Ljava/lang/CharSequence;", "GetGetPaneTitleHandler")]
public virtual ICharSequence get_PaneTitleFormatted();
    [RegisterAttribute("setPaneTitle", "(Ljava/lang/CharSequence;)V", "GetSetPaneTitle_Ljava_lang_CharSequence_Handler")]
public virtual void set_PaneTitleFormatted(ICharSequence value);
    public string get_PaneTitle();
    public void set_PaneTitle(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParent", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetParentHandler")]
public virtual AccessibilityNodeInfoCompat get_Parent();
    [NullableContextAttribute("1")]
private static Delegate GetIsPasswordHandler();
    private static bool n_IsPassword(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetPassword_ZHandler();
    private static void n_SetPassword_Z(IntPtr jnienv, IntPtr native__this, bool password);
    [RegisterAttribute("isPassword", "()Z", "GetIsPasswordHandler")]
public virtual bool get_Password();
    [RegisterAttribute("setPassword", "(Z)V", "GetSetPassword_ZHandler")]
public virtual void set_Password(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetRangeInfoHandler();
    private static IntPtr n_GetRangeInfo(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRangeInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_Handler();
    private static void n_SetRangeInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_rangeInfo);
    [RegisterAttribute("getRangeInfo", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$RangeInfoCompat;", "GetGetRangeInfoHandler")]
public virtual RangeInfoCompat get_RangeInfo();
    [RegisterAttribute("setRangeInfo", "(Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$RangeInfoCompat;)V", "GetSetRangeInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_RangeInfoCompat_Handler")]
public virtual void set_RangeInfo(RangeInfoCompat value);
    [NullableContextAttribute("1")]
private static Delegate GetGetRoleDescriptionHandler();
    private static IntPtr n_GetRoleDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRoleDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetRoleDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_roleDescription);
    [RegisterAttribute("getRoleDescription", "()Ljava/lang/CharSequence;", "GetGetRoleDescriptionHandler")]
public virtual ICharSequence get_RoleDescriptionFormatted();
    [RegisterAttribute("setRoleDescription", "(Ljava/lang/CharSequence;)V", "GetSetRoleDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_RoleDescriptionFormatted(ICharSequence value);
    public string get_RoleDescription();
    public void set_RoleDescription(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsScreenReaderFocusableHandler();
    private static bool n_IsScreenReaderFocusable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetScreenReaderFocusable_ZHandler();
    private static void n_SetScreenReaderFocusable_Z(IntPtr jnienv, IntPtr native__this, bool screenReaderFocusable);
    [RegisterAttribute("isScreenReaderFocusable", "()Z", "GetIsScreenReaderFocusableHandler")]
public virtual bool get_ScreenReaderFocusable();
    [RegisterAttribute("setScreenReaderFocusable", "(Z)V", "GetSetScreenReaderFocusable_ZHandler")]
public virtual void set_ScreenReaderFocusable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsScrollableHandler();
    private static bool n_IsScrollable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetScrollable_ZHandler();
    private static void n_SetScrollable_Z(IntPtr jnienv, IntPtr native__this, bool scrollable);
    [RegisterAttribute("isScrollable", "()Z", "GetIsScrollableHandler")]
public virtual bool get_Scrollable();
    [RegisterAttribute("setScrollable", "(Z)V", "GetSetScrollable_ZHandler")]
public virtual void set_Scrollable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsSelectedHandler();
    private static bool n_IsSelected(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSelected_ZHandler();
    private static void n_SetSelected_Z(IntPtr jnienv, IntPtr native__this, bool selected);
    [RegisterAttribute("isSelected", "()Z", "GetIsSelectedHandler")]
public virtual bool get_Selected();
    [RegisterAttribute("setSelected", "(Z)V", "GetSetSelected_ZHandler")]
public virtual void set_Selected(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsShowingHintTextHandler();
    private static bool n_IsShowingHintText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShowingHintText_ZHandler();
    private static void n_SetShowingHintText_Z(IntPtr jnienv, IntPtr native__this, bool showingHintText);
    [RegisterAttribute("isShowingHintText", "()Z", "GetIsShowingHintTextHandler")]
public virtual bool get_ShowingHintText();
    [RegisterAttribute("setShowingHintText", "(Z)V", "GetSetShowingHintText_ZHandler")]
public virtual void set_ShowingHintText(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetStateDescriptionHandler();
    private static IntPtr n_GetStateDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetStateDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetStateDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_stateDescription);
    [RegisterAttribute("getStateDescription", "()Ljava/lang/CharSequence;", "GetGetStateDescriptionHandler")]
public virtual ICharSequence get_StateDescriptionFormatted();
    [RegisterAttribute("setStateDescription", "(Ljava/lang/CharSequence;)V", "GetSetStateDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_StateDescriptionFormatted(ICharSequence value);
    public string get_StateDescription();
    public void set_StateDescription(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTextHandler();
    private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetText_Ljava_lang_CharSequence_Handler();
    private static void n_SetText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_text);
    [RegisterAttribute("getText", "()Ljava/lang/CharSequence;", "GetGetTextHandler")]
public virtual ICharSequence get_TextFormatted();
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")]
public virtual void set_TextFormatted(ICharSequence value);
    public string get_Text();
    public void set_Text(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsTextEntryKeyHandler();
    private static bool n_IsTextEntryKey(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetTextEntryKey_ZHandler();
    private static void n_SetTextEntryKey_Z(IntPtr jnienv, IntPtr native__this, bool isTextEntryKey);
    [RegisterAttribute("isTextEntryKey", "()Z", "GetIsTextEntryKeyHandler")]
public virtual bool get_TextEntryKey();
    [RegisterAttribute("setTextEntryKey", "(Z)V", "GetSetTextEntryKey_ZHandler")]
public virtual void set_TextEntryKey(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetIsTextSelectableHandler();
    private static bool n_IsTextSelectable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetTextSelectable_ZHandler();
    private static void n_SetTextSelectable_Z(IntPtr jnienv, IntPtr native__this, bool selectableText);
    [RegisterAttribute("isTextSelectable", "()Z", "GetIsTextSelectableHandler")]
public virtual bool get_TextSelectable();
    [RegisterAttribute("setTextSelectable", "(Z)V", "GetSetTextSelectable_ZHandler")]
public virtual void set_TextSelectable(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTextSelectionEndHandler();
    private static int n_GetTextSelectionEnd(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTextSelectionEnd", "()I", "GetGetTextSelectionEndHandler")]
public virtual int get_TextSelectionEnd();
    [NullableContextAttribute("1")]
private static Delegate GetGetTextSelectionStartHandler();
    private static int n_GetTextSelectionStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTextSelectionStart", "()I", "GetGetTextSelectionStartHandler")]
public virtual int get_TextSelectionStart();
    [NullableContextAttribute("1")]
private static Delegate GetGetTooltipTextHandler();
    private static IntPtr n_GetTooltipText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetTooltipText_Ljava_lang_CharSequence_Handler();
    private static void n_SetTooltipText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_tooltipText);
    [RegisterAttribute("getTooltipText", "()Ljava/lang/CharSequence;", "GetGetTooltipTextHandler")]
public virtual ICharSequence get_TooltipTextFormatted();
    [RegisterAttribute("setTooltipText", "(Ljava/lang/CharSequence;)V", "GetSetTooltipText_Ljava_lang_CharSequence_Handler")]
public virtual void set_TooltipTextFormatted(ICharSequence value);
    public string get_TooltipText();
    public void set_TooltipText(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTouchDelegateInfoHandler();
    private static IntPtr n_GetTouchDelegateInfo(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetTouchDelegateInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_TouchDelegateInfoCompat_Handler();
    private static void n_SetTouchDelegateInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_TouchDelegateInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_delegatedInfo);
    [RegisterAttribute("getTouchDelegateInfo", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$TouchDelegateInfoCompat;", "GetGetTouchDelegateInfoHandler")]
public virtual TouchDelegateInfoCompat get_TouchDelegateInfo();
    [RegisterAttribute("setTouchDelegateInfo", "(Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$TouchDelegateInfoCompat;)V", "GetSetTouchDelegateInfo_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_TouchDelegateInfoCompat_Handler")]
public virtual void set_TouchDelegateInfo(TouchDelegateInfoCompat value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTraversalAfterHandler();
    private static IntPtr n_GetTraversalAfter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTraversalAfter", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetTraversalAfterHandler")]
public virtual AccessibilityNodeInfoCompat get_TraversalAfter();
    [NullableContextAttribute("1")]
private static Delegate GetGetTraversalBeforeHandler();
    private static IntPtr n_GetTraversalBefore(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTraversalBefore", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetTraversalBeforeHandler")]
public virtual AccessibilityNodeInfoCompat get_TraversalBefore();
    [NullableContextAttribute("1")]
private static Delegate GetGetUniqueIdHandler();
    private static IntPtr n_GetUniqueId(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetUniqueId_Ljava_lang_String_Handler();
    private static void n_SetUniqueId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_uniqueId);
    [RegisterAttribute("getUniqueId", "()Ljava/lang/String;", "GetGetUniqueIdHandler")]
public virtual string get_UniqueId();
    [RegisterAttribute("setUniqueId", "(Ljava/lang/String;)V", "GetSetUniqueId_Ljava_lang_String_Handler")]
public virtual void set_UniqueId(string value);
    [NullableContextAttribute("1")]
private static Delegate GetGetViewIdResourceNameHandler();
    private static IntPtr n_GetViewIdResourceName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetViewIdResourceName_Ljava_lang_String_Handler();
    private static void n_SetViewIdResourceName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewId);
    [RegisterAttribute("getViewIdResourceName", "()Ljava/lang/String;", "GetGetViewIdResourceNameHandler")]
public virtual string get_ViewIdResourceName();
    [RegisterAttribute("setViewIdResourceName", "(Ljava/lang/String;)V", "GetSetViewIdResourceName_Ljava_lang_String_Handler")]
public virtual void set_ViewIdResourceName(string value);
    [NullableContextAttribute("1")]
private static Delegate GetIsVisibleToUserHandler();
    private static bool n_IsVisibleToUser(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetVisibleToUser_ZHandler();
    private static void n_SetVisibleToUser_Z(IntPtr jnienv, IntPtr native__this, bool visibleToUser);
    [RegisterAttribute("isVisibleToUser", "()Z", "GetIsVisibleToUserHandler")]
public virtual bool get_VisibleToUser();
    [RegisterAttribute("setVisibleToUser", "(Z)V", "GetSetVisibleToUser_ZHandler")]
public virtual void set_VisibleToUser(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetWindowHandler();
    private static IntPtr n_GetWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindow", "()Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetWindowHandler")]
public virtual AccessibilityWindowInfoCompat get_Window();
    [NullableContextAttribute("1")]
private static Delegate GetGetWindowIdHandler();
    private static int n_GetWindowId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowId", "()I", "GetGetWindowIdHandler")]
public virtual int get_WindowId();
    [NullableContextAttribute("1")]
private static Delegate GetAddAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler();
    private static void n_AddAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_action);
    [RegisterAttribute("addAction", "(Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;)V", "GetAddAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler")]
public virtual void AddAction(AccessibilityActionCompat action);
    [NullableContextAttribute("1")]
private static Delegate GetAddAction_IHandler();
    private static void n_AddAction_I(IntPtr jnienv, IntPtr native__this, int action);
    [RegisterAttribute("addAction", "(I)V", "GetAddAction_IHandler")]
public virtual void AddAction(int action);
    [NullableContextAttribute("1")]
private static Delegate GetAddChild_Landroid_view_View_Handler();
    private static void n_AddChild_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("addChild", "(Landroid/view/View;)V", "GetAddChild_Landroid_view_View_Handler")]
public virtual void AddChild(View child);
    [NullableContextAttribute("1")]
private static Delegate GetAddChild_Landroid_view_View_IHandler();
    private static void n_AddChild_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("addChild", "(Landroid/view/View;I)V", "GetAddChild_Landroid_view_View_IHandler")]
public virtual void AddChild(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetAddSpansToExtras_Ljava_lang_CharSequence_Landroid_view_View_Handler();
    private static void n_AddSpansToExtras_Ljava_lang_CharSequence_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_text, IntPtr native_view);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("addSpansToExtras", "(Ljava/lang/CharSequence;Landroid/view/View;)V", "GetAddSpansToExtras_Ljava_lang_CharSequence_Landroid_view_View_Handler")]
public virtual void AddSpansToExtras(ICharSequence text, View view);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public void AddSpansToExtras(string text, View view);
    [NullableContextAttribute("1")]
private static Delegate GetCanOpenPopupHandler();
    private static bool n_CanOpenPopup(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("canOpenPopup", "()Z", "GetCanOpenPopupHandler")]
public virtual bool CanOpenPopup();
    [NullableContextAttribute("1")]
private static Delegate GetFindAccessibilityNodeInfosByText_Ljava_lang_String_Handler();
    private static IntPtr n_FindAccessibilityNodeInfosByText_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_text);
    [RegisterAttribute("findAccessibilityNodeInfosByText", "(Ljava/lang/String;)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_Handler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByText(string text);
    [NullableContextAttribute("1")]
private static Delegate GetFindAccessibilityNodeInfosByViewId_Ljava_lang_String_Handler();
    private static IntPtr n_FindAccessibilityNodeInfosByViewId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_viewId);
    [RegisterAttribute("findAccessibilityNodeInfosByViewId", "(Ljava/lang/String;)Ljava/util/List;", "GetFindAccessibilityNodeInfosByViewId_Ljava_lang_String_Handler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByViewId(string viewId);
    [NullableContextAttribute("1")]
private static Delegate GetFindFocus_IHandler();
    private static IntPtr n_FindFocus_I(IntPtr jnienv, IntPtr native__this, int focus);
    [RegisterAttribute("findFocus", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetFindFocus_IHandler")]
public virtual AccessibilityNodeInfoCompat FindFocus(int focus);
    [NullableContextAttribute("1")]
private static Delegate GetFocusSearch_IHandler();
    private static IntPtr n_FocusSearch_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("focusSearch", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetFocusSearch_IHandler")]
public virtual AccessibilityNodeInfoCompat FocusSearch(int direction);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetBoundsInParent_Landroid_graphics_Rect_Handler();
    [ObsoleteAttribute]
private static void n_GetBoundsInParent_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getBoundsInParent", "(Landroid/graphics/Rect;)V", "GetGetBoundsInParent_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInParent(Rect outBounds);
    [NullableContextAttribute("1")]
private static Delegate GetGetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [RegisterAttribute("getBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetGetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInScreen(Rect outBounds);
    [NullableContextAttribute("1")]
private static Delegate GetGetBoundsInWindow_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInWindow_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [NullableContextAttribute("1")]
[RegisterAttribute("getBoundsInWindow", "(Landroid/graphics/Rect;)V", "GetGetBoundsInWindow_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInWindow(Rect outBounds);
    [NullableContextAttribute("1")]
private static Delegate GetGetChild_IHandler();
    private static IntPtr n_GetChild_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getChild", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetChild_IHandler")]
public virtual AccessibilityNodeInfoCompat GetChild(int index);
    [NullableContextAttribute("1")]
private static Delegate GetGetChild_IIHandler();
    private static IntPtr n_GetChild_II(IntPtr jnienv, IntPtr native__this, int index, int prefetchingStrategy);
    [RegisterAttribute("getChild", "(II)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetChild_IIHandler")]
public virtual AccessibilityNodeInfoCompat GetChild(int index, int prefetchingStrategy);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getClickableSpans", "(Ljava/lang/CharSequence;)[Landroid/text/style/ClickableSpan;", "")]
public static ClickableSpan[] GetClickableSpans(ICharSequence text);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static ClickableSpan[] GetClickableSpans(string text);
    [NullableContextAttribute("1")]
private static Delegate GetGetParent_IHandler();
    private static IntPtr n_GetParent_I(IntPtr jnienv, IntPtr native__this, int prefetchingStrategy);
    [RegisterAttribute("getParent", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetParent_IHandler")]
public virtual AccessibilityNodeInfoCompat GetParent(int prefetchingStrategy);
    [RegisterAttribute("obtain", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain();
    [RegisterAttribute("obtain", "(Landroid/view/View;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(View source);
    [RegisterAttribute("obtain", "(Landroid/view/View;I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(View root, int virtualDescendantId);
    [RegisterAttribute("obtain", "(Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Obtain(AccessibilityNodeInfoCompat info);
    [NullableContextAttribute("1")]
private static Delegate GetPerformAction_IHandler();
    private static bool n_PerformAction_I(IntPtr jnienv, IntPtr native__this, int action);
    [RegisterAttribute("performAction", "(I)Z", "GetPerformAction_IHandler")]
public virtual bool PerformAction(int action);
    [NullableContextAttribute("1")]
private static Delegate GetPerformAction_ILandroid_os_Bundle_Handler();
    private static bool n_PerformAction_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int action, IntPtr native_arguments);
    [RegisterAttribute("performAction", "(ILandroid/os/Bundle;)Z", "GetPerformAction_ILandroid_os_Bundle_Handler")]
public virtual bool PerformAction(int action, Bundle arguments);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetRecycleHandler();
    [ObsoleteAttribute]
private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    [NullableContextAttribute("1")]
private static Delegate GetRefreshHandler();
    private static bool n_Refresh(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refresh", "()Z", "GetRefreshHandler")]
public virtual bool Refresh();
    [NullableContextAttribute("1")]
private static Delegate GetRemoveAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler();
    private static bool n_RemoveAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_action);
    [RegisterAttribute("removeAction", "(Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;)Z", "GetRemoveAction_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_AccessibilityActionCompat_Handler")]
public virtual bool RemoveAction(AccessibilityActionCompat action);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveChild_Landroid_view_View_Handler();
    private static bool n_RemoveChild_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("removeChild", "(Landroid/view/View;)Z", "GetRemoveChild_Landroid_view_View_Handler")]
public virtual bool RemoveChild(View child);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveChild_Landroid_view_View_IHandler();
    private static bool n_RemoveChild_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("removeChild", "(Landroid/view/View;I)Z", "GetRemoveChild_Landroid_view_View_IHandler")]
public virtual bool RemoveChild(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetBoundsInParent_Landroid_graphics_Rect_Handler();
    [ObsoleteAttribute]
private static void n_SetBoundsInParent_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setBoundsInParent", "(Landroid/graphics/Rect;)V", "GetSetBoundsInParent_Landroid_graphics_Rect_Handler")]
public virtual void SetBoundsInParent(Rect bounds);
    [NullableContextAttribute("1")]
private static Delegate GetSetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_SetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [RegisterAttribute("setBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetSetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void SetBoundsInScreen(Rect bounds);
    [NullableContextAttribute("1")]
private static Delegate GetSetBoundsInWindow_Landroid_graphics_Rect_Handler();
    private static void n_SetBoundsInWindow_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_bounds);
    [NullableContextAttribute("1")]
[RegisterAttribute("setBoundsInWindow", "(Landroid/graphics/Rect;)V", "GetSetBoundsInWindow_Landroid_graphics_Rect_Handler")]
public virtual void SetBoundsInWindow(Rect bounds);
    [NullableContextAttribute("1")]
private static Delegate GetSetCanOpenPopup_ZHandler();
    private static void n_SetCanOpenPopup_Z(IntPtr jnienv, IntPtr native__this, bool opensPopup);
    [RegisterAttribute("setCanOpenPopup", "(Z)V", "GetSetCanOpenPopup_ZHandler")]
public virtual void SetCanOpenPopup(bool opensPopup);
    [NullableContextAttribute("1")]
private static Delegate GetSetCollectionInfo_Ljava_lang_Object_Handler();
    private static void n_SetCollectionInfo_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_collectionInfo);
    [RegisterAttribute("setCollectionInfo", "(Ljava/lang/Object;)V", "GetSetCollectionInfo_Ljava_lang_Object_Handler")]
public virtual void SetCollectionInfo(Object collectionInfo);
    [NullableContextAttribute("1")]
private static Delegate GetSetCollectionItemInfo_Ljava_lang_Object_Handler();
    private static void n_SetCollectionItemInfo_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_collectionItemInfo);
    [RegisterAttribute("setCollectionItemInfo", "(Ljava/lang/Object;)V", "GetSetCollectionItemInfo_Ljava_lang_Object_Handler")]
public virtual void SetCollectionItemInfo(Object collectionItemInfo);
    [NullableContextAttribute("1")]
private static Delegate GetSetLabelFor_Landroid_view_View_Handler();
    private static void n_SetLabelFor_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_labeled);
    [RegisterAttribute("setLabelFor", "(Landroid/view/View;)V", "GetSetLabelFor_Landroid_view_View_Handler")]
public virtual void SetLabelFor(View labeled);
    [NullableContextAttribute("1")]
private static Delegate GetSetLabelFor_Landroid_view_View_IHandler();
    private static void n_SetLabelFor_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setLabelFor", "(Landroid/view/View;I)V", "GetSetLabelFor_Landroid_view_View_IHandler")]
public virtual void SetLabelFor(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetSetLabeledBy_Landroid_view_View_Handler();
    private static void n_SetLabeledBy_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_label);
    [RegisterAttribute("setLabeledBy", "(Landroid/view/View;)V", "GetSetLabeledBy_Landroid_view_View_Handler")]
public virtual void SetLabeledBy(View label);
    [NullableContextAttribute("1")]
private static Delegate GetSetLabeledBy_Landroid_view_View_IHandler();
    private static void n_SetLabeledBy_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setLabeledBy", "(Landroid/view/View;I)V", "GetSetLabeledBy_Landroid_view_View_IHandler")]
public virtual void SetLabeledBy(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetSetParent_Landroid_view_View_Handler();
    private static void n_SetParent_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent);
    [RegisterAttribute("setParent", "(Landroid/view/View;)V", "GetSetParent_Landroid_view_View_Handler")]
public virtual void SetParent(View parent);
    [NullableContextAttribute("1")]
private static Delegate GetSetParent_Landroid_view_View_IHandler();
    private static void n_SetParent_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setParent", "(Landroid/view/View;I)V", "GetSetParent_Landroid_view_View_IHandler")]
public virtual void SetParent(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetSetQueryFromAppProcessEnabled_Landroid_view_View_ZHandler();
    private static void n_SetQueryFromAppProcessEnabled_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_view, bool enabled);
    [NullableContextAttribute("1")]
[RegisterAttribute("setQueryFromAppProcessEnabled", "(Landroid/view/View;Z)V", "GetSetQueryFromAppProcessEnabled_Landroid_view_View_ZHandler")]
public virtual void SetQueryFromAppProcessEnabled(View view, bool enabled);
    [NullableContextAttribute("1")]
private static Delegate GetSetRequestInitialAccessibilityFocus_ZHandler();
    private static void n_SetRequestInitialAccessibilityFocus_Z(IntPtr jnienv, IntPtr native__this, bool requestInitialAccessibilityFocus);
    [RegisterAttribute("setRequestInitialAccessibilityFocus", "(Z)V", "GetSetRequestInitialAccessibilityFocus_ZHandler")]
public virtual void SetRequestInitialAccessibilityFocus(bool requestInitialAccessibilityFocus);
    [NullableContextAttribute("1")]
private static Delegate GetSetSource_Landroid_view_View_Handler();
    private static void n_SetSource_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_source);
    [RegisterAttribute("setSource", "(Landroid/view/View;)V", "GetSetSource_Landroid_view_View_Handler")]
public virtual void SetSource(View source);
    [NullableContextAttribute("1")]
private static Delegate GetSetSource_Landroid_view_View_IHandler();
    private static void n_SetSource_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setSource", "(Landroid/view/View;I)V", "GetSetSource_Landroid_view_View_IHandler")]
public virtual void SetSource(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetSetTextSelection_IIHandler();
    private static void n_SetTextSelection_II(IntPtr jnienv, IntPtr native__this, int start, int end);
    [RegisterAttribute("setTextSelection", "(II)V", "GetSetTextSelection_IIHandler")]
public virtual void SetTextSelection(int start, int end);
    [NullableContextAttribute("1")]
private static Delegate GetSetTraversalAfter_Landroid_view_View_Handler();
    private static void n_SetTraversalAfter_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("setTraversalAfter", "(Landroid/view/View;)V", "GetSetTraversalAfter_Landroid_view_View_Handler")]
public virtual void SetTraversalAfter(View view);
    [NullableContextAttribute("1")]
private static Delegate GetSetTraversalAfter_Landroid_view_View_IHandler();
    private static void n_SetTraversalAfter_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setTraversalAfter", "(Landroid/view/View;I)V", "GetSetTraversalAfter_Landroid_view_View_IHandler")]
public virtual void SetTraversalAfter(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetSetTraversalBefore_Landroid_view_View_Handler();
    private static void n_SetTraversalBefore_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("setTraversalBefore", "(Landroid/view/View;)V", "GetSetTraversalBefore_Landroid_view_View_Handler")]
public virtual void SetTraversalBefore(View view);
    [NullableContextAttribute("1")]
private static Delegate GetSetTraversalBefore_Landroid_view_View_IHandler();
    private static void n_SetTraversalBefore_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [RegisterAttribute("setTraversalBefore", "(Landroid/view/View;I)V", "GetSetTraversalBefore_Landroid_view_View_IHandler")]
public virtual void SetTraversalBefore(View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
private static Delegate GetUnwrapHandler();
    private static IntPtr n_Unwrap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("unwrap", "()Landroid/view/accessibility/AccessibilityNodeInfo;", "GetUnwrapHandler")]
public virtual AccessibilityNodeInfo Unwrap();
    [NullableContextAttribute("1")]
[RegisterAttribute("wrap", "(Landroid/view/accessibility/AccessibilityNodeInfo;)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "")]
public static AccessibilityNodeInfoCompat Wrap(AccessibilityNodeInfo info);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityNodeProviderCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityNodeProviderCompat : Object {
    [RegisterAttribute("HOST_VIEW_ID")]
public static int HostViewId;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getProvider;
    [NullableAttribute("2")]
private static Delegate cb_addExtraDataToAccessibilityNodeInfo_ILandroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Ljava_lang_String_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_createAccessibilityNodeInfo_I;
    [NullableAttribute("2")]
private static Delegate cb_findAccessibilityNodeInfosByText_Ljava_lang_String_I;
    [NullableAttribute("2")]
private static Delegate cb_findFocus_I;
    [NullableAttribute("2")]
private static Delegate cb_performAction_IILandroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Provider { get; }
    protected AccessibilityNodeProviderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public AccessibilityNodeProviderCompat(Object provider);
    private static AccessibilityNodeProviderCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetProviderHandler();
    private static IntPtr n_GetProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getProvider", "()Ljava/lang/Object;", "GetGetProviderHandler")]
public virtual Object get_Provider();
    private static Delegate GetAddExtraDataToAccessibilityNodeInfo_ILandroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_AddExtraDataToAccessibilityNodeInfo_ILandroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int virtualViewId, IntPtr native_info, IntPtr native_extraDataKey, IntPtr native_arguments);
    [RegisterAttribute("addExtraDataToAccessibilityNodeInfo", "(ILandroidx/core/view/accessibility/AccessibilityNodeInfoCompat;Ljava/lang/String;Landroid/os/Bundle;)V", "GetAddExtraDataToAccessibilityNodeInfo_ILandroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void AddExtraDataToAccessibilityNodeInfo(int virtualViewId, AccessibilityNodeInfoCompat info, string extraDataKey, Bundle arguments);
    private static Delegate GetCreateAccessibilityNodeInfo_IHandler();
    private static IntPtr n_CreateAccessibilityNodeInfo_I(IntPtr jnienv, IntPtr native__this, int virtualViewId);
    [NullableContextAttribute("2")]
[RegisterAttribute("createAccessibilityNodeInfo", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetCreateAccessibilityNodeInfo_IHandler")]
public virtual AccessibilityNodeInfoCompat CreateAccessibilityNodeInfo(int virtualViewId);
    private static Delegate GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler();
    private static IntPtr n_FindAccessibilityNodeInfosByText_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_text, int virtualViewId);
    [RegisterAttribute("findAccessibilityNodeInfosByText", "(Ljava/lang/String;I)Ljava/util/List;", "GetFindAccessibilityNodeInfosByText_Ljava_lang_String_IHandler")]
public virtual IList`1<AccessibilityNodeInfoCompat> FindAccessibilityNodeInfosByText(string text, int virtualViewId);
    private static Delegate GetFindFocus_IHandler();
    private static IntPtr n_FindFocus_I(IntPtr jnienv, IntPtr native__this, int focus);
    [NullableContextAttribute("2")]
[RegisterAttribute("findFocus", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetFindFocus_IHandler")]
public virtual AccessibilityNodeInfoCompat FindFocus(int focus);
    private static Delegate GetPerformAction_IILandroid_os_Bundle_Handler();
    private static bool n_PerformAction_IILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, int virtualViewId, int action, IntPtr native_arguments);
    [NullableContextAttribute("2")]
[RegisterAttribute("performAction", "(IILandroid/os/Bundle;)Z", "GetPerformAction_IILandroid_os_Bundle_Handler")]
public virtual bool PerformAction(int virtualViewId, int action, Bundle arguments);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityRecordCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityRecordCompat : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getAddedCount;
    private static Delegate cb_setAddedCount_I;
    private static Delegate cb_getBeforeText;
    private static Delegate cb_setBeforeText_Ljava_lang_CharSequence_;
    private static Delegate cb_isChecked;
    private static Delegate cb_setChecked_Z;
    private static Delegate cb_getClassName;
    private static Delegate cb_setClassName_Ljava_lang_CharSequence_;
    private static Delegate cb_getContentDescription;
    private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    private static Delegate cb_getCurrentItemIndex;
    private static Delegate cb_setCurrentItemIndex_I;
    private static Delegate cb_isEnabled;
    private static Delegate cb_setEnabled_Z;
    private static Delegate cb_getFromIndex;
    private static Delegate cb_setFromIndex_I;
    private static Delegate cb_isFullScreen;
    private static Delegate cb_setFullScreen_Z;
    private static Delegate cb_getImpl;
    private static Delegate cb_getItemCount;
    private static Delegate cb_setItemCount_I;
    private static Delegate cb_getMaxScrollX;
    private static Delegate cb_setMaxScrollX_I;
    private static Delegate cb_getMaxScrollY;
    private static Delegate cb_setMaxScrollY_I;
    private static Delegate cb_getParcelableData;
    private static Delegate cb_setParcelableData_Landroid_os_Parcelable_;
    private static Delegate cb_isPassword;
    private static Delegate cb_setPassword_Z;
    private static Delegate cb_getRemovedCount;
    private static Delegate cb_setRemovedCount_I;
    private static Delegate cb_getScrollX;
    private static Delegate cb_setScrollX_I;
    private static Delegate cb_getScrollY;
    private static Delegate cb_setScrollY_I;
    private static Delegate cb_isScrollable;
    private static Delegate cb_setScrollable_Z;
    private static Delegate cb_getSource;
    private static Delegate cb_getText;
    private static Delegate cb_getToIndex;
    private static Delegate cb_setToIndex_I;
    private static Delegate cb_getWindowId;
    private static Delegate cb_recycle;
    private static Delegate cb_setSource_Landroid_view_View_;
    private static Delegate cb_setSource_Landroid_view_View_I;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public int AddedCount { get; public set; }
    [ObsoleteAttribute("deprecated")]
public ICharSequence BeforeTextFormatted { get; public set; }
    public string BeforeText { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool Checked { get; public set; }
    [ObsoleteAttribute("deprecated")]
public ICharSequence ClassNameFormatted { get; public set; }
    public string ClassName { get; public set; }
    [ObsoleteAttribute("deprecated")]
public ICharSequence ContentDescriptionFormatted { get; public set; }
    public string ContentDescription { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int CurrentItemIndex { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool Enabled { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int FromIndex { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool FullScreen { get; public set; }
    [ObsoleteAttribute("deprecated")]
public Object Impl { get; }
    [ObsoleteAttribute("deprecated")]
public int ItemCount { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int MaxScrollX { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int MaxScrollY { get; public set; }
    [ObsoleteAttribute("deprecated")]
public IParcelable ParcelableData { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool Password { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int RemovedCount { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int ScrollX { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int ScrollY { get; public set; }
    [ObsoleteAttribute("deprecated")]
public bool Scrollable { get; public set; }
    [ObsoleteAttribute("deprecated")]
public AccessibilityNodeInfoCompat Source { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
[ObsoleteAttribute("deprecated")]
public IList`1<ICharSequence> Text { get; }
    [ObsoleteAttribute("deprecated")]
public int ToIndex { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int WindowId { get; }
    protected AccessibilityRecordCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
[ObsoleteAttribute("deprecated")]
public AccessibilityRecordCompat(Object record);
    private static AccessibilityRecordCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetAddedCountHandler();
    [ObsoleteAttribute]
private static int n_GetAddedCount(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetAddedCount_IHandler();
    [ObsoleteAttribute]
private static void n_SetAddedCount_I(IntPtr jnienv, IntPtr native__this, int addedCount);
    [RegisterAttribute("getAddedCount", "()I", "GetGetAddedCountHandler")]
public virtual int get_AddedCount();
    [RegisterAttribute("setAddedCount", "(I)V", "GetSetAddedCount_IHandler")]
public virtual void set_AddedCount(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetBeforeTextHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetBeforeText(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetBeforeText_Ljava_lang_CharSequence_Handler();
    [ObsoleteAttribute]
private static void n_SetBeforeText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_beforeText);
    [RegisterAttribute("getBeforeText", "()Ljava/lang/CharSequence;", "GetGetBeforeTextHandler")]
public virtual ICharSequence get_BeforeTextFormatted();
    [RegisterAttribute("setBeforeText", "(Ljava/lang/CharSequence;)V", "GetSetBeforeText_Ljava_lang_CharSequence_Handler")]
public virtual void set_BeforeTextFormatted(ICharSequence value);
    public string get_BeforeText();
    public void set_BeforeText(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetIsCheckedHandler();
    [ObsoleteAttribute]
private static bool n_IsChecked(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetChecked_ZHandler();
    [ObsoleteAttribute]
private static void n_SetChecked_Z(IntPtr jnienv, IntPtr native__this, bool isChecked);
    [RegisterAttribute("isChecked", "()Z", "GetIsCheckedHandler")]
public virtual bool get_Checked();
    [RegisterAttribute("setChecked", "(Z)V", "GetSetChecked_ZHandler")]
public virtual void set_Checked(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetClassNameHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetClassName(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetClassName_Ljava_lang_CharSequence_Handler();
    [ObsoleteAttribute]
private static void n_SetClassName_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_className);
    [RegisterAttribute("getClassName", "()Ljava/lang/CharSequence;", "GetGetClassNameHandler")]
public virtual ICharSequence get_ClassNameFormatted();
    [RegisterAttribute("setClassName", "(Ljava/lang/CharSequence;)V", "GetSetClassName_Ljava_lang_CharSequence_Handler")]
public virtual void set_ClassNameFormatted(ICharSequence value);
    public string get_ClassName();
    public void set_ClassName(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetContentDescriptionHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetContentDescription(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    [ObsoleteAttribute]
private static void n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentDescription);
    [RegisterAttribute("getContentDescription", "()Ljava/lang/CharSequence;", "GetGetContentDescriptionHandler")]
public virtual ICharSequence get_ContentDescriptionFormatted();
    [RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void set_ContentDescriptionFormatted(ICharSequence value);
    public string get_ContentDescription();
    public void set_ContentDescription(string value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetCurrentItemIndexHandler();
    [ObsoleteAttribute]
private static int n_GetCurrentItemIndex(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetCurrentItemIndex_IHandler();
    [ObsoleteAttribute]
private static void n_SetCurrentItemIndex_I(IntPtr jnienv, IntPtr native__this, int currentItemIndex);
    [RegisterAttribute("getCurrentItemIndex", "()I", "GetGetCurrentItemIndexHandler")]
public virtual int get_CurrentItemIndex();
    [RegisterAttribute("setCurrentItemIndex", "(I)V", "GetSetCurrentItemIndex_IHandler")]
public virtual void set_CurrentItemIndex(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetIsEnabledHandler();
    [ObsoleteAttribute]
private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetEnabled_ZHandler();
    [ObsoleteAttribute]
private static void n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool isEnabled);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "GetSetEnabled_ZHandler")]
public virtual void set_Enabled(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetFromIndexHandler();
    [ObsoleteAttribute]
private static int n_GetFromIndex(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetFromIndex_IHandler();
    [ObsoleteAttribute]
private static void n_SetFromIndex_I(IntPtr jnienv, IntPtr native__this, int fromIndex);
    [RegisterAttribute("getFromIndex", "()I", "GetGetFromIndexHandler")]
public virtual int get_FromIndex();
    [RegisterAttribute("setFromIndex", "(I)V", "GetSetFromIndex_IHandler")]
public virtual void set_FromIndex(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetIsFullScreenHandler();
    [ObsoleteAttribute]
private static bool n_IsFullScreen(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetFullScreen_ZHandler();
    [ObsoleteAttribute]
private static void n_SetFullScreen_Z(IntPtr jnienv, IntPtr native__this, bool isFullScreen);
    [RegisterAttribute("isFullScreen", "()Z", "GetIsFullScreenHandler")]
public virtual bool get_FullScreen();
    [RegisterAttribute("setFullScreen", "(Z)V", "GetSetFullScreen_ZHandler")]
public virtual void set_FullScreen(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetImplHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetImpl(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImpl", "()Ljava/lang/Object;", "GetGetImplHandler")]
public virtual Object get_Impl();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetItemCountHandler();
    [ObsoleteAttribute]
private static int n_GetItemCount(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetItemCount_IHandler();
    [ObsoleteAttribute]
private static void n_SetItemCount_I(IntPtr jnienv, IntPtr native__this, int itemCount);
    [RegisterAttribute("getItemCount", "()I", "GetGetItemCountHandler")]
public virtual int get_ItemCount();
    [RegisterAttribute("setItemCount", "(I)V", "GetSetItemCount_IHandler")]
public virtual void set_ItemCount(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetMaxScrollXHandler();
    [ObsoleteAttribute]
private static int n_GetMaxScrollX(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetMaxScrollX_IHandler();
    [ObsoleteAttribute]
private static void n_SetMaxScrollX_I(IntPtr jnienv, IntPtr native__this, int maxScrollX);
    [RegisterAttribute("getMaxScrollX", "()I", "GetGetMaxScrollXHandler")]
public virtual int get_MaxScrollX();
    [RegisterAttribute("setMaxScrollX", "(I)V", "GetSetMaxScrollX_IHandler")]
public virtual void set_MaxScrollX(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetMaxScrollYHandler();
    [ObsoleteAttribute]
private static int n_GetMaxScrollY(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetMaxScrollY_IHandler();
    [ObsoleteAttribute]
private static void n_SetMaxScrollY_I(IntPtr jnienv, IntPtr native__this, int maxScrollY);
    [RegisterAttribute("getMaxScrollY", "()I", "GetGetMaxScrollYHandler")]
public virtual int get_MaxScrollY();
    [RegisterAttribute("setMaxScrollY", "(I)V", "GetSetMaxScrollY_IHandler")]
public virtual void set_MaxScrollY(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetParcelableDataHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetParcelableData(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetParcelableData_Landroid_os_Parcelable_Handler();
    [ObsoleteAttribute]
private static void n_SetParcelableData_Landroid_os_Parcelable_(IntPtr jnienv, IntPtr native__this, IntPtr native_parcelableData);
    [RegisterAttribute("getParcelableData", "()Landroid/os/Parcelable;", "GetGetParcelableDataHandler")]
public virtual IParcelable get_ParcelableData();
    [RegisterAttribute("setParcelableData", "(Landroid/os/Parcelable;)V", "GetSetParcelableData_Landroid_os_Parcelable_Handler")]
public virtual void set_ParcelableData(IParcelable value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetIsPasswordHandler();
    [ObsoleteAttribute]
private static bool n_IsPassword(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetPassword_ZHandler();
    [ObsoleteAttribute]
private static void n_SetPassword_Z(IntPtr jnienv, IntPtr native__this, bool isPassword);
    [RegisterAttribute("isPassword", "()Z", "GetIsPasswordHandler")]
public virtual bool get_Password();
    [RegisterAttribute("setPassword", "(Z)V", "GetSetPassword_ZHandler")]
public virtual void set_Password(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetRemovedCountHandler();
    [ObsoleteAttribute]
private static int n_GetRemovedCount(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetRemovedCount_IHandler();
    [ObsoleteAttribute]
private static void n_SetRemovedCount_I(IntPtr jnienv, IntPtr native__this, int removedCount);
    [RegisterAttribute("getRemovedCount", "()I", "GetGetRemovedCountHandler")]
public virtual int get_RemovedCount();
    [RegisterAttribute("setRemovedCount", "(I)V", "GetSetRemovedCount_IHandler")]
public virtual void set_RemovedCount(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetScrollXHandler();
    [ObsoleteAttribute]
private static int n_GetScrollX(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetScrollX_IHandler();
    [ObsoleteAttribute]
private static void n_SetScrollX_I(IntPtr jnienv, IntPtr native__this, int scrollX);
    [RegisterAttribute("getScrollX", "()I", "GetGetScrollXHandler")]
public virtual int get_ScrollX();
    [RegisterAttribute("setScrollX", "(I)V", "GetSetScrollX_IHandler")]
public virtual void set_ScrollX(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetScrollYHandler();
    [ObsoleteAttribute]
private static int n_GetScrollY(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetScrollY_IHandler();
    [ObsoleteAttribute]
private static void n_SetScrollY_I(IntPtr jnienv, IntPtr native__this, int scrollY);
    [RegisterAttribute("getScrollY", "()I", "GetGetScrollYHandler")]
public virtual int get_ScrollY();
    [RegisterAttribute("setScrollY", "(I)V", "GetSetScrollY_IHandler")]
public virtual void set_ScrollY(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetIsScrollableHandler();
    [ObsoleteAttribute]
private static bool n_IsScrollable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetScrollable_ZHandler();
    [ObsoleteAttribute]
private static void n_SetScrollable_Z(IntPtr jnienv, IntPtr native__this, bool scrollable);
    [RegisterAttribute("isScrollable", "()Z", "GetIsScrollableHandler")]
public virtual bool get_Scrollable();
    [RegisterAttribute("setScrollable", "(Z)V", "GetSetScrollable_ZHandler")]
public virtual void set_Scrollable(bool value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetSourceHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetSource(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSource", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetSourceHandler")]
public virtual AccessibilityNodeInfoCompat get_Source();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetTextHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetText(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getText", "()Ljava/util/List;", "GetGetTextHandler")]
public virtual IList`1<ICharSequence> get_Text();
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetToIndexHandler();
    [ObsoleteAttribute]
private static int n_GetToIndex(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetToIndex_IHandler();
    [ObsoleteAttribute]
private static void n_SetToIndex_I(IntPtr jnienv, IntPtr native__this, int toIndex);
    [RegisterAttribute("getToIndex", "()I", "GetGetToIndexHandler")]
public virtual int get_ToIndex();
    [RegisterAttribute("setToIndex", "(I)V", "GetSetToIndex_IHandler")]
public virtual void set_ToIndex(int value);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetGetWindowIdHandler();
    [ObsoleteAttribute]
private static int n_GetWindowId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getWindowId", "()I", "GetGetWindowIdHandler")]
public virtual int get_WindowId();
    [NullableContextAttribute("1")]
[RegisterAttribute("getMaxScrollX", "(Landroid/view/accessibility/AccessibilityRecord;)I", "")]
public static int GetMaxScrollX(AccessibilityRecord record);
    [NullableContextAttribute("1")]
[RegisterAttribute("getMaxScrollY", "(Landroid/view/accessibility/AccessibilityRecord;)I", "")]
public static int GetMaxScrollY(AccessibilityRecord record);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("obtain", "()Landroidx/core/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat Obtain();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("obtain", "(Landroidx/core/view/accessibility/AccessibilityRecordCompat;)Landroidx/core/view/accessibility/AccessibilityRecordCompat;", "")]
public static AccessibilityRecordCompat Obtain(AccessibilityRecordCompat record);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetRecycleHandler();
    [ObsoleteAttribute]
private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    [NullableContextAttribute("1")]
[RegisterAttribute("setMaxScrollX", "(Landroid/view/accessibility/AccessibilityRecord;I)V", "")]
public static void SetMaxScrollX(AccessibilityRecord record, int maxScrollX);
    [NullableContextAttribute("1")]
[RegisterAttribute("setMaxScrollY", "(Landroid/view/accessibility/AccessibilityRecord;I)V", "")]
public static void SetMaxScrollY(AccessibilityRecord record, int maxScrollY);
    [NullableContextAttribute("1")]
[RegisterAttribute("setSource", "(Landroid/view/accessibility/AccessibilityRecord;Landroid/view/View;I)V", "")]
public static void SetSource(AccessibilityRecord record, View root, int virtualDescendantId);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetSource_Landroid_view_View_Handler();
    [ObsoleteAttribute]
private static void n_SetSource_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_source);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setSource", "(Landroid/view/View;)V", "GetSetSource_Landroid_view_View_Handler")]
public virtual void SetSource(View source);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetSetSource_Landroid_view_View_IHandler();
    [ObsoleteAttribute]
private static void n_SetSource_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_root, int virtualDescendantId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setSource", "(Landroid/view/View;I)V", "GetSetSource_Landroid_view_View_IHandler")]
public virtual void SetSource(View root, int virtualDescendantId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$CommandArguments")]
public abstract class AndroidX.Core.View.Accessibility.AccessibilityViewCommandCommandArguments : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_setBundle_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AccessibilityViewCommandCommandArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandCommandArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSetBundle_Landroid_os_Bundle_Handler();
    private static void n_SetBundle_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_bundle);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setBundle", "(Landroid/os/Bundle;)V", "GetSetBundle_Landroid_os_Bundle_Handler")]
public virtual void SetBundle(Bundle bundle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$CommandArguments")]
internal class AndroidX.Core.View.Accessibility.AccessibilityViewCommandCommandArgumentsInvoker : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AccessibilityViewCommandCommandArgumentsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AccessibilityViewCommandCommandArgumentsInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$MoveAtGranularityArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandMoveAtGranularityArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool ExtendSelection { get; }
    public int Granularity { get; }
    internal AccessibilityViewCommandMoveAtGranularityArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandMoveAtGranularityArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExtendSelection", "()Z", "")]
public bool get_ExtendSelection();
    [RegisterAttribute("getGranularity", "()I", "")]
public int get_Granularity();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$MoveHtmlArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandMoveHtmlArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public string HTMLElement { get; }
    internal AccessibilityViewCommandMoveHtmlArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandMoveHtmlArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getHTMLElement", "()Ljava/lang/String;", "")]
public string get_HTMLElement();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$MoveWindowArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandMoveWindowArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AccessibilityViewCommandMoveWindowArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandMoveWindowArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getX", "()I", "")]
public int GetX();
    [RegisterAttribute("getY", "()I", "")]
public int GetY();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$ScrollToPositionArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandScrollToPositionArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int Column { get; }
    public int Row { get; }
    internal AccessibilityViewCommandScrollToPositionArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandScrollToPositionArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getColumn", "()I", "")]
public int get_Column();
    [RegisterAttribute("getRow", "()I", "")]
public int get_Row();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$SetProgressArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandSetProgressArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Progress { get; }
    internal AccessibilityViewCommandSetProgressArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandSetProgressArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getProgress", "()F", "")]
public float get_Progress();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$SetSelectionArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandSetSelectionArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int End { get; }
    public int Start { get; }
    internal AccessibilityViewCommandSetSelectionArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandSetSelectionArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEnd", "()I", "")]
public int get_End();
    [RegisterAttribute("getStart", "()I", "")]
public int get_Start();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand$SetTextArguments")]
public class AndroidX.Core.View.Accessibility.AccessibilityViewCommandSetTextArguments : AccessibilityViewCommandCommandArguments {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public ICharSequence TextFormatted { get; }
    [NullableAttribute("2")]
public string Text { get; }
    internal AccessibilityViewCommandSetTextArguments(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityViewCommandSetTextArguments();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getText", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_TextFormatted();
    [NullableContextAttribute("2")]
public string get_Text();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityWindowInfoCompat")]
public class AndroidX.Core.View.Accessibility.AccessibilityWindowInfoCompat : Object {
    [RegisterAttribute("TYPE_ACCESSIBILITY_OVERLAY")]
public static int TypeAccessibilityOverlay;
    [RegisterAttribute("TYPE_APPLICATION")]
public static int TypeApplication;
    [RegisterAttribute("TYPE_INPUT_METHOD")]
public static int TypeInputMethod;
    [RegisterAttribute("TYPE_MAGNIFICATION_OVERLAY")]
public static int TypeMagnificationOverlay;
    [RegisterAttribute("TYPE_SPLIT_SCREEN_DIVIDER")]
public static int TypeSplitScreenDivider;
    [RegisterAttribute("TYPE_SYSTEM")]
public static int TypeSystem;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getAnchor;
    private static Delegate cb_getChildCount;
    private static Delegate cb_getDisplayId;
    private static Delegate cb_getId;
    private static Delegate cb_isAccessibilityFocused;
    private static Delegate cb_isActive;
    private static Delegate cb_isFocused;
    private static Delegate cb_isInPictureInPictureMode;
    private static Delegate cb_getLayer;
    private static Delegate cb_getLocales;
    private static Delegate cb_getParent;
    private static Delegate cb_getRoot;
    private static Delegate cb_getTitle;
    private static Delegate cb_getTransitionTimeMillis;
    private static Delegate cb_getType;
    private static Delegate cb_getBoundsInScreen_Landroid_graphics_Rect_;
    private static Delegate cb_getChild_I;
    private static Delegate cb_getRegionInScreen_Landroid_graphics_Region_;
    private static Delegate cb_getRoot_I;
    private static Delegate cb_recycle;
    private static Delegate cb_unwrap;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AccessibilityNodeInfoCompat Anchor { get; }
    public int ChildCount { get; }
    public int DisplayId { get; }
    public int Id { get; }
    public bool IsAccessibilityFocused { get; }
    public bool IsActive { get; }
    public bool IsFocused { get; }
    public bool IsInPictureInPictureMode { get; }
    public int Layer { get; }
    [NullableAttribute("1")]
public LocaleListCompat Locales { get; }
    public AccessibilityWindowInfoCompat Parent { get; }
    public AccessibilityNodeInfoCompat Root { get; }
    public ICharSequence TitleFormatted { get; }
    public string Title { get; }
    public long TransitionTimeMillis { get; }
    public int Type { get; }
    protected AccessibilityWindowInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AccessibilityWindowInfoCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetAnchorHandler();
    private static IntPtr n_GetAnchor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAnchor", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetAnchorHandler")]
public virtual AccessibilityNodeInfoCompat get_Anchor();
    [NullableContextAttribute("1")]
private static Delegate GetGetChildCountHandler();
    private static int n_GetChildCount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChildCount", "()I", "GetGetChildCountHandler")]
public virtual int get_ChildCount();
    [NullableContextAttribute("1")]
private static Delegate GetGetDisplayIdHandler();
    private static int n_GetDisplayId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDisplayId", "()I", "GetGetDisplayIdHandler")]
public virtual int get_DisplayId();
    [NullableContextAttribute("1")]
private static Delegate GetGetIdHandler();
    private static int n_GetId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getId", "()I", "GetGetIdHandler")]
public virtual int get_Id();
    [NullableContextAttribute("1")]
private static Delegate GetIsAccessibilityFocusedHandler();
    private static bool n_IsAccessibilityFocused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isAccessibilityFocused", "()Z", "GetIsAccessibilityFocusedHandler")]
public virtual bool get_IsAccessibilityFocused();
    [NullableContextAttribute("1")]
private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler")]
public virtual bool get_IsActive();
    [NullableContextAttribute("1")]
private static Delegate GetIsFocusedHandler();
    private static bool n_IsFocused(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isFocused", "()Z", "GetIsFocusedHandler")]
public virtual bool get_IsFocused();
    [NullableContextAttribute("1")]
private static Delegate GetIsInPictureInPictureModeHandler();
    private static bool n_IsInPictureInPictureMode(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isInPictureInPictureMode", "()Z", "GetIsInPictureInPictureModeHandler")]
public virtual bool get_IsInPictureInPictureMode();
    [NullableContextAttribute("1")]
private static Delegate GetGetLayerHandler();
    private static int n_GetLayer(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLayer", "()I", "GetGetLayerHandler")]
public virtual int get_Layer();
    [NullableContextAttribute("1")]
private static Delegate GetGetLocalesHandler();
    private static IntPtr n_GetLocales(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
[RegisterAttribute("getLocales", "()Landroidx/core/os/LocaleListCompat;", "GetGetLocalesHandler")]
public virtual LocaleListCompat get_Locales();
    [NullableContextAttribute("1")]
private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getParent", "()Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetParentHandler")]
public virtual AccessibilityWindowInfoCompat get_Parent();
    [NullableContextAttribute("1")]
private static Delegate GetGetRootHandler();
    private static IntPtr n_GetRoot(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRoot", "()Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetRootHandler")]
public virtual AccessibilityNodeInfoCompat get_Root();
    [NullableContextAttribute("1")]
private static Delegate GetGetTitleHandler();
    private static IntPtr n_GetTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "GetGetTitleHandler")]
public virtual ICharSequence get_TitleFormatted();
    public string get_Title();
    [NullableContextAttribute("1")]
private static Delegate GetGetTransitionTimeMillisHandler();
    private static long n_GetTransitionTimeMillis(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTransitionTimeMillis", "()J", "GetGetTransitionTimeMillisHandler")]
public virtual long get_TransitionTimeMillis();
    [NullableContextAttribute("1")]
private static Delegate GetGetTypeHandler();
    private static int n_GetType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getType", "()I", "GetGetTypeHandler")]
public virtual int get_Type();
    [NullableContextAttribute("1")]
private static Delegate GetGetBoundsInScreen_Landroid_graphics_Rect_Handler();
    private static void n_GetBoundsInScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_outBounds);
    [NullableContextAttribute("1")]
[RegisterAttribute("getBoundsInScreen", "(Landroid/graphics/Rect;)V", "GetGetBoundsInScreen_Landroid_graphics_Rect_Handler")]
public virtual void GetBoundsInScreen(Rect outBounds);
    [NullableContextAttribute("1")]
private static Delegate GetGetChild_IHandler();
    private static IntPtr n_GetChild_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("getChild", "(I)Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;", "GetGetChild_IHandler")]
public virtual AccessibilityWindowInfoCompat GetChild(int index);
    [NullableContextAttribute("1")]
private static Delegate GetGetRegionInScreen_Landroid_graphics_Region_Handler();
    private static void n_GetRegionInScreen_Landroid_graphics_Region_(IntPtr jnienv, IntPtr native__this, IntPtr native_outRegion);
    [NullableContextAttribute("1")]
[RegisterAttribute("getRegionInScreen", "(Landroid/graphics/Region;)V", "GetGetRegionInScreen_Landroid_graphics_Region_Handler")]
public virtual void GetRegionInScreen(Region outRegion);
    [NullableContextAttribute("1")]
private static Delegate GetGetRoot_IHandler();
    private static IntPtr n_GetRoot_I(IntPtr jnienv, IntPtr native__this, int prefetchingStrategy);
    [RegisterAttribute("getRoot", "(I)Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;", "GetGetRoot_IHandler")]
public virtual AccessibilityNodeInfoCompat GetRoot(int prefetchingStrategy);
    [RegisterAttribute("obtain", "()Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;", "")]
public static AccessibilityWindowInfoCompat Obtain();
    [RegisterAttribute("obtain", "(Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;)Landroidx/core/view/accessibility/AccessibilityWindowInfoCompat;", "")]
public static AccessibilityWindowInfoCompat Obtain(AccessibilityWindowInfoCompat info);
    [NullableContextAttribute("1")]
[ObsoleteAttribute]
private static Delegate GetRecycleHandler();
    [ObsoleteAttribute]
private static void n_Recycle(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("recycle", "()V", "GetRecycleHandler")]
public virtual void Recycle();
    [NullableContextAttribute("1")]
private static Delegate GetUnwrapHandler();
    private static IntPtr n_Unwrap(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("unwrap", "()Landroid/view/accessibility/AccessibilityWindowInfo;", "GetUnwrapHandler")]
public virtual AccessibilityWindowInfo Unwrap();
}
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand", "", "AndroidX.Core.View.Accessibility.IAccessibilityViewCommandInvoker")]
public interface AndroidX.Core.View.Accessibility.IAccessibilityViewCommand {
    [NullableContextAttribute("1")]
[RegisterAttribute("perform", "(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityViewCommand$CommandArguments;)Z", "GetPerform_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityViewCommand_CommandArguments_Handler:AndroidX.Core.View.Accessibility.IAccessibilityViewCommandInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool Perform(View view, AccessibilityViewCommandCommandArguments arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/accessibility/AccessibilityViewCommand")]
internal class AndroidX.Core.View.Accessibility.IAccessibilityViewCommandInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_perform_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityViewCommand_CommandArguments_;
    private IntPtr id_perform_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityViewCommand_CommandArguments_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IAccessibilityViewCommandInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAccessibilityViewCommandInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IAccessibilityViewCommand GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetPerform_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityViewCommand_CommandArguments_Handler();
    private static bool n_Perform_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityViewCommand_CommandArguments_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_arguments);
    public sealed virtual bool Perform(View view, AccessibilityViewCommandCommandArguments arguments);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/AccessibilityDelegateCompat")]
public class AndroidX.Core.View.AccessibilityDelegateCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_dispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    [NullableAttribute("2")]
private static Delegate cb_getAccessibilityNodeProvider_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    [NullableAttribute("2")]
private static Delegate cb_onInitializeAccessibilityNodeInfo_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_;
    [NullableAttribute("2")]
private static Delegate cb_onPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    [NullableAttribute("2")]
private static Delegate cb_onRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    [NullableAttribute("2")]
private static Delegate cb_performAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_sendAccessibilityEvent_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_sendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AccessibilityDelegateCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View$AccessibilityDelegate;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public AccessibilityDelegateCompat(AccessibilityDelegate originalDelegate);
    private static AccessibilityDelegateCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static bool n_DispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("dispatchPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetDispatchPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual bool DispatchPopulateAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetGetAccessibilityNodeProvider_Landroid_view_View_Handler();
    private static IntPtr n_GetAccessibilityNodeProvider_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_host);
    [RegisterAttribute("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroidx/core/view/accessibility/AccessibilityNodeProviderCompat;", "GetGetAccessibilityNodeProvider_Landroid_view_View_Handler")]
public virtual AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(View host);
    private static Delegate GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnInitializeAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void OnInitializeAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Handler();
    private static void n_OnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_info);
    [RegisterAttribute("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;)V", "GetOnInitializeAccessibilityNodeInfo_Landroid_view_View_Landroidx_core_view_accessibility_AccessibilityNodeInfoCompat_Handler")]
public virtual void OnInitializeAccessibilityNodeInfo(View host, AccessibilityNodeInfoCompat info);
    private static Delegate GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_OnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetOnPopulateAccessibilityEvent_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void OnPopulateAccessibilityEvent(View host, AccessibilityEvent e);
    private static Delegate GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static bool n_OnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_child, IntPtr native_e);
    [RegisterAttribute("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "GetOnRequestSendAccessibilityEvent_Landroid_view_ViewGroup_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual bool OnRequestSendAccessibilityEvent(ViewGroup host, View child, AccessibilityEvent e);
    private static Delegate GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler();
    private static bool n_PerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, int action, IntPtr native_args);
    [RegisterAttribute("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "GetPerformAccessibilityAction_Landroid_view_View_ILandroid_os_Bundle_Handler")]
public virtual bool PerformAccessibilityAction(View host, int action, Bundle args);
    private static Delegate GetSendAccessibilityEvent_Landroid_view_View_IHandler();
    private static void n_SendAccessibilityEvent_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_host, int eventType);
    [RegisterAttribute("sendAccessibilityEvent", "(Landroid/view/View;I)V", "GetSendAccessibilityEvent_Landroid_view_View_IHandler")]
public virtual void SendAccessibilityEvent(View host, int eventType);
    private static Delegate GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler();
    private static void n_SendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_host, IntPtr native_e);
    [RegisterAttribute("sendAccessibilityEventUnchecked", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "GetSendAccessibilityEventUnchecked_Landroid_view_View_Landroid_view_accessibility_AccessibilityEvent_Handler")]
public virtual void SendAccessibilityEventUnchecked(View host, AccessibilityEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ActionProvider")]
public abstract class AndroidX.Core.View.ActionProvider : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    [NullableAttribute("2")]
private static Delegate cb_hasSubMenu;
    [NullableAttribute("2")]
private static Delegate cb_isVisible;
    [NullableAttribute("2")]
private static Delegate cb_onCreateActionView;
    [NullableAttribute("2")]
private static Delegate cb_onCreateActionView_Landroid_view_MenuItem_;
    [NullableAttribute("2")]
private static Delegate cb_onPerformDefaultAction;
    [NullableAttribute("2")]
private static Delegate cb_onPrepareSubMenu_Landroid_view_SubMenu_;
    [NullableAttribute("2")]
private static Delegate cb_overridesItemVisibility;
    [NullableAttribute("2")]
private static Delegate cb_refreshVisibility;
    [NullableAttribute("2")]
private static Delegate cb_reset;
    [NullableAttribute("2")]
private static Delegate cb_setSubUiVisibilityListener_Landroidx_core_view_ActionProvider_SubUiVisibilityListener_;
    [NullableAttribute("2")]
private static Delegate cb_setVisibilityListener_Landroidx_core_view_ActionProvider_VisibilityListener_;
    [NullableAttribute("2")]
private static Delegate cb_subUiVisibilityChanged_Z;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetSubUiVisibilityListener;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetVisibilityListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Context Context { get; }
    public bool HasSubMenu { get; }
    public bool IsVisible { get; }
    protected ActionProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ActionProvider(Context context);
    private static ActionProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler")]
public virtual Context get_Context();
    private static Delegate GetHasSubMenuHandler();
    private static bool n_HasSubMenu(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSubMenu", "()Z", "GetHasSubMenuHandler")]
public virtual bool get_HasSubMenu();
    private static Delegate GetIsVisibleHandler();
    private static bool n_IsVisible(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isVisible", "()Z", "GetIsVisibleHandler")]
public virtual bool get_IsVisible();
    private static Delegate GetOnCreateActionViewHandler();
    private static IntPtr n_OnCreateActionView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")]
public abstract virtual View OnCreateActionView();
    private static Delegate GetOnCreateActionView_Landroid_view_MenuItem_Handler();
    private static IntPtr n_OnCreateActionView_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_forItem);
    [RegisterAttribute("onCreateActionView", "(Landroid/view/MenuItem;)Landroid/view/View;", "GetOnCreateActionView_Landroid_view_MenuItem_Handler")]
public virtual View OnCreateActionView(IMenuItem forItem);
    private static Delegate GetOnPerformDefaultActionHandler();
    private static bool n_OnPerformDefaultAction(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPerformDefaultAction", "()Z", "GetOnPerformDefaultActionHandler")]
public virtual bool OnPerformDefaultAction();
    private static Delegate GetOnPrepareSubMenu_Landroid_view_SubMenu_Handler();
    private static void n_OnPrepareSubMenu_Landroid_view_SubMenu_(IntPtr jnienv, IntPtr native__this, IntPtr native_subMenu);
    [RegisterAttribute("onPrepareSubMenu", "(Landroid/view/SubMenu;)V", "GetOnPrepareSubMenu_Landroid_view_SubMenu_Handler")]
public virtual void OnPrepareSubMenu(ISubMenu subMenu);
    private static Delegate GetOverridesItemVisibilityHandler();
    private static bool n_OverridesItemVisibility(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("overridesItemVisibility", "()Z", "GetOverridesItemVisibilityHandler")]
public virtual bool OverridesItemVisibility();
    private static Delegate GetRefreshVisibilityHandler();
    private static void n_RefreshVisibility(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refreshVisibility", "()V", "GetRefreshVisibilityHandler")]
public virtual void RefreshVisibility();
    private static Delegate GetResetHandler();
    private static void n_Reset(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "GetResetHandler")]
public virtual void Reset();
    private static Delegate GetSetSubUiVisibilityListener_Landroidx_core_view_ActionProvider_SubUiVisibilityListener_Handler();
    private static void n_SetSubUiVisibilityListener_Landroidx_core_view_ActionProvider_SubUiVisibilityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setSubUiVisibilityListener", "(Landroidx/core/view/ActionProvider$SubUiVisibilityListener;)V", "GetSetSubUiVisibilityListener_Landroidx_core_view_ActionProvider_SubUiVisibilityListener_Handler")]
public virtual void SetSubUiVisibilityListener(ISubUiVisibilityListener listener);
    private static Delegate GetSetVisibilityListener_Landroidx_core_view_ActionProvider_VisibilityListener_Handler();
    private static void n_SetVisibilityListener_Landroidx_core_view_ActionProvider_VisibilityListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("setVisibilityListener", "(Landroidx/core/view/ActionProvider$VisibilityListener;)V", "GetSetVisibilityListener_Landroidx_core_view_ActionProvider_VisibilityListener_Handler")]
public virtual void SetVisibilityListener(IVisibilityListener listener);
    private static Delegate GetSubUiVisibilityChanged_ZHandler();
    private static void n_SubUiVisibilityChanged_Z(IntPtr jnienv, IntPtr native__this, bool isVisible);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("subUiVisibilityChanged", "(Z)V", "GetSubUiVisibilityChanged_ZHandler")]
public virtual void SubUiVisibilityChanged(bool isVisible);
    public void add_SubUiVisibility(EventHandler`1<SubUiVisibilityEventArgs> value);
    public void remove_SubUiVisibility(EventHandler`1<SubUiVisibilityEventArgs> value);
    private ISubUiVisibilityListenerImplementor __CreateISubUiVisibilityListenerImplementor();
    public void add_Visibility(EventHandler`1<VisibilityEventArgs> value);
    public void remove_Visibility(EventHandler`1<VisibilityEventArgs> value);
    private IVisibilityListenerImplementor __CreateIVisibilityListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ActionProvider")]
internal class AndroidX.Core.View.ActionProviderInvoker : ActionProvider {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ActionProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ActionProviderInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")]
public virtual View OnCreateActionView();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/animation/PathInterpolatorCompat")]
public class AndroidX.Core.View.Animation.PathInterpolatorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PathInterpolatorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PathInterpolatorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("create", "(Landroid/graphics/Path;)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(Path path);
    [RegisterAttribute("create", "(FF)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(float controlX, float controlY);
    [RegisterAttribute("create", "(FFFF)Landroid/view/animation/Interpolator;", "")]
public static IInterpolator Create(float controlX1, float controlY1, float controlX2, float controlY2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AndroidX.Core.View.AnimationCancelEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationCancelEventArgs(View view);
    public View get_View();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AndroidX.Core.View.AnimationEndEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationEndEventArgs(View view);
    public View get_View();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AndroidX.Core.View.AnimationStartEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public AnimationStartEventArgs(View view);
    public View get_View();
}
public class AndroidX.Core.View.ApplyWindowInsetsHandler : MulticastDelegate {
    public ApplyWindowInsetsHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual WindowInsetsCompat Invoke(View v, WindowInsetsCompat insets);
    public virtual IAsyncResult BeginInvoke(View v, WindowInsetsCompat insets, AsyncCallback callback, object object);
    public virtual WindowInsetsCompat EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/autofill/AutofillIdCompat")]
public class AndroidX.Core.View.AutoFill.AutofillIdCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_toAutofillId;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AutofillIdCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AutofillIdCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetToAutofillIdHandler();
    private static IntPtr n_ToAutofillId(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toAutofillId", "()Landroid/view/autofill/AutofillId;", "GetToAutofillIdHandler")]
public virtual AutofillId ToAutofillId();
    [RegisterAttribute("toAutofillIdCompat", "(Landroid/view/autofill/AutofillId;)Landroidx/core/view/autofill/AutofillIdCompat;", "")]
public static AutofillIdCompat ToAutofillIdCompat(AutofillId autofillId);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/contentcapture/ContentCaptureSessionCompat")]
public class AndroidX.Core.View.ContentCapture.ContentCaptureSessionCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_newAutofillId_J;
    [NullableAttribute("2")]
private static Delegate cb_newVirtualViewStructure_Landroid_view_autofill_AutofillId_J;
    [NullableAttribute("2")]
private static Delegate cb_notifyViewTextChanged_Landroid_view_autofill_AutofillId_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_notifyViewsAppeared_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_notifyViewsDisappeared_arrayJ;
    [NullableAttribute("2")]
private static Delegate cb_toContentCaptureSession;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ContentCaptureSessionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContentCaptureSessionCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetNewAutofillId_JHandler();
    private static IntPtr n_NewAutofillId_J(IntPtr jnienv, IntPtr native__this, long virtualChildId);
    [NullableContextAttribute("2")]
[RegisterAttribute("newAutofillId", "(J)Landroid/view/autofill/AutofillId;", "GetNewAutofillId_JHandler")]
public virtual AutofillId NewAutofillId(long virtualChildId);
    private static Delegate GetNewVirtualViewStructure_Landroid_view_autofill_AutofillId_JHandler();
    private static IntPtr n_NewVirtualViewStructure_Landroid_view_autofill_AutofillId_J(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, long virtualId);
    [RegisterAttribute("newVirtualViewStructure", "(Landroid/view/autofill/AutofillId;J)Landroidx/core/view/ViewStructureCompat;", "GetNewVirtualViewStructure_Landroid_view_autofill_AutofillId_JHandler")]
public virtual ViewStructureCompat NewVirtualViewStructure(AutofillId parentId, long virtualId);
    private static Delegate GetNotifyViewTextChanged_Landroid_view_autofill_AutofillId_Ljava_lang_CharSequence_Handler();
    private static void n_NotifyViewTextChanged_Landroid_view_autofill_AutofillId_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_id, IntPtr native_text);
    [RegisterAttribute("notifyViewTextChanged", "(Landroid/view/autofill/AutofillId;Ljava/lang/CharSequence;)V", "GetNotifyViewTextChanged_Landroid_view_autofill_AutofillId_Ljava_lang_CharSequence_Handler")]
public virtual void NotifyViewTextChanged(AutofillId id, ICharSequence text);
    public void NotifyViewTextChanged(AutofillId id, string text);
    private static Delegate GetNotifyViewsAppeared_Ljava_util_List_Handler();
    private static void n_NotifyViewsAppeared_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_appearedNodes);
    [RegisterAttribute("notifyViewsAppeared", "(Ljava/util/List;)V", "GetNotifyViewsAppeared_Ljava_util_List_Handler")]
public virtual void NotifyViewsAppeared(IList`1<ViewStructure> appearedNodes);
    private static Delegate GetNotifyViewsDisappeared_arrayJHandler();
    private static void n_NotifyViewsDisappeared_arrayJ(IntPtr jnienv, IntPtr native__this, IntPtr native_virtualIds);
    [RegisterAttribute("notifyViewsDisappeared", "([J)V", "GetNotifyViewsDisappeared_arrayJHandler")]
public virtual void NotifyViewsDisappeared(Int64[] virtualIds);
    private static Delegate GetToContentCaptureSessionHandler();
    private static IntPtr n_ToContentCaptureSession(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toContentCaptureSession", "()Landroid/view/contentcapture/ContentCaptureSession;", "GetToContentCaptureSessionHandler")]
public virtual ContentCaptureSession ToContentCaptureSession();
    [RegisterAttribute("toContentCaptureSessionCompat", "(Landroid/view/contentcapture/ContentCaptureSession;Landroid/view/View;)Landroidx/core/view/contentcapture/ContentCaptureSessionCompat;", "")]
public static ContentCaptureSessionCompat ToContentCaptureSessionCompat(ContentCaptureSession contentCaptureSession, View host);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ContentInfoCompat")]
public class AndroidX.Core.View.ContentInfoCompat : Object {
    [RegisterAttribute("FLAG_CONVERT_TO_PLAIN_TEXT")]
public static int FlagConvertToPlainText;
    [RegisterAttribute("SOURCE_APP")]
public static int SourceApp;
    [RegisterAttribute("SOURCE_AUTOFILL")]
public static int SourceAutofill;
    [RegisterAttribute("SOURCE_CLIPBOARD")]
public static int SourceClipboard;
    [RegisterAttribute("SOURCE_DRAG_AND_DROP")]
public static int SourceDragAndDrop;
    [RegisterAttribute("SOURCE_INPUT_METHOD")]
public static int SourceInputMethod;
    [RegisterAttribute("SOURCE_PROCESS_TEXT")]
public static int SourceProcessText;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ClipData Clip { get; }
    [NullableAttribute("2")]
public Bundle Extras { get; }
    public int Flags { get; }
    [NullableAttribute("2")]
public Uri LinkUri { get; }
    public int Source { get; }
    internal ContentInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ContentInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getClip", "()Landroid/content/ClipData;", "")]
public ClipData get_Clip();
    [NullableContextAttribute("2")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("getFlags", "()I", "")]
public int get_Flags();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLinkUri", "()Landroid/net/Uri;", "")]
public Uri get_LinkUri();
    [RegisterAttribute("getSource", "()I", "")]
public int get_Source();
    [RegisterAttribute("partition", "(Landroid/view/ContentInfo;Ljava/util/function/Predicate;)Landroid/util/Pair;", "")]
public static Pair Partition(ContentInfo payload, IPredicate itemPredicate);
    [RegisterAttribute("partition", "(Landroidx/core/util/Predicate;)Landroid/util/Pair;", "")]
public Pair Partition(IPredicate itemPredicate);
    [RegisterAttribute("toContentInfo", "()Landroid/view/ContentInfo;", "")]
public ContentInfo ToContentInfo();
    [RegisterAttribute("toContentInfoCompat", "(Landroid/view/ContentInfo;)Landroidx/core/view/ContentInfoCompat;", "")]
public static ContentInfoCompat ToContentInfoCompat(ContentInfo platContentInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DifferentialMotionFlingController")]
public class AndroidX.Core.View.DifferentialMotionFlingController : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onMotionEvent_Landroid_view_MotionEvent_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DifferentialMotionFlingController(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroidx/core/view/DifferentialMotionFlingTarget;)V", "")]
public DifferentialMotionFlingController(Context context, IDifferentialMotionFlingTarget target);
    private static DifferentialMotionFlingController();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnMotionEvent_Landroid_view_MotionEvent_IHandler();
    private static void n_OnMotionEvent_Landroid_view_MotionEvent_I(IntPtr jnienv, IntPtr native__this, IntPtr native_e, int axis);
    [RegisterAttribute("onMotionEvent", "(Landroid/view/MotionEvent;I)V", "GetOnMotionEvent_Landroid_view_MotionEvent_IHandler")]
public virtual void OnMotionEvent(MotionEvent e, int axis);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DisplayCompat")]
public class AndroidX.Core.View.DisplayCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DisplayCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DisplayCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getMode", "(Landroid/content/Context;Landroid/view/Display;)Landroidx/core/view/DisplayCompat$ModeCompat;", "")]
public static ModeCompat GetMode(Context context, Display display);
    [RegisterAttribute("getSupportedModes", "(Landroid/content/Context;Landroid/view/Display;)[Landroidx/core/view/DisplayCompat$ModeCompat;", "")]
public static ModeCompat[] GetSupportedModes(Context context, Display display);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DisplayCutoutCompat")]
public class AndroidX.Core.View.DisplayCutoutCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<Rect> BoundingRects { get; }
    public int SafeInsetBottom { get; }
    public int SafeInsetLeft { get; }
    public int SafeInsetRight { get; }
    public int SafeInsetTop { get; }
    public Insets WaterfallInsets { get; }
    internal DisplayCutoutCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/graphics/Rect;Ljava/util/List;)V", "")]
public DisplayCutoutCompat(Rect safeInsets, IList`1<Rect> boundingRects);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroidx/core/graphics/Insets;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroid/graphics/Rect;Landroidx/core/graphics/Insets;)V", "")]
public DisplayCutoutCompat(Insets safeInsets, Rect boundLeft, Rect boundTop, Rect boundRight, Rect boundBottom, Insets waterfallInsets);
    private static DisplayCutoutCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBoundingRects", "()Ljava/util/List;", "")]
public IList`1<Rect> get_BoundingRects();
    [RegisterAttribute("getSafeInsetBottom", "()I", "")]
public int get_SafeInsetBottom();
    [RegisterAttribute("getSafeInsetLeft", "()I", "")]
public int get_SafeInsetLeft();
    [RegisterAttribute("getSafeInsetRight", "()I", "")]
public int get_SafeInsetRight();
    [RegisterAttribute("getSafeInsetTop", "()I", "")]
public int get_SafeInsetTop();
    [RegisterAttribute("getWaterfallInsets", "()Landroidx/core/graphics/Insets;", "")]
public Insets get_WaterfallInsets();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DragAndDropPermissionsCompat")]
public class AndroidX.Core.View.DragAndDropPermissionsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DragAndDropPermissionsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static DragAndDropPermissionsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("release", "()V", "")]
public void Release();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("request", "(Landroid/app/Activity;Landroid/view/DragEvent;)Landroidx/core/view/DragAndDropPermissionsCompat;", "")]
public static DragAndDropPermissionsCompat Request(Activity activity, DragEvent dragEvent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DragStartHelper")]
public class AndroidX.Core.View.DragStartHelper : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_attach;
    [NullableAttribute("2")]
private static Delegate cb_detach;
    [NullableAttribute("2")]
private static Delegate cb_getTouchPosition_Landroid_graphics_Point_;
    [NullableAttribute("2")]
private static Delegate cb_onLongClick_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onTouch_Landroid_view_View_Landroid_view_MotionEvent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected DragStartHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;Landroidx/core/view/DragStartHelper$OnDragStartListener;)V", "")]
public DragStartHelper(View view, IOnDragStartListener listener);
    private static DragStartHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAttachHandler();
    private static void n_Attach(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("attach", "()V", "GetAttachHandler")]
public virtual void Attach();
    private static Delegate GetDetachHandler();
    private static void n_Detach(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("detach", "()V", "GetDetachHandler")]
public virtual void Detach();
    private static Delegate GetGetTouchPosition_Landroid_graphics_Point_Handler();
    private static void n_GetTouchPosition_Landroid_graphics_Point_(IntPtr jnienv, IntPtr native__this, IntPtr native_point);
    [RegisterAttribute("getTouchPosition", "(Landroid/graphics/Point;)V", "GetGetTouchPosition_Landroid_graphics_Point_Handler")]
public virtual void GetTouchPosition(Point point);
    private static Delegate GetOnLongClick_Landroid_view_View_Handler();
    private static bool n_OnLongClick_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_v);
    [RegisterAttribute("onLongClick", "(Landroid/view/View;)Z", "GetOnLongClick_Landroid_view_View_Handler")]
public virtual bool OnLongClick(View v);
    private static Delegate GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouch_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_e);
    [RegisterAttribute("onTouch", "(Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouch(View v, MotionEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/view/GestureDetectorCompat")]
public class AndroidX.Core.View.GestureDetectorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsLongpressEnabled { get; public set; }
    internal GestureDetectorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V", "")]
public GestureDetectorCompat(Context context, IOnGestureListener listener);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;Landroid/os/Handler;)V", "")]
public GestureDetectorCompat(Context context, IOnGestureListener listener, Handler handler);
    private static GestureDetectorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isLongpressEnabled", "()Z", "")]
public bool get_IsLongpressEnabled();
    [RegisterAttribute("setIsLongpressEnabled", "(Z)V", "")]
public void set_IsLongpressEnabled(bool value);
    [RegisterAttribute("onTouchEvent", "(Landroid/view/MotionEvent;)Z", "")]
public bool OnTouchEvent(MotionEvent e);
    [NullableContextAttribute("2")]
[RegisterAttribute("setOnDoubleTapListener", "(Landroid/view/GestureDetector$OnDoubleTapListener;)V", "")]
public void SetOnDoubleTapListener(IOnDoubleTapListener listener);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/GravityCompat")]
public class AndroidX.Core.View.GravityCompat : Object {
    [RegisterAttribute("END")]
public static int End;
    [RegisterAttribute("RELATIVE_HORIZONTAL_GRAVITY_MASK")]
public static int RelativeHorizontalGravityMask;
    [RegisterAttribute("RELATIVE_LAYOUT_DIRECTION")]
public static int RelativeLayoutDirection;
    [RegisterAttribute("START")]
public static int Start;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal GravityCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static GravityCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("apply", "(IIILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "")]
public static void Apply(int gravity, int w, int h, Rect container, Rect outRect, int layoutDirection);
    [RegisterAttribute("apply", "(IIILandroid/graphics/Rect;IILandroid/graphics/Rect;I)V", "")]
public static void Apply(int gravity, int w, int h, Rect container, int xAdj, int yAdj, Rect outRect, int layoutDirection);
    [RegisterAttribute("applyDisplay", "(ILandroid/graphics/Rect;Landroid/graphics/Rect;I)V", "")]
public static void ApplyDisplay(int gravity, Rect display, Rect inoutObj, int layoutDirection);
    [RegisterAttribute("getAbsoluteGravity", "(II)I", "")]
public static int GetAbsoluteGravity(int gravity, int layoutDirection);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/HapticFeedbackConstantsCompat")]
public class AndroidX.Core.View.HapticFeedbackConstantsCompat : Object {
    [RegisterAttribute("CLOCK_TICK")]
public static int ClockTick;
    [RegisterAttribute("CONFIRM")]
public static int Confirm;
    [RegisterAttribute("CONTEXT_CLICK")]
public static int ContextClick;
    [RegisterAttribute("DRAG_START")]
public static int DragStart;
    [RegisterAttribute("FLAG_IGNORE_VIEW_SETTING")]
public static int FlagIgnoreViewSetting;
    [RegisterAttribute("GESTURE_END")]
public static int GestureEnd;
    [RegisterAttribute("GESTURE_START")]
public static int GestureStart;
    [RegisterAttribute("GESTURE_THRESHOLD_ACTIVATE")]
public static int GestureThresholdActivate;
    [RegisterAttribute("GESTURE_THRESHOLD_DEACTIVATE")]
public static int GestureThresholdDeactivate;
    [RegisterAttribute("KEYBOARD_PRESS")]
public static int KeyboardPress;
    [RegisterAttribute("KEYBOARD_RELEASE")]
public static int KeyboardRelease;
    [RegisterAttribute("KEYBOARD_TAP")]
public static int KeyboardTap;
    [RegisterAttribute("LONG_PRESS")]
public static int LongPress;
    [RegisterAttribute("NO_HAPTICS")]
public static int NoHaptics;
    [RegisterAttribute("REJECT")]
public static int Reject;
    [RegisterAttribute("SEGMENT_FREQUENT_TICK")]
public static int SegmentFrequentTick;
    [RegisterAttribute("SEGMENT_TICK")]
public static int SegmentTick;
    [RegisterAttribute("TEXT_HANDLE_MOVE")]
public static int TextHandleMove;
    [RegisterAttribute("TOGGLE_OFF")]
public static int ToggleOff;
    [RegisterAttribute("TOGGLE_ON")]
public static int ToggleOn;
    [RegisterAttribute("VIRTUAL_KEY")]
public static int VirtualKey;
    [RegisterAttribute("VIRTUAL_KEY_RELEASE")]
public static int VirtualKeyRelease;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal HapticFeedbackConstantsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static HapticFeedbackConstantsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("androidx/core/view/DifferentialMotionFlingTarget", "", "AndroidX.Core.View.IDifferentialMotionFlingTargetInvoker")]
public interface AndroidX.Core.View.IDifferentialMotionFlingTarget {
    public float ScaledScrollFactor { get; }
    [RegisterAttribute("getScaledScrollFactor", "()F", "GetGetScaledScrollFactorHandler:AndroidX.Core.View.IDifferentialMotionFlingTargetInvoker, Xamarin.AndroidX.Core")]
public abstract virtual float get_ScaledScrollFactor();
    [RegisterAttribute("startDifferentialMotionFling", "(F)Z", "GetStartDifferentialMotionFling_FHandler:AndroidX.Core.View.IDifferentialMotionFlingTargetInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool StartDifferentialMotionFling(float p0);
    [RegisterAttribute("stopDifferentialMotionFling", "()V", "GetStopDifferentialMotionFlingHandler:AndroidX.Core.View.IDifferentialMotionFlingTargetInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void StopDifferentialMotionFling();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/DifferentialMotionFlingTarget")]
internal class AndroidX.Core.View.IDifferentialMotionFlingTargetInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getScaledScrollFactor;
    private IntPtr id_getScaledScrollFactor;
    [NullableAttribute("2")]
private static Delegate cb_startDifferentialMotionFling_F;
    private IntPtr id_startDifferentialMotionFling_F;
    [NullableAttribute("2")]
private static Delegate cb_stopDifferentialMotionFling;
    private IntPtr id_stopDifferentialMotionFling;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float ScaledScrollFactor { get; }
    public IDifferentialMotionFlingTargetInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDifferentialMotionFlingTargetInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDifferentialMotionFlingTarget GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetScaledScrollFactorHandler();
    private static float n_GetScaledScrollFactor(IntPtr jnienv, IntPtr native__this);
    public sealed virtual float get_ScaledScrollFactor();
    private static Delegate GetStartDifferentialMotionFling_FHandler();
    private static bool n_StartDifferentialMotionFling_F(IntPtr jnienv, IntPtr native__this, float p0);
    public sealed virtual bool StartDifferentialMotionFling(float p0);
    private static Delegate GetStopDifferentialMotionFlingHandler();
    private static void n_StopDifferentialMotionFling(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void StopDifferentialMotionFling();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/view/LayoutInflaterFactory", "", "AndroidX.Core.View.ILayoutInflaterFactoryInvoker")]
public interface AndroidX.Core.View.ILayoutInflaterFactory {
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateView", "(Landroid/view/View;Ljava/lang/String;Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/view/View;", "GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler:AndroidX.Core.View.ILayoutInflaterFactoryInvoker, Xamarin.AndroidX.Core")]
public abstract virtual View OnCreateView(View parent, string name, Context context, IAttributeSet attrs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/LayoutInflaterFactory")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class AndroidX.Core.View.ILayoutInflaterFactoryInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_;
    private IntPtr id_onCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ILayoutInflaterFactoryInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ILayoutInflaterFactoryInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ILayoutInflaterFactory GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_Handler();
    private static IntPtr n_OnCreateView_Landroid_view_View_Ljava_lang_String_Landroid_content_Context_Landroid_util_AttributeSet_(IntPtr jnienv, IntPtr native__this, IntPtr native_parent, IntPtr native_name, IntPtr native_context, IntPtr native_attrs);
    [NullableContextAttribute("2")]
public sealed virtual View OnCreateView(View parent, string name, Context context, IAttributeSet attrs);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/core/view/MenuHost", "", "AndroidX.Core.View.IMenuHostInvoker")]
public interface AndroidX.Core.View.IMenuHost {
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Handler:AndroidX.Core.View.IMenuHostInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddMenuProvider(IMenuProvider p0);
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;Landroidx/lifecycle/LifecycleOwner;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Handler:AndroidX.Core.View.IMenuHostInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddMenuProvider(IMenuProvider p0, ILifecycleOwner p1);
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$State;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_Handler:AndroidX.Core.View.IMenuHostInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void AddMenuProvider(IMenuProvider p0, ILifecycleOwner p1, State p2);
    [RegisterAttribute("invalidateMenu", "()V", "GetInvalidateMenuHandler:AndroidX.Core.View.IMenuHostInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void InvalidateMenu();
    [RegisterAttribute("removeMenuProvider", "(Landroidx/core/view/MenuProvider;)V", "GetRemoveMenuProvider_Landroidx_core_view_MenuProvider_Handler:AndroidX.Core.View.IMenuHostInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void RemoveMenuProvider(IMenuProvider p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MenuHost")]
internal class AndroidX.Core.View.IMenuHostInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_;
    private IntPtr id_addMenuProvider_Landroidx_core_view_MenuProvider_;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_;
    private IntPtr id_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_;
    private IntPtr id_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_;
    [NullableAttribute("2")]
private static Delegate cb_invalidateMenu;
    private IntPtr id_invalidateMenu;
    [NullableAttribute("2")]
private static Delegate cb_removeMenuProvider_Landroidx_core_view_MenuProvider_;
    private IntPtr id_removeMenuProvider_Landroidx_core_view_MenuProvider_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IMenuHostInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMenuHostInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMenuHost GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddMenuProvider(IMenuProvider p0);
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void AddMenuProvider(IMenuProvider p0, ILifecycleOwner p1);
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1, IntPtr native_p2);
    public sealed virtual void AddMenuProvider(IMenuProvider p0, ILifecycleOwner p1, State p2);
    private static Delegate GetInvalidateMenuHandler();
    private static void n_InvalidateMenu(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void InvalidateMenu();
    private static Delegate GetRemoveMenuProvider_Landroidx_core_view_MenuProvider_Handler();
    private static void n_RemoveMenuProvider_Landroidx_core_view_MenuProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveMenuProvider(IMenuProvider p0);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/core/view/MenuProvider", "", "AndroidX.Core.View.IMenuProviderInvoker")]
public interface AndroidX.Core.View.IMenuProvider {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onMenuClosed_Landroid_view_Menu_;
    [NullableAttribute("2")]
private static Delegate cb_onPrepareMenu_Landroid_view_Menu_;
    private static IMenuProvider();
    [RegisterAttribute("onCreateMenu", "(Landroid/view/Menu;Landroid/view/MenuInflater;)V", "GetOnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_Handler:AndroidX.Core.View.IMenuProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnCreateMenu(IMenu p0, MenuInflater p1);
    [RegisterAttribute("onMenuItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnMenuItemSelected_Landroid_view_MenuItem_Handler:AndroidX.Core.View.IMenuProviderInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool OnMenuItemSelected(IMenuItem p0);
    private static Delegate GetOnMenuClosed_Landroid_view_Menu_Handler();
    private static void n_OnMenuClosed_Landroid_view_Menu_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("onMenuClosed", "(Landroid/view/Menu;)V", "GetOnMenuClosed_Landroid_view_Menu_Handler:AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core")]
public virtual void OnMenuClosed(IMenu menu);
    private static Delegate GetOnPrepareMenu_Landroid_view_Menu_Handler();
    private static void n_OnPrepareMenu_Landroid_view_Menu_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("onPrepareMenu", "(Landroid/view/Menu;)V", "GetOnPrepareMenu_Landroid_view_Menu_Handler:AndroidX.Core.View.IMenuProvider, Xamarin.AndroidX.Core")]
public virtual void OnPrepareMenu(IMenu menu);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MenuProvider")]
internal class AndroidX.Core.View.IMenuProviderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_;
    private IntPtr id_onCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_;
    [NullableAttribute("2")]
private static Delegate cb_onMenuItemSelected_Landroid_view_MenuItem_;
    private IntPtr id_onMenuItemSelected_Landroid_view_MenuItem_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IMenuProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMenuProviderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMenuProvider GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_Handler();
    private static void n_OnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void OnCreateMenu(IMenu p0, MenuInflater p1);
    private static Delegate GetOnMenuItemSelected_Landroid_view_MenuItem_Handler();
    private static bool n_OnMenuItemSelected_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool OnMenuItemSelected(IMenuItem p0);
}
[RegisterAttribute("androidx/core/view/NestedScrollingChild", "", "AndroidX.Core.View.INestedScrollingChildInvoker")]
public interface AndroidX.Core.View.INestedScrollingChild {
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    [RegisterAttribute("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool get_HasNestedScrollingParent();
    [RegisterAttribute("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool get_NestedScrollingEnabled();
    [RegisterAttribute("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_NestedScrollingEnabled(bool value);
    [RegisterAttribute("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    [RegisterAttribute("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool StartNestedScroll(ScrollAxis axes);
    [RegisterAttribute("stopNestedScroll", "()V", "GetStopNestedScrollHandler:AndroidX.Core.View.INestedScrollingChildInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void StopNestedScroll();
}
[RegisterAttribute("androidx/core/view/NestedScrollingChild2", "", "AndroidX.Core.View.INestedScrollingChild2Invoker")]
public interface AndroidX.Core.View.INestedScrollingChild2 {
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(II[I[II)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIIHandler:AndroidX.Core.View.INestedScrollingChild2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[II)Z", "GetDispatchNestedScroll_IIIIarrayIIHandler:AndroidX.Core.View.INestedScrollingChild2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    [RegisterAttribute("hasNestedScrollingParent", "(I)Z", "GetInvokeHasNestedScrollingParent_IHandler:AndroidX.Core.View.INestedScrollingChild2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual bool InvokeHasNestedScrollingParent(int type);
    [RegisterAttribute("startNestedScroll", "(II)Z", "GetStartNestedScroll_IIHandler:AndroidX.Core.View.INestedScrollingChild2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual bool StartNestedScroll(ScrollAxis axes, int type);
    [RegisterAttribute("stopNestedScroll", "(I)V", "GetStopNestedScroll_IHandler:AndroidX.Core.View.INestedScrollingChild2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void StopNestedScroll(int type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingChild2")]
internal class AndroidX.Core.View.INestedScrollingChild2Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayII;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayII;
    private IntPtr id_dispatchNestedScroll_IIIIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent_I;
    private IntPtr id_hasNestedScrollingParent_I;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_II;
    private IntPtr id_startNestedScroll_II;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll_I;
    private IntPtr id_stopNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent;
    private IntPtr id_hasNestedScrollingParent;
    [NullableAttribute("2")]
private static Delegate cb_isNestedScrollingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setNestedScrollingEnabled_Z;
    private IntPtr id_isNestedScrollingEnabled;
    private IntPtr id_setNestedScrollingEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedFling_FFZ;
    private IntPtr id_dispatchNestedFling_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreFling_FF;
    private IntPtr id_dispatchNestedPreFling_FF;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    private IntPtr id_dispatchNestedScroll_IIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_I;
    private IntPtr id_startNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll;
    private IntPtr id_stopNestedScroll;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    public INestedScrollingChild2Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingChild2Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingChild2 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayII(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayII(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    private static Delegate GetInvokeHasNestedScrollingParent_IHandler();
    private static bool n_InvokeHasNestedScrollingParent_I(IntPtr jnienv, IntPtr native__this, int type);
    public sealed virtual bool InvokeHasNestedScrollingParent(int type);
    private static Delegate GetStartNestedScroll_IIHandler();
    private static bool n_StartNestedScroll_II(IntPtr jnienv, IntPtr native__this, int native_axes, int type);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes, int type);
    private static Delegate GetStopNestedScroll_IHandler();
    private static void n_StopNestedScroll_I(IntPtr jnienv, IntPtr native__this, int type);
    public sealed virtual void StopNestedScroll(int type);
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_NestedScrollingEnabled();
    public sealed virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    public sealed virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int native_axes);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void StopNestedScroll();
}
[RegisterAttribute("androidx/core/view/NestedScrollingChild3", "", "AndroidX.Core.View.INestedScrollingChild3Invoker")]
public interface AndroidX.Core.View.INestedScrollingChild3 {
    [NullableContextAttribute("1")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[II[I)V", "GetDispatchNestedScroll_IIIIarrayIIarrayIHandler:AndroidX.Core.View.INestedScrollingChild3Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type, Int32[] consumed);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingChild3")]
internal class AndroidX.Core.View.INestedScrollingChild3Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayIIarrayI;
    private IntPtr id_dispatchNestedScroll_IIIIarrayIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayII;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayII;
    private IntPtr id_dispatchNestedScroll_IIIIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent_I;
    private IntPtr id_hasNestedScrollingParent_I;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_II;
    private IntPtr id_startNestedScroll_II;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll_I;
    private IntPtr id_stopNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent;
    private IntPtr id_hasNestedScrollingParent;
    [NullableAttribute("2")]
private static Delegate cb_isNestedScrollingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setNestedScrollingEnabled_Z;
    private IntPtr id_isNestedScrollingEnabled;
    private IntPtr id_setNestedScrollingEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedFling_FFZ;
    private IntPtr id_dispatchNestedFling_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreFling_FF;
    private IntPtr id_dispatchNestedPreFling_FF;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    private IntPtr id_dispatchNestedScroll_IIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_I;
    private IntPtr id_startNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll;
    private IntPtr id_stopNestedScroll;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    public INestedScrollingChild3Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingChild3Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingChild3 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIarrayIHandler();
    private static void n_DispatchNestedScroll_IIIIarrayIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type, IntPtr native_consumed);
    public sealed virtual void DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type, Int32[] consumed);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayII(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayII(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    private static Delegate GetInvokeHasNestedScrollingParent_IHandler();
    private static bool n_InvokeHasNestedScrollingParent_I(IntPtr jnienv, IntPtr native__this, int type);
    public sealed virtual bool InvokeHasNestedScrollingParent(int type);
    private static Delegate GetStartNestedScroll_IIHandler();
    private static bool n_StartNestedScroll_II(IntPtr jnienv, IntPtr native__this, int native_axes, int type);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes, int type);
    private static Delegate GetStopNestedScroll_IHandler();
    private static void n_StopNestedScroll_I(IntPtr jnienv, IntPtr native__this, int type);
    public sealed virtual void StopNestedScroll(int type);
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_NestedScrollingEnabled();
    public sealed virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    public sealed virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int native_axes);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void StopNestedScroll();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingChild")]
internal class AndroidX.Core.View.INestedScrollingChildInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent;
    private IntPtr id_hasNestedScrollingParent;
    [NullableAttribute("2")]
private static Delegate cb_isNestedScrollingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setNestedScrollingEnabled_Z;
    private IntPtr id_isNestedScrollingEnabled;
    private IntPtr id_setNestedScrollingEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedFling_FFZ;
    private IntPtr id_dispatchNestedFling_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreFling_FF;
    private IntPtr id_dispatchNestedPreFling_FF;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    private IntPtr id_dispatchNestedPreScroll_IIarrayIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    private IntPtr id_dispatchNestedScroll_IIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_I;
    private IntPtr id_startNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll;
    private IntPtr id_stopNestedScroll;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    public INestedScrollingChildInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingChildInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingChild GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    public sealed virtual bool get_NestedScrollingEnabled();
    public sealed virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    public sealed virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
public sealed virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int native_axes);
    public sealed virtual bool StartNestedScroll(ScrollAxis axes);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void StopNestedScroll();
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/core/view/NestedScrollingParent", "", "AndroidX.Core.View.INestedScrollingParentInvoker")]
public interface AndroidX.Core.View.INestedScrollingParent {
    public ScrollAxis NestedScrollAxes { get; }
    [RegisterAttribute("getNestedScrollAxes", "()I", "GetGetNestedScrollAxesHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ScrollAxis get_NestedScrollAxes();
    [RegisterAttribute("onNestedFling", "(Landroid/view/View;FFZ)Z", "GetOnNestedFling_Landroid_view_View_FFZHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("onNestedPreFling", "(Landroid/view/View;FF)Z", "GetOnNestedPreFling_Landroid_view_View_FFHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/View;II[I)V", "GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIII)V", "GetOnNestedScroll_Landroid_view_View_IIIIHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;I)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/View;Landroid/view/View;I)Z", "GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler:AndroidX.Core.View.INestedScrollingParentInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnStopNestedScroll(View target);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/core/view/NestedScrollingParent2", "", "AndroidX.Core.View.INestedScrollingParent2Invoker")]
public interface AndroidX.Core.View.INestedScrollingParent2 {
    public virtual void OnNestedScrollAccepted(View child, View target, int axis, int type);
    public virtual bool OnStartNestedScroll(View child, View target, int axis, int type);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/View;II[II)V", "GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler:AndroidX.Core.View.INestedScrollingParent2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed, int type);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIIII)V", "GetOnNestedScroll_Landroid_view_View_IIIIIHandler:AndroidX.Core.View.INestedScrollingParent2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;II)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler:AndroidX.Core.View.INestedScrollingParent2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes, int type);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/View;Landroid/view/View;II)Z", "GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler:AndroidX.Core.View.INestedScrollingParent2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;I)V", "GetOnStopNestedScroll_Landroid_view_View_IHandler:AndroidX.Core.View.INestedScrollingParent2Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnStopNestedScroll(View target, int type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingParent2")]
internal class AndroidX.Core.View.INestedScrollingParent2Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayII;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_I;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_getNestedScrollAxes;
    private IntPtr id_getNestedScrollAxes;
    [NullableAttribute("2")]
private static Delegate cb_onNestedFling_Landroid_view_View_FFZ;
    private IntPtr id_onNestedFling_Landroid_view_View_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreFling_Landroid_view_View_FF;
    private IntPtr id_onNestedPreFling_Landroid_view_View_FF;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayI;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ScrollAxis NestedScrollAxes { get; }
    public INestedScrollingParent2Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingParent2Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingParent2 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed, int type);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed, int type);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int type);
    public sealed virtual void OnStopNestedScroll(View target, int type);
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ScrollAxis get_NestedScrollAxes();
    private static Delegate GetOnNestedFling_Landroid_view_View_FFZHandler();
    private static bool n_OnNestedFling_Landroid_view_View_FFZ(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    private static Delegate GetOnNestedPreFling_Landroid_view_View_FFHandler();
    private static bool n_OnNestedPreFling_Landroid_view_View_FF(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY);
    public sealed virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    public sealed virtual void OnStopNestedScroll(View target);
}
[RegisterAttribute("androidx/core/view/NestedScrollingParent3", "", "AndroidX.Core.View.INestedScrollingParent3Invoker")]
public interface AndroidX.Core.View.INestedScrollingParent3 {
    [NullableContextAttribute("1")]
[RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIIII[I)V", "GetOnNestedScroll_Landroid_view_View_IIIIIarrayIHandler:AndroidX.Core.View.INestedScrollingParent3Invoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, Int32[] consumed);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingParent3")]
internal class AndroidX.Core.View.INestedScrollingParent3Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIIIIarrayI;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayII;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_I;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_getNestedScrollAxes;
    private IntPtr id_getNestedScrollAxes;
    [NullableAttribute("2")]
private static Delegate cb_onNestedFling_Landroid_view_View_FFZ;
    private IntPtr id_onNestedFling_Landroid_view_View_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreFling_Landroid_view_View_FF;
    private IntPtr id_onNestedPreFling_Landroid_view_View_FF;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayI;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ScrollAxis NestedScrollAxes { get; }
    public INestedScrollingParent3Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingParent3Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingParent3 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIarrayIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIIIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, IntPtr native_consumed);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, Int32[] consumed);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed, int type);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed, int type);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int type);
    public sealed virtual void OnStopNestedScroll(View target, int type);
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ScrollAxis get_NestedScrollAxes();
    private static Delegate GetOnNestedFling_Landroid_view_View_FFZHandler();
    private static bool n_OnNestedFling_Landroid_view_View_FFZ(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    private static Delegate GetOnNestedPreFling_Landroid_view_View_FFHandler();
    private static bool n_OnNestedPreFling_Landroid_view_View_FF(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY);
    public sealed virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    public sealed virtual void OnStopNestedScroll(View target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingParent")]
internal class AndroidX.Core.View.INestedScrollingParentInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getNestedScrollAxes;
    private IntPtr id_getNestedScrollAxes;
    [NullableAttribute("2")]
private static Delegate cb_onNestedFling_Landroid_view_View_FFZ;
    private IntPtr id_onNestedFling_Landroid_view_View_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreFling_Landroid_view_View_FF;
    private IntPtr id_onNestedPreFling_Landroid_view_View_FF;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayI;
    private IntPtr id_onNestedPreScroll_Landroid_view_View_IIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIII;
    private IntPtr id_onNestedScroll_Landroid_view_View_IIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    private IntPtr id_onStartNestedScroll_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    private IntPtr id_onStopNestedScroll_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ScrollAxis NestedScrollAxes { get; }
    public INestedScrollingParentInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static INestedScrollingParentInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static INestedScrollingParent GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ScrollAxis get_NestedScrollAxes();
    private static Delegate GetOnNestedFling_Landroid_view_View_FFZHandler();
    private static bool n_OnNestedFling_Landroid_view_View_FFZ(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY, bool consumed);
    public sealed virtual bool OnNestedFling(View target, float velocityX, float velocityY, bool consumed);
    private static Delegate GetOnNestedPreFling_Landroid_view_View_FFHandler();
    private static bool n_OnNestedPreFling_Landroid_view_View_FF(IntPtr jnienv, IntPtr native__this, IntPtr native_target, float velocityX, float velocityY);
    public sealed virtual bool OnNestedPreFling(View target, float velocityX, float velocityY);
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed);
    public sealed virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    public sealed virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    public sealed virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    public sealed virtual void OnStopNestedScroll(View target);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/InputDeviceCompat")]
public class AndroidX.Core.View.InputDeviceCompat : Object {
    [RegisterAttribute("SOURCE_ANY")]
public static int SourceAny;
    [RegisterAttribute("SOURCE_CLASS_BUTTON")]
public static int SourceClassButton;
    [RegisterAttribute("SOURCE_CLASS_JOYSTICK")]
public static int SourceClassJoystick;
    [RegisterAttribute("SOURCE_CLASS_MASK")]
public static int SourceClassMask;
    [RegisterAttribute("SOURCE_CLASS_NONE")]
public static int SourceClassNone;
    [RegisterAttribute("SOURCE_CLASS_POINTER")]
public static int SourceClassPointer;
    [RegisterAttribute("SOURCE_CLASS_POSITION")]
public static int SourceClassPosition;
    [RegisterAttribute("SOURCE_CLASS_TRACKBALL")]
public static int SourceClassTrackball;
    [RegisterAttribute("SOURCE_DPAD")]
public static int SourceDpad;
    [RegisterAttribute("SOURCE_GAMEPAD")]
public static int SourceGamepad;
    [RegisterAttribute("SOURCE_HDMI")]
public static int SourceHdmi;
    [RegisterAttribute("SOURCE_JOYSTICK")]
public static int SourceJoystick;
    [RegisterAttribute("SOURCE_KEYBOARD")]
public static int SourceKeyboard;
    [RegisterAttribute("SOURCE_MOUSE")]
public static int SourceMouse;
    [RegisterAttribute("SOURCE_ROTARY_ENCODER")]
public static int SourceRotaryEncoder;
    [RegisterAttribute("SOURCE_STYLUS")]
public static int SourceStylus;
    [RegisterAttribute("SOURCE_TOUCHPAD")]
public static int SourceTouchpad;
    [RegisterAttribute("SOURCE_TOUCHSCREEN")]
public static int SourceTouchscreen;
    [RegisterAttribute("SOURCE_TOUCH_NAVIGATION")]
public static int SourceTouchNavigation;
    [RegisterAttribute("SOURCE_TRACKBALL")]
public static int SourceTrackball;
    [RegisterAttribute("SOURCE_UNKNOWN")]
public static int SourceUnknown;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InputDeviceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static InputDeviceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/inputmethod/EditorInfoCompat")]
public class AndroidX.Core.View.InputMethod.EditorInfoCompat : Object {
    [RegisterAttribute("IME_FLAG_FORCE_ASCII")]
public static int ImeFlagForceAscii;
    [RegisterAttribute("IME_FLAG_NO_PERSONALIZED_LEARNING")]
public static int ImeFlagNoPersonalizedLearning;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EditorInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static EditorInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getContentMimeTypes", "(Landroid/view/inputmethod/EditorInfo;)[Ljava/lang/String;", "")]
public static String[] GetContentMimeTypes(EditorInfo editorInfo);
    [RegisterAttribute("getInitialSelectedText", "(Landroid/view/inputmethod/EditorInfo;I)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetInitialSelectedTextFormatted(EditorInfo editorInfo, int flags);
    public static string GetInitialSelectedText(EditorInfo editorInfo, int flags);
    [RegisterAttribute("getInitialTextAfterCursor", "(Landroid/view/inputmethod/EditorInfo;II)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetInitialTextAfterCursorFormatted(EditorInfo editorInfo, int length, int flags);
    public static string GetInitialTextAfterCursor(EditorInfo editorInfo, int length, int flags);
    [RegisterAttribute("getInitialTextBeforeCursor", "(Landroid/view/inputmethod/EditorInfo;II)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetInitialTextBeforeCursorFormatted(EditorInfo editorInfo, int length, int flags);
    public static string GetInitialTextBeforeCursor(EditorInfo editorInfo, int length, int flags);
    [RegisterAttribute("isStylusHandwritingEnabled", "(Landroid/view/inputmethod/EditorInfo;)Z", "")]
public static bool IsStylusHandwritingEnabled(EditorInfo editorInfo);
    [RegisterAttribute("setContentMimeTypes", "(Landroid/view/inputmethod/EditorInfo;[Ljava/lang/String;)V", "")]
public static void SetContentMimeTypes(EditorInfo editorInfo, String[] contentMimeTypes);
    [RegisterAttribute("setInitialSurroundingSubText", "(Landroid/view/inputmethod/EditorInfo;Ljava/lang/CharSequence;I)V", "")]
public static void SetInitialSurroundingSubText(EditorInfo editorInfo, ICharSequence subText, int subTextStart);
    public static void SetInitialSurroundingSubText(EditorInfo editorInfo, string subText, int subTextStart);
    [RegisterAttribute("setInitialSurroundingText", "(Landroid/view/inputmethod/EditorInfo;Ljava/lang/CharSequence;)V", "")]
public static void SetInitialSurroundingText(EditorInfo editorInfo, ICharSequence sourceText);
    public static void SetInitialSurroundingText(EditorInfo editorInfo, string sourceText);
    [RegisterAttribute("setStylusHandwritingEnabled", "(Landroid/view/inputmethod/EditorInfo;Z)V", "")]
public static void SetStylusHandwritingEnabled(EditorInfo editorInfo, bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/inputmethod/InputConnectionCompat")]
public class AndroidX.Core.View.InputMethod.InputConnectionCompat : Object {
    [RegisterAttribute("INPUT_CONTENT_GRANT_READ_URI_PERMISSION")]
public static int InputContentGrantReadUriPermission;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InputConnectionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static InputConnectionCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("commitContent", "(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;Landroidx/core/view/inputmethod/InputContentInfoCompat;ILandroid/os/Bundle;)Z", "")]
public static bool CommitContent(IInputConnection inputConnection, EditorInfo editorInfo, InputContentInfoCompat inputContentInfo, int flags, Bundle opts);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("createWrapper", "(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;Landroidx/core/view/inputmethod/InputConnectionCompat$OnCommitContentListener;)Landroid/view/inputmethod/InputConnection;", "")]
public static IInputConnection CreateWrapper(IInputConnection inputConnection, EditorInfo editorInfo, IOnCommitContentListener onCommitContentListener);
    [RegisterAttribute("createWrapper", "(Landroid/view/View;Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "")]
public static IInputConnection CreateWrapper(View view, IInputConnection inputConnection, EditorInfo editorInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/inputmethod/InputContentInfoCompat")]
public class AndroidX.Core.View.InputMethod.InputContentInfoCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Uri ContentUri { get; }
    public ClipDescription Description { get; }
    [NullableAttribute("2")]
public Uri LinkUri { get; }
    internal InputContentInfoCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/net/Uri;Landroid/content/ClipDescription;Landroid/net/Uri;)V", "")]
public InputContentInfoCompat(Uri contentUri, ClipDescription description, Uri linkUri);
    private static InputContentInfoCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getContentUri", "()Landroid/net/Uri;", "")]
public Uri get_ContentUri();
    [RegisterAttribute("getDescription", "()Landroid/content/ClipDescription;", "")]
public ClipDescription get_Description();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLinkUri", "()Landroid/net/Uri;", "")]
public Uri get_LinkUri();
    [RegisterAttribute("releasePermission", "()V", "")]
public void ReleasePermission();
    [RegisterAttribute("requestPermission", "()V", "")]
public void RequestPermission();
    [NullableContextAttribute("2")]
[RegisterAttribute("unwrap", "()Ljava/lang/Object;", "")]
public Object Unwrap();
    [NullableContextAttribute("2")]
[RegisterAttribute("wrap", "(Ljava/lang/Object;)Landroidx/core/view/inputmethod/InputContentInfoCompat;", "")]
public static InputContentInfoCompat Wrap(Object inputContentInfo);
}
[RegisterAttribute("androidx/core/view/OnApplyWindowInsetsListener", "", "AndroidX.Core.View.IOnApplyWindowInsetsListenerInvoker")]
public interface AndroidX.Core.View.IOnApplyWindowInsetsListener {
    [NullableContextAttribute("1")]
[RegisterAttribute("onApplyWindowInsets", "(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;)Landroidx/core/view/WindowInsetsCompat;", "GetOnApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_Handler:AndroidX.Core.View.IOnApplyWindowInsetsListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
}
[RegisterAttribute("mono/androidx/core/view/OnApplyWindowInsetsListenerImplementor")]
internal class AndroidX.Core.View.IOnApplyWindowInsetsListenerImplementor : Object {
    [NullableAttribute("2")]
public ApplyWindowInsetsHandler Handler;
    [NullableContextAttribute("1")]
public sealed virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IOnApplyWindowInsetsListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/OnApplyWindowInsetsListener")]
internal class AndroidX.Core.View.IOnApplyWindowInsetsListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_;
    private IntPtr id_onApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnApplyWindowInsetsListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnApplyWindowInsetsListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnApplyWindowInsetsListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_Handler();
    private static IntPtr n_OnApplyWindowInsets_Landroid_view_View_Landroidx_core_view_WindowInsetsCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_insets);
    public sealed virtual WindowInsetsCompat OnApplyWindowInsets(View v, WindowInsetsCompat insets);
}
[RegisterAttribute("androidx/core/view/OnReceiveContentListener", "", "AndroidX.Core.View.IOnReceiveContentListenerInvoker")]
public interface AndroidX.Core.View.IOnReceiveContentListener {
    [NullableContextAttribute("1")]
[RegisterAttribute("onReceiveContent", "(Landroid/view/View;Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;", "GetOnReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_Handler:AndroidX.Core.View.IOnReceiveContentListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ContentInfoCompat OnReceiveContent(View view, ContentInfoCompat payload);
}
[RegisterAttribute("mono/androidx/core/view/OnReceiveContentListenerImplementor")]
internal class AndroidX.Core.View.IOnReceiveContentListenerImplementor : Object {
    [NullableAttribute("2")]
public ReceiveContentHandler Handler;
    [NullableContextAttribute("1")]
public sealed virtual ContentInfoCompat OnReceiveContent(View view, ContentInfoCompat payload);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IOnReceiveContentListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/OnReceiveContentListener")]
internal class AndroidX.Core.View.IOnReceiveContentListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_;
    private IntPtr id_onReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnReceiveContentListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnReceiveContentListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnReceiveContentListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_Handler();
    private static IntPtr n_OnReceiveContent_Landroid_view_View_Landroidx_core_view_ContentInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_view, IntPtr native_payload);
    public sealed virtual ContentInfoCompat OnReceiveContent(View view, ContentInfoCompat payload);
}
[RegisterAttribute("androidx/core/view/OnReceiveContentViewBehavior", "", "AndroidX.Core.View.IOnReceiveContentViewBehaviorInvoker")]
public interface AndroidX.Core.View.IOnReceiveContentViewBehavior {
    [NullableContextAttribute("1")]
[RegisterAttribute("onReceiveContent", "(Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;", "GetOnReceiveContent_Landroidx_core_view_ContentInfoCompat_Handler:AndroidX.Core.View.IOnReceiveContentViewBehaviorInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ContentInfoCompat OnReceiveContent(ContentInfoCompat payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/OnReceiveContentViewBehavior")]
internal class AndroidX.Core.View.IOnReceiveContentViewBehaviorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onReceiveContent_Landroidx_core_view_ContentInfoCompat_;
    private IntPtr id_onReceiveContent_Landroidx_core_view_ContentInfoCompat_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IOnReceiveContentViewBehaviorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IOnReceiveContentViewBehaviorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IOnReceiveContentViewBehavior GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnReceiveContent_Landroidx_core_view_ContentInfoCompat_Handler();
    private static IntPtr n_OnReceiveContent_Landroidx_core_view_ContentInfoCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_payload);
    public sealed virtual ContentInfoCompat OnReceiveContent(ContentInfoCompat payload);
}
[RegisterAttribute("androidx/core/view/ScrollingView", "", "AndroidX.Core.View.IScrollingViewInvoker")]
public interface AndroidX.Core.View.IScrollingView {
    [RegisterAttribute("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeHorizontalScrollExtent();
    [RegisterAttribute("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeHorizontalScrollOffset();
    [RegisterAttribute("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeHorizontalScrollRange();
    [RegisterAttribute("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeVerticalScrollExtent();
    [RegisterAttribute("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeVerticalScrollOffset();
    [RegisterAttribute("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler:AndroidX.Core.View.IScrollingViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int ComputeVerticalScrollRange();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ScrollingView")]
internal class AndroidX.Core.View.IScrollingViewInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollExtent;
    private IntPtr id_computeHorizontalScrollExtent;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollOffset;
    private IntPtr id_computeHorizontalScrollOffset;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollRange;
    private IntPtr id_computeHorizontalScrollRange;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollExtent;
    private IntPtr id_computeVerticalScrollExtent;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollOffset;
    private IntPtr id_computeVerticalScrollOffset;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollRange;
    private IntPtr id_computeVerticalScrollRange;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IScrollingViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IScrollingViewInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IScrollingView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetComputeHorizontalScrollExtentHandler();
    private static int n_ComputeHorizontalScrollExtent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollExtent();
    private static Delegate GetComputeHorizontalScrollOffsetHandler();
    private static int n_ComputeHorizontalScrollOffset(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollOffset();
    private static Delegate GetComputeHorizontalScrollRangeHandler();
    private static int n_ComputeHorizontalScrollRange(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeHorizontalScrollRange();
    private static Delegate GetComputeVerticalScrollExtentHandler();
    private static int n_ComputeVerticalScrollExtent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollExtent();
    private static Delegate GetComputeVerticalScrollOffsetHandler();
    private static int n_ComputeVerticalScrollOffset(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollOffset();
    private static Delegate GetComputeVerticalScrollRangeHandler();
    private static int n_ComputeVerticalScrollRange(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int ComputeVerticalScrollRange();
}
[NullableContextAttribute("2")]
[RegisterAttribute("androidx/core/view/TintableBackgroundView", "", "AndroidX.Core.View.ITintableBackgroundViewInvoker")]
public interface AndroidX.Core.View.ITintableBackgroundView {
    public ColorStateList SupportBackgroundTintList { get; public set; }
    public Mode SupportBackgroundTintMode { get; public set; }
    [RegisterAttribute("getSupportBackgroundTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportBackgroundTintListHandler:AndroidX.Core.View.ITintableBackgroundViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_SupportBackgroundTintList();
    [RegisterAttribute("setSupportBackgroundTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.View.ITintableBackgroundViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportBackgroundTintList(ColorStateList value);
    [RegisterAttribute("getSupportBackgroundTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportBackgroundTintModeHandler:AndroidX.Core.View.ITintableBackgroundViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_SupportBackgroundTintMode();
    [RegisterAttribute("setSupportBackgroundTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.View.ITintableBackgroundViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportBackgroundTintMode(Mode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/TintableBackgroundView")]
internal class AndroidX.Core.View.ITintableBackgroundViewInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getSupportBackgroundTintList;
    private static Delegate cb_setSupportBackgroundTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportBackgroundTintList;
    private IntPtr id_setSupportBackgroundTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportBackgroundTintMode;
    private static Delegate cb_setSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportBackgroundTintMode;
    private IntPtr id_setSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ColorStateList SupportBackgroundTintList { get; public set; }
    public Mode SupportBackgroundTintMode { get; public set; }
    public ITintableBackgroundViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableBackgroundViewInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITintableBackgroundView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportBackgroundTintListHandler();
    private static IntPtr n_GetSupportBackgroundTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportBackgroundTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportBackgroundTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportBackgroundTintList();
    public sealed virtual void set_SupportBackgroundTintList(ColorStateList value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportBackgroundTintModeHandler();
    private static IntPtr n_GetSupportBackgroundTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportBackgroundTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportBackgroundTintMode();
    public sealed virtual void set_SupportBackgroundTintMode(Mode value);
}
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorListener", "", "AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker")]
public interface AndroidX.Core.View.IViewPropertyAnimatorListener {
    [NullableContextAttribute("1")]
[RegisterAttribute("onAnimationCancel", "(Landroid/view/View;)V", "GetOnAnimationCancel_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnAnimationCancel(View view);
    [NullableContextAttribute("1")]
[RegisterAttribute("onAnimationEnd", "(Landroid/view/View;)V", "GetOnAnimationEnd_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnAnimationEnd(View view);
    [NullableContextAttribute("1")]
[RegisterAttribute("onAnimationStart", "(Landroid/view/View;)V", "GetOnAnimationStart_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnAnimationStart(View view);
}
[RegisterAttribute("mono/androidx/core/view/ViewPropertyAnimatorListenerImplementor")]
internal class AndroidX.Core.View.IViewPropertyAnimatorListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<AnimationCancelEventArgs> OnAnimationCancelHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<AnimationEndEventArgs> OnAnimationEndHandler;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<AnimationStartEventArgs> OnAnimationStartHandler;
    [NullableContextAttribute("1")]
public IViewPropertyAnimatorListenerImplementor(object sender);
    [NullableContextAttribute("1")]
public sealed virtual void OnAnimationCancel(View view);
    [NullableContextAttribute("1")]
public sealed virtual void OnAnimationEnd(View view);
    [NullableContextAttribute("1")]
public sealed virtual void OnAnimationStart(View view);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IViewPropertyAnimatorListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorListener")]
internal class AndroidX.Core.View.IViewPropertyAnimatorListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationCancel_Landroid_view_View_;
    private IntPtr id_onAnimationCancel_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationEnd_Landroid_view_View_;
    private IntPtr id_onAnimationEnd_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationStart_Landroid_view_View_;
    private IntPtr id_onAnimationStart_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IViewPropertyAnimatorListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IViewPropertyAnimatorListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IViewPropertyAnimatorListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationCancel_Landroid_view_View_Handler();
    private static void n_OnAnimationCancel_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationCancel(View view);
    private static Delegate GetOnAnimationEnd_Landroid_view_View_Handler();
    private static void n_OnAnimationEnd_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationEnd(View view);
    private static Delegate GetOnAnimationStart_Landroid_view_View_Handler();
    private static void n_OnAnimationStart_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationStart(View view);
}
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorUpdateListener", "", "AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerInvoker")]
public interface AndroidX.Core.View.IViewPropertyAnimatorUpdateListener {
    [NullableContextAttribute("1")]
[RegisterAttribute("onAnimationUpdate", "(Landroid/view/View;)V", "GetOnAnimationUpdate_Landroid_view_View_Handler:AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnAnimationUpdate(View view);
}
[RegisterAttribute("mono/androidx/core/view/ViewPropertyAnimatorUpdateListenerImplementor")]
internal class AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerImplementor : Object {
    [NullableAttribute("2")]
private object sender;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public EventHandler`1<ViewPropertyAnimatorUpdateEventArgs> Handler;
    [NullableContextAttribute("1")]
public IViewPropertyAnimatorUpdateListenerImplementor(object sender);
    [NullableContextAttribute("1")]
public sealed virtual void OnAnimationUpdate(View view);
    [NullableContextAttribute("1")]
internal static bool __IsEmpty(IViewPropertyAnimatorUpdateListenerImplementor value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorUpdateListener")]
internal class AndroidX.Core.View.IViewPropertyAnimatorUpdateListenerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationUpdate_Landroid_view_View_;
    private IntPtr id_onAnimationUpdate_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IViewPropertyAnimatorUpdateListenerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IViewPropertyAnimatorUpdateListenerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IViewPropertyAnimatorUpdateListener GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnAnimationUpdate_Landroid_view_View_Handler();
    private static void n_OnAnimationUpdate_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void OnAnimationUpdate(View view);
}
[RegisterAttribute("androidx/core/view/WindowInsetsAnimationControlListenerCompat", "", "AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompatInvoker")]
public interface AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompat {
    [NullableContextAttribute("2")]
[RegisterAttribute("onCancelled", "(Landroidx/core/view/WindowInsetsAnimationControllerCompat;)V", "GetOnCancelled_Landroidx_core_view_WindowInsetsAnimationControllerCompat_Handler:AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompatInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnCancelled(WindowInsetsAnimationControllerCompat controller);
    [NullableContextAttribute("1")]
[RegisterAttribute("onFinished", "(Landroidx/core/view/WindowInsetsAnimationControllerCompat;)V", "GetOnFinished_Landroidx_core_view_WindowInsetsAnimationControllerCompat_Handler:AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompatInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnFinished(WindowInsetsAnimationControllerCompat controller);
    [NullableContextAttribute("1")]
[RegisterAttribute("onReady", "(Landroidx/core/view/WindowInsetsAnimationControllerCompat;I)V", "GetOnReady_Landroidx_core_view_WindowInsetsAnimationControllerCompat_IHandler:AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompatInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void OnReady(WindowInsetsAnimationControllerCompat controller, int types);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowInsetsAnimationControlListenerCompat")]
internal class AndroidX.Core.View.IWindowInsetsAnimationControlListenerCompatInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onCancelled_Landroidx_core_view_WindowInsetsAnimationControllerCompat_;
    private IntPtr id_onCancelled_Landroidx_core_view_WindowInsetsAnimationControllerCompat_;
    [NullableAttribute("2")]
private static Delegate cb_onFinished_Landroidx_core_view_WindowInsetsAnimationControllerCompat_;
    private IntPtr id_onFinished_Landroidx_core_view_WindowInsetsAnimationControllerCompat_;
    [NullableAttribute("2")]
private static Delegate cb_onReady_Landroidx_core_view_WindowInsetsAnimationControllerCompat_I;
    private IntPtr id_onReady_Landroidx_core_view_WindowInsetsAnimationControllerCompat_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowInsetsAnimationControlListenerCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowInsetsAnimationControlListenerCompatInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowInsetsAnimationControlListenerCompat GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnCancelled_Landroidx_core_view_WindowInsetsAnimationControllerCompat_Handler();
    private static void n_OnCancelled_Landroidx_core_view_WindowInsetsAnimationControllerCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_controller);
    [NullableContextAttribute("2")]
public sealed virtual void OnCancelled(WindowInsetsAnimationControllerCompat controller);
    private static Delegate GetOnFinished_Landroidx_core_view_WindowInsetsAnimationControllerCompat_Handler();
    private static void n_OnFinished_Landroidx_core_view_WindowInsetsAnimationControllerCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_controller);
    public sealed virtual void OnFinished(WindowInsetsAnimationControllerCompat controller);
    private static Delegate GetOnReady_Landroidx_core_view_WindowInsetsAnimationControllerCompat_IHandler();
    private static void n_OnReady_Landroidx_core_view_WindowInsetsAnimationControllerCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_controller, int types);
    public sealed virtual void OnReady(WindowInsetsAnimationControllerCompat controller, int types);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/view/KeyEventDispatcher")]
public class AndroidX.Core.View.KeyEventDispatcher : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected KeyEventDispatcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static KeyEventDispatcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("dispatchBeforeHierarchy", "(Landroid/view/View;Landroid/view/KeyEvent;)Z", "")]
public static bool DispatchBeforeHierarchy(View root, KeyEvent e);
    [RegisterAttribute("dispatchKeyEvent", "(Landroidx/core/view/KeyEventDispatcher$Component;Landroid/view/View;Landroid/view/Window$Callback;Landroid/view/KeyEvent;)Z", "")]
public static bool DispatchKeyEvent(IComponent component, View root, ICallback callback, KeyEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/LayoutInflaterCompat")]
public class AndroidX.Core.View.LayoutInflaterCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LayoutInflaterCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static LayoutInflaterCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getFactory", "(Landroid/view/LayoutInflater;)Landroidx/core/view/LayoutInflaterFactory;", "")]
public static ILayoutInflaterFactory GetFactory(LayoutInflater inflater);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setFactory", "(Landroid/view/LayoutInflater;Landroidx/core/view/LayoutInflaterFactory;)V", "")]
public static void SetFactory(LayoutInflater inflater, ILayoutInflaterFactory factory);
    [RegisterAttribute("setFactory2", "(Landroid/view/LayoutInflater;Landroid/view/LayoutInflater$Factory2;)V", "")]
public static void SetFactory2(LayoutInflater inflater, IFactory2 factory);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/view/MarginLayoutParamsCompat")]
public class AndroidX.Core.View.MarginLayoutParamsCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MarginLayoutParamsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MarginLayoutParamsCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetLayoutDirection(MarginLayoutParams lp);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMarginEnd", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetMarginEnd(MarginLayoutParams lp);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMarginStart", "(Landroid/view/ViewGroup$MarginLayoutParams;)I", "")]
public static int GetMarginStart(MarginLayoutParams lp);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isMarginRelative", "(Landroid/view/ViewGroup$MarginLayoutParams;)Z", "")]
public static bool IsMarginRelative(MarginLayoutParams lp);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("resolveLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void ResolveLayoutDirection(MarginLayoutParams lp, int layoutDirection);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setLayoutDirection", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetLayoutDirection(MarginLayoutParams lp, int layoutDirection);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setMarginEnd", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetMarginEnd(MarginLayoutParams lp, int marginEnd);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setMarginStart", "(Landroid/view/ViewGroup$MarginLayoutParams;I)V", "")]
public static void SetMarginStart(MarginLayoutParams lp, int marginStart);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MenuCompat")]
public class AndroidX.Core.View.MenuCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MenuCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MenuCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("setGroupDividerEnabled", "(Landroid/view/Menu;Z)V", "")]
public static void SetGroupDividerEnabled(IMenu menu, bool enabled);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShowAsAction", "(Landroid/view/MenuItem;I)V", "")]
public static void SetShowAsAction(IMenuItem item, int actionEnum);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MenuHostHelper")]
public class AndroidX.Core.View.MenuHostHelper : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_;
    [NullableAttribute("2")]
private static Delegate cb_addMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_;
    [NullableAttribute("2")]
private static Delegate cb_onMenuClosed_Landroid_view_Menu_;
    [NullableAttribute("2")]
private static Delegate cb_onMenuItemSelected_Landroid_view_MenuItem_;
    [NullableAttribute("2")]
private static Delegate cb_onPrepareMenu_Landroid_view_Menu_;
    [NullableAttribute("2")]
private static Delegate cb_removeMenuProvider_Landroidx_core_view_MenuProvider_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MenuHostHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/Runnable;)V", "")]
public MenuHostHelper(IRunnable onInvalidateMenuCallback);
    private static MenuHostHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider);
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Handler")]
public virtual void AddMenuProvider(IMenuProvider provider);
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider, IntPtr native_owner);
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;Landroidx/lifecycle/LifecycleOwner;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Handler")]
public virtual void AddMenuProvider(IMenuProvider provider, ILifecycleOwner owner);
    private static Delegate GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_Handler();
    private static void n_AddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider, IntPtr native_owner, IntPtr native_state);
    [RegisterAttribute("addMenuProvider", "(Landroidx/core/view/MenuProvider;Landroidx/lifecycle/LifecycleOwner;Landroidx/lifecycle/Lifecycle$State;)V", "GetAddMenuProvider_Landroidx_core_view_MenuProvider_Landroidx_lifecycle_LifecycleOwner_Landroidx_lifecycle_Lifecycle_State_Handler")]
public virtual void AddMenuProvider(IMenuProvider provider, ILifecycleOwner owner, State state);
    private static Delegate GetOnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_Handler();
    private static void n_OnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu, IntPtr native_menuInflater);
    [RegisterAttribute("onCreateMenu", "(Landroid/view/Menu;Landroid/view/MenuInflater;)V", "GetOnCreateMenu_Landroid_view_Menu_Landroid_view_MenuInflater_Handler")]
public virtual void OnCreateMenu(IMenu menu, MenuInflater menuInflater);
    private static Delegate GetOnMenuClosed_Landroid_view_Menu_Handler();
    private static void n_OnMenuClosed_Landroid_view_Menu_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("onMenuClosed", "(Landroid/view/Menu;)V", "GetOnMenuClosed_Landroid_view_Menu_Handler")]
public virtual void OnMenuClosed(IMenu menu);
    private static Delegate GetOnMenuItemSelected_Landroid_view_MenuItem_Handler();
    private static bool n_OnMenuItemSelected_Landroid_view_MenuItem_(IntPtr jnienv, IntPtr native__this, IntPtr native_item);
    [RegisterAttribute("onMenuItemSelected", "(Landroid/view/MenuItem;)Z", "GetOnMenuItemSelected_Landroid_view_MenuItem_Handler")]
public virtual bool OnMenuItemSelected(IMenuItem item);
    private static Delegate GetOnPrepareMenu_Landroid_view_Menu_Handler();
    private static void n_OnPrepareMenu_Landroid_view_Menu_(IntPtr jnienv, IntPtr native__this, IntPtr native_menu);
    [RegisterAttribute("onPrepareMenu", "(Landroid/view/Menu;)V", "GetOnPrepareMenu_Landroid_view_Menu_Handler")]
public virtual void OnPrepareMenu(IMenu menu);
    private static Delegate GetRemoveMenuProvider_Landroidx_core_view_MenuProvider_Handler();
    private static void n_RemoveMenuProvider_Landroidx_core_view_MenuProvider_(IntPtr jnienv, IntPtr native__this, IntPtr native_provider);
    [RegisterAttribute("removeMenuProvider", "(Landroidx/core/view/MenuProvider;)V", "GetRemoveMenuProvider_Landroidx_core_view_MenuProvider_Handler")]
public virtual void RemoveMenuProvider(IMenuProvider provider);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MenuItemCompat")]
public class AndroidX.Core.View.MenuItemCompat : Object {
    [RegisterAttribute("SHOW_AS_ACTION_ALWAYS")]
[ObsoleteAttribute("deprecated")]
public static int ShowAsActionAlways;
    [RegisterAttribute("SHOW_AS_ACTION_COLLAPSE_ACTION_VIEW")]
[ObsoleteAttribute("deprecated")]
public static int ShowAsActionCollapseActionView;
    [RegisterAttribute("SHOW_AS_ACTION_IF_ROOM")]
[ObsoleteAttribute("deprecated")]
public static int ShowAsActionIfRoom;
    [RegisterAttribute("SHOW_AS_ACTION_NEVER")]
[ObsoleteAttribute("deprecated")]
public static int ShowAsActionNever;
    [RegisterAttribute("SHOW_AS_ACTION_WITH_TEXT")]
[ObsoleteAttribute("deprecated")]
public static int ShowAsActionWithText;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MenuItemCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MenuItemCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("collapseActionView", "(Landroid/view/MenuItem;)Z", "")]
public static bool CollapseActionView(IMenuItem item);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("expandActionView", "(Landroid/view/MenuItem;)Z", "")]
public static bool ExpandActionView(IMenuItem item);
    [RegisterAttribute("getActionProvider", "(Landroid/view/MenuItem;)Landroidx/core/view/ActionProvider;", "")]
public static ActionProvider GetActionProvider(IMenuItem item);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getActionView", "(Landroid/view/MenuItem;)Landroid/view/View;", "")]
public static View GetActionView(IMenuItem item);
    [RegisterAttribute("getAlphabeticModifiers", "(Landroid/view/MenuItem;)I", "")]
public static int GetAlphabeticModifiers(IMenuItem item);
    [RegisterAttribute("getContentDescription", "(Landroid/view/MenuItem;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetContentDescriptionFormatted(IMenuItem item);
    public static string GetContentDescription(IMenuItem item);
    [RegisterAttribute("getIconTintList", "(Landroid/view/MenuItem;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetIconTintList(IMenuItem item);
    [RegisterAttribute("getIconTintMode", "(Landroid/view/MenuItem;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetIconTintMode(IMenuItem item);
    [RegisterAttribute("getNumericModifiers", "(Landroid/view/MenuItem;)I", "")]
public static int GetNumericModifiers(IMenuItem item);
    [RegisterAttribute("getTooltipText", "(Landroid/view/MenuItem;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetTooltipTextFormatted(IMenuItem item);
    public static string GetTooltipText(IMenuItem item);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("isActionViewExpanded", "(Landroid/view/MenuItem;)Z", "")]
public static bool IsActionViewExpanded(IMenuItem item);
    [NullableContextAttribute("2")]
[RegisterAttribute("setActionProvider", "(Landroid/view/MenuItem;Landroidx/core/view/ActionProvider;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionProvider(IMenuItem item, ActionProvider provider);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setActionView", "(Landroid/view/MenuItem;Landroid/view/View;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionView(IMenuItem item, View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setActionView", "(Landroid/view/MenuItem;I)Landroid/view/MenuItem;", "")]
public static IMenuItem SetActionView(IMenuItem item, int resId);
    [RegisterAttribute("setAlphabeticShortcut", "(Landroid/view/MenuItem;CI)V", "")]
public static void SetAlphabeticShortcut(IMenuItem item, char alphaChar, int alphaModifiers);
    [RegisterAttribute("setContentDescription", "(Landroid/view/MenuItem;Ljava/lang/CharSequence;)V", "")]
public static void SetContentDescription(IMenuItem item, ICharSequence contentDescription);
    public static void SetContentDescription(IMenuItem item, string contentDescription);
    [RegisterAttribute("setIconTintList", "(Landroid/view/MenuItem;Landroid/content/res/ColorStateList;)V", "")]
public static void SetIconTintList(IMenuItem item, ColorStateList tint);
    [RegisterAttribute("setIconTintMode", "(Landroid/view/MenuItem;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetIconTintMode(IMenuItem item, Mode tintMode);
    [RegisterAttribute("setNumericShortcut", "(Landroid/view/MenuItem;CI)V", "")]
public static void SetNumericShortcut(IMenuItem item, char numericChar, int numericModifiers);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOnActionExpandListener", "(Landroid/view/MenuItem;Landroidx/core/view/MenuItemCompat$OnActionExpandListener;)Landroid/view/MenuItem;", "")]
public static IMenuItem SetOnActionExpandListener(IMenuItem item, IOnActionExpandListener listener);
    [RegisterAttribute("setShortcut", "(Landroid/view/MenuItem;CCII)V", "")]
public static void SetShortcut(IMenuItem item, char numericChar, char alphaChar, int numericModifiers, int alphaModifiers);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShowAsAction", "(Landroid/view/MenuItem;I)V", "")]
public static void SetShowAsAction(IMenuItem item, int actionEnum);
    [RegisterAttribute("setTooltipText", "(Landroid/view/MenuItem;Ljava/lang/CharSequence;)V", "")]
public static void SetTooltipText(IMenuItem item, ICharSequence tooltipText);
    public static void SetTooltipText(IMenuItem item, string tooltipText);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/MotionEventCompat")]
public class AndroidX.Core.View.MotionEventCompat : Object {
    [RegisterAttribute("ACTION_HOVER_ENTER")]
[ObsoleteAttribute("deprecated")]
public static int ActionHoverEnter;
    [RegisterAttribute("ACTION_HOVER_EXIT")]
[ObsoleteAttribute("deprecated")]
public static int ActionHoverExit;
    [RegisterAttribute("ACTION_HOVER_MOVE")]
[ObsoleteAttribute("deprecated")]
public static int ActionHoverMove;
    [RegisterAttribute("ACTION_MASK")]
[ObsoleteAttribute("deprecated")]
public static int ActionMask;
    [RegisterAttribute("ACTION_POINTER_DOWN")]
[ObsoleteAttribute("deprecated")]
public static int ActionPointerDown;
    [RegisterAttribute("ACTION_POINTER_INDEX_MASK")]
[ObsoleteAttribute("deprecated")]
public static int ActionPointerIndexMask;
    [RegisterAttribute("ACTION_POINTER_INDEX_SHIFT")]
[ObsoleteAttribute("deprecated")]
public static int ActionPointerIndexShift;
    [RegisterAttribute("ACTION_POINTER_UP")]
[ObsoleteAttribute("deprecated")]
public static int ActionPointerUp;
    [RegisterAttribute("ACTION_SCROLL")]
[ObsoleteAttribute("deprecated")]
public static int ActionScroll;
    [RegisterAttribute("AXIS_BRAKE")]
[ObsoleteAttribute("deprecated")]
public static int AxisBrake;
    [RegisterAttribute("AXIS_DISTANCE")]
[ObsoleteAttribute("deprecated")]
public static int AxisDistance;
    [RegisterAttribute("AXIS_GAS")]
[ObsoleteAttribute("deprecated")]
public static int AxisGas;
    [RegisterAttribute("AXIS_GENERIC_1")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric1;
    [RegisterAttribute("AXIS_GENERIC_10")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric10;
    [RegisterAttribute("AXIS_GENERIC_11")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric11;
    [RegisterAttribute("AXIS_GENERIC_12")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric12;
    [RegisterAttribute("AXIS_GENERIC_13")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric13;
    [RegisterAttribute("AXIS_GENERIC_14")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric14;
    [RegisterAttribute("AXIS_GENERIC_15")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric15;
    [RegisterAttribute("AXIS_GENERIC_16")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric16;
    [RegisterAttribute("AXIS_GENERIC_2")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric2;
    [RegisterAttribute("AXIS_GENERIC_3")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric3;
    [RegisterAttribute("AXIS_GENERIC_4")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric4;
    [RegisterAttribute("AXIS_GENERIC_5")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric5;
    [RegisterAttribute("AXIS_GENERIC_6")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric6;
    [RegisterAttribute("AXIS_GENERIC_7")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric7;
    [RegisterAttribute("AXIS_GENERIC_8")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric8;
    [RegisterAttribute("AXIS_GENERIC_9")]
[ObsoleteAttribute("deprecated")]
public static int AxisGeneric9;
    [RegisterAttribute("AXIS_HAT_X")]
[ObsoleteAttribute("deprecated")]
public static int AxisHatX;
    [RegisterAttribute("AXIS_HAT_Y")]
[ObsoleteAttribute("deprecated")]
public static int AxisHatY;
    [RegisterAttribute("AXIS_HSCROLL")]
[ObsoleteAttribute("deprecated")]
public static int AxisHscroll;
    [RegisterAttribute("AXIS_LTRIGGER")]
[ObsoleteAttribute("deprecated")]
public static int AxisLtrigger;
    [RegisterAttribute("AXIS_ORIENTATION")]
[ObsoleteAttribute("deprecated")]
public static int AxisOrientation;
    [RegisterAttribute("AXIS_PRESSURE")]
[ObsoleteAttribute("deprecated")]
public static int AxisPressure;
    [RegisterAttribute("AXIS_RELATIVE_X")]
public static int AxisRelativeX;
    [RegisterAttribute("AXIS_RELATIVE_Y")]
public static int AxisRelativeY;
    [RegisterAttribute("AXIS_RTRIGGER")]
[ObsoleteAttribute("deprecated")]
public static int AxisRtrigger;
    [RegisterAttribute("AXIS_RUDDER")]
[ObsoleteAttribute("deprecated")]
public static int AxisRudder;
    [RegisterAttribute("AXIS_RX")]
[ObsoleteAttribute("deprecated")]
public static int AxisRx;
    [RegisterAttribute("AXIS_RY")]
[ObsoleteAttribute("deprecated")]
public static int AxisRy;
    [RegisterAttribute("AXIS_RZ")]
[ObsoleteAttribute("deprecated")]
public static int AxisRz;
    [RegisterAttribute("AXIS_SCROLL")]
public static int AxisScroll;
    [RegisterAttribute("AXIS_SIZE")]
[ObsoleteAttribute("deprecated")]
public static int AxisSize;
    [RegisterAttribute("AXIS_THROTTLE")]
[ObsoleteAttribute("deprecated")]
public static int AxisThrottle;
    [RegisterAttribute("AXIS_TILT")]
[ObsoleteAttribute("deprecated")]
public static int AxisTilt;
    [RegisterAttribute("AXIS_TOOL_MAJOR")]
[ObsoleteAttribute("deprecated")]
public static int AxisToolMajor;
    [RegisterAttribute("AXIS_TOOL_MINOR")]
[ObsoleteAttribute("deprecated")]
public static int AxisToolMinor;
    [RegisterAttribute("AXIS_TOUCH_MAJOR")]
[ObsoleteAttribute("deprecated")]
public static int AxisTouchMajor;
    [RegisterAttribute("AXIS_TOUCH_MINOR")]
[ObsoleteAttribute("deprecated")]
public static int AxisTouchMinor;
    [RegisterAttribute("AXIS_VSCROLL")]
[ObsoleteAttribute("deprecated")]
public static int AxisVscroll;
    [RegisterAttribute("AXIS_WHEEL")]
[ObsoleteAttribute("deprecated")]
public static int AxisWheel;
    [RegisterAttribute("AXIS_X")]
[ObsoleteAttribute("deprecated")]
public static int AxisX;
    [RegisterAttribute("AXIS_Y")]
[ObsoleteAttribute("deprecated")]
public static int AxisY;
    [RegisterAttribute("AXIS_Z")]
[ObsoleteAttribute("deprecated")]
public static int AxisZ;
    [RegisterAttribute("BUTTON_PRIMARY")]
[ObsoleteAttribute("deprecated")]
public static int ButtonPrimary;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MotionEventCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MotionEventCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("findPointerIndex", "(Landroid/view/MotionEvent;I)I", "")]
public static int FindPointerIndex(MotionEvent e, int pointerId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getActionIndex", "(Landroid/view/MotionEvent;)I", "")]
public static int GetActionIndex(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getActionMasked", "(Landroid/view/MotionEvent;)I", "")]
public static int GetActionMasked(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getAxisValue", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetAxisValue(MotionEvent e, int axis);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getAxisValue", "(Landroid/view/MotionEvent;II)F", "")]
public static float GetAxisValue(MotionEvent e, int axis, int pointerIndex);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getButtonState", "(Landroid/view/MotionEvent;)I", "")]
public static int GetButtonState(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPointerCount", "(Landroid/view/MotionEvent;)I", "")]
public static int GetPointerCount(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPointerId", "(Landroid/view/MotionEvent;I)I", "")]
public static int GetPointerId(MotionEvent e, int pointerIndex);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getSource", "(Landroid/view/MotionEvent;)I", "")]
public static int GetSource(MotionEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getX", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetX(MotionEvent e, int pointerIndex);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getY", "(Landroid/view/MotionEvent;I)F", "")]
public static float GetY(MotionEvent e, int pointerIndex);
    [NullableContextAttribute("1")]
[RegisterAttribute("isFromSource", "(Landroid/view/MotionEvent;I)Z", "")]
public static bool IsFromSource(MotionEvent e, int source);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingChildHelper")]
public class AndroidX.Core.View.NestedScrollingChildHelper : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent;
    [NullableAttribute("2")]
private static Delegate cb_isNestedScrollingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setNestedScrollingEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedFling_FFZ;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreFling_FF;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent_I;
    [NullableAttribute("2")]
private static Delegate cb_onDetachedFromWindow;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_II;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasNestedScrollingParent { get; }
    public bool NestedScrollingEnabled { get; public set; }
    protected NestedScrollingChildHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public NestedScrollingChildHelper(View view);
    private static NestedScrollingChildHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasNestedScrollingParentHandler();
    private static bool n_HasNestedScrollingParent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasNestedScrollingParent", "()Z", "GetHasNestedScrollingParentHandler")]
public virtual bool get_HasNestedScrollingParent();
    private static Delegate GetIsNestedScrollingEnabledHandler();
    private static bool n_IsNestedScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetNestedScrollingEnabled_ZHandler();
    private static void n_SetNestedScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isNestedScrollingEnabled", "()Z", "GetIsNestedScrollingEnabledHandler")]
public virtual bool get_NestedScrollingEnabled();
    [RegisterAttribute("setNestedScrollingEnabled", "(Z)V", "GetSetNestedScrollingEnabled_ZHandler")]
public virtual void set_NestedScrollingEnabled(bool value);
    private static Delegate GetDispatchNestedFling_FFZHandler();
    private static bool n_DispatchNestedFling_FFZ(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedFling", "(FFZ)Z", "GetDispatchNestedFling_FFZHandler")]
public virtual bool DispatchNestedFling(float velocityX, float velocityY, bool consumed);
    private static Delegate GetDispatchNestedPreFling_FFHandler();
    private static bool n_DispatchNestedPreFling_FF(IntPtr jnienv, IntPtr native__this, float velocityX, float velocityY);
    [RegisterAttribute("dispatchNestedPreFling", "(FF)Z", "GetDispatchNestedPreFling_FFHandler")]
public virtual bool DispatchNestedPreFling(float velocityX, float velocityY);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayI(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(II[I[I)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIHandler")]
public virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayII(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(II[I[II)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIIHandler")]
public virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[I)Z", "GetDispatchNestedScroll_IIIIarrayIHandler")]
public virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayII(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[II)Z", "GetDispatchNestedScroll_IIIIarrayIIHandler")]
public virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIarrayIHandler();
    private static void n_DispatchNestedScroll_IIIIarrayIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type, IntPtr native_consumed);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[II[I)V", "GetDispatchNestedScroll_IIIIarrayIIarrayIHandler")]
public virtual void DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type, Int32[] consumed);
    private static Delegate GetInvokeHasNestedScrollingParent_IHandler();
    private static bool n_InvokeHasNestedScrollingParent_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("hasNestedScrollingParent", "(I)Z", "GetInvokeHasNestedScrollingParent_IHandler")]
public virtual bool InvokeHasNestedScrollingParent(int type);
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler")]
public virtual void OnStopNestedScroll(View child);
    private static Delegate GetStartNestedScroll_IHandler();
    private static bool n_StartNestedScroll_I(IntPtr jnienv, IntPtr native__this, int axes);
    [RegisterAttribute("startNestedScroll", "(I)Z", "GetStartNestedScroll_IHandler")]
public virtual bool StartNestedScroll(int axes);
    private static Delegate GetStartNestedScroll_IIHandler();
    private static bool n_StartNestedScroll_II(IntPtr jnienv, IntPtr native__this, int axes, int type);
    [RegisterAttribute("startNestedScroll", "(II)Z", "GetStartNestedScroll_IIHandler")]
public virtual bool StartNestedScroll(int axes, int type);
    private static Delegate GetStopNestedScrollHandler();
    private static void n_StopNestedScroll(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stopNestedScroll", "()V", "GetStopNestedScrollHandler")]
public virtual void StopNestedScroll();
    private static Delegate GetStopNestedScroll_IHandler();
    private static void n_StopNestedScroll_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("stopNestedScroll", "(I)V", "GetStopNestedScroll_IHandler")]
public virtual void StopNestedScroll(int type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/NestedScrollingParentHelper")]
public class AndroidX.Core.View.NestedScrollingParentHelper : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getNestedScrollAxes;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_I;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int NestedScrollAxes { get; }
    protected NestedScrollingParentHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/ViewGroup;)V", "")]
public NestedScrollingParentHelper(ViewGroup viewGroup);
    private static NestedScrollingParentHelper();
    public virtual void OnNestedScrollAccepted(View child, View target, int axis, int type);
    public virtual void OnNestedScrollAccepted(View child, View target, int axes);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetNestedScrollAxesHandler();
    private static int n_GetNestedScrollAxes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getNestedScrollAxes", "()I", "GetGetNestedScrollAxesHandler")]
public virtual int get_NestedScrollAxes();
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;I)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IHandler")]
public virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;II)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_Handler();
    private static void n_OnStopNestedScroll_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_target);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;)V", "GetOnStopNestedScroll_Landroid_view_View_Handler")]
public virtual void OnStopNestedScroll(View target);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;I)V", "GetOnStopNestedScroll_Landroid_view_View_IHandler")]
public virtual void OnStopNestedScroll(View target, int type);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/OneShotPreDrawListener")]
public class AndroidX.Core.View.OneShotPreDrawListener : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal OneShotPreDrawListener(IntPtr javaReference, JniHandleOwnership transfer);
    private static OneShotPreDrawListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("add", "(Landroid/view/View;Ljava/lang/Runnable;)Landroidx/core/view/OneShotPreDrawListener;", "")]
public static OneShotPreDrawListener Add(View view, IRunnable runnable);
    [RegisterAttribute("onPreDraw", "()Z", "")]
public sealed virtual bool OnPreDraw();
    [RegisterAttribute("onViewAttachedToWindow", "(Landroid/view/View;)V", "")]
public sealed virtual void OnViewAttachedToWindow(View v);
    [RegisterAttribute("onViewDetachedFromWindow", "(Landroid/view/View;)V", "")]
public sealed virtual void OnViewDetachedFromWindow(View v);
    [RegisterAttribute("removeListener", "()V", "")]
public void RemoveListener();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/PointerIconCompat")]
public class AndroidX.Core.View.PointerIconCompat : Object {
    [RegisterAttribute("TYPE_ALIAS")]
public static int TypeAlias;
    [RegisterAttribute("TYPE_ALL_SCROLL")]
public static int TypeAllScroll;
    [RegisterAttribute("TYPE_ARROW")]
public static int TypeArrow;
    [RegisterAttribute("TYPE_CELL")]
public static int TypeCell;
    [RegisterAttribute("TYPE_CONTEXT_MENU")]
public static int TypeContextMenu;
    [RegisterAttribute("TYPE_COPY")]
public static int TypeCopy;
    [RegisterAttribute("TYPE_CROSSHAIR")]
public static int TypeCrosshair;
    [RegisterAttribute("TYPE_DEFAULT")]
public static int TypeDefault;
    [RegisterAttribute("TYPE_GRAB")]
public static int TypeGrab;
    [RegisterAttribute("TYPE_GRABBING")]
public static int TypeGrabbing;
    [RegisterAttribute("TYPE_HAND")]
public static int TypeHand;
    [RegisterAttribute("TYPE_HELP")]
public static int TypeHelp;
    [RegisterAttribute("TYPE_HORIZONTAL_DOUBLE_ARROW")]
public static int TypeHorizontalDoubleArrow;
    [RegisterAttribute("TYPE_NO_DROP")]
public static int TypeNoDrop;
    [RegisterAttribute("TYPE_NULL")]
public static int TypeNull;
    [RegisterAttribute("TYPE_TEXT")]
public static int TypeText;
    [RegisterAttribute("TYPE_TOP_LEFT_DIAGONAL_DOUBLE_ARROW")]
public static int TypeTopLeftDiagonalDoubleArrow;
    [RegisterAttribute("TYPE_TOP_RIGHT_DIAGONAL_DOUBLE_ARROW")]
public static int TypeTopRightDiagonalDoubleArrow;
    [RegisterAttribute("TYPE_VERTICAL_DOUBLE_ARROW")]
public static int TypeVerticalDoubleArrow;
    [RegisterAttribute("TYPE_VERTICAL_TEXT")]
public static int TypeVerticalText;
    [RegisterAttribute("TYPE_WAIT")]
public static int TypeWait;
    [RegisterAttribute("TYPE_ZOOM_IN")]
public static int TypeZoomIn;
    [RegisterAttribute("TYPE_ZOOM_OUT")]
public static int TypeZoomOut;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object PointerIcon { get; }
    internal PointerIconCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PointerIconCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getPointerIcon", "()Ljava/lang/Object;", "")]
public Object get_PointerIcon();
    [RegisterAttribute("create", "(Landroid/graphics/Bitmap;FF)Landroidx/core/view/PointerIconCompat;", "")]
public static PointerIconCompat Create(Bitmap bitmap, float hotSpotX, float hotSpotY);
    [RegisterAttribute("getSystemIcon", "(Landroid/content/Context;I)Landroidx/core/view/PointerIconCompat;", "")]
public static PointerIconCompat GetSystemIcon(Context context, int style);
    [RegisterAttribute("load", "(Landroid/content/res/Resources;I)Landroidx/core/view/PointerIconCompat;", "")]
public static PointerIconCompat Load(Resources resources, int resourceId);
}
public class AndroidX.Core.View.ReceiveContentHandler : MulticastDelegate {
    public ReceiveContentHandler(object object, IntPtr method);
    [NullableContextAttribute("1")]
public virtual ContentInfoCompat Invoke(View view, ContentInfoCompat payload);
    public virtual IAsyncResult BeginInvoke(View view, ContentInfoCompat payload, AsyncCallback callback, object object);
    public virtual ContentInfoCompat EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ScaleGestureDetectorCompat")]
public class AndroidX.Core.View.ScaleGestureDetectorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ScaleGestureDetectorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ScaleGestureDetectorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isQuickScaleEnabled", "(Landroid/view/ScaleGestureDetector;)Z", "")]
public static bool IsQuickScaleEnabled(ScaleGestureDetector scaleGestureDetector);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("isQuickScaleEnabled", "(Ljava/lang/Object;)Z", "")]
public static bool IsQuickScaleEnabled(Object scaleGestureDetector);
    [RegisterAttribute("setQuickScaleEnabled", "(Landroid/view/ScaleGestureDetector;Z)V", "")]
public static void SetQuickScaleEnabled(ScaleGestureDetector scaleGestureDetector, bool enabled);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setQuickScaleEnabled", "(Ljava/lang/Object;Z)V", "")]
public static void SetQuickScaleEnabled(Object scaleGestureDetector, bool enabled);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/SoftwareKeyboardControllerCompat")]
public class AndroidX.Core.View.SoftwareKeyboardControllerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SoftwareKeyboardControllerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public SoftwareKeyboardControllerCompat(View view);
    private static SoftwareKeyboardControllerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("hide", "()V", "")]
public void Hide();
    [RegisterAttribute("show", "()V", "")]
public void Show();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/VelocityTrackerCompat")]
public class AndroidX.Core.View.VelocityTrackerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal VelocityTrackerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static VelocityTrackerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addMovement", "(Landroid/view/VelocityTracker;Landroid/view/MotionEvent;)V", "")]
public static void AddMovement(VelocityTracker tracker, MotionEvent e);
    [RegisterAttribute("clear", "(Landroid/view/VelocityTracker;)V", "")]
public static void Clear(VelocityTracker tracker);
    [RegisterAttribute("computeCurrentVelocity", "(Landroid/view/VelocityTracker;I)V", "")]
public static void ComputeCurrentVelocity(VelocityTracker tracker, int units);
    [RegisterAttribute("computeCurrentVelocity", "(Landroid/view/VelocityTracker;IF)V", "")]
public static void ComputeCurrentVelocity(VelocityTracker tracker, int units, float maxVelocity);
    [RegisterAttribute("getAxisVelocity", "(Landroid/view/VelocityTracker;I)F", "")]
public static float GetAxisVelocity(VelocityTracker tracker, int axis);
    [RegisterAttribute("getAxisVelocity", "(Landroid/view/VelocityTracker;II)F", "")]
public static float GetAxisVelocity(VelocityTracker tracker, int axis, int pointerId);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getXVelocity", "(Landroid/view/VelocityTracker;I)F", "")]
public static float GetXVelocity(VelocityTracker tracker, int pointerId);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getYVelocity", "(Landroid/view/VelocityTracker;I)F", "")]
public static float GetYVelocity(VelocityTracker tracker, int pointerId);
    [RegisterAttribute("isAxisSupported", "(Landroid/view/VelocityTracker;I)Z", "")]
public static bool IsAxisSupported(VelocityTracker tracker, int axis);
    [RegisterAttribute("recycle", "(Landroid/view/VelocityTracker;)V", "")]
public static void Recycle(VelocityTracker tracker);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewCompat")]
public class AndroidX.Core.View.ViewCompat : Object {
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_ASSERTIVE")]
public static int AccessibilityLiveRegionAssertive;
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_NONE")]
public static int AccessibilityLiveRegionNone;
    [RegisterAttribute("ACCESSIBILITY_LIVE_REGION_POLITE")]
public static int AccessibilityLiveRegionPolite;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_AUTO")]
[ObsoleteAttribute("deprecated")]
public static int ImportantForAccessibilityAuto;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_NO")]
[ObsoleteAttribute("deprecated")]
public static int ImportantForAccessibilityNo;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_NO_HIDE_DESCENDANTS")]
[ObsoleteAttribute("deprecated")]
public static int ImportantForAccessibilityNoHideDescendants;
    [RegisterAttribute("IMPORTANT_FOR_ACCESSIBILITY_YES")]
[ObsoleteAttribute("deprecated")]
public static int ImportantForAccessibilityYes;
    [RegisterAttribute("IMPORTANT_FOR_CONTENT_CAPTURE_AUTO")]
public static int ImportantForContentCaptureAuto;
    [RegisterAttribute("IMPORTANT_FOR_CONTENT_CAPTURE_NO")]
public static int ImportantForContentCaptureNo;
    [RegisterAttribute("IMPORTANT_FOR_CONTENT_CAPTURE_NO_EXCLUDE_DESCENDANTS")]
public static int ImportantForContentCaptureNoExcludeDescendants;
    [RegisterAttribute("IMPORTANT_FOR_CONTENT_CAPTURE_YES")]
public static int ImportantForContentCaptureYes;
    [RegisterAttribute("IMPORTANT_FOR_CONTENT_CAPTURE_YES_EXCLUDE_DESCENDANTS")]
public static int ImportantForContentCaptureYesExcludeDescendants;
    [RegisterAttribute("LAYER_TYPE_HARDWARE")]
[ObsoleteAttribute("deprecated")]
public static int LayerTypeHardware;
    [RegisterAttribute("LAYER_TYPE_NONE")]
[ObsoleteAttribute("deprecated")]
public static int LayerTypeNone;
    [RegisterAttribute("LAYER_TYPE_SOFTWARE")]
[ObsoleteAttribute("deprecated")]
public static int LayerTypeSoftware;
    [RegisterAttribute("LAYOUT_DIRECTION_INHERIT")]
[ObsoleteAttribute("deprecated")]
public static int LayoutDirectionInherit;
    [RegisterAttribute("LAYOUT_DIRECTION_LOCALE")]
[ObsoleteAttribute("deprecated")]
public static int LayoutDirectionLocale;
    [RegisterAttribute("LAYOUT_DIRECTION_LTR")]
[ObsoleteAttribute("deprecated")]
public static int LayoutDirectionLtr;
    [RegisterAttribute("LAYOUT_DIRECTION_RTL")]
[ObsoleteAttribute("deprecated")]
public static int LayoutDirectionRtl;
    [RegisterAttribute("MEASURED_HEIGHT_STATE_SHIFT")]
[ObsoleteAttribute("deprecated")]
public static int MeasuredHeightStateShift;
    [RegisterAttribute("MEASURED_SIZE_MASK")]
[ObsoleteAttribute("deprecated")]
public static int MeasuredSizeMask;
    [RegisterAttribute("MEASURED_STATE_MASK")]
[ObsoleteAttribute("deprecated")]
public static int MeasuredStateMask;
    [RegisterAttribute("MEASURED_STATE_TOO_SMALL")]
[ObsoleteAttribute("deprecated")]
public static int MeasuredStateTooSmall;
    [RegisterAttribute("OVER_SCROLL_ALWAYS")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollAlways;
    [RegisterAttribute("OVER_SCROLL_IF_CONTENT_SCROLLS")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollIfContentScrolls;
    [RegisterAttribute("OVER_SCROLL_NEVER")]
[ObsoleteAttribute("deprecated")]
public static int OverScrollNever;
    [RegisterAttribute("SCROLL_AXIS_HORIZONTAL")]
public static int ScrollAxisHorizontal;
    [RegisterAttribute("SCROLL_AXIS_NONE")]
public static int ScrollAxisNone;
    [RegisterAttribute("SCROLL_AXIS_VERTICAL")]
public static int ScrollAxisVertical;
    [RegisterAttribute("SCROLL_INDICATOR_BOTTOM")]
public static int ScrollIndicatorBottom;
    [RegisterAttribute("SCROLL_INDICATOR_END")]
public static int ScrollIndicatorEnd;
    [RegisterAttribute("SCROLL_INDICATOR_LEFT")]
public static int ScrollIndicatorLeft;
    [RegisterAttribute("SCROLL_INDICATOR_RIGHT")]
public static int ScrollIndicatorRight;
    [RegisterAttribute("SCROLL_INDICATOR_START")]
public static int ScrollIndicatorStart;
    [RegisterAttribute("SCROLL_INDICATOR_TOP")]
public static int ScrollIndicatorTop;
    [RegisterAttribute("TYPE_NON_TOUCH")]
public static int TypeNonTouch;
    [RegisterAttribute("TYPE_TOUCH")]
public static int TypeTouch;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("addAccessibilityAction", "(Landroid/view/View;Ljava/lang/CharSequence;Landroidx/core/view/accessibility/AccessibilityViewCommand;)I", "")]
public static int AddAccessibilityAction(View view, ICharSequence label, IAccessibilityViewCommand command);
    public static int AddAccessibilityAction(View view, string label, IAccessibilityViewCommand command);
    [RegisterAttribute("addKeyboardNavigationClusters", "(Landroid/view/View;Ljava/util/Collection;I)V", "")]
public static void AddKeyboardNavigationClusters(View view, ICollection`1<View> views, int direction);
    [RegisterAttribute("addOnUnhandledKeyEventListener", "(Landroid/view/View;Landroidx/core/view/ViewCompat$OnUnhandledKeyEventListenerCompat;)V", "")]
public static void AddOnUnhandledKeyEventListener(View v, IOnUnhandledKeyEventListenerCompat listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("animate", "(Landroid/view/View;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public static ViewPropertyAnimatorCompat Animate(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("canScrollHorizontally", "(Landroid/view/View;I)Z", "")]
public static bool CanScrollHorizontally(View view, int direction);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("canScrollVertically", "(Landroid/view/View;I)Z", "")]
public static bool CanScrollVertically(View view, int direction);
    [RegisterAttribute("cancelDragAndDrop", "(Landroid/view/View;)V", "")]
public static void CancelDragAndDrop(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("combineMeasuredStates", "(II)I", "")]
public static int CombineMeasuredStates(int curState, int newState);
    [RegisterAttribute("computeSystemWindowInsets", "(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;Landroid/graphics/Rect;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat ComputeSystemWindowInsets(View view, WindowInsetsCompat insets, Rect outLocalInsets);
    [RegisterAttribute("dispatchApplyWindowInsets", "(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat DispatchApplyWindowInsets(View view, WindowInsetsCompat insets);
    [RegisterAttribute("dispatchFinishTemporaryDetach", "(Landroid/view/View;)V", "")]
public static void DispatchFinishTemporaryDetach(View view);
    [RegisterAttribute("dispatchNestedFling", "(Landroid/view/View;FFZ)Z", "")]
public static bool DispatchNestedFling(View view, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("dispatchNestedPreFling", "(Landroid/view/View;FF)Z", "")]
public static bool DispatchNestedPreFling(View view, float velocityX, float velocityY);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(Landroid/view/View;II[I[I)Z", "")]
public static bool DispatchNestedPreScroll(View view, int dx, int dy, Int32[] consumed, Int32[] offsetInWindow);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(Landroid/view/View;II[I[II)Z", "")]
public static bool DispatchNestedPreScroll(View view, int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    [RegisterAttribute("dispatchNestedScroll", "(Landroid/view/View;IIII[I)Z", "")]
public static bool DispatchNestedScroll(View view, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow);
    [RegisterAttribute("dispatchNestedScroll", "(Landroid/view/View;IIII[II)Z", "")]
public static bool DispatchNestedScroll(View view, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    [RegisterAttribute("dispatchNestedScroll", "(Landroid/view/View;IIII[II[I)V", "")]
public static void DispatchNestedScroll(View view, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type, Int32[] consumed);
    [RegisterAttribute("dispatchStartTemporaryDetach", "(Landroid/view/View;)V", "")]
public static void DispatchStartTemporaryDetach(View view);
    [RegisterAttribute("enableAccessibleClickableSpanSupport", "(Landroid/view/View;)V", "")]
public static void EnableAccessibleClickableSpanSupport(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("generateViewId", "()I", "")]
public static int GenerateViewId();
    [RegisterAttribute("getAccessibilityDelegate", "(Landroid/view/View;)Landroidx/core/view/AccessibilityDelegateCompat;", "")]
public static AccessibilityDelegateCompat GetAccessibilityDelegate(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getAccessibilityLiveRegion", "(Landroid/view/View;)I", "")]
public static int GetAccessibilityLiveRegion(View view);
    [RegisterAttribute("getAccessibilityNodeProvider", "(Landroid/view/View;)Landroidx/core/view/accessibility/AccessibilityNodeProviderCompat;", "")]
public static AccessibilityNodeProviderCompat GetAccessibilityNodeProvider(View view);
    [RegisterAttribute("getAccessibilityPaneTitle", "(Landroid/view/View;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetAccessibilityPaneTitleFormatted(View view);
    public static string GetAccessibilityPaneTitle(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getAlpha", "(Landroid/view/View;)F", "")]
public static float GetAlpha(View view);
    [RegisterAttribute("getAutofillId", "(Landroid/view/View;)Landroidx/core/view/autofill/AutofillIdCompat;", "")]
public static AutofillIdCompat GetAutofillId(View v);
    [RegisterAttribute("getBackgroundTintList", "(Landroid/view/View;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetBackgroundTintList(View view);
    [RegisterAttribute("getBackgroundTintMode", "(Landroid/view/View;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetBackgroundTintMode(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getClipBounds", "(Landroid/view/View;)Landroid/graphics/Rect;", "")]
public static Rect GetClipBounds(View view);
    [RegisterAttribute("getContentCaptureSession", "(Landroid/view/View;)Landroidx/core/view/contentcapture/ContentCaptureSessionCompat;", "")]
public static ContentCaptureSessionCompat GetContentCaptureSession(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getDisplay", "(Landroid/view/View;)Landroid/view/Display;", "")]
public static Display GetDisplay(View view);
    [RegisterAttribute("getElevation", "(Landroid/view/View;)F", "")]
public static float GetElevation(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getFitsSystemWindows", "(Landroid/view/View;)Z", "")]
public static bool GetFitsSystemWindows(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getImportantForAccessibility", "(Landroid/view/View;)I", "")]
public static int GetImportantForAccessibility(View view);
    [RegisterAttribute("getImportantForAutofill", "(Landroid/view/View;)I", "")]
public static int GetImportantForAutofill(View v);
    [RegisterAttribute("getImportantForContentCapture", "(Landroid/view/View;)I", "")]
public static int GetImportantForContentCapture(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getLabelFor", "(Landroid/view/View;)I", "")]
public static int GetLabelFor(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getLayerType", "(Landroid/view/View;)I", "")]
public static int GetLayerType(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getLayoutDirection", "(Landroid/view/View;)I", "")]
public static int GetLayoutDirection(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMatrix", "(Landroid/view/View;)Landroid/graphics/Matrix;", "")]
public static Matrix GetMatrix(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMeasuredHeightAndState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredHeightAndState(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMeasuredState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredState(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMeasuredWidthAndState", "(Landroid/view/View;)I", "")]
public static int GetMeasuredWidthAndState(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMinimumHeight", "(Landroid/view/View;)I", "")]
public static int GetMinimumHeight(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getMinimumWidth", "(Landroid/view/View;)I", "")]
public static int GetMinimumWidth(View view);
    [RegisterAttribute("getNextClusterForwardId", "(Landroid/view/View;)I", "")]
public static int GetNextClusterForwardId(View view);
    [RegisterAttribute("getOnReceiveContentMimeTypes", "(Landroid/view/View;)[Ljava/lang/String;", "")]
public static String[] GetOnReceiveContentMimeTypes(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getOverScrollMode", "(Landroid/view/View;)I", "")]
public static int GetOverScrollMode(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPaddingEnd", "(Landroid/view/View;)I", "")]
public static int GetPaddingEnd(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPaddingStart", "(Landroid/view/View;)I", "")]
public static int GetPaddingStart(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getParentForAccessibility", "(Landroid/view/View;)Landroid/view/ViewParent;", "")]
public static IViewParent GetParentForAccessibility(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPivotX", "(Landroid/view/View;)F", "")]
public static float GetPivotX(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getPivotY", "(Landroid/view/View;)F", "")]
public static float GetPivotY(View view);
    [RegisterAttribute("getRootWindowInsets", "(Landroid/view/View;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat GetRootWindowInsets(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getRotation", "(Landroid/view/View;)F", "")]
public static float GetRotation(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getRotationX", "(Landroid/view/View;)F", "")]
public static float GetRotationX(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getRotationY", "(Landroid/view/View;)F", "")]
public static float GetRotationY(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getScaleX", "(Landroid/view/View;)F", "")]
public static float GetScaleX(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getScaleY", "(Landroid/view/View;)F", "")]
public static float GetScaleY(View view);
    [RegisterAttribute("getScrollIndicators", "(Landroid/view/View;)I", "")]
public static int GetScrollIndicators(View view);
    [RegisterAttribute("getStateDescription", "(Landroid/view/View;)Ljava/lang/CharSequence;", "")]
public static ICharSequence GetStateDescriptionFormatted(View view);
    public static string GetStateDescription(View view);
    [RegisterAttribute("getSystemGestureExclusionRects", "(Landroid/view/View;)Ljava/util/List;", "")]
public static IList`1<Rect> GetSystemGestureExclusionRects(View view);
    [RegisterAttribute("getTransitionName", "(Landroid/view/View;)Ljava/lang/String;", "")]
public static string GetTransitionName(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getTranslationX", "(Landroid/view/View;)F", "")]
public static float GetTranslationX(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getTranslationY", "(Landroid/view/View;)F", "")]
public static float GetTranslationY(View view);
    [RegisterAttribute("getTranslationZ", "(Landroid/view/View;)F", "")]
public static float GetTranslationZ(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getWindowInsetsController", "(Landroid/view/View;)Landroidx/core/view/WindowInsetsControllerCompat;", "")]
public static WindowInsetsControllerCompat GetWindowInsetsController(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getWindowSystemUiVisibility", "(Landroid/view/View;)I", "")]
public static int GetWindowSystemUiVisibility(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getX", "(Landroid/view/View;)F", "")]
public static float GetX(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getY", "(Landroid/view/View;)F", "")]
public static float GetY(View view);
    [RegisterAttribute("getZ", "(Landroid/view/View;)F", "")]
public static float GetZ(View view);
    [RegisterAttribute("hasAccessibilityDelegate", "(Landroid/view/View;)Z", "")]
public static bool HasAccessibilityDelegate(View view);
    [RegisterAttribute("hasExplicitFocusable", "(Landroid/view/View;)Z", "")]
public static bool HasExplicitFocusable(View view);
    [RegisterAttribute("hasNestedScrollingParent", "(Landroid/view/View;)Z", "")]
public static bool HasNestedScrollingParent(View view);
    [RegisterAttribute("hasNestedScrollingParent", "(Landroid/view/View;I)Z", "")]
public static bool HasNestedScrollingParent(View view, int type);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("hasOnClickListeners", "(Landroid/view/View;)Z", "")]
public static bool HasOnClickListeners(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("hasOverlappingRendering", "(Landroid/view/View;)Z", "")]
public static bool HasOverlappingRendering(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("hasTransientState", "(Landroid/view/View;)Z", "")]
public static bool HasTransientState(View view);
    [RegisterAttribute("isAccessibilityHeading", "(Landroid/view/View;)Z", "")]
public static bool IsAccessibilityHeading(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isAttachedToWindow", "(Landroid/view/View;)Z", "")]
public static bool IsAttachedToWindow(View view);
    [RegisterAttribute("isFocusedByDefault", "(Landroid/view/View;)Z", "")]
public static bool IsFocusedByDefault(View view);
    [RegisterAttribute("isImportantForAccessibility", "(Landroid/view/View;)Z", "")]
public static bool IsImportantForAccessibility(View view);
    [RegisterAttribute("isImportantForAutofill", "(Landroid/view/View;)Z", "")]
public static bool IsImportantForAutofill(View v);
    [RegisterAttribute("isImportantForContentCapture", "(Landroid/view/View;)Z", "")]
public static bool IsImportantForContentCapture(View v);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isInLayout", "(Landroid/view/View;)Z", "")]
public static bool IsInLayout(View view);
    [RegisterAttribute("isKeyboardNavigationCluster", "(Landroid/view/View;)Z", "")]
public static bool IsKeyboardNavigationCluster(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isLaidOut", "(Landroid/view/View;)Z", "")]
public static bool IsLaidOut(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isLayoutDirectionResolved", "(Landroid/view/View;)Z", "")]
public static bool IsLayoutDirectionResolved(View view);
    [RegisterAttribute("isNestedScrollingEnabled", "(Landroid/view/View;)Z", "")]
public static bool IsNestedScrollingEnabled(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("isOpaque", "(Landroid/view/View;)Z", "")]
public static bool IsOpaque(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isPaddingRelative", "(Landroid/view/View;)Z", "")]
public static bool IsPaddingRelative(View view);
    [RegisterAttribute("isScreenReaderFocusable", "(Landroid/view/View;)Z", "")]
public static bool IsScreenReaderFocusable(View view);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("jumpDrawablesToCurrentState", "(Landroid/view/View;)V", "")]
public static void JumpDrawablesToCurrentState(View v);
    [NullableContextAttribute("2")]
[RegisterAttribute("keyboardNavigationClusterSearch", "(Landroid/view/View;Landroid/view/View;I)Landroid/view/View;", "")]
public static View KeyboardNavigationClusterSearch(View view, View currentCluster, int direction);
    [RegisterAttribute("offsetLeftAndRight", "(Landroid/view/View;I)V", "")]
public static void OffsetLeftAndRight(View view, int offset);
    [RegisterAttribute("offsetTopAndBottom", "(Landroid/view/View;I)V", "")]
public static void OffsetTopAndBottom(View view, int offset);
    [RegisterAttribute("onApplyWindowInsets", "(Landroid/view/View;Landroidx/core/view/WindowInsetsCompat;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat OnApplyWindowInsets(View view, WindowInsetsCompat insets);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("onInitializeAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")]
public static void OnInitializeAccessibilityEvent(View v, AccessibilityEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onInitializeAccessibilityNodeInfo", "(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat;)V", "")]
public static void OnInitializeAccessibilityNodeInfo(View v, AccessibilityNodeInfoCompat info);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPopulateAccessibilityEvent", "(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)V", "")]
public static void OnPopulateAccessibilityEvent(View v, AccessibilityEvent e);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("performAccessibilityAction", "(Landroid/view/View;ILandroid/os/Bundle;)Z", "")]
public static bool PerformAccessibilityAction(View view, int action, Bundle arguments);
    [RegisterAttribute("performHapticFeedback", "(Landroid/view/View;I)Z", "")]
public static bool PerformHapticFeedback(View view, int feedbackConstant);
    [RegisterAttribute("performHapticFeedback", "(Landroid/view/View;II)Z", "")]
public static bool PerformHapticFeedback(View view, int feedbackConstant, int flags);
    [RegisterAttribute("performReceiveContent", "(Landroid/view/View;Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;", "")]
public static ContentInfoCompat PerformReceiveContent(View view, ContentInfoCompat payload);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("postInvalidateOnAnimation", "(Landroid/view/View;)V", "")]
public static void PostInvalidateOnAnimation(View view);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("postInvalidateOnAnimation", "(Landroid/view/View;IIII)V", "")]
public static void PostInvalidateOnAnimation(View view, int left, int top, int right, int bottom);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("postOnAnimation", "(Landroid/view/View;Ljava/lang/Runnable;)V", "")]
public static void PostOnAnimation(View view, IRunnable action);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("postOnAnimationDelayed", "(Landroid/view/View;Ljava/lang/Runnable;J)V", "")]
public static void PostOnAnimationDelayed(View view, IRunnable action, long delayMillis);
    [RegisterAttribute("removeAccessibilityAction", "(Landroid/view/View;I)V", "")]
public static void RemoveAccessibilityAction(View view, int actionId);
    [RegisterAttribute("removeOnUnhandledKeyEventListener", "(Landroid/view/View;Landroidx/core/view/ViewCompat$OnUnhandledKeyEventListenerCompat;)V", "")]
public static void RemoveOnUnhandledKeyEventListener(View v, IOnUnhandledKeyEventListenerCompat listener);
    [RegisterAttribute("replaceAccessibilityAction", "(Landroid/view/View;Landroidx/core/view/accessibility/AccessibilityNodeInfoCompat$AccessibilityActionCompat;Ljava/lang/CharSequence;Landroidx/core/view/accessibility/AccessibilityViewCommand;)V", "")]
public static void ReplaceAccessibilityAction(View view, AccessibilityActionCompat replacedAction, ICharSequence label, IAccessibilityViewCommand command);
    public static void ReplaceAccessibilityAction(View view, AccessibilityActionCompat replacedAction, string label, IAccessibilityViewCommand command);
    [RegisterAttribute("requestApplyInsets", "(Landroid/view/View;)V", "")]
public static void RequestApplyInsets(View view);
    [RegisterAttribute("requireViewById", "(Landroid/view/View;I)Landroid/view/View;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RequireViewById(View view, int id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("resolveSizeAndState", "(III)I", "")]
public static int ResolveSizeAndState(int size, int measureSpec, int childMeasuredState);
    [RegisterAttribute("restoreDefaultFocus", "(Landroid/view/View;)Z", "")]
public static bool RestoreDefaultFocus(View view);
    [RegisterAttribute("saveAttributeDataForStyleable", "(Landroid/view/View;Landroid/content/Context;[ILandroid/util/AttributeSet;Landroid/content/res/TypedArray;II)V", "")]
public static void SaveAttributeDataForStyleable(View view, Context context, Int32[] styleable, IAttributeSet attrs, TypedArray t, int defStyleAttr, int defStyleRes);
    [RegisterAttribute("setAccessibilityDelegate", "(Landroid/view/View;Landroidx/core/view/AccessibilityDelegateCompat;)V", "")]
public static void SetAccessibilityDelegate(View v, AccessibilityDelegateCompat delegate);
    [RegisterAttribute("setAccessibilityHeading", "(Landroid/view/View;Z)V", "")]
public static void SetAccessibilityHeading(View view, bool isHeading);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setAccessibilityLiveRegion", "(Landroid/view/View;I)V", "")]
public static void SetAccessibilityLiveRegion(View view, int mode);
    [RegisterAttribute("setAccessibilityPaneTitle", "(Landroid/view/View;Ljava/lang/CharSequence;)V", "")]
public static void SetAccessibilityPaneTitle(View view, ICharSequence accessibilityPaneTitle);
    public static void SetAccessibilityPaneTitle(View view, string accessibilityPaneTitle);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setActivated", "(Landroid/view/View;Z)V", "")]
public static void SetActivated(View view, bool activated);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setAlpha", "(Landroid/view/View;F)V", "")]
public static void SetAlpha(View view, float value);
    [RegisterAttribute("setAutofillHints", "(Landroid/view/View;[Ljava/lang/String;)V", "")]
public static void SetAutofillHints(View v, String[] autofillHints);
    [RegisterAttribute("setAutofillId", "(Landroid/view/View;Landroidx/core/view/autofill/AutofillIdCompat;)V", "")]
public static void SetAutofillId(View v, AutofillIdCompat id);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setBackground", "(Landroid/view/View;Landroid/graphics/drawable/Drawable;)V", "")]
public static void SetBackground(View view, Drawable background);
    [RegisterAttribute("setBackgroundTintList", "(Landroid/view/View;Landroid/content/res/ColorStateList;)V", "")]
public static void SetBackgroundTintList(View view, ColorStateList tintList);
    [RegisterAttribute("setBackgroundTintMode", "(Landroid/view/View;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetBackgroundTintMode(View view, Mode mode);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setChildrenDrawingOrderEnabled", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetChildrenDrawingOrderEnabled(ViewGroup viewGroup, bool enabled);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setClipBounds", "(Landroid/view/View;Landroid/graphics/Rect;)V", "")]
public static void SetClipBounds(View view, Rect clipBounds);
    [RegisterAttribute("setContentCaptureSession", "(Landroid/view/View;Landroidx/core/view/contentcapture/ContentCaptureSessionCompat;)V", "")]
public static void SetContentCaptureSession(View v, ContentCaptureSessionCompat contentCaptureSession);
    [RegisterAttribute("setElevation", "(Landroid/view/View;F)V", "")]
public static void SetElevation(View view, float elevation);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setFitsSystemWindows", "(Landroid/view/View;Z)V", "")]
public static void SetFitsSystemWindows(View view, bool fitSystemWindows);
    [RegisterAttribute("setFocusedByDefault", "(Landroid/view/View;Z)V", "")]
public static void SetFocusedByDefault(View view, bool isFocusedByDefault);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setHasTransientState", "(Landroid/view/View;Z)V", "")]
public static void SetHasTransientState(View view, bool hasTransientState);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setImportantForAccessibility", "(Landroid/view/View;I)V", "")]
public static void SetImportantForAccessibility(View view, int mode);
    [RegisterAttribute("setImportantForAutofill", "(Landroid/view/View;I)V", "")]
public static void SetImportantForAutofill(View v, int mode);
    [RegisterAttribute("setImportantForContentCapture", "(Landroid/view/View;I)V", "")]
public static void SetImportantForContentCapture(View v, int mode);
    [RegisterAttribute("setKeyboardNavigationCluster", "(Landroid/view/View;Z)V", "")]
public static void SetKeyboardNavigationCluster(View view, bool isCluster);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setLabelFor", "(Landroid/view/View;I)V", "")]
public static void SetLabelFor(View view, int labeledId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setLayerPaint", "(Landroid/view/View;Landroid/graphics/Paint;)V", "")]
public static void SetLayerPaint(View view, Paint paint);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setLayerType", "(Landroid/view/View;ILandroid/graphics/Paint;)V", "")]
public static void SetLayerType(View view, int layerType, Paint paint);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setLayoutDirection", "(Landroid/view/View;I)V", "")]
public static void SetLayoutDirection(View view, int layoutDirection);
    [RegisterAttribute("setNestedScrollingEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetNestedScrollingEnabled(View view, bool enabled);
    [RegisterAttribute("setNextClusterForwardId", "(Landroid/view/View;I)V", "")]
public static void SetNextClusterForwardId(View view, int nextClusterForwardId);
    [RegisterAttribute("setOnApplyWindowInsetsListener", "(Landroid/view/View;Landroidx/core/view/OnApplyWindowInsetsListener;)V", "")]
public static void SetOnApplyWindowInsetsListener(View v, IOnApplyWindowInsetsListener listener);
    [RegisterAttribute("setOnReceiveContentListener", "(Landroid/view/View;[Ljava/lang/String;Landroidx/core/view/OnReceiveContentListener;)V", "")]
public static void SetOnReceiveContentListener(View view, String[] mimeTypes, IOnReceiveContentListener listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setOverScrollMode", "(Landroid/view/View;I)V", "")]
public static void SetOverScrollMode(View v, int overScrollMode);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setPaddingRelative", "(Landroid/view/View;IIII)V", "")]
public static void SetPaddingRelative(View view, int start, int top, int end, int bottom);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setPivotX", "(Landroid/view/View;F)V", "")]
public static void SetPivotX(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setPivotY", "(Landroid/view/View;F)V", "")]
public static void SetPivotY(View view, float value);
    [RegisterAttribute("setPointerIcon", "(Landroid/view/View;Landroidx/core/view/PointerIconCompat;)V", "")]
public static void SetPointerIcon(View view, PointerIconCompat pointerIcon);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setRotation", "(Landroid/view/View;F)V", "")]
public static void SetRotation(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setRotationX", "(Landroid/view/View;F)V", "")]
public static void SetRotationX(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setRotationY", "(Landroid/view/View;F)V", "")]
public static void SetRotationY(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setSaveFromParentEnabled", "(Landroid/view/View;Z)V", "")]
public static void SetSaveFromParentEnabled(View v, bool enabled);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setScaleX", "(Landroid/view/View;F)V", "")]
public static void SetScaleX(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setScaleY", "(Landroid/view/View;F)V", "")]
public static void SetScaleY(View view, float value);
    [RegisterAttribute("setScreenReaderFocusable", "(Landroid/view/View;Z)V", "")]
public static void SetScreenReaderFocusable(View view, bool screenReaderFocusable);
    [RegisterAttribute("setScrollIndicators", "(Landroid/view/View;I)V", "")]
public static void SetScrollIndicators(View view, int indicators);
    [RegisterAttribute("setScrollIndicators", "(Landroid/view/View;II)V", "")]
public static void SetScrollIndicators(View view, int indicators, int mask);
    [RegisterAttribute("setStateDescription", "(Landroid/view/View;Ljava/lang/CharSequence;)V", "")]
public static void SetStateDescription(View view, ICharSequence stateDescription);
    public static void SetStateDescription(View view, string stateDescription);
    [RegisterAttribute("setSystemGestureExclusionRects", "(Landroid/view/View;Ljava/util/List;)V", "")]
public static void SetSystemGestureExclusionRects(View view, IList`1<Rect> rects);
    [RegisterAttribute("setTooltipText", "(Landroid/view/View;Ljava/lang/CharSequence;)V", "")]
public static void SetTooltipText(View view, ICharSequence tooltipText);
    public static void SetTooltipText(View view, string tooltipText);
    [RegisterAttribute("setTransitionName", "(Landroid/view/View;Ljava/lang/String;)V", "")]
public static void SetTransitionName(View view, string transitionName);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setTranslationX", "(Landroid/view/View;F)V", "")]
public static void SetTranslationX(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setTranslationY", "(Landroid/view/View;F)V", "")]
public static void SetTranslationY(View view, float value);
    [RegisterAttribute("setTranslationZ", "(Landroid/view/View;F)V", "")]
public static void SetTranslationZ(View view, float translationZ);
    [RegisterAttribute("setWindowInsetsAnimationCallback", "(Landroid/view/View;Landroidx/core/view/WindowInsetsAnimationCompat$Callback;)V", "")]
public static void SetWindowInsetsAnimationCallback(View view, Callback callback);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setX", "(Landroid/view/View;F)V", "")]
public static void SetX(View view, float value);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setY", "(Landroid/view/View;F)V", "")]
public static void SetY(View view, float value);
    [RegisterAttribute("setZ", "(Landroid/view/View;F)V", "")]
public static void SetZ(View view, float z);
    [RegisterAttribute("startDragAndDrop", "(Landroid/view/View;Landroid/content/ClipData;Landroid/view/View$DragShadowBuilder;Ljava/lang/Object;I)Z", "")]
public static bool StartDragAndDrop(View v, ClipData data, DragShadowBuilder shadowBuilder, Object localState, int flags);
    [RegisterAttribute("startNestedScroll", "(Landroid/view/View;I)Z", "")]
public static bool StartNestedScroll(View view, int axes);
    [RegisterAttribute("startNestedScroll", "(Landroid/view/View;II)Z", "")]
public static bool StartNestedScroll(View view, int axes, int type);
    [RegisterAttribute("stopNestedScroll", "(Landroid/view/View;)V", "")]
public static void StopNestedScroll(View view);
    [RegisterAttribute("stopNestedScroll", "(Landroid/view/View;I)V", "")]
public static void StopNestedScroll(View view, int type);
    [RegisterAttribute("updateDragShadow", "(Landroid/view/View;Landroid/view/View$DragShadowBuilder;)V", "")]
public static void UpdateDragShadow(View v, DragShadowBuilder shadowBuilder);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewConfigurationCompat")]
public class AndroidX.Core.View.ViewConfigurationCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ViewConfigurationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewConfigurationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getScaledHorizontalScrollFactor", "(Landroid/view/ViewConfiguration;Landroid/content/Context;)F", "")]
public static float GetScaledHorizontalScrollFactor(ViewConfiguration config, Context context);
    [RegisterAttribute("getScaledHoverSlop", "(Landroid/view/ViewConfiguration;)I", "")]
public static int GetScaledHoverSlop(ViewConfiguration config);
    [RegisterAttribute("getScaledMaximumFlingVelocity", "(Landroid/content/Context;Landroid/view/ViewConfiguration;III)I", "")]
public static int GetScaledMaximumFlingVelocity(Context context, ViewConfiguration config, int inputDeviceId, int axis, int source);
    [RegisterAttribute("getScaledMinimumFlingVelocity", "(Landroid/content/Context;Landroid/view/ViewConfiguration;III)I", "")]
public static int GetScaledMinimumFlingVelocity(Context context, ViewConfiguration config, int inputDeviceId, int axis, int source);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getScaledPagingTouchSlop", "(Landroid/view/ViewConfiguration;)I", "")]
public static int GetScaledPagingTouchSlop(ViewConfiguration config);
    [RegisterAttribute("getScaledVerticalScrollFactor", "(Landroid/view/ViewConfiguration;Landroid/content/Context;)F", "")]
public static float GetScaledVerticalScrollFactor(ViewConfiguration config, Context context);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("hasPermanentMenuKey", "(Landroid/view/ViewConfiguration;)Z", "")]
public static bool HasPermanentMenuKey(ViewConfiguration config);
    [RegisterAttribute("shouldShowMenuShortcutsWhenKeyboardPresent", "(Landroid/view/ViewConfiguration;Landroid/content/Context;)Z", "")]
public static bool ShouldShowMenuShortcutsWhenKeyboardPresent(ViewConfiguration config, Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewGroupCompat")]
public class AndroidX.Core.View.ViewGroupCompat : Object {
    [RegisterAttribute("LAYOUT_MODE_CLIP_BOUNDS")]
public static int LayoutModeClipBounds;
    [RegisterAttribute("LAYOUT_MODE_OPTICAL_BOUNDS")]
public static int LayoutModeOpticalBounds;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ViewGroupCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewGroupCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLayoutMode", "(Landroid/view/ViewGroup;)I", "")]
public static int GetLayoutMode(ViewGroup group);
    [RegisterAttribute("getNestedScrollAxes", "(Landroid/view/ViewGroup;)I", "")]
public static int GetNestedScrollAxes(ViewGroup group);
    [RegisterAttribute("isTransitionGroup", "(Landroid/view/ViewGroup;)Z", "")]
public static bool IsTransitionGroup(ViewGroup group);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("onRequestSendAccessibilityEvent", "(Landroid/view/ViewGroup;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "")]
public static bool OnRequestSendAccessibilityEvent(ViewGroup group, View child, AccessibilityEvent e);
    [RegisterAttribute("setLayoutMode", "(Landroid/view/ViewGroup;I)V", "")]
public static void SetLayoutMode(ViewGroup group, int mode);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setMotionEventSplittingEnabled", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetMotionEventSplittingEnabled(ViewGroup group, bool split);
    [RegisterAttribute("setTransitionGroup", "(Landroid/view/ViewGroup;Z)V", "")]
public static void SetTransitionGroup(ViewGroup group, bool isTransitionGroup);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewParentCompat")]
public class AndroidX.Core.View.ViewParentCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ViewParentCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewParentCompat();
    public static void OnNestedScrollAccepted(IViewParent parent, View child, View target, int nestedScrollAxes);
    public static void OnNestedScrollAccepted(IViewParent parent, View child, View target, int nestedScrollAxes, int type);
    public static bool OnStartNestedScroll(IViewParent parent, View child, View target, int nestedScrollAxes);
    public static bool OnStartNestedScroll(IViewParent parent, View child, View target, int nestedScrollAxes, int type);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("notifySubtreeAccessibilityStateChanged", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)V", "")]
public static void NotifySubtreeAccessibilityStateChanged(IViewParent parent, View child, View source, int changeType);
    [RegisterAttribute("onNestedFling", "(Landroid/view/ViewParent;Landroid/view/View;FFZ)Z", "")]
public static bool OnNestedFling(IViewParent parent, View target, float velocityX, float velocityY, bool consumed);
    [RegisterAttribute("onNestedPreFling", "(Landroid/view/ViewParent;Landroid/view/View;FF)Z", "")]
public static bool OnNestedPreFling(IViewParent parent, View target, float velocityX, float velocityY);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/ViewParent;Landroid/view/View;II[I)V", "")]
public static void OnNestedPreScroll(IViewParent parent, View target, int dx, int dy, Int32[] consumed);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/ViewParent;Landroid/view/View;II[II)V", "")]
public static void OnNestedPreScroll(IViewParent parent, View target, int dx, int dy, Int32[] consumed, int type);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;IIII)V", "")]
public static void OnNestedScroll(IViewParent parent, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;IIIII)V", "")]
public static void OnNestedScroll(IViewParent parent, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;IIIII[I)V", "")]
public static void OnNestedScroll(IViewParent parent, View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, Int32[] consumed);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)V", "")]
public static void OnNestedScrollAccepted(IViewParent parent, View child, View target, ScrollAxis nestedScrollAxes);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;II)V", "")]
public static void OnNestedScrollAccepted(IViewParent parent, View child, View target, ScrollAxis nestedScrollAxes, int type);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;I)Z", "")]
public static bool OnStartNestedScroll(IViewParent parent, View child, View target, ScrollAxis nestedScrollAxes);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/View;II)Z", "")]
public static bool OnStartNestedScroll(IViewParent parent, View child, View target, ScrollAxis nestedScrollAxes, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;)V", "")]
public static void OnStopNestedScroll(IViewParent parent, View target);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/ViewParent;Landroid/view/View;I)V", "")]
public static void OnStopNestedScroll(IViewParent parent, View target, int type);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("requestSendAccessibilityEvent", "(Landroid/view/ViewParent;Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z", "")]
public static bool RequestSendAccessibilityEvent(IViewParent parent, View child, AccessibilityEvent e);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorCompat")]
public class AndroidX.Core.View.ViewPropertyAnimatorCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long Duration { get; }
    [NullableAttribute("2")]
public IInterpolator Interpolator { get; }
    public long StartDelay { get; }
    internal ViewPropertyAnimatorCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewPropertyAnimatorCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDuration", "()J", "")]
public long get_Duration();
    [NullableContextAttribute("2")]
[RegisterAttribute("getInterpolator", "()Landroid/view/animation/Interpolator;", "")]
public IInterpolator get_Interpolator();
    [RegisterAttribute("getStartDelay", "()J", "")]
public long get_StartDelay();
    [RegisterAttribute("alpha", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Alpha(float value);
    [RegisterAttribute("alphaBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat AlphaBy(float value);
    [RegisterAttribute("cancel", "()V", "")]
public void Cancel();
    [RegisterAttribute("rotation", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Rotation(float value);
    [RegisterAttribute("rotationBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationBy(float value);
    [RegisterAttribute("rotationX", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationX(float value);
    [RegisterAttribute("rotationXBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationXBy(float value);
    [RegisterAttribute("rotationY", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationY(float value);
    [RegisterAttribute("rotationYBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat RotationYBy(float value);
    [RegisterAttribute("scaleX", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleX(float value);
    [RegisterAttribute("scaleXBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleXBy(float value);
    [RegisterAttribute("scaleY", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleY(float value);
    [RegisterAttribute("scaleYBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ScaleYBy(float value);
    [RegisterAttribute("setDuration", "(J)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetDuration(long value);
    [RegisterAttribute("setInterpolator", "(Landroid/view/animation/Interpolator;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetInterpolator(IInterpolator value);
    [RegisterAttribute("setListener", "(Landroidx/core/view/ViewPropertyAnimatorListener;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetListener(IViewPropertyAnimatorListener listener);
    [RegisterAttribute("setStartDelay", "(J)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetStartDelay(long value);
    [RegisterAttribute("setUpdateListener", "(Landroidx/core/view/ViewPropertyAnimatorUpdateListener;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat SetUpdateListener(IViewPropertyAnimatorUpdateListener listener);
    [RegisterAttribute("start", "()V", "")]
public void Start();
    [RegisterAttribute("translationX", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationX(float value);
    [RegisterAttribute("translationXBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationXBy(float value);
    [RegisterAttribute("translationY", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationY(float value);
    [RegisterAttribute("translationYBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationYBy(float value);
    [RegisterAttribute("translationZ", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationZ(float value);
    [RegisterAttribute("translationZBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat TranslationZBy(float value);
    [RegisterAttribute("withEndAction", "(Ljava/lang/Runnable;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithEndAction(IRunnable runnable);
    [RegisterAttribute("withLayer", "()Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithLayer();
    [RegisterAttribute("withStartAction", "(Ljava/lang/Runnable;)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat WithStartAction(IRunnable runnable);
    [RegisterAttribute("x", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat X(float value);
    [RegisterAttribute("xBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat XBy(float value);
    [RegisterAttribute("y", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Y(float value);
    [RegisterAttribute("yBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat YBy(float value);
    [RegisterAttribute("z", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat Z(float value);
    [RegisterAttribute("zBy", "(F)Landroidx/core/view/ViewPropertyAnimatorCompat;", "")]
public ViewPropertyAnimatorCompat ZBy(float value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewPropertyAnimatorListenerAdapter")]
public class AndroidX.Core.View.ViewPropertyAnimatorListenerAdapter : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationCancel_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationEnd_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_onAnimationStart_Landroid_view_View_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewPropertyAnimatorListenerAdapter(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewPropertyAnimatorListenerAdapter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetOnAnimationCancel_Landroid_view_View_Handler();
    private static void n_OnAnimationCancel_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationCancel", "(Landroid/view/View;)V", "GetOnAnimationCancel_Landroid_view_View_Handler")]
public virtual void OnAnimationCancel(View view);
    private static Delegate GetOnAnimationEnd_Landroid_view_View_Handler();
    private static void n_OnAnimationEnd_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationEnd", "(Landroid/view/View;)V", "GetOnAnimationEnd_Landroid_view_View_Handler")]
public virtual void OnAnimationEnd(View view);
    private static Delegate GetOnAnimationStart_Landroid_view_View_Handler();
    private static void n_OnAnimationStart_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    [RegisterAttribute("onAnimationStart", "(Landroid/view/View;)V", "GetOnAnimationStart_Landroid_view_View_Handler")]
public virtual void OnAnimationStart(View view);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
public class AndroidX.Core.View.ViewPropertyAnimatorUpdateEventArgs : EventArgs {
    private View view;
    public View View { get; }
    public ViewPropertyAnimatorUpdateEventArgs(View view);
    public View get_View();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/ViewStructureCompat")]
public class AndroidX.Core.View.ViewStructureCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_setClassName_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_setContentDescription_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setDimens_IIIIII;
    [NullableAttribute("2")]
private static Delegate cb_setText_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_toViewStructure;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ViewStructureCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ViewStructureCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetSetClassName_Ljava_lang_String_Handler();
    private static void n_SetClassName_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native__string);
    [RegisterAttribute("setClassName", "(Ljava/lang/String;)V", "GetSetClassName_Ljava_lang_String_Handler")]
public virtual void SetClassName(string string);
    private static Delegate GetSetContentDescription_Ljava_lang_CharSequence_Handler();
    private static void n_SetContentDescription_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_charSequence);
    [RegisterAttribute("setContentDescription", "(Ljava/lang/CharSequence;)V", "GetSetContentDescription_Ljava_lang_CharSequence_Handler")]
public virtual void SetContentDescription(ICharSequence charSequence);
    public void SetContentDescription(string charSequence);
    private static Delegate GetSetDimens_IIIIIIHandler();
    private static void n_SetDimens_IIIIII(IntPtr jnienv, IntPtr native__this, int left, int top, int scrollX, int scrollY, int width, int height);
    [RegisterAttribute("setDimens", "(IIIIII)V", "GetSetDimens_IIIIIIHandler")]
public virtual void SetDimens(int left, int top, int scrollX, int scrollY, int width, int height);
    private static Delegate GetSetText_Ljava_lang_CharSequence_Handler();
    private static void n_SetText_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_charSequence);
    [RegisterAttribute("setText", "(Ljava/lang/CharSequence;)V", "GetSetText_Ljava_lang_CharSequence_Handler")]
public virtual void SetText(ICharSequence charSequence);
    public void SetText(string charSequence);
    private static Delegate GetToViewStructureHandler();
    private static IntPtr n_ToViewStructure(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("toViewStructure", "()Landroid/view/ViewStructure;", "GetToViewStructureHandler")]
public virtual ViewStructure ToViewStructure();
    [RegisterAttribute("toViewStructureCompat", "(Landroid/view/ViewStructure;)Landroidx/core/view/ViewStructureCompat;", "")]
public static ViewStructureCompat ToViewStructureCompat(ViewStructure contentCaptureSession);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowCompat")]
public class AndroidX.Core.View.WindowCompat : Object {
    [RegisterAttribute("FEATURE_ACTION_BAR")]
public static int FeatureActionBar;
    [RegisterAttribute("FEATURE_ACTION_BAR_OVERLAY")]
public static int FeatureActionBarOverlay;
    [RegisterAttribute("FEATURE_ACTION_MODE_OVERLAY")]
public static int FeatureActionModeOverlay;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInsetsController", "(Landroid/view/Window;Landroid/view/View;)Landroidx/core/view/WindowInsetsControllerCompat;", "")]
public static WindowInsetsControllerCompat GetInsetsController(Window window, View view);
    [RegisterAttribute("requireViewById", "(Landroid/view/Window;I)Landroid/view/View;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RequireViewById(Window window, int id);
    [RegisterAttribute("setDecorFitsSystemWindows", "(Landroid/view/Window;Z)V", "")]
public static void SetDecorFitsSystemWindows(Window window, bool decorFitsSystemWindows);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowInsetsAnimationCompat")]
public class AndroidX.Core.View.WindowInsetsAnimationCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float Alpha { get; public set; }
    public long DurationMillis { get; }
    public float Fraction { get; public set; }
    public float InterpolatedFraction { get; }
    [NullableAttribute("2")]
public IInterpolator Interpolator { get; }
    public int TypeMask { get; }
    internal WindowInsetsAnimationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(ILandroid/view/animation/Interpolator;J)V", "")]
public WindowInsetsAnimationCompat(int typeMask, IInterpolator interpolator, long durationMillis);
    private static WindowInsetsAnimationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAlpha", "()F", "")]
public float get_Alpha();
    [RegisterAttribute("setAlpha", "(F)V", "")]
public void set_Alpha(float value);
    [RegisterAttribute("getDurationMillis", "()J", "")]
public long get_DurationMillis();
    [RegisterAttribute("getFraction", "()F", "")]
public float get_Fraction();
    [RegisterAttribute("setFraction", "(F)V", "")]
public void set_Fraction(float value);
    [RegisterAttribute("getInterpolatedFraction", "()F", "")]
public float get_InterpolatedFraction();
    [NullableContextAttribute("2")]
[RegisterAttribute("getInterpolator", "()Landroid/view/animation/Interpolator;", "")]
public IInterpolator get_Interpolator();
    [RegisterAttribute("getTypeMask", "()I", "")]
public int get_TypeMask();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowInsetsAnimationControllerCompat")]
public class AndroidX.Core.View.WindowInsetsAnimationControllerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float CurrentAlpha { get; }
    public float CurrentFraction { get; }
    public Insets CurrentInsets { get; }
    public Insets HiddenStateInsets { get; }
    public bool IsCancelled { get; }
    public bool IsFinished { get; }
    public bool IsReady { get; }
    public Insets ShownStateInsets { get; }
    public int Types { get; }
    internal WindowInsetsAnimationControllerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowInsetsAnimationControllerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrentAlpha", "()F", "")]
public float get_CurrentAlpha();
    [RegisterAttribute("getCurrentFraction", "()F", "")]
public float get_CurrentFraction();
    [RegisterAttribute("getCurrentInsets", "()Landroidx/core/graphics/Insets;", "")]
public Insets get_CurrentInsets();
    [RegisterAttribute("getHiddenStateInsets", "()Landroidx/core/graphics/Insets;", "")]
public Insets get_HiddenStateInsets();
    [RegisterAttribute("isCancelled", "()Z", "")]
public bool get_IsCancelled();
    [RegisterAttribute("isFinished", "()Z", "")]
public bool get_IsFinished();
    [RegisterAttribute("isReady", "()Z", "")]
public bool get_IsReady();
    [RegisterAttribute("getShownStateInsets", "()Landroidx/core/graphics/Insets;", "")]
public Insets get_ShownStateInsets();
    [RegisterAttribute("getTypes", "()I", "")]
public int get_Types();
    [RegisterAttribute("finish", "(Z)V", "")]
public void Finish(bool shown);
    [NullableContextAttribute("2")]
[RegisterAttribute("setInsetsAndAlpha", "(Landroidx/core/graphics/Insets;FF)V", "")]
public void SetInsetsAndAlpha(Insets insets, float alpha, float fraction);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowInsetsCompat")]
public class AndroidX.Core.View.WindowInsetsCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDisplayCutout;
    [NullableAttribute("2")]
private static Delegate cb_hasInsets;
    [NullableAttribute("2")]
private static Delegate cb_hasStableInsets;
    [NullableAttribute("2")]
private static Delegate cb_hasSystemWindowInsets;
    [NullableAttribute("2")]
private static Delegate cb_isConsumed;
    [NullableAttribute("2")]
private static Delegate cb_isRound;
    [NullableAttribute("2")]
private static Delegate cb_getMandatorySystemGestureInsets;
    [NullableAttribute("2")]
private static Delegate cb_getStableInsetBottom;
    [NullableAttribute("2")]
private static Delegate cb_getStableInsetLeft;
    [NullableAttribute("2")]
private static Delegate cb_getStableInsetRight;
    [NullableAttribute("2")]
private static Delegate cb_getStableInsetTop;
    [NullableAttribute("2")]
private static Delegate cb_getStableInsets;
    [NullableAttribute("2")]
private static Delegate cb_getSystemGestureInsets;
    [NullableAttribute("2")]
private static Delegate cb_getSystemWindowInsetBottom;
    [NullableAttribute("2")]
private static Delegate cb_getSystemWindowInsetLeft;
    [NullableAttribute("2")]
private static Delegate cb_getSystemWindowInsetRight;
    [NullableAttribute("2")]
private static Delegate cb_getSystemWindowInsetTop;
    [NullableAttribute("2")]
private static Delegate cb_getSystemWindowInsets;
    [NullableAttribute("2")]
private static Delegate cb_getTappableElementInsets;
    [NullableAttribute("2")]
private static Delegate cb_consumeDisplayCutout;
    [NullableAttribute("2")]
private static Delegate cb_consumeStableInsets;
    [NullableAttribute("2")]
private static Delegate cb_consumeSystemWindowInsets;
    [NullableAttribute("2")]
private static Delegate cb_getInsets_I;
    [NullableAttribute("2")]
private static Delegate cb_getInsetsIgnoringVisibility_I;
    [NullableAttribute("2")]
private static Delegate cb_inset_Landroidx_core_graphics_Insets_;
    [NullableAttribute("2")]
private static Delegate cb_inset_IIII;
    [NullableAttribute("2")]
private static Delegate cb_isVisible_I;
    [NullableAttribute("2")]
private static Delegate cb_replaceSystemWindowInsets_Landroid_graphics_Rect_;
    [NullableAttribute("2")]
private static Delegate cb_replaceSystemWindowInsets_IIII;
    [NullableAttribute("2")]
private static Delegate cb_toWindowInsets;
    [RegisterAttribute("CONSUMED")]
public static WindowInsetsCompat Consumed { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public DisplayCutoutCompat DisplayCutout { get; }
    public bool HasInsets { get; }
    [ObsoleteAttribute("deprecated")]
public bool HasStableInsets { get; }
    [ObsoleteAttribute("deprecated")]
public bool HasSystemWindowInsets { get; }
    public bool IsConsumed { get; }
    public bool IsRound { get; }
    [ObsoleteAttribute("deprecated")]
public Insets MandatorySystemGestureInsets { get; }
    [ObsoleteAttribute("deprecated")]
public int StableInsetBottom { get; }
    [ObsoleteAttribute("deprecated")]
public int StableInsetLeft { get; }
    [ObsoleteAttribute("deprecated")]
public int StableInsetRight { get; }
    [ObsoleteAttribute("deprecated")]
public int StableInsetTop { get; }
    [ObsoleteAttribute("deprecated")]
public Insets StableInsets { get; }
    [ObsoleteAttribute("deprecated")]
public Insets SystemGestureInsets { get; }
    [ObsoleteAttribute("deprecated")]
public int SystemWindowInsetBottom { get; }
    [ObsoleteAttribute("deprecated")]
public int SystemWindowInsetLeft { get; }
    [ObsoleteAttribute("deprecated")]
public int SystemWindowInsetRight { get; }
    [ObsoleteAttribute("deprecated")]
public int SystemWindowInsetTop { get; }
    [ObsoleteAttribute("deprecated")]
public Insets SystemWindowInsets { get; }
    [ObsoleteAttribute("deprecated")]
public Insets TappableElementInsets { get; }
    protected WindowInsetsCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroidx/core/view/WindowInsetsCompat;)V", "")]
public WindowInsetsCompat(WindowInsetsCompat src);
    private static WindowInsetsCompat();
    public static WindowInsetsCompat get_Consumed();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDisplayCutoutHandler();
    private static IntPtr n_GetDisplayCutout(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDisplayCutout", "()Landroidx/core/view/DisplayCutoutCompat;", "GetGetDisplayCutoutHandler")]
public virtual DisplayCutoutCompat get_DisplayCutout();
    private static Delegate GetHasInsetsHandler();
    private static bool n_HasInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasInsets", "()Z", "GetHasInsetsHandler")]
public virtual bool get_HasInsets();
    [ObsoleteAttribute]
private static Delegate GetHasStableInsetsHandler();
    [ObsoleteAttribute]
private static bool n_HasStableInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasStableInsets", "()Z", "GetHasStableInsetsHandler")]
public virtual bool get_HasStableInsets();
    [ObsoleteAttribute]
private static Delegate GetHasSystemWindowInsetsHandler();
    [ObsoleteAttribute]
private static bool n_HasSystemWindowInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSystemWindowInsets", "()Z", "GetHasSystemWindowInsetsHandler")]
public virtual bool get_HasSystemWindowInsets();
    private static Delegate GetIsConsumedHandler();
    private static bool n_IsConsumed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isConsumed", "()Z", "GetIsConsumedHandler")]
public virtual bool get_IsConsumed();
    private static Delegate GetIsRoundHandler();
    private static bool n_IsRound(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRound", "()Z", "GetIsRoundHandler")]
public virtual bool get_IsRound();
    [ObsoleteAttribute]
private static Delegate GetGetMandatorySystemGestureInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetMandatorySystemGestureInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMandatorySystemGestureInsets", "()Landroidx/core/graphics/Insets;", "GetGetMandatorySystemGestureInsetsHandler")]
public virtual Insets get_MandatorySystemGestureInsets();
    [ObsoleteAttribute]
private static Delegate GetGetStableInsetBottomHandler();
    [ObsoleteAttribute]
private static int n_GetStableInsetBottom(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetBottom", "()I", "GetGetStableInsetBottomHandler")]
public virtual int get_StableInsetBottom();
    [ObsoleteAttribute]
private static Delegate GetGetStableInsetLeftHandler();
    [ObsoleteAttribute]
private static int n_GetStableInsetLeft(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetLeft", "()I", "GetGetStableInsetLeftHandler")]
public virtual int get_StableInsetLeft();
    [ObsoleteAttribute]
private static Delegate GetGetStableInsetRightHandler();
    [ObsoleteAttribute]
private static int n_GetStableInsetRight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetRight", "()I", "GetGetStableInsetRightHandler")]
public virtual int get_StableInsetRight();
    [ObsoleteAttribute]
private static Delegate GetGetStableInsetTopHandler();
    [ObsoleteAttribute]
private static int n_GetStableInsetTop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsetTop", "()I", "GetGetStableInsetTopHandler")]
public virtual int get_StableInsetTop();
    [ObsoleteAttribute]
private static Delegate GetGetStableInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetStableInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getStableInsets", "()Landroidx/core/graphics/Insets;", "GetGetStableInsetsHandler")]
public virtual Insets get_StableInsets();
    [ObsoleteAttribute]
private static Delegate GetGetSystemGestureInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetSystemGestureInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemGestureInsets", "()Landroidx/core/graphics/Insets;", "GetGetSystemGestureInsetsHandler")]
public virtual Insets get_SystemGestureInsets();
    [ObsoleteAttribute]
private static Delegate GetGetSystemWindowInsetBottomHandler();
    [ObsoleteAttribute]
private static int n_GetSystemWindowInsetBottom(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetBottom", "()I", "GetGetSystemWindowInsetBottomHandler")]
public virtual int get_SystemWindowInsetBottom();
    [ObsoleteAttribute]
private static Delegate GetGetSystemWindowInsetLeftHandler();
    [ObsoleteAttribute]
private static int n_GetSystemWindowInsetLeft(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetLeft", "()I", "GetGetSystemWindowInsetLeftHandler")]
public virtual int get_SystemWindowInsetLeft();
    [ObsoleteAttribute]
private static Delegate GetGetSystemWindowInsetRightHandler();
    [ObsoleteAttribute]
private static int n_GetSystemWindowInsetRight(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetRight", "()I", "GetGetSystemWindowInsetRightHandler")]
public virtual int get_SystemWindowInsetRight();
    [ObsoleteAttribute]
private static Delegate GetGetSystemWindowInsetTopHandler();
    [ObsoleteAttribute]
private static int n_GetSystemWindowInsetTop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsetTop", "()I", "GetGetSystemWindowInsetTopHandler")]
public virtual int get_SystemWindowInsetTop();
    [ObsoleteAttribute]
private static Delegate GetGetSystemWindowInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetSystemWindowInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSystemWindowInsets", "()Landroidx/core/graphics/Insets;", "GetGetSystemWindowInsetsHandler")]
public virtual Insets get_SystemWindowInsets();
    [ObsoleteAttribute]
private static Delegate GetGetTappableElementInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetTappableElementInsets(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTappableElementInsets", "()Landroidx/core/graphics/Insets;", "GetGetTappableElementInsetsHandler")]
public virtual Insets get_TappableElementInsets();
    [ObsoleteAttribute]
private static Delegate GetConsumeDisplayCutoutHandler();
    [ObsoleteAttribute]
private static IntPtr n_ConsumeDisplayCutout(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("consumeDisplayCutout", "()Landroidx/core/view/WindowInsetsCompat;", "GetConsumeDisplayCutoutHandler")]
public virtual WindowInsetsCompat ConsumeDisplayCutout();
    [ObsoleteAttribute]
private static Delegate GetConsumeStableInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_ConsumeStableInsets(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("consumeStableInsets", "()Landroidx/core/view/WindowInsetsCompat;", "GetConsumeStableInsetsHandler")]
public virtual WindowInsetsCompat ConsumeStableInsets();
    [ObsoleteAttribute]
private static Delegate GetConsumeSystemWindowInsetsHandler();
    [ObsoleteAttribute]
private static IntPtr n_ConsumeSystemWindowInsets(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("consumeSystemWindowInsets", "()Landroidx/core/view/WindowInsetsCompat;", "GetConsumeSystemWindowInsetsHandler")]
public virtual WindowInsetsCompat ConsumeSystemWindowInsets();
    private static Delegate GetGetInsets_IHandler();
    private static IntPtr n_GetInsets_I(IntPtr jnienv, IntPtr native__this, int typeMask);
    [RegisterAttribute("getInsets", "(I)Landroidx/core/graphics/Insets;", "GetGetInsets_IHandler")]
public virtual Insets GetInsets(int typeMask);
    private static Delegate GetGetInsetsIgnoringVisibility_IHandler();
    private static IntPtr n_GetInsetsIgnoringVisibility_I(IntPtr jnienv, IntPtr native__this, int typeMask);
    [RegisterAttribute("getInsetsIgnoringVisibility", "(I)Landroidx/core/graphics/Insets;", "GetGetInsetsIgnoringVisibility_IHandler")]
public virtual Insets GetInsetsIgnoringVisibility(int typeMask);
    private static Delegate GetInset_Landroidx_core_graphics_Insets_Handler();
    private static IntPtr n_Inset_Landroidx_core_graphics_Insets_(IntPtr jnienv, IntPtr native__this, IntPtr native_insets);
    [RegisterAttribute("inset", "(Landroidx/core/graphics/Insets;)Landroidx/core/view/WindowInsetsCompat;", "GetInset_Landroidx_core_graphics_Insets_Handler")]
public virtual WindowInsetsCompat Inset(Insets insets);
    private static Delegate GetInset_IIIIHandler();
    private static IntPtr n_Inset_IIII(IntPtr jnienv, IntPtr native__this, int left, int top, int right, int bottom);
    [RegisterAttribute("inset", "(IIII)Landroidx/core/view/WindowInsetsCompat;", "GetInset_IIIIHandler")]
public virtual WindowInsetsCompat Inset(int left, int top, int right, int bottom);
    private static Delegate GetIsVisible_IHandler();
    private static bool n_IsVisible_I(IntPtr jnienv, IntPtr native__this, int typeMask);
    [RegisterAttribute("isVisible", "(I)Z", "GetIsVisible_IHandler")]
public virtual bool IsVisible(int typeMask);
    [ObsoleteAttribute]
private static Delegate GetReplaceSystemWindowInsets_Landroid_graphics_Rect_Handler();
    [ObsoleteAttribute]
private static IntPtr n_ReplaceSystemWindowInsets_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_systemWindowInsets);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("replaceSystemWindowInsets", "(Landroid/graphics/Rect;)Landroidx/core/view/WindowInsetsCompat;", "GetReplaceSystemWindowInsets_Landroid_graphics_Rect_Handler")]
public virtual WindowInsetsCompat ReplaceSystemWindowInsets(Rect systemWindowInsets);
    [ObsoleteAttribute]
private static Delegate GetReplaceSystemWindowInsets_IIIIHandler();
    [ObsoleteAttribute]
private static IntPtr n_ReplaceSystemWindowInsets_IIII(IntPtr jnienv, IntPtr native__this, int left, int top, int right, int bottom);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("replaceSystemWindowInsets", "(IIII)Landroidx/core/view/WindowInsetsCompat;", "GetReplaceSystemWindowInsets_IIIIHandler")]
public virtual WindowInsetsCompat ReplaceSystemWindowInsets(int left, int top, int right, int bottom);
    private static Delegate GetToWindowInsetsHandler();
    private static IntPtr n_ToWindowInsets(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("toWindowInsets", "()Landroid/view/WindowInsets;", "GetToWindowInsetsHandler")]
public virtual WindowInsets ToWindowInsets();
    [RegisterAttribute("toWindowInsetsCompat", "(Landroid/view/WindowInsets;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat ToWindowInsetsCompat(WindowInsets insets);
    [RegisterAttribute("toWindowInsetsCompat", "(Landroid/view/WindowInsets;Landroid/view/View;)Landroidx/core/view/WindowInsetsCompat;", "")]
public static WindowInsetsCompat ToWindowInsetsCompat(WindowInsets insets, View view);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/view/WindowInsetsControllerCompat")]
public class AndroidX.Core.View.WindowInsetsControllerCompat : Object {
    [RegisterAttribute("BEHAVIOR_DEFAULT")]
public static int BehaviorDefault;
    [RegisterAttribute("BEHAVIOR_SHOW_BARS_BY_SWIPE")]
[ObsoleteAttribute("deprecated")]
public static int BehaviorShowBarsBySwipe;
    [RegisterAttribute("BEHAVIOR_SHOW_BARS_BY_TOUCH")]
[ObsoleteAttribute("deprecated")]
public static int BehaviorShowBarsByTouch;
    [RegisterAttribute("BEHAVIOR_SHOW_TRANSIENT_BARS_BY_SWIPE")]
public static int BehaviorShowTransientBarsBySwipe;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private WeakReference weak_implementor_AddOnControllableInsetsChangedListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool AppearanceLightNavigationBars { get; public set; }
    public bool AppearanceLightStatusBars { get; public set; }
    public int SystemBarsBehavior { get; public set; }
    internal WindowInsetsControllerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/Window;Landroid/view/View;)V", "")]
public WindowInsetsControllerCompat(Window window, View view);
    private static WindowInsetsControllerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isAppearanceLightNavigationBars", "()Z", "")]
public bool get_AppearanceLightNavigationBars();
    [RegisterAttribute("setAppearanceLightNavigationBars", "(Z)V", "")]
public void set_AppearanceLightNavigationBars(bool value);
    [RegisterAttribute("isAppearanceLightStatusBars", "()Z", "")]
public bool get_AppearanceLightStatusBars();
    [RegisterAttribute("setAppearanceLightStatusBars", "(Z)V", "")]
public void set_AppearanceLightStatusBars(bool value);
    [RegisterAttribute("getSystemBarsBehavior", "()I", "")]
public int get_SystemBarsBehavior();
    [RegisterAttribute("setSystemBarsBehavior", "(I)V", "")]
public void set_SystemBarsBehavior(int value);
    [RegisterAttribute("addOnControllableInsetsChangedListener", "(Landroidx/core/view/WindowInsetsControllerCompat$OnControllableInsetsChangedListener;)V", "")]
public void AddOnControllableInsetsChangedListener(IOnControllableInsetsChangedListener listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("controlWindowInsetsAnimation", "(IJLandroid/view/animation/Interpolator;Landroid/os/CancellationSignal;Landroidx/core/view/WindowInsetsAnimationControlListenerCompat;)V", "")]
public void ControlWindowInsetsAnimation(int types, long durationMillis, IInterpolator interpolator, CancellationSignal cancellationSignal, IWindowInsetsAnimationControlListenerCompat listener);
    [RegisterAttribute("hide", "(I)V", "")]
public void Hide(int types);
    [RegisterAttribute("removeOnControllableInsetsChangedListener", "(Landroidx/core/view/WindowInsetsControllerCompat$OnControllableInsetsChangedListener;)V", "")]
public void RemoveOnControllableInsetsChangedListener(IOnControllableInsetsChangedListener listener);
    [RegisterAttribute("show", "(I)V", "")]
public void Show(int types);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("toWindowInsetsControllerCompat", "(Landroid/view/WindowInsetsController;)Landroidx/core/view/WindowInsetsControllerCompat;", "")]
public static WindowInsetsControllerCompat ToWindowInsetsControllerCompat(IWindowInsetsController insetsController);
    public void add_ControllableInsetsChanged(EventHandler`1<ControllableInsetsChangedEventArgs> value);
    public void remove_ControllableInsetsChanged(EventHandler`1<ControllableInsetsChangedEventArgs> value);
    private IOnControllableInsetsChangedListenerImplementor __CreateIOnControllableInsetsChangedListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/AutoScrollHelper")]
public abstract class AndroidX.Core.Widget.AutoScrollHelper : Object {
    [RegisterAttribute("EDGE_TYPE_INSIDE")]
public static int EdgeTypeInside;
    [RegisterAttribute("EDGE_TYPE_INSIDE_EXTEND")]
public static int EdgeTypeInsideExtend;
    [RegisterAttribute("EDGE_TYPE_OUTSIDE")]
public static int EdgeTypeOutside;
    [RegisterAttribute("NO_MAX")]
public static float NoMax;
    [RegisterAttribute("NO_MIN")]
public static float NoMin;
    [RegisterAttribute("RELATIVE_UNSPECIFIED")]
public static float RelativeUnspecified;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isEnabled;
    [NullableAttribute("2")]
private static Delegate cb_isExclusive;
    [NullableAttribute("2")]
private static Delegate cb_canTargetScrollHorizontally_I;
    [NullableAttribute("2")]
private static Delegate cb_canTargetScrollVertically_I;
    [NullableAttribute("2")]
private static Delegate cb_onTouch_Landroid_view_View_Landroid_view_MotionEvent_;
    [NullableAttribute("2")]
private static Delegate cb_scrollTargetBy_II;
    [NullableAttribute("2")]
private static Delegate cb_setActivationDelay_I;
    [NullableAttribute("2")]
private static Delegate cb_setEdgeType_I;
    [NullableAttribute("2")]
private static Delegate cb_setEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_setExclusive_Z;
    [NullableAttribute("2")]
private static Delegate cb_setMaximumEdges_FF;
    [NullableAttribute("2")]
private static Delegate cb_setMaximumVelocity_FF;
    [NullableAttribute("2")]
private static Delegate cb_setMinimumVelocity_FF;
    [NullableAttribute("2")]
private static Delegate cb_setRampDownDuration_I;
    [NullableAttribute("2")]
private static Delegate cb_setRampUpDuration_I;
    [NullableAttribute("2")]
private static Delegate cb_setRelativeEdges_FF;
    [NullableAttribute("2")]
private static Delegate cb_setRelativeVelocity_FF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsEnabled { get; }
    public bool IsExclusive { get; }
    protected AutoScrollHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/view/View;)V", "")]
public AutoScrollHelper(View target);
    private static AutoScrollHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsEnabledHandler();
    private static bool n_IsEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isEnabled", "()Z", "GetIsEnabledHandler")]
public virtual bool get_IsEnabled();
    private static Delegate GetIsExclusiveHandler();
    private static bool n_IsExclusive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isExclusive", "()Z", "GetIsExclusiveHandler")]
public virtual bool get_IsExclusive();
    private static Delegate GetCanTargetScrollHorizontally_IHandler();
    private static bool n_CanTargetScrollHorizontally_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public abstract virtual bool CanTargetScrollHorizontally(int direction);
    private static Delegate GetCanTargetScrollVertically_IHandler();
    private static bool n_CanTargetScrollVertically_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public abstract virtual bool CanTargetScrollVertically(int direction);
    private static Delegate GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler();
    private static bool n_OnTouch_Landroid_view_View_Landroid_view_MotionEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_v, IntPtr native_e);
    [NullableContextAttribute("2")]
[RegisterAttribute("onTouch", "(Landroid/view/View;Landroid/view/MotionEvent;)Z", "GetOnTouch_Landroid_view_View_Landroid_view_MotionEvent_Handler")]
public virtual bool OnTouch(View v, MotionEvent e);
    private static Delegate GetScrollTargetBy_IIHandler();
    private static void n_ScrollTargetBy_II(IntPtr jnienv, IntPtr native__this, int deltaX, int deltaY);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public abstract virtual void ScrollTargetBy(int deltaX, int deltaY);
    private static Delegate GetSetActivationDelay_IHandler();
    private static IntPtr n_SetActivationDelay_I(IntPtr jnienv, IntPtr native__this, int delayMillis);
    [RegisterAttribute("setActivationDelay", "(I)Landroidx/core/widget/AutoScrollHelper;", "GetSetActivationDelay_IHandler")]
public virtual AutoScrollHelper SetActivationDelay(int delayMillis);
    private static Delegate GetSetEdgeType_IHandler();
    private static IntPtr n_SetEdgeType_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("setEdgeType", "(I)Landroidx/core/widget/AutoScrollHelper;", "GetSetEdgeType_IHandler")]
public virtual AutoScrollHelper SetEdgeType(int type);
    private static Delegate GetSetEnabled_ZHandler();
    private static IntPtr n_SetEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [NullableContextAttribute("2")]
[RegisterAttribute("setEnabled", "(Z)Landroidx/core/widget/AutoScrollHelper;", "GetSetEnabled_ZHandler")]
public virtual AutoScrollHelper SetEnabled(bool enabled);
    private static Delegate GetSetExclusive_ZHandler();
    private static IntPtr n_SetExclusive_Z(IntPtr jnienv, IntPtr native__this, bool exclusive);
    [NullableContextAttribute("2")]
[RegisterAttribute("setExclusive", "(Z)Landroidx/core/widget/AutoScrollHelper;", "GetSetExclusive_ZHandler")]
public virtual AutoScrollHelper SetExclusive(bool exclusive);
    private static Delegate GetSetMaximumEdges_FFHandler();
    private static IntPtr n_SetMaximumEdges_FF(IntPtr jnienv, IntPtr native__this, float horizontalMax, float verticalMax);
    [RegisterAttribute("setMaximumEdges", "(FF)Landroidx/core/widget/AutoScrollHelper;", "GetSetMaximumEdges_FFHandler")]
public virtual AutoScrollHelper SetMaximumEdges(float horizontalMax, float verticalMax);
    private static Delegate GetSetMaximumVelocity_FFHandler();
    private static IntPtr n_SetMaximumVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontalMax, float verticalMax);
    [RegisterAttribute("setMaximumVelocity", "(FF)Landroidx/core/widget/AutoScrollHelper;", "GetSetMaximumVelocity_FFHandler")]
public virtual AutoScrollHelper SetMaximumVelocity(float horizontalMax, float verticalMax);
    private static Delegate GetSetMinimumVelocity_FFHandler();
    private static IntPtr n_SetMinimumVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontalMin, float verticalMin);
    [RegisterAttribute("setMinimumVelocity", "(FF)Landroidx/core/widget/AutoScrollHelper;", "GetSetMinimumVelocity_FFHandler")]
public virtual AutoScrollHelper SetMinimumVelocity(float horizontalMin, float verticalMin);
    private static Delegate GetSetRampDownDuration_IHandler();
    private static IntPtr n_SetRampDownDuration_I(IntPtr jnienv, IntPtr native__this, int durationMillis);
    [RegisterAttribute("setRampDownDuration", "(I)Landroidx/core/widget/AutoScrollHelper;", "GetSetRampDownDuration_IHandler")]
public virtual AutoScrollHelper SetRampDownDuration(int durationMillis);
    private static Delegate GetSetRampUpDuration_IHandler();
    private static IntPtr n_SetRampUpDuration_I(IntPtr jnienv, IntPtr native__this, int durationMillis);
    [RegisterAttribute("setRampUpDuration", "(I)Landroidx/core/widget/AutoScrollHelper;", "GetSetRampUpDuration_IHandler")]
public virtual AutoScrollHelper SetRampUpDuration(int durationMillis);
    private static Delegate GetSetRelativeEdges_FFHandler();
    private static IntPtr n_SetRelativeEdges_FF(IntPtr jnienv, IntPtr native__this, float horizontal, float vertical);
    [RegisterAttribute("setRelativeEdges", "(FF)Landroidx/core/widget/AutoScrollHelper;", "GetSetRelativeEdges_FFHandler")]
public virtual AutoScrollHelper SetRelativeEdges(float horizontal, float vertical);
    private static Delegate GetSetRelativeVelocity_FFHandler();
    private static IntPtr n_SetRelativeVelocity_FF(IntPtr jnienv, IntPtr native__this, float horizontal, float vertical);
    [RegisterAttribute("setRelativeVelocity", "(FF)Landroidx/core/widget/AutoScrollHelper;", "GetSetRelativeVelocity_FFHandler")]
public virtual AutoScrollHelper SetRelativeVelocity(float horizontal, float vertical);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/AutoScrollHelper")]
internal class AndroidX.Core.Widget.AutoScrollHelperInvoker : AutoScrollHelper {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AutoScrollHelperInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static AutoScrollHelperInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public virtual bool CanTargetScrollHorizontally(int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public virtual bool CanTargetScrollVertically(int direction);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public virtual void ScrollTargetBy(int deltaX, int deltaY);
}
[RegisterAttribute("androidx/core/widget/AutoSizeableTextView")]
public abstract class AndroidX.Core.Widget.AutoSizeableTextView : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("PLATFORM_SUPPORTS_AUTOSIZE")]
[ObsoleteAttribute("deprecated")]
public static bool PlatformSupportsAutosize { get; }
    private static AutoSizeableTextView();
    public static bool get_PlatformSupportsAutosize();
}
[RegisterAttribute("androidx/core/widget/AutoSizeableTextView")]
[ObsoleteAttribute("Use the 'AutoSizeableTextView' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Core.Widget.AutoSizeableTextViewConsts : AutoSizeableTextView {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/CheckedTextViewCompat")]
public class AndroidX.Core.Widget.CheckedTextViewCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CheckedTextViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static CheckedTextViewCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCheckMarkDrawable", "(Landroid/widget/CheckedTextView;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetCheckMarkDrawable(CheckedTextView textView);
    [RegisterAttribute("getCheckMarkTintList", "(Landroid/widget/CheckedTextView;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetCheckMarkTintList(CheckedTextView textView);
    [RegisterAttribute("getCheckMarkTintMode", "(Landroid/widget/CheckedTextView;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetCheckMarkTintMode(CheckedTextView textView);
    [RegisterAttribute("setCheckMarkTintList", "(Landroid/widget/CheckedTextView;Landroid/content/res/ColorStateList;)V", "")]
public static void SetCheckMarkTintList(CheckedTextView textView, ColorStateList tint);
    [RegisterAttribute("setCheckMarkTintMode", "(Landroid/widget/CheckedTextView;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetCheckMarkTintMode(CheckedTextView textView, Mode tintMode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/CompoundButtonCompat")]
public class AndroidX.Core.Widget.CompoundButtonCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompoundButtonCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompoundButtonCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getButtonDrawable", "(Landroid/widget/CompoundButton;)Landroid/graphics/drawable/Drawable;", "")]
public static Drawable GetButtonDrawable(CompoundButton button);
    [RegisterAttribute("getButtonTintList", "(Landroid/widget/CompoundButton;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetButtonTintList(CompoundButton button);
    [RegisterAttribute("getButtonTintMode", "(Landroid/widget/CompoundButton;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetButtonTintMode(CompoundButton button);
    [RegisterAttribute("setButtonTintList", "(Landroid/widget/CompoundButton;Landroid/content/res/ColorStateList;)V", "")]
public static void SetButtonTintList(CompoundButton button, ColorStateList tint);
    [RegisterAttribute("setButtonTintMode", "(Landroid/widget/CompoundButton;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetButtonTintMode(CompoundButton button, Mode tintMode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/ContentLoadingProgressBar")]
public class AndroidX.Core.Widget.ContentLoadingProgressBar : ProgressBar {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_hide;
    [NullableAttribute("2")]
private static Delegate cb_onAttachedToWindow;
    [NullableAttribute("2")]
private static Delegate cb_onDetachedFromWindow;
    [NullableAttribute("2")]
private static Delegate cb_show;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ContentLoadingProgressBar(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public ContentLoadingProgressBar(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public ContentLoadingProgressBar(Context context, IAttributeSet attrs);
    private static ContentLoadingProgressBar();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHideHandler();
    private static void n_Hide(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hide", "()V", "GetHideHandler")]
public virtual void Hide();
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    private static Delegate GetShowHandler();
    private static void n_Show(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("show", "()V", "GetShowHandler")]
public virtual void Show();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/EdgeEffectCompat")]
public class AndroidX.Core.Widget.EdgeEffectCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsFinished { get; }
    internal EdgeEffectCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
[ObsoleteAttribute("deprecated")]
public EdgeEffectCompat(Context context);
    private static EdgeEffectCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isFinished", "()Z", "")]
public bool get_IsFinished();
    [RegisterAttribute("create", "(Landroid/content/Context;Landroid/util/AttributeSet;)Landroid/widget/EdgeEffect;", "")]
public static EdgeEffect Create(Context context, IAttributeSet attrs);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("draw", "(Landroid/graphics/Canvas;)Z", "")]
public bool Draw(Canvas canvas);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("finish", "()V", "")]
public void Finish();
    [RegisterAttribute("getDistance", "(Landroid/widget/EdgeEffect;)F", "")]
public static float GetDistance(EdgeEffect edgeEffect);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onAbsorb", "(I)Z", "")]
public bool OnAbsorb(int velocity);
    [RegisterAttribute("onPull", "(Landroid/widget/EdgeEffect;FF)V", "")]
public static void OnPull(EdgeEffect edgeEffect, float deltaDistance, float displacement);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPull", "(F)Z", "")]
public bool OnPull(float deltaDistance);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onPull", "(FF)Z", "")]
public bool OnPull(float deltaDistance, float displacement);
    [RegisterAttribute("onPullDistance", "(Landroid/widget/EdgeEffect;FF)F", "")]
public static float OnPullDistance(EdgeEffect edgeEffect, float deltaDistance, float displacement);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onRelease", "()Z", "")]
public bool OnRelease();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setSize", "(II)V", "")]
public void SetSize(int width, int height);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/widget/AutoSizeableTextView", "", "AndroidX.Core.Widget.IAutoSizeableTextViewInvoker")]
public interface AndroidX.Core.Widget.IAutoSizeableTextView {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("PLATFORM_SUPPORTS_AUTOSIZE")]
[ObsoleteAttribute("deprecated")]
public static bool PlatformSupportsAutosize { get; }
    public int AutoSizeMaxTextSize { get; }
    public int AutoSizeMinTextSize { get; }
    public int AutoSizeStepGranularity { get; }
    public AutoSizeTextType AutoSizeTextType { get; }
    private static IAutoSizeableTextView();
    public static bool get_PlatformSupportsAutosize();
    [RegisterAttribute("getAutoSizeMaxTextSize", "()I", "GetGetAutoSizeMaxTextSizeHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int get_AutoSizeMaxTextSize();
    [RegisterAttribute("getAutoSizeMinTextSize", "()I", "GetGetAutoSizeMinTextSizeHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int get_AutoSizeMinTextSize();
    [RegisterAttribute("getAutoSizeStepGranularity", "()I", "GetGetAutoSizeStepGranularityHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual int get_AutoSizeStepGranularity();
    [RegisterAttribute("getAutoSizeTextType", "()I", "GetGetAutoSizeTextTypeHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual AutoSizeTextType get_AutoSizeTextType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getAutoSizeTextAvailableSizes", "()[I", "GetGetAutoSizeTextAvailableSizesHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Int32[] GetAutoSizeTextAvailableSizes();
    [RegisterAttribute("setAutoSizeTextTypeUniformWithConfiguration", "(IIII)V", "GetSetAutoSizeTextTypeUniformWithConfiguration_IIIIHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetAutoSizeTextTypeUniformWithConfiguration(int autoSizeMinTextSize, int autoSizeMaxTextSize, int autoSizeStepGranularity, int unit);
    [NullableContextAttribute("1")]
[RegisterAttribute("setAutoSizeTextTypeUniformWithPresetSizes", "([II)V", "GetSetAutoSizeTextTypeUniformWithPresetSizes_arrayIIHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetAutoSizeTextTypeUniformWithPresetSizes(Int32[] presetSizes, int unit);
    [RegisterAttribute("setAutoSizeTextTypeWithDefaults", "(I)V", "GetSetAutoSizeTextTypeWithDefaults_IHandler:AndroidX.Core.Widget.IAutoSizeableTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void SetAutoSizeTextTypeWithDefaults(AutoSizeTextType autoSizeTextType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/AutoSizeableTextView")]
internal class AndroidX.Core.Widget.IAutoSizeableTextViewInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getAutoSizeMaxTextSize;
    private IntPtr id_getAutoSizeMaxTextSize;
    [NullableAttribute("2")]
private static Delegate cb_getAutoSizeMinTextSize;
    private IntPtr id_getAutoSizeMinTextSize;
    [NullableAttribute("2")]
private static Delegate cb_getAutoSizeStepGranularity;
    private IntPtr id_getAutoSizeStepGranularity;
    [NullableAttribute("2")]
private static Delegate cb_getAutoSizeTextType;
    private IntPtr id_getAutoSizeTextType;
    [NullableAttribute("2")]
private static Delegate cb_getAutoSizeTextAvailableSizes;
    private IntPtr id_getAutoSizeTextAvailableSizes;
    [NullableAttribute("2")]
private static Delegate cb_setAutoSizeTextTypeUniformWithConfiguration_IIII;
    private IntPtr id_setAutoSizeTextTypeUniformWithConfiguration_IIII;
    [NullableAttribute("2")]
private static Delegate cb_setAutoSizeTextTypeUniformWithPresetSizes_arrayII;
    private IntPtr id_setAutoSizeTextTypeUniformWithPresetSizes_arrayII;
    [NullableAttribute("2")]
private static Delegate cb_setAutoSizeTextTypeWithDefaults_I;
    private IntPtr id_setAutoSizeTextTypeWithDefaults_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int AutoSizeMaxTextSize { get; }
    public int AutoSizeMinTextSize { get; }
    public int AutoSizeStepGranularity { get; }
    public AutoSizeTextType AutoSizeTextType { get; }
    public IAutoSizeableTextViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAutoSizeableTextViewInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IAutoSizeableTextView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetAutoSizeMaxTextSizeHandler();
    private static int n_GetAutoSizeMaxTextSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_AutoSizeMaxTextSize();
    private static Delegate GetGetAutoSizeMinTextSizeHandler();
    private static int n_GetAutoSizeMinTextSize(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_AutoSizeMinTextSize();
    private static Delegate GetGetAutoSizeStepGranularityHandler();
    private static int n_GetAutoSizeStepGranularity(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_AutoSizeStepGranularity();
    private static Delegate GetGetAutoSizeTextTypeHandler();
    private static int n_GetAutoSizeTextType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual AutoSizeTextType get_AutoSizeTextType();
    private static Delegate GetGetAutoSizeTextAvailableSizesHandler();
    private static IntPtr n_GetAutoSizeTextAvailableSizes(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Int32[] GetAutoSizeTextAvailableSizes();
    private static Delegate GetSetAutoSizeTextTypeUniformWithConfiguration_IIIIHandler();
    private static void n_SetAutoSizeTextTypeUniformWithConfiguration_IIII(IntPtr jnienv, IntPtr native__this, int autoSizeMinTextSize, int autoSizeMaxTextSize, int autoSizeStepGranularity, int unit);
    public sealed virtual void SetAutoSizeTextTypeUniformWithConfiguration(int autoSizeMinTextSize, int autoSizeMaxTextSize, int autoSizeStepGranularity, int unit);
    private static Delegate GetSetAutoSizeTextTypeUniformWithPresetSizes_arrayIIHandler();
    private static void n_SetAutoSizeTextTypeUniformWithPresetSizes_arrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_presetSizes, int unit);
    public sealed virtual void SetAutoSizeTextTypeUniformWithPresetSizes(Int32[] presetSizes, int unit);
    private static Delegate GetSetAutoSizeTextTypeWithDefaults_IHandler();
    private static void n_SetAutoSizeTextTypeWithDefaults_I(IntPtr jnienv, IntPtr native__this, int native_autoSizeTextType);
    public sealed virtual void SetAutoSizeTextTypeWithDefaults(AutoSizeTextType autoSizeTextType);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/ImageViewCompat")]
public class AndroidX.Core.Widget.ImageViewCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ImageViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ImageViewCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getImageTintList", "(Landroid/widget/ImageView;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetImageTintList(ImageView view);
    [RegisterAttribute("getImageTintMode", "(Landroid/widget/ImageView;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetImageTintMode(ImageView view);
    [RegisterAttribute("setImageTintList", "(Landroid/widget/ImageView;Landroid/content/res/ColorStateList;)V", "")]
public static void SetImageTintList(ImageView view, ColorStateList tintList);
    [RegisterAttribute("setImageTintMode", "(Landroid/widget/ImageView;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetImageTintMode(ImageView view, Mode mode);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/widget/TintableCheckedTextView", "", "AndroidX.Core.Widget.ITintableCheckedTextViewInvoker")]
public interface AndroidX.Core.Widget.ITintableCheckedTextView {
    public ColorStateList SupportCheckMarkTintList { get; public set; }
    public Mode SupportCheckMarkTintMode { get; public set; }
    [RegisterAttribute("getSupportCheckMarkTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportCheckMarkTintListHandler:AndroidX.Core.Widget.ITintableCheckedTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_SupportCheckMarkTintList();
    [RegisterAttribute("setSupportCheckMarkTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportCheckMarkTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Widget.ITintableCheckedTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportCheckMarkTintList(ColorStateList value);
    [RegisterAttribute("getSupportCheckMarkTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportCheckMarkTintModeHandler:AndroidX.Core.Widget.ITintableCheckedTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_SupportCheckMarkTintMode();
    [RegisterAttribute("setSupportCheckMarkTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportCheckMarkTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Widget.ITintableCheckedTextViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportCheckMarkTintMode(Mode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/TintableCheckedTextView")]
internal class AndroidX.Core.Widget.ITintableCheckedTextViewInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getSupportCheckMarkTintList;
    private static Delegate cb_setSupportCheckMarkTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportCheckMarkTintList;
    private IntPtr id_setSupportCheckMarkTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportCheckMarkTintMode;
    private static Delegate cb_setSupportCheckMarkTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportCheckMarkTintMode;
    private IntPtr id_setSupportCheckMarkTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ColorStateList SupportCheckMarkTintList { get; public set; }
    public Mode SupportCheckMarkTintMode { get; public set; }
    public ITintableCheckedTextViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableCheckedTextViewInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITintableCheckedTextView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportCheckMarkTintListHandler();
    private static IntPtr n_GetSupportCheckMarkTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportCheckMarkTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportCheckMarkTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportCheckMarkTintList();
    public sealed virtual void set_SupportCheckMarkTintList(ColorStateList value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportCheckMarkTintModeHandler();
    private static IntPtr n_GetSupportCheckMarkTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportCheckMarkTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportCheckMarkTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportCheckMarkTintMode();
    public sealed virtual void set_SupportCheckMarkTintMode(Mode value);
}
[NullableContextAttribute("2")]
[RegisterAttribute("androidx/core/widget/TintableCompoundButton", "", "AndroidX.Core.Widget.ITintableCompoundButtonInvoker")]
public interface AndroidX.Core.Widget.ITintableCompoundButton {
    public ColorStateList SupportButtonTintList { get; public set; }
    public Mode SupportButtonTintMode { get; public set; }
    [RegisterAttribute("getSupportButtonTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportButtonTintListHandler:AndroidX.Core.Widget.ITintableCompoundButtonInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_SupportButtonTintList();
    [RegisterAttribute("setSupportButtonTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportButtonTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Widget.ITintableCompoundButtonInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportButtonTintList(ColorStateList value);
    [RegisterAttribute("getSupportButtonTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportButtonTintModeHandler:AndroidX.Core.Widget.ITintableCompoundButtonInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_SupportButtonTintMode();
    [RegisterAttribute("setSupportButtonTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Widget.ITintableCompoundButtonInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportButtonTintMode(Mode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/TintableCompoundButton")]
internal class AndroidX.Core.Widget.ITintableCompoundButtonInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getSupportButtonTintList;
    private static Delegate cb_setSupportButtonTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportButtonTintList;
    private IntPtr id_setSupportButtonTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportButtonTintMode;
    private static Delegate cb_setSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportButtonTintMode;
    private IntPtr id_setSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ColorStateList SupportButtonTintList { get; public set; }
    public Mode SupportButtonTintMode { get; public set; }
    public ITintableCompoundButtonInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableCompoundButtonInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITintableCompoundButton GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportButtonTintListHandler();
    private static IntPtr n_GetSupportButtonTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportButtonTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportButtonTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportButtonTintList();
    public sealed virtual void set_SupportButtonTintList(ColorStateList value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportButtonTintModeHandler();
    private static IntPtr n_GetSupportButtonTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportButtonTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportButtonTintMode();
    public sealed virtual void set_SupportButtonTintMode(Mode value);
}
[NullableContextAttribute("2")]
[RegisterAttribute("androidx/core/widget/TintableCompoundDrawablesView", "", "AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker")]
public interface AndroidX.Core.Widget.ITintableCompoundDrawablesView {
    public ColorStateList SupportCompoundDrawablesTintList { get; public set; }
    public Mode SupportCompoundDrawablesTintMode { get; public set; }
    [RegisterAttribute("getSupportCompoundDrawablesTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportCompoundDrawablesTintListHandler:AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_SupportCompoundDrawablesTintList();
    [RegisterAttribute("setSupportCompoundDrawablesTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportCompoundDrawablesTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportCompoundDrawablesTintList(ColorStateList value);
    [RegisterAttribute("getSupportCompoundDrawablesTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportCompoundDrawablesTintModeHandler:AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_SupportCompoundDrawablesTintMode();
    [RegisterAttribute("setSupportCompoundDrawablesTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportCompoundDrawablesTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportCompoundDrawablesTintMode(Mode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/TintableCompoundDrawablesView")]
internal class AndroidX.Core.Widget.ITintableCompoundDrawablesViewInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getSupportCompoundDrawablesTintList;
    private static Delegate cb_setSupportCompoundDrawablesTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportCompoundDrawablesTintList;
    private IntPtr id_setSupportCompoundDrawablesTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportCompoundDrawablesTintMode;
    private static Delegate cb_setSupportCompoundDrawablesTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportCompoundDrawablesTintMode;
    private IntPtr id_setSupportCompoundDrawablesTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ColorStateList SupportCompoundDrawablesTintList { get; public set; }
    public Mode SupportCompoundDrawablesTintMode { get; public set; }
    public ITintableCompoundDrawablesViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableCompoundDrawablesViewInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITintableCompoundDrawablesView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportCompoundDrawablesTintListHandler();
    private static IntPtr n_GetSupportCompoundDrawablesTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportCompoundDrawablesTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportCompoundDrawablesTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportCompoundDrawablesTintList();
    public sealed virtual void set_SupportCompoundDrawablesTintList(ColorStateList value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportCompoundDrawablesTintModeHandler();
    private static IntPtr n_GetSupportCompoundDrawablesTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportCompoundDrawablesTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportCompoundDrawablesTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportCompoundDrawablesTintMode();
    public sealed virtual void set_SupportCompoundDrawablesTintMode(Mode value);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/widget/TintableImageSourceView", "", "AndroidX.Core.Widget.ITintableImageSourceViewInvoker")]
public interface AndroidX.Core.Widget.ITintableImageSourceView {
    public ColorStateList SupportImageTintList { get; public set; }
    public Mode SupportImageTintMode { get; public set; }
    [RegisterAttribute("getSupportImageTintList", "()Landroid/content/res/ColorStateList;", "GetGetSupportImageTintListHandler:AndroidX.Core.Widget.ITintableImageSourceViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual ColorStateList get_SupportImageTintList();
    [RegisterAttribute("setSupportImageTintList", "(Landroid/content/res/ColorStateList;)V", "GetSetSupportImageTintList_Landroid_content_res_ColorStateList_Handler:AndroidX.Core.Widget.ITintableImageSourceViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportImageTintList(ColorStateList value);
    [RegisterAttribute("getSupportImageTintMode", "()Landroid/graphics/PorterDuff$Mode;", "GetGetSupportImageTintModeHandler:AndroidX.Core.Widget.ITintableImageSourceViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual Mode get_SupportImageTintMode();
    [RegisterAttribute("setSupportImageTintMode", "(Landroid/graphics/PorterDuff$Mode;)V", "GetSetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_Handler:AndroidX.Core.Widget.ITintableImageSourceViewInvoker, Xamarin.AndroidX.Core")]
public abstract virtual void set_SupportImageTintMode(Mode value);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/TintableImageSourceView")]
internal class AndroidX.Core.Widget.ITintableImageSourceViewInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_getSupportImageTintList;
    private static Delegate cb_setSupportImageTintList_Landroid_content_res_ColorStateList_;
    private IntPtr id_getSupportImageTintList;
    private IntPtr id_setSupportImageTintList_Landroid_content_res_ColorStateList_;
    private static Delegate cb_getSupportImageTintMode;
    private static Delegate cb_setSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_;
    private IntPtr id_getSupportImageTintMode;
    private IntPtr id_setSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ColorStateList SupportImageTintList { get; public set; }
    public Mode SupportImageTintMode { get; public set; }
    public ITintableImageSourceViewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ITintableImageSourceViewInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static ITintableImageSourceView GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportImageTintListHandler();
    private static IntPtr n_GetSupportImageTintList(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportImageTintList_Landroid_content_res_ColorStateList_Handler();
    private static void n_SetSupportImageTintList_Landroid_content_res_ColorStateList_(IntPtr jnienv, IntPtr native__this, IntPtr native_tint);
    public sealed virtual ColorStateList get_SupportImageTintList();
    public sealed virtual void set_SupportImageTintList(ColorStateList value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSupportImageTintModeHandler();
    private static IntPtr n_GetSupportImageTintMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_Handler();
    private static void n_SetSupportImageTintMode_Landroid_graphics_PorterDuff_Mode_(IntPtr jnienv, IntPtr native__this, IntPtr native_tintMode);
    public sealed virtual Mode get_SupportImageTintMode();
    public sealed virtual void set_SupportImageTintMode(Mode value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/ListPopupWindowCompat")]
public class AndroidX.Core.Widget.ListPopupWindowCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ListPopupWindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ListPopupWindowCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createDragToOpenListener", "(Landroid/widget/ListPopupWindow;Landroid/view/View;)Landroid/view/View$OnTouchListener;", "")]
public static IOnTouchListener CreateDragToOpenListener(ListPopupWindow listPopupWindow, View src);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("createDragToOpenListener", "(Ljava/lang/Object;Landroid/view/View;)Landroid/view/View$OnTouchListener;", "")]
public static IOnTouchListener CreateDragToOpenListener(Object listPopupWindow, View src);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/ListViewAutoScrollHelper")]
public class AndroidX.Core.Widget.ListViewAutoScrollHelper : AutoScrollHelper {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_canTargetScrollHorizontally_I;
    [NullableAttribute("2")]
private static Delegate cb_canTargetScrollVertically_I;
    [NullableAttribute("2")]
private static Delegate cb_scrollTargetBy_II;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ListViewAutoScrollHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/widget/ListView;)V", "")]
public ListViewAutoScrollHelper(ListView target);
    private static ListViewAutoScrollHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetCanTargetScrollHorizontally_IHandler();
    private static bool n_CanTargetScrollHorizontally_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollHorizontally", "(I)Z", "GetCanTargetScrollHorizontally_IHandler")]
public virtual bool CanTargetScrollHorizontally(int direction);
    private static Delegate GetCanTargetScrollVertically_IHandler();
    private static bool n_CanTargetScrollVertically_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("canTargetScrollVertically", "(I)Z", "GetCanTargetScrollVertically_IHandler")]
public virtual bool CanTargetScrollVertically(int direction);
    private static Delegate GetScrollTargetBy_IIHandler();
    private static void n_ScrollTargetBy_II(IntPtr jnienv, IntPtr native__this, int deltaX, int deltaY);
    [RegisterAttribute("scrollTargetBy", "(II)V", "GetScrollTargetBy_IIHandler")]
public virtual void ScrollTargetBy(int deltaX, int deltaY);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/widget/ListViewCompat")]
public class AndroidX.Core.Widget.ListViewCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ListViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ListViewCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("canScrollList", "(Landroid/widget/ListView;I)Z", "")]
public static bool CanScrollList(ListView listView, int direction);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("scrollListBy", "(Landroid/widget/ListView;I)V", "")]
public static void ScrollListBy(ListView listView, int y);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/NestedScrollView")]
public class AndroidX.Core.Widget.NestedScrollView : FrameLayout {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isFillViewport;
    [NullableAttribute("2")]
private static Delegate cb_setFillViewport_Z;
    [NullableAttribute("2")]
private static Delegate cb_getMaxScrollAmount;
    [NullableAttribute("2")]
private static Delegate cb_isSmoothScrollingEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setSmoothScrollingEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_arrowScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollExtent;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollOffset;
    [NullableAttribute("2")]
private static Delegate cb_computeHorizontalScrollRange;
    [NullableAttribute("2")]
private static Delegate cb_computeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollExtent;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollOffset;
    [NullableAttribute("2")]
private static Delegate cb_computeVerticalScrollRange;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedPreScroll_IIarrayIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_dispatchNestedScroll_IIIIarrayIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_executeKeyEvent_Landroid_view_KeyEvent_;
    [NullableAttribute("2")]
private static Delegate cb_fling_I;
    [NullableAttribute("2")]
private static Delegate cb_fullScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_hasNestedScrollingParent_I;
    [NullableAttribute("2")]
private static Delegate cb_onAttachedToWindow;
    [NullableAttribute("2")]
private static Delegate cb_onNestedPreScroll_Landroid_view_View_IIarrayII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIIII;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScroll_Landroid_view_View_IIIIIarrayI;
    [NullableAttribute("2")]
private static Delegate cb_onNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStartNestedScroll_Landroid_view_View_Landroid_view_View_II;
    [NullableAttribute("2")]
private static Delegate cb_onStopNestedScroll_Landroid_view_View_I;
    [NullableAttribute("2")]
private static Delegate cb_pageScroll_I;
    [NullableAttribute("2")]
private static Delegate cb_setOnScrollChangeListener_Landroidx_core_widget_NestedScrollView_OnScrollChangeListener_;
    [NullableAttribute("2")]
private static Delegate cb_startNestedScroll_II;
    [NullableAttribute("2")]
private static Delegate cb_stopNestedScroll_I;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetOnScrollChangeListener;
    [RegisterAttribute("mEdgeGlowBottom")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public EdgeEffect MEdgeGlowBottom { get; public set; }
    [RegisterAttribute("mEdgeGlowTop")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public EdgeEffect MEdgeGlowTop { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool FillViewport { get; public set; }
    public int MaxScrollAmount { get; }
    public bool SmoothScrollingEnabled { get; public set; }
    protected NestedScrollView(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public NestedScrollView(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public NestedScrollView(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public NestedScrollView(Context context, IAttributeSet attrs, int defStyleAttr);
    private static NestedScrollView();
    public virtual void OnNestedScrollAccepted(View child, View target, int axes, int type);
    public virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes);
    public virtual bool OnStartNestedScroll(View child, View target, int axes, int type);
    public EdgeEffect get_MEdgeGlowBottom();
    public void set_MEdgeGlowBottom(EdgeEffect value);
    public EdgeEffect get_MEdgeGlowTop();
    public void set_MEdgeGlowTop(EdgeEffect value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsFillViewportHandler();
    private static bool n_IsFillViewport(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetFillViewport_ZHandler();
    private static void n_SetFillViewport_Z(IntPtr jnienv, IntPtr native__this, bool fillViewport);
    [RegisterAttribute("isFillViewport", "()Z", "GetIsFillViewportHandler")]
public virtual bool get_FillViewport();
    [RegisterAttribute("setFillViewport", "(Z)V", "GetSetFillViewport_ZHandler")]
public virtual void set_FillViewport(bool value);
    private static Delegate GetGetMaxScrollAmountHandler();
    private static int n_GetMaxScrollAmount(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMaxScrollAmount", "()I", "GetGetMaxScrollAmountHandler")]
public virtual int get_MaxScrollAmount();
    private static Delegate GetIsSmoothScrollingEnabledHandler();
    private static bool n_IsSmoothScrollingEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSmoothScrollingEnabled_ZHandler();
    private static void n_SetSmoothScrollingEnabled_Z(IntPtr jnienv, IntPtr native__this, bool smoothScrollingEnabled);
    [RegisterAttribute("isSmoothScrollingEnabled", "()Z", "GetIsSmoothScrollingEnabledHandler")]
public virtual bool get_SmoothScrollingEnabled();
    [RegisterAttribute("setSmoothScrollingEnabled", "(Z)V", "GetSetSmoothScrollingEnabled_ZHandler")]
public virtual void set_SmoothScrollingEnabled(bool value);
    private static Delegate GetArrowScroll_IHandler();
    private static bool n_ArrowScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("arrowScroll", "(I)Z", "GetArrowScroll_IHandler")]
public virtual bool ArrowScroll(int direction);
    private static Delegate GetComputeHorizontalScrollExtentHandler();
    private static int n_ComputeHorizontalScrollExtent(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeHorizontalScrollExtent", "()I", "GetComputeHorizontalScrollExtentHandler")]
public virtual int ComputeHorizontalScrollExtent();
    private static Delegate GetComputeHorizontalScrollOffsetHandler();
    private static int n_ComputeHorizontalScrollOffset(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeHorizontalScrollOffset", "()I", "GetComputeHorizontalScrollOffsetHandler")]
public virtual int ComputeHorizontalScrollOffset();
    private static Delegate GetComputeHorizontalScrollRangeHandler();
    private static int n_ComputeHorizontalScrollRange(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeHorizontalScrollRange", "()I", "GetComputeHorizontalScrollRangeHandler")]
public virtual int ComputeHorizontalScrollRange();
    private static Delegate GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler();
    private static int n_ComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_(IntPtr jnienv, IntPtr native__this, IntPtr native_rect);
    [NullableContextAttribute("2")]
[RegisterAttribute("computeScrollDeltaToGetChildRectOnScreen", "(Landroid/graphics/Rect;)I", "GetComputeScrollDeltaToGetChildRectOnScreen_Landroid_graphics_Rect_Handler")]
protected virtual int ComputeScrollDeltaToGetChildRectOnScreen(Rect rect);
    private static Delegate GetComputeVerticalScrollExtentHandler();
    private static int n_ComputeVerticalScrollExtent(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeVerticalScrollExtent", "()I", "GetComputeVerticalScrollExtentHandler")]
public virtual int ComputeVerticalScrollExtent();
    private static Delegate GetComputeVerticalScrollOffsetHandler();
    private static int n_ComputeVerticalScrollOffset(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeVerticalScrollOffset", "()I", "GetComputeVerticalScrollOffsetHandler")]
public virtual int ComputeVerticalScrollOffset();
    private static Delegate GetComputeVerticalScrollRangeHandler();
    private static int n_ComputeVerticalScrollRange(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("computeVerticalScrollRange", "()I", "GetComputeVerticalScrollRangeHandler")]
public virtual int ComputeVerticalScrollRange();
    private static Delegate GetDispatchNestedPreScroll_IIarrayIarrayIIHandler();
    private static bool n_DispatchNestedPreScroll_IIarrayIarrayII(IntPtr jnienv, IntPtr native__this, int dx, int dy, IntPtr native_consumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedPreScroll", "(II[I[II)Z", "GetDispatchNestedPreScroll_IIarrayIarrayIIHandler")]
public virtual bool DispatchNestedPreScroll(int dx, int dy, Int32[] consumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIHandler();
    private static bool n_DispatchNestedScroll_IIIIarrayII(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type);
    [NullableContextAttribute("2")]
[RegisterAttribute("dispatchNestedScroll", "(IIII[II)Z", "GetDispatchNestedScroll_IIIIarrayIIHandler")]
public virtual bool DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type);
    private static Delegate GetDispatchNestedScroll_IIIIarrayIIarrayIHandler();
    private static void n_DispatchNestedScroll_IIIIarrayIIarrayI(IntPtr jnienv, IntPtr native__this, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, IntPtr native_offsetInWindow, int type, IntPtr native_consumed);
    [RegisterAttribute("dispatchNestedScroll", "(IIII[II[I)V", "GetDispatchNestedScroll_IIIIarrayIIarrayIHandler")]
public virtual void DispatchNestedScroll(int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, Int32[] offsetInWindow, int type, Int32[] consumed);
    private static Delegate GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler();
    private static bool n_ExecuteKeyEvent_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_e);
    [RegisterAttribute("executeKeyEvent", "(Landroid/view/KeyEvent;)Z", "GetExecuteKeyEvent_Landroid_view_KeyEvent_Handler")]
public virtual bool ExecuteKeyEvent(KeyEvent e);
    private static Delegate GetFling_IHandler();
    private static void n_Fling_I(IntPtr jnienv, IntPtr native__this, int velocityY);
    [RegisterAttribute("fling", "(I)V", "GetFling_IHandler")]
public virtual void Fling(int velocityY);
    private static Delegate GetFullScroll_IHandler();
    private static bool n_FullScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("fullScroll", "(I)Z", "GetFullScroll_IHandler")]
public virtual bool FullScroll(int direction);
    private static Delegate GetInvokeHasNestedScrollingParent_IHandler();
    private static bool n_InvokeHasNestedScrollingParent_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("hasNestedScrollingParent", "(I)Z", "GetInvokeHasNestedScrollingParent_IHandler")]
public virtual bool InvokeHasNestedScrollingParent(int type);
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler();
    private static void n_OnNestedPreScroll_Landroid_view_View_IIarrayII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dx, int dy, IntPtr native_consumed, int type);
    [RegisterAttribute("onNestedPreScroll", "(Landroid/view/View;II[II)V", "GetOnNestedPreScroll_Landroid_view_View_IIarrayIIHandler")]
public virtual void OnNestedPreScroll(View target, int dx, int dy, Int32[] consumed, int type);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIII(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIIII)V", "GetOnNestedScroll_Landroid_view_View_IIIIIHandler")]
public virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type);
    private static Delegate GetOnNestedScroll_Landroid_view_View_IIIIIarrayIHandler();
    private static void n_OnNestedScroll_Landroid_view_View_IIIIIarrayI(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, IntPtr native_consumed);
    [RegisterAttribute("onNestedScroll", "(Landroid/view/View;IIIII[I)V", "GetOnNestedScroll_Landroid_view_View_IIIIIarrayIHandler")]
public virtual void OnNestedScroll(View target, int dxConsumed, int dyConsumed, int dxUnconsumed, int dyUnconsumed, int type, Int32[] consumed);
    private static Delegate GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler();
    private static void n_OnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    [RegisterAttribute("onNestedScrollAccepted", "(Landroid/view/View;Landroid/view/View;II)V", "GetOnNestedScrollAccepted_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual void OnNestedScrollAccepted(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler();
    private static bool n_OnStartNestedScroll_Landroid_view_View_Landroid_view_View_II(IntPtr jnienv, IntPtr native__this, IntPtr native_child, IntPtr native_target, int native_axes, int type);
    [RegisterAttribute("onStartNestedScroll", "(Landroid/view/View;Landroid/view/View;II)Z", "GetOnStartNestedScroll_Landroid_view_View_Landroid_view_View_IIHandler")]
public virtual bool OnStartNestedScroll(View child, View target, ScrollAxis axes, int type);
    private static Delegate GetOnStopNestedScroll_Landroid_view_View_IHandler();
    private static void n_OnStopNestedScroll_Landroid_view_View_I(IntPtr jnienv, IntPtr native__this, IntPtr native_target, int type);
    [RegisterAttribute("onStopNestedScroll", "(Landroid/view/View;I)V", "GetOnStopNestedScroll_Landroid_view_View_IHandler")]
public virtual void OnStopNestedScroll(View target, int type);
    private static Delegate GetPageScroll_IHandler();
    private static bool n_PageScroll_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("pageScroll", "(I)Z", "GetPageScroll_IHandler")]
public virtual bool PageScroll(int direction);
    private static Delegate GetSetOnScrollChangeListener_Landroidx_core_widget_NestedScrollView_OnScrollChangeListener_Handler();
    private static void n_SetOnScrollChangeListener_Landroidx_core_widget_NestedScrollView_OnScrollChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_l);
    [NullableContextAttribute("2")]
[RegisterAttribute("setOnScrollChangeListener", "(Landroidx/core/widget/NestedScrollView$OnScrollChangeListener;)V", "GetSetOnScrollChangeListener_Landroidx_core_widget_NestedScrollView_OnScrollChangeListener_Handler")]
public virtual void SetOnScrollChangeListener(IOnScrollChangeListener l);
    [RegisterAttribute("smoothScrollBy", "(II)V", "")]
public void SmoothScrollBy(int dx, int dy);
    [RegisterAttribute("smoothScrollBy", "(III)V", "")]
public void SmoothScrollBy(int dx, int dy, int scrollDurationMs);
    [RegisterAttribute("smoothScrollTo", "(II)V", "")]
public void SmoothScrollTo(int x, int y);
    [RegisterAttribute("smoothScrollTo", "(III)V", "")]
public void SmoothScrollTo(int x, int y, int scrollDurationMs);
    private static Delegate GetStartNestedScroll_IIHandler();
    private static bool n_StartNestedScroll_II(IntPtr jnienv, IntPtr native__this, int native_axes, int type);
    [RegisterAttribute("startNestedScroll", "(II)Z", "GetStartNestedScroll_IIHandler")]
public virtual bool StartNestedScroll(ScrollAxis axes, int type);
    private static Delegate GetStopNestedScroll_IHandler();
    private static void n_StopNestedScroll_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("stopNestedScroll", "(I)V", "GetStopNestedScroll_IHandler")]
public virtual void StopNestedScroll(int type);
    public void add_ScrollChange(EventHandler`1<ScrollChangeEventArgs> value);
    public void remove_ScrollChange(EventHandler`1<ScrollChangeEventArgs> value);
    private IOnScrollChangeListenerImplementor __CreateIOnScrollChangeListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/PopupMenuCompat")]
public class AndroidX.Core.Widget.PopupMenuCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PopupMenuCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PopupMenuCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDragToOpenListener", "(Ljava/lang/Object;)Landroid/view/View$OnTouchListener;", "")]
public static IOnTouchListener GetDragToOpenListener(Object popupMenu);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/PopupWindowCompat")]
public class AndroidX.Core.Widget.PopupWindowCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal PopupWindowCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PopupWindowCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOverlapAnchor", "(Landroid/widget/PopupWindow;)Z", "")]
public static bool GetOverlapAnchor(PopupWindow popupWindow);
    [RegisterAttribute("getWindowLayoutType", "(Landroid/widget/PopupWindow;)I", "")]
public static int GetWindowLayoutType(PopupWindow popupWindow);
    [RegisterAttribute("setOverlapAnchor", "(Landroid/widget/PopupWindow;Z)V", "")]
public static void SetOverlapAnchor(PopupWindow popupWindow, bool overlapAnchor);
    [RegisterAttribute("setWindowLayoutType", "(Landroid/widget/PopupWindow;I)V", "")]
public static void SetWindowLayoutType(PopupWindow popupWindow, int layoutType);
    [RegisterAttribute("showAsDropDown", "(Landroid/widget/PopupWindow;Landroid/view/View;III)V", "")]
public static void ShowAsDropDown(PopupWindow popup, View anchor, int xoff, int yoff, int gravity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("androidx/core/widget/ScrollerCompat")]
public class AndroidX.Core.Widget.ScrollerCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public float CurrVelocity { get; }
    [ObsoleteAttribute("deprecated")]
public int CurrX { get; }
    [ObsoleteAttribute("deprecated")]
public int CurrY { get; }
    [ObsoleteAttribute("deprecated")]
public int FinalX { get; }
    [ObsoleteAttribute("deprecated")]
public int FinalY { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsFinished { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsOverScrolled { get; }
    internal ScrollerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static ScrollerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrVelocity", "()F", "")]
public float get_CurrVelocity();
    [RegisterAttribute("getCurrX", "()I", "")]
public int get_CurrX();
    [RegisterAttribute("getCurrY", "()I", "")]
public int get_CurrY();
    [RegisterAttribute("getFinalX", "()I", "")]
public int get_FinalX();
    [RegisterAttribute("getFinalY", "()I", "")]
public int get_FinalY();
    [RegisterAttribute("isFinished", "()Z", "")]
public bool get_IsFinished();
    [RegisterAttribute("isOverScrolled", "()Z", "")]
public bool get_IsOverScrolled();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("abortAnimation", "()V", "")]
public void AbortAnimation();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("computeScrollOffset", "()Z", "")]
public bool ComputeScrollOffset();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("create", "(Landroid/content/Context;)Landroidx/core/widget/ScrollerCompat;", "")]
public static ScrollerCompat Create(Context context);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("create", "(Landroid/content/Context;Landroid/view/animation/Interpolator;)Landroidx/core/widget/ScrollerCompat;", "")]
public static ScrollerCompat Create(Context context, IInterpolator interpolator);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("fling", "(IIIIIIII)V", "")]
public void Fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("fling", "(IIIIIIIIII)V", "")]
public void Fling(int startX, int startY, int velocityX, int velocityY, int minX, int maxX, int minY, int maxY, int overX, int overY);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("notifyHorizontalEdgeReached", "(III)V", "")]
public void NotifyHorizontalEdgeReached(int startX, int finalX, int overX);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("notifyVerticalEdgeReached", "(III)V", "")]
public void NotifyVerticalEdgeReached(int startY, int finalY, int overY);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("springBack", "(IIIIII)Z", "")]
public bool SpringBack(int startX, int startY, int minX, int maxX, int minY, int maxY);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startScroll", "(IIII)V", "")]
public void StartScroll(int startX, int startY, int dx, int dy);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startScroll", "(IIIII)V", "")]
public void StartScroll(int startX, int startY, int dx, int dy, int duration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/core/widget/TextViewCompat")]
public class AndroidX.Core.Widget.TextViewCompat : Object {
    [RegisterAttribute("AUTO_SIZE_TEXT_TYPE_NONE")]
public static int AutoSizeTextTypeNone;
    [RegisterAttribute("AUTO_SIZE_TEXT_TYPE_UNIFORM")]
public static int AutoSizeTextTypeUniform;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TextViewCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextViewCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAutoSizeMaxTextSize", "(Landroid/widget/TextView;)I", "")]
public static int GetAutoSizeMaxTextSize(TextView textView);
    [RegisterAttribute("getAutoSizeMinTextSize", "(Landroid/widget/TextView;)I", "")]
public static int GetAutoSizeMinTextSize(TextView textView);
    [RegisterAttribute("getAutoSizeStepGranularity", "(Landroid/widget/TextView;)I", "")]
public static int GetAutoSizeStepGranularity(TextView textView);
    [RegisterAttribute("getAutoSizeTextAvailableSizes", "(Landroid/widget/TextView;)[I", "")]
public static Int32[] GetAutoSizeTextAvailableSizes(TextView textView);
    [RegisterAttribute("getAutoSizeTextType", "(Landroid/widget/TextView;)I", "")]
public static int GetAutoSizeTextType(TextView textView);
    [RegisterAttribute("getCompoundDrawableTintList", "(Landroid/widget/TextView;)Landroid/content/res/ColorStateList;", "")]
public static ColorStateList GetCompoundDrawableTintList(TextView textView);
    [RegisterAttribute("getCompoundDrawableTintMode", "(Landroid/widget/TextView;)Landroid/graphics/PorterDuff$Mode;", "")]
public static Mode GetCompoundDrawableTintMode(TextView textView);
    [RegisterAttribute("getCompoundDrawablesRelative", "(Landroid/widget/TextView;)[Landroid/graphics/drawable/Drawable;", "")]
public static Drawable[] GetCompoundDrawablesRelative(TextView textView);
    [RegisterAttribute("getFirstBaselineToTopHeight", "(Landroid/widget/TextView;)I", "")]
public static int GetFirstBaselineToTopHeight(TextView textView);
    [RegisterAttribute("getLastBaselineToBottomHeight", "(Landroid/widget/TextView;)I", "")]
public static int GetLastBaselineToBottomHeight(TextView textView);
    [RegisterAttribute("getMaxLines", "(Landroid/widget/TextView;)I", "")]
public static int GetMaxLines(TextView textView);
    [RegisterAttribute("getMinLines", "(Landroid/widget/TextView;)I", "")]
public static int GetMinLines(TextView textView);
    [RegisterAttribute("getTextMetricsParams", "(Landroid/widget/TextView;)Landroidx/core/text/PrecomputedTextCompat$Params;", "")]
public static Params GetTextMetricsParams(TextView textView);
    [RegisterAttribute("setAutoSizeTextTypeUniformWithConfiguration", "(Landroid/widget/TextView;IIII)V", "")]
public static void SetAutoSizeTextTypeUniformWithConfiguration(TextView textView, int autoSizeMinTextSize, int autoSizeMaxTextSize, int autoSizeStepGranularity, int unit);
    [RegisterAttribute("setAutoSizeTextTypeUniformWithPresetSizes", "(Landroid/widget/TextView;[II)V", "")]
public static void SetAutoSizeTextTypeUniformWithPresetSizes(TextView textView, Int32[] presetSizes, int unit);
    [RegisterAttribute("setAutoSizeTextTypeWithDefaults", "(Landroid/widget/TextView;I)V", "")]
public static void SetAutoSizeTextTypeWithDefaults(TextView textView, int autoSizeTextType);
    [RegisterAttribute("setCompoundDrawableTintList", "(Landroid/widget/TextView;Landroid/content/res/ColorStateList;)V", "")]
public static void SetCompoundDrawableTintList(TextView textView, ColorStateList tint);
    [RegisterAttribute("setCompoundDrawableTintMode", "(Landroid/widget/TextView;Landroid/graphics/PorterDuff$Mode;)V", "")]
public static void SetCompoundDrawableTintMode(TextView textView, Mode tintMode);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCompoundDrawablesRelative", "(Landroid/widget/TextView;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "")]
public static void SetCompoundDrawablesRelative(TextView textView, Drawable start, Drawable top, Drawable end, Drawable bottom);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCompoundDrawablesRelativeWithIntrinsicBounds", "(Landroid/widget/TextView;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;Landroid/graphics/drawable/Drawable;)V", "")]
public static void SetCompoundDrawablesRelativeWithIntrinsicBounds(TextView textView, Drawable start, Drawable top, Drawable end, Drawable bottom);
    [RegisterAttribute("setCompoundDrawablesRelativeWithIntrinsicBounds", "(Landroid/widget/TextView;IIII)V", "")]
public static void SetCompoundDrawablesRelativeWithIntrinsicBounds(TextView textView, int start, int top, int end, int bottom);
    [RegisterAttribute("setCustomSelectionActionModeCallback", "(Landroid/widget/TextView;Landroid/view/ActionMode$Callback;)V", "")]
public static void SetCustomSelectionActionModeCallback(TextView textView, ICallback callback);
    [RegisterAttribute("setFirstBaselineToTopHeight", "(Landroid/widget/TextView;I)V", "")]
public static void SetFirstBaselineToTopHeight(TextView textView, int firstBaselineToTopHeight);
    [RegisterAttribute("setLastBaselineToBottomHeight", "(Landroid/widget/TextView;I)V", "")]
public static void SetLastBaselineToBottomHeight(TextView textView, int lastBaselineToBottomHeight);
    [RegisterAttribute("setLineHeight", "(Landroid/widget/TextView;I)V", "")]
public static void SetLineHeight(TextView textView, int lineHeight);
    [RegisterAttribute("setLineHeight", "(Landroid/widget/TextView;IF)V", "")]
public static void SetLineHeight(TextView textView, int unit, float lineHeight);
    [RegisterAttribute("setPrecomputedText", "(Landroid/widget/TextView;Landroidx/core/text/PrecomputedTextCompat;)V", "")]
public static void SetPrecomputedText(TextView textView, PrecomputedTextCompat precomputed);
    [RegisterAttribute("setTextAppearance", "(Landroid/widget/TextView;I)V", "")]
public static void SetTextAppearance(TextView textView, int resId);
    [RegisterAttribute("setTextMetricsParams", "(Landroid/widget/TextView;Landroidx/core/text/PrecomputedTextCompat$Params;)V", "")]
public static void SetTextMetricsParams(TextView textView, Params params);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("unwrapCustomSelectionActionModeCallback", "(Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode$Callback;", "")]
public static ICallback UnwrapCustomSelectionActionModeCallback(ICallback callback);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("wrapCustomSelectionActionModeCallback", "(Landroid/widget/TextView;Landroid/view/ActionMode$Callback;)Landroid/view/ActionMode$Callback;", "")]
public static ICallback WrapCustomSelectionActionModeCallback(TextView textView, ICallback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/core/widget/TextViewOnReceiveContentListener")]
public class AndroidX.Core.Widget.TextViewOnReceiveContentListener : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TextViewOnReceiveContentListener(IntPtr javaReference, JniHandleOwnership transfer);
    private static TextViewOnReceiveContentListener();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onReceiveContent", "(Landroid/view/View;Landroidx/core/view/ContentInfoCompat;)Landroidx/core/view/ContentInfoCompat;", "")]
public sealed virtual ContentInfoCompat OnReceiveContent(View view, ContentInfoCompat payload);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_android_support_v4_app_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_android_support_v4_os_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_accessibilityservice_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_app_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_app_unusedapprestrictions_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_content_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_content_pm_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_content_res_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_database_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_database_sqlite_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_graphics_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_graphics_drawable_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_hardware_display_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_hardware_fingerprint_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_location_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_math_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_net_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_os_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_provider_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_service_quicksettings_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_telephony_mbms_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_telephony_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_text_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_text_method_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_text_util_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_util_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_accessibility_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_animation_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_autofill_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_contentcapture_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_view_inputmethod_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_core_widget_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_v4_app_package(string klass);
    private static Type lookup_android_support_v4_os_package(string klass);
    private static Type lookup_androidx_core_accessibilityservice_package(string klass);
    private static Type lookup_androidx_core_app_package(string klass);
    private static Type lookup_androidx_core_app_unusedapprestrictions_package(string klass);
    private static Type lookup_androidx_core_content_package(string klass);
    private static Type lookup_androidx_core_content_pm_package(string klass);
    private static Type lookup_androidx_core_content_res_package(string klass);
    private static Type lookup_androidx_core_database_package(string klass);
    private static Type lookup_androidx_core_database_sqlite_package(string klass);
    private static Type lookup_androidx_core_graphics_package(string klass);
    private static Type lookup_androidx_core_graphics_drawable_package(string klass);
    private static Type lookup_androidx_core_hardware_display_package(string klass);
    private static Type lookup_androidx_core_hardware_fingerprint_package(string klass);
    private static Type lookup_androidx_core_location_package(string klass);
    private static Type lookup_androidx_core_math_package(string klass);
    private static Type lookup_androidx_core_net_package(string klass);
    private static Type lookup_androidx_core_os_package(string klass);
    private static Type lookup_androidx_core_provider_package(string klass);
    private static Type lookup_androidx_core_service_quicksettings_package(string klass);
    private static Type lookup_androidx_core_telephony_mbms_package(string klass);
    private static Type lookup_androidx_core_telephony_package(string klass);
    private static Type lookup_androidx_core_text_package(string klass);
    private static Type lookup_androidx_core_text_method_package(string klass);
    private static Type lookup_androidx_core_text_util_package(string klass);
    private static Type lookup_androidx_core_util_package(string klass);
    private static Type lookup_androidx_core_view_accessibility_package(string klass);
    private static Type lookup_androidx_core_view_package(string klass);
    private static Type lookup_androidx_core_view_animation_package(string klass);
    private static Type lookup_androidx_core_view_autofill_package(string klass);
    private static Type lookup_androidx_core_view_contentcapture_package(string klass);
    private static Type lookup_androidx_core_view_inputmethod_package(string klass);
    private static Type lookup_androidx_core_widget_package(string klass);
}
