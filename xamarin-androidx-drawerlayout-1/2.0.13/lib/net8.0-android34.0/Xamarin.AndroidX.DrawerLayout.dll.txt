internal class _JniMarshal_PP_F : MulticastDelegate {
    public _JniMarshal_PP_F(object object, IntPtr method);
    public virtual float Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual float EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_V : MulticastDelegate {
    public _JniMarshal_PPF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_I : MulticastDelegate {
    public _JniMarshal_PPI_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_L : MulticastDelegate {
    public _JniMarshal_PPI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_Z : MulticastDelegate {
    public _JniMarshal_PPI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIL_V : MulticastDelegate {
    public _JniMarshal_PPIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIZ_V : MulticastDelegate {
    public _JniMarshal_PPIZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, bool p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_I : MulticastDelegate {
    public _JniMarshal_PPL_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLF_V : MulticastDelegate {
    public _JniMarshal_PPLF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_V : MulticastDelegate {
    public _JniMarshal_PPLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLII_V : MulticastDelegate {
    public _JniMarshal_PPLII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLZ_V : MulticastDelegate {
    public _JniMarshal_PPLZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZIIII_V : MulticastDelegate {
    public _JniMarshal_PPZIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/drawerlayout/widget/DrawerLayout")]
public class AndroidX.DrawerLayout.Widget.DrawerLayout : ViewGroup {
    [RegisterAttribute("LOCK_MODE_LOCKED_CLOSED")]
public static int LockModeLockedClosed;
    [RegisterAttribute("LOCK_MODE_LOCKED_OPEN")]
public static int LockModeLockedOpen;
    [RegisterAttribute("LOCK_MODE_UNDEFINED")]
public static int LockModeUndefined;
    [RegisterAttribute("LOCK_MODE_UNLOCKED")]
public static int LockModeUnlocked;
    [RegisterAttribute("STATE_DRAGGING")]
public static int StateDragging;
    [RegisterAttribute("STATE_IDLE")]
public static int StateIdle;
    [RegisterAttribute("STATE_SETTLING")]
public static int StateSettling;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDrawerElevation;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerElevation_F;
    [NullableAttribute("2")]
private static Delegate cb_isOpen;
    [NullableAttribute("2")]
private static Delegate cb_getStatusBarBackgroundDrawable;
    [NullableAttribute("2")]
private static Delegate cb_addDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_;
    [NullableAttribute("2")]
private static Delegate cb_addFocusables_Ljava_util_ArrayList_II;
    [NullableAttribute("2")]
private static Delegate cb_close;
    [NullableAttribute("2")]
private static Delegate cb_closeDrawer_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_closeDrawer_Landroid_view_View_Z;
    [NullableAttribute("2")]
private static Delegate cb_closeDrawer_I;
    [NullableAttribute("2")]
private static Delegate cb_closeDrawer_IZ;
    [NullableAttribute("2")]
private static Delegate cb_closeDrawers;
    [NullableAttribute("2")]
private static Delegate cb_getDrawerLockMode_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_getDrawerLockMode_I;
    [NullableAttribute("2")]
private static Delegate cb_getDrawerTitle_I;
    [NullableAttribute("2")]
private static Delegate cb_isDrawerOpen_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_isDrawerOpen_I;
    [NullableAttribute("2")]
private static Delegate cb_isDrawerVisible_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_isDrawerVisible_I;
    [NullableAttribute("2")]
private static Delegate cb_onDraw_Landroid_graphics_Canvas_;
    [NullableAttribute("2")]
private static Delegate cb_onLayout_ZIIII;
    [NullableAttribute("2")]
private static Delegate cb_open;
    [NullableAttribute("2")]
private static Delegate cb_openDrawer_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_openDrawer_Landroid_view_View_Z;
    [NullableAttribute("2")]
private static Delegate cb_openDrawer_I;
    [NullableAttribute("2")]
private static Delegate cb_openDrawer_IZ;
    [NullableAttribute("2")]
private static Delegate cb_removeDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_;
    [NullableAttribute("2")]
private static Delegate cb_setChildInsets_Landroidx_core_view_WindowInsetsCompat_Z;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerLockMode_I;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerLockMode_ILandroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerLockMode_II;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerShadow_Landroid_graphics_drawable_Drawable_I;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerShadow_II;
    [NullableAttribute("2")]
private static Delegate cb_setDrawerTitle_ILjava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setScrimColor_I;
    [NullableAttribute("2")]
private static Delegate cb_setStatusBarBackground_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setStatusBarBackground_I;
    [NullableAttribute("2")]
private static Delegate cb_setStatusBarBackgroundColor_I;
    [NullableAttribute("2")]
private WeakReference weak_implementor_AddDrawerListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public float DrawerElevation { get; public set; }
    public bool IsOpen { get; }
    [NullableAttribute("2")]
public Drawable StatusBarBackgroundDrawable { get; }
    protected DrawerLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public DrawerLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public DrawerLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public DrawerLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    private static DrawerLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDrawerElevationHandler();
    private static float n_GetDrawerElevation(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDrawerElevation_FHandler();
    private static void n_SetDrawerElevation_F(IntPtr jnienv, IntPtr native__this, float elevation);
    [RegisterAttribute("getDrawerElevation", "()F", "GetGetDrawerElevationHandler")]
public virtual float get_DrawerElevation();
    [RegisterAttribute("setDrawerElevation", "(F)V", "GetSetDrawerElevation_FHandler")]
public virtual void set_DrawerElevation(float value);
    private static Delegate GetIsOpenHandler();
    private static bool n_IsOpen(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOpen", "()Z", "GetIsOpenHandler")]
public virtual bool get_IsOpen();
    private static Delegate GetGetStatusBarBackgroundDrawableHandler();
    private static IntPtr n_GetStatusBarBackgroundDrawable(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getStatusBarBackgroundDrawable", "()Landroid/graphics/drawable/Drawable;", "GetGetStatusBarBackgroundDrawableHandler")]
public virtual Drawable get_StatusBarBackgroundDrawable();
    private static Delegate GetAddDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler();
    private static void n_AddDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("addDrawerListener", "(Landroidx/drawerlayout/widget/DrawerLayout$DrawerListener;)V", "GetAddDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void AddDrawerListener(IDrawerListener listener);
    private static Delegate GetAddFocusables_Ljava_util_ArrayList_IIHandler();
    private static void n_AddFocusables_Ljava_util_ArrayList_II(IntPtr jnienv, IntPtr native__this, IntPtr native_views, int direction, int focusableMode);
    [RegisterAttribute("addFocusables", "(Ljava/util/ArrayList;II)V", "GetAddFocusables_Ljava_util_ArrayList_IIHandler")]
public virtual void AddFocusables(IList`1<View> views, int direction, int focusableMode);
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetCloseDrawer_Landroid_view_View_Handler();
    private static void n_CloseDrawer_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("closeDrawer", "(Landroid/view/View;)V", "GetCloseDrawer_Landroid_view_View_Handler")]
public virtual void CloseDrawer(View drawerView);
    private static Delegate GetCloseDrawer_Landroid_view_View_ZHandler();
    private static void n_CloseDrawer_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView, bool animate);
    [RegisterAttribute("closeDrawer", "(Landroid/view/View;Z)V", "GetCloseDrawer_Landroid_view_View_ZHandler")]
public virtual void CloseDrawer(View drawerView, bool animate);
    private static Delegate GetCloseDrawer_IHandler();
    private static void n_CloseDrawer_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("closeDrawer", "(I)V", "GetCloseDrawer_IHandler")]
public virtual void CloseDrawer(int gravity);
    private static Delegate GetCloseDrawer_IZHandler();
    private static void n_CloseDrawer_IZ(IntPtr jnienv, IntPtr native__this, int gravity, bool animate);
    [RegisterAttribute("closeDrawer", "(IZ)V", "GetCloseDrawer_IZHandler")]
public virtual void CloseDrawer(int gravity, bool animate);
    private static Delegate GetCloseDrawersHandler();
    private static void n_CloseDrawers(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closeDrawers", "()V", "GetCloseDrawersHandler")]
public virtual void CloseDrawers();
    private static Delegate GetGetDrawerLockMode_Landroid_view_View_Handler();
    private static int n_GetDrawerLockMode_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("getDrawerLockMode", "(Landroid/view/View;)I", "GetGetDrawerLockMode_Landroid_view_View_Handler")]
public virtual int GetDrawerLockMode(View drawerView);
    private static Delegate GetGetDrawerLockMode_IHandler();
    private static int n_GetDrawerLockMode_I(IntPtr jnienv, IntPtr native__this, int edgeGravity);
    [RegisterAttribute("getDrawerLockMode", "(I)I", "GetGetDrawerLockMode_IHandler")]
public virtual int GetDrawerLockMode(int edgeGravity);
    private static Delegate GetGetDrawerTitle_IHandler();
    private static IntPtr n_GetDrawerTitle_I(IntPtr jnienv, IntPtr native__this, int edgeGravity);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDrawerTitle", "(I)Ljava/lang/CharSequence;", "GetGetDrawerTitle_IHandler")]
public virtual ICharSequence GetDrawerTitleFormatted(int edgeGravity);
    [NullableContextAttribute("2")]
public string GetDrawerTitle(int edgeGravity);
    private static Delegate GetIsDrawerOpen_Landroid_view_View_Handler();
    private static bool n_IsDrawerOpen_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawer);
    [RegisterAttribute("isDrawerOpen", "(Landroid/view/View;)Z", "GetIsDrawerOpen_Landroid_view_View_Handler")]
public virtual bool IsDrawerOpen(View drawer);
    private static Delegate GetIsDrawerOpen_IHandler();
    private static bool n_IsDrawerOpen_I(IntPtr jnienv, IntPtr native__this, int drawerGravity);
    [RegisterAttribute("isDrawerOpen", "(I)Z", "GetIsDrawerOpen_IHandler")]
public virtual bool IsDrawerOpen(int drawerGravity);
    private static Delegate GetIsDrawerVisible_Landroid_view_View_Handler();
    private static bool n_IsDrawerVisible_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawer);
    [RegisterAttribute("isDrawerVisible", "(Landroid/view/View;)Z", "GetIsDrawerVisible_Landroid_view_View_Handler")]
public virtual bool IsDrawerVisible(View drawer);
    private static Delegate GetIsDrawerVisible_IHandler();
    private static bool n_IsDrawerVisible_I(IntPtr jnienv, IntPtr native__this, int drawerGravity);
    [RegisterAttribute("isDrawerVisible", "(I)Z", "GetIsDrawerVisible_IHandler")]
public virtual bool IsDrawerVisible(int drawerGravity);
    private static Delegate GetOnDraw_Landroid_graphics_Canvas_Handler();
    private static void n_OnDraw_Landroid_graphics_Canvas_(IntPtr jnienv, IntPtr native__this, IntPtr native_c);
    [RegisterAttribute("onDraw", "(Landroid/graphics/Canvas;)V", "GetOnDraw_Landroid_graphics_Canvas_Handler")]
public virtual void OnDraw(Canvas c);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOpenHandler();
    private static void n_Open(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("open", "()V", "GetOpenHandler")]
public virtual void Open();
    private static Delegate GetOpenDrawer_Landroid_view_View_Handler();
    private static void n_OpenDrawer_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView);
    [RegisterAttribute("openDrawer", "(Landroid/view/View;)V", "GetOpenDrawer_Landroid_view_View_Handler")]
public virtual void OpenDrawer(View drawerView);
    private static Delegate GetOpenDrawer_Landroid_view_View_ZHandler();
    private static void n_OpenDrawer_Landroid_view_View_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_drawerView, bool animate);
    [RegisterAttribute("openDrawer", "(Landroid/view/View;Z)V", "GetOpenDrawer_Landroid_view_View_ZHandler")]
public virtual void OpenDrawer(View drawerView, bool animate);
    private static Delegate GetOpenDrawer_IHandler();
    private static void n_OpenDrawer_I(IntPtr jnienv, IntPtr native__this, int gravity);
    [RegisterAttribute("openDrawer", "(I)V", "GetOpenDrawer_IHandler")]
public virtual void OpenDrawer(int gravity);
    private static Delegate GetOpenDrawer_IZHandler();
    private static void n_OpenDrawer_IZ(IntPtr jnienv, IntPtr native__this, int gravity, bool animate);
    [RegisterAttribute("openDrawer", "(IZ)V", "GetOpenDrawer_IZHandler")]
public virtual void OpenDrawer(int gravity, bool animate);
    private static Delegate GetRemoveDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler();
    private static void n_RemoveDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [RegisterAttribute("removeDrawerListener", "(Landroidx/drawerlayout/widget/DrawerLayout$DrawerListener;)V", "GetRemoveDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void RemoveDrawerListener(IDrawerListener listener);
    private static Delegate GetSetChildInsets_Landroidx_core_view_WindowInsetsCompat_ZHandler();
    private static void n_SetChildInsets_Landroidx_core_view_WindowInsetsCompat_Z(IntPtr jnienv, IntPtr native__this, IntPtr native_insets, bool draw);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setChildInsets", "(Landroidx/core/view/WindowInsetsCompat;Z)V", "GetSetChildInsets_Landroidx_core_view_WindowInsetsCompat_ZHandler")]
public virtual void SetChildInsets(WindowInsetsCompat insets, bool draw);
    [ObsoleteAttribute]
private static Delegate GetSetDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler();
    [ObsoleteAttribute]
private static void n_SetDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setDrawerListener", "(Landroidx/drawerlayout/widget/DrawerLayout$DrawerListener;)V", "GetSetDrawerListener_Landroidx_drawerlayout_widget_DrawerLayout_DrawerListener_Handler")]
public virtual void SetDrawerListener(IDrawerListener listener);
    private static Delegate GetSetDrawerLockMode_IHandler();
    private static void n_SetDrawerLockMode_I(IntPtr jnienv, IntPtr native__this, int lockMode);
    [RegisterAttribute("setDrawerLockMode", "(I)V", "GetSetDrawerLockMode_IHandler")]
public virtual void SetDrawerLockMode(int lockMode);
    private static Delegate GetSetDrawerLockMode_ILandroid_view_View_Handler();
    private static void n_SetDrawerLockMode_ILandroid_view_View_(IntPtr jnienv, IntPtr native__this, int lockMode, IntPtr native_drawerView);
    [RegisterAttribute("setDrawerLockMode", "(ILandroid/view/View;)V", "GetSetDrawerLockMode_ILandroid_view_View_Handler")]
public virtual void SetDrawerLockMode(int lockMode, View drawerView);
    private static Delegate GetSetDrawerLockMode_IIHandler();
    private static void n_SetDrawerLockMode_II(IntPtr jnienv, IntPtr native__this, int lockMode, int edgeGravity);
    [RegisterAttribute("setDrawerLockMode", "(II)V", "GetSetDrawerLockMode_IIHandler")]
public virtual void SetDrawerLockMode(int lockMode, int edgeGravity);
    private static Delegate GetSetDrawerShadow_Landroid_graphics_drawable_Drawable_IHandler();
    private static void n_SetDrawerShadow_Landroid_graphics_drawable_Drawable_I(IntPtr jnienv, IntPtr native__this, IntPtr native_shadowDrawable, int gravity);
    [NullableContextAttribute("2")]
[RegisterAttribute("setDrawerShadow", "(Landroid/graphics/drawable/Drawable;I)V", "GetSetDrawerShadow_Landroid_graphics_drawable_Drawable_IHandler")]
public virtual void SetDrawerShadow(Drawable shadowDrawable, int gravity);
    private static Delegate GetSetDrawerShadow_IIHandler();
    private static void n_SetDrawerShadow_II(IntPtr jnienv, IntPtr native__this, int resId, int gravity);
    [RegisterAttribute("setDrawerShadow", "(II)V", "GetSetDrawerShadow_IIHandler")]
public virtual void SetDrawerShadow(int resId, int gravity);
    private static Delegate GetSetDrawerTitle_ILjava_lang_CharSequence_Handler();
    private static void n_SetDrawerTitle_ILjava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, int edgeGravity, IntPtr native_title);
    [NullableContextAttribute("2")]
[RegisterAttribute("setDrawerTitle", "(ILjava/lang/CharSequence;)V", "GetSetDrawerTitle_ILjava_lang_CharSequence_Handler")]
public virtual void SetDrawerTitle(int edgeGravity, ICharSequence title);
    [NullableContextAttribute("2")]
public void SetDrawerTitle(int edgeGravity, string title);
    private static Delegate GetSetScrimColor_IHandler();
    private static void n_SetScrimColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setScrimColor", "(I)V", "GetSetScrimColor_IHandler")]
public virtual void SetScrimColor(int color);
    private static Delegate GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetStatusBarBackground_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_bg);
    [NullableContextAttribute("2")]
[RegisterAttribute("setStatusBarBackground", "(Landroid/graphics/drawable/Drawable;)V", "GetSetStatusBarBackground_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetStatusBarBackground(Drawable bg);
    private static Delegate GetSetStatusBarBackground_IHandler();
    private static void n_SetStatusBarBackground_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setStatusBarBackground", "(I)V", "GetSetStatusBarBackground_IHandler")]
public virtual void SetStatusBarBackground(int resId);
    private static Delegate GetSetStatusBarBackgroundColor_IHandler();
    private static void n_SetStatusBarBackgroundColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("setStatusBarBackgroundColor", "(I)V", "GetSetStatusBarBackgroundColor_IHandler")]
public virtual void SetStatusBarBackgroundColor(int color);
    public void add_DrawerClosed(EventHandler`1<DrawerClosedEventArgs> value);
    public void remove_DrawerClosed(EventHandler`1<DrawerClosedEventArgs> value);
    public void add_DrawerOpened(EventHandler`1<DrawerOpenedEventArgs> value);
    public void remove_DrawerOpened(EventHandler`1<DrawerOpenedEventArgs> value);
    public void add_DrawerSlide(EventHandler`1<DrawerSlideEventArgs> value);
    public void remove_DrawerSlide(EventHandler`1<DrawerSlideEventArgs> value);
    public void add_DrawerStateChanged(EventHandler`1<DrawerStateChangedEventArgs> value);
    public void remove_DrawerStateChanged(EventHandler`1<DrawerStateChangedEventArgs> value);
    private IDrawerListenerImplementor __CreateIDrawerListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_drawerlayout_widget_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_drawerlayout_widget_package(string klass);
}
