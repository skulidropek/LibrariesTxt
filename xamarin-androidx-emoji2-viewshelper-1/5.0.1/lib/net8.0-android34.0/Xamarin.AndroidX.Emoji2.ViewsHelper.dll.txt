[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/emoji2/viewsintegration/EmojiEditTextHelper")]
public class AndroidX.Emoji2.ViewsIntegration.EmojiEditTextHelper : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int EmojiReplaceStrategy { get; public set; }
    public bool Enabled { get; public set; }
    public int MaxEmojiCount { get; public set; }
    internal EmojiEditTextHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/widget/EditText;)V", "")]
public EmojiEditTextHelper(EditText editText);
    [RegisterAttribute(".ctor", "(Landroid/widget/EditText;Z)V", "")]
public EmojiEditTextHelper(EditText editText, bool expectInitializedEmojiCompat);
    private static EmojiEditTextHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getEmojiReplaceStrategy", "()I", "")]
public int get_EmojiReplaceStrategy();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setEmojiReplaceStrategy", "(I)V", "")]
public void set_EmojiReplaceStrategy(int value);
    [RegisterAttribute("isEnabled", "()Z", "")]
public bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "")]
public void set_Enabled(bool value);
    [RegisterAttribute("getMaxEmojiCount", "()I", "")]
public int get_MaxEmojiCount();
    [RegisterAttribute("setMaxEmojiCount", "(I)V", "")]
public void set_MaxEmojiCount(int value);
    [NullableContextAttribute("2")]
[RegisterAttribute("getKeyListener", "(Landroid/text/method/KeyListener;)Landroid/text/method/KeyListener;", "")]
public IKeyListener GetKeyListener(IKeyListener keyListener);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateInputConnection", "(Landroid/view/inputmethod/InputConnection;Landroid/view/inputmethod/EditorInfo;)Landroid/view/inputmethod/InputConnection;", "")]
public IInputConnection OnCreateInputConnection(IInputConnection inputConnection, EditorInfo outAttrs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/emoji2/viewsintegration/EmojiTextViewHelper")]
public class AndroidX.Emoji2.ViewsIntegration.EmojiTextViewHelper : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool Enabled { get; public set; }
    internal EmojiTextViewHelper(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/widget/TextView;)V", "")]
public EmojiTextViewHelper(TextView textView);
    [RegisterAttribute(".ctor", "(Landroid/widget/TextView;Z)V", "")]
public EmojiTextViewHelper(TextView textView, bool expectInitializedEmojiCompat);
    private static EmojiTextViewHelper();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isEnabled", "()Z", "")]
public bool get_Enabled();
    [RegisterAttribute("setEnabled", "(Z)V", "")]
public void set_Enabled(bool value);
    [RegisterAttribute("getFilters", "([Landroid/text/InputFilter;)[Landroid/text/InputFilter;", "")]
public IInputFilter[] GetFilters(IInputFilter[] filters);
    [RegisterAttribute("setAllCaps", "(Z)V", "")]
public void SetAllCaps(bool allCaps);
    [RegisterAttribute("updateTransformationMethod", "()V", "")]
public void UpdateTransformationMethod();
    [NullableContextAttribute("2")]
[RegisterAttribute("wrapTransformationMethod", "(Landroid/text/method/TransformationMethod;)Landroid/text/method/TransformationMethod;", "")]
public ITransformationMethod WrapTransformationMethod(ITransformationMethod transformationMethod);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_emoji2_viewsintegration_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_emoji2_viewsintegration_package(string klass);
}
