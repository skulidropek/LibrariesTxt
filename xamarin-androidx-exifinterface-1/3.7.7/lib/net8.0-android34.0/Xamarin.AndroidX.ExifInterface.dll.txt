internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPD_D : MulticastDelegate {
    public _JniMarshal_PPD_D(object object, IntPtr method);
    public virtual double Invoke(IntPtr jnienv, IntPtr klass, double p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, double p0, AsyncCallback callback, object object);
    public virtual double EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPD_V : MulticastDelegate {
    public _JniMarshal_PPD_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, double p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, double p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPDD_V : MulticastDelegate {
    public _JniMarshal_PPDD_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, double p0, double p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, double p0, double p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLD_D : MulticastDelegate {
    public _JniMarshal_PPLD_D(object object, IntPtr method);
    public virtual double Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, double p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, double p1, AsyncCallback callback, object object);
    public virtual double EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_I : MulticastDelegate {
    public _JniMarshal_PPLI_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/exifinterface/media/ExifInterface")]
public class AndroidX.ExifInterface.Media.ExifInterface : Object {
    [RegisterAttribute("ALTITUDE_ABOVE_SEA_LEVEL")]
public static short AltitudeAboveSeaLevel;
    [RegisterAttribute("ALTITUDE_BELOW_SEA_LEVEL")]
public static short AltitudeBelowSeaLevel;
    [RegisterAttribute("COLOR_SPACE_S_RGB")]
public static int ColorSpaceSRgb;
    [RegisterAttribute("COLOR_SPACE_UNCALIBRATED")]
public static int ColorSpaceUncalibrated;
    [RegisterAttribute("CONTRAST_HARD")]
public static short ContrastHard;
    [RegisterAttribute("CONTRAST_NORMAL")]
public static short ContrastNormal;
    [RegisterAttribute("CONTRAST_SOFT")]
public static short ContrastSoft;
    [RegisterAttribute("DATA_DEFLATE_ZIP")]
public static int DataDeflateZip;
    [RegisterAttribute("DATA_HUFFMAN_COMPRESSED")]
public static int DataHuffmanCompressed;
    [RegisterAttribute("DATA_JPEG")]
public static int DataJpeg;
    [RegisterAttribute("DATA_JPEG_COMPRESSED")]
public static int DataJpegCompressed;
    [RegisterAttribute("DATA_LOSSY_JPEG")]
public static int DataLossyJpeg;
    [RegisterAttribute("DATA_PACK_BITS_COMPRESSED")]
public static int DataPackBitsCompressed;
    [RegisterAttribute("DATA_UNCOMPRESSED")]
public static int DataUncompressed;
    [RegisterAttribute("EXPOSURE_MODE_AUTO")]
public static short ExposureModeAuto;
    [RegisterAttribute("EXPOSURE_MODE_AUTO_BRACKET")]
public static short ExposureModeAutoBracket;
    [RegisterAttribute("EXPOSURE_MODE_MANUAL")]
public static short ExposureModeManual;
    [RegisterAttribute("EXPOSURE_PROGRAM_ACTION")]
public static short ExposureProgramAction;
    [RegisterAttribute("EXPOSURE_PROGRAM_APERTURE_PRIORITY")]
public static short ExposureProgramAperturePriority;
    [RegisterAttribute("EXPOSURE_PROGRAM_CREATIVE")]
public static short ExposureProgramCreative;
    [RegisterAttribute("EXPOSURE_PROGRAM_LANDSCAPE_MODE")]
public static short ExposureProgramLandscapeMode;
    [RegisterAttribute("EXPOSURE_PROGRAM_MANUAL")]
public static short ExposureProgramManual;
    [RegisterAttribute("EXPOSURE_PROGRAM_NORMAL")]
public static short ExposureProgramNormal;
    [RegisterAttribute("EXPOSURE_PROGRAM_NOT_DEFINED")]
public static short ExposureProgramNotDefined;
    [RegisterAttribute("EXPOSURE_PROGRAM_PORTRAIT_MODE")]
public static short ExposureProgramPortraitMode;
    [RegisterAttribute("EXPOSURE_PROGRAM_SHUTTER_PRIORITY")]
public static short ExposureProgramShutterPriority;
    [RegisterAttribute("FILE_SOURCE_DSC")]
public static short FileSourceDsc;
    [RegisterAttribute("FILE_SOURCE_OTHER")]
public static short FileSourceOther;
    [RegisterAttribute("FILE_SOURCE_REFLEX_SCANNER")]
public static short FileSourceReflexScanner;
    [RegisterAttribute("FILE_SOURCE_TRANSPARENT_SCANNER")]
public static short FileSourceTransparentScanner;
    [RegisterAttribute("FLAG_FLASH_FIRED")]
public static short FlagFlashFired;
    [RegisterAttribute("FLAG_FLASH_MODE_AUTO")]
public static short FlagFlashModeAuto;
    [RegisterAttribute("FLAG_FLASH_MODE_COMPULSORY_FIRING")]
public static short FlagFlashModeCompulsoryFiring;
    [RegisterAttribute("FLAG_FLASH_MODE_COMPULSORY_SUPPRESSION")]
public static short FlagFlashModeCompulsorySuppression;
    [RegisterAttribute("FLAG_FLASH_NO_FLASH_FUNCTION")]
public static short FlagFlashNoFlashFunction;
    [RegisterAttribute("FLAG_FLASH_RED_EYE_SUPPORTED")]
public static short FlagFlashRedEyeSupported;
    [RegisterAttribute("FLAG_FLASH_RETURN_LIGHT_DETECTED")]
public static short FlagFlashReturnLightDetected;
    [RegisterAttribute("FLAG_FLASH_RETURN_LIGHT_NOT_DETECTED")]
public static short FlagFlashReturnLightNotDetected;
    [RegisterAttribute("FORMAT_CHUNKY")]
public static short FormatChunky;
    [RegisterAttribute("FORMAT_PLANAR")]
public static short FormatPlanar;
    [RegisterAttribute("GAIN_CONTROL_HIGH_GAIN_DOWN")]
public static short GainControlHighGainDown;
    [RegisterAttribute("GAIN_CONTROL_HIGH_GAIN_UP")]
public static short GainControlHighGainUp;
    [RegisterAttribute("GAIN_CONTROL_LOW_GAIN_DOWN")]
public static short GainControlLowGainDown;
    [RegisterAttribute("GAIN_CONTROL_LOW_GAIN_UP")]
public static short GainControlLowGainUp;
    [RegisterAttribute("GAIN_CONTROL_NONE")]
public static short GainControlNone;
    [RegisterAttribute("GPS_DIRECTION_MAGNETIC")]
public static string GpsDirectionMagnetic;
    [RegisterAttribute("GPS_DIRECTION_TRUE")]
public static string GpsDirectionTrue;
    [RegisterAttribute("GPS_DISTANCE_KILOMETERS")]
public static string GpsDistanceKilometers;
    [RegisterAttribute("GPS_DISTANCE_MILES")]
public static string GpsDistanceMiles;
    [RegisterAttribute("GPS_DISTANCE_NAUTICAL_MILES")]
public static string GpsDistanceNauticalMiles;
    [RegisterAttribute("GPS_MEASUREMENT_2D")]
public static string GpsMeasurement2d;
    [RegisterAttribute("GPS_MEASUREMENT_3D")]
public static string GpsMeasurement3d;
    [RegisterAttribute("GPS_MEASUREMENT_DIFFERENTIAL_CORRECTED")]
public static short GpsMeasurementDifferentialCorrected;
    [RegisterAttribute("GPS_MEASUREMENT_INTERRUPTED")]
public static string GpsMeasurementInterrupted;
    [RegisterAttribute("GPS_MEASUREMENT_IN_PROGRESS")]
public static string GpsMeasurementInProgress;
    [RegisterAttribute("GPS_MEASUREMENT_NO_DIFFERENTIAL")]
public static short GpsMeasurementNoDifferential;
    [RegisterAttribute("GPS_SPEED_KILOMETERS_PER_HOUR")]
public static string GpsSpeedKilometersPerHour;
    [RegisterAttribute("GPS_SPEED_KNOTS")]
public static string GpsSpeedKnots;
    [RegisterAttribute("GPS_SPEED_MILES_PER_HOUR")]
public static string GpsSpeedMilesPerHour;
    [RegisterAttribute("LATITUDE_NORTH")]
public static string LatitudeNorth;
    [RegisterAttribute("LATITUDE_SOUTH")]
public static string LatitudeSouth;
    [RegisterAttribute("LIGHT_SOURCE_CLOUDY_WEATHER")]
public static short LightSourceCloudyWeather;
    [RegisterAttribute("LIGHT_SOURCE_COOL_WHITE_FLUORESCENT")]
public static short LightSourceCoolWhiteFluorescent;
    [RegisterAttribute("LIGHT_SOURCE_D50")]
public static short LightSourceD50;
    [RegisterAttribute("LIGHT_SOURCE_D55")]
public static short LightSourceD55;
    [RegisterAttribute("LIGHT_SOURCE_D65")]
public static short LightSourceD65;
    [RegisterAttribute("LIGHT_SOURCE_D75")]
public static short LightSourceD75;
    [RegisterAttribute("LIGHT_SOURCE_DAYLIGHT")]
public static short LightSourceDaylight;
    [RegisterAttribute("LIGHT_SOURCE_DAYLIGHT_FLUORESCENT")]
public static short LightSourceDaylightFluorescent;
    [RegisterAttribute("LIGHT_SOURCE_DAY_WHITE_FLUORESCENT")]
public static short LightSourceDayWhiteFluorescent;
    [RegisterAttribute("LIGHT_SOURCE_FINE_WEATHER")]
public static short LightSourceFineWeather;
    [RegisterAttribute("LIGHT_SOURCE_FLASH")]
public static short LightSourceFlash;
    [RegisterAttribute("LIGHT_SOURCE_FLUORESCENT")]
public static short LightSourceFluorescent;
    [RegisterAttribute("LIGHT_SOURCE_ISO_STUDIO_TUNGSTEN")]
public static short LightSourceIsoStudioTungsten;
    [RegisterAttribute("LIGHT_SOURCE_OTHER")]
public static short LightSourceOther;
    [RegisterAttribute("LIGHT_SOURCE_SHADE")]
public static short LightSourceShade;
    [RegisterAttribute("LIGHT_SOURCE_STANDARD_LIGHT_A")]
public static short LightSourceStandardLightA;
    [RegisterAttribute("LIGHT_SOURCE_STANDARD_LIGHT_B")]
public static short LightSourceStandardLightB;
    [RegisterAttribute("LIGHT_SOURCE_STANDARD_LIGHT_C")]
public static short LightSourceStandardLightC;
    [RegisterAttribute("LIGHT_SOURCE_TUNGSTEN")]
public static short LightSourceTungsten;
    [RegisterAttribute("LIGHT_SOURCE_UNKNOWN")]
public static short LightSourceUnknown;
    [RegisterAttribute("LIGHT_SOURCE_WARM_WHITE_FLUORESCENT")]
public static short LightSourceWarmWhiteFluorescent;
    [RegisterAttribute("LIGHT_SOURCE_WHITE_FLUORESCENT")]
public static short LightSourceWhiteFluorescent;
    [RegisterAttribute("LONGITUDE_EAST")]
public static string LongitudeEast;
    [RegisterAttribute("LONGITUDE_WEST")]
public static string LongitudeWest;
    [RegisterAttribute("METERING_MODE_AVERAGE")]
public static short MeteringModeAverage;
    [RegisterAttribute("METERING_MODE_CENTER_WEIGHT_AVERAGE")]
public static short MeteringModeCenterWeightAverage;
    [RegisterAttribute("METERING_MODE_MULTI_SPOT")]
public static short MeteringModeMultiSpot;
    [RegisterAttribute("METERING_MODE_OTHER")]
public static short MeteringModeOther;
    [RegisterAttribute("METERING_MODE_PARTIAL")]
public static short MeteringModePartial;
    [RegisterAttribute("METERING_MODE_PATTERN")]
public static short MeteringModePattern;
    [RegisterAttribute("METERING_MODE_SPOT")]
public static short MeteringModeSpot;
    [RegisterAttribute("METERING_MODE_UNKNOWN")]
public static short MeteringModeUnknown;
    [RegisterAttribute("ORIENTATION_FLIP_HORIZONTAL")]
public static int OrientationFlipHorizontal;
    [RegisterAttribute("ORIENTATION_FLIP_VERTICAL")]
public static int OrientationFlipVertical;
    [RegisterAttribute("ORIENTATION_NORMAL")]
public static int OrientationNormal;
    [RegisterAttribute("ORIENTATION_ROTATE_180")]
public static int OrientationRotate180;
    [RegisterAttribute("ORIENTATION_ROTATE_270")]
public static int OrientationRotate270;
    [RegisterAttribute("ORIENTATION_ROTATE_90")]
public static int OrientationRotate90;
    [RegisterAttribute("ORIENTATION_TRANSPOSE")]
public static int OrientationTranspose;
    [RegisterAttribute("ORIENTATION_TRANSVERSE")]
public static int OrientationTransverse;
    [RegisterAttribute("ORIENTATION_UNDEFINED")]
public static int OrientationUndefined;
    [RegisterAttribute("ORIGINAL_RESOLUTION_IMAGE")]
public static int OriginalResolutionImage;
    [RegisterAttribute("PHOTOMETRIC_INTERPRETATION_BLACK_IS_ZERO")]
public static int PhotometricInterpretationBlackIsZero;
    [RegisterAttribute("PHOTOMETRIC_INTERPRETATION_RGB")]
public static int PhotometricInterpretationRgb;
    [RegisterAttribute("PHOTOMETRIC_INTERPRETATION_WHITE_IS_ZERO")]
public static int PhotometricInterpretationWhiteIsZero;
    [RegisterAttribute("PHOTOMETRIC_INTERPRETATION_YCBCR")]
public static int PhotometricInterpretationYcbcr;
    [RegisterAttribute("REDUCED_RESOLUTION_IMAGE")]
public static int ReducedResolutionImage;
    [RegisterAttribute("RENDERED_PROCESS_CUSTOM")]
public static short RenderedProcessCustom;
    [RegisterAttribute("RENDERED_PROCESS_NORMAL")]
public static short RenderedProcessNormal;
    [RegisterAttribute("RESOLUTION_UNIT_CENTIMETERS")]
public static short ResolutionUnitCentimeters;
    [RegisterAttribute("RESOLUTION_UNIT_INCHES")]
public static short ResolutionUnitInches;
    [RegisterAttribute("SATURATION_HIGH")]
public static short SaturationHigh;
    [RegisterAttribute("SATURATION_LOW")]
public static short SaturationLow;
    [RegisterAttribute("SATURATION_NORMAL")]
public static short SaturationNormal;
    [RegisterAttribute("SCENE_CAPTURE_TYPE_LANDSCAPE")]
public static short SceneCaptureTypeLandscape;
    [RegisterAttribute("SCENE_CAPTURE_TYPE_NIGHT")]
public static short SceneCaptureTypeNight;
    [RegisterAttribute("SCENE_CAPTURE_TYPE_PORTRAIT")]
public static short SceneCaptureTypePortrait;
    [RegisterAttribute("SCENE_CAPTURE_TYPE_STANDARD")]
public static short SceneCaptureTypeStandard;
    [RegisterAttribute("SCENE_TYPE_DIRECTLY_PHOTOGRAPHED")]
public static short SceneTypeDirectlyPhotographed;
    [RegisterAttribute("SENSITIVITY_TYPE_ISO_SPEED")]
public static short SensitivityTypeIsoSpeed;
    [RegisterAttribute("SENSITIVITY_TYPE_REI")]
public static short SensitivityTypeRei;
    [RegisterAttribute("SENSITIVITY_TYPE_REI_AND_ISO")]
public static short SensitivityTypeReiAndIso;
    [RegisterAttribute("SENSITIVITY_TYPE_SOS")]
public static short SensitivityTypeSos;
    [RegisterAttribute("SENSITIVITY_TYPE_SOS_AND_ISO")]
public static short SensitivityTypeSosAndIso;
    [RegisterAttribute("SENSITIVITY_TYPE_SOS_AND_REI")]
public static short SensitivityTypeSosAndRei;
    [RegisterAttribute("SENSITIVITY_TYPE_SOS_AND_REI_AND_ISO")]
public static short SensitivityTypeSosAndReiAndIso;
    [RegisterAttribute("SENSITIVITY_TYPE_UNKNOWN")]
public static short SensitivityTypeUnknown;
    [RegisterAttribute("SENSOR_TYPE_COLOR_SEQUENTIAL")]
public static short SensorTypeColorSequential;
    [RegisterAttribute("SENSOR_TYPE_COLOR_SEQUENTIAL_LINEAR")]
public static short SensorTypeColorSequentialLinear;
    [RegisterAttribute("SENSOR_TYPE_NOT_DEFINED")]
public static short SensorTypeNotDefined;
    [RegisterAttribute("SENSOR_TYPE_ONE_CHIP")]
public static short SensorTypeOneChip;
    [RegisterAttribute("SENSOR_TYPE_THREE_CHIP")]
public static short SensorTypeThreeChip;
    [RegisterAttribute("SENSOR_TYPE_TRILINEAR")]
public static short SensorTypeTrilinear;
    [RegisterAttribute("SENSOR_TYPE_TWO_CHIP")]
public static short SensorTypeTwoChip;
    [RegisterAttribute("SHARPNESS_HARD")]
public static short SharpnessHard;
    [RegisterAttribute("SHARPNESS_NORMAL")]
public static short SharpnessNormal;
    [RegisterAttribute("SHARPNESS_SOFT")]
public static short SharpnessSoft;
    [RegisterAttribute("STREAM_TYPE_EXIF_DATA_ONLY")]
public static int StreamTypeExifDataOnly;
    [RegisterAttribute("STREAM_TYPE_FULL_IMAGE_DATA")]
public static int StreamTypeFullImageData;
    [RegisterAttribute("SUBJECT_DISTANCE_RANGE_CLOSE_VIEW")]
public static short SubjectDistanceRangeCloseView;
    [RegisterAttribute("SUBJECT_DISTANCE_RANGE_DISTANT_VIEW")]
public static short SubjectDistanceRangeDistantView;
    [RegisterAttribute("SUBJECT_DISTANCE_RANGE_MACRO")]
public static short SubjectDistanceRangeMacro;
    [RegisterAttribute("SUBJECT_DISTANCE_RANGE_UNKNOWN")]
public static short SubjectDistanceRangeUnknown;
    [RegisterAttribute("TAG_APERTURE_VALUE")]
public static string TagApertureValue;
    [RegisterAttribute("TAG_ARTIST")]
public static string TagArtist;
    [RegisterAttribute("TAG_BITS_PER_SAMPLE")]
public static string TagBitsPerSample;
    [RegisterAttribute("TAG_BODY_SERIAL_NUMBER")]
public static string TagBodySerialNumber;
    [RegisterAttribute("TAG_BRIGHTNESS_VALUE")]
public static string TagBrightnessValue;
    [RegisterAttribute("TAG_CAMARA_OWNER_NAME")]
[ObsoleteAttribute("deprecated")]
public static string TagCamaraOwnerName;
    [RegisterAttribute("TAG_CAMERA_OWNER_NAME")]
public static string TagCameraOwnerName;
    [RegisterAttribute("TAG_CFA_PATTERN")]
public static string TagCfaPattern;
    [RegisterAttribute("TAG_COLOR_SPACE")]
public static string TagColorSpace;
    [RegisterAttribute("TAG_COMPONENTS_CONFIGURATION")]
public static string TagComponentsConfiguration;
    [RegisterAttribute("TAG_COMPRESSED_BITS_PER_PIXEL")]
public static string TagCompressedBitsPerPixel;
    [RegisterAttribute("TAG_COMPRESSION")]
public static string TagCompression;
    [RegisterAttribute("TAG_CONTRAST")]
public static string TagContrast;
    [RegisterAttribute("TAG_COPYRIGHT")]
public static string TagCopyright;
    [RegisterAttribute("TAG_CUSTOM_RENDERED")]
public static string TagCustomRendered;
    [RegisterAttribute("TAG_DATETIME")]
public static string TagDatetime;
    [RegisterAttribute("TAG_DATETIME_DIGITIZED")]
public static string TagDatetimeDigitized;
    [RegisterAttribute("TAG_DATETIME_ORIGINAL")]
public static string TagDatetimeOriginal;
    [RegisterAttribute("TAG_DEFAULT_CROP_SIZE")]
public static string TagDefaultCropSize;
    [RegisterAttribute("TAG_DEVICE_SETTING_DESCRIPTION")]
public static string TagDeviceSettingDescription;
    [RegisterAttribute("TAG_DIGITAL_ZOOM_RATIO")]
public static string TagDigitalZoomRatio;
    [RegisterAttribute("TAG_DNG_VERSION")]
public static string TagDngVersion;
    [RegisterAttribute("TAG_EXIF_VERSION")]
public static string TagExifVersion;
    [RegisterAttribute("TAG_EXPOSURE_BIAS_VALUE")]
public static string TagExposureBiasValue;
    [RegisterAttribute("TAG_EXPOSURE_INDEX")]
public static string TagExposureIndex;
    [RegisterAttribute("TAG_EXPOSURE_MODE")]
public static string TagExposureMode;
    [RegisterAttribute("TAG_EXPOSURE_PROGRAM")]
public static string TagExposureProgram;
    [RegisterAttribute("TAG_EXPOSURE_TIME")]
public static string TagExposureTime;
    [RegisterAttribute("TAG_FILE_SOURCE")]
public static string TagFileSource;
    [RegisterAttribute("TAG_FLASH")]
public static string TagFlash;
    [RegisterAttribute("TAG_FLASHPIX_VERSION")]
public static string TagFlashpixVersion;
    [RegisterAttribute("TAG_FLASH_ENERGY")]
public static string TagFlashEnergy;
    [RegisterAttribute("TAG_FOCAL_LENGTH")]
public static string TagFocalLength;
    [RegisterAttribute("TAG_FOCAL_LENGTH_IN_35MM_FILM")]
public static string TagFocalLengthIn35mmFilm;
    [RegisterAttribute("TAG_FOCAL_PLANE_RESOLUTION_UNIT")]
public static string TagFocalPlaneResolutionUnit;
    [RegisterAttribute("TAG_FOCAL_PLANE_X_RESOLUTION")]
public static string TagFocalPlaneXResolution;
    [RegisterAttribute("TAG_FOCAL_PLANE_Y_RESOLUTION")]
public static string TagFocalPlaneYResolution;
    [RegisterAttribute("TAG_F_NUMBER")]
public static string TagFNumber;
    [RegisterAttribute("TAG_GAIN_CONTROL")]
public static string TagGainControl;
    [RegisterAttribute("TAG_GAMMA")]
public static string TagGamma;
    [RegisterAttribute("TAG_GPS_ALTITUDE")]
public static string TagGpsAltitude;
    [RegisterAttribute("TAG_GPS_ALTITUDE_REF")]
public static string TagGpsAltitudeRef;
    [RegisterAttribute("TAG_GPS_AREA_INFORMATION")]
public static string TagGpsAreaInformation;
    [RegisterAttribute("TAG_GPS_DATESTAMP")]
public static string TagGpsDatestamp;
    [RegisterAttribute("TAG_GPS_DEST_BEARING")]
public static string TagGpsDestBearing;
    [RegisterAttribute("TAG_GPS_DEST_BEARING_REF")]
public static string TagGpsDestBearingRef;
    [RegisterAttribute("TAG_GPS_DEST_DISTANCE")]
public static string TagGpsDestDistance;
    [RegisterAttribute("TAG_GPS_DEST_DISTANCE_REF")]
public static string TagGpsDestDistanceRef;
    [RegisterAttribute("TAG_GPS_DEST_LATITUDE")]
public static string TagGpsDestLatitude;
    [RegisterAttribute("TAG_GPS_DEST_LATITUDE_REF")]
public static string TagGpsDestLatitudeRef;
    [RegisterAttribute("TAG_GPS_DEST_LONGITUDE")]
public static string TagGpsDestLongitude;
    [RegisterAttribute("TAG_GPS_DEST_LONGITUDE_REF")]
public static string TagGpsDestLongitudeRef;
    [RegisterAttribute("TAG_GPS_DIFFERENTIAL")]
public static string TagGpsDifferential;
    [RegisterAttribute("TAG_GPS_DOP")]
public static string TagGpsDop;
    [RegisterAttribute("TAG_GPS_H_POSITIONING_ERROR")]
public static string TagGpsHPositioningError;
    [RegisterAttribute("TAG_GPS_IMG_DIRECTION")]
public static string TagGpsImgDirection;
    [RegisterAttribute("TAG_GPS_IMG_DIRECTION_REF")]
public static string TagGpsImgDirectionRef;
    [RegisterAttribute("TAG_GPS_LATITUDE")]
public static string TagGpsLatitude;
    [RegisterAttribute("TAG_GPS_LATITUDE_REF")]
public static string TagGpsLatitudeRef;
    [RegisterAttribute("TAG_GPS_LONGITUDE")]
public static string TagGpsLongitude;
    [RegisterAttribute("TAG_GPS_LONGITUDE_REF")]
public static string TagGpsLongitudeRef;
    [RegisterAttribute("TAG_GPS_MAP_DATUM")]
public static string TagGpsMapDatum;
    [RegisterAttribute("TAG_GPS_MEASURE_MODE")]
public static string TagGpsMeasureMode;
    [RegisterAttribute("TAG_GPS_PROCESSING_METHOD")]
public static string TagGpsProcessingMethod;
    [RegisterAttribute("TAG_GPS_SATELLITES")]
public static string TagGpsSatellites;
    [RegisterAttribute("TAG_GPS_SPEED")]
public static string TagGpsSpeed;
    [RegisterAttribute("TAG_GPS_SPEED_REF")]
public static string TagGpsSpeedRef;
    [RegisterAttribute("TAG_GPS_STATUS")]
public static string TagGpsStatus;
    [RegisterAttribute("TAG_GPS_TIMESTAMP")]
public static string TagGpsTimestamp;
    [RegisterAttribute("TAG_GPS_TRACK")]
public static string TagGpsTrack;
    [RegisterAttribute("TAG_GPS_TRACK_REF")]
public static string TagGpsTrackRef;
    [RegisterAttribute("TAG_GPS_VERSION_ID")]
public static string TagGpsVersionId;
    [RegisterAttribute("TAG_IMAGE_DESCRIPTION")]
public static string TagImageDescription;
    [RegisterAttribute("TAG_IMAGE_LENGTH")]
public static string TagImageLength;
    [RegisterAttribute("TAG_IMAGE_UNIQUE_ID")]
public static string TagImageUniqueId;
    [RegisterAttribute("TAG_IMAGE_WIDTH")]
public static string TagImageWidth;
    [RegisterAttribute("TAG_INTEROPERABILITY_INDEX")]
public static string TagInteroperabilityIndex;
    [RegisterAttribute("TAG_ISO_SPEED")]
public static string TagIsoSpeed;
    [RegisterAttribute("TAG_ISO_SPEED_LATITUDE_YYY")]
public static string TagIsoSpeedLatitudeYyy;
    [RegisterAttribute("TAG_ISO_SPEED_LATITUDE_ZZZ")]
public static string TagIsoSpeedLatitudeZzz;
    [RegisterAttribute("TAG_ISO_SPEED_RATINGS")]
[ObsoleteAttribute("deprecated")]
public static string TagIsoSpeedRatings;
    [RegisterAttribute("TAG_JPEG_INTERCHANGE_FORMAT")]
public static string TagJpegInterchangeFormat;
    [RegisterAttribute("TAG_JPEG_INTERCHANGE_FORMAT_LENGTH")]
public static string TagJpegInterchangeFormatLength;
    [RegisterAttribute("TAG_LENS_MAKE")]
public static string TagLensMake;
    [RegisterAttribute("TAG_LENS_MODEL")]
public static string TagLensModel;
    [RegisterAttribute("TAG_LENS_SERIAL_NUMBER")]
public static string TagLensSerialNumber;
    [RegisterAttribute("TAG_LENS_SPECIFICATION")]
public static string TagLensSpecification;
    [RegisterAttribute("TAG_LIGHT_SOURCE")]
public static string TagLightSource;
    [RegisterAttribute("TAG_MAKE")]
public static string TagMake;
    [RegisterAttribute("TAG_MAKER_NOTE")]
public static string TagMakerNote;
    [RegisterAttribute("TAG_MAX_APERTURE_VALUE")]
public static string TagMaxApertureValue;
    [RegisterAttribute("TAG_METERING_MODE")]
public static string TagMeteringMode;
    [RegisterAttribute("TAG_MODEL")]
public static string TagModel;
    [RegisterAttribute("TAG_NEW_SUBFILE_TYPE")]
public static string TagNewSubfileType;
    [RegisterAttribute("TAG_OECF")]
public static string TagOecf;
    [RegisterAttribute("TAG_OFFSET_TIME")]
public static string TagOffsetTime;
    [RegisterAttribute("TAG_OFFSET_TIME_DIGITIZED")]
public static string TagOffsetTimeDigitized;
    [RegisterAttribute("TAG_OFFSET_TIME_ORIGINAL")]
public static string TagOffsetTimeOriginal;
    [RegisterAttribute("TAG_ORF_ASPECT_FRAME")]
public static string TagOrfAspectFrame;
    [RegisterAttribute("TAG_ORF_PREVIEW_IMAGE_LENGTH")]
public static string TagOrfPreviewImageLength;
    [RegisterAttribute("TAG_ORF_PREVIEW_IMAGE_START")]
public static string TagOrfPreviewImageStart;
    [RegisterAttribute("TAG_ORF_THUMBNAIL_IMAGE")]
public static string TagOrfThumbnailImage;
    [RegisterAttribute("TAG_ORIENTATION")]
public static string TagOrientation;
    [RegisterAttribute("TAG_PHOTOGRAPHIC_SENSITIVITY")]
public static string TagPhotographicSensitivity;
    [RegisterAttribute("TAG_PHOTOMETRIC_INTERPRETATION")]
public static string TagPhotometricInterpretation;
    [RegisterAttribute("TAG_PIXEL_X_DIMENSION")]
public static string TagPixelXDimension;
    [RegisterAttribute("TAG_PIXEL_Y_DIMENSION")]
public static string TagPixelYDimension;
    [RegisterAttribute("TAG_PLANAR_CONFIGURATION")]
public static string TagPlanarConfiguration;
    [RegisterAttribute("TAG_PRIMARY_CHROMATICITIES")]
public static string TagPrimaryChromaticities;
    [RegisterAttribute("TAG_RECOMMENDED_EXPOSURE_INDEX")]
public static string TagRecommendedExposureIndex;
    [RegisterAttribute("TAG_REFERENCE_BLACK_WHITE")]
public static string TagReferenceBlackWhite;
    [RegisterAttribute("TAG_RELATED_SOUND_FILE")]
public static string TagRelatedSoundFile;
    [RegisterAttribute("TAG_RESOLUTION_UNIT")]
public static string TagResolutionUnit;
    [RegisterAttribute("TAG_ROWS_PER_STRIP")]
public static string TagRowsPerStrip;
    [RegisterAttribute("TAG_RW2_ISO")]
public static string TagRw2Iso;
    [RegisterAttribute("TAG_RW2_JPG_FROM_RAW")]
public static string TagRw2JpgFromRaw;
    [RegisterAttribute("TAG_RW2_SENSOR_BOTTOM_BORDER")]
public static string TagRw2SensorBottomBorder;
    [RegisterAttribute("TAG_RW2_SENSOR_LEFT_BORDER")]
public static string TagRw2SensorLeftBorder;
    [RegisterAttribute("TAG_RW2_SENSOR_RIGHT_BORDER")]
public static string TagRw2SensorRightBorder;
    [RegisterAttribute("TAG_RW2_SENSOR_TOP_BORDER")]
public static string TagRw2SensorTopBorder;
    [RegisterAttribute("TAG_SAMPLES_PER_PIXEL")]
public static string TagSamplesPerPixel;
    [RegisterAttribute("TAG_SATURATION")]
public static string TagSaturation;
    [RegisterAttribute("TAG_SCENE_CAPTURE_TYPE")]
public static string TagSceneCaptureType;
    [RegisterAttribute("TAG_SCENE_TYPE")]
public static string TagSceneType;
    [RegisterAttribute("TAG_SENSING_METHOD")]
public static string TagSensingMethod;
    [RegisterAttribute("TAG_SENSITIVITY_TYPE")]
public static string TagSensitivityType;
    [RegisterAttribute("TAG_SHARPNESS")]
public static string TagSharpness;
    [RegisterAttribute("TAG_SHUTTER_SPEED_VALUE")]
public static string TagShutterSpeedValue;
    [RegisterAttribute("TAG_SOFTWARE")]
public static string TagSoftware;
    [RegisterAttribute("TAG_SPATIAL_FREQUENCY_RESPONSE")]
public static string TagSpatialFrequencyResponse;
    [RegisterAttribute("TAG_SPECTRAL_SENSITIVITY")]
public static string TagSpectralSensitivity;
    [RegisterAttribute("TAG_STANDARD_OUTPUT_SENSITIVITY")]
public static string TagStandardOutputSensitivity;
    [RegisterAttribute("TAG_STRIP_BYTE_COUNTS")]
public static string TagStripByteCounts;
    [RegisterAttribute("TAG_STRIP_OFFSETS")]
public static string TagStripOffsets;
    [RegisterAttribute("TAG_SUBFILE_TYPE")]
public static string TagSubfileType;
    [RegisterAttribute("TAG_SUBJECT_AREA")]
public static string TagSubjectArea;
    [RegisterAttribute("TAG_SUBJECT_DISTANCE")]
public static string TagSubjectDistance;
    [RegisterAttribute("TAG_SUBJECT_DISTANCE_RANGE")]
public static string TagSubjectDistanceRange;
    [RegisterAttribute("TAG_SUBJECT_LOCATION")]
public static string TagSubjectLocation;
    [RegisterAttribute("TAG_SUBSEC_TIME")]
public static string TagSubsecTime;
    [RegisterAttribute("TAG_SUBSEC_TIME_DIGITIZED")]
public static string TagSubsecTimeDigitized;
    [RegisterAttribute("TAG_SUBSEC_TIME_ORIGINAL")]
public static string TagSubsecTimeOriginal;
    [RegisterAttribute("TAG_THUMBNAIL_IMAGE_LENGTH")]
public static string TagThumbnailImageLength;
    [RegisterAttribute("TAG_THUMBNAIL_IMAGE_WIDTH")]
public static string TagThumbnailImageWidth;
    [RegisterAttribute("TAG_THUMBNAIL_ORIENTATION")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string TagThumbnailOrientation;
    [RegisterAttribute("TAG_TRANSFER_FUNCTION")]
public static string TagTransferFunction;
    [RegisterAttribute("TAG_USER_COMMENT")]
public static string TagUserComment;
    [RegisterAttribute("TAG_WHITE_BALANCE")]
public static string TagWhiteBalance;
    [RegisterAttribute("TAG_WHITE_POINT")]
public static string TagWhitePoint;
    [RegisterAttribute("TAG_XMP")]
public static string TagXmp;
    [RegisterAttribute("TAG_X_RESOLUTION")]
public static string TagXResolution;
    [RegisterAttribute("TAG_Y_CB_CR_COEFFICIENTS")]
public static string TagYCbCrCoefficients;
    [RegisterAttribute("TAG_Y_CB_CR_POSITIONING")]
public static string TagYCbCrPositioning;
    [RegisterAttribute("TAG_Y_CB_CR_SUB_SAMPLING")]
public static string TagYCbCrSubSampling;
    [RegisterAttribute("TAG_Y_RESOLUTION")]
public static string TagYResolution;
    [RegisterAttribute("WHITEBALANCE_AUTO")]
[ObsoleteAttribute("deprecated")]
public static int WhitebalanceAuto;
    [RegisterAttribute("WHITEBALANCE_MANUAL")]
[ObsoleteAttribute("deprecated")]
public static int WhitebalanceManual;
    [RegisterAttribute("WHITE_BALANCE_AUTO")]
public static short WhiteBalanceAuto;
    [RegisterAttribute("WHITE_BALANCE_MANUAL")]
public static short WhiteBalanceManual;
    [RegisterAttribute("Y_CB_CR_POSITIONING_CENTERED")]
public static short YCbCrPositioningCentered;
    [RegisterAttribute("Y_CB_CR_POSITIONING_CO_SITED")]
public static short YCbCrPositioningCoSited;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDateTime;
    [NullableAttribute("2")]
private static Delegate cb_setDateTime_Ljava_lang_Long_;
    [NullableAttribute("2")]
private static Delegate cb_getDateTimeDigitized;
    [NullableAttribute("2")]
private static Delegate cb_getDateTimeOriginal;
    [NullableAttribute("2")]
private static Delegate cb_getGpsDateTime;
    [NullableAttribute("2")]
private static Delegate cb_hasThumbnail;
    [NullableAttribute("2")]
private static Delegate cb_isFlipped;
    [NullableAttribute("2")]
private static Delegate cb_isThumbnailCompressed;
    [NullableAttribute("2")]
private static Delegate cb_getRotationDegrees;
    [NullableAttribute("2")]
private static Delegate cb_getThumbnailBitmap;
    [NullableAttribute("2")]
private static Delegate cb_flipHorizontally;
    [NullableAttribute("2")]
private static Delegate cb_flipVertically;
    [NullableAttribute("2")]
private static Delegate cb_getAltitude_D;
    [NullableAttribute("2")]
private static Delegate cb_getAttribute_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_getAttributeBytes_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_getAttributeDouble_Ljava_lang_String_D;
    [NullableAttribute("2")]
private static Delegate cb_getAttributeInt_Ljava_lang_String_I;
    [NullableAttribute("2")]
private static Delegate cb_getAttributeRange_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_getLatLong;
    [NullableAttribute("2")]
private static Delegate cb_getLatLong_arrayF;
    [NullableAttribute("2")]
private static Delegate cb_getThumbnail;
    [NullableAttribute("2")]
private static Delegate cb_getThumbnailBytes;
    [NullableAttribute("2")]
private static Delegate cb_getThumbnailRange;
    [NullableAttribute("2")]
private static Delegate cb_hasAttribute_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_resetOrientation;
    [NullableAttribute("2")]
private static Delegate cb_rotate_I;
    [NullableAttribute("2")]
private static Delegate cb_saveAttributes;
    [NullableAttribute("2")]
private static Delegate cb_setAltitude_D;
    [NullableAttribute("2")]
private static Delegate cb_setAttribute_Ljava_lang_String_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_setGpsInfo_Landroid_location_Location_;
    [NullableAttribute("2")]
private static Delegate cb_setLatLong_DD;
    [NullableAttribute("2")]
[RegisterAttribute("BITS_PER_SAMPLE_GREYSCALE_1")]
public static IList`1<int> BitsPerSampleGreyscale1 { get; }
    [NullableAttribute("2")]
[RegisterAttribute("BITS_PER_SAMPLE_GREYSCALE_2")]
public static IList`1<int> BitsPerSampleGreyscale2 { get; }
    [NullableAttribute("2")]
[RegisterAttribute("BITS_PER_SAMPLE_RGB")]
public static IList`1<int> BitsPerSampleRgb { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Long DateTime { get; public set; }
    [NullableAttribute("2")]
public Long DateTimeDigitized { get; }
    [NullableAttribute("2")]
public Long DateTimeOriginal { get; }
    [NullableAttribute("2")]
public Long GpsDateTime { get; }
    public bool HasThumbnail { get; }
    public bool IsFlipped { get; }
    public bool IsThumbnailCompressed { get; }
    public int RotationDegrees { get; }
    [NullableAttribute("2")]
public Bitmap ThumbnailBitmap { get; }
    protected ExifInterface(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/io/File;)V", "")]
public ExifInterface(File file);
    [RegisterAttribute(".ctor", "(Ljava/io/FileDescriptor;)V", "")]
public ExifInterface(FileDescriptor fileDescriptor);
    [RegisterAttribute(".ctor", "(Ljava/io/InputStream;)V", "")]
public ExifInterface(Stream inputStream);
    [RegisterAttribute(".ctor", "(Ljava/io/InputStream;I)V", "")]
public ExifInterface(Stream inputStream, int streamType);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public ExifInterface(string filename);
    private static ExifInterface();
    [NullableContextAttribute("2")]
public static IList`1<int> get_BitsPerSampleGreyscale1();
    [NullableContextAttribute("2")]
public static IList`1<int> get_BitsPerSampleGreyscale2();
    [NullableContextAttribute("2")]
public static IList`1<int> get_BitsPerSampleRgb();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDateTimeHandler();
    private static IntPtr n_GetDateTime(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDateTime_Ljava_lang_Long_Handler();
    private static void n_SetDateTime_Ljava_lang_Long_(IntPtr jnienv, IntPtr native__this, IntPtr native_timeStamp);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getDateTime", "()Ljava/lang/Long;", "GetGetDateTimeHandler")]
public virtual Long get_DateTime();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setDateTime", "(Ljava/lang/Long;)V", "GetSetDateTime_Ljava_lang_Long_Handler")]
public virtual void set_DateTime(Long value);
    private static Delegate GetGetDateTimeDigitizedHandler();
    private static IntPtr n_GetDateTimeDigitized(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getDateTimeDigitized", "()Ljava/lang/Long;", "GetGetDateTimeDigitizedHandler")]
public virtual Long get_DateTimeDigitized();
    private static Delegate GetGetDateTimeOriginalHandler();
    private static IntPtr n_GetDateTimeOriginal(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getDateTimeOriginal", "()Ljava/lang/Long;", "GetGetDateTimeOriginalHandler")]
public virtual Long get_DateTimeOriginal();
    private static Delegate GetGetGpsDateTimeHandler();
    private static IntPtr n_GetGpsDateTime(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getGpsDateTime", "()Ljava/lang/Long;", "GetGetGpsDateTimeHandler")]
public virtual Long get_GpsDateTime();
    private static Delegate GetHasThumbnailHandler();
    private static bool n_HasThumbnail(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasThumbnail", "()Z", "GetHasThumbnailHandler")]
public virtual bool get_HasThumbnail();
    private static Delegate GetIsFlippedHandler();
    private static bool n_IsFlipped(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isFlipped", "()Z", "GetIsFlippedHandler")]
public virtual bool get_IsFlipped();
    private static Delegate GetIsThumbnailCompressedHandler();
    private static bool n_IsThumbnailCompressed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isThumbnailCompressed", "()Z", "GetIsThumbnailCompressedHandler")]
public virtual bool get_IsThumbnailCompressed();
    private static Delegate GetGetRotationDegreesHandler();
    private static int n_GetRotationDegrees(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRotationDegrees", "()I", "GetGetRotationDegreesHandler")]
public virtual int get_RotationDegrees();
    private static Delegate GetGetThumbnailBitmapHandler();
    private static IntPtr n_GetThumbnailBitmap(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getThumbnailBitmap", "()Landroid/graphics/Bitmap;", "GetGetThumbnailBitmapHandler")]
public virtual Bitmap get_ThumbnailBitmap();
    private static Delegate GetFlipHorizontallyHandler();
    private static void n_FlipHorizontally(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flipHorizontally", "()V", "GetFlipHorizontallyHandler")]
public virtual void FlipHorizontally();
    private static Delegate GetFlipVerticallyHandler();
    private static void n_FlipVertically(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("flipVertically", "()V", "GetFlipVerticallyHandler")]
public virtual void FlipVertically();
    private static Delegate GetGetAltitude_DHandler();
    private static double n_GetAltitude_D(IntPtr jnienv, IntPtr native__this, double defaultValue);
    [RegisterAttribute("getAltitude", "(D)D", "GetGetAltitude_DHandler")]
public virtual double GetAltitude(double defaultValue);
    private static Delegate GetGetAttribute_Ljava_lang_String_Handler();
    private static IntPtr n_GetAttribute_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [RegisterAttribute("getAttribute", "(Ljava/lang/String;)Ljava/lang/String;", "GetGetAttribute_Ljava_lang_String_Handler")]
public virtual string GetAttribute(string tag);
    private static Delegate GetGetAttributeBytes_Ljava_lang_String_Handler();
    private static IntPtr n_GetAttributeBytes_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [RegisterAttribute("getAttributeBytes", "(Ljava/lang/String;)[B", "GetGetAttributeBytes_Ljava_lang_String_Handler")]
public virtual Byte[] GetAttributeBytes(string tag);
    private static Delegate GetGetAttributeDouble_Ljava_lang_String_DHandler();
    private static double n_GetAttributeDouble_Ljava_lang_String_D(IntPtr jnienv, IntPtr native__this, IntPtr native_tag, double defaultValue);
    [RegisterAttribute("getAttributeDouble", "(Ljava/lang/String;D)D", "GetGetAttributeDouble_Ljava_lang_String_DHandler")]
public virtual double GetAttributeDouble(string tag, double defaultValue);
    private static Delegate GetGetAttributeInt_Ljava_lang_String_IHandler();
    private static int n_GetAttributeInt_Ljava_lang_String_I(IntPtr jnienv, IntPtr native__this, IntPtr native_tag, int defaultValue);
    [RegisterAttribute("getAttributeInt", "(Ljava/lang/String;I)I", "GetGetAttributeInt_Ljava_lang_String_IHandler")]
public virtual int GetAttributeInt(string tag, int defaultValue);
    private static Delegate GetGetAttributeRange_Ljava_lang_String_Handler();
    private static IntPtr n_GetAttributeRange_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [RegisterAttribute("getAttributeRange", "(Ljava/lang/String;)[J", "GetGetAttributeRange_Ljava_lang_String_Handler")]
public virtual Int64[] GetAttributeRange(string tag);
    private static Delegate GetGetLatLongHandler();
    private static IntPtr n_GetLatLong(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getLatLong", "()[D", "GetGetLatLongHandler")]
public virtual Double[] GetLatLong();
    [ObsoleteAttribute]
private static Delegate GetGetLatLong_arrayFHandler();
    [ObsoleteAttribute]
private static bool n_GetLatLong_arrayF(IntPtr jnienv, IntPtr native__this, IntPtr native_output);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("getLatLong", "([F)Z", "GetGetLatLong_arrayFHandler")]
public virtual bool GetLatLong(Single[] output);
    private static Delegate GetGetThumbnailHandler();
    private static IntPtr n_GetThumbnail(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getThumbnail", "()[B", "GetGetThumbnailHandler")]
public virtual Byte[] GetThumbnail();
    private static Delegate GetGetThumbnailBytesHandler();
    private static IntPtr n_GetThumbnailBytes(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getThumbnailBytes", "()[B", "GetGetThumbnailBytesHandler")]
public virtual Byte[] GetThumbnailBytes();
    private static Delegate GetGetThumbnailRangeHandler();
    private static IntPtr n_GetThumbnailRange(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getThumbnailRange", "()[J", "GetGetThumbnailRangeHandler")]
public virtual Int64[] GetThumbnailRange();
    private static Delegate GetHasAttribute_Ljava_lang_String_Handler();
    private static bool n_HasAttribute_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag);
    [RegisterAttribute("hasAttribute", "(Ljava/lang/String;)Z", "GetHasAttribute_Ljava_lang_String_Handler")]
public virtual bool HasAttribute(string tag);
    [RegisterAttribute("isSupportedMimeType", "(Ljava/lang/String;)Z", "")]
public static bool IsSupportedMimeType(string mimeType);
    private static Delegate GetResetOrientationHandler();
    private static void n_ResetOrientation(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("resetOrientation", "()V", "GetResetOrientationHandler")]
public virtual void ResetOrientation();
    private static Delegate GetRotate_IHandler();
    private static void n_Rotate_I(IntPtr jnienv, IntPtr native__this, int degree);
    [RegisterAttribute("rotate", "(I)V", "GetRotate_IHandler")]
public virtual void Rotate(int degree);
    private static Delegate GetSaveAttributesHandler();
    private static void n_SaveAttributes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("saveAttributes", "()V", "GetSaveAttributesHandler")]
public virtual void SaveAttributes();
    private static Delegate GetSetAltitude_DHandler();
    private static void n_SetAltitude_D(IntPtr jnienv, IntPtr native__this, double altitude);
    [RegisterAttribute("setAltitude", "(D)V", "GetSetAltitude_DHandler")]
public virtual void SetAltitude(double altitude);
    private static Delegate GetSetAttribute_Ljava_lang_String_Ljava_lang_String_Handler();
    private static void n_SetAttribute_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_tag, IntPtr native_value);
    [RegisterAttribute("setAttribute", "(Ljava/lang/String;Ljava/lang/String;)V", "GetSetAttribute_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual void SetAttribute(string tag, string value);
    private static Delegate GetSetGpsInfo_Landroid_location_Location_Handler();
    private static void n_SetGpsInfo_Landroid_location_Location_(IntPtr jnienv, IntPtr native__this, IntPtr native_location);
    [NullableContextAttribute("2")]
[RegisterAttribute("setGpsInfo", "(Landroid/location/Location;)V", "GetSetGpsInfo_Landroid_location_Location_Handler")]
public virtual void SetGpsInfo(Location location);
    private static Delegate GetSetLatLong_DDHandler();
    private static void n_SetLatLong_DD(IntPtr jnienv, IntPtr native__this, double latitude, double longitude);
    [RegisterAttribute("setLatLong", "(DD)V", "GetSetLatLong_DDHandler")]
public virtual void SetLatLong(double latitude, double longitude);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_exifinterface_media_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_exifinterface_media_package(string klass);
}
