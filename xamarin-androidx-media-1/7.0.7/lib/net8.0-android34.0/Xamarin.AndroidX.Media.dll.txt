internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_J : MulticastDelegate {
    public _JniMarshal_PP_J(object object, IntPtr method);
    public virtual long Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual long EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPF_V : MulticastDelegate {
    public _JniMarshal_PPF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_L : MulticastDelegate {
    public _JniMarshal_PPI_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPII_V : MulticastDelegate {
    public _JniMarshal_PPII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIL_V : MulticastDelegate {
    public _JniMarshal_PPIIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPILLI_Z : MulticastDelegate {
    public _JniMarshal_PPILLI_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, int p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, IntPtr p2, int p3, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJ_V : MulticastDelegate {
    public _JniMarshal_PPJ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, long p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLI_V : MulticastDelegate {
    public _JniMarshal_PPLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIL_L : MulticastDelegate {
    public _JniMarshal_PPLIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_L : MulticastDelegate {
    public _JniMarshal_PPZ_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/media/AudioAttributesCompatParcelizer")]
public class Android.Support.V4.Media.AudioAttributesCompatParcelizer : AudioAttributesCompatParcelizer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AudioAttributesCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/media/AudioAttributesCompat;", "")]
public static AudioAttributesCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/media/AudioAttributesCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(AudioAttributesCompat obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/media/AudioAttributesImplBaseParcelizer")]
public class Android.Support.V4.Media.AudioAttributesImplBaseParcelizer : AudioAttributesImplBaseParcelizer {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AudioAttributesImplBaseParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesImplBaseParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/media/AudioAttributesImplBase;", "")]
public static AudioAttributesImplBase Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/media/AudioAttributesImplBase;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(AudioAttributesImplBase obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/MediaBrowserCompat")]
public class Android.Support.V4.Media.MediaBrowserCompat : Object {
    [RegisterAttribute("CUSTOM_ACTION_DOWNLOAD")]
public static string CustomActionDownload;
    [RegisterAttribute("CUSTOM_ACTION_REMOVE_DOWNLOADED_FILE")]
public static string CustomActionRemoveDownloadedFile;
    [RegisterAttribute("EXTRA_DOWNLOAD_PROGRESS")]
public static string ExtraDownloadProgress;
    [RegisterAttribute("EXTRA_MEDIA_ID")]
public static string ExtraMediaId;
    [RegisterAttribute("EXTRA_PAGE")]
public static string ExtraPage;
    [RegisterAttribute("EXTRA_PAGE_SIZE")]
public static string ExtraPageSize;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bundle Extras { get; }
    public bool IsConnected { get; }
    [NullableAttribute("2")]
public Bundle NotifyChildrenChangedOptions { get; }
    public string Root { get; }
    public ComponentName ServiceComponent { get; }
    public Token SessionToken { get; }
    internal MediaBrowserCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/content/ComponentName;Landroid/support/v4/media/MediaBrowserCompat$ConnectionCallback;Landroid/os/Bundle;)V", "")]
public MediaBrowserCompat(Context context, ComponentName serviceComponent, ConnectionCallback callback, Bundle rootHints);
    private static MediaBrowserCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("isConnected", "()Z", "")]
public bool get_IsConnected();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getNotifyChildrenChangedOptions", "()Landroid/os/Bundle;", "")]
public Bundle get_NotifyChildrenChangedOptions();
    [RegisterAttribute("getRoot", "()Ljava/lang/String;", "")]
public string get_Root();
    [RegisterAttribute("getServiceComponent", "()Landroid/content/ComponentName;", "")]
public ComponentName get_ServiceComponent();
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "")]
public Token get_SessionToken();
    [RegisterAttribute("connect", "()V", "")]
public void Connect();
    [RegisterAttribute("disconnect", "()V", "")]
public void Disconnect();
    [RegisterAttribute("getItem", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$ItemCallback;)V", "")]
public void GetItem(string mediaId, ItemCallback cb);
    [RegisterAttribute("search", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$SearchCallback;)V", "")]
public void Search(string query, Bundle extras, SearchCallback callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$CustomActionCallback;)V", "")]
public void SendCustomAction(string action, Bundle extras, CustomActionCallback callback);
    [RegisterAttribute("subscribe", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Subscribe(string parentId, Bundle options, SubscriptionCallback callback);
    [RegisterAttribute("subscribe", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Subscribe(string parentId, SubscriptionCallback callback);
    [RegisterAttribute("unsubscribe", "(Ljava/lang/String;)V", "")]
public void Unsubscribe(string parentId);
    [RegisterAttribute("unsubscribe", "(Ljava/lang/String;Landroid/support/v4/media/MediaBrowserCompat$SubscriptionCallback;)V", "")]
public void Unsubscribe(string parentId, SubscriptionCallback callback);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/MediaDescriptionCompat")]
public class Android.Support.V4.Media.MediaDescriptionCompat : Object {
    [RegisterAttribute("BT_FOLDER_TYPE_ALBUMS")]
public static long BtFolderTypeAlbums;
    [RegisterAttribute("BT_FOLDER_TYPE_ARTISTS")]
public static long BtFolderTypeArtists;
    [RegisterAttribute("BT_FOLDER_TYPE_GENRES")]
public static long BtFolderTypeGenres;
    [RegisterAttribute("BT_FOLDER_TYPE_MIXED")]
public static long BtFolderTypeMixed;
    [RegisterAttribute("BT_FOLDER_TYPE_PLAYLISTS")]
public static long BtFolderTypePlaylists;
    [RegisterAttribute("BT_FOLDER_TYPE_TITLES")]
public static long BtFolderTypeTitles;
    [RegisterAttribute("BT_FOLDER_TYPE_YEARS")]
public static long BtFolderTypeYears;
    [NullableAttribute("1")]
[RegisterAttribute("DESCRIPTION_KEY_MEDIA_URI")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string DescriptionKeyMediaUri;
    [NullableAttribute("1")]
[RegisterAttribute("DESCRIPTION_KEY_NULL_BUNDLE_FLAG")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string DescriptionKeyNullBundleFlag;
    [NullableAttribute("1")]
[RegisterAttribute("EXTRA_BT_FOLDER_TYPE")]
public static string ExtraBtFolderType;
    [NullableAttribute("1")]
[RegisterAttribute("EXTRA_DOWNLOAD_STATUS")]
public static string ExtraDownloadStatus;
    [RegisterAttribute("STATUS_DOWNLOADED")]
public static long StatusDownloaded;
    [RegisterAttribute("STATUS_DOWNLOADING")]
public static long StatusDownloading;
    [RegisterAttribute("STATUS_NOT_DOWNLOADED")]
public static long StatusNotDownloaded;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICharSequence DescriptionFormatted { get; }
    public string Description { get; }
    public Bundle Extras { get; }
    public Bitmap IconBitmap { get; }
    public Uri IconUri { get; }
    public Object MediaDescription { get; }
    public string MediaId { get; }
    public Uri MediaUri { get; }
    public ICharSequence SubtitleFormatted { get; }
    public string Subtitle { get; }
    public ICharSequence TitleFormatted { get; }
    public string Title { get; }
    internal MediaDescriptionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaDescriptionCompat();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDescription", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_DescriptionFormatted();
    public string get_Description();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("getIconBitmap", "()Landroid/graphics/Bitmap;", "")]
public Bitmap get_IconBitmap();
    [RegisterAttribute("getIconUri", "()Landroid/net/Uri;", "")]
public Uri get_IconUri();
    [RegisterAttribute("getMediaDescription", "()Ljava/lang/Object;", "")]
public Object get_MediaDescription();
    [RegisterAttribute("getMediaId", "()Ljava/lang/String;", "")]
public string get_MediaId();
    [RegisterAttribute("getMediaUri", "()Landroid/net/Uri;", "")]
public Uri get_MediaUri();
    [RegisterAttribute("getSubtitle", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_SubtitleFormatted();
    public string get_Subtitle();
    [RegisterAttribute("getTitle", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_TitleFormatted();
    public string get_Title();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromMediaDescription", "(Ljava/lang/Object;)Landroid/support/v4/media/MediaDescriptionCompat;", "")]
public static MediaDescriptionCompat FromMediaDescription(Object descriptionObj);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/MediaMetadataCompat")]
public class Android.Support.V4.Media.MediaMetadataCompat : Object {
    [RegisterAttribute("METADATA_KEY_ADVERTISEMENT")]
public static string MetadataKeyAdvertisement;
    [RegisterAttribute("METADATA_KEY_ALBUM")]
public static string MetadataKeyAlbum;
    [RegisterAttribute("METADATA_KEY_ALBUM_ART")]
public static string MetadataKeyAlbumArt;
    [RegisterAttribute("METADATA_KEY_ALBUM_ARTIST")]
public static string MetadataKeyAlbumArtist;
    [RegisterAttribute("METADATA_KEY_ALBUM_ART_URI")]
public static string MetadataKeyAlbumArtUri;
    [RegisterAttribute("METADATA_KEY_ART")]
public static string MetadataKeyArt;
    [RegisterAttribute("METADATA_KEY_ARTIST")]
public static string MetadataKeyArtist;
    [RegisterAttribute("METADATA_KEY_ART_URI")]
public static string MetadataKeyArtUri;
    [RegisterAttribute("METADATA_KEY_AUTHOR")]
public static string MetadataKeyAuthor;
    [RegisterAttribute("METADATA_KEY_BT_FOLDER_TYPE")]
public static string MetadataKeyBtFolderType;
    [RegisterAttribute("METADATA_KEY_COMPILATION")]
public static string MetadataKeyCompilation;
    [RegisterAttribute("METADATA_KEY_COMPOSER")]
public static string MetadataKeyComposer;
    [RegisterAttribute("METADATA_KEY_DATE")]
public static string MetadataKeyDate;
    [RegisterAttribute("METADATA_KEY_DISC_NUMBER")]
public static string MetadataKeyDiscNumber;
    [RegisterAttribute("METADATA_KEY_DISPLAY_DESCRIPTION")]
public static string MetadataKeyDisplayDescription;
    [RegisterAttribute("METADATA_KEY_DISPLAY_ICON")]
public static string MetadataKeyDisplayIcon;
    [RegisterAttribute("METADATA_KEY_DISPLAY_ICON_URI")]
public static string MetadataKeyDisplayIconUri;
    [RegisterAttribute("METADATA_KEY_DISPLAY_SUBTITLE")]
public static string MetadataKeyDisplaySubtitle;
    [RegisterAttribute("METADATA_KEY_DISPLAY_TITLE")]
public static string MetadataKeyDisplayTitle;
    [RegisterAttribute("METADATA_KEY_DOWNLOAD_STATUS")]
public static string MetadataKeyDownloadStatus;
    [RegisterAttribute("METADATA_KEY_DURATION")]
public static string MetadataKeyDuration;
    [RegisterAttribute("METADATA_KEY_GENRE")]
public static string MetadataKeyGenre;
    [RegisterAttribute("METADATA_KEY_MEDIA_ID")]
public static string MetadataKeyMediaId;
    [RegisterAttribute("METADATA_KEY_MEDIA_URI")]
public static string MetadataKeyMediaUri;
    [RegisterAttribute("METADATA_KEY_NUM_TRACKS")]
public static string MetadataKeyNumTracks;
    [RegisterAttribute("METADATA_KEY_RATING")]
public static string MetadataKeyRating;
    [RegisterAttribute("METADATA_KEY_TITLE")]
public static string MetadataKeyTitle;
    [RegisterAttribute("METADATA_KEY_TRACK_NUMBER")]
public static string MetadataKeyTrackNumber;
    [RegisterAttribute("METADATA_KEY_USER_RATING")]
public static string MetadataKeyUserRating;
    [RegisterAttribute("METADATA_KEY_WRITER")]
public static string MetadataKeyWriter;
    [RegisterAttribute("METADATA_KEY_YEAR")]
public static string MetadataKeyYear;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bundle Bundle { get; }
    [NullableAttribute("2")]
public MediaDescriptionCompat Description { get; }
    [NullableAttribute("2")]
public Object MediaMetadata { get; }
    internal MediaMetadataCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaMetadataCompat();
    [NullableContextAttribute("2")]
public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBundle", "()Landroid/os/Bundle;", "")]
public Bundle get_Bundle();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDescription", "()Landroid/support/v4/media/MediaDescriptionCompat;", "")]
public MediaDescriptionCompat get_Description();
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaMetadata", "()Ljava/lang/Object;", "")]
public Object get_MediaMetadata();
    [NullableContextAttribute("2")]
[RegisterAttribute("containsKey", "(Ljava/lang/String;)Z", "")]
public bool ContainsKey(string key);
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromMediaMetadata", "(Ljava/lang/Object;)Landroid/support/v4/media/MediaMetadataCompat;", "")]
public static MediaMetadataCompat FromMediaMetadata(Object metadataObj);
    [NullableContextAttribute("2")]
[RegisterAttribute("getBitmap", "(Ljava/lang/String;)Landroid/graphics/Bitmap;", "")]
public Bitmap GetBitmap(string key);
    [NullableContextAttribute("2")]
[RegisterAttribute("getLong", "(Ljava/lang/String;)J", "")]
public long GetLong(string key);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRating", "(Ljava/lang/String;)Landroid/support/v4/media/RatingCompat;", "")]
public RatingCompat GetRating(string key);
    [NullableContextAttribute("2")]
[RegisterAttribute("getString", "(Ljava/lang/String;)Ljava/lang/String;", "")]
public string GetString(string key);
    [NullableContextAttribute("2")]
[RegisterAttribute("getText", "(Ljava/lang/String;)Ljava/lang/CharSequence;", "")]
public ICharSequence GetTextFormatted(string key);
    [NullableContextAttribute("2")]
public string GetText(string key);
    [RegisterAttribute("keySet", "()Ljava/util/Set;", "")]
public ICollection`1<string> KeySet();
    [RegisterAttribute("size", "()I", "")]
public int Size();
    [NullableContextAttribute("2")]
[RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/RatingCompat")]
public class Android.Support.V4.Media.RatingCompat : Object {
    [RegisterAttribute("RATING_3_STARS")]
public static int Rating3Stars;
    [RegisterAttribute("RATING_4_STARS")]
public static int Rating4Stars;
    [RegisterAttribute("RATING_5_STARS")]
public static int Rating5Stars;
    [RegisterAttribute("RATING_HEART")]
public static int RatingHeart;
    [RegisterAttribute("RATING_NONE")]
public static int RatingNone;
    [RegisterAttribute("RATING_PERCENTAGE")]
public static int RatingPercentage;
    [RegisterAttribute("RATING_THUMB_UP_DOWN")]
public static int RatingThumbUpDown;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasHeart { get; }
    public bool IsRated { get; }
    public bool IsThumbUp { get; }
    public float PercentRating { get; }
    public Object Rating { get; }
    public int RatingStyle { get; }
    public float StarRating { get; }
    internal RatingCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static RatingCompat();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("hasHeart", "()Z", "")]
public bool get_HasHeart();
    [RegisterAttribute("isRated", "()Z", "")]
public bool get_IsRated();
    [RegisterAttribute("isThumbUp", "()Z", "")]
public bool get_IsThumbUp();
    [RegisterAttribute("getPercentRating", "()F", "")]
public float get_PercentRating();
    [RegisterAttribute("getRating", "()Ljava/lang/Object;", "")]
public Object get_Rating();
    [RegisterAttribute("getRatingStyle", "()I", "")]
public int get_RatingStyle();
    [RegisterAttribute("getStarRating", "()F", "")]
public float get_StarRating();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromRating", "(Ljava/lang/Object;)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat FromRating(Object ratingObj);
    [RegisterAttribute("newHeartRating", "(Z)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewHeartRating(bool hasHeart);
    [RegisterAttribute("newPercentageRating", "(F)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewPercentageRating(float percent);
    [RegisterAttribute("newStarRating", "(IF)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewStarRating(int starRatingStyle, float starRating);
    [RegisterAttribute("newThumbRating", "(Z)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewThumbRating(bool thumbIsUp);
    [RegisterAttribute("newUnratedRating", "(I)Landroid/support/v4/media/RatingCompat;", "")]
public static RatingCompat NewUnratedRating(int ratingStyle);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback", "", "Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker")]
public interface Android.Support.V4.Media.Session.IMediaControllerCallback {
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnCaptioningEnabledChanged(bool p0);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnEvent(string p0, Bundle p1);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnExtrasChanged(Bundle p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnQueueTitleChanged(ICharSequence p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnRepeatModeChanged(int p0);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnSessionDestroyed();
    [RegisterAttribute("onSessionReady", "()V", "GetOnSessionReadyHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnSessionReady();
    [RegisterAttribute("onShuffleModeChanged", "(I)V", "GetOnShuffleModeChanged_IHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnShuffleModeChanged(int p0);
    [RegisterAttribute("onShuffleModeChangedRemoved", "(Z)V", "GetOnShuffleModeChangedRemoved_ZHandler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnShuffleModeChangedRemoved(bool p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler:Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[ExtensionAttribute]
public static class Android.Support.V4.Media.Session.IMediaControllerCallbackExtensions : object {
    [NullableContextAttribute("1")]
[ExtensionAttribute]
public static void OnQueueTitleChanged(IMediaControllerCallback self, string p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback")]
internal class Android.Support.V4.Media.Session.IMediaControllerCallbackInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_onCaptioningEnabledChanged_Z;
    private IntPtr id_onCaptioningEnabledChanged_Z;
    private static Delegate cb_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onExtrasChanged_Landroid_os_Bundle_;
    private IntPtr id_onExtrasChanged_Landroid_os_Bundle_;
    private static Delegate cb_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private IntPtr id_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private IntPtr id_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_onQueueChanged_Ljava_util_List_;
    private IntPtr id_onQueueChanged_Ljava_util_List_;
    private static Delegate cb_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private IntPtr id_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static Delegate cb_onRepeatModeChanged_I;
    private IntPtr id_onRepeatModeChanged_I;
    private static Delegate cb_onSessionDestroyed;
    private IntPtr id_onSessionDestroyed;
    private static Delegate cb_onSessionReady;
    private IntPtr id_onSessionReady;
    private static Delegate cb_onShuffleModeChanged_I;
    private IntPtr id_onShuffleModeChanged_I;
    private static Delegate cb_onShuffleModeChangedRemoved_Z;
    private IntPtr id_onShuffleModeChangedRemoved_Z;
    private static Delegate cb_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    private IntPtr id_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IMediaControllerCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMediaControllerCallbackInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static IMediaControllerCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetOnCaptioningEnabledChanged_ZHandler();
    private static void n_OnCaptioningEnabledChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual void OnCaptioningEnabledChanged(bool p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void OnEvent(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetOnExtrasChanged_Landroid_os_Bundle_Handler();
    private static void n_OnExtrasChanged_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnExtrasChanged(Bundle p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_OnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_OnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueChanged_Ljava_util_List_Handler();
    private static void n_OnQueueChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler();
    private static void n_OnQueueTitleChanged_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnQueueTitleChanged(ICharSequence p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnRepeatModeChanged_IHandler();
    private static void n_OnRepeatModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void OnRepeatModeChanged(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionDestroyedHandler();
    private static void n_OnSessionDestroyed(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnSessionDestroyed();
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionReadyHandler();
    private static void n_OnSessionReady(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void OnSessionReady();
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChanged_IHandler();
    private static void n_OnShuffleModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void OnShuffleModeChanged(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChangedRemoved_ZHandler();
    private static void n_OnShuffleModeChangedRemoved_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual void OnShuffleModeChangedRemoved(bool p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler();
    private static void n_OnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[NullableContextAttribute("2")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession", "", "Android.Support.V4.Media.Session.IMediaSessionInvoker")]
public interface Android.Support.V4.Media.Session.IMediaSession {
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public Bundle SessionInfo { get; }
    public int ShuffleMode { get; public set; }
    public bool ShuffleModeEnabledRemoved { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void set_CaptioningEnabled(bool value);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual long get_Flags();
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual bool get_IsTransportControlEnabled();
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual PendingIntent get_LaunchPendingIntent();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual ICharSequence get_QueueTitleFormatted();
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void set_RepeatMode(int value);
    [RegisterAttribute("getSessionInfo", "()Landroid/os/Bundle;", "GetGetSessionInfoHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual Bundle get_SessionInfo();
    [RegisterAttribute("getShuffleMode", "()I", "GetGetShuffleModeHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_ShuffleMode();
    [RegisterAttribute("setShuffleMode", "(I)V", "GetSetShuffleMode_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void set_ShuffleMode(int value);
    [RegisterAttribute("isShuffleModeEnabledRemoved", "()Z", "GetIsShuffleModeEnabledRemovedHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual bool get_ShuffleModeEnabledRemoved();
    [RegisterAttribute("setShuffleModeEnabledRemoved", "(Z)V", "GetSetShuffleModeEnabledRemoved_ZHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void set_ShuffleModeEnabledRemoved(bool value);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual string get_Tag();
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual ParcelableVolumeInfo get_VolumeAttributes();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void AddQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void AdjustVolume(int p0, int p1, string p2);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void FastForward();
    [RegisterAttribute("next", "()V", "GetNextHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Next();
    [RegisterAttribute("pause", "()V", "GetPauseHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Pause();
    [RegisterAttribute("play", "()V", "GetPlayHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Play();
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PlayFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PlayFromSearch(string p0, Bundle p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PlayFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Prepare();
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PrepareFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PrepareFromSearch(string p0, Bundle p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void PrepareFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Previous();
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Rate(RatingCompat p0);
    [RegisterAttribute("rateWithExtras", "(Landroid/support/v4/media/RatingCompat;Landroid/os/Bundle;)V", "GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void RateWithExtras(RatingCompat p0, Bundle p1);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void RemoveQueueItemAt(int p0);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Rewind();
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void SeekTo(long p0);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void SendCustomAction(string p0, Bundle p1);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual bool SendMediaButton(KeyEvent p0);
    [RegisterAttribute("setPlaybackSpeed", "(F)V", "GetSetPlaybackSpeed_FHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void SetPlaybackSpeed(float p0);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void SetVolumeTo(int p0, int p1, string p2);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void SkipToQueueItem(long p0);
    [RegisterAttribute("stop", "()V", "GetStopHandler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void Stop();
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler:Android.Support.V4.Media.Session.IMediaSessionInvoker, Xamarin.AndroidX.Media")]
public abstract virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession")]
internal class Android.Support.V4.Media.Session.IMediaSessionInvoker : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private IntPtr class_ref;
    private static Delegate cb_isCaptioningEnabled;
    private static Delegate cb_setCaptioningEnabled_Z;
    private IntPtr id_isCaptioningEnabled;
    private IntPtr id_setCaptioningEnabled_Z;
    private static Delegate cb_getExtras;
    private IntPtr id_getExtras;
    private static Delegate cb_getFlags;
    private IntPtr id_getFlags;
    private static Delegate cb_isTransportControlEnabled;
    private IntPtr id_isTransportControlEnabled;
    private static Delegate cb_getLaunchPendingIntent;
    private IntPtr id_getLaunchPendingIntent;
    private static Delegate cb_getMetadata;
    private IntPtr id_getMetadata;
    private static Delegate cb_getPackageName;
    private IntPtr id_getPackageName;
    private static Delegate cb_getPlaybackState;
    private IntPtr id_getPlaybackState;
    private static Delegate cb_getQueue;
    private IntPtr id_getQueue;
    private static Delegate cb_getQueueTitle;
    private IntPtr id_getQueueTitle;
    private static Delegate cb_getRatingType;
    private IntPtr id_getRatingType;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private IntPtr id_getRepeatMode;
    private IntPtr id_setRepeatMode_I;
    private static Delegate cb_getSessionInfo;
    private IntPtr id_getSessionInfo;
    private static Delegate cb_getShuffleMode;
    private static Delegate cb_setShuffleMode_I;
    private IntPtr id_getShuffleMode;
    private IntPtr id_setShuffleMode_I;
    private static Delegate cb_isShuffleModeEnabledRemoved;
    private static Delegate cb_setShuffleModeEnabledRemoved_Z;
    private IntPtr id_isShuffleModeEnabledRemoved;
    private IntPtr id_setShuffleModeEnabledRemoved_Z;
    private static Delegate cb_getTag;
    private IntPtr id_getTag;
    private static Delegate cb_getVolumeAttributes;
    private IntPtr id_getVolumeAttributes;
    private static Delegate cb_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private IntPtr id_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private IntPtr id_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static Delegate cb_adjustVolume_IILjava_lang_String_;
    private IntPtr id_adjustVolume_IILjava_lang_String_;
    private static Delegate cb_fastForward;
    private IntPtr id_fastForward;
    private static Delegate cb_next;
    private IntPtr id_next;
    private static Delegate cb_pause;
    private IntPtr id_pause;
    private static Delegate cb_play;
    private IntPtr id_play;
    private static Delegate cb_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private IntPtr id_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_prepare;
    private IntPtr id_prepare;
    private static Delegate cb_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private IntPtr id_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_previous;
    private IntPtr id_previous;
    private static Delegate cb_rate_Landroid_support_v4_media_RatingCompat_;
    private IntPtr id_rate_Landroid_support_v4_media_RatingCompat_;
    private static Delegate cb_rateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_;
    private IntPtr id_rateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_;
    private static Delegate cb_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private IntPtr id_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private IntPtr id_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_removeQueueItemAt_I;
    private IntPtr id_removeQueueItemAt_I;
    private static Delegate cb_rewind;
    private IntPtr id_rewind;
    private static Delegate cb_seekTo_J;
    private IntPtr id_seekTo_J;
    private static Delegate cb_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private IntPtr id_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_sendMediaButton_Landroid_view_KeyEvent_;
    private IntPtr id_sendMediaButton_Landroid_view_KeyEvent_;
    private static Delegate cb_setPlaybackSpeed_F;
    private IntPtr id_setPlaybackSpeed_F;
    private static Delegate cb_setVolumeTo_IILjava_lang_String_;
    private IntPtr id_setVolumeTo_IILjava_lang_String_;
    private static Delegate cb_skipToQueueItem_J;
    private IntPtr id_skipToQueueItem_J;
    private static Delegate cb_stop;
    private IntPtr id_stop;
    private static Delegate cb_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private IntPtr id_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_asBinder;
    private IntPtr id_asBinder;
    private static IntPtr java_class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public Bundle SessionInfo { get; }
    public int ShuffleMode { get; public set; }
    public bool ShuffleModeEnabledRemoved { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    public IMediaSessionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMediaSessionInvoker();
    private static IntPtr get_java_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    public static IMediaSession GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [NullableContextAttribute("1")]
private static Delegate GetIsCaptioningEnabledHandler();
    private static bool n_IsCaptioningEnabled(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool get_CaptioningEnabled();
    public sealed virtual void set_CaptioningEnabled(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Bundle get_Extras();
    [NullableContextAttribute("1")]
private static Delegate GetGetFlagsHandler();
    private static long n_GetFlags(IntPtr jnienv, IntPtr native__this);
    public sealed virtual long get_Flags();
    [NullableContextAttribute("1")]
private static Delegate GetIsTransportControlEnabledHandler();
    private static bool n_IsTransportControlEnabled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsTransportControlEnabled();
    [NullableContextAttribute("1")]
private static Delegate GetGetLaunchPendingIntentHandler();
    private static IntPtr n_GetLaunchPendingIntent(IntPtr jnienv, IntPtr native__this);
    public sealed virtual PendingIntent get_LaunchPendingIntent();
    [NullableContextAttribute("1")]
private static Delegate GetGetMetadataHandler();
    private static IntPtr n_GetMetadata(IntPtr jnienv, IntPtr native__this);
    public sealed virtual MediaMetadataCompat get_Metadata();
    [NullableContextAttribute("1")]
private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_PackageName();
    [NullableContextAttribute("1")]
private static Delegate GetGetPlaybackStateHandler();
    private static IntPtr n_GetPlaybackState(IntPtr jnienv, IntPtr native__this);
    public sealed virtual PlaybackStateCompat get_PlaybackState();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueHandler();
    private static IntPtr n_GetQueue(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList`1<QueueItem> get_Queue();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueTitleHandler();
    private static IntPtr n_GetQueueTitle(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICharSequence get_QueueTitleFormatted();
    [NullableContextAttribute("1")]
private static Delegate GetGetRatingTypeHandler();
    private static int n_GetRatingType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_RatingType();
    [NullableContextAttribute("1")]
private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual int get_RepeatMode();
    public sealed virtual void set_RepeatMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSessionInfoHandler();
    private static IntPtr n_GetSessionInfo(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Bundle get_SessionInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetShuffleModeHandler();
    private static int n_GetShuffleMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleMode_IHandler();
    private static void n_SetShuffleMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual int get_ShuffleMode();
    public sealed virtual void set_ShuffleMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsShuffleModeEnabledRemovedHandler();
    private static bool n_IsShuffleModeEnabledRemoved(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleModeEnabledRemoved_ZHandler();
    private static void n_SetShuffleModeEnabledRemoved_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    public sealed virtual bool get_ShuffleModeEnabledRemoved();
    public sealed virtual void set_ShuffleModeEnabledRemoved(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    public sealed virtual string get_Tag();
    [NullableContextAttribute("1")]
private static Delegate GetGetVolumeAttributesHandler();
    private static IntPtr n_GetVolumeAttributes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ParcelableVolumeInfo get_VolumeAttributes();
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_AddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddQueueItem(MediaDescriptionCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler();
    private static void n_AddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1);
    public sealed virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [NullableContextAttribute("1")]
private static Delegate GetAdjustVolume_IILjava_lang_String_Handler();
    private static void n_AdjustVolume_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual void AdjustVolume(int p0, int p1, string p2);
    [NullableContextAttribute("1")]
private static Delegate GetFastForwardHandler();
    private static void n_FastForward(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void FastForward();
    [NullableContextAttribute("1")]
private static Delegate GetNextHandler();
    private static void n_Next(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Next();
    [NullableContextAttribute("1")]
private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Pause();
    [NullableContextAttribute("1")]
private static Delegate GetPlayHandler();
    private static void n_Play(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Play();
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromMediaId(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromSearch(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PlayFromUri(Uri p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareHandler();
    private static void n_Prepare(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Prepare();
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromMediaId(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromSearch(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void PrepareFromUri(Uri p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPreviousHandler();
    private static void n_Previous(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Previous();
    [NullableContextAttribute("1")]
private static Delegate GetRate_Landroid_support_v4_media_RatingCompat_Handler();
    private static void n_Rate_Landroid_support_v4_media_RatingCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void Rate(RatingCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler();
    private static void n_RateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void RateWithExtras(RatingCompat p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_RegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_RemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItemAt_IHandler();
    private static void n_RemoveQueueItemAt_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual void RemoveQueueItemAt(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetRewindHandler();
    private static void n_Rewind(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Rewind();
    [NullableContextAttribute("1")]
private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    public sealed virtual void SeekTo(long p0);
    [NullableContextAttribute("1")]
private static Delegate GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendCustomAction_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void SendCustomAction(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetSendMediaButton_Landroid_view_KeyEvent_Handler();
    private static bool n_SendMediaButton_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual bool SendMediaButton(KeyEvent p0);
    [NullableContextAttribute("1")]
private static Delegate GetSetPlaybackSpeed_FHandler();
    private static void n_SetPlaybackSpeed_F(IntPtr jnienv, IntPtr native__this, float p0);
    public sealed virtual void SetPlaybackSpeed(float p0);
    [NullableContextAttribute("1")]
private static Delegate GetSetVolumeTo_IILjava_lang_String_Handler();
    private static void n_SetVolumeTo_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    public sealed virtual void SetVolumeTo(int p0, int p1, string p2);
    [NullableContextAttribute("1")]
private static Delegate GetSkipToQueueItem_JHandler();
    private static void n_SkipToQueueItem_J(IntPtr jnienv, IntPtr native__this, long p0);
    public sealed virtual void SkipToQueueItem(long p0);
    [NullableContextAttribute("1")]
private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Stop();
    [NullableContextAttribute("1")]
private static Delegate GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_UnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IBinder AsBinder();
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback")]
public abstract class Android.Support.V4.Media.Session.MediaControllerCallback : Object {
    [NullableAttribute("1")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$_Parcel")]
public class Android.Support.V4.Media.Session.MediaControllerCallback_Parcel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaControllerCallback_Parcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaControllerCallback_Parcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback")]
[ObsoleteAttribute("Use the 'MediaControllerCallback' type. This type will be removed in a future release.", "True")]
public abstract class Android.Support.V4.Media.Session.MediaControllerCallbackConsts : MediaControllerCallback {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$Default")]
public class Android.Support.V4.Media.Session.MediaControllerCallbackDefault : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_asBinder;
    private static Delegate cb_onCaptioningEnabledChanged_Z;
    private static Delegate cb_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onExtrasChanged_Landroid_os_Bundle_;
    private static Delegate cb_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_onQueueChanged_Ljava_util_List_;
    private static Delegate cb_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static Delegate cb_onRepeatModeChanged_I;
    private static Delegate cb_onSessionDestroyed;
    private static Delegate cb_onSessionReady;
    private static Delegate cb_onShuffleModeChanged_I;
    private static Delegate cb_onShuffleModeChangedRemoved_Z;
    private static Delegate cb_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaControllerCallbackDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaControllerCallbackDefault();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("1")]
private static Delegate GetOnCaptioningEnabledChanged_ZHandler();
    private static void n_OnCaptioningEnabledChanged_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler")]
public virtual void OnCaptioningEnabledChanged(bool enabled);
    [NullableContextAttribute("1")]
private static Delegate GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_e, IntPtr native_extras);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void OnEvent(string e, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetOnExtrasChanged_Landroid_os_Bundle_Handler();
    private static void n_OnExtrasChanged_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler")]
public virtual void OnExtrasChanged(Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_OnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_metadata);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public virtual void OnMetadataChanged(MediaMetadataCompat metadata);
    [NullableContextAttribute("1")]
private static Delegate GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_OnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public virtual void OnPlaybackStateChanged(PlaybackStateCompat state);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueChanged_Ljava_util_List_Handler();
    private static void n_OnQueueChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_queue);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler")]
public virtual void OnQueueChanged(IList`1<QueueItem> queue);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler();
    private static void n_OnQueueTitleChanged_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler")]
public virtual void OnQueueTitleChanged(ICharSequence title);
    public void OnQueueTitleChanged(string title);
    [NullableContextAttribute("1")]
private static Delegate GetOnRepeatModeChanged_IHandler();
    private static void n_OnRepeatModeChanged_I(IntPtr jnienv, IntPtr native__this, int repeatMode);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler")]
public virtual void OnRepeatModeChanged(int repeatMode);
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionDestroyedHandler();
    private static void n_OnSessionDestroyed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler")]
public virtual void OnSessionDestroyed();
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionReadyHandler();
    private static void n_OnSessionReady(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSessionReady", "()V", "GetOnSessionReadyHandler")]
public virtual void OnSessionReady();
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChanged_IHandler();
    private static void n_OnShuffleModeChanged_I(IntPtr jnienv, IntPtr native__this, int shuffleMode);
    [RegisterAttribute("onShuffleModeChanged", "(I)V", "GetOnShuffleModeChanged_IHandler")]
public virtual void OnShuffleModeChanged(int shuffleMode);
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChangedRemoved_ZHandler();
    private static void n_OnShuffleModeChangedRemoved_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("onShuffleModeChangedRemoved", "(Z)V", "GetOnShuffleModeChangedRemoved_ZHandler")]
public virtual void OnShuffleModeChangedRemoved(bool enabled);
    [NullableContextAttribute("1")]
private static Delegate GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler();
    private static void n_OnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_info);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler")]
public virtual void OnVolumeInfoChanged(ParcelableVolumeInfo info);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$Stub")]
public abstract class Android.Support.V4.Media.Session.MediaControllerCallbackStub : Binder {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_asBinder;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_onCaptioningEnabledChanged_Z;
    private static Delegate cb_onEvent_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_onExtrasChanged_Landroid_os_Bundle_;
    private static Delegate cb_onMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_;
    private static Delegate cb_onPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_;
    private static Delegate cb_onQueueChanged_Ljava_util_List_;
    private static Delegate cb_onQueueTitleChanged_Ljava_lang_CharSequence_;
    private static Delegate cb_onRepeatModeChanged_I;
    private static Delegate cb_onSessionDestroyed;
    private static Delegate cb_onSessionReady;
    private static Delegate cb_onShuffleModeChanged_I;
    private static Delegate cb_onShuffleModeChangedRemoved_Z;
    private static Delegate cb_onVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaControllerCallbackStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaControllerCallbackStub();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/media/session/IMediaControllerCallback;", "")]
public static IMediaControllerCallback AsInterface(IBinder obj);
    [NullableContextAttribute("1")]
private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    [NullableContextAttribute("1")]
private static Delegate GetOnCaptioningEnabledChanged_ZHandler();
    private static void n_OnCaptioningEnabledChanged_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler")]
public abstract virtual void OnCaptioningEnabledChanged(bool p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void OnEvent(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetOnExtrasChanged_Landroid_os_Bundle_Handler();
    private static void n_OnExtrasChanged_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler")]
public abstract virtual void OnExtrasChanged(Bundle p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_OnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public abstract virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_OnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public abstract virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueChanged_Ljava_util_List_Handler();
    private static void n_OnQueueChanged_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler")]
public abstract virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler();
    private static void n_OnQueueTitleChanged_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler")]
public abstract virtual void OnQueueTitleChanged(ICharSequence p0);
    public void OnQueueTitleChanged(string p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnRepeatModeChanged_IHandler();
    private static void n_OnRepeatModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler")]
public abstract virtual void OnRepeatModeChanged(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionDestroyedHandler();
    private static void n_OnSessionDestroyed(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler")]
public abstract virtual void OnSessionDestroyed();
    [NullableContextAttribute("1")]
private static Delegate GetOnSessionReadyHandler();
    private static void n_OnSessionReady(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onSessionReady", "()V", "GetOnSessionReadyHandler")]
public abstract virtual void OnSessionReady();
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChanged_IHandler();
    private static void n_OnShuffleModeChanged_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("onShuffleModeChanged", "(I)V", "GetOnShuffleModeChanged_IHandler")]
public abstract virtual void OnShuffleModeChanged(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnShuffleModeChangedRemoved_ZHandler();
    private static void n_OnShuffleModeChangedRemoved_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("onShuffleModeChangedRemoved", "(Z)V", "GetOnShuffleModeChangedRemoved_ZHandler")]
public abstract virtual void OnShuffleModeChangedRemoved(bool p0);
    [NullableContextAttribute("1")]
private static Delegate GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler();
    private static void n_OnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler")]
public abstract virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaControllerCallback$Stub")]
internal class Android.Support.V4.Media.Session.MediaControllerCallbackStubInvoker : MediaControllerCallbackStub {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaControllerCallbackStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MediaControllerCallbackStubInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("onCaptioningEnabledChanged", "(Z)V", "GetOnCaptioningEnabledChanged_ZHandler")]
public virtual void OnCaptioningEnabledChanged(bool p0);
    [RegisterAttribute("onEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void OnEvent(string p0, Bundle p1);
    [RegisterAttribute("onExtrasChanged", "(Landroid/os/Bundle;)V", "GetOnExtrasChanged_Landroid_os_Bundle_Handler")]
public virtual void OnExtrasChanged(Bundle p0);
    [RegisterAttribute("onMetadataChanged", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetOnMetadataChanged_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public virtual void OnMetadataChanged(MediaMetadataCompat p0);
    [RegisterAttribute("onPlaybackStateChanged", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetOnPlaybackStateChanged_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public virtual void OnPlaybackStateChanged(PlaybackStateCompat p0);
    [RegisterAttribute("onQueueChanged", "(Ljava/util/List;)V", "GetOnQueueChanged_Ljava_util_List_Handler")]
public virtual void OnQueueChanged(IList`1<QueueItem> p0);
    [RegisterAttribute("onQueueTitleChanged", "(Ljava/lang/CharSequence;)V", "GetOnQueueTitleChanged_Ljava_lang_CharSequence_Handler")]
public virtual void OnQueueTitleChanged(ICharSequence p0);
    [RegisterAttribute("onRepeatModeChanged", "(I)V", "GetOnRepeatModeChanged_IHandler")]
public virtual void OnRepeatModeChanged(int p0);
    [RegisterAttribute("onSessionDestroyed", "()V", "GetOnSessionDestroyedHandler")]
public virtual void OnSessionDestroyed();
    [RegisterAttribute("onSessionReady", "()V", "GetOnSessionReadyHandler")]
public virtual void OnSessionReady();
    [RegisterAttribute("onShuffleModeChanged", "(I)V", "GetOnShuffleModeChanged_IHandler")]
public virtual void OnShuffleModeChanged(int p0);
    [RegisterAttribute("onShuffleModeChangedRemoved", "(Z)V", "GetOnShuffleModeChangedRemoved_ZHandler")]
public virtual void OnShuffleModeChangedRemoved(bool p0);
    [RegisterAttribute("onVolumeInfoChanged", "(Landroid/support/v4/media/session/ParcelableVolumeInfo;)V", "GetOnVolumeInfoChanged_Landroid_support_v4_media_session_ParcelableVolumeInfo_Handler")]
public virtual void OnVolumeInfoChanged(ParcelableVolumeInfo p0);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/MediaControllerCompat")]
public class Android.Support.V4.Media.Session.MediaControllerCompat : Object {
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_ADD_QUEUE_ITEM")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandAddQueueItem;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_ADD_QUEUE_ITEM_AT")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandAddQueueItemAt;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_ARGUMENT_INDEX")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandArgumentIndex;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_ARGUMENT_MEDIA_DESCRIPTION")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandArgumentMediaDescription;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_GET_EXTRA_BINDER")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandGetExtraBinder;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_REMOVE_QUEUE_ITEM")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandRemoveQueueItem;
    [NullableAttribute("1")]
[RegisterAttribute("COMMAND_REMOVE_QUEUE_ITEM_AT")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string CommandRemoveQueueItemAt;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsCaptioningEnabled { get; }
    public bool IsSessionReady { get; }
    public Object MediaController { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public string QueueTitle { get; }
    public int RatingType { get; }
    public int RepeatMode { get; }
    public IVersionedParcelable Session2Token { get; }
    public PendingIntent SessionActivity { get; }
    [NullableAttribute("1")]
public Bundle SessionInfo { get; }
    public Token SessionToken { get; }
    public int ShuffleMode { get; }
    internal MediaControllerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("1")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/v4/media/session/MediaSessionCompat;)V", "")]
public MediaControllerCompat(Context context, MediaSessionCompat session);
    [NullableContextAttribute("1")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/support/v4/media/session/MediaSessionCompat$Token;)V", "")]
public MediaControllerCompat(Context context, Token sessionToken);
    private static MediaControllerCompat();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "")]
public long get_Flags();
    [RegisterAttribute("isCaptioningEnabled", "()Z", "")]
public bool get_IsCaptioningEnabled();
    [RegisterAttribute("isSessionReady", "()Z", "")]
public bool get_IsSessionReady();
    [RegisterAttribute("getMediaController", "()Ljava/lang/Object;", "")]
public Object get_MediaController();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "")]
public MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "")]
public string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "")]
public PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "")]
public IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_QueueTitleFormatted();
    public string get_QueueTitle();
    [RegisterAttribute("getRatingType", "()I", "")]
public int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "")]
public int get_RepeatMode();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getSession2Token", "()Landroidx/versionedparcelable/VersionedParcelable;", "")]
public IVersionedParcelable get_Session2Token();
    [RegisterAttribute("getSessionActivity", "()Landroid/app/PendingIntent;", "")]
public PendingIntent get_SessionActivity();
    [NullableContextAttribute("1")]
[RegisterAttribute("getSessionInfo", "()Landroid/os/Bundle;", "")]
public Bundle get_SessionInfo();
    [RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "")]
public Token get_SessionToken();
    [RegisterAttribute("getShuffleMode", "()I", "")]
public int get_ShuffleMode();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "")]
public void AddQueueItem(MediaDescriptionCompat description);
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "")]
public void AddQueueItem(MediaDescriptionCompat description, int index);
    [RegisterAttribute("adjustVolume", "(II)V", "")]
public void AdjustVolume(int direction, int flags);
    [RegisterAttribute("dispatchMediaButtonEvent", "(Landroid/view/KeyEvent;)Z", "")]
public bool DispatchMediaButtonEvent(KeyEvent keyEvent);
    [NullableContextAttribute("1")]
[RegisterAttribute("getMediaController", "(Landroid/app/Activity;)Landroid/support/v4/media/session/MediaControllerCompat;", "")]
public static MediaControllerCompat GetMediaController(Activity activity);
    [RegisterAttribute("getPlaybackInfo", "()Landroid/support/v4/media/session/MediaControllerCompat$PlaybackInfo;", "")]
public PlaybackInfo GetPlaybackInfo();
    [RegisterAttribute("getTransportControls", "()Landroid/support/v4/media/session/MediaControllerCompat$TransportControls;", "")]
public TransportControls GetTransportControls();
    [NullableContextAttribute("1")]
[RegisterAttribute("registerCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;)V", "")]
public void RegisterCallback(Callback callback);
    [NullableContextAttribute("1")]
[RegisterAttribute("registerCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;Landroid/os/Handler;)V", "")]
public void RegisterCallback(Callback callback, Handler handler);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "")]
public void RemoveQueueItem(MediaDescriptionCompat description);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("removeQueueItemAt", "(I)V", "")]
public void RemoveQueueItemAt(int index);
    [RegisterAttribute("sendCommand", "(Ljava/lang/String;Landroid/os/Bundle;Landroid/os/ResultReceiver;)V", "")]
public void SendCommand(string command, Bundle params, ResultReceiver cb);
    [NullableContextAttribute("1")]
[RegisterAttribute("setMediaController", "(Landroid/app/Activity;Landroid/support/v4/media/session/MediaControllerCompat;)V", "")]
public static void SetMediaController(Activity activity, MediaControllerCompat mediaController);
    [RegisterAttribute("setVolumeTo", "(II)V", "")]
public void SetVolumeTo(int value, int flags);
    [NullableContextAttribute("1")]
[RegisterAttribute("unregisterCallback", "(Landroid/support/v4/media/session/MediaControllerCompat$Callback;)V", "")]
public void UnregisterCallback(Callback callback);
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession")]
public abstract class Android.Support.V4.Media.Session.MediaSession : Object {
    [NullableAttribute("1")]
[RegisterAttribute("DESCRIPTOR")]
public static string Descriptor;
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession$_Parcel")]
public class Android.Support.V4.Media.Session.MediaSession_Parcel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaSession_Parcel(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaSession_Parcel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/MediaSessionCompat")]
public class Android.Support.V4.Media.Session.MediaSessionCompat : Object {
    [RegisterAttribute("ACTION_ARGUMENT_CAPTIONING_ENABLED")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentCaptioningEnabled;
    [RegisterAttribute("ACTION_ARGUMENT_EXTRAS")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentExtras;
    [RegisterAttribute("ACTION_ARGUMENT_MEDIA_ID")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentMediaId;
    [RegisterAttribute("ACTION_ARGUMENT_PLAYBACK_SPEED")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentPlaybackSpeed;
    [RegisterAttribute("ACTION_ARGUMENT_QUERY")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentQuery;
    [RegisterAttribute("ACTION_ARGUMENT_RATING")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentRating;
    [RegisterAttribute("ACTION_ARGUMENT_REPEAT_MODE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentRepeatMode;
    [RegisterAttribute("ACTION_ARGUMENT_SHUFFLE_MODE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentShuffleMode;
    [RegisterAttribute("ACTION_ARGUMENT_URI")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionArgumentUri;
    [RegisterAttribute("ACTION_FLAG_AS_INAPPROPRIATE")]
public static string ActionFlagAsInappropriate;
    [RegisterAttribute("ACTION_FOLLOW")]
public static string ActionFollow;
    [RegisterAttribute("ACTION_PLAY_FROM_URI")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionPlayFromUri;
    [RegisterAttribute("ACTION_PREPARE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionPrepare;
    [RegisterAttribute("ACTION_PREPARE_FROM_MEDIA_ID")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionPrepareFromMediaId;
    [RegisterAttribute("ACTION_PREPARE_FROM_SEARCH")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionPrepareFromSearch;
    [RegisterAttribute("ACTION_PREPARE_FROM_URI")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionPrepareFromUri;
    [RegisterAttribute("ACTION_SET_CAPTIONING_ENABLED")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionSetCaptioningEnabled;
    [RegisterAttribute("ACTION_SET_PLAYBACK_SPEED")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionSetPlaybackSpeed;
    [RegisterAttribute("ACTION_SET_RATING")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionSetRating;
    [RegisterAttribute("ACTION_SET_REPEAT_MODE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionSetRepeatMode;
    [RegisterAttribute("ACTION_SET_SHUFFLE_MODE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ActionSetShuffleMode;
    [RegisterAttribute("ACTION_SKIP_AD")]
public static string ActionSkipAd;
    [RegisterAttribute("ACTION_UNFOLLOW")]
public static string ActionUnfollow;
    [RegisterAttribute("ARGUMENT_MEDIA_ATTRIBUTE")]
public static string ArgumentMediaAttribute;
    [RegisterAttribute("ARGUMENT_MEDIA_ATTRIBUTE_VALUE")]
public static string ArgumentMediaAttributeValue;
    [RegisterAttribute("FLAG_HANDLES_MEDIA_BUTTONS")]
[ObsoleteAttribute("deprecated")]
public static int FlagHandlesMediaButtons;
    [RegisterAttribute("FLAG_HANDLES_QUEUE_COMMANDS")]
public static int FlagHandlesQueueCommands;
    [RegisterAttribute("FLAG_HANDLES_TRANSPORT_CONTROLS")]
[ObsoleteAttribute("deprecated")]
public static int FlagHandlesTransportControls;
    [RegisterAttribute("KEY_EXTRA_BINDER")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string KeyExtraBinder;
    [RegisterAttribute("KEY_SESSION2_TOKEN")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string KeySession2Token;
    [RegisterAttribute("KEY_TOKEN")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string KeyToken;
    [RegisterAttribute("MEDIA_ATTRIBUTE_ALBUM")]
public static int MediaAttributeAlbum;
    [RegisterAttribute("MEDIA_ATTRIBUTE_ARTIST")]
public static int MediaAttributeArtist;
    [RegisterAttribute("MEDIA_ATTRIBUTE_PLAYLIST")]
public static int MediaAttributePlaylist;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    [NullableAttribute("2")]
private static Delegate cb_setActive_Z;
    [NullableAttribute("2")]
private static Delegate cb_getCallingPackage;
    [NullableAttribute("2")]
private static Delegate cb_getController;
    [NullableAttribute("2")]
private static Delegate cb_getMediaSession;
    [NullableAttribute("2")]
private static Delegate cb_getRemoteControlClient;
    [NullableAttribute("2")]
private static Delegate cb_getSessionToken;
    [NullableAttribute("2")]
private static Delegate cb_addOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    [NullableAttribute("2")]
private static Delegate cb_release;
    [NullableAttribute("2")]
private static Delegate cb_removeOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_;
    [NullableAttribute("2")]
private static Delegate cb_sendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_;
    [NullableAttribute("2")]
private static Delegate cb_setCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_;
    [NullableAttribute("2")]
private static Delegate cb_setCaptioningEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_setExtras_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_setFlags_I;
    [NullableAttribute("2")]
private static Delegate cb_setMediaButtonReceiver_Landroid_app_PendingIntent_;
    [NullableAttribute("2")]
private static Delegate cb_setMetadata_Landroid_support_v4_media_MediaMetadataCompat_;
    [NullableAttribute("2")]
private static Delegate cb_setPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_;
    [NullableAttribute("2")]
private static Delegate cb_setPlaybackToLocal_I;
    [NullableAttribute("2")]
private static Delegate cb_setPlaybackToRemote_Landroidx_media_VolumeProviderCompat_;
    [NullableAttribute("2")]
private static Delegate cb_setQueue_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_setQueueTitle_Ljava_lang_CharSequence_;
    [NullableAttribute("2")]
private static Delegate cb_setRatingType_I;
    [NullableAttribute("2")]
private static Delegate cb_setRegistrationCallback_Landroid_support_v4_media_session_MediaSessionCompat_RegistrationCallback_Landroid_os_Handler_;
    [NullableAttribute("2")]
private static Delegate cb_setRepeatMode_I;
    [NullableAttribute("2")]
private static Delegate cb_setSessionActivity_Landroid_app_PendingIntent_;
    [NullableAttribute("2")]
private static Delegate cb_setShuffleMode_I;
    [NullableAttribute("2")]
private WeakReference weak_implementor_AddOnActiveChangeListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool Active { get; public set; }
    [NullableAttribute("2")]
public string CallingPackage { get; }
    [NullableAttribute("2")]
public MediaControllerCompat Controller { get; }
    public RemoteUserInfo CurrentControllerInfo { get; }
    [NullableAttribute("2")]
public Object MediaSession { get; }
    [NullableAttribute("2")]
public Object RemoteControlClient { get; }
    [NullableAttribute("2")]
public Token SessionToken { get; }
    protected MediaSessionCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;)V", "")]
public MediaSessionCompat(Context context, string tag);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/content/ComponentName;Landroid/app/PendingIntent;)V", "")]
public MediaSessionCompat(Context context, string tag, ComponentName mbrComponent, PendingIntent mbrIntent);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/content/ComponentName;Landroid/app/PendingIntent;Landroid/os/Bundle;)V", "")]
public MediaSessionCompat(Context context, string tag, ComponentName mbrComponent, PendingIntent mbrIntent, Bundle sessionInfo);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/content/Context;Ljava/lang/String;Landroid/content/ComponentName;Landroid/app/PendingIntent;Landroid/os/Bundle;Landroidx/versionedparcelable/VersionedParcelable;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public MediaSessionCompat(Context context, string tag, ComponentName mbrComponent, PendingIntent mbrIntent, Bundle sessionInfo, IVersionedParcelable session2Token);
    private static MediaSessionCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetActive_ZHandler();
    private static void n_SetActive_Z(IntPtr jnienv, IntPtr native__this, bool active);
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler")]
public virtual bool get_Active();
    [RegisterAttribute("setActive", "(Z)V", "GetSetActive_ZHandler")]
public virtual void set_Active(bool value);
    private static Delegate GetGetCallingPackageHandler();
    private static IntPtr n_GetCallingPackage(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getCallingPackage", "()Ljava/lang/String;", "GetGetCallingPackageHandler")]
public virtual string get_CallingPackage();
    private static Delegate GetGetControllerHandler();
    private static IntPtr n_GetController(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getController", "()Landroid/support/v4/media/session/MediaControllerCompat;", "GetGetControllerHandler")]
public virtual MediaControllerCompat get_Controller();
    [RegisterAttribute("getCurrentControllerInfo", "()Landroidx/media/MediaSessionManager$RemoteUserInfo;", "")]
public RemoteUserInfo get_CurrentControllerInfo();
    private static Delegate GetGetMediaSessionHandler();
    private static IntPtr n_GetMediaSession(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaSession", "()Ljava/lang/Object;", "GetGetMediaSessionHandler")]
public virtual Object get_MediaSession();
    private static Delegate GetGetRemoteControlClientHandler();
    private static IntPtr n_GetRemoteControlClient(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getRemoteControlClient", "()Ljava/lang/Object;", "GetGetRemoteControlClientHandler")]
public virtual Object get_RemoteControlClient();
    private static Delegate GetGetSessionTokenHandler();
    private static IntPtr n_GetSessionToken(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public virtual Token get_SessionToken();
    private static Delegate GetAddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler();
    private static void n_AddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("addOnActiveChangeListener", "(Landroid/support/v4/media/session/MediaSessionCompat$OnActiveChangeListener;)V", "GetAddOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler")]
public virtual void AddOnActiveChangeListener(IOnActiveChangeListener listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("ensureClassLoader", "(Landroid/os/Bundle;)V", "")]
public static void EnsureClassLoader(Bundle bundle);
    [NullableContextAttribute("2")]
[RegisterAttribute("fromMediaSession", "(Landroid/content/Context;Ljava/lang/Object;)Landroid/support/v4/media/session/MediaSessionCompat;", "")]
public static MediaSessionCompat FromMediaSession(Context context, Object mediaSession);
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("release", "()V", "GetReleaseHandler")]
public virtual void Release();
    private static Delegate GetRemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler();
    private static void n_RemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("removeOnActiveChangeListener", "(Landroid/support/v4/media/session/MediaSessionCompat$OnActiveChangeListener;)V", "GetRemoveOnActiveChangeListener_Landroid_support_v4_media_session_MediaSessionCompat_OnActiveChangeListener_Handler")]
public virtual void RemoveOnActiveChangeListener(IOnActiveChangeListener listener);
    private static Delegate GetSendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_e, IntPtr native_extras);
    [NullableContextAttribute("2")]
[RegisterAttribute("sendSessionEvent", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendSessionEvent_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void SendSessionEvent(string e, Bundle extras);
    private static Delegate GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Handler();
    private static void n_SetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCallback", "(Landroid/support/v4/media/session/MediaSessionCompat$Callback;)V", "GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Handler")]
public virtual void SetCallback(Callback callback);
    private static Delegate GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_Handler();
    private static void n_SetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback, IntPtr native_handler);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCallback", "(Landroid/support/v4/media/session/MediaSessionCompat$Callback;Landroid/os/Handler;)V", "GetSetCallback_Landroid_support_v4_media_session_MediaSessionCompat_Callback_Landroid_os_Handler_Handler")]
public virtual void SetCallback(Callback callback, Handler handler);
    private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public virtual void SetCaptioningEnabled(bool enabled);
    private static Delegate GetSetExtras_Landroid_os_Bundle_Handler();
    private static void n_SetExtras_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras);
    [NullableContextAttribute("2")]
[RegisterAttribute("setExtras", "(Landroid/os/Bundle;)V", "GetSetExtras_Landroid_os_Bundle_Handler")]
public virtual void SetExtras(Bundle extras);
    private static Delegate GetSetFlags_IHandler();
    private static void n_SetFlags_I(IntPtr jnienv, IntPtr native__this, int flags);
    [RegisterAttribute("setFlags", "(I)V", "GetSetFlags_IHandler")]
public virtual void SetFlags(int flags);
    private static Delegate GetSetMediaButtonReceiver_Landroid_app_PendingIntent_Handler();
    private static void n_SetMediaButtonReceiver_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_mbr);
    [NullableContextAttribute("2")]
[RegisterAttribute("setMediaButtonReceiver", "(Landroid/app/PendingIntent;)V", "GetSetMediaButtonReceiver_Landroid_app_PendingIntent_Handler")]
public virtual void SetMediaButtonReceiver(PendingIntent mbr);
    private static Delegate GetSetMetadata_Landroid_support_v4_media_MediaMetadataCompat_Handler();
    private static void n_SetMetadata_Landroid_support_v4_media_MediaMetadataCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_metadata);
    [NullableContextAttribute("2")]
[RegisterAttribute("setMetadata", "(Landroid/support/v4/media/MediaMetadataCompat;)V", "GetSetMetadata_Landroid_support_v4_media_MediaMetadataCompat_Handler")]
public virtual void SetMetadata(MediaMetadataCompat metadata);
    private static Delegate GetSetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_Handler();
    private static void n_SetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [NullableContextAttribute("2")]
[RegisterAttribute("setPlaybackState", "(Landroid/support/v4/media/session/PlaybackStateCompat;)V", "GetSetPlaybackState_Landroid_support_v4_media_session_PlaybackStateCompat_Handler")]
public virtual void SetPlaybackState(PlaybackStateCompat state);
    private static Delegate GetSetPlaybackToLocal_IHandler();
    private static void n_SetPlaybackToLocal_I(IntPtr jnienv, IntPtr native__this, int stream);
    [RegisterAttribute("setPlaybackToLocal", "(I)V", "GetSetPlaybackToLocal_IHandler")]
public virtual void SetPlaybackToLocal(int stream);
    private static Delegate GetSetPlaybackToRemote_Landroidx_media_VolumeProviderCompat_Handler();
    private static void n_SetPlaybackToRemote_Landroidx_media_VolumeProviderCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_volumeProvider);
    [NullableContextAttribute("2")]
[RegisterAttribute("setPlaybackToRemote", "(Landroidx/media/VolumeProviderCompat;)V", "GetSetPlaybackToRemote_Landroidx_media_VolumeProviderCompat_Handler")]
public virtual void SetPlaybackToRemote(VolumeProviderCompat volumeProvider);
    private static Delegate GetSetQueue_Ljava_util_List_Handler();
    private static void n_SetQueue_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_queue);
    [RegisterAttribute("setQueue", "(Ljava/util/List;)V", "GetSetQueue_Ljava_util_List_Handler")]
public virtual void SetQueue(IList`1<QueueItem> queue);
    private static Delegate GetSetQueueTitle_Ljava_lang_CharSequence_Handler();
    private static void n_SetQueueTitle_Ljava_lang_CharSequence_(IntPtr jnienv, IntPtr native__this, IntPtr native_title);
    [NullableContextAttribute("2")]
[RegisterAttribute("setQueueTitle", "(Ljava/lang/CharSequence;)V", "GetSetQueueTitle_Ljava_lang_CharSequence_Handler")]
public virtual void SetQueueTitle(ICharSequence title);
    [NullableContextAttribute("2")]
public void SetQueueTitle(string title);
    private static Delegate GetSetRatingType_IHandler();
    private static void n_SetRatingType_I(IntPtr jnienv, IntPtr native__this, int type);
    [RegisterAttribute("setRatingType", "(I)V", "GetSetRatingType_IHandler")]
public virtual void SetRatingType(int type);
    private static Delegate GetSetRegistrationCallback_Landroid_support_v4_media_session_MediaSessionCompat_RegistrationCallback_Landroid_os_Handler_Handler();
    private static void n_SetRegistrationCallback_Landroid_support_v4_media_session_MediaSessionCompat_RegistrationCallback_Landroid_os_Handler_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback, IntPtr native_handler);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setRegistrationCallback", "(Landroid/support/v4/media/session/MediaSessionCompat$RegistrationCallback;Landroid/os/Handler;)V", "GetSetRegistrationCallback_Landroid_support_v4_media_session_MediaSessionCompat_RegistrationCallback_Landroid_os_Handler_Handler")]
public virtual void SetRegistrationCallback(IRegistrationCallback callback, Handler handler);
    private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int repeatMode);
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void SetRepeatMode(int repeatMode);
    private static Delegate GetSetSessionActivity_Landroid_app_PendingIntent_Handler();
    private static void n_SetSessionActivity_Landroid_app_PendingIntent_(IntPtr jnienv, IntPtr native__this, IntPtr native_pi);
    [NullableContextAttribute("2")]
[RegisterAttribute("setSessionActivity", "(Landroid/app/PendingIntent;)V", "GetSetSessionActivity_Landroid_app_PendingIntent_Handler")]
public virtual void SetSessionActivity(PendingIntent pi);
    private static Delegate GetSetShuffleMode_IHandler();
    private static void n_SetShuffleMode_I(IntPtr jnienv, IntPtr native__this, int shuffleMode);
    [RegisterAttribute("setShuffleMode", "(I)V", "GetSetShuffleMode_IHandler")]
public virtual void SetShuffleMode(int shuffleMode);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("unparcelWithClassLoader", "(Landroid/os/Bundle;)Landroid/os/Bundle;", "")]
public static Bundle UnparcelWithClassLoader(Bundle bundle);
    public void add_ActiveChange(EventHandler value);
    public void remove_ActiveChange(EventHandler value);
    private IOnActiveChangeListenerImplementor __CreateIOnActiveChangeListenerImplementor();
}
[RegisterAttribute("android/support/v4/media/session/IMediaSession")]
[ObsoleteAttribute("Use the 'MediaSession' type. This type will be removed in a future release.", "True")]
public abstract class Android.Support.V4.Media.Session.MediaSessionConsts : MediaSession {
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession$Default")]
public class Android.Support.V4.Media.Session.MediaSessionDefault : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_isCaptioningEnabled;
    private static Delegate cb_setCaptioningEnabled_Z;
    private static Delegate cb_getExtras;
    private static Delegate cb_getFlags;
    private static Delegate cb_isTransportControlEnabled;
    private static Delegate cb_getLaunchPendingIntent;
    private static Delegate cb_getMetadata;
    private static Delegate cb_getPackageName;
    private static Delegate cb_getPlaybackState;
    private static Delegate cb_getQueue;
    private static Delegate cb_getQueueTitle;
    private static Delegate cb_getRatingType;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private static Delegate cb_getSessionInfo;
    private static Delegate cb_getShuffleMode;
    private static Delegate cb_setShuffleMode_I;
    private static Delegate cb_isShuffleModeEnabledRemoved;
    private static Delegate cb_setShuffleModeEnabledRemoved_Z;
    private static Delegate cb_getTag;
    private static Delegate cb_getVolumeAttributes;
    private static Delegate cb_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static Delegate cb_adjustVolume_IILjava_lang_String_;
    private static Delegate cb_asBinder;
    private static Delegate cb_fastForward;
    private static Delegate cb_next;
    private static Delegate cb_pause;
    private static Delegate cb_play;
    private static Delegate cb_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_prepare;
    private static Delegate cb_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_previous;
    private static Delegate cb_rate_Landroid_support_v4_media_RatingCompat_;
    private static Delegate cb_rateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_;
    private static Delegate cb_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_removeQueueItemAt_I;
    private static Delegate cb_rewind;
    private static Delegate cb_seekTo_J;
    private static Delegate cb_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_sendMediaButton_Landroid_view_KeyEvent_;
    private static Delegate cb_setPlaybackSpeed_F;
    private static Delegate cb_setVolumeTo_IILjava_lang_String_;
    private static Delegate cb_skipToQueueItem_J;
    private static Delegate cb_stop;
    private static Delegate cb_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public string QueueTitle { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public Bundle SessionInfo { get; }
    public int ShuffleMode { get; public set; }
    public bool ShuffleModeEnabledRemoved { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    protected MediaSessionDefault(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaSessionDefault();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetIsCaptioningEnabledHandler();
    private static bool n_IsCaptioningEnabled(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enabled);
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public virtual void set_CaptioningEnabled(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    [NullableContextAttribute("1")]
private static Delegate GetGetFlagsHandler();
    private static long n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public virtual long get_Flags();
    [NullableContextAttribute("1")]
private static Delegate GetIsTransportControlEnabledHandler();
    private static bool n_IsTransportControlEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler")]
public virtual bool get_IsTransportControlEnabled();
    [NullableContextAttribute("1")]
private static Delegate GetGetLaunchPendingIntentHandler();
    private static IntPtr n_GetLaunchPendingIntent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler")]
public virtual PendingIntent get_LaunchPendingIntent();
    [NullableContextAttribute("1")]
private static Delegate GetGetMetadataHandler();
    private static IntPtr n_GetMetadata(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public virtual MediaMetadataCompat get_Metadata();
    [NullableContextAttribute("1")]
private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public virtual string get_PackageName();
    [NullableContextAttribute("1")]
private static Delegate GetGetPlaybackStateHandler();
    private static IntPtr n_GetPlaybackState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public virtual PlaybackStateCompat get_PlaybackState();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueHandler();
    private static IntPtr n_GetQueue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public virtual IList`1<QueueItem> get_Queue();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueTitleHandler();
    private static IntPtr n_GetQueueTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public virtual ICharSequence get_QueueTitleFormatted();
    public string get_QueueTitle();
    [NullableContextAttribute("1")]
private static Delegate GetGetRatingTypeHandler();
    private static int n_GetRatingType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public virtual int get_RatingType();
    [NullableContextAttribute("1")]
private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int repeatMode);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void set_RepeatMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSessionInfoHandler();
    private static IntPtr n_GetSessionInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSessionInfo", "()Landroid/os/Bundle;", "GetGetSessionInfoHandler")]
public virtual Bundle get_SessionInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetShuffleModeHandler();
    private static int n_GetShuffleMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleMode_IHandler();
    private static void n_SetShuffleMode_I(IntPtr jnienv, IntPtr native__this, int shuffleMode);
    [RegisterAttribute("getShuffleMode", "()I", "GetGetShuffleModeHandler")]
public virtual int get_ShuffleMode();
    [RegisterAttribute("setShuffleMode", "(I)V", "GetSetShuffleMode_IHandler")]
public virtual void set_ShuffleMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsShuffleModeEnabledRemovedHandler();
    private static bool n_IsShuffleModeEnabledRemoved(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleModeEnabledRemoved_ZHandler();
    private static void n_SetShuffleModeEnabledRemoved_Z(IntPtr jnienv, IntPtr native__this, bool shuffleMode);
    [RegisterAttribute("isShuffleModeEnabledRemoved", "()Z", "GetIsShuffleModeEnabledRemovedHandler")]
public virtual bool get_ShuffleModeEnabledRemoved();
    [RegisterAttribute("setShuffleModeEnabledRemoved", "(Z)V", "GetSetShuffleModeEnabledRemoved_ZHandler")]
public virtual void set_ShuffleModeEnabledRemoved(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler")]
public virtual string get_Tag();
    [NullableContextAttribute("1")]
private static Delegate GetGetVolumeAttributesHandler();
    private static IntPtr n_GetVolumeAttributes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler")]
public virtual ParcelableVolumeInfo get_VolumeAttributes();
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_AddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_description);
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void AddQueueItem(MediaDescriptionCompat description);
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler();
    private static void n_AddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_description, int index);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler")]
public virtual void AddQueueItemAt(MediaDescriptionCompat description, int index);
    [NullableContextAttribute("1")]
private static Delegate GetAdjustVolume_IILjava_lang_String_Handler();
    private static void n_AdjustVolume_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int direction, int flags, IntPtr native_packageName);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler")]
public virtual void AdjustVolume(int direction, int flags, string packageName);
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [NullableContextAttribute("1")]
private static Delegate GetFastForwardHandler();
    private static void n_FastForward(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler")]
public virtual void FastForward();
    [NullableContextAttribute("1")]
private static Delegate GetNextHandler();
    private static void n_Next(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("next", "()V", "GetNextHandler")]
public virtual void Next();
    [NullableContextAttribute("1")]
private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public virtual void Pause();
    [NullableContextAttribute("1")]
private static Delegate GetPlayHandler();
    private static void n_Play(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("play", "()V", "GetPlayHandler")]
public virtual void Play();
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_extras);
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromMediaId(string uri, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native__string, IntPtr native_extras);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromSearch(string string, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_extras);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PlayFromUri(Uri uri, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareHandler();
    private static void n_Prepare(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler")]
public virtual void Prepare();
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_extras);
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromMediaId(string uri, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native__string, IntPtr native_extras);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromSearch(string string, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_uri, IntPtr native_extras);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromUri(Uri uri, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetPreviousHandler();
    private static void n_Previous(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler")]
public virtual void Previous();
    [NullableContextAttribute("1")]
private static Delegate GetRate_Landroid_support_v4_media_RatingCompat_Handler();
    private static void n_Rate_Landroid_support_v4_media_RatingCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_rating);
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler")]
public virtual void Rate(RatingCompat rating);
    [NullableContextAttribute("1")]
private static Delegate GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler();
    private static void n_RateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_rating, IntPtr native_extras);
    [RegisterAttribute("rateWithExtras", "(Landroid/support/v4/media/RatingCompat;Landroid/os/Bundle;)V", "GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler")]
public virtual void RateWithExtras(RatingCompat rating, Bundle extras);
    [NullableContextAttribute("1")]
private static Delegate GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_RegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void RegisterCallbackListener(IMediaControllerCallback cb);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_RemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_description);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void RemoveQueueItem(MediaDescriptionCompat description);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItemAt_IHandler();
    private static void n_RemoveQueueItemAt_I(IntPtr jnienv, IntPtr native__this, int index);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler")]
public virtual void RemoveQueueItemAt(int index);
    [NullableContextAttribute("1")]
private static Delegate GetRewindHandler();
    private static void n_Rewind(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler")]
public virtual void Rewind();
    [NullableContextAttribute("1")]
private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long pos);
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public virtual void SeekTo(long pos);
    [NullableContextAttribute("1")]
private static Delegate GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendCustomAction_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_action, IntPtr native_args);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void SendCustomAction(string action, Bundle args);
    [NullableContextAttribute("1")]
private static Delegate GetSendMediaButton_Landroid_view_KeyEvent_Handler();
    private static bool n_SendMediaButton_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_mediaButton);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler")]
public virtual bool SendMediaButton(KeyEvent mediaButton);
    [NullableContextAttribute("1")]
private static Delegate GetSetPlaybackSpeed_FHandler();
    private static void n_SetPlaybackSpeed_F(IntPtr jnienv, IntPtr native__this, float speed);
    [RegisterAttribute("setPlaybackSpeed", "(F)V", "GetSetPlaybackSpeed_FHandler")]
public virtual void SetPlaybackSpeed(float speed);
    [NullableContextAttribute("1")]
private static Delegate GetSetVolumeTo_IILjava_lang_String_Handler();
    private static void n_SetVolumeTo_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int value, int flags, IntPtr native_packageName);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler")]
public virtual void SetVolumeTo(int value, int flags, string packageName);
    [NullableContextAttribute("1")]
private static Delegate GetSkipToQueueItem_JHandler();
    private static void n_SkipToQueueItem_J(IntPtr jnienv, IntPtr native__this, long id);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler")]
public virtual void SkipToQueueItem(long id);
    [NullableContextAttribute("1")]
private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
    [NullableContextAttribute("1")]
private static Delegate GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_UnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_cb);
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void UnregisterCallbackListener(IMediaControllerCallback cb);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession$Stub")]
public abstract class Android.Support.V4.Media.Session.MediaSessionStub : Binder {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_asBinder;
    private static Delegate cb_onTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I;
    private static Delegate cb_addQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_addQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I;
    private static Delegate cb_adjustVolume_IILjava_lang_String_;
    private static Delegate cb_fastForward;
    private static Delegate cb_next;
    private static Delegate cb_pause;
    private static Delegate cb_play;
    private static Delegate cb_playFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_playFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_prepare;
    private static Delegate cb_prepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_prepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_;
    private static Delegate cb_previous;
    private static Delegate cb_rate_Landroid_support_v4_media_RatingCompat_;
    private static Delegate cb_rateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_;
    private static Delegate cb_registerCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_removeQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_;
    private static Delegate cb_removeQueueItemAt_I;
    private static Delegate cb_rewind;
    private static Delegate cb_seekTo_J;
    private static Delegate cb_sendCustomAction_Ljava_lang_String_Landroid_os_Bundle_;
    private static Delegate cb_sendMediaButton_Landroid_view_KeyEvent_;
    private static Delegate cb_setPlaybackSpeed_F;
    private static Delegate cb_setVolumeTo_IILjava_lang_String_;
    private static Delegate cb_skipToQueueItem_J;
    private static Delegate cb_stop;
    private static Delegate cb_unregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_;
    private static Delegate cb_isCaptioningEnabled;
    private static Delegate cb_setCaptioningEnabled_Z;
    private static Delegate cb_getExtras;
    private static Delegate cb_getFlags;
    private static Delegate cb_isTransportControlEnabled;
    private static Delegate cb_getLaunchPendingIntent;
    private static Delegate cb_getMetadata;
    private static Delegate cb_getPackageName;
    private static Delegate cb_getPlaybackState;
    private static Delegate cb_getQueue;
    private static Delegate cb_getQueueTitle;
    private static Delegate cb_getRatingType;
    private static Delegate cb_getRepeatMode;
    private static Delegate cb_setRepeatMode_I;
    private static Delegate cb_getSessionInfo;
    private static Delegate cb_getShuffleMode;
    private static Delegate cb_setShuffleMode_I;
    private static Delegate cb_isShuffleModeEnabledRemoved;
    private static Delegate cb_setShuffleModeEnabledRemoved_Z;
    private static Delegate cb_getTag;
    private static Delegate cb_getVolumeAttributes;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public string QueueTitle { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public Bundle SessionInfo { get; }
    public int ShuffleMode { get; public set; }
    public bool ShuffleModeEnabledRemoved { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    protected MediaSessionStub(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaSessionStub();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetAsBinderHandler();
    private static IntPtr n_AsBinder(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("asBinder", "()Landroid/os/IBinder;", "GetAsBinderHandler")]
public virtual IBinder AsBinder();
    [RegisterAttribute("asInterface", "(Landroid/os/IBinder;)Landroid/support/v4/media/session/IMediaSession;", "")]
public static IMediaSession AsInterface(IBinder obj);
    [NullableContextAttribute("1")]
private static Delegate GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler();
    private static bool n_OnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, int code, IntPtr native_data, IntPtr native_reply, int flags);
    [RegisterAttribute("onTransact", "(ILandroid/os/Parcel;Landroid/os/Parcel;I)Z", "GetOnTransact_ILandroid_os_Parcel_Landroid_os_Parcel_IHandler")]
public virtual bool OnTransact(int code, Parcel data, Parcel reply, int flags);
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_AddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public abstract virtual void AddQueueItem(MediaDescriptionCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler();
    private static void n_AddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_I(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, int p1);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler")]
public abstract virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [NullableContextAttribute("1")]
private static Delegate GetAdjustVolume_IILjava_lang_String_Handler();
    private static void n_AdjustVolume_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler")]
public abstract virtual void AdjustVolume(int p0, int p1, string p2);
    [NullableContextAttribute("1")]
private static Delegate GetFastForwardHandler();
    private static void n_FastForward(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler")]
public abstract virtual void FastForward();
    [NullableContextAttribute("1")]
private static Delegate GetNextHandler();
    private static void n_Next(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("next", "()V", "GetNextHandler")]
public abstract virtual void Next();
    [NullableContextAttribute("1")]
private static Delegate GetPauseHandler();
    private static void n_Pause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public abstract virtual void Pause();
    [NullableContextAttribute("1")]
private static Delegate GetPlayHandler();
    private static void n_Play(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("play", "()V", "GetPlayHandler")]
public abstract virtual void Play();
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromMediaId(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromSearch(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public abstract virtual void PlayFromUri(Uri p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareHandler();
    private static void n_Prepare(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler")]
public abstract virtual void Prepare();
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromMediaId(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromSearch(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler();
    private static void n_PrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public abstract virtual void PrepareFromUri(Uri p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetPreviousHandler();
    private static void n_Previous(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler")]
public abstract virtual void Previous();
    [NullableContextAttribute("1")]
private static Delegate GetRate_Landroid_support_v4_media_RatingCompat_Handler();
    private static void n_Rate_Landroid_support_v4_media_RatingCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler")]
public abstract virtual void Rate(RatingCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler();
    private static void n_RateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("rateWithExtras", "(Landroid/support/v4/media/RatingCompat;Landroid/os/Bundle;)V", "GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler")]
public abstract virtual void RateWithExtras(RatingCompat p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_RegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public abstract virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler();
    private static void n_RemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public abstract virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [NullableContextAttribute("1")]
private static Delegate GetRemoveQueueItemAt_IHandler();
    private static void n_RemoveQueueItemAt_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler")]
public abstract virtual void RemoveQueueItemAt(int p0);
    [NullableContextAttribute("1")]
private static Delegate GetRewindHandler();
    private static void n_Rewind(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler")]
public abstract virtual void Rewind();
    [NullableContextAttribute("1")]
private static Delegate GetSeekTo_JHandler();
    private static void n_SeekTo_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public abstract virtual void SeekTo(long p0);
    [NullableContextAttribute("1")]
private static Delegate GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_SendCustomAction_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public abstract virtual void SendCustomAction(string p0, Bundle p1);
    [NullableContextAttribute("1")]
private static Delegate GetSendMediaButton_Landroid_view_KeyEvent_Handler();
    private static bool n_SendMediaButton_Landroid_view_KeyEvent_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler")]
public abstract virtual bool SendMediaButton(KeyEvent p0);
    [NullableContextAttribute("1")]
private static Delegate GetSetPlaybackSpeed_FHandler();
    private static void n_SetPlaybackSpeed_F(IntPtr jnienv, IntPtr native__this, float p0);
    [RegisterAttribute("setPlaybackSpeed", "(F)V", "GetSetPlaybackSpeed_FHandler")]
public abstract virtual void SetPlaybackSpeed(float p0);
    [NullableContextAttribute("1")]
private static Delegate GetSetVolumeTo_IILjava_lang_String_Handler();
    private static void n_SetVolumeTo_IILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int p0, int p1, IntPtr native_p2);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler")]
public abstract virtual void SetVolumeTo(int p0, int p1, string p2);
    [NullableContextAttribute("1")]
private static Delegate GetSkipToQueueItem_JHandler();
    private static void n_SkipToQueueItem_J(IntPtr jnienv, IntPtr native__this, long p0);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler")]
public abstract virtual void SkipToQueueItem(long p0);
    [NullableContextAttribute("1")]
private static Delegate GetStopHandler();
    private static void n_Stop(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public abstract virtual void Stop();
    [NullableContextAttribute("1")]
private static Delegate GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler();
    private static void n_UnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public abstract virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
    [NullableContextAttribute("1")]
private static Delegate GetIsCaptioningEnabledHandler();
    private static bool n_IsCaptioningEnabled(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetCaptioningEnabled_ZHandler();
    private static void n_SetCaptioningEnabled_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public abstract virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public abstract virtual void set_CaptioningEnabled(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public abstract virtual Bundle get_Extras();
    [NullableContextAttribute("1")]
private static Delegate GetGetFlagsHandler();
    private static long n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public abstract virtual long get_Flags();
    [NullableContextAttribute("1")]
private static Delegate GetIsTransportControlEnabledHandler();
    private static bool n_IsTransportControlEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler")]
public abstract virtual bool get_IsTransportControlEnabled();
    [NullableContextAttribute("1")]
private static Delegate GetGetLaunchPendingIntentHandler();
    private static IntPtr n_GetLaunchPendingIntent(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler")]
public abstract virtual PendingIntent get_LaunchPendingIntent();
    [NullableContextAttribute("1")]
private static Delegate GetGetMetadataHandler();
    private static IntPtr n_GetMetadata(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public abstract virtual MediaMetadataCompat get_Metadata();
    [NullableContextAttribute("1")]
private static Delegate GetGetPackageNameHandler();
    private static IntPtr n_GetPackageName(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public abstract virtual string get_PackageName();
    [NullableContextAttribute("1")]
private static Delegate GetGetPlaybackStateHandler();
    private static IntPtr n_GetPlaybackState(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public abstract virtual PlaybackStateCompat get_PlaybackState();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueHandler();
    private static IntPtr n_GetQueue(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public abstract virtual IList`1<QueueItem> get_Queue();
    [NullableContextAttribute("1")]
private static Delegate GetGetQueueTitleHandler();
    private static IntPtr n_GetQueueTitle(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public abstract virtual ICharSequence get_QueueTitleFormatted();
    public string get_QueueTitle();
    [NullableContextAttribute("1")]
private static Delegate GetGetRatingTypeHandler();
    private static int n_GetRatingType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public abstract virtual int get_RatingType();
    [NullableContextAttribute("1")]
private static Delegate GetGetRepeatModeHandler();
    private static int n_GetRepeatMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetRepeatMode_IHandler();
    private static void n_SetRepeatMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public abstract virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public abstract virtual void set_RepeatMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetGetSessionInfoHandler();
    private static IntPtr n_GetSessionInfo(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getSessionInfo", "()Landroid/os/Bundle;", "GetGetSessionInfoHandler")]
public abstract virtual Bundle get_SessionInfo();
    [NullableContextAttribute("1")]
private static Delegate GetGetShuffleModeHandler();
    private static int n_GetShuffleMode(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleMode_IHandler();
    private static void n_SetShuffleMode_I(IntPtr jnienv, IntPtr native__this, int p0);
    [RegisterAttribute("getShuffleMode", "()I", "GetGetShuffleModeHandler")]
public abstract virtual int get_ShuffleMode();
    [RegisterAttribute("setShuffleMode", "(I)V", "GetSetShuffleMode_IHandler")]
public abstract virtual void set_ShuffleMode(int value);
    [NullableContextAttribute("1")]
private static Delegate GetIsShuffleModeEnabledRemovedHandler();
    private static bool n_IsShuffleModeEnabledRemoved(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("1")]
private static Delegate GetSetShuffleModeEnabledRemoved_ZHandler();
    private static void n_SetShuffleModeEnabledRemoved_Z(IntPtr jnienv, IntPtr native__this, bool p0);
    [RegisterAttribute("isShuffleModeEnabledRemoved", "()Z", "GetIsShuffleModeEnabledRemovedHandler")]
public abstract virtual bool get_ShuffleModeEnabledRemoved();
    [RegisterAttribute("setShuffleModeEnabledRemoved", "(Z)V", "GetSetShuffleModeEnabledRemoved_ZHandler")]
public abstract virtual void set_ShuffleModeEnabledRemoved(bool value);
    [NullableContextAttribute("1")]
private static Delegate GetGetTagHandler();
    private static IntPtr n_GetTag(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler")]
public abstract virtual string get_Tag();
    [NullableContextAttribute("1")]
private static Delegate GetGetVolumeAttributesHandler();
    private static IntPtr n_GetVolumeAttributes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler")]
public abstract virtual ParcelableVolumeInfo get_VolumeAttributes();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/IMediaSession$Stub")]
internal class Android.Support.V4.Media.Session.MediaSessionStubInvoker : MediaSessionStub {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool CaptioningEnabled { get; public set; }
    public Bundle Extras { get; }
    public long Flags { get; }
    public bool IsTransportControlEnabled { get; }
    public PendingIntent LaunchPendingIntent { get; }
    public MediaMetadataCompat Metadata { get; }
    public string PackageName { get; }
    public PlaybackStateCompat PlaybackState { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<QueueItem> Queue { get; }
    public ICharSequence QueueTitleFormatted { get; }
    public int RatingType { get; }
    public int RepeatMode { get; public set; }
    public Bundle SessionInfo { get; }
    public int ShuffleMode { get; public set; }
    public bool ShuffleModeEnabledRemoved { get; public set; }
    public string Tag { get; }
    public ParcelableVolumeInfo VolumeAttributes { get; }
    public MediaSessionStubInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MediaSessionStubInvoker();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("isCaptioningEnabled", "()Z", "GetIsCaptioningEnabledHandler")]
public virtual bool get_CaptioningEnabled();
    [RegisterAttribute("setCaptioningEnabled", "(Z)V", "GetSetCaptioningEnabled_ZHandler")]
public virtual void set_CaptioningEnabled(bool value);
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    [RegisterAttribute("getFlags", "()J", "GetGetFlagsHandler")]
public virtual long get_Flags();
    [RegisterAttribute("isTransportControlEnabled", "()Z", "GetIsTransportControlEnabledHandler")]
public virtual bool get_IsTransportControlEnabled();
    [RegisterAttribute("getLaunchPendingIntent", "()Landroid/app/PendingIntent;", "GetGetLaunchPendingIntentHandler")]
public virtual PendingIntent get_LaunchPendingIntent();
    [RegisterAttribute("getMetadata", "()Landroid/support/v4/media/MediaMetadataCompat;", "GetGetMetadataHandler")]
public virtual MediaMetadataCompat get_Metadata();
    [RegisterAttribute("getPackageName", "()Ljava/lang/String;", "GetGetPackageNameHandler")]
public virtual string get_PackageName();
    [RegisterAttribute("getPlaybackState", "()Landroid/support/v4/media/session/PlaybackStateCompat;", "GetGetPlaybackStateHandler")]
public virtual PlaybackStateCompat get_PlaybackState();
    [RegisterAttribute("getQueue", "()Ljava/util/List;", "GetGetQueueHandler")]
public virtual IList`1<QueueItem> get_Queue();
    [RegisterAttribute("getQueueTitle", "()Ljava/lang/CharSequence;", "GetGetQueueTitleHandler")]
public virtual ICharSequence get_QueueTitleFormatted();
    [RegisterAttribute("getRatingType", "()I", "GetGetRatingTypeHandler")]
public virtual int get_RatingType();
    [RegisterAttribute("getRepeatMode", "()I", "GetGetRepeatModeHandler")]
public virtual int get_RepeatMode();
    [RegisterAttribute("setRepeatMode", "(I)V", "GetSetRepeatMode_IHandler")]
public virtual void set_RepeatMode(int value);
    [RegisterAttribute("getSessionInfo", "()Landroid/os/Bundle;", "GetGetSessionInfoHandler")]
public virtual Bundle get_SessionInfo();
    [RegisterAttribute("getShuffleMode", "()I", "GetGetShuffleModeHandler")]
public virtual int get_ShuffleMode();
    [RegisterAttribute("setShuffleMode", "(I)V", "GetSetShuffleMode_IHandler")]
public virtual void set_ShuffleMode(int value);
    [RegisterAttribute("isShuffleModeEnabledRemoved", "()Z", "GetIsShuffleModeEnabledRemovedHandler")]
public virtual bool get_ShuffleModeEnabledRemoved();
    [RegisterAttribute("setShuffleModeEnabledRemoved", "(Z)V", "GetSetShuffleModeEnabledRemoved_ZHandler")]
public virtual void set_ShuffleModeEnabledRemoved(bool value);
    [RegisterAttribute("getTag", "()Ljava/lang/String;", "GetGetTagHandler")]
public virtual string get_Tag();
    [RegisterAttribute("getVolumeAttributes", "()Landroid/support/v4/media/session/ParcelableVolumeInfo;", "GetGetVolumeAttributesHandler")]
public virtual ParcelableVolumeInfo get_VolumeAttributes();
    [RegisterAttribute("addQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetAddQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void AddQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("addQueueItemAt", "(Landroid/support/v4/media/MediaDescriptionCompat;I)V", "GetAddQueueItemAt_Landroid_support_v4_media_MediaDescriptionCompat_IHandler")]
public virtual void AddQueueItemAt(MediaDescriptionCompat p0, int p1);
    [RegisterAttribute("adjustVolume", "(IILjava/lang/String;)V", "GetAdjustVolume_IILjava_lang_String_Handler")]
public virtual void AdjustVolume(int p0, int p1, string p2);
    [RegisterAttribute("fastForward", "()V", "GetFastForwardHandler")]
public virtual void FastForward();
    [RegisterAttribute("next", "()V", "GetNextHandler")]
public virtual void Next();
    [RegisterAttribute("pause", "()V", "GetPauseHandler")]
public virtual void Pause();
    [RegisterAttribute("play", "()V", "GetPlayHandler")]
public virtual void Play();
    [RegisterAttribute("playFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("playFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPlayFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PlayFromSearch(string p0, Bundle p1);
    [RegisterAttribute("playFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPlayFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PlayFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("prepare", "()V", "GetPrepareHandler")]
public virtual void Prepare();
    [RegisterAttribute("prepareFromMediaId", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromMediaId_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromMediaId(string p0, Bundle p1);
    [RegisterAttribute("prepareFromSearch", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetPrepareFromSearch_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromSearch(string p0, Bundle p1);
    [RegisterAttribute("prepareFromUri", "(Landroid/net/Uri;Landroid/os/Bundle;)V", "GetPrepareFromUri_Landroid_net_Uri_Landroid_os_Bundle_Handler")]
public virtual void PrepareFromUri(Uri p0, Bundle p1);
    [RegisterAttribute("previous", "()V", "GetPreviousHandler")]
public virtual void Previous();
    [RegisterAttribute("rate", "(Landroid/support/v4/media/RatingCompat;)V", "GetRate_Landroid_support_v4_media_RatingCompat_Handler")]
public virtual void Rate(RatingCompat p0);
    [RegisterAttribute("rateWithExtras", "(Landroid/support/v4/media/RatingCompat;Landroid/os/Bundle;)V", "GetRateWithExtras_Landroid_support_v4_media_RatingCompat_Landroid_os_Bundle_Handler")]
public virtual void RateWithExtras(RatingCompat p0, Bundle p1);
    [RegisterAttribute("registerCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetRegisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void RegisterCallbackListener(IMediaControllerCallback p0);
    [RegisterAttribute("removeQueueItem", "(Landroid/support/v4/media/MediaDescriptionCompat;)V", "GetRemoveQueueItem_Landroid_support_v4_media_MediaDescriptionCompat_Handler")]
public virtual void RemoveQueueItem(MediaDescriptionCompat p0);
    [RegisterAttribute("removeQueueItemAt", "(I)V", "GetRemoveQueueItemAt_IHandler")]
public virtual void RemoveQueueItemAt(int p0);
    [RegisterAttribute("rewind", "()V", "GetRewindHandler")]
public virtual void Rewind();
    [RegisterAttribute("seekTo", "(J)V", "GetSeekTo_JHandler")]
public virtual void SeekTo(long p0);
    [RegisterAttribute("sendCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetSendCustomAction_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void SendCustomAction(string p0, Bundle p1);
    [RegisterAttribute("sendMediaButton", "(Landroid/view/KeyEvent;)Z", "GetSendMediaButton_Landroid_view_KeyEvent_Handler")]
public virtual bool SendMediaButton(KeyEvent p0);
    [RegisterAttribute("setPlaybackSpeed", "(F)V", "GetSetPlaybackSpeed_FHandler")]
public virtual void SetPlaybackSpeed(float p0);
    [RegisterAttribute("setVolumeTo", "(IILjava/lang/String;)V", "GetSetVolumeTo_IILjava_lang_String_Handler")]
public virtual void SetVolumeTo(int p0, int p1, string p2);
    [RegisterAttribute("skipToQueueItem", "(J)V", "GetSkipToQueueItem_JHandler")]
public virtual void SkipToQueueItem(long p0);
    [RegisterAttribute("stop", "()V", "GetStopHandler")]
public virtual void Stop();
    [RegisterAttribute("unregisterCallbackListener", "(Landroid/support/v4/media/session/IMediaControllerCallback;)V", "GetUnregisterCallbackListener_Landroid_support_v4_media_session_IMediaControllerCallback_Handler")]
public virtual void UnregisterCallbackListener(IMediaControllerCallback p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/ParcelableVolumeInfo")]
public class Android.Support.V4.Media.Session.ParcelableVolumeInfo : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_describeContents;
    [NullableAttribute("2")]
private static Delegate cb_writeToParcel_Landroid_os_Parcel_I;
    [RegisterAttribute("audioStream")]
public int AudioStream { get; public set; }
    [RegisterAttribute("controlType")]
public int ControlType { get; public set; }
    [NullableAttribute("2")]
[RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    [RegisterAttribute("currentVolume")]
public int CurrentVolume { get; public set; }
    [RegisterAttribute("maxVolume")]
public int MaxVolume { get; public set; }
    [RegisterAttribute("volumeType")]
public int VolumeType { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected ParcelableVolumeInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Landroid/os/Parcel;)V", "")]
public ParcelableVolumeInfo(Parcel from);
    [RegisterAttribute(".ctor", "(IIIII)V", "")]
public ParcelableVolumeInfo(int volumeType, int audioStream, int controlType, int maxVolume, int currentVolume);
    private static ParcelableVolumeInfo();
    public int get_AudioStream();
    public void set_AudioStream(int value);
    public int get_ControlType();
    public void set_ControlType(int value);
    [NullableContextAttribute("2")]
public static IParcelableCreator get_Creator();
    public int get_CurrentVolume();
    public void set_CurrentVolume(int value);
    public int get_MaxVolume();
    public void set_MaxVolume(int value);
    public int get_VolumeType();
    public void set_VolumeType(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDescribeContentsHandler();
    private static int n_DescribeContents(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("describeContents", "()I", "GetDescribeContentsHandler")]
public virtual int DescribeContents();
    private static Delegate GetWriteToParcel_Landroid_os_Parcel_IHandler();
    private static void n_WriteToParcel_Landroid_os_Parcel_I(IntPtr jnienv, IntPtr native__this, IntPtr native_dest, int native_flags);
    [NullableContextAttribute("2")]
[RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "GetWriteToParcel_Landroid_os_Parcel_IHandler")]
public virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("android/support/v4/media/session/PlaybackStateCompat")]
public class Android.Support.V4.Media.Session.PlaybackStateCompat : Object {
    [RegisterAttribute("ACTION_FAST_FORWARD")]
public static long ActionFastForward;
    [RegisterAttribute("ACTION_PAUSE")]
public static long ActionPause;
    [RegisterAttribute("ACTION_PLAY")]
public static long ActionPlay;
    [RegisterAttribute("ACTION_PLAY_FROM_MEDIA_ID")]
public static long ActionPlayFromMediaId;
    [RegisterAttribute("ACTION_PLAY_FROM_SEARCH")]
public static long ActionPlayFromSearch;
    [RegisterAttribute("ACTION_PLAY_FROM_URI")]
public static long ActionPlayFromUri;
    [RegisterAttribute("ACTION_PLAY_PAUSE")]
public static long ActionPlayPause;
    [RegisterAttribute("ACTION_PREPARE")]
public static long ActionPrepare;
    [RegisterAttribute("ACTION_PREPARE_FROM_MEDIA_ID")]
public static long ActionPrepareFromMediaId;
    [RegisterAttribute("ACTION_PREPARE_FROM_SEARCH")]
public static long ActionPrepareFromSearch;
    [RegisterAttribute("ACTION_PREPARE_FROM_URI")]
public static long ActionPrepareFromUri;
    [RegisterAttribute("ACTION_REWIND")]
public static long ActionRewind;
    [RegisterAttribute("ACTION_SEEK_TO")]
public static long ActionSeekTo;
    [RegisterAttribute("ACTION_SET_CAPTIONING_ENABLED")]
public static long ActionSetCaptioningEnabled;
    [RegisterAttribute("ACTION_SET_PLAYBACK_SPEED")]
public static long ActionSetPlaybackSpeed;
    [RegisterAttribute("ACTION_SET_RATING")]
public static long ActionSetRating;
    [RegisterAttribute("ACTION_SET_REPEAT_MODE")]
public static long ActionSetRepeatMode;
    [RegisterAttribute("ACTION_SET_SHUFFLE_MODE")]
public static long ActionSetShuffleMode;
    [RegisterAttribute("ACTION_SET_SHUFFLE_MODE_ENABLED")]
[ObsoleteAttribute("deprecated")]
public static long ActionSetShuffleModeEnabled;
    [RegisterAttribute("ACTION_SKIP_TO_NEXT")]
public static long ActionSkipToNext;
    [RegisterAttribute("ACTION_SKIP_TO_PREVIOUS")]
public static long ActionSkipToPrevious;
    [RegisterAttribute("ACTION_SKIP_TO_QUEUE_ITEM")]
public static long ActionSkipToQueueItem;
    [RegisterAttribute("ACTION_STOP")]
public static long ActionStop;
    [RegisterAttribute("ERROR_CODE_ACTION_ABORTED")]
public static int ErrorCodeActionAborted;
    [RegisterAttribute("ERROR_CODE_APP_ERROR")]
public static int ErrorCodeAppError;
    [RegisterAttribute("ERROR_CODE_AUTHENTICATION_EXPIRED")]
public static int ErrorCodeAuthenticationExpired;
    [RegisterAttribute("ERROR_CODE_CONCURRENT_STREAM_LIMIT")]
public static int ErrorCodeConcurrentStreamLimit;
    [RegisterAttribute("ERROR_CODE_CONTENT_ALREADY_PLAYING")]
public static int ErrorCodeContentAlreadyPlaying;
    [RegisterAttribute("ERROR_CODE_END_OF_QUEUE")]
public static int ErrorCodeEndOfQueue;
    [RegisterAttribute("ERROR_CODE_NOT_AVAILABLE_IN_REGION")]
public static int ErrorCodeNotAvailableInRegion;
    [RegisterAttribute("ERROR_CODE_NOT_SUPPORTED")]
public static int ErrorCodeNotSupported;
    [RegisterAttribute("ERROR_CODE_PARENTAL_CONTROL_RESTRICTED")]
public static int ErrorCodeParentalControlRestricted;
    [RegisterAttribute("ERROR_CODE_PREMIUM_ACCOUNT_REQUIRED")]
public static int ErrorCodePremiumAccountRequired;
    [RegisterAttribute("ERROR_CODE_SKIP_LIMIT_REACHED")]
public static int ErrorCodeSkipLimitReached;
    [RegisterAttribute("ERROR_CODE_UNKNOWN_ERROR")]
public static int ErrorCodeUnknownError;
    [RegisterAttribute("PLAYBACK_POSITION_UNKNOWN")]
public static long PlaybackPositionUnknown;
    [RegisterAttribute("REPEAT_MODE_ALL")]
public static int RepeatModeAll;
    [RegisterAttribute("REPEAT_MODE_GROUP")]
public static int RepeatModeGroup;
    [RegisterAttribute("REPEAT_MODE_INVALID")]
public static int RepeatModeInvalid;
    [RegisterAttribute("REPEAT_MODE_NONE")]
public static int RepeatModeNone;
    [RegisterAttribute("REPEAT_MODE_ONE")]
public static int RepeatModeOne;
    [RegisterAttribute("SHUFFLE_MODE_ALL")]
public static int ShuffleModeAll;
    [RegisterAttribute("SHUFFLE_MODE_GROUP")]
public static int ShuffleModeGroup;
    [RegisterAttribute("SHUFFLE_MODE_INVALID")]
public static int ShuffleModeInvalid;
    [RegisterAttribute("SHUFFLE_MODE_NONE")]
public static int ShuffleModeNone;
    [RegisterAttribute("STATE_BUFFERING")]
public static int StateBuffering;
    [RegisterAttribute("STATE_CONNECTING")]
public static int StateConnecting;
    [RegisterAttribute("STATE_ERROR")]
public static int StateError;
    [RegisterAttribute("STATE_FAST_FORWARDING")]
public static int StateFastForwarding;
    [RegisterAttribute("STATE_NONE")]
public static int StateNone;
    [RegisterAttribute("STATE_PAUSED")]
public static int StatePaused;
    [RegisterAttribute("STATE_PLAYING")]
public static int StatePlaying;
    [RegisterAttribute("STATE_REWINDING")]
public static int StateRewinding;
    [RegisterAttribute("STATE_SKIPPING_TO_NEXT")]
public static int StateSkippingToNext;
    [RegisterAttribute("STATE_SKIPPING_TO_PREVIOUS")]
public static int StateSkippingToPrevious;
    [RegisterAttribute("STATE_SKIPPING_TO_QUEUE_ITEM")]
public static int StateSkippingToQueueItem;
    [RegisterAttribute("STATE_STOPPED")]
public static int StateStopped;
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("CREATOR")]
public static IParcelableCreator Creator { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long Actions { get; }
    public long ActiveQueueItemId { get; }
    public long BufferedPosition { get; }
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public IList`1<CustomAction> CustomActions { get; }
    public int ErrorCode { get; }
    public ICharSequence ErrorMessageFormatted { get; }
    public string ErrorMessage { get; }
    public Bundle Extras { get; }
    public long LastPositionUpdateTime { get; }
    public float PlaybackSpeed { get; }
    public Object PlaybackState { get; }
    public long Position { get; }
    public int State { get; }
    internal PlaybackStateCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static PlaybackStateCompat();
    public static IParcelableCreator get_Creator();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActions", "()J", "")]
public long get_Actions();
    [RegisterAttribute("getActiveQueueItemId", "()J", "")]
public long get_ActiveQueueItemId();
    [RegisterAttribute("getBufferedPosition", "()J", "")]
public long get_BufferedPosition();
    [RegisterAttribute("getCustomActions", "()Ljava/util/List;", "")]
public IList`1<CustomAction> get_CustomActions();
    [RegisterAttribute("getErrorCode", "()I", "")]
public int get_ErrorCode();
    [RegisterAttribute("getErrorMessage", "()Ljava/lang/CharSequence;", "")]
public ICharSequence get_ErrorMessageFormatted();
    public string get_ErrorMessage();
    [RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("getLastPositionUpdateTime", "()J", "")]
public long get_LastPositionUpdateTime();
    [RegisterAttribute("getPlaybackSpeed", "()F", "")]
public float get_PlaybackSpeed();
    [RegisterAttribute("getPlaybackState", "()Ljava/lang/Object;", "")]
public Object get_PlaybackState();
    [RegisterAttribute("getPosition", "()J", "")]
public long get_Position();
    [RegisterAttribute("getState", "()I", "")]
public int get_State();
    [RegisterAttribute("describeContents", "()I", "")]
public sealed virtual int DescribeContents();
    [RegisterAttribute("fromPlaybackState", "(Ljava/lang/Object;)Landroid/support/v4/media/session/PlaybackStateCompat;", "")]
public static PlaybackStateCompat FromPlaybackState(Object stateObj);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getCurrentPosition", "(Ljava/lang/Long;)J", "")]
public long GetCurrentPosition(Long timeDiff);
    [RegisterAttribute("toKeyCode", "(J)I", "")]
public static int ToKeyCode(long action);
    [RegisterAttribute("writeToParcel", "(Landroid/os/Parcel;I)V", "")]
public sealed virtual void WriteToParcel(Parcel dest, ParcelableWriteFlags flags);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/app/NotificationCompat")]
public class AndroidX.Media.App.NotificationCompat : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected NotificationCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static NotificationCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/AudioAttributesCompat")]
public class AndroidX.Media.AudioAttributesCompat : Object {
    [RegisterAttribute("CONTENT_TYPE_MOVIE")]
public static int ContentTypeMovie;
    [RegisterAttribute("CONTENT_TYPE_MUSIC")]
public static int ContentTypeMusic;
    [RegisterAttribute("CONTENT_TYPE_SONIFICATION")]
public static int ContentTypeSonification;
    [RegisterAttribute("CONTENT_TYPE_SPEECH")]
public static int ContentTypeSpeech;
    [RegisterAttribute("CONTENT_TYPE_UNKNOWN")]
public static int ContentTypeUnknown;
    [RegisterAttribute("FLAG_AUDIBILITY_ENFORCED")]
public static int FlagAudibilityEnforced;
    [RegisterAttribute("FLAG_HW_AV_SYNC")]
public static int FlagHwAvSync;
    [RegisterAttribute("USAGE_ALARM")]
public static int UsageAlarm;
    [RegisterAttribute("USAGE_ASSISTANCE_ACCESSIBILITY")]
public static int UsageAssistanceAccessibility;
    [RegisterAttribute("USAGE_ASSISTANCE_NAVIGATION_GUIDANCE")]
public static int UsageAssistanceNavigationGuidance;
    [RegisterAttribute("USAGE_ASSISTANCE_SONIFICATION")]
public static int UsageAssistanceSonification;
    [RegisterAttribute("USAGE_ASSISTANT")]
public static int UsageAssistant;
    [RegisterAttribute("USAGE_GAME")]
public static int UsageGame;
    [RegisterAttribute("USAGE_MEDIA")]
public static int UsageMedia;
    [RegisterAttribute("USAGE_NOTIFICATION")]
public static int UsageNotification;
    [RegisterAttribute("USAGE_NOTIFICATION_COMMUNICATION_DELAYED")]
public static int UsageNotificationCommunicationDelayed;
    [RegisterAttribute("USAGE_NOTIFICATION_COMMUNICATION_INSTANT")]
public static int UsageNotificationCommunicationInstant;
    [RegisterAttribute("USAGE_NOTIFICATION_COMMUNICATION_REQUEST")]
public static int UsageNotificationCommunicationRequest;
    [RegisterAttribute("USAGE_NOTIFICATION_EVENT")]
public static int UsageNotificationEvent;
    [RegisterAttribute("USAGE_NOTIFICATION_RINGTONE")]
public static int UsageNotificationRingtone;
    [RegisterAttribute("USAGE_UNKNOWN")]
public static int UsageUnknown;
    [RegisterAttribute("USAGE_VOICE_COMMUNICATION")]
public static int UsageVoiceCommunication;
    [RegisterAttribute("USAGE_VOICE_COMMUNICATION_SIGNALLING")]
public static int UsageVoiceCommunicationSignalling;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getContentType;
    [NullableAttribute("2")]
private static Delegate cb_getFlags;
    [NullableAttribute("2")]
private static Delegate cb_getLegacyStreamType;
    [NullableAttribute("2")]
private static Delegate cb_getUsage;
    [NullableAttribute("2")]
private static Delegate cb_getVolumeControlStream;
    [NullableAttribute("2")]
private static Delegate cb_unwrap;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ContentType { get; }
    public int Flags { get; }
    public int LegacyStreamType { get; }
    public int Usage { get; }
    public int VolumeControlStream { get; }
    protected AudioAttributesCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetContentTypeHandler();
    private static int n_GetContentType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContentType", "()I", "GetGetContentTypeHandler")]
public virtual int get_ContentType();
    private static Delegate GetGetFlagsHandler();
    private static int n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()I", "GetGetFlagsHandler")]
public virtual int get_Flags();
    private static Delegate GetGetLegacyStreamTypeHandler();
    private static int n_GetLegacyStreamType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLegacyStreamType", "()I", "GetGetLegacyStreamTypeHandler")]
public virtual int get_LegacyStreamType();
    private static Delegate GetGetUsageHandler();
    private static int n_GetUsage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getUsage", "()I", "GetGetUsageHandler")]
public virtual int get_Usage();
    private static Delegate GetGetVolumeControlStreamHandler();
    private static int n_GetVolumeControlStream(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler")]
public virtual int get_VolumeControlStream();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setForceLegacyBehavior", "(Z)V", "")]
public static void SetForceLegacyBehavior(bool force);
    private static Delegate GetUnwrapHandler();
    private static IntPtr n_Unwrap(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("unwrap", "()Ljava/lang/Object;", "GetUnwrapHandler")]
public virtual Object Unwrap();
    [RegisterAttribute("wrap", "(Ljava/lang/Object;)Landroidx/media/AudioAttributesCompat;", "")]
public static AudioAttributesCompat Wrap(Object aa);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/AudioAttributesCompatParcelizer")]
public class AndroidX.Media.AudioAttributesCompatParcelizer : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AudioAttributesCompatParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesCompatParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/media/AudioAttributesCompat;", "")]
public static AudioAttributesCompat Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/media/AudioAttributesCompat;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(AudioAttributesCompat obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/AudioAttributesImplBase")]
public class AndroidX.Media.AudioAttributesImplBase : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getAudioAttributes;
    [NullableAttribute("2")]
private static Delegate cb_getContentType;
    [NullableAttribute("2")]
private static Delegate cb_getFlags;
    [NullableAttribute("2")]
private static Delegate cb_getLegacyStreamType;
    [NullableAttribute("2")]
private static Delegate cb_getRawLegacyStreamType;
    [NullableAttribute("2")]
private static Delegate cb_getUsage;
    [NullableAttribute("2")]
private static Delegate cb_getVolumeControlStream;
    [RegisterAttribute("mContentType")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MContentType { get; public set; }
    [RegisterAttribute("mFlags")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MFlags { get; public set; }
    [RegisterAttribute("mLegacyStream")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MLegacyStream { get; public set; }
    [RegisterAttribute("mUsage")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public int MUsage { get; public set; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object AudioAttributes { get; }
    public int ContentType { get; }
    public int Flags { get; }
    public int LegacyStreamType { get; }
    public int RawLegacyStreamType { get; }
    public int Usage { get; }
    public int VolumeControlStream { get; }
    protected AudioAttributesImplBase(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesImplBase();
    public int get_MContentType();
    public void set_MContentType(int value);
    public int get_MFlags();
    public void set_MFlags(int value);
    public int get_MLegacyStream();
    public void set_MLegacyStream(int value);
    public int get_MUsage();
    public void set_MUsage(int value);
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAudioAttributesHandler();
    private static IntPtr n_GetAudioAttributes(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getAudioAttributes", "()Ljava/lang/Object;", "GetGetAudioAttributesHandler")]
public virtual Object get_AudioAttributes();
    private static Delegate GetGetContentTypeHandler();
    private static int n_GetContentType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getContentType", "()I", "GetGetContentTypeHandler")]
public virtual int get_ContentType();
    private static Delegate GetGetFlagsHandler();
    private static int n_GetFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFlags", "()I", "GetGetFlagsHandler")]
public virtual int get_Flags();
    private static Delegate GetGetLegacyStreamTypeHandler();
    private static int n_GetLegacyStreamType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getLegacyStreamType", "()I", "GetGetLegacyStreamTypeHandler")]
public virtual int get_LegacyStreamType();
    private static Delegate GetGetRawLegacyStreamTypeHandler();
    private static int n_GetRawLegacyStreamType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRawLegacyStreamType", "()I", "GetGetRawLegacyStreamTypeHandler")]
public virtual int get_RawLegacyStreamType();
    private static Delegate GetGetUsageHandler();
    private static int n_GetUsage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getUsage", "()I", "GetGetUsageHandler")]
public virtual int get_Usage();
    private static Delegate GetGetVolumeControlStreamHandler();
    private static int n_GetVolumeControlStream(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler")]
public virtual int get_VolumeControlStream();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/AudioAttributesImplBaseParcelizer")]
public class AndroidX.Media.AudioAttributesImplBaseParcelizer : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected AudioAttributesImplBaseParcelizer(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioAttributesImplBaseParcelizer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("read", "(Landroidx/versionedparcelable/VersionedParcel;)Landroidx/media/AudioAttributesImplBase;", "")]
public static AudioAttributesImplBase Read(VersionedParcel parcel);
    [NullableContextAttribute("2")]
[RegisterAttribute("write", "(Landroidx/media/AudioAttributesImplBase;Landroidx/versionedparcelable/VersionedParcel;)V", "")]
public static void Write(AudioAttributesImplBase obj, VersionedParcel parcel);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/AudioFocusRequestCompat")]
public class AndroidX.Media.AudioFocusRequestCompat : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getAudioAttributesCompat;
    [NullableAttribute("2")]
private static Delegate cb_getFocusChangeHandler;
    [NullableAttribute("2")]
private static Delegate cb_getFocusGain;
    [NullableAttribute("2")]
private static Delegate cb_getOnAudioFocusChangeListener;
    [NullableAttribute("2")]
private static Delegate cb_willPauseWhenDucked;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public AudioAttributesCompat AudioAttributesCompat { get; }
    public Handler FocusChangeHandler { get; }
    public int FocusGain { get; }
    public IOnAudioFocusChangeListener OnAudioFocusChangeListener { get; }
    protected AudioFocusRequestCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioFocusRequestCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetAudioAttributesCompatHandler();
    private static IntPtr n_GetAudioAttributesCompat(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getAudioAttributesCompat", "()Landroidx/media/AudioAttributesCompat;", "GetGetAudioAttributesCompatHandler")]
public virtual AudioAttributesCompat get_AudioAttributesCompat();
    private static Delegate GetGetFocusChangeHandlerHandler();
    private static IntPtr n_GetFocusChangeHandler(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFocusChangeHandler", "()Landroid/os/Handler;", "GetGetFocusChangeHandlerHandler")]
public virtual Handler get_FocusChangeHandler();
    private static Delegate GetGetFocusGainHandler();
    private static int n_GetFocusGain(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getFocusGain", "()I", "GetGetFocusGainHandler")]
public virtual int get_FocusGain();
    private static Delegate GetGetOnAudioFocusChangeListenerHandler();
    private static IntPtr n_GetOnAudioFocusChangeListener(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getOnAudioFocusChangeListener", "()Landroid/media/AudioManager$OnAudioFocusChangeListener;", "GetGetOnAudioFocusChangeListenerHandler")]
public virtual IOnAudioFocusChangeListener get_OnAudioFocusChangeListener();
    private static Delegate GetWillPauseWhenDuckedHandler();
    private static bool n_WillPauseWhenDucked(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("willPauseWhenDucked", "()Z", "GetWillPauseWhenDuckedHandler")]
public virtual bool WillPauseWhenDucked();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/AudioManagerCompat")]
public class AndroidX.Media.AudioManagerCompat : Object {
    [RegisterAttribute("AUDIOFOCUS_GAIN")]
public static int AudiofocusGain;
    [RegisterAttribute("AUDIOFOCUS_GAIN_TRANSIENT")]
public static int AudiofocusGainTransient;
    [RegisterAttribute("AUDIOFOCUS_GAIN_TRANSIENT_EXCLUSIVE")]
public static int AudiofocusGainTransientExclusive;
    [RegisterAttribute("AUDIOFOCUS_GAIN_TRANSIENT_MAY_DUCK")]
public static int AudiofocusGainTransientMayDuck;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AudioManagerCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static AudioManagerCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("abandonAudioFocusRequest", "(Landroid/media/AudioManager;Landroidx/media/AudioFocusRequestCompat;)I", "")]
public static int AbandonAudioFocusRequest(AudioManager audioManager, AudioFocusRequestCompat focusRequest);
    [RegisterAttribute("getStreamMaxVolume", "(Landroid/media/AudioManager;I)I", "")]
public static int GetStreamMaxVolume(AudioManager audioManager, int streamType);
    [RegisterAttribute("getStreamMinVolume", "(Landroid/media/AudioManager;I)I", "")]
public static int GetStreamMinVolume(AudioManager audioManager, int streamType);
    [RegisterAttribute("isVolumeFixed", "(Landroid/media/AudioManager;)Z", "")]
public static bool IsVolumeFixed(AudioManager audioManager);
    [RegisterAttribute("requestAudioFocus", "(Landroid/media/AudioManager;Landroidx/media/AudioFocusRequestCompat;)I", "")]
public static int RequestAudioFocus(AudioManager audioManager, AudioFocusRequestCompat focusRequest);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/AudioAttributesImpl", "", "AndroidX.Media.IAudioAttributesImplInvoker")]
public interface AndroidX.Media.IAudioAttributesImpl {
    [NullableAttribute("2")]
public Object AudioAttributes { get; }
    public int ContentType { get; }
    public int Flags { get; }
    public int LegacyStreamType { get; }
    public int RawLegacyStreamType { get; }
    public int Usage { get; }
    public int VolumeControlStream { get; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getAudioAttributes", "()Ljava/lang/Object;", "GetGetAudioAttributesHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual Object get_AudioAttributes();
    [RegisterAttribute("getContentType", "()I", "GetGetContentTypeHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_ContentType();
    [RegisterAttribute("getFlags", "()I", "GetGetFlagsHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_Flags();
    [RegisterAttribute("getLegacyStreamType", "()I", "GetGetLegacyStreamTypeHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_LegacyStreamType();
    [RegisterAttribute("getRawLegacyStreamType", "()I", "GetGetRawLegacyStreamTypeHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_RawLegacyStreamType();
    [RegisterAttribute("getUsage", "()I", "GetGetUsageHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_Usage();
    [RegisterAttribute("getVolumeControlStream", "()I", "GetGetVolumeControlStreamHandler:AndroidX.Media.IAudioAttributesImplInvoker, Xamarin.AndroidX.Media")]
public abstract virtual int get_VolumeControlStream();
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/media/AudioAttributesImpl$Builder", "", "AndroidX.Media.IAudioAttributesImplBuilderInvoker")]
public interface AndroidX.Media.IAudioAttributesImplBuilder {
    [RegisterAttribute("build", "()Landroidx/media/AudioAttributesImpl;", "GetBuildHandler:AndroidX.Media.IAudioAttributesImplBuilderInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IAudioAttributesImpl Build();
    [RegisterAttribute("setContentType", "(I)Landroidx/media/AudioAttributesImpl$Builder;", "GetSetContentType_IHandler:AndroidX.Media.IAudioAttributesImplBuilderInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IAudioAttributesImplBuilder SetContentType(int p0);
    [RegisterAttribute("setFlags", "(I)Landroidx/media/AudioAttributesImpl$Builder;", "GetSetFlags_IHandler:AndroidX.Media.IAudioAttributesImplBuilderInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IAudioAttributesImplBuilder SetFlags(int p0);
    [RegisterAttribute("setLegacyStreamType", "(I)Landroidx/media/AudioAttributesImpl$Builder;", "GetSetLegacyStreamType_IHandler:AndroidX.Media.IAudioAttributesImplBuilderInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IAudioAttributesImplBuilder SetLegacyStreamType(int p0);
    [RegisterAttribute("setUsage", "(I)Landroidx/media/AudioAttributesImpl$Builder;", "GetSetUsage_IHandler:AndroidX.Media.IAudioAttributesImplBuilderInvoker, Xamarin.AndroidX.Media")]
public abstract virtual IAudioAttributesImplBuilder SetUsage(int p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/AudioAttributesImpl$Builder")]
internal class AndroidX.Media.IAudioAttributesImplBuilderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_build;
    private IntPtr id_build;
    [NullableAttribute("2")]
private static Delegate cb_setContentType_I;
    private IntPtr id_setContentType_I;
    [NullableAttribute("2")]
private static Delegate cb_setFlags_I;
    private IntPtr id_setFlags_I;
    [NullableAttribute("2")]
private static Delegate cb_setLegacyStreamType_I;
    private IntPtr id_setLegacyStreamType_I;
    [NullableAttribute("2")]
private static Delegate cb_setUsage_I;
    private IntPtr id_setUsage_I;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IAudioAttributesImplBuilderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAudioAttributesImplBuilderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IAudioAttributesImplBuilder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetBuildHandler();
    private static IntPtr n_Build(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IAudioAttributesImpl Build();
    private static Delegate GetSetContentType_IHandler();
    private static IntPtr n_SetContentType_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual IAudioAttributesImplBuilder SetContentType(int p0);
    private static Delegate GetSetFlags_IHandler();
    private static IntPtr n_SetFlags_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual IAudioAttributesImplBuilder SetFlags(int p0);
    private static Delegate GetSetLegacyStreamType_IHandler();
    private static IntPtr n_SetLegacyStreamType_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual IAudioAttributesImplBuilder SetLegacyStreamType(int p0);
    private static Delegate GetSetUsage_IHandler();
    private static IntPtr n_SetUsage_I(IntPtr jnienv, IntPtr native__this, int p0);
    public sealed virtual IAudioAttributesImplBuilder SetUsage(int p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/AudioAttributesImpl")]
internal class AndroidX.Media.IAudioAttributesImplInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getAudioAttributes;
    private IntPtr id_getAudioAttributes;
    [NullableAttribute("2")]
private static Delegate cb_getContentType;
    private IntPtr id_getContentType;
    [NullableAttribute("2")]
private static Delegate cb_getFlags;
    private IntPtr id_getFlags;
    [NullableAttribute("2")]
private static Delegate cb_getLegacyStreamType;
    private IntPtr id_getLegacyStreamType;
    [NullableAttribute("2")]
private static Delegate cb_getRawLegacyStreamType;
    private IntPtr id_getRawLegacyStreamType;
    [NullableAttribute("2")]
private static Delegate cb_getUsage;
    private IntPtr id_getUsage;
    [NullableAttribute("2")]
private static Delegate cb_getVolumeControlStream;
    private IntPtr id_getVolumeControlStream;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object AudioAttributes { get; }
    public int ContentType { get; }
    public int Flags { get; }
    public int LegacyStreamType { get; }
    public int RawLegacyStreamType { get; }
    public int Usage { get; }
    public int VolumeControlStream { get; }
    public IAudioAttributesImplInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IAudioAttributesImplInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IAudioAttributesImpl GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetAudioAttributesHandler();
    private static IntPtr n_GetAudioAttributes(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object get_AudioAttributes();
    private static Delegate GetGetContentTypeHandler();
    private static int n_GetContentType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_ContentType();
    private static Delegate GetGetFlagsHandler();
    private static int n_GetFlags(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_Flags();
    private static Delegate GetGetLegacyStreamTypeHandler();
    private static int n_GetLegacyStreamType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_LegacyStreamType();
    private static Delegate GetGetRawLegacyStreamTypeHandler();
    private static int n_GetRawLegacyStreamType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_RawLegacyStreamType();
    private static Delegate GetGetUsageHandler();
    private static int n_GetUsage(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_Usage();
    private static Delegate GetGetVolumeControlStreamHandler();
    private static int n_GetVolumeControlStream(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_VolumeControlStream();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/MediaBrowserCompatUtils")]
public class AndroidX.Media.MediaBrowserCompatUtils : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaBrowserCompatUtils(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaBrowserCompatUtils();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("areSameOptions", "(Landroid/os/Bundle;Landroid/os/Bundle;)Z", "")]
public static bool AreSameOptions(Bundle options1, Bundle options2);
    [NullableContextAttribute("2")]
[RegisterAttribute("hasDuplicatedItems", "(Landroid/os/Bundle;Landroid/os/Bundle;)Z", "")]
public static bool HasDuplicatedItems(Bundle options1, Bundle options2);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/media/MediaBrowserProtocol")]
public class AndroidX.Media.MediaBrowserProtocol : Object {
    [RegisterAttribute("CLIENT_MSG_ADD_SUBSCRIPTION")]
public static int ClientMsgAddSubscription;
    [RegisterAttribute("CLIENT_MSG_CONNECT")]
public static int ClientMsgConnect;
    [RegisterAttribute("CLIENT_MSG_DISCONNECT")]
public static int ClientMsgDisconnect;
    [RegisterAttribute("CLIENT_MSG_GET_MEDIA_ITEM")]
public static int ClientMsgGetMediaItem;
    [RegisterAttribute("CLIENT_MSG_REGISTER_CALLBACK_MESSENGER")]
public static int ClientMsgRegisterCallbackMessenger;
    [RegisterAttribute("CLIENT_MSG_REMOVE_SUBSCRIPTION")]
public static int ClientMsgRemoveSubscription;
    [RegisterAttribute("CLIENT_MSG_SEARCH")]
public static int ClientMsgSearch;
    [RegisterAttribute("CLIENT_MSG_SEND_CUSTOM_ACTION")]
public static int ClientMsgSendCustomAction;
    [RegisterAttribute("CLIENT_MSG_UNREGISTER_CALLBACK_MESSENGER")]
public static int ClientMsgUnregisterCallbackMessenger;
    [RegisterAttribute("CLIENT_VERSION_1")]
public static int ClientVersion1;
    [RegisterAttribute("CLIENT_VERSION_CURRENT")]
public static int ClientVersionCurrent;
    [RegisterAttribute("DATA_CALLBACK_TOKEN")]
public static string DataCallbackToken;
    [RegisterAttribute("DATA_CALLING_PID")]
public static string DataCallingPid;
    [RegisterAttribute("DATA_CALLING_UID")]
public static string DataCallingUid;
    [RegisterAttribute("DATA_CUSTOM_ACTION")]
public static string DataCustomAction;
    [RegisterAttribute("DATA_CUSTOM_ACTION_EXTRAS")]
public static string DataCustomActionExtras;
    [RegisterAttribute("DATA_MEDIA_ITEM_ID")]
public static string DataMediaItemId;
    [RegisterAttribute("DATA_MEDIA_ITEM_LIST")]
public static string DataMediaItemList;
    [RegisterAttribute("DATA_MEDIA_SESSION_TOKEN")]
public static string DataMediaSessionToken;
    [RegisterAttribute("DATA_NOTIFY_CHILDREN_CHANGED_OPTIONS")]
public static string DataNotifyChildrenChangedOptions;
    [RegisterAttribute("DATA_OPTIONS")]
public static string DataOptions;
    [RegisterAttribute("DATA_PACKAGE_NAME")]
public static string DataPackageName;
    [RegisterAttribute("DATA_RESULT_RECEIVER")]
public static string DataResultReceiver;
    [RegisterAttribute("DATA_ROOT_HINTS")]
public static string DataRootHints;
    [RegisterAttribute("DATA_SEARCH_EXTRAS")]
public static string DataSearchExtras;
    [RegisterAttribute("DATA_SEARCH_QUERY")]
public static string DataSearchQuery;
    [RegisterAttribute("EXTRA_CALLING_PID")]
public static string ExtraCallingPid;
    [RegisterAttribute("EXTRA_CLIENT_VERSION")]
public static string ExtraClientVersion;
    [RegisterAttribute("EXTRA_MESSENGER_BINDER")]
public static string ExtraMessengerBinder;
    [RegisterAttribute("EXTRA_SERVICE_VERSION")]
public static string ExtraServiceVersion;
    [RegisterAttribute("EXTRA_SESSION_BINDER")]
public static string ExtraSessionBinder;
    [RegisterAttribute("SERVICE_MSG_ON_CONNECT")]
public static int ServiceMsgOnConnect;
    [RegisterAttribute("SERVICE_MSG_ON_CONNECT_FAILED")]
public static int ServiceMsgOnConnectFailed;
    [RegisterAttribute("SERVICE_MSG_ON_LOAD_CHILDREN")]
public static int ServiceMsgOnLoadChildren;
    [RegisterAttribute("SERVICE_VERSION_1")]
public static int ServiceVersion1;
    [RegisterAttribute("SERVICE_VERSION_2")]
public static int ServiceVersion2;
    [RegisterAttribute("SERVICE_VERSION_CURRENT")]
public static int ServiceVersionCurrent;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaBrowserProtocol(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaBrowserProtocol();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/MediaBrowserServiceCompat")]
public abstract class AndroidX.Media.MediaBrowserServiceCompat : Service {
    [RegisterAttribute("KEY_MEDIA_ITEM")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string KeyMediaItem;
    [RegisterAttribute("KEY_SEARCH_RESULTS")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string KeySearchResults;
    [RegisterAttribute("RESULT_ERROR")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static int ResultError;
    [RegisterAttribute("RESULT_OK")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static int ResultOk;
    [RegisterAttribute("RESULT_PROGRESS_UPDATE")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static int ResultProgressUpdate;
    [RegisterAttribute("SERVICE_INTERFACE")]
public static string ServiceInterface;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getSessionToken;
    [NullableAttribute("2")]
private static Delegate cb_setSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_;
    [NullableAttribute("2")]
private static Delegate cb_attachToBaseContext_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_dump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_notifyChildrenChanged_Landroidx_media_MediaSessionManager_RemoteUserInfo_Ljava_lang_String_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_notifyChildrenChanged_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_notifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onBind_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_onCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_;
    [NullableAttribute("2")]
private static Delegate cb_onGetRoot_Ljava_lang_String_ILandroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onLoadItem_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_;
    [NullableAttribute("2")]
private static Delegate cb_onSearch_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_;
    [NullableAttribute("2")]
private static Delegate cb_onSubscribe_Ljava_lang_String_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onUnsubscribe_Ljava_lang_String_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bundle BrowserRootHints { get; }
    public RemoteUserInfo CurrentBrowserInfo { get; }
    [NullableAttribute("2")]
public Token SessionToken { get; public set; }
    protected MediaBrowserServiceCompat(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaBrowserServiceCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBrowserRootHints", "()Landroid/os/Bundle;", "")]
public Bundle get_BrowserRootHints();
    [RegisterAttribute("getCurrentBrowserInfo", "()Landroidx/media/MediaSessionManager$RemoteUserInfo;", "")]
public RemoteUserInfo get_CurrentBrowserInfo();
    private static Delegate GetGetSessionTokenHandler();
    private static IntPtr n_GetSessionToken(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_Handler();
    private static void n_SetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_(IntPtr jnienv, IntPtr native__this, IntPtr native_token);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetSessionTokenHandler")]
public virtual Token get_SessionToken();
    [NullableContextAttribute("2")]
[RegisterAttribute("setSessionToken", "(Landroid/support/v4/media/session/MediaSessionCompat$Token;)V", "GetSetSessionToken_Landroid_support_v4_media_session_MediaSessionCompat_Token_Handler")]
public virtual void set_SessionToken(Token value);
    private static Delegate GetAttachToBaseContext_Landroid_content_Context_Handler();
    private static void n_AttachToBaseContext_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native__base);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("attachToBaseContext", "(Landroid/content/Context;)V", "GetAttachToBaseContext_Landroid_content_Context_Handler")]
public virtual void AttachToBaseContext(Context base);
    private static Delegate GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler();
    private static void n_Dump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_fd, IntPtr native_writer, IntPtr native_args);
    [NullableContextAttribute("2")]
[RegisterAttribute("dump", "(Ljava/io/FileDescriptor;Ljava/io/PrintWriter;[Ljava/lang/String;)V", "GetDump_Ljava_io_FileDescriptor_Ljava_io_PrintWriter_arrayLjava_lang_String_Handler")]
public virtual void Dump(FileDescriptor fd, PrintWriter writer, String[] args);
    private static Delegate GetNotifyChildrenChanged_Landroidx_media_MediaSessionManager_RemoteUserInfo_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_NotifyChildrenChanged_Landroidx_media_MediaSessionManager_RemoteUserInfo_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_remoteUserInfo, IntPtr native_parentId, IntPtr native_options);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("notifyChildrenChanged", "(Landroidx/media/MediaSessionManager$RemoteUserInfo;Ljava/lang/String;Landroid/os/Bundle;)V", "GetNotifyChildrenChanged_Landroidx_media_MediaSessionManager_RemoteUserInfo_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void NotifyChildrenChanged(RemoteUserInfo remoteUserInfo, string parentId, Bundle options);
    private static Delegate GetNotifyChildrenChanged_Ljava_lang_String_Handler();
    private static void n_NotifyChildrenChanged_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId);
    [RegisterAttribute("notifyChildrenChanged", "(Ljava/lang/String;)V", "GetNotifyChildrenChanged_Ljava_lang_String_Handler")]
public virtual void NotifyChildrenChanged(string parentId);
    private static Delegate GetNotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_NotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_options);
    [RegisterAttribute("notifyChildrenChanged", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetNotifyChildrenChanged_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void NotifyChildrenChanged(string parentId, Bundle options);
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [NullableContextAttribute("2")]
[RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
    private static Delegate GetOnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_action, IntPtr native_extras, IntPtr native_result);
    [RegisterAttribute("onCustomAction", "(Ljava/lang/String;Landroid/os/Bundle;Landroidx/media/MediaBrowserServiceCompat$Result;)V", "GetOnCustomAction_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnCustomAction(string action, Bundle extras, Result result);
    private static Delegate GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler();
    private static IntPtr n_OnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_clientPackageName, int clientUid, IntPtr native_rootHints);
    [NullableContextAttribute("2")]
[RegisterAttribute("onGetRoot", "(Ljava/lang/String;ILandroid/os/Bundle;)Landroidx/media/MediaBrowserServiceCompat$BrowserRoot;", "GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler")]
public abstract virtual BrowserRoot OnGetRoot(string clientPackageName, int clientUid, Bundle rootHints);
    private static Delegate GetOnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_result);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroidx/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Handler")]
public abstract virtual void OnLoadChildren(string parentId, Result result);
    private static Delegate GetOnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_Handler();
    private static void n_OnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentId, IntPtr native_result, IntPtr native_options);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroidx/media/MediaBrowserServiceCompat$Result;Landroid/os/Bundle;)V", "GetOnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Landroid_os_Bundle_Handler")]
public virtual void OnLoadChildren(string parentId, Result result, Bundle options);
    private static Delegate GetOnLoadItem_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnLoadItem_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemId, IntPtr native_result);
    [RegisterAttribute("onLoadItem", "(Ljava/lang/String;Landroidx/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadItem_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnLoadItem(string itemId, Result result);
    private static Delegate GetOnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_Handler();
    private static void n_OnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_(IntPtr jnienv, IntPtr native__this, IntPtr native_query, IntPtr native_extras, IntPtr native_result);
    [RegisterAttribute("onSearch", "(Ljava/lang/String;Landroid/os/Bundle;Landroidx/media/MediaBrowserServiceCompat$Result;)V", "GetOnSearch_Ljava_lang_String_Landroid_os_Bundle_Landroidx_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnSearch(string query, Bundle extras, Result result);
    private static Delegate GetOnSubscribe_Ljava_lang_String_Landroid_os_Bundle_Handler();
    private static void n_OnSubscribe_Ljava_lang_String_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_id, IntPtr native_option);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("onSubscribe", "(Ljava/lang/String;Landroid/os/Bundle;)V", "GetOnSubscribe_Ljava_lang_String_Landroid_os_Bundle_Handler")]
public virtual void OnSubscribe(string id, Bundle option);
    private static Delegate GetOnUnsubscribe_Ljava_lang_String_Handler();
    private static void n_OnUnsubscribe_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_id);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("onUnsubscribe", "(Ljava/lang/String;)V", "GetOnUnsubscribe_Ljava_lang_String_Handler")]
public virtual void OnUnsubscribe(string id);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/MediaBrowserServiceCompat")]
internal class AndroidX.Media.MediaBrowserServiceCompatInvoker : MediaBrowserServiceCompat {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaBrowserServiceCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MediaBrowserServiceCompatInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onGetRoot", "(Ljava/lang/String;ILandroid/os/Bundle;)Landroidx/media/MediaBrowserServiceCompat$BrowserRoot;", "GetOnGetRoot_Ljava_lang_String_ILandroid_os_Bundle_Handler")]
public virtual BrowserRoot OnGetRoot(string clientPackageName, int clientUid, Bundle rootHints);
    [RegisterAttribute("onLoadChildren", "(Ljava/lang/String;Landroidx/media/MediaBrowserServiceCompat$Result;)V", "GetOnLoadChildren_Ljava_lang_String_Landroidx_media_MediaBrowserServiceCompat_Result_Handler")]
public virtual void OnLoadChildren(string parentId, Result result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/MediaSessionManager")]
public class AndroidX.Media.MediaSessionManager : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaSessionManager(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaSessionManager();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getSessionManager", "(Landroid/content/Context;)Landroidx/media/MediaSessionManager;", "")]
public static MediaSessionManager GetSessionManager(Context context);
    [RegisterAttribute("isTrustedForMediaControl", "(Landroidx/media/MediaSessionManager$RemoteUserInfo;)Z", "")]
public bool IsTrustedForMediaControl(RemoteUserInfo userInfo);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/session/MediaButtonReceiver")]
public class AndroidX.Media.Session.MediaButtonReceiver : BroadcastReceiver {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onForegroundServiceStartNotAllowedException_Landroid_content_Intent_Landroid_app_ForegroundServiceStartNotAllowedException_;
    [NullableAttribute("2")]
private static Delegate cb_onReceive_Landroid_content_Context_Landroid_content_Intent_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected MediaButtonReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaButtonReceiver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("buildMediaButtonPendingIntent", "(Landroid/content/Context;Landroid/content/ComponentName;J)Landroid/app/PendingIntent;", "")]
public static PendingIntent BuildMediaButtonPendingIntent(Context context, ComponentName mbrComponent, long action);
    [NullableContextAttribute("2")]
[RegisterAttribute("buildMediaButtonPendingIntent", "(Landroid/content/Context;J)Landroid/app/PendingIntent;", "")]
public static PendingIntent BuildMediaButtonPendingIntent(Context context, long action);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getMediaButtonReceiverComponent", "(Landroid/content/Context;)Landroid/content/ComponentName;", "")]
public static ComponentName GetMediaButtonReceiverComponent(Context context);
    [NullableContextAttribute("2")]
[RegisterAttribute("handleIntent", "(Landroid/support/v4/media/session/MediaSessionCompat;Landroid/content/Intent;)Landroid/view/KeyEvent;", "")]
public static KeyEvent HandleIntent(MediaSessionCompat mediaSessionCompat, Intent intent);
    private static Delegate GetOnForegroundServiceStartNotAllowedException_Landroid_content_Intent_Landroid_app_ForegroundServiceStartNotAllowedException_Handler();
    private static void n_OnForegroundServiceStartNotAllowedException_Landroid_content_Intent_Landroid_app_ForegroundServiceStartNotAllowedException_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent, IntPtr native_e);
    [RegisterAttribute("onForegroundServiceStartNotAllowedException", "(Landroid/content/Intent;Landroid/app/ForegroundServiceStartNotAllowedException;)V", "GetOnForegroundServiceStartNotAllowedException_Landroid_content_Intent_Landroid_app_ForegroundServiceStartNotAllowedException_Handler")]
protected virtual void OnForegroundServiceStartNotAllowedException(Intent intent, ForegroundServiceStartNotAllowedException e);
    private static Delegate GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler();
    private static void n_OnReceive_Landroid_content_Context_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_intent);
    [NullableContextAttribute("2")]
[RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "GetOnReceive_Landroid_content_Context_Landroid_content_Intent_Handler")]
public virtual void OnReceive(Context context, Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/utils/MediaConstants")]
public class AndroidX.Media.Utils.MediaConstants : Object {
    [RegisterAttribute("BROWSER_ROOT_HINTS_KEY_CUSTOM_BROWSER_ACTION_LIMIT")]
public static string BrowserRootHintsKeyCustomBrowserActionLimit;
    [RegisterAttribute("BROWSER_ROOT_HINTS_KEY_MEDIA_ART_SIZE_PIXELS")]
public static string BrowserRootHintsKeyMediaArtSizePixels;
    [RegisterAttribute("BROWSER_ROOT_HINTS_KEY_ROOT_CHILDREN_LIMIT")]
public static string BrowserRootHintsKeyRootChildrenLimit;
    [RegisterAttribute("BROWSER_ROOT_HINTS_KEY_ROOT_CHILDREN_SUPPORTED_FLAGS")]
public static string BrowserRootHintsKeyRootChildrenSupportedFlags;
    [RegisterAttribute("BROWSER_SERVICE_EXTRAS_KEY_APPLICATION_PREFERENCES_USING_CAR_APP_LIBRARY_INTENT")]
public static string BrowserServiceExtrasKeyApplicationPreferencesUsingCarAppLibraryIntent;
    [RegisterAttribute("BROWSER_SERVICE_EXTRAS_KEY_CUSTOM_BROWSER_ACTION_ROOT_LIST")]
public static string BrowserServiceExtrasKeyCustomBrowserActionRootList;
    [RegisterAttribute("BROWSER_SERVICE_EXTRAS_KEY_FAVORITES_MEDIA_ITEM")]
public static string BrowserServiceExtrasKeyFavoritesMediaItem;
    [RegisterAttribute("BROWSER_SERVICE_EXTRAS_KEY_SEARCH_SUPPORTED")]
public static string BrowserServiceExtrasKeySearchSupported;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_COMPLETION_PERCENTAGE")]
public static string DescriptionExtrasKeyCompletionPercentage;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_COMPLETION_STATUS")]
public static string DescriptionExtrasKeyCompletionStatus;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_CONTENT_STYLE_BROWSABLE")]
public static string DescriptionExtrasKeyContentStyleBrowsable;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_CONTENT_STYLE_GROUP_TITLE")]
public static string DescriptionExtrasKeyContentStyleGroupTitle;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_CONTENT_STYLE_PLAYABLE")]
public static string DescriptionExtrasKeyContentStylePlayable;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_CONTENT_STYLE_SINGLE_ITEM")]
public static string DescriptionExtrasKeyContentStyleSingleItem;
    [RegisterAttribute("DESCRIPTION_EXTRAS_KEY_CUSTOM_BROWSER_ACTION_ID_LIST")]
public static string DescriptionExtrasKeyCustomBrowserActionIdList;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_COMPLETION_STATUS_FULLY_PLAYED")]
public static int DescriptionExtrasValueCompletionStatusFullyPlayed;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_COMPLETION_STATUS_NOT_PLAYED")]
public static int DescriptionExtrasValueCompletionStatusNotPlayed;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_COMPLETION_STATUS_PARTIALLY_PLAYED")]
public static int DescriptionExtrasValueCompletionStatusPartiallyPlayed;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_CONTENT_STYLE_CATEGORY_GRID_ITEM")]
public static int DescriptionExtrasValueContentStyleCategoryGridItem;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_CONTENT_STYLE_CATEGORY_LIST_ITEM")]
public static int DescriptionExtrasValueContentStyleCategoryListItem;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_CONTENT_STYLE_GRID_ITEM")]
public static int DescriptionExtrasValueContentStyleGridItem;
    [RegisterAttribute("DESCRIPTION_EXTRAS_VALUE_CONTENT_STYLE_LIST_ITEM")]
public static int DescriptionExtrasValueContentStyleListItem;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_EXTRAS")]
public static string ExtrasKeyCustomBrowserActionExtras;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_ICON_URI")]
public static string ExtrasKeyCustomBrowserActionIconUri;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_ID")]
public static string ExtrasKeyCustomBrowserActionId;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_LABEL")]
public static string ExtrasKeyCustomBrowserActionLabel;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_MEDIA_ITEM_ID")]
public static string ExtrasKeyCustomBrowserActionMediaItemId;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_RESULT_BROWSE_NODE")]
public static string ExtrasKeyCustomBrowserActionResultBrowseNode;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_RESULT_MESSAGE")]
public static string ExtrasKeyCustomBrowserActionResultMessage;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_RESULT_REFRESH_ITEM")]
public static string ExtrasKeyCustomBrowserActionResultRefreshItem;
    [RegisterAttribute("EXTRAS_KEY_CUSTOM_BROWSER_ACTION_RESULT_SHOW_PLAYING_ITEM")]
public static string ExtrasKeyCustomBrowserActionResultShowPlayingItem;
    [RegisterAttribute("METADATA_KEY_CONTENT_ID")]
public static string MetadataKeyContentId;
    [RegisterAttribute("METADATA_KEY_IS_ADVERTISEMENT")]
public static string MetadataKeyIsAdvertisement;
    [RegisterAttribute("METADATA_KEY_IS_EXPLICIT")]
public static string MetadataKeyIsExplicit;
    [RegisterAttribute("METADATA_KEY_NEXT_EPISODE_CONTENT_ID")]
public static string MetadataKeyNextEpisodeContentId;
    [RegisterAttribute("METADATA_KEY_SERIES_CONTENT_ID")]
public static string MetadataKeySeriesContentId;
    [RegisterAttribute("METADATA_VALUE_ATTRIBUTE_PRESENT")]
public static long MetadataValueAttributePresent;
    [RegisterAttribute("PLAYBACK_STATE_EXTRAS_KEY_ERROR_RESOLUTION_ACTION_INTENT")]
public static string PlaybackStateExtrasKeyErrorResolutionActionIntent;
    [RegisterAttribute("PLAYBACK_STATE_EXTRAS_KEY_ERROR_RESOLUTION_ACTION_LABEL")]
public static string PlaybackStateExtrasKeyErrorResolutionActionLabel;
    [RegisterAttribute("PLAYBACK_STATE_EXTRAS_KEY_ERROR_RESOLUTION_USING_CAR_APP_LIBRARY_INTENT")]
public static string PlaybackStateExtrasKeyErrorResolutionUsingCarAppLibraryIntent;
    [RegisterAttribute("PLAYBACK_STATE_EXTRAS_KEY_MEDIA_ID")]
public static string PlaybackStateExtrasKeyMediaId;
    [RegisterAttribute("SESSION_EXTRAS_KEY_ACCOUNT_NAME")]
public static string SessionExtrasKeyAccountName;
    [RegisterAttribute("SESSION_EXTRAS_KEY_ACCOUNT_TYPE")]
public static string SessionExtrasKeyAccountType;
    [RegisterAttribute("SESSION_EXTRAS_KEY_AUTHTOKEN")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string SessionExtrasKeyAuthtoken;
    [RegisterAttribute("SESSION_EXTRAS_KEY_SLOT_RESERVATION_SKIP_TO_NEXT")]
public static string SessionExtrasKeySlotReservationSkipToNext;
    [RegisterAttribute("SESSION_EXTRAS_KEY_SLOT_RESERVATION_SKIP_TO_PREV")]
public static string SessionExtrasKeySlotReservationSkipToPrev;
    [RegisterAttribute("TRANSPORT_CONTROLS_EXTRAS_KEY_LEGACY_STREAM_TYPE")]
public static string TransportControlsExtrasKeyLegacyStreamType;
    [RegisterAttribute("TRANSPORT_CONTROLS_EXTRAS_KEY_SHUFFLE")]
public static string TransportControlsExtrasKeyShuffle;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaConstants(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaConstants();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/VolumeProviderCompat")]
public abstract class AndroidX.Media.VolumeProviderCompat : Object {
    [RegisterAttribute("VOLUME_CONTROL_ABSOLUTE")]
public static int VolumeControlAbsolute;
    [RegisterAttribute("VOLUME_CONTROL_FIXED")]
public static int VolumeControlFixed;
    [RegisterAttribute("VOLUME_CONTROL_RELATIVE")]
public static int VolumeControlRelative;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getVolumeProvider;
    [NullableAttribute("2")]
private static Delegate cb_onAdjustVolume_I;
    [NullableAttribute("2")]
private static Delegate cb_onSetVolumeTo_I;
    [NullableAttribute("2")]
private static Delegate cb_setCallback_Landroidx_media_VolumeProviderCompat_Callback_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int CurrentVolume { get; public set; }
    public int MaxVolume { get; }
    public int VolumeControl { get; }
    [NullableAttribute("2")]
public string VolumeControlId { get; }
    [NullableAttribute("2")]
public Object VolumeProvider { get; }
    protected VolumeProviderCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(III)V", "")]
public VolumeProviderCompat(int volumeControl, int maxVolume, int currentVolume);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(IIILjava/lang/String;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public VolumeProviderCompat(int volumeControl, int maxVolume, int currentVolume, string volumeControlId);
    private static VolumeProviderCompat();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCurrentVolume", "()I", "")]
public int get_CurrentVolume();
    [RegisterAttribute("setCurrentVolume", "(I)V", "")]
public void set_CurrentVolume(int value);
    [RegisterAttribute("getMaxVolume", "()I", "")]
public int get_MaxVolume();
    [RegisterAttribute("getVolumeControl", "()I", "")]
public int get_VolumeControl();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getVolumeControlId", "()Ljava/lang/String;", "")]
public string get_VolumeControlId();
    private static Delegate GetGetVolumeProviderHandler();
    private static IntPtr n_GetVolumeProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getVolumeProvider", "()Ljava/lang/Object;", "GetGetVolumeProviderHandler")]
public virtual Object get_VolumeProvider();
    private static Delegate GetOnAdjustVolume_IHandler();
    private static void n_OnAdjustVolume_I(IntPtr jnienv, IntPtr native__this, int direction);
    [RegisterAttribute("onAdjustVolume", "(I)V", "GetOnAdjustVolume_IHandler")]
public virtual void OnAdjustVolume(int direction);
    private static Delegate GetOnSetVolumeTo_IHandler();
    private static void n_OnSetVolumeTo_I(IntPtr jnienv, IntPtr native__this, int volume);
    [RegisterAttribute("onSetVolumeTo", "(I)V", "GetOnSetVolumeTo_IHandler")]
public virtual void OnSetVolumeTo(int volume);
    private static Delegate GetSetCallback_Landroidx_media_VolumeProviderCompat_Callback_Handler();
    private static void n_SetCallback_Landroidx_media_VolumeProviderCompat_Callback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCallback", "(Landroidx/media/VolumeProviderCompat$Callback;)V", "GetSetCallback_Landroidx_media_VolumeProviderCompat_Callback_Handler")]
public virtual void SetCallback(Callback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/media/VolumeProviderCompat")]
internal class AndroidX.Media.VolumeProviderCompatInvoker : VolumeProviderCompat {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public VolumeProviderCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static VolumeProviderCompatInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_android_support_v4_media_session_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_media_app_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_media_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_media_session_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_media_utils_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_android_support_v4_media_session_package(string klass);
    private static Type lookup_androidx_media_app_package(string klass);
    private static Type lookup_androidx_media_package(string klass);
    private static Type lookup_androidx_media_session_package(string klass);
    private static Type lookup_androidx_media_utils_package(string klass);
}
