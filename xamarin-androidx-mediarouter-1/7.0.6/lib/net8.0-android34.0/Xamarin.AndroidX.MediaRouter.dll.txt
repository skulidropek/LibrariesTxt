internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLIL_V : MulticastDelegate {
    public _JniMarshal_PPLIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, int p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLJLL_V : MulticastDelegate {
    public _JniMarshal_PPLJLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, long p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLI_V : MulticastDelegate {
    public _JniMarshal_PPLLI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLIL_V : MulticastDelegate {
    public _JniMarshal_PPLLIL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, int p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLJLL_V : MulticastDelegate {
    public _JniMarshal_PPLLLJLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, long p3, IntPtr p4, IntPtr p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, long p3, IntPtr p4, IntPtr p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, IntPtr p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteActionProvider")]
public class AndroidX.MediaRouter.App.MediaRouteActionProvider : ActionProvider {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDialogFactory;
    [NullableAttribute("2")]
private static Delegate cb_setDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_;
    [NullableAttribute("2")]
private static Delegate cb_getMediaRouteButton;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_enableDynamicGroup;
    [NullableAttribute("2")]
private static Delegate cb_onCreateActionView;
    [NullableAttribute("2")]
private static Delegate cb_onCreateMediaRouteButton;
    [NullableAttribute("2")]
private static Delegate cb_setAlwaysVisible_Z;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteDialogFactory DialogFactory { get; public set; }
    [NullableAttribute("2")]
public MediaRouteButton MediaRouteButton { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteActionProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteActionProvider(Context context);
    private static MediaRouteActionProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDialogFactoryHandler();
    private static IntPtr n_GetDialogFactory(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_Handler();
    private static void n_SetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_factory);
    [RegisterAttribute("getDialogFactory", "()Landroidx/mediarouter/app/MediaRouteDialogFactory;", "GetGetDialogFactoryHandler")]
public virtual MediaRouteDialogFactory get_DialogFactory();
    [RegisterAttribute("setDialogFactory", "(Landroidx/mediarouter/app/MediaRouteDialogFactory;)V", "GetSetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_Handler")]
public virtual void set_DialogFactory(MediaRouteDialogFactory value);
    private static Delegate GetGetMediaRouteButtonHandler();
    private static IntPtr n_GetMediaRouteButton(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaRouteButton", "()Landroidx/mediarouter/app/MediaRouteButton;", "GetGetMediaRouteButtonHandler")]
public virtual MediaRouteButton get_MediaRouteButton();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    [ObsoleteAttribute]
private static Delegate GetEnableDynamicGroupHandler();
    [ObsoleteAttribute]
private static void n_EnableDynamicGroup(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("enableDynamicGroup", "()V", "GetEnableDynamicGroupHandler")]
public virtual void EnableDynamicGroup();
    private static Delegate GetOnCreateActionViewHandler();
    private static IntPtr n_OnCreateActionView(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateActionView", "()Landroid/view/View;", "GetOnCreateActionViewHandler")]
public virtual View OnCreateActionView();
    private static Delegate GetOnCreateMediaRouteButtonHandler();
    private static IntPtr n_OnCreateMediaRouteButton(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateMediaRouteButton", "()Landroidx/mediarouter/app/MediaRouteButton;", "GetOnCreateMediaRouteButtonHandler")]
public virtual MediaRouteButton OnCreateMediaRouteButton();
    [ObsoleteAttribute]
private static Delegate GetSetAlwaysVisible_ZHandler();
    [ObsoleteAttribute]
private static void n_SetAlwaysVisible_Z(IntPtr jnienv, IntPtr native__this, bool alwaysVisible);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setAlwaysVisible", "(Z)V", "GetSetAlwaysVisible_ZHandler")]
public virtual void SetAlwaysVisible(bool alwaysVisible);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteButton")]
public class AndroidX.MediaRouter.App.MediaRouteButton : View {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDialogFactory;
    [NullableAttribute("2")]
private static Delegate cb_setDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_enableDynamicGroup;
    [NullableAttribute("2")]
private static Delegate cb_onAttachedToWindow;
    [NullableAttribute("2")]
private static Delegate cb_onDetachedFromWindow;
    [NullableAttribute("2")]
private static Delegate cb_setAlwaysVisible_Z;
    [NullableAttribute("2")]
private static Delegate cb_setRemoteIndicatorDrawable_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_showDialog;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteDialogFactory DialogFactory { get; public set; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteButton(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteButton(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public MediaRouteButton(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public MediaRouteButton(Context context, IAttributeSet attrs, int defStyleAttr);
    private static MediaRouteButton();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDialogFactoryHandler();
    private static IntPtr n_GetDialogFactory(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_Handler();
    private static void n_SetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_(IntPtr jnienv, IntPtr native__this, IntPtr native_factory);
    [RegisterAttribute("getDialogFactory", "()Landroidx/mediarouter/app/MediaRouteDialogFactory;", "GetGetDialogFactoryHandler")]
public virtual MediaRouteDialogFactory get_DialogFactory();
    [RegisterAttribute("setDialogFactory", "(Landroidx/mediarouter/app/MediaRouteDialogFactory;)V", "GetSetDialogFactory_Landroidx_mediarouter_app_MediaRouteDialogFactory_Handler")]
public virtual void set_DialogFactory(MediaRouteDialogFactory value);
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    [ObsoleteAttribute]
private static Delegate GetEnableDynamicGroupHandler();
    [ObsoleteAttribute]
private static void n_EnableDynamicGroup(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("enableDynamicGroup", "()V", "GetEnableDynamicGroupHandler")]
public virtual void EnableDynamicGroup();
    private static Delegate GetOnAttachedToWindowHandler();
    private static void n_OnAttachedToWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onAttachedToWindow", "()V", "GetOnAttachedToWindowHandler")]
public virtual void OnAttachedToWindow();
    private static Delegate GetOnDetachedFromWindowHandler();
    private static void n_OnDetachedFromWindow(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onDetachedFromWindow", "()V", "GetOnDetachedFromWindowHandler")]
public virtual void OnDetachedFromWindow();
    [ObsoleteAttribute]
private static Delegate GetSetAlwaysVisible_ZHandler();
    [ObsoleteAttribute]
private static void n_SetAlwaysVisible_Z(IntPtr jnienv, IntPtr native__this, bool alwaysVisible);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setAlwaysVisible", "(Z)V", "GetSetAlwaysVisible_ZHandler")]
public virtual void SetAlwaysVisible(bool alwaysVisible);
    private static Delegate GetSetRemoteIndicatorDrawable_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetRemoteIndicatorDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [NullableContextAttribute("2")]
[RegisterAttribute("setRemoteIndicatorDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetRemoteIndicatorDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetRemoteIndicatorDrawable(Drawable d);
    private static Delegate GetShowDialogHandler();
    private static bool n_ShowDialog(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("showDialog", "()Z", "GetShowDialogHandler")]
public virtual bool ShowDialog();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteChooserDialog")]
public class AndroidX.MediaRouter.App.MediaRouteChooserDialog : AppCompatDialog {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoutes_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_refreshRoutes;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteChooserDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteChooserDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public MediaRouteChooserDialog(Context context, int theme);
    private static MediaRouteChooserDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler();
    private static bool n_OnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_route);
    [RegisterAttribute("onFilterRoute", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)Z", "GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler")]
public virtual bool OnFilterRoute(RouteInfo route);
    private static Delegate GetOnFilterRoutes_Ljava_util_List_Handler();
    private static void n_OnFilterRoutes_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_routes);
    [RegisterAttribute("onFilterRoutes", "(Ljava/util/List;)V", "GetOnFilterRoutes_Ljava_util_List_Handler")]
public virtual void OnFilterRoutes(IList`1<RouteInfo> routes);
    private static Delegate GetRefreshRoutesHandler();
    private static void n_RefreshRoutes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refreshRoutes", "()V", "GetRefreshRoutesHandler")]
public virtual void RefreshRoutes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteChooserDialogFragment")]
public class AndroidX.MediaRouter.App.MediaRouteChooserDialogFragment : DialogFragment {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateChooserDialog_Landroid_content_Context_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateDynamicChooserDialog_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteChooserDialogFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteChooserDialogFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnCreateChooserDialog_Landroid_content_Context_Landroid_os_Bundle_Handler();
    private static IntPtr n_OnCreateChooserDialog_Landroid_content_Context_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_savedInstanceState);
    [RegisterAttribute("onCreateChooserDialog", "(Landroid/content/Context;Landroid/os/Bundle;)Landroidx/mediarouter/app/MediaRouteChooserDialog;", "GetOnCreateChooserDialog_Landroid_content_Context_Landroid_os_Bundle_Handler")]
public virtual MediaRouteChooserDialog OnCreateChooserDialog(Context context, Bundle savedInstanceState);
    private static Delegate GetOnCreateDynamicChooserDialog_Landroid_content_Context_Handler();
    private static IntPtr n_OnCreateDynamicChooserDialog_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("onCreateDynamicChooserDialog", "(Landroid/content/Context;)Landroidx/mediarouter/app/MediaRouteDynamicChooserDialog;", "GetOnCreateDynamicChooserDialog_Landroid_content_Context_Handler")]
public virtual MediaRouteDynamicChooserDialog OnCreateDynamicChooserDialog(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteControllerDialog")]
public class AndroidX.MediaRouter.App.MediaRouteControllerDialog : AlertDialog {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getMediaControlView;
    [NullableAttribute("2")]
private static Delegate cb_getMediaSession;
    [NullableAttribute("2")]
private static Delegate cb_getRoute;
    [NullableAttribute("2")]
private static Delegate cb_isVolumeControlEnabled;
    [NullableAttribute("2")]
private static Delegate cb_setVolumeControlEnabled_Z;
    [NullableAttribute("2")]
private static Delegate cb_onCreateMediaControlView_Landroid_os_Bundle_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public View MediaControlView { get; }
    [NullableAttribute("2")]
public Token MediaSession { get; }
    public RouteInfo Route { get; }
    public bool VolumeControlEnabled { get; public set; }
    protected MediaRouteControllerDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteControllerDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public MediaRouteControllerDialog(Context context, int theme);
    private static MediaRouteControllerDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMediaControlViewHandler();
    private static IntPtr n_GetMediaControlView(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaControlView", "()Landroid/view/View;", "GetGetMediaControlViewHandler")]
public virtual View get_MediaControlView();
    private static Delegate GetGetMediaSessionHandler();
    private static IntPtr n_GetMediaSession(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaSession", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetMediaSessionHandler")]
public virtual Token get_MediaSession();
    private static Delegate GetGetRouteHandler();
    private static IntPtr n_GetRoute(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRoute", "()Landroidx/mediarouter/media/MediaRouter$RouteInfo;", "GetGetRouteHandler")]
public virtual RouteInfo get_Route();
    private static Delegate GetIsVolumeControlEnabledHandler();
    private static bool n_IsVolumeControlEnabled(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetVolumeControlEnabled_ZHandler();
    private static void n_SetVolumeControlEnabled_Z(IntPtr jnienv, IntPtr native__this, bool enable);
    [RegisterAttribute("isVolumeControlEnabled", "()Z", "GetIsVolumeControlEnabledHandler")]
public virtual bool get_VolumeControlEnabled();
    [RegisterAttribute("setVolumeControlEnabled", "(Z)V", "GetSetVolumeControlEnabled_ZHandler")]
public virtual void set_VolumeControlEnabled(bool value);
    private static Delegate GetOnCreateMediaControlView_Landroid_os_Bundle_Handler();
    private static IntPtr n_OnCreateMediaControlView_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_savedInstanceState);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateMediaControlView", "(Landroid/os/Bundle;)Landroid/view/View;", "GetOnCreateMediaControlView_Landroid_os_Bundle_Handler")]
public virtual View OnCreateMediaControlView(Bundle savedInstanceState);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteControllerDialogFragment")]
public class AndroidX.MediaRouter.App.MediaRouteControllerDialogFragment : DialogFragment {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateControllerDialog_Landroid_content_Context_Landroid_os_Bundle_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateDynamicControllerDialog_Landroid_content_Context_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteControllerDialogFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteControllerDialogFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnCreateControllerDialog_Landroid_content_Context_Landroid_os_Bundle_Handler();
    private static IntPtr n_OnCreateControllerDialog_Landroid_content_Context_Landroid_os_Bundle_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_savedInstanceState);
    [RegisterAttribute("onCreateControllerDialog", "(Landroid/content/Context;Landroid/os/Bundle;)Landroidx/mediarouter/app/MediaRouteControllerDialog;", "GetOnCreateControllerDialog_Landroid_content_Context_Landroid_os_Bundle_Handler")]
public virtual MediaRouteControllerDialog OnCreateControllerDialog(Context context, Bundle savedInstanceState);
    private static Delegate GetOnCreateDynamicControllerDialog_Landroid_content_Context_Handler();
    private static IntPtr n_OnCreateDynamicControllerDialog_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("onCreateDynamicControllerDialog", "(Landroid/content/Context;)Landroidx/mediarouter/app/MediaRouteDynamicControllerDialog;", "GetOnCreateDynamicControllerDialog_Landroid_content_Context_Handler")]
public virtual MediaRouteDynamicControllerDialog OnCreateDynamicControllerDialog(Context context);
}
public class AndroidX.MediaRouter.App.MediaRouteDevicePickerDialog : object {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteDialogFactory")]
public class AndroidX.MediaRouter.App.MediaRouteDialogFactory : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onCreateChooserDialogFragment;
    [NullableAttribute("2")]
private static Delegate cb_onCreateControllerDialogFragment;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static MediaRouteDialogFactory Default { get; }
    protected MediaRouteDialogFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteDialogFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDefault", "()Landroidx/mediarouter/app/MediaRouteDialogFactory;", "")]
public static MediaRouteDialogFactory get_Default();
    private static Delegate GetOnCreateChooserDialogFragmentHandler();
    private static IntPtr n_OnCreateChooserDialogFragment(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateChooserDialogFragment", "()Landroidx/mediarouter/app/MediaRouteChooserDialogFragment;", "GetOnCreateChooserDialogFragmentHandler")]
public virtual MediaRouteChooserDialogFragment OnCreateChooserDialogFragment();
    private static Delegate GetOnCreateControllerDialogFragmentHandler();
    private static IntPtr n_OnCreateControllerDialogFragment(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onCreateControllerDialogFragment", "()Landroidx/mediarouter/app/MediaRouteControllerDialogFragment;", "GetOnCreateControllerDialogFragmentHandler")]
public virtual MediaRouteControllerDialogFragment OnCreateControllerDialogFragment();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteDiscoveryFragment")]
public class AndroidX.MediaRouter.App.MediaRouteDiscoveryFragment : Fragment {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getMediaRouter;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateCallback;
    [NullableAttribute("2")]
private static Delegate cb_onPrepareCallbackFlags;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouter MediaRouter { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteDiscoveryFragment(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteDiscoveryFragment();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMediaRouterHandler();
    private static IntPtr n_GetMediaRouter(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getMediaRouter", "()Landroidx/mediarouter/media/MediaRouter;", "GetGetMediaRouterHandler")]
public virtual MediaRouter get_MediaRouter();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnCreateCallbackHandler();
    private static IntPtr n_OnCreateCallback(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateCallback", "()Landroidx/mediarouter/media/MediaRouter$Callback;", "GetOnCreateCallbackHandler")]
public virtual Callback OnCreateCallback();
    private static Delegate GetOnPrepareCallbackFlagsHandler();
    private static int n_OnPrepareCallbackFlags(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onPrepareCallbackFlags", "()I", "GetOnPrepareCallbackFlagsHandler")]
public virtual int OnPrepareCallbackFlags();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteDynamicChooserDialog")]
public class AndroidX.MediaRouter.App.MediaRouteDynamicChooserDialog : AppCompatDialog {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoutes_Ljava_util_List_;
    [NullableAttribute("2")]
private static Delegate cb_refreshRoutes;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteDynamicChooserDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteDynamicChooserDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public MediaRouteDynamicChooserDialog(Context context, int theme);
    private static MediaRouteDynamicChooserDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler();
    private static bool n_OnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_route);
    [RegisterAttribute("onFilterRoute", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)Z", "GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler")]
public virtual bool OnFilterRoute(RouteInfo route);
    private static Delegate GetOnFilterRoutes_Ljava_util_List_Handler();
    private static void n_OnFilterRoutes_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_routes);
    [RegisterAttribute("onFilterRoutes", "(Ljava/util/List;)V", "GetOnFilterRoutes_Ljava_util_List_Handler")]
public virtual void OnFilterRoutes(IList`1<RouteInfo> routes);
    private static Delegate GetRefreshRoutesHandler();
    private static void n_RefreshRoutes(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("refreshRoutes", "()V", "GetRefreshRoutesHandler")]
public virtual void RefreshRoutes();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/mediarouter/app/MediaRouteDynamicControllerDialog")]
public class AndroidX.MediaRouter.App.MediaRouteDynamicControllerDialog : AppCompatDialog {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getMediaSession;
    [NullableAttribute("2")]
private static Delegate cb_getRouteSelector;
    [NullableAttribute("2")]
private static Delegate cb_setRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_;
    [NullableAttribute("2")]
private static Delegate cb_onFilterRoutes_Ljava_util_List_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Token MediaSession { get; }
    public MediaRouteSelector RouteSelector { get; public set; }
    protected MediaRouteDynamicControllerDialog(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteDynamicControllerDialog(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;I)V", "")]
public MediaRouteDynamicControllerDialog(Context context, int theme);
    private static MediaRouteDynamicControllerDialog();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMediaSessionHandler();
    private static IntPtr n_GetMediaSession(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaSession", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "GetGetMediaSessionHandler")]
public virtual Token get_MediaSession();
    private static Delegate GetGetRouteSelectorHandler();
    private static IntPtr n_GetRouteSelector(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler();
    private static void n_SetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_(IntPtr jnienv, IntPtr native__this, IntPtr native_selector);
    [RegisterAttribute("getRouteSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "GetGetRouteSelectorHandler")]
public virtual MediaRouteSelector get_RouteSelector();
    [RegisterAttribute("setRouteSelector", "(Landroidx/mediarouter/media/MediaRouteSelector;)V", "GetSetRouteSelector_Landroidx_mediarouter_media_MediaRouteSelector_Handler")]
public virtual void set_RouteSelector(MediaRouteSelector value);
    private static Delegate GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler();
    private static bool n_OnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_route);
    [RegisterAttribute("onFilterRoute", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)Z", "GetOnFilterRoute_Landroidx_mediarouter_media_MediaRouter_RouteInfo_Handler")]
public virtual bool OnFilterRoute(RouteInfo route);
    private static Delegate GetOnFilterRoutes_Ljava_util_List_Handler();
    private static void n_OnFilterRoutes_Ljava_util_List_(IntPtr jnienv, IntPtr native__this, IntPtr native_routes);
    [RegisterAttribute("onFilterRoutes", "(Ljava/util/List;)V", "GetOnFilterRoutes_Ljava_util_List_Handler")]
public virtual void OnFilterRoutes(IList`1<RouteInfo> routes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/app/SystemOutputSwitcherDialogController")]
public class AndroidX.MediaRouter.App.SystemOutputSwitcherDialogController : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SystemOutputSwitcherDialogController(IntPtr javaReference, JniHandleOwnership transfer);
    private static SystemOutputSwitcherDialogController();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("showDialog", "(Landroid/content/Context;)Z", "")]
public static bool ShowDialog(Context context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaControlIntent")]
public class AndroidX.MediaRouter.Media.MediaControlIntent : Object {
    [RegisterAttribute("ACTION_END_SESSION")]
public static string ActionEndSession;
    [RegisterAttribute("ACTION_ENQUEUE")]
public static string ActionEnqueue;
    [RegisterAttribute("ACTION_GET_SESSION_STATUS")]
public static string ActionGetSessionStatus;
    [RegisterAttribute("ACTION_GET_STATUS")]
public static string ActionGetStatus;
    [RegisterAttribute("ACTION_PAUSE")]
public static string ActionPause;
    [RegisterAttribute("ACTION_PLAY")]
public static string ActionPlay;
    [RegisterAttribute("ACTION_REMOVE")]
public static string ActionRemove;
    [RegisterAttribute("ACTION_RESUME")]
public static string ActionResume;
    [RegisterAttribute("ACTION_SEEK")]
public static string ActionSeek;
    [RegisterAttribute("ACTION_SEND_MESSAGE")]
public static string ActionSendMessage;
    [RegisterAttribute("ACTION_START_SESSION")]
public static string ActionStartSession;
    [RegisterAttribute("ACTION_STOP")]
public static string ActionStop;
    [RegisterAttribute("CATEGORY_LIVE_AUDIO")]
public static string CategoryLiveAudio;
    [RegisterAttribute("CATEGORY_LIVE_VIDEO")]
public static string CategoryLiveVideo;
    [RegisterAttribute("CATEGORY_REMOTE_PLAYBACK")]
public static string CategoryRemotePlayback;
    [RegisterAttribute("ERROR_INVALID_ITEM_ID")]
public static int ErrorInvalidItemId;
    [RegisterAttribute("ERROR_INVALID_SESSION_ID")]
public static int ErrorInvalidSessionId;
    [RegisterAttribute("ERROR_UNKNOWN")]
public static int ErrorUnknown;
    [RegisterAttribute("ERROR_UNSUPPORTED_OPERATION")]
public static int ErrorUnsupportedOperation;
    [RegisterAttribute("EXTRA_ERROR_CODE")]
public static string ExtraErrorCode;
    [RegisterAttribute("EXTRA_ITEM_CONTENT_POSITION")]
public static string ExtraItemContentPosition;
    [RegisterAttribute("EXTRA_ITEM_HTTP_HEADERS")]
public static string ExtraItemHttpHeaders;
    [RegisterAttribute("EXTRA_ITEM_ID")]
public static string ExtraItemId;
    [RegisterAttribute("EXTRA_ITEM_METADATA")]
public static string ExtraItemMetadata;
    [RegisterAttribute("EXTRA_ITEM_STATUS")]
public static string ExtraItemStatus;
    [RegisterAttribute("EXTRA_ITEM_STATUS_UPDATE_RECEIVER")]
public static string ExtraItemStatusUpdateReceiver;
    [RegisterAttribute("EXTRA_MESSAGE")]
public static string ExtraMessage;
    [RegisterAttribute("EXTRA_MESSAGE_RECEIVER")]
public static string ExtraMessageReceiver;
    [RegisterAttribute("EXTRA_SESSION_ID")]
public static string ExtraSessionId;
    [RegisterAttribute("EXTRA_SESSION_STATUS")]
public static string ExtraSessionStatus;
    [RegisterAttribute("EXTRA_SESSION_STATUS_UPDATE_RECEIVER")]
public static string ExtraSessionStatusUpdateReceiver;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaControlIntent(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaControlIntent();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaItemMetadata")]
public class AndroidX.MediaRouter.Media.MediaItemMetadata : Object {
    [RegisterAttribute("KEY_ALBUM_ARTIST")]
public static string KeyAlbumArtist;
    [RegisterAttribute("KEY_ALBUM_TITLE")]
public static string KeyAlbumTitle;
    [RegisterAttribute("KEY_ARTIST")]
public static string KeyArtist;
    [RegisterAttribute("KEY_ARTWORK_URI")]
public static string KeyArtworkUri;
    [RegisterAttribute("KEY_AUTHOR")]
public static string KeyAuthor;
    [RegisterAttribute("KEY_COMPOSER")]
public static string KeyComposer;
    [RegisterAttribute("KEY_DISC_NUMBER")]
public static string KeyDiscNumber;
    [RegisterAttribute("KEY_DURATION")]
public static string KeyDuration;
    [RegisterAttribute("KEY_TITLE")]
public static string KeyTitle;
    [RegisterAttribute("KEY_TRACK_NUMBER")]
public static string KeyTrackNumber;
    [RegisterAttribute("KEY_YEAR")]
public static string KeyYear;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaItemMetadata(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaItemMetadata();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaItemStatus")]
public class AndroidX.MediaRouter.Media.MediaItemStatus : Object {
    [RegisterAttribute("EXTRA_HTTP_RESPONSE_HEADERS")]
public static string ExtraHttpResponseHeaders;
    [RegisterAttribute("EXTRA_HTTP_STATUS_CODE")]
public static string ExtraHttpStatusCode;
    [RegisterAttribute("PLAYBACK_STATE_BUFFERING")]
public static int PlaybackStateBuffering;
    [RegisterAttribute("PLAYBACK_STATE_CANCELED")]
public static int PlaybackStateCanceled;
    [RegisterAttribute("PLAYBACK_STATE_ERROR")]
public static int PlaybackStateError;
    [RegisterAttribute("PLAYBACK_STATE_FINISHED")]
public static int PlaybackStateFinished;
    [RegisterAttribute("PLAYBACK_STATE_INVALIDATED")]
public static int PlaybackStateInvalidated;
    [RegisterAttribute("PLAYBACK_STATE_PAUSED")]
public static int PlaybackStatePaused;
    [RegisterAttribute("PLAYBACK_STATE_PENDING")]
public static int PlaybackStatePending;
    [RegisterAttribute("PLAYBACK_STATE_PLAYING")]
public static int PlaybackStatePlaying;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public long ContentDuration { get; }
    public long ContentPosition { get; }
    [NullableAttribute("2")]
public Bundle Extras { get; }
    public int PlaybackState { get; }
    public long Timestamp { get; }
    internal MediaItemStatus(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaItemStatus();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getContentDuration", "()J", "")]
public long get_ContentDuration();
    [RegisterAttribute("getContentPosition", "()J", "")]
public long get_ContentPosition();
    [NullableContextAttribute("2")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("getPlaybackState", "()I", "")]
public int get_PlaybackState();
    [RegisterAttribute("getTimestamp", "()J", "")]
public long get_Timestamp();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaItemStatus;", "")]
public static MediaItemStatus FromBundle(Bundle bundle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteDescriptor")]
public class AndroidX.MediaRouter.Media.MediaRouteDescriptor : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<string> AllowedPackages { get; }
    public int ConnectionState { get; }
    public IList`1<IntentFilter> ControlFilters { get; }
    public ICollection`1<string> DeduplicationIds { get; }
    [NullableAttribute("2")]
public string Description { get; }
    public int DeviceType { get; }
    [NullableAttribute("2")]
public Bundle Extras { get; }
    public IList`1<string> GroupMemberIds { get; }
    [NullableAttribute("2")]
public Uri IconUri { get; }
    public string Id { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsConnecting { get; }
    public bool IsDynamicGroupRoute { get; }
    public bool IsEnabled { get; }
    public bool IsSystemRoute { get; }
    public bool IsValid { get; }
    public bool IsVisibilityPublic { get; }
    public int MaxClientVersion { get; }
    public int MinClientVersion { get; }
    public string Name { get; }
    public int PlaybackStream { get; }
    public int PlaybackType { get; }
    public int PresentationDisplayId { get; }
    [NullableAttribute("2")]
public IntentSender SettingsActivity { get; }
    public int Volume { get; }
    public int VolumeHandling { get; }
    public int VolumeMax { get; }
    internal MediaRouteDescriptor(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteDescriptor();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAllowedPackages", "()Ljava/util/Set;", "")]
public ICollection`1<string> get_AllowedPackages();
    [RegisterAttribute("getConnectionState", "()I", "")]
public int get_ConnectionState();
    [RegisterAttribute("getControlFilters", "()Ljava/util/List;", "")]
public IList`1<IntentFilter> get_ControlFilters();
    [RegisterAttribute("getDeduplicationIds", "()Ljava/util/Set;", "")]
public ICollection`1<string> get_DeduplicationIds();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDescription", "()Ljava/lang/String;", "")]
public string get_Description();
    [RegisterAttribute("getDeviceType", "()I", "")]
public int get_DeviceType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getGroupMemberIds", "()Ljava/util/List;", "")]
public IList`1<string> get_GroupMemberIds();
    [NullableContextAttribute("2")]
[RegisterAttribute("getIconUri", "()Landroid/net/Uri;", "")]
public Uri get_IconUri();
    [RegisterAttribute("getId", "()Ljava/lang/String;", "")]
public string get_Id();
    [RegisterAttribute("isConnecting", "()Z", "")]
public bool get_IsConnecting();
    [RegisterAttribute("isDynamicGroupRoute", "()Z", "")]
public bool get_IsDynamicGroupRoute();
    [RegisterAttribute("isEnabled", "()Z", "")]
public bool get_IsEnabled();
    [RegisterAttribute("isSystemRoute", "()Z", "")]
public bool get_IsSystemRoute();
    [RegisterAttribute("isValid", "()Z", "")]
public bool get_IsValid();
    [RegisterAttribute("isVisibilityPublic", "()Z", "")]
public bool get_IsVisibilityPublic();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getMaxClientVersion", "()I", "")]
public int get_MaxClientVersion();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getMinClientVersion", "()I", "")]
public int get_MinClientVersion();
    [RegisterAttribute("getName", "()Ljava/lang/String;", "")]
public string get_Name();
    [RegisterAttribute("getPlaybackStream", "()I", "")]
public int get_PlaybackStream();
    [RegisterAttribute("getPlaybackType", "()I", "")]
public int get_PlaybackType();
    [RegisterAttribute("getPresentationDisplayId", "()I", "")]
public int get_PresentationDisplayId();
    [NullableContextAttribute("2")]
[RegisterAttribute("getSettingsActivity", "()Landroid/content/IntentSender;", "")]
public IntentSender get_SettingsActivity();
    [RegisterAttribute("getVolume", "()I", "")]
public int get_Volume();
    [RegisterAttribute("getVolumeHandling", "()I", "")]
public int get_VolumeHandling();
    [RegisterAttribute("getVolumeMax", "()I", "")]
public int get_VolumeMax();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [RegisterAttribute("canDisconnectAndKeepPlaying", "()Z", "")]
public bool CanDisconnectAndKeepPlaying();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaRouteDescriptor;", "")]
public static MediaRouteDescriptor FromBundle(Bundle bundle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteDiscoveryRequest")]
public class AndroidX.MediaRouter.Media.MediaRouteDiscoveryRequest : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsActiveScan { get; }
    public bool IsValid { get; }
    public MediaRouteSelector Selector { get; }
    internal MediaRouteDiscoveryRequest(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/mediarouter/media/MediaRouteSelector;Z)V", "")]
public MediaRouteDiscoveryRequest(MediaRouteSelector selector, bool activeScan);
    private static MediaRouteDiscoveryRequest();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isActiveScan", "()Z", "")]
public bool get_IsActiveScan();
    [RegisterAttribute("isValid", "()Z", "")]
public bool get_IsValid();
    [RegisterAttribute("getSelector", "()Landroidx/mediarouter/media/MediaRouteSelector;", "")]
public MediaRouteSelector get_Selector();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaRouteDiscoveryRequest;", "")]
public static MediaRouteDiscoveryRequest FromBundle(Bundle bundle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteProvider")]
public abstract class AndroidX.MediaRouter.Media.MediaRouteProvider : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_onCreateDynamicGroupRouteController_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateRouteController_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateRouteController_Ljava_lang_String_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_onDiscoveryRequestChanged_Landroidx_mediarouter_media_MediaRouteDiscoveryRequest_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Context Context { get; }
    [NullableAttribute("2")]
public MediaRouteProviderDescriptor Descriptor { get; public set; }
    [NullableAttribute("2")]
public MediaRouteDiscoveryRequest DiscoveryRequest { get; public set; }
    public Handler Handler { get; }
    public ProviderMetadata Metadata { get; }
    protected MediaRouteProvider(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public MediaRouteProvider(Context context);
    private static MediaRouteProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getContext", "()Landroid/content/Context;", "")]
public Context get_Context();
    [NullableContextAttribute("2")]
[RegisterAttribute("getDescriptor", "()Landroidx/mediarouter/media/MediaRouteProviderDescriptor;", "")]
public MediaRouteProviderDescriptor get_Descriptor();
    [NullableContextAttribute("2")]
[RegisterAttribute("setDescriptor", "(Landroidx/mediarouter/media/MediaRouteProviderDescriptor;)V", "")]
public void set_Descriptor(MediaRouteProviderDescriptor value);
    [NullableContextAttribute("2")]
[RegisterAttribute("getDiscoveryRequest", "()Landroidx/mediarouter/media/MediaRouteDiscoveryRequest;", "")]
public MediaRouteDiscoveryRequest get_DiscoveryRequest();
    [NullableContextAttribute("2")]
[RegisterAttribute("setDiscoveryRequest", "(Landroidx/mediarouter/media/MediaRouteDiscoveryRequest;)V", "")]
public void set_DiscoveryRequest(MediaRouteDiscoveryRequest value);
    [RegisterAttribute("getHandler", "()Landroid/os/Handler;", "")]
public Handler get_Handler();
    [RegisterAttribute("getMetadata", "()Landroidx/mediarouter/media/MediaRouteProvider$ProviderMetadata;", "")]
public ProviderMetadata get_Metadata();
    private static Delegate GetOnCreateDynamicGroupRouteController_Ljava_lang_String_Handler();
    private static IntPtr n_OnCreateDynamicGroupRouteController_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_initialMemberRouteId);
    [RegisterAttribute("onCreateDynamicGroupRouteController", "(Ljava/lang/String;)Landroidx/mediarouter/media/MediaRouteProvider$DynamicGroupRouteController;", "GetOnCreateDynamicGroupRouteController_Ljava_lang_String_Handler")]
public virtual DynamicGroupRouteController OnCreateDynamicGroupRouteController(string initialMemberRouteId);
    private static Delegate GetOnCreateRouteController_Ljava_lang_String_Handler();
    private static IntPtr n_OnCreateRouteController_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_routeId);
    [RegisterAttribute("onCreateRouteController", "(Ljava/lang/String;)Landroidx/mediarouter/media/MediaRouteProvider$RouteController;", "GetOnCreateRouteController_Ljava_lang_String_Handler")]
public virtual RouteController OnCreateRouteController(string routeId);
    private static Delegate GetOnCreateRouteController_Ljava_lang_String_Ljava_lang_String_Handler();
    private static IntPtr n_OnCreateRouteController_Ljava_lang_String_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_routeId, IntPtr native_routeGroupId);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("onCreateRouteController", "(Ljava/lang/String;Ljava/lang/String;)Landroidx/mediarouter/media/MediaRouteProvider$RouteController;", "GetOnCreateRouteController_Ljava_lang_String_Ljava_lang_String_Handler")]
public virtual RouteController OnCreateRouteController(string routeId, string routeGroupId);
    private static Delegate GetOnDiscoveryRequestChanged_Landroidx_mediarouter_media_MediaRouteDiscoveryRequest_Handler();
    private static void n_OnDiscoveryRequestChanged_Landroidx_mediarouter_media_MediaRouteDiscoveryRequest_(IntPtr jnienv, IntPtr native__this, IntPtr native_request);
    [NullableContextAttribute("2")]
[RegisterAttribute("onDiscoveryRequestChanged", "(Landroidx/mediarouter/media/MediaRouteDiscoveryRequest;)V", "GetOnDiscoveryRequestChanged_Landroidx_mediarouter_media_MediaRouteDiscoveryRequest_Handler")]
public virtual void OnDiscoveryRequestChanged(MediaRouteDiscoveryRequest request);
    [NullableContextAttribute("2")]
[RegisterAttribute("setCallback", "(Landroidx/mediarouter/media/MediaRouteProvider$Callback;)V", "")]
public void SetCallback(Callback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteProviderDescriptor")]
public class AndroidX.MediaRouter.Media.MediaRouteProviderDescriptor : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsValid { get; }
    public IList`1<MediaRouteDescriptor> Routes { get; }
    internal MediaRouteProviderDescriptor(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteProviderDescriptor();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isValid", "()Z", "")]
public bool get_IsValid();
    [RegisterAttribute("getRoutes", "()Ljava/util/List;", "")]
public IList`1<MediaRouteDescriptor> get_Routes();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaRouteProviderDescriptor;", "")]
public static MediaRouteProviderDescriptor FromBundle(Bundle bundle);
    [RegisterAttribute("supportsDynamicGroupRoute", "()Z", "")]
public bool SupportsDynamicGroupRoute();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteProvider")]
internal class AndroidX.MediaRouter.Media.MediaRouteProviderInvoker : MediaRouteProvider {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteProviderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MediaRouteProviderInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteProviderService")]
public abstract class AndroidX.MediaRouter.Media.MediaRouteProviderService : Service {
    [RegisterAttribute("SERVICE_INTERFACE")]
public static string ServiceInterface;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getMediaRouteProvider;
    [NullableAttribute("2")]
private static Delegate cb_onBind_Landroid_content_Intent_;
    [NullableAttribute("2")]
private static Delegate cb_onCreateMediaRouteProvider;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public MediaRouteProvider MediaRouteProvider { get; }
    protected MediaRouteProviderService(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteProviderService();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetMediaRouteProviderHandler();
    private static IntPtr n_GetMediaRouteProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaRouteProvider", "()Landroidx/mediarouter/media/MediaRouteProvider;", "GetGetMediaRouteProviderHandler")]
public virtual MediaRouteProvider get_MediaRouteProvider();
    private static Delegate GetOnBind_Landroid_content_Intent_Handler();
    private static IntPtr n_OnBind_Landroid_content_Intent_(IntPtr jnienv, IntPtr native__this, IntPtr native_intent);
    [RegisterAttribute("onBind", "(Landroid/content/Intent;)Landroid/os/IBinder;", "GetOnBind_Landroid_content_Intent_Handler")]
public virtual IBinder OnBind(Intent intent);
    private static Delegate GetOnCreateMediaRouteProviderHandler();
    private static IntPtr n_OnCreateMediaRouteProvider(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateMediaRouteProvider", "()Landroidx/mediarouter/media/MediaRouteProvider;", "GetOnCreateMediaRouteProviderHandler")]
public abstract virtual MediaRouteProvider OnCreateMediaRouteProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteProviderService")]
internal class AndroidX.MediaRouter.Media.MediaRouteProviderServiceInvoker : MediaRouteProviderService {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MediaRouteProviderServiceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MediaRouteProviderServiceInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("onCreateMediaRouteProvider", "()Landroidx/mediarouter/media/MediaRouteProvider;", "GetOnCreateMediaRouteProviderHandler")]
public virtual MediaRouteProvider OnCreateMediaRouteProvider();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouter")]
public class AndroidX.MediaRouter.Media.MediaRouter : Object {
    [RegisterAttribute("AVAILABILITY_FLAG_IGNORE_DEFAULT_ROUTE")]
public static int AvailabilityFlagIgnoreDefaultRoute;
    [RegisterAttribute("AVAILABILITY_FLAG_REQUIRE_MATCH")]
public static int AvailabilityFlagRequireMatch;
    [RegisterAttribute("CALLBACK_FLAG_FORCE_DISCOVERY")]
public static int CallbackFlagForceDiscovery;
    [RegisterAttribute("CALLBACK_FLAG_PERFORM_ACTIVE_SCAN")]
public static int CallbackFlagPerformActiveScan;
    [RegisterAttribute("CALLBACK_FLAG_REQUEST_DISCOVERY")]
public static int CallbackFlagRequestDiscovery;
    [RegisterAttribute("CALLBACK_FLAG_UNFILTERED_EVENTS")]
public static int CallbackFlagUnfilteredEvents;
    [RegisterAttribute("UNSELECT_REASON_DISCONNECTED")]
public static int UnselectReasonDisconnected;
    [RegisterAttribute("UNSELECT_REASON_ROUTE_CHANGED")]
public static int UnselectReasonRouteChanged;
    [RegisterAttribute("UNSELECT_REASON_STOPPED")]
public static int UnselectReasonStopped;
    [RegisterAttribute("UNSELECT_REASON_UNKNOWN")]
public static int UnselectReasonUnknown;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private WeakReference weak_implementor_PrepareTransfer;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetOnPrepareTransferListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public RouteInfo BluetoothRoute { get; }
    public RouteInfo DefaultRoute { get; }
    public static bool IsGroupVolumeUxEnabled { get; }
    public static bool IsMediaTransferEnabled { get; }
    [NullableAttribute("2")]
public Token MediaSessionToken { get; }
    public IList`1<ProviderInfo> Providers { get; }
    [NullableAttribute("2")]
public MediaRouterParams RouterParams { get; public set; }
    public IList`1<RouteInfo> Routes { get; }
    public RouteInfo SelectedRoute { get; }
    [NullableAttribute("2")]
private IOnPrepareTransferListenerImplementor ImplPrepareTransfer { get; private set; }
    [NullableAttribute("2")]
public PrepareTransferHandler PrepareTransfer { get; public set; }
    internal MediaRouter(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getBluetoothRoute", "()Landroidx/mediarouter/media/MediaRouter$RouteInfo;", "")]
public RouteInfo get_BluetoothRoute();
    [RegisterAttribute("getDefaultRoute", "()Landroidx/mediarouter/media/MediaRouter$RouteInfo;", "")]
public RouteInfo get_DefaultRoute();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("isGroupVolumeUxEnabled", "()Z", "")]
public static bool get_IsGroupVolumeUxEnabled();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("isMediaTransferEnabled", "()Z", "")]
public static bool get_IsMediaTransferEnabled();
    [NullableContextAttribute("2")]
[RegisterAttribute("getMediaSessionToken", "()Landroid/support/v4/media/session/MediaSessionCompat$Token;", "")]
public Token get_MediaSessionToken();
    [RegisterAttribute("getProviders", "()Ljava/util/List;", "")]
public IList`1<ProviderInfo> get_Providers();
    [NullableContextAttribute("2")]
[RegisterAttribute("getRouterParams", "()Landroidx/mediarouter/media/MediaRouterParams;", "")]
public MediaRouterParams get_RouterParams();
    [NullableContextAttribute("2")]
[RegisterAttribute("setRouterParams", "(Landroidx/mediarouter/media/MediaRouterParams;)V", "")]
public void set_RouterParams(MediaRouterParams value);
    [RegisterAttribute("getRoutes", "()Ljava/util/List;", "")]
public IList`1<RouteInfo> get_Routes();
    [RegisterAttribute("getSelectedRoute", "()Landroidx/mediarouter/media/MediaRouter$RouteInfo;", "")]
public RouteInfo get_SelectedRoute();
    [RegisterAttribute("addCallback", "(Landroidx/mediarouter/media/MediaRouteSelector;Landroidx/mediarouter/media/MediaRouter$Callback;)V", "")]
public void AddCallback(MediaRouteSelector selector, Callback callback);
    [RegisterAttribute("addCallback", "(Landroidx/mediarouter/media/MediaRouteSelector;Landroidx/mediarouter/media/MediaRouter$Callback;I)V", "")]
public void AddCallback(MediaRouteSelector selector, Callback callback, int flags);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("addMemberToDynamicGroup", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)V", "")]
public void AddMemberToDynamicGroup(RouteInfo route);
    [RegisterAttribute("addProvider", "(Landroidx/mediarouter/media/MediaRouteProvider;)V", "")]
public void AddProvider(MediaRouteProvider providerInstance);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("addRemoteControlClient", "(Ljava/lang/Object;)V", "")]
public void AddRemoteControlClient(Object remoteControlClient);
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/mediarouter/media/MediaRouter;", "")]
public static MediaRouter GetInstance(Context context);
    [RegisterAttribute("isRouteAvailable", "(Landroidx/mediarouter/media/MediaRouteSelector;I)Z", "")]
public bool IsRouteAvailable(MediaRouteSelector selector, int flags);
    [RegisterAttribute("removeCallback", "(Landroidx/mediarouter/media/MediaRouter$Callback;)V", "")]
public void RemoveCallback(Callback callback);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("removeMemberFromDynamicGroup", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)V", "")]
public void RemoveMemberFromDynamicGroup(RouteInfo route);
    [RegisterAttribute("removeProvider", "(Landroidx/mediarouter/media/MediaRouteProvider;)V", "")]
public void RemoveProvider(MediaRouteProvider providerInstance);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("removeRemoteControlClient", "(Ljava/lang/Object;)V", "")]
public void RemoveRemoteControlClient(Object remoteControlClient);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("resetGlobalRouter", "()V", "")]
public static void ResetGlobalRouter();
    [RegisterAttribute("selectRoute", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)V", "")]
public void SelectRoute(RouteInfo route);
    [NullableContextAttribute("2")]
[RegisterAttribute("setMediaSession", "(Ljava/lang/Object;)V", "")]
public void SetMediaSession(Object mediaSession);
    [NullableContextAttribute("2")]
[RegisterAttribute("setMediaSessionCompat", "(Landroid/support/v4/media/session/MediaSessionCompat;)V", "")]
public void SetMediaSessionCompat(MediaSessionCompat mediaSession);
    [NullableContextAttribute("2")]
[RegisterAttribute("setOnPrepareTransferListener", "(Landroidx/mediarouter/media/MediaRouter$OnPrepareTransferListener;)V", "")]
public void SetOnPrepareTransferListener(IOnPrepareTransferListener listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("setRouteListingPreference", "(Landroidx/mediarouter/media/RouteListingPreference;)V", "")]
public void SetRouteListingPreference(RouteListingPreference routeListingPreference);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("transferToRoute", "(Landroidx/mediarouter/media/MediaRouter$RouteInfo;)V", "")]
public void TransferToRoute(RouteInfo route);
    [RegisterAttribute("unselect", "(I)V", "")]
public void Unselect(int reason);
    [RegisterAttribute("updateSelectedRoute", "(Landroidx/mediarouter/media/MediaRouteSelector;)Landroidx/mediarouter/media/MediaRouter$RouteInfo;", "")]
public RouteInfo UpdateSelectedRoute(MediaRouteSelector selector);
    [NullableContextAttribute("2")]
private IOnPrepareTransferListenerImplementor get_ImplPrepareTransfer();
    [NullableContextAttribute("2")]
private void set_ImplPrepareTransfer(IOnPrepareTransferListenerImplementor value);
    [NullableContextAttribute("2")]
public PrepareTransferHandler get_PrepareTransfer();
    [NullableContextAttribute("2")]
public void set_PrepareTransfer(PrepareTransferHandler value);
    private IOnPrepareTransferListenerImplementor __CreateIOnPrepareTransferListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouterParams")]
public class AndroidX.MediaRouter.Media.MediaRouterParams : Object {
    [RegisterAttribute("DIALOG_TYPE_DEFAULT")]
public static int DialogTypeDefault;
    [RegisterAttribute("DIALOG_TYPE_DYNAMIC_GROUP")]
public static int DialogTypeDynamicGroup;
    [RegisterAttribute("ENABLE_GROUP_VOLUME_UX")]
public static string EnableGroupVolumeUx;
    [RegisterAttribute("EXTRAS_KEY_FIXED_CAST_ICON")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public static string ExtrasKeyFixedCastIcon;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getDialogType;
    [NullableAttribute("2")]
private static Delegate cb_getExtras;
    [NullableAttribute("2")]
private static Delegate cb_isMediaTransferReceiverEnabled;
    [NullableAttribute("2")]
private static Delegate cb_isOutputSwitcherEnabled;
    [NullableAttribute("2")]
private static Delegate cb_isTransferToLocalEnabled;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int DialogType { get; }
    public Bundle Extras { get; }
    public bool IsMediaTransferReceiverEnabled { get; }
    public bool IsOutputSwitcherEnabled { get; }
    public bool IsTransferToLocalEnabled { get; }
    protected MediaRouterParams(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouterParams();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetDialogTypeHandler();
    private static int n_GetDialogType(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getDialogType", "()I", "GetGetDialogTypeHandler")]
public virtual int get_DialogType();
    private static Delegate GetGetExtrasHandler();
    private static IntPtr n_GetExtras(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "GetGetExtrasHandler")]
public virtual Bundle get_Extras();
    private static Delegate GetIsMediaTransferReceiverEnabledHandler();
    private static bool n_IsMediaTransferReceiverEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMediaTransferReceiverEnabled", "()Z", "GetIsMediaTransferReceiverEnabledHandler")]
public virtual bool get_IsMediaTransferReceiverEnabled();
    private static Delegate GetIsOutputSwitcherEnabledHandler();
    private static bool n_IsOutputSwitcherEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOutputSwitcherEnabled", "()Z", "GetIsOutputSwitcherEnabledHandler")]
public virtual bool get_IsOutputSwitcherEnabled();
    private static Delegate GetIsTransferToLocalEnabledHandler();
    private static bool n_IsTransferToLocalEnabled(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isTransferToLocalEnabled", "()Z", "GetIsTransferToLocalEnabledHandler")]
public virtual bool get_IsTransferToLocalEnabled();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaRouteSelector")]
public class AndroidX.MediaRouter.Media.MediaRouteSelector : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("EMPTY")]
public static MediaRouteSelector Empty { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<string> ControlCategories { get; }
    public bool IsEmpty { get; }
    public bool IsValid { get; }
    internal MediaRouteSelector(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaRouteSelector();
    [NullableContextAttribute("2")]
public static MediaRouteSelector get_Empty();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getControlCategories", "()Ljava/util/List;", "")]
public IList`1<string> get_ControlCategories();
    [RegisterAttribute("isEmpty", "()Z", "")]
public bool get_IsEmpty();
    [RegisterAttribute("isValid", "()Z", "")]
public bool get_IsValid();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [RegisterAttribute("contains", "(Landroidx/mediarouter/media/MediaRouteSelector;)Z", "")]
public bool Contains(MediaRouteSelector selector);
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaRouteSelector;", "")]
public static MediaRouteSelector FromBundle(Bundle bundle);
    [NullableContextAttribute("2")]
[RegisterAttribute("hasControlCategory", "(Ljava/lang/String;)Z", "")]
public bool HasControlCategory(string category);
    [RegisterAttribute("matchesControlFilters", "(Ljava/util/List;)Z", "")]
public bool MatchesControlFilters(IList`1<IntentFilter> filters);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaSessionStatus")]
public class AndroidX.MediaRouter.Media.MediaSessionStatus : Object {
    [RegisterAttribute("SESSION_STATE_ACTIVE")]
public static int SessionStateActive;
    [RegisterAttribute("SESSION_STATE_ENDED")]
public static int SessionStateEnded;
    [RegisterAttribute("SESSION_STATE_INVALIDATED")]
public static int SessionStateInvalidated;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Bundle Extras { get; }
    public bool IsQueuePaused { get; }
    public int SessionState { get; }
    public long Timestamp { get; }
    internal MediaSessionStatus(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaSessionStatus();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getExtras", "()Landroid/os/Bundle;", "")]
public Bundle get_Extras();
    [RegisterAttribute("isQueuePaused", "()Z", "")]
public bool get_IsQueuePaused();
    [RegisterAttribute("getSessionState", "()I", "")]
public int get_SessionState();
    [RegisterAttribute("getTimestamp", "()J", "")]
public long get_Timestamp();
    [RegisterAttribute("asBundle", "()Landroid/os/Bundle;", "")]
public Bundle AsBundle();
    [NullableContextAttribute("2")]
[RegisterAttribute("fromBundle", "(Landroid/os/Bundle;)Landroidx/mediarouter/media/MediaSessionStatus;", "")]
public static MediaSessionStatus FromBundle(Bundle bundle);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/MediaTransferReceiver")]
public class AndroidX.MediaRouter.Media.MediaTransferReceiver : BroadcastReceiver {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MediaTransferReceiver(IntPtr javaReference, JniHandleOwnership transfer);
    private static MediaTransferReceiver();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("isDeclared", "(Landroid/content/Context;)Z", "")]
public static bool IsDeclared(Context applicationContext);
    [RegisterAttribute("onReceive", "(Landroid/content/Context;Landroid/content/Intent;)V", "")]
public virtual void OnReceive(Context context, Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/RegisteredMediaRouteProviderWatcher")]
public class AndroidX.MediaRouter.Media.RegisteredMediaRouteProviderWatcher : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RegisteredMediaRouteProviderWatcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static RegisteredMediaRouteProviderWatcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("rescan", "()V", "")]
public void Rescan();
    [RegisterAttribute("start", "()V", "")]
public void Start();
    [RegisterAttribute("stop", "()V", "")]
public void Stop();
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/RemoteControlClientCompat")]
public abstract class AndroidX.MediaRouter.Media.RemoteControlClientCompat : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static Delegate cb_getRemoteControlClient;
    private static Delegate cb_setPlaybackInfo_Landroidx_mediarouter_media_RemoteControlClientCompat_PlaybackInfo_;
    private static Delegate cb_setVolumeCallback_Landroidx_mediarouter_media_RemoteControlClientCompat_VolumeCallback_;
    [RegisterAttribute("mContext")]
protected Context MContext { get; protected set; }
    [RegisterAttribute("mRcc")]
protected RemoteControlClient MRcc { get; protected set; }
    [RegisterAttribute("mVolumeCallback")]
protected IVolumeCallback MVolumeCallback { get; protected set; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public RemoteControlClient RemoteControlClient { get; }
    protected RemoteControlClientCompat(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/media/RemoteControlClient;)V", "")]
protected RemoteControlClientCompat(Context context, RemoteControlClient rcc);
    private static RemoteControlClientCompat();
    protected Context get_MContext();
    protected void set_MContext(Context value);
    protected RemoteControlClient get_MRcc();
    protected void set_MRcc(RemoteControlClient value);
    protected IVolumeCallback get_MVolumeCallback();
    protected void set_MVolumeCallback(IVolumeCallback value);
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [NullableContextAttribute("1")]
private static Delegate GetGetRemoteControlClientHandler();
    private static IntPtr n_GetRemoteControlClient(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getRemoteControlClient", "()Landroid/media/RemoteControlClient;", "GetGetRemoteControlClientHandler")]
public virtual RemoteControlClient get_RemoteControlClient();
    [RegisterAttribute("obtain", "(Landroid/content/Context;Landroid/media/RemoteControlClient;)Ljava/lang/Object;", "")]
public static Object Obtain(Context context, RemoteControlClient rcc);
    [NullableContextAttribute("1")]
private static Delegate GetSetPlaybackInfo_Landroidx_mediarouter_media_RemoteControlClientCompat_PlaybackInfo_Handler();
    private static void n_SetPlaybackInfo_Landroidx_mediarouter_media_RemoteControlClientCompat_PlaybackInfo_(IntPtr jnienv, IntPtr native__this, IntPtr native_info);
    [RegisterAttribute("setPlaybackInfo", "(Landroidx/mediarouter/media/RemoteControlClientCompat$PlaybackInfo;)V", "GetSetPlaybackInfo_Landroidx_mediarouter_media_RemoteControlClientCompat_PlaybackInfo_Handler")]
public virtual void SetPlaybackInfo(PlaybackInfo info);
    [NullableContextAttribute("1")]
private static Delegate GetSetVolumeCallback_Landroidx_mediarouter_media_RemoteControlClientCompat_VolumeCallback_Handler();
    private static void n_SetVolumeCallback_Landroidx_mediarouter_media_RemoteControlClientCompat_VolumeCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [RegisterAttribute("setVolumeCallback", "(Landroidx/mediarouter/media/RemoteControlClientCompat$VolumeCallback;)V", "GetSetVolumeCallback_Landroidx_mediarouter_media_RemoteControlClientCompat_VolumeCallback_Handler")]
public virtual void SetVolumeCallback(IVolumeCallback callback);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/RemoteControlClientCompat")]
internal class AndroidX.MediaRouter.Media.RemoteControlClientCompatInvoker : RemoteControlClientCompat {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public RemoteControlClientCompatInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static RemoteControlClientCompatInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/RemotePlaybackClient")]
public class AndroidX.MediaRouter.Media.RemotePlaybackClient : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_hasSession;
    [NullableAttribute("2")]
private static Delegate cb_isMessagingSupported;
    [NullableAttribute("2")]
private static Delegate cb_isQueuingSupported;
    [NullableAttribute("2")]
private static Delegate cb_isRemotePlaybackSupported;
    [NullableAttribute("2")]
private static Delegate cb_isSessionManagementSupported;
    [NullableAttribute("2")]
private static Delegate cb_getSessionId;
    [NullableAttribute("2")]
private static Delegate cb_setSessionId_Ljava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_endSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_enqueue_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_getSessionStatus_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_getStatus_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_pause_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_play_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_release;
    [NullableAttribute("2")]
private static Delegate cb_remove_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_resume_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_seek_Ljava_lang_String_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_sendMessage_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_setOnMessageReceivedListener_Landroidx_mediarouter_media_RemotePlaybackClient_OnMessageReceivedListener_;
    [NullableAttribute("2")]
private static Delegate cb_setStatusCallback_Landroidx_mediarouter_media_RemotePlaybackClient_StatusCallback_;
    [NullableAttribute("2")]
private static Delegate cb_startSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_stop_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetOnMessageReceivedListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool HasSession { get; }
    public bool IsMessagingSupported { get; }
    public bool IsQueuingSupported { get; }
    public bool IsRemotePlaybackSupported { get; }
    public bool IsSessionManagementSupported { get; }
    [NullableAttribute("2")]
public string SessionId { get; public set; }
    protected RemotePlaybackClient(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroidx/mediarouter/media/MediaRouter$RouteInfo;)V", "")]
public RemotePlaybackClient(Context context, RouteInfo route);
    private static RemotePlaybackClient();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetHasSessionHandler();
    private static bool n_HasSession(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("hasSession", "()Z", "GetHasSessionHandler")]
public virtual bool get_HasSession();
    private static Delegate GetIsMessagingSupportedHandler();
    private static bool n_IsMessagingSupported(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isMessagingSupported", "()Z", "GetIsMessagingSupportedHandler")]
public virtual bool get_IsMessagingSupported();
    private static Delegate GetIsQueuingSupportedHandler();
    private static bool n_IsQueuingSupported(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isQueuingSupported", "()Z", "GetIsQueuingSupportedHandler")]
public virtual bool get_IsQueuingSupported();
    private static Delegate GetIsRemotePlaybackSupportedHandler();
    private static bool n_IsRemotePlaybackSupported(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isRemotePlaybackSupported", "()Z", "GetIsRemotePlaybackSupportedHandler")]
public virtual bool get_IsRemotePlaybackSupported();
    private static Delegate GetIsSessionManagementSupportedHandler();
    private static bool n_IsSessionManagementSupported(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSessionManagementSupported", "()Z", "GetIsSessionManagementSupportedHandler")]
public virtual bool get_IsSessionManagementSupported();
    private static Delegate GetGetSessionIdHandler();
    private static IntPtr n_GetSessionId(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetSessionId_Ljava_lang_String_Handler();
    private static void n_SetSessionId_Ljava_lang_String_(IntPtr jnienv, IntPtr native__this, IntPtr native_sessionId);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSessionId", "()Ljava/lang/String;", "GetGetSessionIdHandler")]
public virtual string get_SessionId();
    [NullableContextAttribute("2")]
[RegisterAttribute("setSessionId", "(Ljava/lang/String;)V", "GetSetSessionId_Ljava_lang_String_Handler")]
public virtual void set_SessionId(string value);
    private static Delegate GetEndSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_EndSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("endSession", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetEndSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void EndSession(Bundle extras, SessionActionCallback callback);
    private static Delegate GetEnqueue_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler();
    private static void n_Enqueue_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentUri, IntPtr native_mimeType, IntPtr native_metadata, long positionMillis, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("enqueue", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;JLandroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$ItemActionCallback;)V", "GetEnqueue_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler")]
public virtual void Enqueue(Uri contentUri, string mimeType, Bundle metadata, long positionMillis, Bundle extras, ItemActionCallback callback);
    private static Delegate GetGetSessionStatus_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_GetSessionStatus_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("getSessionStatus", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetGetSessionStatus_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void GetSessionStatus(Bundle extras, SessionActionCallback callback);
    private static Delegate GetGetStatus_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler();
    private static void n_GetStatus_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemId, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("getStatus", "(Ljava/lang/String;Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$ItemActionCallback;)V", "GetGetStatus_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler")]
public virtual void GetStatus(string itemId, Bundle extras, ItemActionCallback callback);
    private static Delegate GetPause_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_Pause_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("pause", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetPause_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void Pause(Bundle extras, SessionActionCallback callback);
    private static Delegate GetPlay_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler();
    private static void n_Play_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_contentUri, IntPtr native_mimeType, IntPtr native_metadata, long positionMillis, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("play", "(Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;JLandroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$ItemActionCallback;)V", "GetPlay_Landroid_net_Uri_Ljava_lang_String_Landroid_os_Bundle_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler")]
public virtual void Play(Uri contentUri, string mimeType, Bundle metadata, long positionMillis, Bundle extras, ItemActionCallback callback);
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("release", "()V", "GetReleaseHandler")]
public virtual void Release();
    private static Delegate GetRemove_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler();
    private static void n_Remove_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemId, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("remove", "(Ljava/lang/String;Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$ItemActionCallback;)V", "GetRemove_Ljava_lang_String_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler")]
public virtual void Remove(string itemId, Bundle extras, ItemActionCallback callback);
    private static Delegate GetResume_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_Resume_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("resume", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetResume_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void Resume(Bundle extras, SessionActionCallback callback);
    private static Delegate GetSeek_Ljava_lang_String_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler();
    private static void n_Seek_Ljava_lang_String_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_itemId, long positionMillis, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("seek", "(Ljava/lang/String;JLandroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$ItemActionCallback;)V", "GetSeek_Ljava_lang_String_JLandroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_ItemActionCallback_Handler")]
public virtual void Seek(string itemId, long positionMillis, Bundle extras, ItemActionCallback callback);
    private static Delegate GetSendMessage_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_SendMessage_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_message, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("sendMessage", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetSendMessage_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void SendMessage(Bundle message, SessionActionCallback callback);
    private static Delegate GetSetOnMessageReceivedListener_Landroidx_mediarouter_media_RemotePlaybackClient_OnMessageReceivedListener_Handler();
    private static void n_SetOnMessageReceivedListener_Landroidx_mediarouter_media_RemotePlaybackClient_OnMessageReceivedListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[RegisterAttribute("setOnMessageReceivedListener", "(Landroidx/mediarouter/media/RemotePlaybackClient$OnMessageReceivedListener;)V", "GetSetOnMessageReceivedListener_Landroidx_mediarouter_media_RemotePlaybackClient_OnMessageReceivedListener_Handler")]
public virtual void SetOnMessageReceivedListener(IOnMessageReceivedListener listener);
    private static Delegate GetSetStatusCallback_Landroidx_mediarouter_media_RemotePlaybackClient_StatusCallback_Handler();
    private static void n_SetStatusCallback_Landroidx_mediarouter_media_RemotePlaybackClient_StatusCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("setStatusCallback", "(Landroidx/mediarouter/media/RemotePlaybackClient$StatusCallback;)V", "GetSetStatusCallback_Landroidx_mediarouter_media_RemotePlaybackClient_StatusCallback_Handler")]
public virtual void SetStatusCallback(StatusCallback callback);
    private static Delegate GetStartSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_StartSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("startSession", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetStartSession_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void StartSession(Bundle extras, SessionActionCallback callback);
    private static Delegate GetStop_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler();
    private static void n_Stop_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_extras, IntPtr native__callback);
    [NullableContextAttribute("2")]
[RegisterAttribute("stop", "(Landroid/os/Bundle;Landroidx/mediarouter/media/RemotePlaybackClient$SessionActionCallback;)V", "GetStop_Landroid_os_Bundle_Landroidx_mediarouter_media_RemotePlaybackClient_SessionActionCallback_Handler")]
public virtual void Stop(Bundle extras, SessionActionCallback callback);
    public void add_MessageReceived(EventHandler`1<MessageReceivedEventArgs> value);
    public void remove_MessageReceived(EventHandler`1<MessageReceivedEventArgs> value);
    private IOnMessageReceivedListenerImplementor __CreateIOnMessageReceivedListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/mediarouter/media/RouteListingPreference")]
public class AndroidX.MediaRouter.Media.RouteListingPreference : Object {
    [RegisterAttribute("ACTION_TRANSFER_MEDIA")]
public static string ActionTransferMedia;
    [RegisterAttribute("EXTRA_ROUTE_ID")]
public static string ExtraRouteId;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsSystemOrderingEnabled { get; }
    public IList`1<Item> Items { get; }
    [NullableAttribute("2")]
public ComponentName LinkedItemComponentName { get; }
    internal RouteListingPreference(IntPtr javaReference, JniHandleOwnership transfer);
    private static RouteListingPreference();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isSystemOrderingEnabled", "()Z", "")]
public bool get_IsSystemOrderingEnabled();
    [RegisterAttribute("getItems", "()Ljava/util/List;", "")]
public IList`1<Item> get_Items();
    [NullableContextAttribute("2")]
[RegisterAttribute("getLinkedItemComponentName", "()Landroid/content/ComponentName;", "")]
public ComponentName get_LinkedItemComponentName();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_mediarouter_app_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_mediarouter_media_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_mediarouter_app_package(string klass);
    private static Type lookup_androidx_mediarouter_media_package(string klass);
}
