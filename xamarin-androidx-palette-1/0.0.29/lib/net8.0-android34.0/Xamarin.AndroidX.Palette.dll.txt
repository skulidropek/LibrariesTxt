internal class _JniMarshal_PPIL_Z : MulticastDelegate {
    public _JniMarshal_PPIL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/palette/graphics/Palette")]
public class AndroidX.Palette.Graphics.Palette : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Swatch DarkMutedSwatch { get; }
    public Swatch DarkVibrantSwatch { get; }
    public Swatch DominantSwatch { get; }
    public Swatch LightMutedSwatch { get; }
    public Swatch LightVibrantSwatch { get; }
    public Swatch MutedSwatch { get; }
    [NullableAttribute("1")]
public IList`1<Swatch> Swatches { get; }
    [NullableAttribute("1")]
public IList`1<Target> Targets { get; }
    public Swatch VibrantSwatch { get; }
    internal Palette(IntPtr javaReference, JniHandleOwnership transfer);
    private static Palette();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDarkMutedSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_DarkMutedSwatch();
    [RegisterAttribute("getDarkVibrantSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_DarkVibrantSwatch();
    [RegisterAttribute("getDominantSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_DominantSwatch();
    [RegisterAttribute("getLightMutedSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_LightMutedSwatch();
    [RegisterAttribute("getLightVibrantSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_LightVibrantSwatch();
    [RegisterAttribute("getMutedSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_MutedSwatch();
    [NullableContextAttribute("1")]
[RegisterAttribute("getSwatches", "()Ljava/util/List;", "")]
public IList`1<Swatch> get_Swatches();
    [NullableContextAttribute("1")]
[RegisterAttribute("getTargets", "()Ljava/util/List;", "")]
public IList`1<Target> get_Targets();
    [RegisterAttribute("getVibrantSwatch", "()Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch get_VibrantSwatch();
    [NullableContextAttribute("1")]
[RegisterAttribute("from", "(Landroid/graphics/Bitmap;)Landroidx/palette/graphics/Palette$Builder;", "")]
public static Builder From(Bitmap bitmap);
    [NullableContextAttribute("1")]
[RegisterAttribute("from", "(Ljava/util/List;)Landroidx/palette/graphics/Palette;", "")]
public static Palette From(IList`1<Swatch> swatches);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("generate", "(Landroid/graphics/Bitmap;)Landroidx/palette/graphics/Palette;", "")]
public static Palette Generate(Bitmap bitmap);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("generate", "(Landroid/graphics/Bitmap;I)Landroidx/palette/graphics/Palette;", "")]
public static Palette Generate(Bitmap bitmap, int numColors);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("generateAsync", "(Landroid/graphics/Bitmap;Landroidx/palette/graphics/Palette$PaletteAsyncListener;)Landroid/os/AsyncTask;", "")]
public static AsyncTask GenerateAsync(Bitmap bitmap, IPaletteAsyncListener listener);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("generateAsync", "(Landroid/graphics/Bitmap;ILandroidx/palette/graphics/Palette$PaletteAsyncListener;)Landroid/os/AsyncTask;", "")]
public static AsyncTask GenerateAsync(Bitmap bitmap, int numColors, IPaletteAsyncListener listener);
    [NullableContextAttribute("1")]
[RegisterAttribute("getColorForTarget", "(Landroidx/palette/graphics/Target;I)I", "")]
public int GetColorForTarget(Target target, int defaultColor);
    [RegisterAttribute("getDarkMutedColor", "(I)I", "")]
public int GetDarkMutedColor(int defaultColor);
    [RegisterAttribute("getDarkVibrantColor", "(I)I", "")]
public int GetDarkVibrantColor(int defaultColor);
    [RegisterAttribute("getDominantColor", "(I)I", "")]
public int GetDominantColor(int defaultColor);
    [RegisterAttribute("getLightMutedColor", "(I)I", "")]
public int GetLightMutedColor(int defaultColor);
    [RegisterAttribute("getLightVibrantColor", "(I)I", "")]
public int GetLightVibrantColor(int defaultColor);
    [RegisterAttribute("getMutedColor", "(I)I", "")]
public int GetMutedColor(int defaultColor);
    [NullableContextAttribute("1")]
[RegisterAttribute("getSwatchForTarget", "(Landroidx/palette/graphics/Target;)Landroidx/palette/graphics/Palette$Swatch;", "")]
public Swatch GetSwatchForTarget(Target target);
    [RegisterAttribute("getVibrantColor", "(I)I", "")]
public int GetVibrantColor(int defaultColor);
}
[NullableContextAttribute("2")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/palette/graphics/Target")]
public class AndroidX.Palette.Graphics.Target : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [RegisterAttribute("DARK_MUTED")]
public static Target DarkMuted { get; }
    [RegisterAttribute("DARK_VIBRANT")]
public static Target DarkVibrant { get; }
    [RegisterAttribute("LIGHT_MUTED")]
public static Target LightMuted { get; }
    [RegisterAttribute("LIGHT_VIBRANT")]
public static Target LightVibrant { get; }
    [RegisterAttribute("MUTED")]
public static Target Muted { get; }
    [RegisterAttribute("VIBRANT")]
public static Target Vibrant { get; }
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsExclusive { get; }
    public float LightnessWeight { get; }
    public float MaximumLightness { get; }
    public float MaximumSaturation { get; }
    public float MinimumLightness { get; }
    public float MinimumSaturation { get; }
    public float PopulationWeight { get; }
    public float SaturationWeight { get; }
    public float TargetLightness { get; }
    public float TargetSaturation { get; }
    internal Target(IntPtr javaReference, JniHandleOwnership transfer);
    private static Target();
    public static Target get_DarkMuted();
    public static Target get_DarkVibrant();
    public static Target get_LightMuted();
    public static Target get_LightVibrant();
    public static Target get_Muted();
    public static Target get_Vibrant();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
    [RegisterAttribute("isExclusive", "()Z", "")]
public bool get_IsExclusive();
    [RegisterAttribute("getLightnessWeight", "()F", "")]
public float get_LightnessWeight();
    [RegisterAttribute("getMaximumLightness", "()F", "")]
public float get_MaximumLightness();
    [RegisterAttribute("getMaximumSaturation", "()F", "")]
public float get_MaximumSaturation();
    [RegisterAttribute("getMinimumLightness", "()F", "")]
public float get_MinimumLightness();
    [RegisterAttribute("getMinimumSaturation", "()F", "")]
public float get_MinimumSaturation();
    [RegisterAttribute("getPopulationWeight", "()F", "")]
public float get_PopulationWeight();
    [RegisterAttribute("getSaturationWeight", "()F", "")]
public float get_SaturationWeight();
    [RegisterAttribute("getTargetLightness", "()F", "")]
public float get_TargetLightness();
    [RegisterAttribute("getTargetSaturation", "()F", "")]
public float get_TargetSaturation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_palette_graphics_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_palette_graphics_package(string klass);
}
