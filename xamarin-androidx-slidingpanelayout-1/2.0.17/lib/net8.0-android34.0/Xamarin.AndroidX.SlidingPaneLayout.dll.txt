internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPI_V : MulticastDelegate {
    public _JniMarshal_PPI_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLF_V : MulticastDelegate {
    public _JniMarshal_PPLF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, float p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLZIII_Z : MulticastDelegate {
    public _JniMarshal_PPLZIII_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, int p2, int p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, bool p1, int p2, int p3, int p4, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZIIII_V : MulticastDelegate {
    public _JniMarshal_PPZIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/slidingpanelayout/widget/SlidingPaneLayout")]
public class AndroidX.SlidingPaneLayout.Widget.SlidingPaneLayout : ViewGroup {
    [RegisterAttribute("LOCK_MODE_LOCKED")]
public static int LockModeLocked;
    [RegisterAttribute("LOCK_MODE_LOCKED_CLOSED")]
public static int LockModeLockedClosed;
    [RegisterAttribute("LOCK_MODE_LOCKED_OPEN")]
public static int LockModeLockedOpen;
    [RegisterAttribute("LOCK_MODE_UNLOCKED")]
public static int LockModeUnlocked;
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getCoveredFadeColor;
    [NullableAttribute("2")]
private static Delegate cb_setCoveredFadeColor_I;
    [NullableAttribute("2")]
private static Delegate cb_isOpen;
    [NullableAttribute("2")]
private static Delegate cb_isSlideable;
    [NullableAttribute("2")]
private static Delegate cb_getParallaxDistance;
    [NullableAttribute("2")]
private static Delegate cb_setParallaxDistance_I;
    [NullableAttribute("2")]
private static Delegate cb_getSliderFadeColor;
    [NullableAttribute("2")]
private static Delegate cb_setSliderFadeColor_I;
    [NullableAttribute("2")]
private static Delegate cb_canScroll_Landroid_view_View_ZIII;
    [NullableAttribute("2")]
private static Delegate cb_canSlide;
    [NullableAttribute("2")]
private static Delegate cb_close;
    [NullableAttribute("2")]
private static Delegate cb_closePane;
    [NullableAttribute("2")]
private static Delegate cb_onLayout_ZIIII;
    [NullableAttribute("2")]
private static Delegate cb_open;
    [NullableAttribute("2")]
private static Delegate cb_openPane;
    [NullableAttribute("2")]
private static Delegate cb_setPanelSlideListener_Landroidx_slidingpanelayout_widget_SlidingPaneLayout_PanelSlideListener_;
    [NullableAttribute("2")]
private static Delegate cb_setShadowDrawable_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setShadowDrawableLeft_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setShadowDrawableRight_Landroid_graphics_drawable_Drawable_;
    [NullableAttribute("2")]
private static Delegate cb_setShadowResource_I;
    [NullableAttribute("2")]
private static Delegate cb_setShadowResourceLeft_I;
    [NullableAttribute("2")]
private static Delegate cb_setShadowResourceRight_I;
    [NullableAttribute("2")]
private static Delegate cb_smoothSlideClosed;
    [NullableAttribute("2")]
private static Delegate cb_smoothSlideOpen;
    [NullableAttribute("2")]
private WeakReference weak_implementor_SetPanelSlideListener;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public int CoveredFadeColor { get; public set; }
    public bool IsOpen { get; }
    public bool IsSlideable { get; }
    public int LockMode { get; public set; }
    public int ParallaxDistance { get; public set; }
    [ObsoleteAttribute("deprecated")]
public int SliderFadeColor { get; public set; }
    protected SlidingPaneLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public SlidingPaneLayout(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public SlidingPaneLayout(Context context, IAttributeSet attrs, int defStyle);
    private static SlidingPaneLayout();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute]
private static Delegate GetGetCoveredFadeColorHandler();
    [ObsoleteAttribute]
private static int n_GetCoveredFadeColor(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute]
private static Delegate GetSetCoveredFadeColor_IHandler();
    [ObsoleteAttribute]
private static void n_SetCoveredFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getCoveredFadeColor", "()I", "GetGetCoveredFadeColorHandler")]
public virtual int get_CoveredFadeColor();
    [RegisterAttribute("setCoveredFadeColor", "(I)V", "GetSetCoveredFadeColor_IHandler")]
public virtual void set_CoveredFadeColor(int value);
    private static Delegate GetIsOpenHandler();
    private static bool n_IsOpen(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isOpen", "()Z", "GetIsOpenHandler")]
public virtual bool get_IsOpen();
    private static Delegate GetIsSlideableHandler();
    private static bool n_IsSlideable(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isSlideable", "()Z", "GetIsSlideableHandler")]
public virtual bool get_IsSlideable();
    [RegisterAttribute("getLockMode", "()I", "")]
public int get_LockMode();
    [RegisterAttribute("setLockMode", "(I)V", "")]
public void set_LockMode(int value);
    private static Delegate GetGetParallaxDistanceHandler();
    private static int n_GetParallaxDistance(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetParallaxDistance_IHandler();
    private static void n_SetParallaxDistance_I(IntPtr jnienv, IntPtr native__this, int parallaxBy);
    [RegisterAttribute("getParallaxDistance", "()I", "GetGetParallaxDistanceHandler")]
public virtual int get_ParallaxDistance();
    [RegisterAttribute("setParallaxDistance", "(I)V", "GetSetParallaxDistance_IHandler")]
public virtual void set_ParallaxDistance(int value);
    [ObsoleteAttribute]
private static Delegate GetGetSliderFadeColorHandler();
    [ObsoleteAttribute]
private static int n_GetSliderFadeColor(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute]
private static Delegate GetSetSliderFadeColor_IHandler();
    [ObsoleteAttribute]
private static void n_SetSliderFadeColor_I(IntPtr jnienv, IntPtr native__this, int color);
    [RegisterAttribute("getSliderFadeColor", "()I", "GetGetSliderFadeColorHandler")]
public virtual int get_SliderFadeColor();
    [RegisterAttribute("setSliderFadeColor", "(I)V", "GetSetSliderFadeColor_IHandler")]
public virtual void set_SliderFadeColor(int value);
    private static Delegate GetCanScroll_Landroid_view_View_ZIIIHandler();
    private static bool n_CanScroll_Landroid_view_View_ZIII(IntPtr jnienv, IntPtr native__this, IntPtr native_v, bool checkV, int dx, int x, int y);
    [NullableContextAttribute("2")]
[RegisterAttribute("canScroll", "(Landroid/view/View;ZIII)Z", "GetCanScroll_Landroid_view_View_ZIIIHandler")]
protected virtual bool CanScroll(View v, bool checkV, int dx, int x, int y);
    [ObsoleteAttribute]
private static Delegate GetCanSlideHandler();
    [ObsoleteAttribute]
private static bool n_CanSlide(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("canSlide", "()Z", "GetCanSlideHandler")]
public virtual bool CanSlide();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    private static Delegate GetClosePaneHandler();
    private static bool n_ClosePane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("closePane", "()Z", "GetClosePaneHandler")]
public virtual bool ClosePane();
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetOpenHandler();
    private static void n_Open(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("open", "()V", "GetOpenHandler")]
public virtual void Open();
    private static Delegate GetOpenPaneHandler();
    private static bool n_OpenPane(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("openPane", "()Z", "GetOpenPaneHandler")]
public virtual bool OpenPane();
    [ObsoleteAttribute]
private static Delegate GetSetPanelSlideListener_Landroidx_slidingpanelayout_widget_SlidingPaneLayout_PanelSlideListener_Handler();
    [ObsoleteAttribute]
private static void n_SetPanelSlideListener_Landroidx_slidingpanelayout_widget_SlidingPaneLayout_PanelSlideListener_(IntPtr jnienv, IntPtr native__this, IntPtr native_listener);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setPanelSlideListener", "(Landroidx/slidingpanelayout/widget/SlidingPaneLayout$PanelSlideListener;)V", "GetSetPanelSlideListener_Landroidx_slidingpanelayout_widget_SlidingPaneLayout_PanelSlideListener_Handler")]
public virtual void SetPanelSlideListener(IPanelSlideListener listener);
    [ObsoleteAttribute]
private static Delegate GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler();
    [ObsoleteAttribute]
private static void n_SetShadowDrawable_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowDrawable", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawable_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawable(Drawable d);
    private static Delegate GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [NullableContextAttribute("2")]
[RegisterAttribute("setShadowDrawableLeft", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableLeft_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableLeft(Drawable d);
    private static Delegate GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler();
    private static void n_SetShadowDrawableRight_Landroid_graphics_drawable_Drawable_(IntPtr jnienv, IntPtr native__this, IntPtr native_d);
    [NullableContextAttribute("2")]
[RegisterAttribute("setShadowDrawableRight", "(Landroid/graphics/drawable/Drawable;)V", "GetSetShadowDrawableRight_Landroid_graphics_drawable_Drawable_Handler")]
public virtual void SetShadowDrawableRight(Drawable d);
    [ObsoleteAttribute]
private static Delegate GetSetShadowResource_IHandler();
    [ObsoleteAttribute]
private static void n_SetShadowResource_I(IntPtr jnienv, IntPtr native__this, int resId);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("setShadowResource", "(I)V", "GetSetShadowResource_IHandler")]
public virtual void SetShadowResource(int resId);
    private static Delegate GetSetShadowResourceLeft_IHandler();
    private static void n_SetShadowResourceLeft_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceLeft", "(I)V", "GetSetShadowResourceLeft_IHandler")]
public virtual void SetShadowResourceLeft(int resId);
    private static Delegate GetSetShadowResourceRight_IHandler();
    private static void n_SetShadowResourceRight_I(IntPtr jnienv, IntPtr native__this, int resId);
    [RegisterAttribute("setShadowResourceRight", "(I)V", "GetSetShadowResourceRight_IHandler")]
public virtual void SetShadowResourceRight(int resId);
    [ObsoleteAttribute]
private static Delegate GetSmoothSlideClosedHandler();
    [ObsoleteAttribute]
private static void n_SmoothSlideClosed(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideClosed", "()V", "GetSmoothSlideClosedHandler")]
public virtual void SmoothSlideClosed();
    [ObsoleteAttribute]
private static Delegate GetSmoothSlideOpenHandler();
    [ObsoleteAttribute]
private static void n_SmoothSlideOpen(IntPtr jnienv, IntPtr native__this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("smoothSlideOpen", "()V", "GetSmoothSlideOpenHandler")]
public virtual void SmoothSlideOpen();
    public void add_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void remove_PanelClosed(EventHandler`1<PanelClosedEventArgs> value);
    public void add_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void remove_PanelOpened(EventHandler`1<PanelOpenedEventArgs> value);
    public void add_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    public void remove_PanelSlide(EventHandler`1<PanelSlideEventArgs> value);
    private IPanelSlideListenerImplementor __CreateIPanelSlideListenerImplementor();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_slidingpanelayout_widget_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_slidingpanelayout_widget_package(string klass);
}
