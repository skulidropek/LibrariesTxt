internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/startup/AppInitializer")]
public class AndroidX.Startup.AppInitializer : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AppInitializer(IntPtr javaReference, JniHandleOwnership transfer);
    private static AppInitializer();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/startup/AppInitializer;", "")]
public static AppInitializer GetInstance(Context context);
    [RegisterAttribute("initializeComponent", "(Ljava/lang/Class;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public Object InitializeComponent(Class component);
    [RegisterAttribute("isEagerlyInitialized", "(Ljava/lang/Class;)Z", "")]
public bool IsEagerlyInitialized(Class component);
}
[RegisterAttribute("androidx/startup/Initializer", "", "AndroidX.Startup.IInitializerInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface AndroidX.Startup.IInitializer {
    [NullableContextAttribute("1")]
[RegisterAttribute("create", "(Landroid/content/Context;)Ljava/lang/Object;", "GetCreate_Landroid_content_Context_Handler:AndroidX.Startup.IInitializerInvoker, Xamarin.AndroidX.Startup.StartupRuntime")]
public abstract virtual Object Create(Context p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("dependencies", "()Ljava/util/List;", "GetDependenciesHandler:AndroidX.Startup.IInitializerInvoker, Xamarin.AndroidX.Startup.StartupRuntime")]
public abstract virtual IList`1<Class> Dependencies();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/startup/Initializer")]
internal class AndroidX.Startup.IInitializerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_create_Landroid_content_Context_;
    private IntPtr id_create_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_dependencies;
    private IntPtr id_dependencies;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IInitializerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IInitializerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IInitializer GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreate_Landroid_content_Context_Handler();
    private static IntPtr n_Create_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Create(Context p0);
    private static Delegate GetDependenciesHandler();
    private static IntPtr n_Dependencies(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList`1<Class> Dependencies();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/startup/InitializationProvider")]
public class AndroidX.Startup.InitializationProvider : ContentProvider {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected InitializationProvider(IntPtr javaReference, JniHandleOwnership transfer);
    private static InitializationProvider();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("delete", "(Landroid/net/Uri;Ljava/lang/String;[Ljava/lang/String;)I", "")]
public sealed virtual int Delete(Uri uri, string selection, String[] selectionArgs);
    [RegisterAttribute("getType", "(Landroid/net/Uri;)Ljava/lang/String;", "")]
public sealed virtual string GetType(Uri uri);
    [NullableContextAttribute("2")]
[RegisterAttribute("insert", "(Landroid/net/Uri;Landroid/content/ContentValues;)Landroid/net/Uri;", "")]
public sealed virtual Uri Insert(Uri uri, ContentValues values);
    [RegisterAttribute("onCreate", "()Z", "")]
public sealed virtual bool OnCreate();
    [NullableContextAttribute("2")]
[RegisterAttribute("query", "(Landroid/net/Uri;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;", "")]
public sealed virtual ICursor Query(Uri uri, String[] projection, string selection, String[] selectionArgs, string sortOrder);
    [NullableContextAttribute("2")]
[RegisterAttribute("update", "(Landroid/net/Uri;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I", "")]
public sealed virtual int Update(Uri uri, ContentValues values, string selection, String[] selectionArgs);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/startup/StartupException")]
public class AndroidX.Startup.StartupException : RuntimeException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal StartupException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public StartupException(string message);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public StartupException(string message, Throwable throwable);
    [RegisterAttribute(".ctor", "(Ljava/lang/Throwable;)V", "")]
public StartupException(Throwable throwable);
    private static StartupException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/startup/StartupLogger")]
public class AndroidX.Startup.StartupLogger : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal StartupLogger(IntPtr javaReference, JniHandleOwnership transfer);
    private static StartupLogger();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("e", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void E(string message, Throwable throwable);
    [RegisterAttribute("i", "(Ljava/lang/String;)V", "")]
public static void I(string message);
    [RegisterAttribute("w", "(Ljava/lang/String;)V", "")]
public static void W(string message);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_startup_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_startup_package(string klass);
}
