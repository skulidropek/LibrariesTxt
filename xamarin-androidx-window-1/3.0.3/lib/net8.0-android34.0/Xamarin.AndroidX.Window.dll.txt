internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, IntPtr p3, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/window/area/WindowAreaController", "", "AndroidX.Window.Area.IWindowAreaControllerInvoker")]
public interface AndroidX.Window.Area.IWindowAreaController {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static WindowAreaControllerCompanion Companion { get; }
    public IFlow WindowAreaInfos { get; }
    public static IWindowAreaController OrCreate { get; }
    private static IWindowAreaController();
    public static WindowAreaControllerCompanion get_Companion();
    [RegisterAttribute("getWindowAreaInfos", "()Lkotlinx/coroutines/flow/Flow;", "GetGetWindowAreaInfosHandler:AndroidX.Window.Area.IWindowAreaControllerInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IFlow get_WindowAreaInfos();
    [RegisterAttribute("getOrCreate", "()Landroidx/window/area/WindowAreaController;", "")]
public static IWindowAreaController get_OrCreate();
    [RegisterAttribute("presentContentOnWindowArea", "(Landroid/os/Binder;Landroid/app/Activity;Ljava/util/concurrent/Executor;Landroidx/window/area/WindowAreaPresentationSessionCallback;)V", "GetPresentContentOnWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaPresentationSessionCallback_Handler:AndroidX.Window.Area.IWindowAreaControllerInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void PresentContentOnWindowArea(Binder token, Activity activity, IExecutor executor, IWindowAreaPresentationSessionCallback windowAreaPresentationSessionCallback);
    [RegisterAttribute("transferActivityToWindowArea", "(Landroid/os/Binder;Landroid/app/Activity;Ljava/util/concurrent/Executor;Landroidx/window/area/WindowAreaSessionCallback;)V", "GetTransferActivityToWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaSessionCallback_Handler:AndroidX.Window.Area.IWindowAreaControllerInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void TransferActivityToWindowArea(Binder token, Activity activity, IExecutor executor, IWindowAreaSessionCallback windowAreaSessionCallback);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/area/WindowAreaControllerDecorator;)V", "")]
public static void OverrideDecorator(IWindowAreaControllerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/area/WindowAreaControllerDecorator", "", "AndroidX.Window.Area.IWindowAreaControllerDecoratorInvoker")]
public interface AndroidX.Window.Area.IWindowAreaControllerDecorator {
    [NullableContextAttribute("1")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("decorate", "(Landroidx/window/area/WindowAreaController;)Landroidx/window/area/WindowAreaController;", "GetDecorate_Landroidx_window_area_WindowAreaController_Handler:AndroidX.Window.Area.IWindowAreaControllerDecoratorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IWindowAreaController Decorate(IWindowAreaController controller);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaControllerDecorator")]
internal class AndroidX.Window.Area.IWindowAreaControllerDecoratorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_decorate_Landroidx_window_area_WindowAreaController_;
    private IntPtr id_decorate_Landroidx_window_area_WindowAreaController_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaControllerDecoratorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaControllerDecoratorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaControllerDecorator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDecorate_Landroidx_window_area_WindowAreaController_Handler();
    private static IntPtr n_Decorate_Landroidx_window_area_WindowAreaController_(IntPtr jnienv, IntPtr native__this, IntPtr native_controller);
    public sealed virtual IWindowAreaController Decorate(IWindowAreaController controller);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaController")]
internal class AndroidX.Window.Area.IWindowAreaControllerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getWindowAreaInfos;
    private IntPtr id_getWindowAreaInfos;
    [NullableAttribute("2")]
private static Delegate cb_presentContentOnWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaPresentationSessionCallback_;
    private IntPtr id_presentContentOnWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaPresentationSessionCallback_;
    [NullableAttribute("2")]
private static Delegate cb_transferActivityToWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaSessionCallback_;
    private IntPtr id_transferActivityToWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaSessionCallback_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IFlow WindowAreaInfos { get; }
    public IWindowAreaControllerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaControllerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaController GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetWindowAreaInfosHandler();
    private static IntPtr n_GetWindowAreaInfos(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFlow get_WindowAreaInfos();
    private static Delegate GetPresentContentOnWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaPresentationSessionCallback_Handler();
    private static void n_PresentContentOnWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaPresentationSessionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_token, IntPtr native_activity, IntPtr native_executor, IntPtr native_windowAreaPresentationSessionCallback);
    public sealed virtual void PresentContentOnWindowArea(Binder token, Activity activity, IExecutor executor, IWindowAreaPresentationSessionCallback windowAreaPresentationSessionCallback);
    private static Delegate GetTransferActivityToWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaSessionCallback_Handler();
    private static void n_TransferActivityToWindowArea_Landroid_os_Binder_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_window_area_WindowAreaSessionCallback_(IntPtr jnienv, IntPtr native__this, IntPtr native_token, IntPtr native_activity, IntPtr native_executor, IntPtr native_windowAreaSessionCallback);
    public sealed virtual void TransferActivityToWindowArea(Binder token, Activity activity, IExecutor executor, IWindowAreaSessionCallback windowAreaSessionCallback);
}
[RegisterAttribute("androidx/window/area/WindowAreaPresentationSessionCallback", "", "AndroidX.Window.Area.IWindowAreaPresentationSessionCallbackInvoker")]
public interface AndroidX.Window.Area.IWindowAreaPresentationSessionCallback {
    [RegisterAttribute("onContainerVisibilityChanged", "(Z)V", "GetOnContainerVisibilityChanged_ZHandler:AndroidX.Window.Area.IWindowAreaPresentationSessionCallbackInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void OnContainerVisibilityChanged(bool isVisible);
    [NullableContextAttribute("2")]
[RegisterAttribute("onSessionEnded", "(Ljava/lang/Throwable;)V", "GetOnSessionEnded_Ljava_lang_Throwable_Handler:AndroidX.Window.Area.IWindowAreaPresentationSessionCallbackInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void OnSessionEnded(Throwable t);
    [NullableContextAttribute("1")]
[RegisterAttribute("onSessionStarted", "(Landroidx/window/area/WindowAreaSessionPresenter;)V", "GetOnSessionStarted_Landroidx_window_area_WindowAreaSessionPresenter_Handler:AndroidX.Window.Area.IWindowAreaPresentationSessionCallbackInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void OnSessionStarted(IWindowAreaSessionPresenter session);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaPresentationSessionCallback")]
internal class AndroidX.Window.Area.IWindowAreaPresentationSessionCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onContainerVisibilityChanged_Z;
    private IntPtr id_onContainerVisibilityChanged_Z;
    [NullableAttribute("2")]
private static Delegate cb_onSessionEnded_Ljava_lang_Throwable_;
    private IntPtr id_onSessionEnded_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_onSessionStarted_Landroidx_window_area_WindowAreaSessionPresenter_;
    private IntPtr id_onSessionStarted_Landroidx_window_area_WindowAreaSessionPresenter_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaPresentationSessionCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaPresentationSessionCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaPresentationSessionCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnContainerVisibilityChanged_ZHandler();
    private static void n_OnContainerVisibilityChanged_Z(IntPtr jnienv, IntPtr native__this, bool isVisible);
    public sealed virtual void OnContainerVisibilityChanged(bool isVisible);
    private static Delegate GetOnSessionEnded_Ljava_lang_Throwable_Handler();
    private static void n_OnSessionEnded_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    [NullableContextAttribute("2")]
public sealed virtual void OnSessionEnded(Throwable t);
    private static Delegate GetOnSessionStarted_Landroidx_window_area_WindowAreaSessionPresenter_Handler();
    private static void n_OnSessionStarted_Landroidx_window_area_WindowAreaSessionPresenter_(IntPtr jnienv, IntPtr native__this, IntPtr native_session);
    public sealed virtual void OnSessionStarted(IWindowAreaSessionPresenter session);
}
[RegisterAttribute("androidx/window/area/WindowAreaSession", "", "AndroidX.Window.Area.IWindowAreaSessionInvoker")]
public interface AndroidX.Window.Area.IWindowAreaSession {
    [RegisterAttribute("close", "()V", "GetCloseHandler:AndroidX.Window.Area.IWindowAreaSessionInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void Close();
}
[RegisterAttribute("androidx/window/area/WindowAreaSessionCallback", "", "AndroidX.Window.Area.IWindowAreaSessionCallbackInvoker")]
public interface AndroidX.Window.Area.IWindowAreaSessionCallback {
    [NullableContextAttribute("2")]
[RegisterAttribute("onSessionEnded", "(Ljava/lang/Throwable;)V", "GetOnSessionEnded_Ljava_lang_Throwable_Handler:AndroidX.Window.Area.IWindowAreaSessionCallbackInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void OnSessionEnded(Throwable t);
    [NullableContextAttribute("1")]
[RegisterAttribute("onSessionStarted", "(Landroidx/window/area/WindowAreaSession;)V", "GetOnSessionStarted_Landroidx_window_area_WindowAreaSession_Handler:AndroidX.Window.Area.IWindowAreaSessionCallbackInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void OnSessionStarted(IWindowAreaSession session);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaSessionCallback")]
internal class AndroidX.Window.Area.IWindowAreaSessionCallbackInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_onSessionEnded_Ljava_lang_Throwable_;
    private IntPtr id_onSessionEnded_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_onSessionStarted_Landroidx_window_area_WindowAreaSession_;
    private IntPtr id_onSessionStarted_Landroidx_window_area_WindowAreaSession_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaSessionCallbackInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaSessionCallbackInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaSessionCallback GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetOnSessionEnded_Ljava_lang_Throwable_Handler();
    private static void n_OnSessionEnded_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_t);
    [NullableContextAttribute("2")]
public sealed virtual void OnSessionEnded(Throwable t);
    private static Delegate GetOnSessionStarted_Landroidx_window_area_WindowAreaSession_Handler();
    private static void n_OnSessionStarted_Landroidx_window_area_WindowAreaSession_(IntPtr jnienv, IntPtr native__this, IntPtr native_session);
    public sealed virtual void OnSessionStarted(IWindowAreaSession session);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaSession")]
internal class AndroidX.Window.Area.IWindowAreaSessionInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_close;
    private IntPtr id_close;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaSessionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaSessionInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaSession GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
}
[RegisterAttribute("androidx/window/area/WindowAreaSessionPresenter", "", "AndroidX.Window.Area.IWindowAreaSessionPresenterInvoker")]
public interface AndroidX.Window.Area.IWindowAreaSessionPresenter {
    [NullableAttribute("1")]
public Context Context { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getContext", "()Landroid/content/Context;", "GetGetContextHandler:AndroidX.Window.Area.IWindowAreaSessionPresenterInvoker, Xamarin.AndroidX.Window")]
public abstract virtual Context get_Context();
    [NullableContextAttribute("1")]
[RegisterAttribute("setContentView", "(Landroid/view/View;)V", "GetSetContentView_Landroid_view_View_Handler:AndroidX.Window.Area.IWindowAreaSessionPresenterInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void SetContentView(View view);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaSessionPresenter")]
internal class AndroidX.Window.Area.IWindowAreaSessionPresenterInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    private IntPtr id_getContext;
    [NullableAttribute("2")]
private static Delegate cb_setContentView_Landroid_view_View_;
    private IntPtr id_setContentView_Landroid_view_View_;
    [NullableAttribute("2")]
private static Delegate cb_close;
    private IntPtr id_close;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Context Context { get; }
    public IWindowAreaSessionPresenterInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaSessionPresenterInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaSessionPresenter GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Context get_Context();
    private static Delegate GetSetContentView_Landroid_view_View_Handler();
    private static void n_SetContentView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_view);
    public sealed virtual void SetContentView(View view);
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Close();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/area/reflectionguard/ExtensionWindowAreaPresentationRequirements", "", "AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaPresentationRequirementsInvoker")]
public interface AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaPresentationRequirements {
    [NullableAttribute("1")]
public Context PresentationContext { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getPresentationContext", "()Landroid/content/Context;", "GetGetPresentationContextHandler:AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaPresentationRequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual Context get_PresentationContext();
    [NullableContextAttribute("1")]
[RegisterAttribute("setPresentationView", "(Landroid/view/View;)V", "GetSetPresentationView_Landroid_view_View_Handler:AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaPresentationRequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void SetPresentationView(View p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/reflectionguard/ExtensionWindowAreaPresentationRequirements")]
internal class AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaPresentationRequirementsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getPresentationContext;
    private IntPtr id_getPresentationContext;
    [NullableAttribute("2")]
private static Delegate cb_setPresentationView_Landroid_view_View_;
    private IntPtr id_setPresentationView_Landroid_view_View_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Context PresentationContext { get; }
    public IExtensionWindowAreaPresentationRequirementsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExtensionWindowAreaPresentationRequirementsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IExtensionWindowAreaPresentationRequirements GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetPresentationContextHandler();
    private static IntPtr n_GetPresentationContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Context get_PresentationContext();
    private static Delegate GetSetPresentationView_Landroid_view_View_Handler();
    private static void n_SetPresentationView_Landroid_view_View_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void SetPresentationView(View p0);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/area/reflectionguard/ExtensionWindowAreaStatusRequirements", "", "AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaStatusRequirementsInvoker")]
public interface AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaStatusRequirements {
    [NullableAttribute("1")]
public DisplayMetrics WindowAreaDisplayMetrics { get; }
    public int WindowAreaStatus { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getWindowAreaDisplayMetrics", "()Landroid/util/DisplayMetrics;", "GetGetWindowAreaDisplayMetricsHandler:AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaStatusRequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual DisplayMetrics get_WindowAreaDisplayMetrics();
    [RegisterAttribute("getWindowAreaStatus", "()I", "GetGetWindowAreaStatusHandler:AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaStatusRequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual int get_WindowAreaStatus();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/reflectionguard/ExtensionWindowAreaStatusRequirements")]
internal class AndroidX.Window.Area.ReflectionGuard.IExtensionWindowAreaStatusRequirementsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getWindowAreaDisplayMetrics;
    private IntPtr id_getWindowAreaDisplayMetrics;
    [NullableAttribute("2")]
private static Delegate cb_getWindowAreaStatus;
    private IntPtr id_getWindowAreaStatus;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DisplayMetrics WindowAreaDisplayMetrics { get; }
    public int WindowAreaStatus { get; }
    public IExtensionWindowAreaStatusRequirementsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExtensionWindowAreaStatusRequirementsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IExtensionWindowAreaStatusRequirements GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetWindowAreaDisplayMetricsHandler();
    private static IntPtr n_GetWindowAreaDisplayMetrics(IntPtr jnienv, IntPtr native__this);
    public sealed virtual DisplayMetrics get_WindowAreaDisplayMetrics();
    private static Delegate GetGetWindowAreaStatusHandler();
    private static int n_GetWindowAreaStatus(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_WindowAreaStatus();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/area/reflectionguard/WindowAreaComponentApi2Requirements", "", "AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker")]
public interface AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2Requirements {
    [NullableContextAttribute("1")]
[RegisterAttribute("addRearDisplayStatusListener", "(Landroidx/window/extensions/core/util/function/Consumer;)V", "GetAddRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void AddRearDisplayStatusListener(IConsumer p0);
    [RegisterAttribute("endRearDisplaySession", "()V", "GetEndRearDisplaySessionHandler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void EndRearDisplaySession();
    [NullableContextAttribute("1")]
[RegisterAttribute("removeRearDisplayStatusListener", "(Landroidx/window/extensions/core/util/function/Consumer;)V", "GetRemoveRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void RemoveRearDisplayStatusListener(IConsumer p0);
    [NullableContextAttribute("1")]
[RegisterAttribute("startRearDisplaySession", "(Landroid/app/Activity;Landroidx/window/extensions/core/util/function/Consumer;)V", "GetStartRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_Handler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void StartRearDisplaySession(Activity p0, IConsumer p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/reflectionguard/WindowAreaComponentApi2Requirements")]
internal class AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi2RequirementsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_addRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_addRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_endRearDisplaySession;
    private IntPtr id_endRearDisplaySession;
    [NullableAttribute("2")]
private static Delegate cb_removeRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_removeRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_startRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_startRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaComponentApi2RequirementsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaComponentApi2RequirementsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaComponentApi2Requirements GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAddRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_AddRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddRearDisplayStatusListener(IConsumer p0);
    private static Delegate GetEndRearDisplaySessionHandler();
    private static void n_EndRearDisplaySession(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void EndRearDisplaySession();
    private static Delegate GetRemoveRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_RemoveRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveRearDisplayStatusListener(IConsumer p0);
    private static Delegate GetStartRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_StartRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void StartRearDisplaySession(Activity p0, IConsumer p1);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/area/reflectionguard/WindowAreaComponentApi3Requirements", "", "AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3RequirementsInvoker")]
public interface AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3Requirements {
    [NullableAttribute("1")]
public DisplayMetrics RearDisplayMetrics { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getRearDisplayMetrics", "()Landroid/util/DisplayMetrics;", "GetGetRearDisplayMetricsHandler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual DisplayMetrics get_RearDisplayMetrics();
    [RegisterAttribute("endRearDisplayPresentationSession", "()V", "GetEndRearDisplayPresentationSessionHandler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void EndRearDisplayPresentationSession();
    [NullableContextAttribute("1")]
[RegisterAttribute("startRearDisplayPresentationSession", "(Landroid/app/Activity;Landroidx/window/extensions/core/util/function/Consumer;)V", "GetStartRearDisplayPresentationSession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_Handler:AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3RequirementsInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void StartRearDisplayPresentationSession(Activity p0, IConsumer p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/reflectionguard/WindowAreaComponentApi3Requirements")]
internal class AndroidX.Window.Area.ReflectionGuard.IWindowAreaComponentApi3RequirementsInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getRearDisplayMetrics;
    private IntPtr id_getRearDisplayMetrics;
    [NullableAttribute("2")]
private static Delegate cb_endRearDisplayPresentationSession;
    private IntPtr id_endRearDisplayPresentationSession;
    [NullableAttribute("2")]
private static Delegate cb_startRearDisplayPresentationSession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_startRearDisplayPresentationSession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_addRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_addRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_endRearDisplaySession;
    private IntPtr id_endRearDisplaySession;
    [NullableAttribute("2")]
private static Delegate cb_removeRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_removeRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_startRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    private IntPtr id_startRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public DisplayMetrics RearDisplayMetrics { get; }
    public IWindowAreaComponentApi3RequirementsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowAreaComponentApi3RequirementsInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowAreaComponentApi3Requirements GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetRearDisplayMetricsHandler();
    private static IntPtr n_GetRearDisplayMetrics(IntPtr jnienv, IntPtr native__this);
    public sealed virtual DisplayMetrics get_RearDisplayMetrics();
    private static Delegate GetEndRearDisplayPresentationSessionHandler();
    private static void n_EndRearDisplayPresentationSession(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void EndRearDisplayPresentationSession();
    private static Delegate GetStartRearDisplayPresentationSession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_StartRearDisplayPresentationSession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void StartRearDisplayPresentationSession(Activity p0, IConsumer p1);
    private static Delegate GetAddRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_AddRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void AddRearDisplayStatusListener(IConsumer p0);
    private static Delegate GetEndRearDisplaySessionHandler();
    private static void n_EndRearDisplaySession(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void EndRearDisplaySession();
    private static Delegate GetRemoveRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_RemoveRearDisplayStatusListener_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual void RemoveRearDisplayStatusListener(IConsumer p0);
    private static Delegate GetStartRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_Handler();
    private static void n_StartRearDisplaySession_Landroid_app_Activity_Landroidx_window_extensions_core_util_function_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_p1);
    public sealed virtual void StartRearDisplaySession(Activity p0, IConsumer p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaCapability")]
public class AndroidX.Window.Area.WindowAreaCapability : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WindowAreaCapability(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowAreaCapability();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOperation", "()Landroidx/window/area/WindowAreaCapability$Operation;", "")]
public Operation GetOperation();
    [RegisterAttribute("getStatus", "()Landroidx/window/area/WindowAreaCapability$Status;", "")]
public Status GetStatus();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaController")]
public abstract class AndroidX.Window.Area.WindowAreaController : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static WindowAreaControllerCompanion Companion { get; }
    private static WindowAreaController();
    public static WindowAreaControllerCompanion get_Companion();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/area/WindowAreaControllerDecorator;)V", "")]
public static void OverrideDecorator(IWindowAreaControllerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaController$Companion")]
public class AndroidX.Window.Area.WindowAreaControllerCompanion : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowAreaController OrCreate { get; }
    internal WindowAreaControllerCompanion(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowAreaControllerCompanion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrCreate", "()Landroidx/window/area/WindowAreaController;", "")]
public IWindowAreaController get_OrCreate();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/area/WindowAreaControllerDecorator;)V", "")]
public void OverrideDecorator(IWindowAreaControllerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public void Reset();
}
[RegisterAttribute("androidx/window/area/WindowAreaController")]
[ObsoleteAttribute("Use the 'WindowAreaController' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Window.Area.WindowAreaControllerConsts : WindowAreaController {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/area/WindowAreaInfo")]
public class AndroidX.Window.Area.WindowAreaInfo : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public WindowMetrics Metrics { get; public set; }
    public Binder Token { get; }
    internal WindowAreaInfo(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowAreaInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getMetrics", "()Landroidx/window/layout/WindowMetrics;", "")]
public WindowMetrics get_Metrics();
    [RegisterAttribute("setMetrics", "(Landroidx/window/layout/WindowMetrics;)V", "")]
public void set_Metrics(WindowMetrics value);
    [RegisterAttribute("getToken", "()Landroid/os/Binder;", "")]
public Binder get_Token();
    [RegisterAttribute("getActiveSession", "(Landroidx/window/area/WindowAreaCapability$Operation;)Landroidx/window/area/WindowAreaSession;", "")]
public IWindowAreaSession GetActiveSession(Operation operation);
    [RegisterAttribute("getCapability", "(Landroidx/window/area/WindowAreaCapability$Operation;)Landroidx/window/area/WindowAreaCapability;", "")]
public WindowAreaCapability GetCapability(Operation operation);
    [RegisterAttribute("getType", "()Landroidx/window/area/WindowAreaInfo$Type;", "")]
public Type GetType();
}
[AnnotationAttribute("androidx.window.core.ExperimentalWindowApi")]
public class AndroidX.Window.Core.ExperimentalWindowApiAttribute : Attribute {
}
[RegisterAttribute("androidx/window/core/ExperimentalWindowApi", "", "AndroidX.Window.Core.IExperimentalWindowApiInvoker")]
public interface AndroidX.Window.Core.IExperimentalWindowApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/core/ExperimentalWindowApi")]
internal class AndroidX.Window.Core.IExperimentalWindowApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IExperimentalWindowApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExperimentalWindowApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IExperimentalWindowApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/ActivityEmbeddingController")]
public class AndroidX.Window.Embedding.ActivityEmbeddingController : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ActivityEmbeddingController(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityEmbeddingController();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getActivityStack", "(Landroid/app/Activity;)Landroidx/window/embedding/ActivityStack;", "")]
public ActivityStack GetActivityStack(Activity activity);
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/ActivityEmbeddingController;", "")]
public static ActivityEmbeddingController GetInstance(Context context);
    [RegisterAttribute("isActivityEmbedded", "(Landroid/app/Activity;)Z", "")]
public bool IsActivityEmbedded(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/ActivityFilter")]
public class AndroidX.Window.Embedding.ActivityFilter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ComponentName ComponentName { get; }
    [NullableAttribute("2")]
public string IntentAction { get; }
    internal ActivityFilter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/ComponentName;Ljava/lang/String;)V", "")]
public ActivityFilter(ComponentName componentName, string intentAction);
    private static ActivityFilter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getComponentName", "()Landroid/content/ComponentName;", "")]
public ComponentName get_ComponentName();
    [NullableContextAttribute("2")]
[RegisterAttribute("getIntentAction", "()Ljava/lang/String;", "")]
public string get_IntentAction();
    [RegisterAttribute("matchesActivity", "(Landroid/app/Activity;)Z", "")]
public bool MatchesActivity(Activity activity);
    [RegisterAttribute("matchesIntent", "(Landroid/content/Intent;)Z", "")]
public bool MatchesIntent(Intent intent);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/ActivityRule")]
public class AndroidX.Window.Embedding.ActivityRule : EmbeddingRule {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool AlwaysExpand { get; }
    public ICollection`1<ActivityFilter> Filters { get; }
    internal ActivityRule(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActivityRule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getAlwaysExpand", "()Z", "")]
public bool get_AlwaysExpand();
    [RegisterAttribute("getFilters", "()Ljava/util/Set;", "")]
public ICollection`1<ActivityFilter> get_Filters();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/ActivityStack")]
public class AndroidX.Window.Embedding.ActivityStack : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsEmpty { get; }
    internal ActivityStack(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;Z)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public ActivityStack(IList`1<Activity> activitiesInProcess, bool isEmpty);
    private static ActivityStack();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isEmpty", "()Z", "")]
public bool get_IsEmpty();
    [RegisterAttribute("contains", "(Landroid/app/Activity;)Z", "")]
public bool Contains(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingAspectRatio")]
public class AndroidX.Window.Embedding.EmbeddingAspectRatio : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("ALWAYS_ALLOW")]
public static EmbeddingAspectRatio AlwaysAllow { get; }
    [RegisterAttribute("ALWAYS_DISALLOW")]
public static EmbeddingAspectRatio AlwaysDisallow { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EmbeddingAspectRatio(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;FLkotlin/jvm/internal/DefaultConstructorMarker;)V", "")]
public EmbeddingAspectRatio(string description, float value, DefaultConstructorMarker _constructor_marker);
    private static EmbeddingAspectRatio();
    public static EmbeddingAspectRatio get_AlwaysAllow();
    public static EmbeddingAspectRatio get_AlwaysDisallow();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("ratio", "(F)Landroidx/window/embedding/EmbeddingAspectRatio;", "")]
public static EmbeddingAspectRatio Ratio(float ratio);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackend")]
public abstract class AndroidX.Window.Embedding.EmbeddingBackend : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static EmbeddingBackendCompanion Companion { get; }
    private static EmbeddingBackend();
    public static EmbeddingBackendCompanion get_Companion();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/EmbeddingBackend;", "")]
public static IEmbeddingBackend GetInstance(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/embedding/EmbeddingBackendDecorator;)V", "")]
public static void OverrideDecorator(IEmbeddingBackendDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackend$Companion")]
public class AndroidX.Window.Embedding.EmbeddingBackendCompanion : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EmbeddingBackendCompanion(IntPtr javaReference, JniHandleOwnership transfer);
    private static EmbeddingBackendCompanion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/EmbeddingBackend;", "")]
public IEmbeddingBackend GetInstance(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/embedding/EmbeddingBackendDecorator;)V", "")]
public void OverrideDecorator(IEmbeddingBackendDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public void Reset();
}
[RegisterAttribute("androidx/window/embedding/EmbeddingBackend")]
[ObsoleteAttribute("Use the 'EmbeddingBackend' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Window.Embedding.EmbeddingBackendConsts : EmbeddingBackend {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingRule")]
public abstract class AndroidX.Window.Embedding.EmbeddingRule : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public string Tag { get; }
    protected EmbeddingRule(IntPtr javaReference, JniHandleOwnership transfer);
    private static EmbeddingRule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getTag", "()Ljava/lang/String;", "")]
public string get_Tag();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingRule")]
internal class AndroidX.Window.Embedding.EmbeddingRuleInvoker : EmbeddingRule {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public EmbeddingRuleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static EmbeddingRuleInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackend", "", "AndroidX.Window.Embedding.IEmbeddingBackendInvoker")]
public interface AndroidX.Window.Embedding.IEmbeddingBackend {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static EmbeddingBackendCompanion Companion { get; }
    public ICollection`1<EmbeddingRule> Rules { get; public set; }
    public SplitSupportStatus SplitSupportStatus { get; }
    private static IEmbeddingBackend();
    public static EmbeddingBackendCompanion get_Companion();
    [RegisterAttribute("getRules", "()Ljava/util/Set;", "GetGetRulesHandler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual ICollection`1<EmbeddingRule> get_Rules();
    [RegisterAttribute("setRules", "(Ljava/util/Set;)V", "GetSetRules_Ljava_util_Set_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void set_Rules(ICollection`1<EmbeddingRule> value);
    [RegisterAttribute("getSplitSupportStatus", "()Landroidx/window/embedding/SplitController$SplitSupportStatus;", "GetGetSplitSupportStatusHandler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual SplitSupportStatus get_SplitSupportStatus();
    [RegisterAttribute("addRule", "(Landroidx/window/embedding/EmbeddingRule;)V", "GetAddRule_Landroidx_window_embedding_EmbeddingRule_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void AddRule(EmbeddingRule rule);
    [RegisterAttribute("addSplitListenerForActivity", "(Landroid/app/Activity;Ljava/util/concurrent/Executor;Landroidx/core/util/Consumer;)V", "GetAddSplitListenerForActivity_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_core_util_Consumer_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void AddSplitListenerForActivity(Activity activity, IExecutor executor, IConsumer callback);
    [RegisterAttribute("clearSplitAttributesCalculator", "()V", "GetClearSplitAttributesCalculatorHandler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void ClearSplitAttributesCalculator();
    [RegisterAttribute("getActivityStack", "(Landroid/app/Activity;)Landroidx/window/embedding/ActivityStack;", "GetGetActivityStack_Landroid_app_Activity_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual ActivityStack GetActivityStack(Activity activity);
    [RegisterAttribute("invalidateTopVisibleSplitAttributes", "()V", "GetInvalidateTopVisibleSplitAttributesHandler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void InvalidateTopVisibleSplitAttributes();
    [RegisterAttribute("isActivityEmbedded", "(Landroid/app/Activity;)Z", "GetIsActivityEmbedded_Landroid_app_Activity_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual bool IsActivityEmbedded(Activity activity);
    [RegisterAttribute("removeRule", "(Landroidx/window/embedding/EmbeddingRule;)V", "GetRemoveRule_Landroidx_window_embedding_EmbeddingRule_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void RemoveRule(EmbeddingRule rule);
    [RegisterAttribute("removeSplitListenerForActivity", "(Landroidx/core/util/Consumer;)V", "GetRemoveSplitListenerForActivity_Landroidx_core_util_Consumer_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void RemoveSplitListenerForActivity(IConsumer consumer);
    [RegisterAttribute("setLaunchingActivityStack", "(Landroid/app/ActivityOptions;Landroid/os/IBinder;)Landroid/app/ActivityOptions;", "GetSetLaunchingActivityStack_Landroid_app_ActivityOptions_Landroid_os_IBinder_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual ActivityOptions SetLaunchingActivityStack(ActivityOptions options, IBinder token);
    [RegisterAttribute("setSplitAttributesCalculator", "(Lkotlin/jvm/functions/Function1;)V", "GetSetSplitAttributesCalculator_Lkotlin_jvm_functions_Function1_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void SetSplitAttributesCalculator(IFunction1 calculator);
    [RegisterAttribute("updateSplitAttributes", "(Landroidx/window/embedding/SplitInfo;Landroidx/window/embedding/SplitAttributes;)V", "GetUpdateSplitAttributes_Landroidx_window_embedding_SplitInfo_Landroidx_window_embedding_SplitAttributes_Handler:AndroidX.Window.Embedding.IEmbeddingBackendInvoker, Xamarin.AndroidX.Window")]
public abstract virtual void UpdateSplitAttributes(SplitInfo splitInfo, SplitAttributes splitAttributes);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/EmbeddingBackend;", "")]
public static IEmbeddingBackend GetInstance(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/embedding/EmbeddingBackendDecorator;)V", "")]
public static void OverrideDecorator(IEmbeddingBackendDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackendDecorator", "", "AndroidX.Window.Embedding.IEmbeddingBackendDecoratorInvoker")]
public interface AndroidX.Window.Embedding.IEmbeddingBackendDecorator {
    [NullableContextAttribute("1")]
[RegisterAttribute("decorate", "(Landroidx/window/embedding/EmbeddingBackend;)Landroidx/window/embedding/EmbeddingBackend;", "GetDecorate_Landroidx_window_embedding_EmbeddingBackend_Handler:AndroidX.Window.Embedding.IEmbeddingBackendDecoratorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IEmbeddingBackend Decorate(IEmbeddingBackend embeddingBackend);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackendDecorator")]
internal class AndroidX.Window.Embedding.IEmbeddingBackendDecoratorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_decorate_Landroidx_window_embedding_EmbeddingBackend_;
    private IntPtr id_decorate_Landroidx_window_embedding_EmbeddingBackend_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IEmbeddingBackendDecoratorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IEmbeddingBackendDecoratorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IEmbeddingBackendDecorator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDecorate_Landroidx_window_embedding_EmbeddingBackend_Handler();
    private static IntPtr n_Decorate_Landroidx_window_embedding_EmbeddingBackend_(IntPtr jnienv, IntPtr native__this, IntPtr native_embeddingBackend);
    public sealed virtual IEmbeddingBackend Decorate(IEmbeddingBackend embeddingBackend);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/EmbeddingBackend")]
internal class AndroidX.Window.Embedding.IEmbeddingBackendInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getRules;
    [NullableAttribute("2")]
private static Delegate cb_setRules_Ljava_util_Set_;
    private IntPtr id_getRules;
    private IntPtr id_setRules_Ljava_util_Set_;
    [NullableAttribute("2")]
private static Delegate cb_getSplitSupportStatus;
    private IntPtr id_getSplitSupportStatus;
    [NullableAttribute("2")]
private static Delegate cb_addRule_Landroidx_window_embedding_EmbeddingRule_;
    private IntPtr id_addRule_Landroidx_window_embedding_EmbeddingRule_;
    [NullableAttribute("2")]
private static Delegate cb_addSplitListenerForActivity_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_core_util_Consumer_;
    private IntPtr id_addSplitListenerForActivity_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_clearSplitAttributesCalculator;
    private IntPtr id_clearSplitAttributesCalculator;
    [NullableAttribute("2")]
private static Delegate cb_getActivityStack_Landroid_app_Activity_;
    private IntPtr id_getActivityStack_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_invalidateTopVisibleSplitAttributes;
    private IntPtr id_invalidateTopVisibleSplitAttributes;
    [NullableAttribute("2")]
private static Delegate cb_isActivityEmbedded_Landroid_app_Activity_;
    private IntPtr id_isActivityEmbedded_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_removeRule_Landroidx_window_embedding_EmbeddingRule_;
    private IntPtr id_removeRule_Landroidx_window_embedding_EmbeddingRule_;
    [NullableAttribute("2")]
private static Delegate cb_removeSplitListenerForActivity_Landroidx_core_util_Consumer_;
    private IntPtr id_removeSplitListenerForActivity_Landroidx_core_util_Consumer_;
    [NullableAttribute("2")]
private static Delegate cb_setLaunchingActivityStack_Landroid_app_ActivityOptions_Landroid_os_IBinder_;
    private IntPtr id_setLaunchingActivityStack_Landroid_app_ActivityOptions_Landroid_os_IBinder_;
    [NullableAttribute("2")]
private static Delegate cb_setSplitAttributesCalculator_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_setSplitAttributesCalculator_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_updateSplitAttributes_Landroidx_window_embedding_SplitInfo_Landroidx_window_embedding_SplitAttributes_;
    private IntPtr id_updateSplitAttributes_Landroidx_window_embedding_SplitInfo_Landroidx_window_embedding_SplitAttributes_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<EmbeddingRule> Rules { get; public set; }
    public SplitSupportStatus SplitSupportStatus { get; }
    public IEmbeddingBackendInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IEmbeddingBackendInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IEmbeddingBackend GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetRulesHandler();
    private static IntPtr n_GetRules(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetRules_Ljava_util_Set_Handler();
    private static void n_SetRules_Ljava_util_Set_(IntPtr jnienv, IntPtr native__this, IntPtr native_rules);
    public sealed virtual ICollection`1<EmbeddingRule> get_Rules();
    public sealed virtual void set_Rules(ICollection`1<EmbeddingRule> value);
    private static Delegate GetGetSplitSupportStatusHandler();
    private static IntPtr n_GetSplitSupportStatus(IntPtr jnienv, IntPtr native__this);
    public sealed virtual SplitSupportStatus get_SplitSupportStatus();
    private static Delegate GetAddRule_Landroidx_window_embedding_EmbeddingRule_Handler();
    private static void n_AddRule_Landroidx_window_embedding_EmbeddingRule_(IntPtr jnienv, IntPtr native__this, IntPtr native_rule);
    public sealed virtual void AddRule(EmbeddingRule rule);
    private static Delegate GetAddSplitListenerForActivity_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_core_util_Consumer_Handler();
    private static void n_AddSplitListenerForActivity_Landroid_app_Activity_Ljava_util_concurrent_Executor_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity, IntPtr native_executor, IntPtr native__callback);
    public sealed virtual void AddSplitListenerForActivity(Activity activity, IExecutor executor, IConsumer callback);
    private static Delegate GetClearSplitAttributesCalculatorHandler();
    private static void n_ClearSplitAttributesCalculator(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ClearSplitAttributesCalculator();
    private static Delegate GetGetActivityStack_Landroid_app_Activity_Handler();
    private static IntPtr n_GetActivityStack_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual ActivityStack GetActivityStack(Activity activity);
    private static Delegate GetInvalidateTopVisibleSplitAttributesHandler();
    private static void n_InvalidateTopVisibleSplitAttributes(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void InvalidateTopVisibleSplitAttributes();
    private static Delegate GetIsActivityEmbedded_Landroid_app_Activity_Handler();
    private static bool n_IsActivityEmbedded_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual bool IsActivityEmbedded(Activity activity);
    private static Delegate GetRemoveRule_Landroidx_window_embedding_EmbeddingRule_Handler();
    private static void n_RemoveRule_Landroidx_window_embedding_EmbeddingRule_(IntPtr jnienv, IntPtr native__this, IntPtr native_rule);
    public sealed virtual void RemoveRule(EmbeddingRule rule);
    private static Delegate GetRemoveSplitListenerForActivity_Landroidx_core_util_Consumer_Handler();
    private static void n_RemoveSplitListenerForActivity_Landroidx_core_util_Consumer_(IntPtr jnienv, IntPtr native__this, IntPtr native_consumer);
    public sealed virtual void RemoveSplitListenerForActivity(IConsumer consumer);
    private static Delegate GetSetLaunchingActivityStack_Landroid_app_ActivityOptions_Landroid_os_IBinder_Handler();
    private static IntPtr n_SetLaunchingActivityStack_Landroid_app_ActivityOptions_Landroid_os_IBinder_(IntPtr jnienv, IntPtr native__this, IntPtr native_options, IntPtr native_token);
    public sealed virtual ActivityOptions SetLaunchingActivityStack(ActivityOptions options, IBinder token);
    private static Delegate GetSetSplitAttributesCalculator_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_SetSplitAttributesCalculator_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_calculator);
    public sealed virtual void SetSplitAttributesCalculator(IFunction1 calculator);
    private static Delegate GetUpdateSplitAttributes_Landroidx_window_embedding_SplitInfo_Landroidx_window_embedding_SplitAttributes_Handler();
    private static void n_UpdateSplitAttributes_Landroidx_window_embedding_SplitInfo_Landroidx_window_embedding_SplitAttributes_(IntPtr jnienv, IntPtr native__this, IntPtr native_splitInfo, IntPtr native_splitAttributes);
    public sealed virtual void UpdateSplitAttributes(SplitInfo splitInfo, SplitAttributes splitAttributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/RuleController")]
public class AndroidX.Window.Embedding.RuleController : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<EmbeddingRule> Rules { get; public set; }
    internal RuleController(IntPtr javaReference, JniHandleOwnership transfer);
    private static RuleController();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getRules", "()Ljava/util/Set;", "")]
public ICollection`1<EmbeddingRule> get_Rules();
    [RegisterAttribute("setRules", "(Ljava/util/Set;)V", "")]
public void set_Rules(ICollection`1<EmbeddingRule> value);
    [RegisterAttribute("addRule", "(Landroidx/window/embedding/EmbeddingRule;)V", "")]
public void AddRule(EmbeddingRule rule);
    [RegisterAttribute("clearRules", "()V", "")]
public void ClearRules();
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/RuleController;", "")]
public static RuleController GetInstance(Context context);
    [RegisterAttribute("parseRules", "(Landroid/content/Context;I)Ljava/util/Set;", "")]
public static ICollection`1<EmbeddingRule> ParseRules(Context context, int staticRuleResourceId);
    [RegisterAttribute("removeRule", "(Landroidx/window/embedding/EmbeddingRule;)V", "")]
public void RemoveRule(EmbeddingRule rule);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitAttributes")]
public class AndroidX.Window.Embedding.SplitAttributes : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SplitAttributes(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/window/embedding/SplitAttributes$SplitType;Landroidx/window/embedding/SplitAttributes$LayoutDirection;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public SplitAttributes(SplitType splitType, LayoutDirection layoutDirection);
    private static SplitAttributes();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getLayoutDirection", "()Landroidx/window/embedding/SplitAttributes$LayoutDirection;", "")]
public LayoutDirection GetLayoutDirection();
    [RegisterAttribute("getSplitType", "()Landroidx/window/embedding/SplitAttributes$SplitType;", "")]
public SplitType GetSplitType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitAttributesCalculatorParams")]
public class AndroidX.Window.Embedding.SplitAttributesCalculatorParams : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public SplitAttributes DefaultSplitAttributes { get; }
    public Configuration ParentConfiguration { get; }
    public WindowLayoutInfo ParentWindowLayoutInfo { get; }
    public WindowMetrics ParentWindowMetrics { get; }
    [NullableAttribute("2")]
public string SplitRuleTag { get; }
    internal SplitAttributesCalculatorParams(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/window/layout/WindowMetrics;Landroid/content/res/Configuration;Landroidx/window/layout/WindowLayoutInfo;Landroidx/window/embedding/SplitAttributes;ZLjava/lang/String;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public SplitAttributesCalculatorParams(WindowMetrics parentWindowMetrics, Configuration parentConfiguration, WindowLayoutInfo parentWindowLayoutInfo, SplitAttributes defaultSplitAttributes, bool areDefaultConstraintsSatisfied, string splitRuleTag);
    private static SplitAttributesCalculatorParams();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDefaultSplitAttributes", "()Landroidx/window/embedding/SplitAttributes;", "")]
public SplitAttributes get_DefaultSplitAttributes();
    [RegisterAttribute("getParentConfiguration", "()Landroid/content/res/Configuration;", "")]
public Configuration get_ParentConfiguration();
    [RegisterAttribute("getParentWindowLayoutInfo", "()Landroidx/window/layout/WindowLayoutInfo;", "")]
public WindowLayoutInfo get_ParentWindowLayoutInfo();
    [RegisterAttribute("getParentWindowMetrics", "()Landroidx/window/layout/WindowMetrics;", "")]
public WindowMetrics get_ParentWindowMetrics();
    [NullableContextAttribute("2")]
[RegisterAttribute("getSplitRuleTag", "()Ljava/lang/String;", "")]
public string get_SplitRuleTag();
    [RegisterAttribute("areDefaultConstraintsSatisfied", "()Z", "")]
public bool AreDefaultConstraintsSatisfied();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitController")]
public class AndroidX.Window.Embedding.SplitController : Object {
    [RegisterAttribute("sDebug")]
public static bool SDebug;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SplitController(IntPtr javaReference, JniHandleOwnership transfer);
    private static SplitController();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("clearSplitAttributesCalculator", "()V", "")]
public void ClearSplitAttributesCalculator();
    [RegisterAttribute("getInstance", "(Landroid/content/Context;)Landroidx/window/embedding/SplitController;", "")]
public static SplitController GetInstance(Context context);
    [RegisterAttribute("getSplitSupportStatus", "()Landroidx/window/embedding/SplitController$SplitSupportStatus;", "")]
public SplitSupportStatus GetSplitSupportStatus();
    [RegisterAttribute("invalidateTopVisibleSplitAttributes", "()V", "")]
public void InvalidateTopVisibleSplitAttributes();
    [RegisterAttribute("setSplitAttributesCalculator", "(Lkotlin/jvm/functions/Function1;)V", "")]
public void SetSplitAttributesCalculator(IFunction1 calculator);
    [RegisterAttribute("splitInfoList", "(Landroid/app/Activity;)Lkotlinx/coroutines/flow/Flow;", "")]
public IFlow SplitInfoList(Activity activity);
    [RegisterAttribute("updateSplitAttributes", "(Landroidx/window/embedding/SplitInfo;Landroidx/window/embedding/SplitAttributes;)V", "")]
public void UpdateSplitAttributes(SplitInfo splitInfo, SplitAttributes splitAttributes);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitInfo")]
public class AndroidX.Window.Embedding.SplitInfo : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ActivityStack PrimaryActivityStack { get; }
    public ActivityStack SecondaryActivityStack { get; }
    public SplitAttributes SplitAttributes { get; }
    internal SplitInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroidx/window/embedding/ActivityStack;Landroidx/window/embedding/ActivityStack;Landroidx/window/embedding/SplitAttributes;Landroid/os/IBinder;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public SplitInfo(ActivityStack primaryActivityStack, ActivityStack secondaryActivityStack, SplitAttributes splitAttributes, IBinder token);
    private static SplitInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getPrimaryActivityStack", "()Landroidx/window/embedding/ActivityStack;", "")]
public ActivityStack get_PrimaryActivityStack();
    [RegisterAttribute("getSecondaryActivityStack", "()Landroidx/window/embedding/ActivityStack;", "")]
public ActivityStack get_SecondaryActivityStack();
    [RegisterAttribute("getSplitAttributes", "()Landroidx/window/embedding/SplitAttributes;", "")]
public SplitAttributes get_SplitAttributes();
    [RegisterAttribute("contains", "(Landroid/app/Activity;)Z", "")]
public bool Contains(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitPairFilter")]
public class AndroidX.Window.Embedding.SplitPairFilter : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ComponentName PrimaryActivityName { get; }
    [NullableAttribute("2")]
public string SecondaryActivityIntentAction { get; }
    public ComponentName SecondaryActivityName { get; }
    internal SplitPairFilter(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/ComponentName;Landroid/content/ComponentName;Ljava/lang/String;)V", "")]
public SplitPairFilter(ComponentName primaryActivityName, ComponentName secondaryActivityName, string secondaryActivityIntentAction);
    private static SplitPairFilter();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getPrimaryActivityName", "()Landroid/content/ComponentName;", "")]
public ComponentName get_PrimaryActivityName();
    [NullableContextAttribute("2")]
[RegisterAttribute("getSecondaryActivityIntentAction", "()Ljava/lang/String;", "")]
public string get_SecondaryActivityIntentAction();
    [RegisterAttribute("getSecondaryActivityName", "()Landroid/content/ComponentName;", "")]
public ComponentName get_SecondaryActivityName();
    [RegisterAttribute("matchesActivityIntentPair", "(Landroid/app/Activity;Landroid/content/Intent;)Z", "")]
public bool MatchesActivityIntentPair(Activity primaryActivity, Intent secondaryActivityIntent);
    [RegisterAttribute("matchesActivityPair", "(Landroid/app/Activity;Landroid/app/Activity;)Z", "")]
public bool MatchesActivityPair(Activity primaryActivity, Activity secondaryActivity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitPairRule")]
public class AndroidX.Window.Embedding.SplitPairRule : SplitRule {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool ClearTop { get; }
    public ICollection`1<SplitPairFilter> Filters { get; }
    public FinishBehavior FinishPrimaryWithSecondary { get; }
    public FinishBehavior FinishSecondaryWithPrimary { get; }
    internal SplitPairRule(IntPtr javaReference, JniHandleOwnership transfer);
    private static SplitPairRule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getClearTop", "()Z", "")]
public bool get_ClearTop();
    [RegisterAttribute("getFilters", "()Ljava/util/Set;", "")]
public ICollection`1<SplitPairFilter> get_Filters();
    [RegisterAttribute("getFinishPrimaryWithSecondary", "()Landroidx/window/embedding/SplitRule$FinishBehavior;", "")]
public FinishBehavior get_FinishPrimaryWithSecondary();
    [RegisterAttribute("getFinishSecondaryWithPrimary", "()Landroidx/window/embedding/SplitRule$FinishBehavior;", "")]
public FinishBehavior get_FinishSecondaryWithPrimary();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitPlaceholderRule")]
public class AndroidX.Window.Embedding.SplitPlaceholderRule : SplitRule {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICollection`1<ActivityFilter> Filters { get; }
    public FinishBehavior FinishPrimaryWithPlaceholder { get; }
    public bool IsSticky { get; }
    public Intent PlaceholderIntent { get; }
    internal SplitPlaceholderRule(IntPtr javaReference, JniHandleOwnership transfer);
    private static SplitPlaceholderRule();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getFilters", "()Ljava/util/Set;", "")]
public ICollection`1<ActivityFilter> get_Filters();
    [RegisterAttribute("getFinishPrimaryWithPlaceholder", "()Landroidx/window/embedding/SplitRule$FinishBehavior;", "")]
public FinishBehavior get_FinishPrimaryWithPlaceholder();
    [RegisterAttribute("isSticky", "()Z", "")]
public bool get_IsSticky();
    [RegisterAttribute("getPlaceholderIntent", "()Landroid/content/Intent;", "")]
public Intent get_PlaceholderIntent();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/embedding/SplitRule")]
public class AndroidX.Window.Embedding.SplitRule : EmbeddingRule {
    [RegisterAttribute("SPLIT_MIN_DIMENSION_ALWAYS_ALLOW")]
public static int SplitMinDimensionAlwaysAllow;
    [RegisterAttribute("SPLIT_MIN_DIMENSION_DP_DEFAULT")]
public static int SplitMinDimensionDpDefault;
    private static JniPeerMembers _members;
    [RegisterAttribute("SPLIT_MAX_ASPECT_RATIO_LANDSCAPE_DEFAULT")]
public static EmbeddingAspectRatio SplitMaxAspectRatioLandscapeDefault { get; }
    [RegisterAttribute("SPLIT_MAX_ASPECT_RATIO_PORTRAIT_DEFAULT")]
public static EmbeddingAspectRatio SplitMaxAspectRatioPortraitDefault { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public SplitAttributes DefaultSplitAttributes { get; }
    public EmbeddingAspectRatio MaxAspectRatioInLandscape { get; }
    public EmbeddingAspectRatio MaxAspectRatioInPortrait { get; }
    public int MinHeightDp { get; }
    public int MinSmallestWidthDp { get; }
    public int MinWidthDp { get; }
    protected SplitRule(IntPtr javaReference, JniHandleOwnership transfer);
    private static SplitRule();
    public static EmbeddingAspectRatio get_SplitMaxAspectRatioLandscapeDefault();
    public static EmbeddingAspectRatio get_SplitMaxAspectRatioPortraitDefault();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDefaultSplitAttributes", "()Landroidx/window/embedding/SplitAttributes;", "")]
public SplitAttributes get_DefaultSplitAttributes();
    [RegisterAttribute("getMaxAspectRatioInLandscape", "()Landroidx/window/embedding/EmbeddingAspectRatio;", "")]
public EmbeddingAspectRatio get_MaxAspectRatioInLandscape();
    [RegisterAttribute("getMaxAspectRatioInPortrait", "()Landroidx/window/embedding/EmbeddingAspectRatio;", "")]
public EmbeddingAspectRatio get_MaxAspectRatioInPortrait();
    [RegisterAttribute("getMinHeightDp", "()I", "")]
public int get_MinHeightDp();
    [RegisterAttribute("getMinSmallestWidthDp", "()I", "")]
public int get_MinSmallestWidthDp();
    [RegisterAttribute("getMinWidthDp", "()I", "")]
public int get_MinWidthDp();
}
[RegisterAttribute("androidx/window/RequiresWindowSdkExtension", "", "AndroidX.Window.IRequiresWindowSdkExtensionInvoker")]
public interface AndroidX.Window.IRequiresWindowSdkExtension {
    [RegisterAttribute("version", "()I", "GetVersionHandler:AndroidX.Window.IRequiresWindowSdkExtensionInvoker, Xamarin.AndroidX.Window")]
public abstract virtual int Version();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/RequiresWindowSdkExtension")]
internal class AndroidX.Window.IRequiresWindowSdkExtensionInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_version;
    private IntPtr id_version;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IRequiresWindowSdkExtensionInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IRequiresWindowSdkExtensionInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IRequiresWindowSdkExtension GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetVersionHandler();
    private static int n_Version(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int Version();
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/FoldingFeature$OcclusionType")]
public class AndroidX.Window.Layout.FoldingFeatureOcclusionType : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("FULL")]
public static FoldingFeatureOcclusionType Full { get; }
    [RegisterAttribute("NONE")]
public static FoldingFeatureOcclusionType None { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FoldingFeatureOcclusionType(IntPtr javaReference, JniHandleOwnership transfer);
    private static FoldingFeatureOcclusionType();
    public static FoldingFeatureOcclusionType get_Full();
    public static FoldingFeatureOcclusionType get_None();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/FoldingFeature$Orientation")]
public class AndroidX.Window.Layout.FoldingFeatureOrientation : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("HORIZONTAL")]
public static FoldingFeatureOrientation Horizontal { get; }
    [RegisterAttribute("VERTICAL")]
public static FoldingFeatureOrientation Vertical { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FoldingFeatureOrientation(IntPtr javaReference, JniHandleOwnership transfer);
    private static FoldingFeatureOrientation();
    public static FoldingFeatureOrientation get_Horizontal();
    public static FoldingFeatureOrientation get_Vertical();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/FoldingFeature$State")]
public class AndroidX.Window.Layout.FoldingFeatureState : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("FLAT")]
public static FoldingFeatureState Flat { get; }
    [RegisterAttribute("HALF_OPENED")]
public static FoldingFeatureState HalfOpened { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FoldingFeatureState(IntPtr javaReference, JniHandleOwnership transfer);
    private static FoldingFeatureState();
    public static FoldingFeatureState get_Flat();
    public static FoldingFeatureState get_HalfOpened();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("androidx/window/layout/DisplayFeature", "", "AndroidX.Window.Layout.IDisplayFeatureInvoker")]
public interface AndroidX.Window.Layout.IDisplayFeature {
    [NullableAttribute("1")]
public Rect Bounds { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getBounds", "()Landroid/graphics/Rect;", "GetGetBoundsHandler:AndroidX.Window.Layout.IDisplayFeatureInvoker, Xamarin.AndroidX.Window")]
public abstract virtual Rect get_Bounds();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/DisplayFeature")]
internal class AndroidX.Window.Layout.IDisplayFeatureInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getBounds;
    private IntPtr id_getBounds;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Rect Bounds { get; }
    public IDisplayFeatureInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDisplayFeatureInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDisplayFeature GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetBoundsHandler();
    private static IntPtr n_GetBounds(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Rect get_Bounds();
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/window/layout/FoldingFeature", "", "AndroidX.Window.Layout.IFoldingFeatureInvoker")]
public interface AndroidX.Window.Layout.IFoldingFeature {
    public bool IsSeparating { get; }
    public FoldingFeatureOcclusionType OcclusionType { get; }
    public FoldingFeatureOrientation Orientation { get; }
    public FoldingFeatureState State { get; }
    [RegisterAttribute("isSeparating", "()Z", "GetIsSeparatingHandler:AndroidX.Window.Layout.IFoldingFeatureInvoker, Xamarin.AndroidX.Window")]
public abstract virtual bool get_IsSeparating();
    [RegisterAttribute("getOcclusionType", "()Landroidx/window/layout/FoldingFeature$OcclusionType;", "GetGetOcclusionTypeHandler:AndroidX.Window.Layout.IFoldingFeatureInvoker, Xamarin.AndroidX.Window")]
public abstract virtual FoldingFeatureOcclusionType get_OcclusionType();
    [RegisterAttribute("getOrientation", "()Landroidx/window/layout/FoldingFeature$Orientation;", "GetGetOrientationHandler:AndroidX.Window.Layout.IFoldingFeatureInvoker, Xamarin.AndroidX.Window")]
public abstract virtual FoldingFeatureOrientation get_Orientation();
    [RegisterAttribute("getState", "()Landroidx/window/layout/FoldingFeature$State;", "GetGetStateHandler:AndroidX.Window.Layout.IFoldingFeatureInvoker, Xamarin.AndroidX.Window")]
public abstract virtual FoldingFeatureState get_State();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/FoldingFeature")]
internal class AndroidX.Window.Layout.IFoldingFeatureInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isSeparating;
    private IntPtr id_isSeparating;
    [NullableAttribute("2")]
private static Delegate cb_getOcclusionType;
    private IntPtr id_getOcclusionType;
    [NullableAttribute("2")]
private static Delegate cb_getOrientation;
    private IntPtr id_getOrientation;
    [NullableAttribute("2")]
private static Delegate cb_getState;
    private IntPtr id_getState;
    [NullableAttribute("2")]
private static Delegate cb_getBounds;
    private IntPtr id_getBounds;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsSeparating { get; }
    public FoldingFeatureOcclusionType OcclusionType { get; }
    public FoldingFeatureOrientation Orientation { get; }
    public FoldingFeatureState State { get; }
    public Rect Bounds { get; }
    public IFoldingFeatureInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFoldingFeatureInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IFoldingFeature GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsSeparatingHandler();
    private static bool n_IsSeparating(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsSeparating();
    private static Delegate GetGetOcclusionTypeHandler();
    private static IntPtr n_GetOcclusionType(IntPtr jnienv, IntPtr native__this);
    public sealed virtual FoldingFeatureOcclusionType get_OcclusionType();
    private static Delegate GetGetOrientationHandler();
    private static IntPtr n_GetOrientation(IntPtr jnienv, IntPtr native__this);
    public sealed virtual FoldingFeatureOrientation get_Orientation();
    private static Delegate GetGetStateHandler();
    private static IntPtr n_GetState(IntPtr jnienv, IntPtr native__this);
    public sealed virtual FoldingFeatureState get_State();
    private static Delegate GetGetBoundsHandler();
    private static IntPtr n_GetBounds(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Rect get_Bounds();
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/window/layout/WindowInfoTracker", "", "AndroidX.Window.Layout.IWindowInfoTrackerInvoker")]
public interface AndroidX.Window.Layout.IWindowInfoTracker {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_windowLayoutInfo_Landroid_content_Context_;
    [RegisterAttribute("Companion")]
public static WindowInfoTrackerCompanion Companion { get; }
    private static IWindowInfoTracker();
    public static WindowInfoTrackerCompanion get_Companion();
    [RegisterAttribute("windowLayoutInfo", "(Landroid/app/Activity;)Lkotlinx/coroutines/flow/Flow;", "GetWindowLayoutInfo_Landroid_app_Activity_Handler:AndroidX.Window.Layout.IWindowInfoTrackerInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IFlow WindowLayoutInfo(Activity activity);
    [RegisterAttribute("getOrCreate", "(Landroid/content/Context;)Landroidx/window/layout/WindowInfoTracker;", "")]
public static IWindowInfoTracker GetOrCreate(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowInfoTrackerDecorator;)V", "")]
public static void OverrideDecorator(IWindowInfoTrackerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
    private static Delegate GetWindowLayoutInfo_Landroid_content_Context_Handler();
    private static IntPtr n_WindowLayoutInfo_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("windowLayoutInfo", "(Landroid/content/Context;)Lkotlinx/coroutines/flow/Flow;", "GetWindowLayoutInfo_Landroid_content_Context_Handler:AndroidX.Window.Layout.IWindowInfoTracker, Xamarin.AndroidX.Window")]
public virtual IFlow WindowLayoutInfo(Context context);
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/layout/WindowInfoTrackerDecorator", "", "AndroidX.Window.Layout.IWindowInfoTrackerDecoratorInvoker")]
public interface AndroidX.Window.Layout.IWindowInfoTrackerDecorator {
    [NullableContextAttribute("1")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("decorate", "(Landroidx/window/layout/WindowInfoTracker;)Landroidx/window/layout/WindowInfoTracker;", "GetDecorate_Landroidx_window_layout_WindowInfoTracker_Handler:AndroidX.Window.Layout.IWindowInfoTrackerDecoratorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IWindowInfoTracker Decorate(IWindowInfoTracker tracker);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowInfoTrackerDecorator")]
internal class AndroidX.Window.Layout.IWindowInfoTrackerDecoratorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_decorate_Landroidx_window_layout_WindowInfoTracker_;
    private IntPtr id_decorate_Landroidx_window_layout_WindowInfoTracker_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowInfoTrackerDecoratorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowInfoTrackerDecoratorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowInfoTrackerDecorator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDecorate_Landroidx_window_layout_WindowInfoTracker_Handler();
    private static IntPtr n_Decorate_Landroidx_window_layout_WindowInfoTracker_(IntPtr jnienv, IntPtr native__this, IntPtr native_tracker);
    public sealed virtual IWindowInfoTracker Decorate(IWindowInfoTracker tracker);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowInfoTracker")]
internal class AndroidX.Window.Layout.IWindowInfoTrackerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_windowLayoutInfo_Landroid_app_Activity_;
    private IntPtr id_windowLayoutInfo_Landroid_app_Activity_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowInfoTrackerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowInfoTrackerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowInfoTracker GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetWindowLayoutInfo_Landroid_app_Activity_Handler();
    private static IntPtr n_WindowLayoutInfo_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual IFlow WindowLayoutInfo(Activity activity);
}
[NullableContextAttribute("1")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculator", "", "AndroidX.Window.Layout.IWindowMetricsCalculatorInvoker")]
public interface AndroidX.Window.Layout.IWindowMetricsCalculator {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_computeCurrentWindowMetrics_Landroid_content_Context_;
    [NullableAttribute("2")]
private static Delegate cb_computeMaximumWindowMetrics_Landroid_content_Context_;
    [RegisterAttribute("Companion")]
public static WindowMetricsCalculatorCompanion Companion { get; }
    public static IWindowMetricsCalculator OrCreate { get; }
    private static IWindowMetricsCalculator();
    public static WindowMetricsCalculatorCompanion get_Companion();
    [RegisterAttribute("getOrCreate", "()Landroidx/window/layout/WindowMetricsCalculator;", "")]
public static IWindowMetricsCalculator get_OrCreate();
    [RegisterAttribute("computeCurrentWindowMetrics", "(Landroid/app/Activity;)Landroidx/window/layout/WindowMetrics;", "GetComputeCurrentWindowMetrics_Landroid_app_Activity_Handler:AndroidX.Window.Layout.IWindowMetricsCalculatorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual WindowMetrics ComputeCurrentWindowMetrics(Activity activity);
    [RegisterAttribute("computeMaximumWindowMetrics", "(Landroid/app/Activity;)Landroidx/window/layout/WindowMetrics;", "GetComputeMaximumWindowMetrics_Landroid_app_Activity_Handler:AndroidX.Window.Layout.IWindowMetricsCalculatorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual WindowMetrics ComputeMaximumWindowMetrics(Activity activity);
    private static Delegate GetComputeCurrentWindowMetrics_Landroid_content_Context_Handler();
    private static IntPtr n_ComputeCurrentWindowMetrics_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("computeCurrentWindowMetrics", "(Landroid/content/Context;)Landroidx/window/layout/WindowMetrics;", "GetComputeCurrentWindowMetrics_Landroid_content_Context_Handler:AndroidX.Window.Layout.IWindowMetricsCalculator, Xamarin.AndroidX.Window")]
public virtual WindowMetrics ComputeCurrentWindowMetrics(Context context);
    private static Delegate GetComputeMaximumWindowMetrics_Landroid_content_Context_Handler();
    private static IntPtr n_ComputeMaximumWindowMetrics_Landroid_content_Context_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("computeMaximumWindowMetrics", "(Landroid/content/Context;)Landroidx/window/layout/WindowMetrics;", "GetComputeMaximumWindowMetrics_Landroid_content_Context_Handler:AndroidX.Window.Layout.IWindowMetricsCalculator, Xamarin.AndroidX.Window")]
public virtual WindowMetrics ComputeMaximumWindowMetrics(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowMetricsCalculatorDecorator;)V", "")]
public static void OverrideDecorator(IWindowMetricsCalculatorDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculatorDecorator", "", "AndroidX.Window.Layout.IWindowMetricsCalculatorDecoratorInvoker")]
public interface AndroidX.Window.Layout.IWindowMetricsCalculatorDecorator {
    [NullableContextAttribute("1")]
[RegisterAttribute("decorate", "(Landroidx/window/layout/WindowMetricsCalculator;)Landroidx/window/layout/WindowMetricsCalculator;", "GetDecorate_Landroidx_window_layout_WindowMetricsCalculator_Handler:AndroidX.Window.Layout.IWindowMetricsCalculatorDecoratorInvoker, Xamarin.AndroidX.Window")]
public abstract virtual IWindowMetricsCalculator Decorate(IWindowMetricsCalculator calculator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculatorDecorator")]
internal class AndroidX.Window.Layout.IWindowMetricsCalculatorDecoratorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_decorate_Landroidx_window_layout_WindowMetricsCalculator_;
    private IntPtr id_decorate_Landroidx_window_layout_WindowMetricsCalculator_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowMetricsCalculatorDecoratorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowMetricsCalculatorDecoratorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowMetricsCalculatorDecorator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDecorate_Landroidx_window_layout_WindowMetricsCalculator_Handler();
    private static IntPtr n_Decorate_Landroidx_window_layout_WindowMetricsCalculator_(IntPtr jnienv, IntPtr native__this, IntPtr native_calculator);
    public sealed virtual IWindowMetricsCalculator Decorate(IWindowMetricsCalculator calculator);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculator")]
internal class AndroidX.Window.Layout.IWindowMetricsCalculatorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_computeCurrentWindowMetrics_Landroid_app_Activity_;
    private IntPtr id_computeCurrentWindowMetrics_Landroid_app_Activity_;
    [NullableAttribute("2")]
private static Delegate cb_computeMaximumWindowMetrics_Landroid_app_Activity_;
    private IntPtr id_computeMaximumWindowMetrics_Landroid_app_Activity_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowMetricsCalculatorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IWindowMetricsCalculatorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IWindowMetricsCalculator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetComputeCurrentWindowMetrics_Landroid_app_Activity_Handler();
    private static IntPtr n_ComputeCurrentWindowMetrics_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual WindowMetrics ComputeCurrentWindowMetrics(Activity activity);
    private static Delegate GetComputeMaximumWindowMetrics_Landroid_app_Activity_Handler();
    private static IntPtr n_ComputeMaximumWindowMetrics_Landroid_app_Activity_(IntPtr jnienv, IntPtr native__this, IntPtr native_activity);
    public sealed virtual WindowMetrics ComputeMaximumWindowMetrics(Activity activity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowInfoTracker")]
public abstract class AndroidX.Window.Layout.WindowInfoTracker : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static WindowInfoTrackerCompanion Companion { get; }
    private static WindowInfoTracker();
    public static WindowInfoTrackerCompanion get_Companion();
    [RegisterAttribute("getOrCreate", "(Landroid/content/Context;)Landroidx/window/layout/WindowInfoTracker;", "")]
public static IWindowInfoTracker GetOrCreate(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowInfoTrackerDecorator;)V", "")]
public static void OverrideDecorator(IWindowInfoTrackerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowInfoTracker$Companion")]
public class AndroidX.Window.Layout.WindowInfoTrackerCompanion : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WindowInfoTrackerCompanion(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowInfoTrackerCompanion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrCreate", "(Landroid/content/Context;)Landroidx/window/layout/WindowInfoTracker;", "")]
public IWindowInfoTracker GetOrCreate(Context context);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowInfoTrackerDecorator;)V", "")]
public void OverrideDecorator(IWindowInfoTrackerDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public void Reset();
}
[RegisterAttribute("androidx/window/layout/WindowInfoTracker")]
[ObsoleteAttribute("Use the 'WindowInfoTracker' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Window.Layout.WindowInfoTrackerConsts : WindowInfoTracker {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowLayoutInfo")]
public class AndroidX.Window.Layout.WindowLayoutInfo : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList`1<IDisplayFeature> DisplayFeatures { get; }
    internal WindowLayoutInfo(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/util/List;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public WindowLayoutInfo(IList`1<IDisplayFeature> displayFeatures);
    private static WindowLayoutInfo();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDisplayFeatures", "()Ljava/util/List;", "")]
public IList`1<IDisplayFeature> get_DisplayFeatures();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowMetrics")]
public class AndroidX.Window.Layout.WindowMetrics : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Rect Bounds { get; }
    public WindowInsetsCompat WindowInsets { get; }
    internal WindowMetrics(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/graphics/Rect;Landroidx/core/view/WindowInsetsCompat;)V", "")]
[ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
public WindowMetrics(Rect bounds, WindowInsetsCompat insets);
    private static WindowMetrics();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getBounds", "()Landroid/graphics/Rect;", "")]
public Rect get_Bounds();
    [RegisterAttribute("getWindowInsets", "()Landroidx/core/view/WindowInsetsCompat;", "")]
public WindowInsetsCompat get_WindowInsets();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculator")]
public abstract class AndroidX.Window.Layout.WindowMetricsCalculator : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static WindowMetricsCalculatorCompanion Companion { get; }
    private static WindowMetricsCalculator();
    public static WindowMetricsCalculatorCompanion get_Companion();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowMetricsCalculatorDecorator;)V", "")]
public static void OverrideDecorator(IWindowMetricsCalculatorDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public static void Reset();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculator$Companion")]
public class AndroidX.Window.Layout.WindowMetricsCalculatorCompanion : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IWindowMetricsCalculator OrCreate { get; }
    internal WindowMetricsCalculatorCompanion(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowMetricsCalculatorCompanion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getOrCreate", "()Landroidx/window/layout/WindowMetricsCalculator;", "")]
public IWindowMetricsCalculator get_OrCreate();
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("overrideDecorator", "(Landroidx/window/layout/WindowMetricsCalculatorDecorator;)V", "")]
public void OverrideDecorator(IWindowMetricsCalculatorDecorator overridingDecorator);
    [ObsoleteAttribute("While this member is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("reset", "()V", "")]
public void Reset();
}
[RegisterAttribute("androidx/window/layout/WindowMetricsCalculator")]
[ObsoleteAttribute("Use the 'WindowMetricsCalculator' type. This type will be removed in a future release.", "True")]
public abstract class AndroidX.Window.Layout.WindowMetricsCalculatorConsts : WindowMetricsCalculator {
}
[AnnotationAttribute("androidx.window.RequiresWindowSdkExtension")]
public class AndroidX.Window.RequiresWindowSdkExtensionAttribute : Attribute {
    [CompilerGeneratedAttribute]
private int <Version>k__BackingField;
    [RegisterAttribute("version")]
public int Version { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Version();
    [CompilerGeneratedAttribute]
public void set_Version(int value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/WindowProperties")]
public class AndroidX.Window.WindowProperties : Object {
    [RegisterAttribute("PROPERTY_ACTIVITY_EMBEDDING_ALLOW_SYSTEM_OVERRIDE")]
public static string PropertyActivityEmbeddingAllowSystemOverride;
    [RegisterAttribute("PROPERTY_ACTIVITY_EMBEDDING_SPLITS_ENABLED")]
public static string PropertyActivityEmbeddingSplitsEnabled;
    [RegisterAttribute("PROPERTY_COMPAT_ALLOW_IGNORING_ORIENTATION_REQUEST_WHEN_LOOP_DETECTED")]
public static string PropertyCompatAllowIgnoringOrientationRequestWhenLoopDetected;
    [RegisterAttribute("PROPERTY_COMPAT_ALLOW_MIN_ASPECT_RATIO_OVERRIDE")]
public static string PropertyCompatAllowMinAspectRatioOverride;
    [RegisterAttribute("PROPERTY_COMPAT_ALLOW_RESIZEABLE_ACTIVITY_OVERRIDES")]
public static string PropertyCompatAllowResizeableActivityOverrides;
    private static JniPeerMembers _members;
    [RegisterAttribute("INSTANCE")]
public static WindowProperties Instance { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WindowProperties(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowProperties();
    public static WindowProperties get_Instance();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/WindowSdkExtensions")]
public abstract class AndroidX.Window.WindowSdkExtensions : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getExtensionVersion;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int ExtensionVersion { get; }
    public static WindowSdkExtensions Instance { get; }
    protected WindowSdkExtensions(IntPtr javaReference, JniHandleOwnership transfer);
    private static WindowSdkExtensions();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetExtensionVersionHandler();
    private static int n_GetExtensionVersion(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExtensionVersion", "()I", "GetGetExtensionVersionHandler")]
public virtual int get_ExtensionVersion();
    [RegisterAttribute("getInstance", "()Landroidx/window/WindowSdkExtensions;", "")]
public static WindowSdkExtensions get_Instance();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("androidx/window/WindowSdkExtensions")]
internal class AndroidX.Window.WindowSdkExtensionsInvoker : WindowSdkExtensions {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public WindowSdkExtensionsInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static WindowSdkExtensionsInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_window_area_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_window_embedding_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_window_layout_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_androidx_window_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_androidx_window_area_package(string klass);
    private static Type lookup_androidx_window_embedding_package(string klass);
    private static Type lookup_androidx_window_layout_package(string klass);
    private static Type lookup_androidx_window_package(string klass);
}
