public class FFImageLoading.Forms.Platform.CachedImageRenderer : ViewRenderer`2<CachedImage, EvasImageContainer> {
    private IScheduledWork _currentTask;
    private IVisualElementController ElementController { get; }
    private IVisualElementController get_ElementController();
    public static void Init(FormsApplication application);
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Tizen.IVisualElementRenderer.GetDesiredSize(double widthConstraint, double heightConstraint);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<CachedImage> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    protected virtual void Dispose(bool disposing);
    private Task`1<Byte[]> GetImageAsPngAsync(GetImageAsPngArgs args);
    private Task`1<Byte[]> GetImageAsJpgAsync(GetImageAsJpgArgs args);
    private void UpdateAspect();
    private void UpdateImage();
    private void OnLoadFinished();
    private void OnSourceUpdated(object sender, EventArgs e);
    private void CancelIfNeeded();
    private static Size CalculateAspectedSize(double widthConstraint, double heightConstraint, Size original);
    [CompilerGeneratedAttribute]
private void <OnLoadFinished>b__13_0();
}
[PreserveAttribute]
internal class FFImageLoading.Forms.Platform.ImageSourceBinding : object {
    [CompilerGeneratedAttribute]
private ImageSource <ImageSource>k__BackingField;
    [CompilerGeneratedAttribute]
private string <Path>k__BackingField;
    [CompilerGeneratedAttribute]
private Func`2<CancellationToken, Task`1<Stream>> <Stream>k__BackingField;
    public ImageSource ImageSource { get; private set; }
    public string Path { get; private set; }
    public Func`2<CancellationToken, Task`1<Stream>> Stream { get; private set; }
    public ImageSourceBinding(ImageSource imageSource, string path);
    public ImageSourceBinding(Func`2<CancellationToken, Task`1<Stream>> stream);
    [CompilerGeneratedAttribute]
public sealed virtual ImageSource get_ImageSource();
    [CompilerGeneratedAttribute]
private void set_ImageSource(ImageSource value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_Path();
    [CompilerGeneratedAttribute]
private void set_Path(string value);
    [CompilerGeneratedAttribute]
public sealed virtual Func`2<CancellationToken, Task`1<Stream>> get_Stream();
    [CompilerGeneratedAttribute]
private void set_Stream(Func`2<CancellationToken, Task`1<Stream>> value);
    internal static ImageSourceBinding GetImageSourceBinding(ImageSource source, CachedImage element);
    public virtual bool Equals(object obj);
    public virtual int GetHashCode();
}
