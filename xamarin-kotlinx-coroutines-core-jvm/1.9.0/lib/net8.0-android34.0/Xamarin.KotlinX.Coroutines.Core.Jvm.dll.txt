[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("_COROUTINE/ArtificialStackFrames")]
public class _COROUTINE.ArtificialStackFrames : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ArtificialStackFrames(IntPtr javaReference, JniHandleOwnership transfer);
    private static ArtificialStackFrames();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("coroutineBoundary", "()Ljava/lang/StackTraceElement;", "")]
public StackTraceElement CoroutineBoundary();
    [RegisterAttribute("coroutineCreation", "()Ljava/lang/StackTraceElement;", "")]
public StackTraceElement CoroutineCreation();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("While this type is 'public', Google considers it internal API and reserves the right to modify or delete it in the future. Use at your own risk.")]
[RegisterAttribute("_COROUTINE/CoroutineDebuggingKt")]
public class _COROUTINE.CoroutineDebuggingKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static string ARTIFICIAL_FRAME_PACKAGE_NAME { get; }
    internal CoroutineDebuggingKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineDebuggingKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getARTIFICIAL_FRAME_PACKAGE_NAME", "()Ljava/lang/String;", "")]
public static string get_ARTIFICIAL_FRAME_PACKAGE_NAME();
}
internal class _JniMarshal_PP_I : MulticastDelegate {
    public _JniMarshal_PP_I(object object, IntPtr method);
    public virtual int Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual int EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_L : MulticastDelegate {
    public _JniMarshal_PP_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_V : MulticastDelegate {
    public _JniMarshal_PP_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIL_L : MulticastDelegate {
    public _JniMarshal_PPIL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJL_L : MulticastDelegate {
    public _JniMarshal_PPJL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJL_V : MulticastDelegate {
    public _JniMarshal_PPJL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPJLL_L : MulticastDelegate {
    public _JniMarshal_PPJLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, long p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_L : MulticastDelegate {
    public _JniMarshal_PPL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_V : MulticastDelegate {
    public _JniMarshal_PPL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPL_Z : MulticastDelegate {
    public _JniMarshal_PPL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_L : MulticastDelegate {
    public _JniMarshal_PPLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_V : MulticastDelegate {
    public _JniMarshal_PPLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLL_Z : MulticastDelegate {
    public _JniMarshal_PPLL_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_L : MulticastDelegate {
    public _JniMarshal_PPLLL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPLLL_V : MulticastDelegate {
    public _JniMarshal_PPLLL_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, IntPtr p0, IntPtr p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZZL_L : MulticastDelegate {
    public _JniMarshal_PPZZL_L(object object, IntPtr method);
    public virtual IntPtr Invoke(IntPtr jnienv, IntPtr klass, bool p0, bool p1, IntPtr p2);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, bool p1, IntPtr p2, AsyncCallback callback, object object);
    public virtual IntPtr EndInvoke(IAsyncResult result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
internal class Java.Interop.__TypeRegistrations : object {
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_channels_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_flow_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_future_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_intrinsics_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_scheduling_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_selects_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_stream_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_sync_mappings;
    [NullableAttribute("Mono.Cecil.CustomAttributeArgument[]")]
private static String[] package_kotlinx_coroutines_time_mappings;
    public static void RegisterPackages();
    [UnconditionalSuppressMessageAttribute("Trimming", "IL2057")]
private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_kotlinx_coroutines_package(string klass);
    private static Type lookup_kotlinx_coroutines_channels_package(string klass);
    private static Type lookup_kotlinx_coroutines_flow_package(string klass);
    private static Type lookup_kotlinx_coroutines_future_package(string klass);
    private static Type lookup_kotlinx_coroutines_intrinsics_package(string klass);
    private static Type lookup_kotlinx_coroutines_scheduling_package(string klass);
    private static Type lookup_kotlinx_coroutines_selects_package(string klass);
    private static Type lookup_kotlinx_coroutines_stream_package(string klass);
    private static Type lookup_kotlinx_coroutines_sync_package(string klass);
    private static Type lookup_kotlinx_coroutines_time_package(string klass);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/AbstractTimeSourceKt")]
public class Xamarin.KotlinX.Coroutines.AbstractTimeSourceKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AbstractTimeSourceKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static AbstractTimeSourceKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/AwaitKt")]
public class Xamarin.KotlinX.Coroutines.AwaitKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal AwaitKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static AwaitKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("awaitAll", "(Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object AwaitAll(ICollection obj, IContinuation _completion);
    [RegisterAttribute("awaitAll", "([Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object AwaitAll(IDeferred[] deferreds, IContinuation _completion);
    [RegisterAttribute("joinAll", "(Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object JoinAll(ICollection`1<IJob> p0, IContinuation _completion);
    [RegisterAttribute("joinAll", "([Lkotlinx/coroutines/Job;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object JoinAll(IJob[] jobs, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/BuildersKt")]
public class Xamarin.KotlinX.Coroutines.BuildersKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BuildersKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static BuildersKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("async", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Deferred;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IDeferred Async(ICoroutineScope _this_async, ICoroutineContext context, CoroutineStart start, IFunction2 block);
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/CoroutineDispatcher;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Invoke(CoroutineDispatcher _this_invoke, IFunction2 block, IContinuation _completion);
    [RegisterAttribute("launch", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/Job;", "")]
public static IJob Launch(ICoroutineScope _this_launch, ICoroutineContext context, CoroutineStart start, IFunction2 block);
    [RegisterAttribute("runBlocking", "(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RunBlocking(ICoroutineContext context, IFunction2 block);
    [RegisterAttribute("withContext", "(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithContext(ICoroutineContext context, IFunction2 block, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CancellableContinuation$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.CancellableContinuationDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CancellableContinuationDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static CancellableContinuationDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CancellableContinuationImplKt")]
public class Xamarin.KotlinX.Coroutines.CancellableContinuationImplKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CancellableContinuationImplKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CancellableContinuationImplKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CancellableContinuationKt")]
public class Xamarin.KotlinX.Coroutines.CancellableContinuationKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CancellableContinuationKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CancellableContinuationKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("disposeOnCancellation", "(Lkotlinx/coroutines/CancellableContinuation;Lkotlinx/coroutines/DisposableHandle;)V", "")]
public static void DisposeOnCancellation(ICancellableContinuation obj, IDisposableHandle handle);
    [RegisterAttribute("suspendCancellableCoroutine", "(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object SuspendCancellableCoroutine(IFunction1 block, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ActorKt")]
public class Xamarin.KotlinX.Coroutines.Channels.ActorKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ActorKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActorKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("actor", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/SendChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISendChannel Actor(ICoroutineScope obj, ICoroutineContext context, int capacity, CoroutineStart start, IFunction1 onCompletion, IFunction2 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ActorScope$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.ActorScopeDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ActorScopeDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ActorScopeDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getOnReceiveOrNull", "(Lkotlinx/coroutines/channels/ActorScope;)Lkotlinx/coroutines/selects/SelectClause1;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISelectClause1 GetOnReceiveOrNull(IActorScope _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("poll", "(Lkotlinx/coroutines/channels/ActorScope;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Poll(IActorScope _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("receiveOrNull", "(Lkotlinx/coroutines/channels/ActorScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ReceiveOrNull(IActorScope _this, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BroadcastChannel$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.BroadcastChannelDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BroadcastChannelDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static BroadcastChannelDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Lkotlinx/coroutines/channels/BroadcastChannel;Ljava/lang/Object;)Z", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool Offer(IBroadcastChannel _this, Object element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BroadcastChannelKt")]
public class Xamarin.KotlinX.Coroutines.Channels.BroadcastChannelKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BroadcastChannelKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static BroadcastChannelKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("BroadcastChannel", "(I)Lkotlinx/coroutines/channels/BroadcastChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IBroadcastChannel BroadcastChannel(int capacity);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BroadcastKt")]
public class Xamarin.KotlinX.Coroutines.Channels.BroadcastKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BroadcastKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static BroadcastKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("broadcast", "(Lkotlinx/coroutines/channels/ReceiveChannel;ILkotlinx/coroutines/CoroutineStart;)Lkotlinx/coroutines/channels/BroadcastChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IBroadcastChannel Broadcast(IReceiveChannel obj, int capacity, CoroutineStart start);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("broadcast", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/BroadcastChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IBroadcastChannel Broadcast(ICoroutineScope obj, ICoroutineContext context, int capacity, CoroutineStart start, IFunction1 onCompletion, IFunction2 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BufferedChannelKt")]
public class Xamarin.KotlinX.Coroutines.Channels.BufferedChannelKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static Object CHANNEL_CLOSED { get; }
    internal BufferedChannelKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static BufferedChannelKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCHANNEL_CLOSED", "()Ljava/lang/Object;", "")]
public static Object get_CHANNEL_CLOSED();
    [RegisterAttribute("createSegmentFunction", "()Lkotlin/reflect/KFunction;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IKFunction CreateSegmentFunction();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BufferOverflow")]
public class Xamarin.KotlinX.Coroutines.Channels.BufferOverflow : Enum {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("DROP_LATEST")]
public static BufferOverflow DropLatest { get; }
    [NullableAttribute("2")]
[RegisterAttribute("DROP_OLDEST")]
public static BufferOverflow DropOldest { get; }
    [NullableAttribute("2")]
[RegisterAttribute("SUSPEND")]
public static BufferOverflow Suspend { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IEnumEntries Entries { get; }
    internal BufferOverflow(IntPtr javaReference, JniHandleOwnership transfer);
    private static BufferOverflow();
    [NullableContextAttribute("2")]
public static BufferOverflow get_DropLatest();
    [NullableContextAttribute("2")]
public static BufferOverflow get_DropOldest();
    [NullableContextAttribute("2")]
public static BufferOverflow get_Suspend();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEntries", "()Lkotlin/enums/EnumEntries;", "")]
public static IEnumEntries get_Entries();
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Lkotlinx/coroutines/channels/BufferOverflow;", "")]
public static BufferOverflow ValueOf(string value);
    [RegisterAttribute("values", "()[Lkotlinx/coroutines/channels/BufferOverflow;", "")]
public static BufferOverflow[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/Channel")]
public abstract class Xamarin.KotlinX.Coroutines.Channels.Channel : Object {
    [RegisterAttribute("BUFFERED")]
public static int Buffered;
    [RegisterAttribute("CONFLATED")]
public static int Conflated;
    [RegisterAttribute("DEFAULT_BUFFER_PROPERTY_NAME")]
public static string DefaultBufferPropertyName;
    [RegisterAttribute("OPTIONAL_CHANNEL")]
public static int OptionalChannel;
    [RegisterAttribute("RENDEZVOUS")]
public static int Rendezvous;
    [RegisterAttribute("UNLIMITED")]
public static int Unlimited;
    private static JniPeerMembers _members;
    [RegisterAttribute("Factory")]
public static ChannelFactory Factory { get; }
    private static Channel();
    public static ChannelFactory get_Factory();
}
[RegisterAttribute("kotlinx/coroutines/channels/Channel")]
[ObsoleteAttribute("Use the 'Channel' type. This type will be removed in a future release.", "True")]
public abstract class Xamarin.KotlinX.Coroutines.Channels.ChannelConsts : Channel {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/Channel$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getOnReceiveOrNull", "(Lkotlinx/coroutines/channels/Channel;)Lkotlinx/coroutines/selects/SelectClause1;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISelectClause1 GetOnReceiveOrNull(IChannel _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Lkotlinx/coroutines/channels/Channel;Ljava/lang/Object;)Z", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool Offer(IChannel _this, Object element);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("poll", "(Lkotlinx/coroutines/channels/Channel;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Poll(IChannel _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("receiveOrNull", "(Lkotlinx/coroutines/channels/Channel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ReceiveOrNull(IChannel _this, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/Channel$Factory")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelFactory : Object {
    [RegisterAttribute("BUFFERED")]
public static int Buffered;
    [RegisterAttribute("CONFLATED")]
public static int Conflated;
    [RegisterAttribute("DEFAULT_BUFFER_PROPERTY_NAME")]
public static string DefaultBufferPropertyName;
    [RegisterAttribute("RENDEZVOUS")]
public static int Rendezvous;
    [RegisterAttribute("UNLIMITED")]
public static int Unlimited;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelFactory(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelFactory();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ChannelIterator$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelIteratorDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelIteratorDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelIteratorDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ChannelKt")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Channel", "(ILkotlinx/coroutines/channels/BufferOverflow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/channels/Channel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IChannel Channel(int capacity, BufferOverflow onBufferOverflow, IFunction1 onUndeliveredElement);
    [RegisterAttribute("getOrElse-WpGqRn0", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetOrElse(Object obj, IFunction1 onFailure);
    [RegisterAttribute("onClosed-WpGqRn0", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object OnClosed(Object obj, IFunction1 action);
    [RegisterAttribute("onFailure-WpGqRn0", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object OnFailure(Object obj, IFunction1 action);
    [RegisterAttribute("onSuccess-WpGqRn0", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object OnSuccess(Object obj, IFunction1 action);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ChannelResult")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelResult : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelResult(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelResult();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ChannelsKt")]
public class Xamarin.KotlinX.Coroutines.Channels.ChannelsKt : Object {
    [RegisterAttribute("DEFAULT_CLOSE_MESSAGE")]
public static string DefaultCloseMessage;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChannelsKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChannelsKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("cancelConsumed", "(Lkotlinx/coroutines/channels/ReceiveChannel;Ljava/lang/Throwable;)V", "")]
public static void CancelConsumed(IReceiveChannel _this_cancelConsumed, Throwable cause);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("consume", "(Lkotlinx/coroutines/channels/BroadcastChannel;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Consume(IBroadcastChannel _this_consume, IFunction1 block);
    [RegisterAttribute("consume", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Consume(IReceiveChannel _this_consume, IFunction1 block);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("consumeEach", "(Lkotlinx/coroutines/channels/BroadcastChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ConsumeEach(IBroadcastChannel _this_consumeEach, IFunction1 action, IContinuation _completion);
    [RegisterAttribute("consumeEach", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ConsumeEach(IReceiveChannel _this_consumeEach, IFunction1 action, IContinuation _completion);
    [RegisterAttribute("consumes", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlin/jvm/functions/Function1;", "")]
public static IFunction1 Consumes(IReceiveChannel _this_consumes);
    [RegisterAttribute("consumesAll", "([Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlin/jvm/functions/Function1;", "")]
public static IFunction1 ConsumesAll(IReceiveChannel[] channels);
    [RegisterAttribute("distinctBy", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel DistinctBy(IReceiveChannel _this_distinctBy, ICoroutineContext context, IFunction2 selector);
    [RegisterAttribute("filter", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel Filter(IReceiveChannel _this_filter, ICoroutineContext context, IFunction2 predicate);
    [RegisterAttribute("filterNotNull", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel FilterNotNull(IReceiveChannel _this_filterNotNull);
    [RegisterAttribute("map", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel Map(IReceiveChannel _this_map, ICoroutineContext context, IFunction2 transform);
    [RegisterAttribute("mapIndexed", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel MapIndexed(IReceiveChannel _this_mapIndexed, ICoroutineContext context, IFunction3 transform);
    [RegisterAttribute("toChannel", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/channels/SendChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToChannel(IReceiveChannel _this_toChannel, Object destination, IContinuation _completion);
    [RegisterAttribute("toCollection", "(Lkotlinx/coroutines/channels/ReceiveChannel;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToCollection(IReceiveChannel _this_toCollection, Object destination, IContinuation _completion);
    [RegisterAttribute("toList", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToList(IReceiveChannel _this_toList, IContinuation _completion);
    [RegisterAttribute("toMap", "(Lkotlinx/coroutines/channels/ReceiveChannel;Ljava/util/Map;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToMap(IReceiveChannel _this_toMap, Object destination, IContinuation _completion);
    [RegisterAttribute("toMutableSet", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToMutableSet(IReceiveChannel _this_toMutableSet, IContinuation _completion);
    [RegisterAttribute("trySendBlocking", "(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Object;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object TrySendBlocking(ISendChannel _this_trySendBlocking, Object element);
    [RegisterAttribute("zip", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel Zip(IReceiveChannel _this_zip, IReceiveChannel other, ICoroutineContext context, IFunction2 transform);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ClosedReceiveChannelException")]
public class Xamarin.KotlinX.Coroutines.Channels.ClosedReceiveChannelException : NoSuchElementException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ClosedReceiveChannelException(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public ClosedReceiveChannelException(string message);
    private static ClosedReceiveChannelException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ClosedSendChannelException")]
public class Xamarin.KotlinX.Coroutines.Channels.ClosedSendChannelException : IllegalStateException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ClosedSendChannelException(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public ClosedSendChannelException(string message);
    private static ClosedSendChannelException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/channels/ConflatedBroadcastChannel")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public class Xamarin.KotlinX.Coroutines.Channels.ConflatedBroadcastChannel : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    [NullableAttribute("2")]
public Object Value { get; }
    [NullableAttribute("2")]
public Object ValueOrNull { get; }
    internal ConflatedBroadcastChannel(IntPtr javaReference, JniHandleOwnership transfer);
    [NullableContextAttribute("2")]
[RegisterAttribute(".ctor", "(Ljava/lang/Object;)V", "")]
public ConflatedBroadcastChannel(Object value);
    private static ConflatedBroadcastChannel();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isClosedForSend", "()Z", "")]
public sealed virtual bool get_IsClosedForSend();
    [RegisterAttribute("getOnSend", "()Lkotlinx/coroutines/selects/SelectClause2;", "")]
public sealed virtual ISelectClause2 get_OnSend();
    [NullableContextAttribute("2")]
[RegisterAttribute("getValue", "()Ljava/lang/Object;", "")]
public Object get_Value();
    [NullableContextAttribute("2")]
[RegisterAttribute("getValueOrNull", "()Ljava/lang/Object;", "")]
public Object get_ValueOrNull();
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "")]
public sealed virtual void Cancel(CancellationException cause);
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Throwable;)Z", "")]
public sealed virtual bool Close(Throwable cause);
    [RegisterAttribute("invokeOnClose", "(Lkotlin/jvm/functions/Function1;)V", "")]
public sealed virtual void InvokeOnClose(IFunction1 handler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Ljava/lang/Object;)Z", "")]
public sealed virtual bool Offer(Object element);
    [RegisterAttribute("openSubscription", "()Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
public sealed virtual IReceiveChannel OpenSubscription();
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public sealed virtual Object Send(Object element, IContinuation _completion);
    [RegisterAttribute("trySend-JP2dKIU", "(Ljava/lang/Object;)Ljava/lang/Object;", "")]
public sealed virtual Object TrySend(Object element);
}
[RegisterAttribute("kotlinx/coroutines/channels/ActorScope", "", "Xamarin.KotlinX.Coroutines.Channels.IActorScopeInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IActorScope {
    [NullableAttribute("1")]
public IChannel Channel { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getChannel", "()Lkotlinx/coroutines/channels/Channel;", "GetGetChannelHandler:Xamarin.KotlinX.Coroutines.Channels.IActorScopeInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IChannel get_Channel();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ActorScope")]
internal class Xamarin.KotlinX.Coroutines.Channels.IActorScopeInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getChannel;
    private IntPtr id_getChannel;
    [NullableAttribute("2")]
private static Delegate cb_getCoroutineContext;
    private IntPtr id_getCoroutineContext;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForReceive;
    private IntPtr id_isClosedForReceive;
    [NullableAttribute("2")]
private static Delegate cb_isEmpty;
    private IntPtr id_isEmpty;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceive;
    private IntPtr id_getOnReceive;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveCatching;
    private IntPtr id_getOnReceiveCatching;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveOrNull;
    private IntPtr id_getOnReceiveOrNull;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_iterator;
    private IntPtr id_iterator;
    [NullableAttribute("2")]
private static Delegate cb_poll;
    private IntPtr id_poll;
    [NullableAttribute("2")]
private static Delegate cb_receive_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receive_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveOrNull_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveOrNull_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_tryReceive_x45_PtdJZtk;
    private IntPtr id_tryReceive_x45_PtdJZtk;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IChannel Channel { get; }
    public ICoroutineContext CoroutineContext { get; }
    public bool IsClosedForReceive { get; }
    public bool IsEmpty { get; }
    public ISelectClause1 OnReceive { get; }
    public ISelectClause1 OnReceiveCatching { get; }
    public ISelectClause1 OnReceiveOrNull { get; }
    public IActorScopeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IActorScopeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IActorScope GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetChannelHandler();
    private static IntPtr n_GetChannel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IChannel get_Channel();
    private static Delegate GetGetCoroutineContextHandler();
    private static IntPtr n_GetCoroutineContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContext get_CoroutineContext();
    private static Delegate GetIsClosedForReceiveHandler();
    private static bool n_IsClosedForReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForReceive();
    private static Delegate GetIsEmptyHandler();
    private static bool n_IsEmpty(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEmpty();
    private static Delegate GetGetOnReceiveHandler();
    private static IntPtr n_GetOnReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceive();
    private static Delegate GetGetOnReceiveCatchingHandler();
    private static IntPtr n_GetOnReceiveCatching(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveCatching();
    [ObsoleteAttribute]
private static Delegate GetGetOnReceiveOrNullHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetOnReceiveOrNull(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveOrNull();
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetIteratorHandler();
    private static IntPtr n_Iterator(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IChannelIterator Iterator();
    [ObsoleteAttribute]
private static Delegate GetPollHandler();
    [ObsoleteAttribute]
private static IntPtr n_Poll(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object Poll();
    private static Delegate GetReceive_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Receive_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Receive(IContinuation p0);
    private static Delegate GetReceiveCatching_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_ReceiveCatching_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveCatching(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetReceiveOrNull_Lkotlin_coroutines_Continuation_Handler();
    [ObsoleteAttribute]
private static IntPtr n_ReceiveOrNull_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveOrNull(IContinuation p0);
    private static Delegate GetTryReceiveHandler();
    private static IntPtr n_TryReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object TryReceive();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/channels/BroadcastChannel", "", "Xamarin.KotlinX.Coroutines.Channels.IBroadcastChannelInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IBroadcastChannel {
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "GetCancel_Ljava_util_concurrent_CancellationException_Handler:Xamarin.KotlinX.Coroutines.Channels.IBroadcastChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Cancel(CancellationException cause);
    [NullableContextAttribute("1")]
[RegisterAttribute("openSubscription", "()Lkotlinx/coroutines/channels/ReceiveChannel;", "GetOpenSubscriptionHandler:Xamarin.KotlinX.Coroutines.Channels.IBroadcastChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IReceiveChannel OpenSubscription();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/BroadcastChannel")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Xamarin.KotlinX.Coroutines.Channels.IBroadcastChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_openSubscription;
    private IntPtr id_openSubscription;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForSend;
    private IntPtr id_isClosedForSend;
    [NullableAttribute("2")]
private static Delegate cb_getOnSend;
    private IntPtr id_getOnSend;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Throwable_;
    private IntPtr id_close_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_offer_Ljava_lang_Object_;
    private IntPtr id_offer_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private IntPtr id_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    public IBroadcastChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IBroadcastChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IBroadcastChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetOpenSubscriptionHandler();
    private static IntPtr n_OpenSubscription(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IReceiveChannel OpenSubscription();
    private static Delegate GetIsClosedForSendHandler();
    private static bool n_IsClosedForSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForSend();
    private static Delegate GetGetOnSendHandler();
    private static IntPtr n_GetOnSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause2 get_OnSend();
    private static Delegate GetClose_Ljava_lang_Throwable_Handler();
    private static bool n_Close_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual bool Close(Throwable cause);
    private static Delegate GetInvokeOnClose_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_InvokeOnClose_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void InvokeOnClose(IFunction1 handler);
    [ObsoleteAttribute]
private static Delegate GetOffer_Ljava_lang_Object_Handler();
    [ObsoleteAttribute]
private static bool n_Offer_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    [NullableContextAttribute("2")]
public sealed virtual bool Offer(Object element);
    private static Delegate GetSend_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_element, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Send(Object element, IContinuation p1);
    private static Delegate GetTrySend_Ljava_lang_Object_Handler();
    private static IntPtr n_TrySend_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    public sealed virtual Object TrySend(Object element);
}
[RegisterAttribute("kotlinx/coroutines/channels/Channel", "", "Xamarin.KotlinX.Coroutines.Channels.IChannelInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IChannel {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    [NullableAttribute("1")]
[RegisterAttribute("Factory")]
public static ChannelFactory Factory { get; }
    private static IChannel();
    [NullableContextAttribute("1")]
public static ChannelFactory get_Factory();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/Channel")]
internal class Xamarin.KotlinX.Coroutines.Channels.IChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForReceive;
    private IntPtr id_isClosedForReceive;
    [NullableAttribute("2")]
private static Delegate cb_isEmpty;
    private IntPtr id_isEmpty;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceive;
    private IntPtr id_getOnReceive;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveCatching;
    private IntPtr id_getOnReceiveCatching;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveOrNull;
    private IntPtr id_getOnReceiveOrNull;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_iterator;
    private IntPtr id_iterator;
    [NullableAttribute("2")]
private static Delegate cb_poll;
    private IntPtr id_poll;
    [NullableAttribute("2")]
private static Delegate cb_receive_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receive_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveOrNull_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveOrNull_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_tryReceive_x45_PtdJZtk;
    private IntPtr id_tryReceive_x45_PtdJZtk;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForSend;
    private IntPtr id_isClosedForSend;
    [NullableAttribute("2")]
private static Delegate cb_getOnSend;
    private IntPtr id_getOnSend;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Throwable_;
    private IntPtr id_close_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_offer_Ljava_lang_Object_;
    private IntPtr id_offer_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private IntPtr id_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsClosedForReceive { get; }
    public bool IsEmpty { get; }
    public ISelectClause1 OnReceive { get; }
    public ISelectClause1 OnReceiveCatching { get; }
    public ISelectClause1 OnReceiveOrNull { get; }
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    public IChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsClosedForReceiveHandler();
    private static bool n_IsClosedForReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForReceive();
    private static Delegate GetIsEmptyHandler();
    private static bool n_IsEmpty(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEmpty();
    private static Delegate GetGetOnReceiveHandler();
    private static IntPtr n_GetOnReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceive();
    private static Delegate GetGetOnReceiveCatchingHandler();
    private static IntPtr n_GetOnReceiveCatching(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveCatching();
    [ObsoleteAttribute]
private static Delegate GetGetOnReceiveOrNullHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetOnReceiveOrNull(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveOrNull();
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetIteratorHandler();
    private static IntPtr n_Iterator(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IChannelIterator Iterator();
    [ObsoleteAttribute]
private static Delegate GetPollHandler();
    [ObsoleteAttribute]
private static IntPtr n_Poll(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object Poll();
    private static Delegate GetReceive_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Receive_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Receive(IContinuation p0);
    private static Delegate GetReceiveCatching_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_ReceiveCatching_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveCatching(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetReceiveOrNull_Lkotlin_coroutines_Continuation_Handler();
    [ObsoleteAttribute]
private static IntPtr n_ReceiveOrNull_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveOrNull(IContinuation p0);
    private static Delegate GetTryReceiveHandler();
    private static IntPtr n_TryReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object TryReceive();
    private static Delegate GetIsClosedForSendHandler();
    private static bool n_IsClosedForSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForSend();
    private static Delegate GetGetOnSendHandler();
    private static IntPtr n_GetOnSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause2 get_OnSend();
    private static Delegate GetClose_Ljava_lang_Throwable_Handler();
    private static bool n_Close_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual bool Close(Throwable cause);
    private static Delegate GetInvokeOnClose_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_InvokeOnClose_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void InvokeOnClose(IFunction1 handler);
    [ObsoleteAttribute]
private static Delegate GetOffer_Ljava_lang_Object_Handler();
    [ObsoleteAttribute]
private static bool n_Offer_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    [NullableContextAttribute("2")]
public sealed virtual bool Offer(Object element);
    private static Delegate GetSend_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_element, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Send(Object element, IContinuation p1);
    private static Delegate GetTrySend_Ljava_lang_Object_Handler();
    private static IntPtr n_TrySend_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    public sealed virtual Object TrySend(Object element);
}
[RegisterAttribute("kotlinx/coroutines/channels/ChannelIterator", "", "Xamarin.KotlinX.Coroutines.Channels.IChannelIteratorInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IChannelIterator {
    [NullableContextAttribute("1")]
[RegisterAttribute("hasNext", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetHasNext_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Channels.IChannelIteratorInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object HasNext(IContinuation p0);
    [NullableContextAttribute("2")]
[RegisterAttribute("next", "()Ljava/lang/Object;", "GetNextHandler:Xamarin.KotlinX.Coroutines.Channels.IChannelIteratorInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Next();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ChannelIterator")]
internal class Xamarin.KotlinX.Coroutines.Channels.IChannelIteratorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_hasNext_Lkotlin_coroutines_Continuation_;
    private IntPtr id_hasNext_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_next;
    private IntPtr id_next;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IChannelIteratorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChannelIteratorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IChannelIterator GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetHasNext_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_HasNext_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object HasNext(IContinuation p0);
    private static Delegate GetNextHandler();
    private static IntPtr n_Next(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object Next();
}
[RegisterAttribute("kotlinx/coroutines/channels/ProducerScope", "", "Xamarin.KotlinX.Coroutines.Channels.IProducerScopeInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IProducerScope {
    [NullableAttribute("1")]
public ISendChannel Channel { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getChannel", "()Lkotlinx/coroutines/channels/SendChannel;", "GetGetChannelHandler:Xamarin.KotlinX.Coroutines.Channels.IProducerScopeInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISendChannel get_Channel();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ProducerScope")]
internal class Xamarin.KotlinX.Coroutines.Channels.IProducerScopeInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getChannel;
    private IntPtr id_getChannel;
    [NullableAttribute("2")]
private static Delegate cb_getCoroutineContext;
    private IntPtr id_getCoroutineContext;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForSend;
    private IntPtr id_isClosedForSend;
    [NullableAttribute("2")]
private static Delegate cb_getOnSend;
    private IntPtr id_getOnSend;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Throwable_;
    private IntPtr id_close_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_offer_Ljava_lang_Object_;
    private IntPtr id_offer_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private IntPtr id_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISendChannel Channel { get; }
    public ICoroutineContext CoroutineContext { get; }
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    public IProducerScopeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IProducerScopeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IProducerScope GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetChannelHandler();
    private static IntPtr n_GetChannel(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISendChannel get_Channel();
    private static Delegate GetGetCoroutineContextHandler();
    private static IntPtr n_GetCoroutineContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContext get_CoroutineContext();
    private static Delegate GetIsClosedForSendHandler();
    private static bool n_IsClosedForSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForSend();
    private static Delegate GetGetOnSendHandler();
    private static IntPtr n_GetOnSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause2 get_OnSend();
    private static Delegate GetClose_Ljava_lang_Throwable_Handler();
    private static bool n_Close_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual bool Close(Throwable cause);
    private static Delegate GetInvokeOnClose_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_InvokeOnClose_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void InvokeOnClose(IFunction1 handler);
    [ObsoleteAttribute]
private static Delegate GetOffer_Ljava_lang_Object_Handler();
    [ObsoleteAttribute]
private static bool n_Offer_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    [NullableContextAttribute("2")]
public sealed virtual bool Offer(Object element);
    private static Delegate GetSend_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_element, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Send(Object element, IContinuation p1);
    private static Delegate GetTrySend_Ljava_lang_Object_Handler();
    private static IntPtr n_TrySend_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    public sealed virtual Object TrySend(Object element);
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/channels/ReceiveChannel", "", "Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.IReceiveChannel {
    public bool IsClosedForReceive { get; }
    public bool IsEmpty { get; }
    public ISelectClause1 OnReceive { get; }
    public ISelectClause1 OnReceiveCatching { get; }
    public ISelectClause1 OnReceiveOrNull { get; }
    [RegisterAttribute("isClosedForReceive", "()Z", "GetIsClosedForReceiveHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsClosedForReceive();
    [RegisterAttribute("isEmpty", "()Z", "GetIsEmptyHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsEmpty();
    [RegisterAttribute("getOnReceive", "()Lkotlinx/coroutines/selects/SelectClause1;", "GetGetOnReceiveHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause1 get_OnReceive();
    [RegisterAttribute("getOnReceiveCatching", "()Lkotlinx/coroutines/selects/SelectClause1;", "GetGetOnReceiveCatchingHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause1 get_OnReceiveCatching();
    [RegisterAttribute("getOnReceiveOrNull", "()Lkotlinx/coroutines/selects/SelectClause1;", "GetGetOnReceiveOrNullHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause1 get_OnReceiveOrNull();
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "GetCancel_Ljava_util_concurrent_CancellationException_Handler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Cancel(CancellationException cause);
    [RegisterAttribute("iterator", "()Lkotlinx/coroutines/channels/ChannelIterator;", "GetIteratorHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IChannelIterator Iterator();
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("poll", "()Ljava/lang/Object;", "GetPollHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Poll();
    [RegisterAttribute("receive", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetReceive_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Receive(IContinuation p0);
    [RegisterAttribute("receiveCatching-JP2dKIU", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetReceiveCatching_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object ReceiveCatching(IContinuation p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("receiveOrNull", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetReceiveOrNull_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object ReceiveOrNull(IContinuation p0);
    [RegisterAttribute("tryReceive-PtdJZtk", "()Ljava/lang/Object;", "GetTryReceiveHandler:Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object TryReceive();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ReceiveChannel")]
internal class Xamarin.KotlinX.Coroutines.Channels.IReceiveChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForReceive;
    private IntPtr id_isClosedForReceive;
    [NullableAttribute("2")]
private static Delegate cb_isEmpty;
    private IntPtr id_isEmpty;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceive;
    private IntPtr id_getOnReceive;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveCatching;
    private IntPtr id_getOnReceiveCatching;
    [NullableAttribute("2")]
private static Delegate cb_getOnReceiveOrNull;
    private IntPtr id_getOnReceiveOrNull;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_iterator;
    private IntPtr id_iterator;
    [NullableAttribute("2")]
private static Delegate cb_poll;
    private IntPtr id_poll;
    [NullableAttribute("2")]
private static Delegate cb_receive_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receive_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveCatching_x45_JP2dKIU_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_receiveOrNull_Lkotlin_coroutines_Continuation_;
    private IntPtr id_receiveOrNull_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_tryReceive_x45_PtdJZtk;
    private IntPtr id_tryReceive_x45_PtdJZtk;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsClosedForReceive { get; }
    public bool IsEmpty { get; }
    public ISelectClause1 OnReceive { get; }
    public ISelectClause1 OnReceiveCatching { get; }
    public ISelectClause1 OnReceiveOrNull { get; }
    public IReceiveChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IReceiveChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IReceiveChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsClosedForReceiveHandler();
    private static bool n_IsClosedForReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForReceive();
    private static Delegate GetIsEmptyHandler();
    private static bool n_IsEmpty(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsEmpty();
    private static Delegate GetGetOnReceiveHandler();
    private static IntPtr n_GetOnReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceive();
    private static Delegate GetGetOnReceiveCatchingHandler();
    private static IntPtr n_GetOnReceiveCatching(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveCatching();
    [ObsoleteAttribute]
private static Delegate GetGetOnReceiveOrNullHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetOnReceiveOrNull(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnReceiveOrNull();
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetIteratorHandler();
    private static IntPtr n_Iterator(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IChannelIterator Iterator();
    [ObsoleteAttribute]
private static Delegate GetPollHandler();
    [ObsoleteAttribute]
private static IntPtr n_Poll(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object Poll();
    private static Delegate GetReceive_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Receive_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Receive(IContinuation p0);
    private static Delegate GetReceiveCatching_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_ReceiveCatching_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveCatching(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetReceiveOrNull_Lkotlin_coroutines_Continuation_Handler();
    [ObsoleteAttribute]
private static IntPtr n_ReceiveOrNull_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object ReceiveOrNull(IContinuation p0);
    private static Delegate GetTryReceiveHandler();
    private static IntPtr n_TryReceive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object TryReceive();
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/channels/SendChannel", "", "Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Channels.ISendChannel {
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    [RegisterAttribute("isClosedForSend", "()Z", "GetIsClosedForSendHandler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsClosedForSend();
    [RegisterAttribute("getOnSend", "()Lkotlinx/coroutines/selects/SelectClause2;", "GetGetOnSendHandler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause2 get_OnSend();
    [NullableContextAttribute("2")]
[RegisterAttribute("close", "(Ljava/lang/Throwable;)Z", "GetClose_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Close(Throwable cause);
    [RegisterAttribute("invokeOnClose", "(Lkotlin/jvm/functions/Function1;)V", "GetInvokeOnClose_Lkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void InvokeOnClose(IFunction1 handler);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Ljava/lang/Object;)Z", "GetOffer_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Offer(Object element);
    [NullableContextAttribute("2")]
[RegisterAttribute("send", "(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetSend_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Send(Object element, IContinuation p1);
    [RegisterAttribute("trySend-JP2dKIU", "(Ljava/lang/Object;)Ljava/lang/Object;", "GetTrySend_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object TrySend(Object element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/SendChannel")]
internal class Xamarin.KotlinX.Coroutines.Channels.ISendChannelInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isClosedForSend;
    private IntPtr id_isClosedForSend;
    [NullableAttribute("2")]
private static Delegate cb_getOnSend;
    private IntPtr id_getOnSend;
    [NullableAttribute("2")]
private static Delegate cb_close_Ljava_lang_Throwable_;
    private IntPtr id_close_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnClose_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_offer_Ljava_lang_Object_;
    private IntPtr id_offer_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private IntPtr id_trySend_x45_JP2dKIU_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsClosedForSend { get; }
    public ISelectClause2 OnSend { get; }
    public ISendChannelInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISendChannelInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISendChannel GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsClosedForSendHandler();
    private static bool n_IsClosedForSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsClosedForSend();
    private static Delegate GetGetOnSendHandler();
    private static IntPtr n_GetOnSend(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause2 get_OnSend();
    private static Delegate GetClose_Ljava_lang_Throwable_Handler();
    private static bool n_Close_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual bool Close(Throwable cause);
    private static Delegate GetInvokeOnClose_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_InvokeOnClose_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void InvokeOnClose(IFunction1 handler);
    [ObsoleteAttribute]
private static Delegate GetOffer_Ljava_lang_Object_Handler();
    [ObsoleteAttribute]
private static bool n_Offer_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    [NullableContextAttribute("2")]
public sealed virtual bool Offer(Object element);
    private static Delegate GetSend_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Send_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_element, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Send(Object element, IContinuation p1);
    private static Delegate GetTrySend_Ljava_lang_Object_Handler();
    private static IntPtr n_TrySend_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_element);
    public sealed virtual Object TrySend(Object element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ProduceKt")]
public class Xamarin.KotlinX.Coroutines.Channels.ProduceKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ProduceKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ProduceKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("awaitClose", "(Lkotlinx/coroutines/channels/ProducerScope;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object AwaitClose(IProducerScope p0, IFunction0 block, IContinuation _completion);
    [RegisterAttribute("produce", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel Produce(ICoroutineScope obj, ICoroutineContext context, int capacity, IFunction2 block);
    [RegisterAttribute("produce", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;ILkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function1;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel Produce(ICoroutineScope obj, ICoroutineContext context, int capacity, CoroutineStart start, IFunction1 onCompletion, IFunction2 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ProducerScope$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.ProducerScopeDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ProducerScopeDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ProducerScopeDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Lkotlinx/coroutines/channels/ProducerScope;Ljava/lang/Object;)Z", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool Offer(IProducerScope _this, Object element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/ReceiveChannel$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.ReceiveChannelDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ReceiveChannelDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ReceiveChannelDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getOnReceiveOrNull", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlinx/coroutines/selects/SelectClause1;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISelectClause1 GetOnReceiveOrNull(IReceiveChannel _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("poll", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Poll(IReceiveChannel _this);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("receiveOrNull", "(Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ReceiveOrNull(IReceiveChannel p0, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/SendChannel$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Channels.SendChannelDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SendChannelDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static SendChannelDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("offer", "(Lkotlinx/coroutines/channels/SendChannel;Ljava/lang/Object;)Z", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool Offer(ISendChannel _this, Object element);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/TickerChannelsKt")]
public class Xamarin.KotlinX.Coroutines.Channels.TickerChannelsKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TickerChannelsKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static TickerChannelsKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("ticker", "(JJLkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/channels/TickerMode;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
public static IReceiveChannel Ticker(long delayMillis, long initialDelayMillis, ICoroutineContext context, TickerMode mode);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/channels/TickerMode")]
public class Xamarin.KotlinX.Coroutines.Channels.TickerMode : Enum {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("FIXED_DELAY")]
public static TickerMode FixedDelay { get; }
    [NullableAttribute("2")]
[RegisterAttribute("FIXED_PERIOD")]
public static TickerMode FixedPeriod { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IEnumEntries Entries { get; }
    internal TickerMode(IntPtr javaReference, JniHandleOwnership transfer);
    private static TickerMode();
    [NullableContextAttribute("2")]
public static TickerMode get_FixedDelay();
    [NullableContextAttribute("2")]
public static TickerMode get_FixedPeriod();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEntries", "()Lkotlin/enums/EnumEntries;", "")]
public static IEnumEntries get_Entries();
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Lkotlinx/coroutines/channels/TickerMode;", "")]
public static TickerMode ValueOf(string value);
    [RegisterAttribute("values", "()[Lkotlinx/coroutines/channels/TickerMode;", "")]
public static TickerMode[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ChildHandle$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.ChildHandleDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChildHandleDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChildHandleDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ChildJob$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.ChildJobDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ChildJobDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ChildJobDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/ChildJob;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IChildJob _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(IChildJob _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext MinusKey(IChildJob _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/ChildJob;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext Plus(IChildJob _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/ChildJob;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
public static IJob Plus(IChildJob _this, IJob other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletableDeferred$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.CompletableDeferredDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletableDeferredDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompletableDeferredDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/CompletableDeferred;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(ICompletableDeferred _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(ICompletableDeferred _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext MinusKey(ICompletableDeferred _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/CompletableDeferred;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext Plus(ICompletableDeferred _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/CompletableDeferred;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IJob Plus(ICompletableDeferred _this, IJob other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletableDeferredKt")]
public class Xamarin.KotlinX.Coroutines.CompletableDeferredKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletableDeferredKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompletableDeferredKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("CompletableDeferred", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableDeferred;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICompletableDeferred CompletableDeferred(IJob parent);
    [RegisterAttribute("CompletableDeferred", "(Ljava/lang/Object;)Lkotlinx/coroutines/CompletableDeferred;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICompletableDeferred CompletableDeferred(Object value);
    [RegisterAttribute("completeWith", "(Lkotlinx/coroutines/CompletableDeferred;Ljava/lang/Object;)Z", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static bool CompleteWith(ICompletableDeferred obj, Object result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletableJob$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.CompletableJobDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletableJobDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompletableJobDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/CompletableJob;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(ICompletableJob _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/CompletableJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(ICompletableJob _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/CompletableJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext MinusKey(ICompletableJob _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/CompletableJob;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext Plus(ICompletableJob _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/CompletableJob;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
public static IJob Plus(ICompletableJob _this, IJob other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletionHandler_commonKt")]
public class Xamarin.KotlinX.Coroutines.CompletionHandler_commonKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletionHandler_commonKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompletionHandler_commonKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletionHandlerException")]
public class Xamarin.KotlinX.Coroutines.CompletionHandlerException : RuntimeException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletionHandlerException(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public CompletionHandlerException(string message, Throwable cause);
    private static CompletionHandlerException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletionStateKt")]
public class Xamarin.KotlinX.Coroutines.CompletionStateKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CompletionStateKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CompletionStateKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CopyableThreadContextElement$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.CopyableThreadContextElementDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CopyableThreadContextElementDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static CopyableThreadContextElementDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/CopyableThreadContextElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(ICopyableThreadContextElement _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/CopyableThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(ICopyableThreadContextElement _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/CopyableThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext MinusKey(ICopyableThreadContextElement _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/CopyableThreadContextElement;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext Plus(ICopyableThreadContextElement _this, ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineContextKt")]
public class Xamarin.KotlinX.Coroutines.CoroutineContextKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineContextKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineContextKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCoroutineName", "(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/String;", "")]
public static string GetCoroutineName(ICoroutineContext obj);
    [RegisterAttribute("newCoroutineContext", "(Lkotlin/coroutines/CoroutineContext;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext NewCoroutineContext(ICoroutineContext obj, ICoroutineContext addedContext);
    [RegisterAttribute("newCoroutineContext", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext NewCoroutineContext(ICoroutineScope obj, ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineDispatcher")]
public abstract class Xamarin.KotlinX.Coroutines.CoroutineDispatcher : AbstractCoroutineContextElement {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_dispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_;
    [NullableAttribute("2")]
private static Delegate cb_dispatchYield_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_isDispatchNeeded_Lkotlin_coroutines_CoroutineContext_;
    [NullableAttribute("2")]
private static Delegate cb_limitedParallelism_ILjava_lang_String_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected CoroutineDispatcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineDispatcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetDispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler();
    private static void n_Dispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_block);
    [RegisterAttribute("dispatch", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V", "GetDispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler")]
public abstract virtual void Dispatch(ICoroutineContext context, IRunnable block);
    private static Delegate GetDispatchYield_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler();
    private static void n_DispatchYield_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_block);
    [RegisterAttribute("dispatchYield", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V", "GetDispatchYield_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler")]
public virtual void DispatchYield(ICoroutineContext context, IRunnable block);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("get", "(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Get(ICoroutineContextKey key);
    [RegisterAttribute("interceptContinuation", "(Lkotlin/coroutines/Continuation;)Lkotlin/coroutines/Continuation;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public sealed virtual IContinuation InterceptContinuation(IContinuation continuation);
    private static Delegate GetIsDispatchNeeded_Lkotlin_coroutines_CoroutineContext_Handler();
    private static bool n_IsDispatchNeeded_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("isDispatchNeeded", "(Lkotlin/coroutines/CoroutineContext;)Z", "GetIsDispatchNeeded_Lkotlin_coroutines_CoroutineContext_Handler")]
public virtual bool IsDispatchNeeded(ICoroutineContext context);
    private static Delegate GetLimitedParallelism_ILjava_lang_String_Handler();
    private static IntPtr n_LimitedParallelism_ILjava_lang_String_(IntPtr jnienv, IntPtr native__this, int parallelism, IntPtr native_name);
    [RegisterAttribute("limitedParallelism", "(ILjava/lang/String;)Lkotlinx/coroutines/CoroutineDispatcher;", "GetLimitedParallelism_ILjava_lang_String_Handler")]
public virtual CoroutineDispatcher LimitedParallelism(int parallelism, string name);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("minusKey", "(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler")]
public virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/CoroutineDispatcher;)Lkotlinx/coroutines/CoroutineDispatcher;", "")]
public CoroutineDispatcher Plus(CoroutineDispatcher other);
    [RegisterAttribute("releaseInterceptedContinuation", "(Lkotlin/coroutines/Continuation;)V", "")]
public sealed virtual void ReleaseInterceptedContinuation(IContinuation continuation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineDispatcher")]
internal class Xamarin.KotlinX.Coroutines.CoroutineDispatcherInvoker : CoroutineDispatcher {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CoroutineDispatcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static CoroutineDispatcherInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("dispatch", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V", "GetDispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler")]
public virtual void Dispatch(ICoroutineContext context, IRunnable block);
}
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler")]
public abstract class Xamarin.KotlinX.Coroutines.CoroutineExceptionHandler : Object {
}
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler")]
[ObsoleteAttribute("Use the 'CoroutineExceptionHandler' type. This type will be removed in a future release.", "True")]
public abstract class Xamarin.KotlinX.Coroutines.CoroutineExceptionHandlerConsts : CoroutineExceptionHandler {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.CoroutineExceptionHandlerDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineExceptionHandlerDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineExceptionHandlerDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/CoroutineExceptionHandler;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(ICoroutineExceptionHandler _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(ICoroutineExceptionHandler _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext MinusKey(ICoroutineExceptionHandler _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/CoroutineExceptionHandler;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext Plus(ICoroutineExceptionHandler _this, ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler$Key")]
public class Xamarin.KotlinX.Coroutines.CoroutineExceptionHandlerKey : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineExceptionHandlerKey(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineExceptionHandlerKey();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandlerKt")]
public class Xamarin.KotlinX.Coroutines.CoroutineExceptionHandlerKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineExceptionHandlerKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineExceptionHandlerKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("CoroutineExceptionHandler", "(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/CoroutineExceptionHandler;", "")]
public static ICoroutineExceptionHandler CoroutineExceptionHandler(IFunction2 handler);
    [RegisterAttribute("handleCoroutineException", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V", "")]
public static void HandleCoroutineException(ICoroutineContext context, Throwable exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineName")]
public class Xamarin.KotlinX.Coroutines.CoroutineName : AbstractCoroutineContextElement {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public string Name { get; }
    internal CoroutineName(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Ljava/lang/String;)V", "")]
public CoroutineName(string name);
    private static CoroutineName();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getName", "()Ljava/lang/String;", "")]
public string get_Name();
    [RegisterAttribute("component1", "()Ljava/lang/String;", "")]
public string Component1();
    [RegisterAttribute("copy", "(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineName;", "")]
public CoroutineName Copy(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineScopeKt")]
public class Xamarin.KotlinX.Coroutines.CoroutineScopeKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineScopeKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineScopeKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("CoroutineScope", "(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/CoroutineScope;", "")]
public static ICoroutineScope CoroutineScope(ICoroutineContext context);
    [RegisterAttribute("MainScope", "()Lkotlinx/coroutines/CoroutineScope;", "")]
public static ICoroutineScope MainScope();
    [RegisterAttribute("cancel", "(Lkotlinx/coroutines/CoroutineScope;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Cancel(ICoroutineScope obj, string message, Throwable cause);
    [RegisterAttribute("cancel", "(Lkotlinx/coroutines/CoroutineScope;Ljava/util/concurrent/CancellationException;)V", "")]
public static void Cancel(ICoroutineScope obj, CancellationException cause);
    [RegisterAttribute("coroutineScope", "(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CoroutineScope(IFunction2 block, IContinuation _completion);
    [RegisterAttribute("currentCoroutineContext", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object CurrentCoroutineContext(IContinuation _completion);
    [RegisterAttribute("ensureActive", "(Lkotlinx/coroutines/CoroutineScope;)V", "")]
public static void EnsureActive(ICoroutineScope obj);
    [RegisterAttribute("isActive", "(Lkotlinx/coroutines/CoroutineScope;)Z", "")]
public static bool IsActive(ICoroutineScope obj);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/CoroutineScope;", "")]
public static ICoroutineScope Plus(ICoroutineScope obj, ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineStart")]
public class Xamarin.KotlinX.Coroutines.CoroutineStart : Enum {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("ATOMIC")]
public static CoroutineStart Atomic { get; }
    [NullableAttribute("2")]
[RegisterAttribute("DEFAULT")]
public static CoroutineStart Default { get; }
    [NullableAttribute("2")]
[RegisterAttribute("LAZY")]
public static CoroutineStart Lazy { get; }
    [NullableAttribute("2")]
[RegisterAttribute("UNDISPATCHED")]
public static CoroutineStart Undispatched { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IEnumEntries Entries { get; }
    public bool IsLazy { get; }
    internal CoroutineStart(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineStart();
    [NullableContextAttribute("2")]
public static CoroutineStart get_Atomic();
    [NullableContextAttribute("2")]
public static CoroutineStart get_Default();
    [NullableContextAttribute("2")]
public static CoroutineStart get_Lazy();
    [NullableContextAttribute("2")]
public static CoroutineStart get_Undispatched();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEntries", "()Lkotlin/enums/EnumEntries;", "")]
public static IEnumEntries get_Entries();
    [RegisterAttribute("isLazy", "()Z", "")]
public bool get_IsLazy();
    [RegisterAttribute("invoke", "(Lkotlin/jvm/functions/Function2;Ljava/lang/Object;Lkotlin/coroutines/Continuation;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public void Invoke(IFunction2 block, Object receiver, IContinuation completion);
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Lkotlinx/coroutines/CoroutineStart;", "")]
public static CoroutineStart ValueOf(string value);
    [RegisterAttribute("values", "()[Lkotlinx/coroutines/CoroutineStart;", "")]
public static CoroutineStart[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DebugKt")]
public class Xamarin.KotlinX.Coroutines.DebugKt : Object {
    [RegisterAttribute("DEBUG_PROPERTY_NAME")]
public static string DebugPropertyName;
    [RegisterAttribute("DEBUG_PROPERTY_VALUE_AUTO")]
public static string DebugPropertyValueAuto;
    [RegisterAttribute("DEBUG_PROPERTY_VALUE_OFF")]
public static string DebugPropertyValueOff;
    [RegisterAttribute("DEBUG_PROPERTY_VALUE_ON")]
public static string DebugPropertyValueOn;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static bool ASSERTIONS_ENABLED { get; }
    public static AtomicLong COROUTINE_ID { get; }
    public static bool DEBUG { get; }
    public static bool RECOVER_STACK_TRACES { get; }
    internal DebugKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DebugKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getASSERTIONS_ENABLED", "()Z", "")]
public static bool get_ASSERTIONS_ENABLED();
    [RegisterAttribute("getCOROUTINE_ID", "()Ljava/util/concurrent/atomic/AtomicLong;", "")]
public static AtomicLong get_COROUTINE_ID();
    [RegisterAttribute("getDEBUG", "()Z", "")]
public static bool get_DEBUG();
    [RegisterAttribute("getRECOVER_STACK_TRACES", "()Z", "")]
public static bool get_RECOVER_STACK_TRACES();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DebugStringsKt")]
public class Xamarin.KotlinX.Coroutines.DebugStringsKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DebugStringsKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DebugStringsKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getClassSimpleName", "(Ljava/lang/Object;)Ljava/lang/String;", "")]
public static string GetClassSimpleName(Object obj);
    [RegisterAttribute("getHexAddress", "(Ljava/lang/Object;)Ljava/lang/String;", "")]
public static string GetHexAddress(Object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DefaultExecutorKt")]
public class Xamarin.KotlinX.Coroutines.DefaultExecutorKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IDelay DefaultDelay { get; }
    internal DefaultExecutorKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DefaultExecutorKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDefaultDelay", "()Lkotlinx/coroutines/Delay;", "")]
public static IDelay get_DefaultDelay();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Deferred$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.DeferredDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DeferredDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static DeferredDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/Deferred;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IDeferred _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(IDeferred _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext MinusKey(IDeferred _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/Deferred;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext Plus(IDeferred _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/Deferred;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IJob Plus(IDeferred _this, IJob other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Delay$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.DelayDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DelayDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static DelayDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("delay", "(Lkotlinx/coroutines/Delay;JLkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object Delay(IDelay _this, long time, IContinuation _completion);
    [RegisterAttribute("invokeOnTimeout", "(Lkotlinx/coroutines/Delay;JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;", "")]
public static IDisposableHandle InvokeOnTimeout(IDelay _this, long timeMillis, IRunnable block, ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DelayKt")]
public class Xamarin.KotlinX.Coroutines.DelayKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DelayKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DelayKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("awaitCancellation", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object AwaitCancellation(IContinuation _completion);
    [RegisterAttribute("delay", "(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object Delay(long timeMillis, IContinuation _completion);
    [RegisterAttribute("getDelay", "(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Delay;", "")]
public static IDelay GetDelay(ICoroutineContext obj);
}
[AnnotationAttribute("kotlinx.coroutines.DelicateCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.DelicateCoroutinesApiAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DispatchedTaskKt")]
public class Xamarin.KotlinX.Coroutines.DispatchedTaskKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DispatchedTaskKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DispatchedTaskKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isCancellableMode", "(I)Z", "")]
public static bool IsCancellableMode(int obj);
    [RegisterAttribute("isReusableMode", "(I)Z", "")]
public static bool IsReusableMode(int obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Dispatchers")]
public class Xamarin.KotlinX.Coroutines.Dispatchers : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("INSTANCE")]
public static Dispatchers Instance { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static CoroutineDispatcher Default { get; }
    public static CoroutineDispatcher IO { get; }
    public static MainCoroutineDispatcher Main { get; }
    public static CoroutineDispatcher Unconfined { get; }
    internal Dispatchers(IntPtr javaReference, JniHandleOwnership transfer);
    private static Dispatchers();
    public static Dispatchers get_Instance();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDefault", "()Lkotlinx/coroutines/CoroutineDispatcher;", "")]
public static CoroutineDispatcher get_Default();
    [RegisterAttribute("getIO", "()Lkotlinx/coroutines/CoroutineDispatcher;", "")]
public static CoroutineDispatcher get_IO();
    [RegisterAttribute("getMain", "()Lkotlinx/coroutines/MainCoroutineDispatcher;", "")]
public static MainCoroutineDispatcher get_Main();
    [RegisterAttribute("getUnconfined", "()Lkotlinx/coroutines/CoroutineDispatcher;", "")]
public static CoroutineDispatcher get_Unconfined();
    [RegisterAttribute("shutdown", "()V", "")]
public void Shutdown();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DispatchersKt")]
public class Xamarin.KotlinX.Coroutines.DispatchersKt : Object {
    [RegisterAttribute("IO_PARALLELISM_PROPERTY_NAME")]
public static string IoParallelismPropertyName;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal DispatchersKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static DispatchersKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/EventLoop_commonKt")]
public class Xamarin.KotlinX.Coroutines.EventLoop_commonKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EventLoop_commonKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static EventLoop_commonKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/EventLoopKt")]
public class Xamarin.KotlinX.Coroutines.EventLoopKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal EventLoopKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static EventLoopKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("processNextEventInCurrentThread", "()J", "")]
public static long ProcessNextEventInCurrentThread();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExceptionsKt")]
public class Xamarin.KotlinX.Coroutines.ExceptionsKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExceptionsKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExceptionsKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("CancellationException", "(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;", "")]
public static CancellationException CancellationException(string message, Throwable cause);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExecutorCoroutineDispatcher")]
public abstract class Xamarin.KotlinX.Coroutines.ExecutorCoroutineDispatcher : CoroutineDispatcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getExecutor;
    [NullableAttribute("2")]
private static Delegate cb_close;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IExecutor Executor { get; }
    protected ExecutorCoroutineDispatcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExecutorCoroutineDispatcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetExecutorHandler();
    private static IntPtr n_GetExecutor(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getExecutor", "()Ljava/util/concurrent/Executor;", "GetGetExecutorHandler")]
public abstract virtual IExecutor get_Executor();
    private static Delegate GetCloseHandler();
    private static void n_Close(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public abstract virtual void Close();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExecutorCoroutineDispatcher")]
internal class Xamarin.KotlinX.Coroutines.ExecutorCoroutineDispatcherInvoker : ExecutorCoroutineDispatcher {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IExecutor Executor { get; }
    public ExecutorCoroutineDispatcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ExecutorCoroutineDispatcherInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getExecutor", "()Ljava/util/concurrent/Executor;", "GetGetExecutorHandler")]
public virtual IExecutor get_Executor();
    [RegisterAttribute("close", "()V", "GetCloseHandler")]
public virtual void Close();
    [RegisterAttribute("dispatch", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V", "GetDispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler")]
public virtual void Dispatch(ICoroutineContext context, IRunnable block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExecutorsKt")]
public class Xamarin.KotlinX.Coroutines.ExecutorsKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ExecutorsKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ExecutorsKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("asExecutor", "(Lkotlinx/coroutines/CoroutineDispatcher;)Ljava/util/concurrent/Executor;", "")]
public static IExecutor AsExecutor(CoroutineDispatcher obj);
    [RegisterAttribute("from", "(Ljava/util/concurrent/Executor;)Lkotlinx/coroutines/CoroutineDispatcher;", "")]
public static CoroutineDispatcher From(IExecutor obj);
    [RegisterAttribute("from", "(Ljava/util/concurrent/ExecutorService;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;", "")]
public static ExecutorCoroutineDispatcher From(IExecutorService obj);
}
[AnnotationAttribute("kotlinx.coroutines.ExperimentalCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.ExperimentalCoroutinesApiAttribute : Attribute {
}
[AnnotationAttribute("kotlinx.coroutines.ExperimentalForInheritanceCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.ExperimentalForInheritanceCoroutinesApiAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/FlowKt")]
public class Xamarin.KotlinX.Coroutines.Flow.FlowKt : Object {
    [RegisterAttribute("DEFAULT_CONCURRENCY_PROPERTY_NAME")]
public static string DefaultConcurrencyPropertyName;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static int DEFAULT_CONCURRENCY { get; }
    internal FlowKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static FlowKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getDEFAULT_CONCURRENCY", "()I", "")]
public static int get_DEFAULT_CONCURRENCY();
    [RegisterAttribute("asFlow", "([I)Lkotlinx/coroutines/flow/Flow;", "")]
public static IFlow AsFlow(Int32[] _this_asFlow);
    [RegisterAttribute("asFlow", "(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(IIterable _this_asFlow);
    [RegisterAttribute("asFlow", "(Ljava/util/Iterator;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(IIterator _this_asFlow);
    [RegisterAttribute("asFlow", "(Lkotlin/jvm/functions/Function0;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(IFunction0 _this_asFlow);
    [RegisterAttribute("asFlow", "(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(IFunction1 _this_asFlow);
    [RegisterAttribute("asFlow", "(Lkotlin/ranges/IntRange;)Lkotlinx/coroutines/flow/Flow;", "")]
public static IFlow AsFlow(IntRange _this_asFlow);
    [RegisterAttribute("asFlow", "(Lkotlin/ranges/LongRange;)Lkotlinx/coroutines/flow/Flow;", "")]
public static IFlow AsFlow(LongRange _this_asFlow);
    [RegisterAttribute("asFlow", "(Lkotlin/sequences/Sequence;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(ISequence _this_asFlow);
    [RegisterAttribute("asFlow", "([J)Lkotlinx/coroutines/flow/Flow;", "")]
public static IFlow AsFlow(Int64[] _this_asFlow);
    [RegisterAttribute("asFlow", "([Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow AsFlow(Object[] _this_asFlow);
    [RegisterAttribute("asSharedFlow", "(Lkotlinx/coroutines/flow/MutableSharedFlow;)Lkotlinx/coroutines/flow/SharedFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISharedFlow AsSharedFlow(IMutableSharedFlow _this_asSharedFlow);
    [RegisterAttribute("asStateFlow", "(Lkotlinx/coroutines/flow/MutableStateFlow;)Lkotlinx/coroutines/flow/StateFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IStateFlow AsStateFlow(IMutableStateFlow _this_asStateFlow);
    [RegisterAttribute("buffer", "(Lkotlinx/coroutines/flow/Flow;ILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Buffer(IFlow _this_buffer, int capacity, BufferOverflow onBufferOverflow);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("cache", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Cache(IFlow _this_cache);
    [RegisterAttribute("callbackFlow", "(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CallbackFlow(IFunction2 block);
    [RegisterAttribute("cancellable", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Cancellable(IFlow _this_cancellable);
    [RegisterAttribute("catch", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Catch(IFlow _this_catch, IFunction3 action);
    [RegisterAttribute("catchImpl", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CatchImpl(IFlow _this_catchImpl, IFlowCollector collector, IContinuation _completion);
    [RegisterAttribute("channelFlow", "(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ChannelFlow(IFunction2 block);
    [RegisterAttribute("chunked", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Chunked(IFlow _this_chunked, int size);
    [RegisterAttribute("collect", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object Collect(IFlow _this_collect, IContinuation _completion);
    [RegisterAttribute("collectIndexed", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CollectIndexed(IFlow _this_collectIndexed, IFunction3 action, IContinuation _completion);
    [RegisterAttribute("collectLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CollectLatest(IFlow _this_collectLatest, IFunction2 action, IContinuation _completion);
    [RegisterAttribute("collectWhile", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object CollectWhile(IFlow _this_collectWhile, IFunction2 predicate, IContinuation _completion);
    [RegisterAttribute("combine", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Combine(IFlow flow, IFlow flow2, IFunction3 transform);
    [RegisterAttribute("combine", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Combine(IFlow flow, IFlow flow2, IFlow flow3, IFunction4 transform);
    [RegisterAttribute("combine", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Combine(IFlow flow, IFlow flow2, IFlow flow3, IFlow flow4, IFunction5 transform);
    [RegisterAttribute("combine", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Combine(IFlow flow, IFlow flow2, IFlow flow3, IFlow flow4, IFlow flow5, IFunction6 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("combineLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineLatest(IFlow _this_combineLatest, IFlow other, IFunction3 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("combineLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineLatest(IFlow _this_combineLatest, IFlow other, IFlow other2, IFunction4 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("combineLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineLatest(IFlow _this_combineLatest, IFlow other, IFlow other2, IFlow other3, IFunction5 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("combineLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineLatest(IFlow _this_combineLatest, IFlow other, IFlow other2, IFlow other3, IFlow other4, IFunction6 transform);
    [RegisterAttribute("combineTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineTransform(IFlow flow, IFlow flow2, IFunction4 transform);
    [RegisterAttribute("combineTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function5;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineTransform(IFlow flow, IFlow flow2, IFlow flow3, IFunction5 transform);
    [RegisterAttribute("combineTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function6;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineTransform(IFlow flow, IFlow flow2, IFlow flow3, IFlow flow4, IFunction6 transform);
    [RegisterAttribute("combineTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function7;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow CombineTransform(IFlow flow, IFlow flow2, IFlow flow3, IFlow flow4, IFlow flow5, IFunction7 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("compose", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Compose(IFlow _this_compose, IFunction1 transformer);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("concatMap", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ConcatMap(IFlow _this_concatMap, IFunction1 mapper);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("concatWith", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ConcatWith(IFlow _this_concatWith, IFlow other);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("concatWith", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ConcatWith(IFlow _this_concatWith, Object value);
    [RegisterAttribute("conflate", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Conflate(IFlow _this_conflate);
    [RegisterAttribute("consumeAsFlow", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ConsumeAsFlow(IReceiveChannel _this_consumeAsFlow);
    [RegisterAttribute("count", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Count(IFlow _this_count, IContinuation _completion);
    [RegisterAttribute("count", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Count(IFlow _this_count, IFunction2 predicate, IContinuation _completion);
    [RegisterAttribute("debounce", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Debounce(IFlow _this_debounce, IFunction1 timeoutMillis);
    [RegisterAttribute("debounce", "(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Debounce(IFlow _this_debounce, long timeoutMillis);
    [RegisterAttribute("debounceDuration", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DebounceDuration(IFlow _this_debounce, IFunction1 timeout);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("delayEach", "(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DelayEach(IFlow _this_delayEach, long timeMillis);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("delayFlow", "(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DelayFlow(IFlow _this_delayFlow, long timeMillis);
    [RegisterAttribute("distinctUntilChanged", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DistinctUntilChanged(IFlow _this_distinctUntilChanged);
    [RegisterAttribute("distinctUntilChanged", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DistinctUntilChanged(IFlow _this_distinctUntilChanged, IFunction2 areEquivalent);
    [RegisterAttribute("distinctUntilChangedBy", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DistinctUntilChangedBy(IFlow _this_distinctUntilChangedBy, IFunction1 keySelector);
    [RegisterAttribute("drop", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Drop(IFlow _this_drop, int count);
    [RegisterAttribute("dropWhile", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DropWhile(IFlow _this_dropWhile, IFunction2 predicate);
    [RegisterAttribute("emitAll", "(Lkotlinx/coroutines/flow/FlowCollector;Lkotlinx/coroutines/channels/ReceiveChannel;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object EmitAll(IFlowCollector _this_emitAll, IReceiveChannel channel, IContinuation _completion);
    [RegisterAttribute("emitAll", "(Lkotlinx/coroutines/flow/FlowCollector;Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object EmitAll(IFlowCollector _this_emitAll, IFlow flow, IContinuation _completion);
    [RegisterAttribute("emptyFlow", "()Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow EmptyFlow();
    [RegisterAttribute("ensureActive", "(Lkotlinx/coroutines/flow/FlowCollector;)V", "")]
public static void EnsureActive(IFlowCollector _this_ensureActive);
    [RegisterAttribute("filter", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Filter(IFlow _this_filter, IFunction2 predicate);
    [RegisterAttribute("filterIsInstance", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/reflect/KClass;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FilterIsInstance(IFlow _this_filterIsInstance, IKClass klass);
    [RegisterAttribute("filterNot", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FilterNot(IFlow _this_filterNot, IFunction2 predicate);
    [RegisterAttribute("filterNotNull", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FilterNotNull(IFlow _this_filterNotNull);
    [RegisterAttribute("first", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object First(IFlow _this_first, IContinuation _completion);
    [RegisterAttribute("first", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object First(IFlow _this_first, IFunction2 predicate, IContinuation _completion);
    [RegisterAttribute("firstOrNull", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object FirstOrNull(IFlow _this_firstOrNull, IContinuation _completion);
    [RegisterAttribute("firstOrNull", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object FirstOrNull(IFlow _this_firstOrNull, IFunction2 predicate, IContinuation _completion);
    [RegisterAttribute("fixedPeriodTicker", "(Lkotlinx/coroutines/CoroutineScope;J)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
public static IReceiveChannel FixedPeriodTicker(ICoroutineScope _this_fixedPeriodTicker, long delayMillis);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("flatMap", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlatMap(IFlow _this_flatMap, IFunction2 mapper);
    [RegisterAttribute("flatMapConcat", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlatMapConcat(IFlow _this_flatMapConcat, IFunction2 transform);
    [RegisterAttribute("flatMapLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlatMapLatest(IFlow _this_flatMapLatest, IFunction2 transform);
    [RegisterAttribute("flatMapMerge", "(Lkotlinx/coroutines/flow/Flow;ILkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlatMapMerge(IFlow _this_flatMapMerge, int concurrency, IFunction2 transform);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("flatten", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Flatten(IFlow _this_flatten);
    [RegisterAttribute("flattenConcat", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlattenConcat(IFlow _this_flattenConcat);
    [RegisterAttribute("flattenMerge", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlattenMerge(IFlow _this_flattenMerge, int concurrency);
    [RegisterAttribute("flow", "(Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Flow(IFunction2 block);
    [RegisterAttribute("flowCombine", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowCombine(IFlow _this_combine, IFlow flow, IFunction3 transform);
    [RegisterAttribute("flowCombineTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowCombineTransform(IFlow _this_combineTransform, IFlow flow, IFunction4 transform);
    [RegisterAttribute("flowOf", "(Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowOf(Object value);
    [RegisterAttribute("flowOf", "([Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowOf(Object[] elements);
    [RegisterAttribute("flowOn", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowOn(IFlow _this_flowOn, ICoroutineContext context);
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IFlow _this_fold, Object initial, IFunction3 operation, IContinuation _completion);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("forEach", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void ForEach(IFlow _this_forEach, IFunction2 action);
    [RegisterAttribute("last", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Last(IFlow _this_last, IContinuation _completion);
    [RegisterAttribute("lastOrNull", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object LastOrNull(IFlow _this_lastOrNull, IContinuation _completion);
    [RegisterAttribute("launchIn", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/Job;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IJob LaunchIn(IFlow _this_launchIn, ICoroutineScope scope);
    [RegisterAttribute("map", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Map(IFlow _this_map, IFunction2 transform);
    [RegisterAttribute("mapLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow MapLatest(IFlow _this_mapLatest, IFunction2 transform);
    [RegisterAttribute("mapNotNull", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow MapNotNull(IFlow _this_mapNotNull, IFunction2 transform);
    [RegisterAttribute("merge", "(Ljava/lang/Iterable;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Merge(IIterable _this_merge);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("merge", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Merge(IFlow _this_merge);
    [RegisterAttribute("merge", "([Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Merge(IFlow[] flows);
    [RegisterAttribute("noImpl", "()Ljava/lang/Void;", "")]
public static Void NoImpl();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("observeOn", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ObserveOn(IFlow _this_observeOn, ICoroutineContext context);
    [RegisterAttribute("onCompletion", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnCompletion(IFlow _this_onCompletion, IFunction3 action);
    [RegisterAttribute("onEach", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnEach(IFlow _this_onEach, IFunction2 action);
    [RegisterAttribute("onEmpty", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnEmpty(IFlow _this_onEmpty, IFunction2 action);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onErrorResume", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnErrorResume(IFlow _this_onErrorResume, IFlow fallback);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onErrorResumeNext", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnErrorResumeNext(IFlow _this_onErrorResumeNext, IFlow fallback);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onErrorReturn", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnErrorReturn(IFlow _this_onErrorReturn, Object fallback);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onErrorReturn", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnErrorReturn(IFlow _this_onErrorReturn, Object fallback, IFunction1 predicate);
    [RegisterAttribute("onStart", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow OnStart(IFlow _this_onStart, IFunction2 action);
    [RegisterAttribute("onSubscription", "(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/SharedFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISharedFlow OnSubscription(ISharedFlow _this_onSubscription, IFunction2 action);
    [RegisterAttribute("produceIn", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;)Lkotlinx/coroutines/channels/ReceiveChannel;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IReceiveChannel ProduceIn(IFlow _this_produceIn, ICoroutineScope scope);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("publish", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Publish(IFlow _this_publish);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("publish", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Publish(IFlow _this_publish, int bufferSize);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("publishOn", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow PublishOn(IFlow _this_publishOn, ICoroutineContext context);
    [RegisterAttribute("receiveAsFlow", "(Lkotlinx/coroutines/channels/ReceiveChannel;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ReceiveAsFlow(IReceiveChannel _this_receiveAsFlow);
    [RegisterAttribute("reduce", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Reduce(IFlow _this_reduce, IFunction3 operation, IContinuation _completion);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("replay", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Replay(IFlow _this_replay);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("replay", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Replay(IFlow _this_replay, int bufferSize);
    [RegisterAttribute("retry", "(Lkotlinx/coroutines/flow/Flow;JLkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Retry(IFlow _this_retry, long retries, IFunction2 predicate);
    [RegisterAttribute("retryWhen", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function4;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow RetryWhen(IFlow _this_retryWhen, IFunction4 predicate);
    [RegisterAttribute("runningFold", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow RunningFold(IFlow _this_runningFold, Object initial, IFunction3 operation);
    [RegisterAttribute("runningReduce", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow RunningReduce(IFlow _this_runningReduce, IFunction3 operation);
    [RegisterAttribute("sample", "(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Sample(IFlow _this_sample, long periodMillis);
    [RegisterAttribute("scan", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Scan(IFlow _this_scan, Object initial, IFunction3 operation);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("scanFold", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ScanFold(IFlow _this_scanFold, Object initial, IFunction3 operation);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("scanReduce", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow ScanReduce(IFlow _this_scanReduce, IFunction3 operation);
    [RegisterAttribute("shareIn", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;I)Lkotlinx/coroutines/flow/SharedFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ISharedFlow ShareIn(IFlow _this_shareIn, ICoroutineScope scope, ISharingStarted started, int replay);
    [RegisterAttribute("single", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Single(IFlow _this_single, IContinuation _completion);
    [RegisterAttribute("singleOrNull", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object SingleOrNull(IFlow _this_singleOrNull, IContinuation _completion);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("skip", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Skip(IFlow _this_skip, int count);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startWith", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow StartWith(IFlow _this_startWith, IFlow other);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("startWith", "(Lkotlinx/coroutines/flow/Flow;Ljava/lang/Object;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow StartWith(IFlow _this_startWith, Object value);
    [RegisterAttribute("stateIn", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object StateIn(IFlow _this_stateIn, ICoroutineScope scope, IContinuation _completion);
    [RegisterAttribute("stateIn", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/CoroutineScope;Lkotlinx/coroutines/flow/SharingStarted;Ljava/lang/Object;)Lkotlinx/coroutines/flow/StateFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IStateFlow StateIn(IFlow _this_stateIn, ICoroutineScope scope, ISharingStarted started, Object initialValue);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("subscribe", "(Lkotlinx/coroutines/flow/Flow;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void Subscribe(IFlow _this_subscribe);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("subscribe", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void Subscribe(IFlow _this_subscribe, IFunction2 onEach);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("subscribe", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;Lkotlin/jvm/functions/Function2;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void Subscribe(IFlow _this_subscribe, IFunction2 onEach, IFunction2 onError);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("subscribeOn", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow SubscribeOn(IFlow _this_subscribeOn, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("switchMap", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow SwitchMap(IFlow _this_switchMap, IFunction2 transform);
    [RegisterAttribute("take", "(Lkotlinx/coroutines/flow/Flow;I)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Take(IFlow _this_take, int count);
    [RegisterAttribute("takeWhile", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function2;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow TakeWhile(IFlow _this_takeWhile, IFunction2 predicate);
    [RegisterAttribute("timeout-HG0u8IE", "(Lkotlinx/coroutines/flow/Flow;J)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Timeout(IFlow _this_timeout_u2dHG0u8IE, long timeout);
    [RegisterAttribute("toCollection", "(Lkotlinx/coroutines/flow/Flow;Ljava/util/Collection;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToCollection(IFlow _this_toCollection, Object destination, IContinuation _completion);
    [RegisterAttribute("toList", "(Lkotlinx/coroutines/flow/Flow;Ljava/util/List;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToList(IFlow _this_toList, IList destination, IContinuation _completion);
    [RegisterAttribute("toSet", "(Lkotlinx/coroutines/flow/Flow;Ljava/util/Set;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object ToSet(IFlow _this_toSet, ICollection destination, IContinuation _completion);
    [RegisterAttribute("transform", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Transform(IFlow _this_transform, IFunction3 transform);
    [RegisterAttribute("transformLatest", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow TransformLatest(IFlow _this_transformLatest, IFunction3 transform);
    [RegisterAttribute("transformWhile", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow TransformWhile(IFlow _this_transformWhile, IFunction3 transform);
    [RegisterAttribute("unsafeTransform", "(Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow UnsafeTransform(IFlow _this_unsafeTransform, IFunction3 transform);
    [RegisterAttribute("withIndex", "(Lkotlinx/coroutines/flow/Flow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow WithIndex(IFlow _this_withIndex);
    [RegisterAttribute("zip", "(Lkotlinx/coroutines/flow/Flow;Lkotlinx/coroutines/flow/Flow;Lkotlin/jvm/functions/Function3;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Zip(IFlow _this_zip, IFlow other, IFunction3 transform);
}
[RegisterAttribute("kotlinx/coroutines/flow/Flow", "", "Xamarin.KotlinX.Coroutines.Flow.IFlowInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.IFlow {
    [NullableContextAttribute("1")]
[RegisterAttribute("collect", "(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Flow.IFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[RegisterAttribute("kotlinx/coroutines/flow/FlowCollector", "", "Xamarin.KotlinX.Coroutines.Flow.IFlowCollectorInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.IFlowCollector {
    [NullableContextAttribute("2")]
[RegisterAttribute("emit", "(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetEmit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Flow.IFlowCollectorInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Emit(Object value, IContinuation p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/FlowCollector")]
internal class Xamarin.KotlinX.Coroutines.Flow.IFlowCollectorInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IFlowCollectorInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFlowCollectorInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IFlowCollector GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetEmit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Emit(Object value, IContinuation p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/Flow")]
internal class Xamarin.KotlinX.Coroutines.Flow.IFlowInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private IntPtr id_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IFlowInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFlowInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IFlow GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_collector, IntPtr native_p1);
    public sealed virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[RegisterAttribute("kotlinx/coroutines/flow/MutableSharedFlow", "", "Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlow {
    [NullableAttribute("1")]
public IStateFlow SubscriptionCount { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getSubscriptionCount", "()Lkotlinx/coroutines/flow/StateFlow;", "GetGetSubscriptionCountHandler:Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IStateFlow get_SubscriptionCount();
    [NullableContextAttribute("2")]
[RegisterAttribute("emit", "(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetEmit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Emit(Object value, IContinuation p1);
    [RegisterAttribute("resetReplayCache", "()V", "GetResetReplayCacheHandler:Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void ResetReplayCache();
    [NullableContextAttribute("2")]
[RegisterAttribute("tryEmit", "(Ljava/lang/Object;)Z", "GetTryEmit_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool TryEmit(Object value);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/MutableSharedFlow")]
internal class Xamarin.KotlinX.Coroutines.Flow.IMutableSharedFlowInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getSubscriptionCount;
    private IntPtr id_getSubscriptionCount;
    [NullableAttribute("2")]
private static Delegate cb_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_resetReplayCache;
    private IntPtr id_resetReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_tryEmit_Ljava_lang_Object_;
    private IntPtr id_tryEmit_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getReplayCache;
    private IntPtr id_getReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private IntPtr id_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IStateFlow SubscriptionCount { get; }
    public IList ReplayCache { get; }
    public IMutableSharedFlowInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMutableSharedFlowInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMutableSharedFlow GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetSubscriptionCountHandler();
    private static IntPtr n_GetSubscriptionCount(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IStateFlow get_SubscriptionCount();
    private static Delegate GetEmit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Emit(Object value, IContinuation p1);
    private static Delegate GetResetReplayCacheHandler();
    private static void n_ResetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ResetReplayCache();
    private static Delegate GetTryEmit_Ljava_lang_Object_Handler();
    private static bool n_TryEmit_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [NullableContextAttribute("2")]
public sealed virtual bool TryEmit(Object value);
    private static Delegate GetGetReplayCacheHandler();
    private static IntPtr n_GetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList get_ReplayCache();
    private static Delegate GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_collector, IntPtr native_p1);
    public sealed virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[RegisterAttribute("kotlinx/coroutines/flow/MutableStateFlow", "", "Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlowInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlow {
    [NullableAttribute("2")]
public Object Value { get; public set; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getValue", "()Ljava/lang/Object;", "GetGetValueHandler:Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object get_Value();
    [NullableContextAttribute("2")]
[RegisterAttribute("setValue", "(Ljava/lang/Object;)V", "GetSetValue_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void set_Value(Object value);
    [NullableContextAttribute("2")]
[RegisterAttribute("compareAndSet", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "GetCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool CompareAndSet(Object expect, Object update);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/MutableStateFlow")]
internal class Xamarin.KotlinX.Coroutines.Flow.IMutableStateFlowInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getValue;
    [NullableAttribute("2")]
private static Delegate cb_setValue_Ljava_lang_Object_;
    private IntPtr id_getValue;
    private IntPtr id_setValue_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_compareAndSet_Ljava_lang_Object_Ljava_lang_Object_;
    private IntPtr id_compareAndSet_Ljava_lang_Object_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getSubscriptionCount;
    private IntPtr id_getSubscriptionCount;
    [NullableAttribute("2")]
private static Delegate cb_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_resetReplayCache;
    private IntPtr id_resetReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_tryEmit_Ljava_lang_Object_;
    private IntPtr id_tryEmit_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_getReplayCache;
    private IntPtr id_getReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private IntPtr id_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Value { get; public set; }
    public IStateFlow SubscriptionCount { get; }
    public IList ReplayCache { get; }
    public IMutableStateFlowInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMutableStateFlowInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMutableStateFlow GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetValueHandler();
    private static IntPtr n_GetValue(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetValue_Ljava_lang_Object_Handler();
    private static void n_SetValue_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [NullableContextAttribute("2")]
public sealed virtual Object get_Value();
    [NullableContextAttribute("2")]
public sealed virtual void set_Value(Object value);
    private static Delegate GetCompareAndSet_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static bool n_CompareAndSet_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_expect, IntPtr native_update);
    [NullableContextAttribute("2")]
public sealed virtual bool CompareAndSet(Object expect, Object update);
    private static Delegate GetGetSubscriptionCountHandler();
    private static IntPtr n_GetSubscriptionCount(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IStateFlow get_SubscriptionCount();
    private static Delegate GetEmit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Emit_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Emit(Object value, IContinuation p1);
    private static Delegate GetResetReplayCacheHandler();
    private static void n_ResetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void ResetReplayCache();
    private static Delegate GetTryEmit_Ljava_lang_Object_Handler();
    private static bool n_TryEmit_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [NullableContextAttribute("2")]
public sealed virtual bool TryEmit(Object value);
    private static Delegate GetGetReplayCacheHandler();
    private static IntPtr n_GetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList get_ReplayCache();
    private static Delegate GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_collector, IntPtr native_p1);
    public sealed virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[RegisterAttribute("kotlinx/coroutines/flow/SharedFlow", "", "Xamarin.KotlinX.Coroutines.Flow.ISharedFlowInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.ISharedFlow {
    [NullableAttribute("1")]
public IList ReplayCache { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getReplayCache", "()Ljava/util/List;", "GetGetReplayCacheHandler:Xamarin.KotlinX.Coroutines.Flow.ISharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IList get_ReplayCache();
    [NullableContextAttribute("1")]
[RegisterAttribute("collect", "(Lkotlinx/coroutines/flow/FlowCollector;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Flow.ISharedFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharedFlow")]
internal class Xamarin.KotlinX.Coroutines.Flow.ISharedFlowInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getReplayCache;
    private IntPtr id_getReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private IntPtr id_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IList ReplayCache { get; }
    public ISharedFlowInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISharedFlowInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISharedFlow GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetReplayCacheHandler();
    private static IntPtr n_GetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList get_ReplayCache();
    private static Delegate GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_collector, IntPtr native_p1);
    public sealed virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingStarted", "", "Xamarin.KotlinX.Coroutines.Flow.ISharingStartedInvoker")]
public interface Xamarin.KotlinX.Coroutines.Flow.ISharingStarted {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static SharingStartedCompanion Companion { get; }
    private static ISharingStarted();
    public static SharingStartedCompanion get_Companion();
    [RegisterAttribute("command", "(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;", "GetCommand_Lkotlinx_coroutines_flow_StateFlow_Handler:Xamarin.KotlinX.Coroutines.Flow.ISharingStartedInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IFlow Command(IStateFlow subscriptionCount);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingStarted")]
internal class Xamarin.KotlinX.Coroutines.Flow.ISharingStartedInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_command_Lkotlinx_coroutines_flow_StateFlow_;
    private IntPtr id_command_Lkotlinx_coroutines_flow_StateFlow_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISharingStartedInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISharingStartedInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISharingStarted GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCommand_Lkotlinx_coroutines_flow_StateFlow_Handler();
    private static IntPtr n_Command_Lkotlinx_coroutines_flow_StateFlow_(IntPtr jnienv, IntPtr native__this, IntPtr native_subscriptionCount);
    public sealed virtual IFlow Command(IStateFlow subscriptionCount);
}
[RegisterAttribute("kotlinx/coroutines/flow/StateFlow", "", "Xamarin.KotlinX.Coroutines.Flow.IStateFlowInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Flow.IStateFlow {
    [NullableAttribute("2")]
public Object Value { get; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getValue", "()Ljava/lang/Object;", "GetGetValueHandler:Xamarin.KotlinX.Coroutines.Flow.IStateFlowInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object get_Value();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/StateFlow")]
internal class Xamarin.KotlinX.Coroutines.Flow.IStateFlowInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getValue;
    private IntPtr id_getValue;
    [NullableAttribute("2")]
private static Delegate cb_getReplayCache;
    private IntPtr id_getReplayCache;
    [NullableAttribute("2")]
private static Delegate cb_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private IntPtr id_collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Value { get; }
    public IList ReplayCache { get; }
    public IStateFlowInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IStateFlowInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IStateFlow GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetValueHandler();
    private static IntPtr n_GetValue(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object get_Value();
    private static Delegate GetGetReplayCacheHandler();
    private static IntPtr n_GetReplayCache(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IList get_ReplayCache();
    private static Delegate GetCollect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Collect_Lkotlinx_coroutines_flow_FlowCollector_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_collector, IntPtr native_p1);
    public sealed virtual Object Collect(IFlowCollector collector, IContinuation p1);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/LintKt")]
public class Xamarin.KotlinX.Coroutines.Flow.LintKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal LintKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static LintKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("cancel", "(Lkotlinx/coroutines/flow/FlowCollector;Ljava/util/concurrent/CancellationException;)V", "")]
public static void Cancel(IFlowCollector obj, CancellationException cause);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("cancellable", "(Lkotlinx/coroutines/flow/SharedFlow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Cancellable(ISharedFlow obj);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("conflate", "(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Conflate(IStateFlow obj);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("distinctUntilChanged", "(Lkotlinx/coroutines/flow/StateFlow;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow DistinctUntilChanged(IStateFlow obj);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("flowOn", "(Lkotlinx/coroutines/flow/SharedFlow;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow FlowOn(ISharedFlow obj, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("getCoroutineContext", "(Lkotlinx/coroutines/flow/FlowCollector;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext GetCoroutineContext(IFlowCollector obj);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("isActive", "(Lkotlinx/coroutines/flow/FlowCollector;)Z", "")]
public static bool IsActive(IFlowCollector obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharedFlowKt")]
public class Xamarin.KotlinX.Coroutines.Flow.SharedFlowKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SharedFlowKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharedFlowKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("MutableSharedFlow", "(IILkotlinx/coroutines/channels/BufferOverflow;)Lkotlinx/coroutines/flow/MutableSharedFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IMutableSharedFlow MutableSharedFlow(int replay, int extraBufferCapacity, BufferOverflow onBufferOverflow);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingCommand")]
public class Xamarin.KotlinX.Coroutines.Flow.SharingCommand : Enum {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
[RegisterAttribute("START")]
public static SharingCommand Start { get; }
    [NullableAttribute("2")]
[RegisterAttribute("STOP")]
public static SharingCommand Stop { get; }
    [NullableAttribute("2")]
[RegisterAttribute("STOP_AND_RESET_REPLAY_CACHE")]
public static SharingCommand StopAndResetReplayCache { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static IEnumEntries Entries { get; }
    internal SharingCommand(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharingCommand();
    [NullableContextAttribute("2")]
public static SharingCommand get_Start();
    [NullableContextAttribute("2")]
public static SharingCommand get_Stop();
    [NullableContextAttribute("2")]
public static SharingCommand get_StopAndResetReplayCache();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEntries", "()Lkotlin/enums/EnumEntries;", "")]
public static IEnumEntries get_Entries();
    [NullableContextAttribute("2")]
[RegisterAttribute("valueOf", "(Ljava/lang/String;)Lkotlinx/coroutines/flow/SharingCommand;", "")]
public static SharingCommand ValueOf(string value);
    [RegisterAttribute("values", "()[Lkotlinx/coroutines/flow/SharingCommand;", "")]
public static SharingCommand[] Values();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingStarted")]
public abstract class Xamarin.KotlinX.Coroutines.Flow.SharingStarted : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("Companion")]
public static SharingStartedCompanion Companion { get; }
    private static SharingStarted();
    public static SharingStartedCompanion get_Companion();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingStarted$Companion")]
public class Xamarin.KotlinX.Coroutines.Flow.SharingStartedCompanion : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISharingStarted Eagerly { get; }
    public ISharingStarted Lazily { get; }
    internal SharingStartedCompanion(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharingStartedCompanion();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getEagerly", "()Lkotlinx/coroutines/flow/SharingStarted;", "")]
public ISharingStarted get_Eagerly();
    [RegisterAttribute("getLazily", "()Lkotlinx/coroutines/flow/SharingStarted;", "")]
public ISharingStarted get_Lazily();
    [RegisterAttribute("WhileSubscribed", "(JJ)Lkotlinx/coroutines/flow/SharingStarted;", "")]
public ISharingStarted WhileSubscribed(long stopTimeoutMillis, long replayExpirationMillis);
}
[RegisterAttribute("kotlinx/coroutines/flow/SharingStarted")]
[ObsoleteAttribute("Use the 'SharingStarted' type. This type will be removed in a future release.", "True")]
public abstract class Xamarin.KotlinX.Coroutines.Flow.SharingStartedConsts : SharingStarted {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/SharingStartedKt")]
public class Xamarin.KotlinX.Coroutines.Flow.SharingStartedKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SharingStartedKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SharingStartedKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("WhileSubscribed-5qebJ5I", "(Lkotlinx/coroutines/flow/SharingStarted$Companion;JJ)Lkotlinx/coroutines/flow/SharingStarted;", "")]
public static ISharingStarted WhileSubscribed(SharingStartedCompanion obj, long stopTimeout, long replayExpiration);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/flow/StateFlowKt")]
public class Xamarin.KotlinX.Coroutines.Flow.StateFlowKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal StateFlowKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static StateFlowKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("MutableStateFlow", "(Ljava/lang/Object;)Lkotlinx/coroutines/flow/MutableStateFlow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IMutableStateFlow MutableStateFlow(Object value);
    [RegisterAttribute("getAndUpdate", "(Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object GetAndUpdate(IMutableStateFlow obj, IFunction1 function);
    [RegisterAttribute("update", "(Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlin/jvm/functions/Function1;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void Update(IMutableStateFlow obj, IFunction1 function);
    [RegisterAttribute("updateAndGet", "(Lkotlinx/coroutines/flow/MutableStateFlow;Lkotlin/jvm/functions/Function1;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object UpdateAndGet(IMutableStateFlow obj, IFunction1 function);
}
[AnnotationAttribute("kotlinx.coroutines.FlowPreview")]
public class Xamarin.KotlinX.Coroutines.FlowPreviewAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/future/FutureKt")]
public class Xamarin.KotlinX.Coroutines.Future.FutureKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal FutureKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static FutureKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("asCompletableFuture", "(Lkotlinx/coroutines/Deferred;)Ljava/util/concurrent/CompletableFuture;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CompletableFuture AsCompletableFuture(IDeferred obj);
    [RegisterAttribute("asCompletableFuture", "(Lkotlinx/coroutines/Job;)Ljava/util/concurrent/CompletableFuture;", "")]
public static CompletableFuture AsCompletableFuture(IJob obj);
    [RegisterAttribute("asDeferred", "(Ljava/util/concurrent/CompletionStage;)Lkotlinx/coroutines/Deferred;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IDeferred AsDeferred(ICompletionStage obj);
    [RegisterAttribute("await", "(Ljava/util/concurrent/CompletionStage;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Await(ICompletionStage obj, IContinuation _completion);
    [RegisterAttribute("future", "(Lkotlinx/coroutines/CoroutineScope;Lkotlin/coroutines/CoroutineContext;Lkotlinx/coroutines/CoroutineStart;Lkotlin/jvm/functions/Function2;)Ljava/util/concurrent/CompletableFuture;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static CompletableFuture Future(ICoroutineScope obj, ICoroutineContext context, CoroutineStart start, IFunction2 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/GlobalScope")]
public class Xamarin.KotlinX.Coroutines.GlobalScope : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("INSTANCE")]
public static GlobalScope Instance { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContext CoroutineContext { get; }
    internal GlobalScope(IntPtr javaReference, JniHandleOwnership transfer);
    private static GlobalScope();
    public static GlobalScope get_Instance();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCoroutineContext", "()Lkotlin/coroutines/CoroutineContext;", "")]
public sealed virtual ICoroutineContext get_CoroutineContext();
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/CancellableContinuation", "", "Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.ICancellableContinuation {
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsActive();
    [RegisterAttribute("isCancelled", "()Z", "GetIsCancelledHandler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsCancelled();
    [RegisterAttribute("isCompleted", "()Z", "GetIsCompletedHandler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsCompleted();
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/lang/Throwable;)Z", "GetCancel_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Cancel(Throwable cause);
    [RegisterAttribute("completeResume", "(Ljava/lang/Object;)V", "GetCompleteResume_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void CompleteResume(Object token);
    [RegisterAttribute("initCancellability", "()V", "GetInitCancellabilityHandler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void InitCancellability();
    [RegisterAttribute("invokeOnCancellation", "(Lkotlin/jvm/functions/Function1;)V", "GetInvokeOnCancellation_Lkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void InvokeOnCancellation(IFunction1 handler);
    [NullableContextAttribute("2")]
[RegisterAttribute("resume", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)V", "GetResume_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Resume(Object value, IFunction3 onCancellation);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("resume", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function1;)V", "GetResume_Ljava_lang_Object_Lkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Resume(Object value, IFunction1 onCancellation);
    [RegisterAttribute("resumeUndispatched", "(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Object;)V", "GetResumeUndispatched_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void ResumeUndispatched(CoroutineDispatcher p0, Object value);
    [RegisterAttribute("resumeUndispatchedWithException", "(Lkotlinx/coroutines/CoroutineDispatcher;Ljava/lang/Throwable;)V", "GetResumeUndispatchedWithException_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void ResumeUndispatchedWithException(CoroutineDispatcher p0, Throwable exception);
    [NullableContextAttribute("2")]
[RegisterAttribute("tryResume", "(Ljava/lang/Object;Ljava/lang/Object;Lkotlin/jvm/functions/Function3;)Ljava/lang/Object;", "GetTryResume_Ljava_lang_Object_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual Object TryResume(Object value, Object idempotent, IFunction3 onCancellation);
    [NullableContextAttribute("2")]
[RegisterAttribute("tryResume", "(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;", "GetTryResume_Ljava_lang_Object_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object TryResume(Object value, Object idempotent);
    [RegisterAttribute("tryResumeWithException", "(Ljava/lang/Throwable;)Ljava/lang/Object;", "GetTryResumeWithException_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object TryResumeWithException(Throwable exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CancellableContinuation")]
internal class Xamarin.KotlinX.Coroutines.ICancellableContinuationInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_lang_Throwable_;
    private IntPtr id_cancel_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_completeResume_Ljava_lang_Object_;
    private IntPtr id_completeResume_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_initCancellability;
    private IntPtr id_initCancellability;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCancellation_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCancellation_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_;
    private IntPtr id_resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_;
    [NullableAttribute("2")]
private static Delegate cb_resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_resumeUndispatched_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Object_;
    private IntPtr id_resumeUndispatched_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_resumeUndispatchedWithException_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Throwable_;
    private IntPtr id_resumeUndispatchedWithException_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_tryResume_Ljava_lang_Object_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_;
    private IntPtr id_tryResume_Ljava_lang_Object_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_;
    [NullableAttribute("2")]
private static Delegate cb_tryResume_Ljava_lang_Object_Ljava_lang_Object_;
    private IntPtr id_tryResume_Ljava_lang_Object_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_tryResumeWithException_Ljava_lang_Throwable_;
    private IntPtr id_tryResumeWithException_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    private IntPtr id_getContext;
    [NullableAttribute("2")]
private static Delegate cb_resumeWith_Ljava_lang_Object_;
    private IntPtr id_resumeWith_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ICoroutineContext Context { get; }
    public ICancellableContinuationInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICancellableContinuationInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICancellableContinuation GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetCancel_Ljava_lang_Throwable_Handler();
    private static bool n_Cancel_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual bool Cancel(Throwable cause);
    private static Delegate GetCompleteResume_Ljava_lang_Object_Handler();
    private static void n_CompleteResume_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_token);
    public sealed virtual void CompleteResume(Object token);
    private static Delegate GetInitCancellabilityHandler();
    private static void n_InitCancellability(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void InitCancellability();
    private static Delegate GetInvokeOnCancellation_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_InvokeOnCancellation_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual void InvokeOnCancellation(IFunction1 handler);
    private static Delegate GetResume_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_Handler();
    private static void n_Resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_onCancellation);
    [NullableContextAttribute("2")]
public sealed virtual void Resume(Object value, IFunction3 onCancellation);
    [ObsoleteAttribute]
private static Delegate GetResume_Ljava_lang_Object_Lkotlin_jvm_functions_Function1_Handler();
    [ObsoleteAttribute]
private static void n_Resume_Ljava_lang_Object_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_onCancellation);
    [NullableContextAttribute("2")]
public sealed virtual void Resume(Object value, IFunction1 onCancellation);
    private static Delegate GetResumeUndispatched_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Object_Handler();
    private static void n_ResumeUndispatched_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_value);
    public sealed virtual void ResumeUndispatched(CoroutineDispatcher p0, Object value);
    private static Delegate GetResumeUndispatchedWithException_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Throwable_Handler();
    private static void n_ResumeUndispatchedWithException_Lkotlinx_coroutines_CoroutineDispatcher_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_exception);
    public sealed virtual void ResumeUndispatchedWithException(CoroutineDispatcher p0, Throwable exception);
    private static Delegate GetTryResume_Ljava_lang_Object_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_Handler();
    private static IntPtr n_TryResume_Ljava_lang_Object_Ljava_lang_Object_Lkotlin_jvm_functions_Function3_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_idempotent, IntPtr native_onCancellation);
    [NullableContextAttribute("2")]
public sealed virtual Object TryResume(Object value, Object idempotent, IFunction3 onCancellation);
    private static Delegate GetTryResume_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static IntPtr n_TryResume_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value, IntPtr native_idempotent);
    [NullableContextAttribute("2")]
public sealed virtual Object TryResume(Object value, Object idempotent);
    private static Delegate GetTryResumeWithException_Ljava_lang_Throwable_Handler();
    private static IntPtr n_TryResumeWithException_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_exception);
    public sealed virtual Object TryResumeWithException(Throwable exception);
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContext get_Context();
    private static Delegate GetResumeWith_Ljava_lang_Object_Handler();
    private static void n_ResumeWith_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_result);
    public sealed virtual void ResumeWith(Object result);
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/ChildHandle", "", "Xamarin.KotlinX.Coroutines.IChildHandleInvoker")]
public interface Xamarin.KotlinX.Coroutines.IChildHandle {
    [NullableAttribute("2")]
public IJob Parent { get; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getParent", "()Lkotlinx/coroutines/Job;", "GetGetParentHandler:Xamarin.KotlinX.Coroutines.IChildHandleInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IJob get_Parent();
    [NullableContextAttribute("1")]
[RegisterAttribute("childCancelled", "(Ljava/lang/Throwable;)Z", "GetChildCancelled_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.IChildHandleInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool ChildCancelled(Throwable cause);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ChildHandle")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Xamarin.KotlinX.Coroutines.IChildHandleInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_childCancelled_Ljava_lang_Throwable_;
    private IntPtr id_childCancelled_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_dispose;
    private IntPtr id_dispose;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public IChildHandleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChildHandleInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IChildHandle GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetChildCancelled_Ljava_lang_Throwable_Handler();
    private static bool n_ChildCancelled_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    public sealed virtual bool ChildCancelled(Throwable cause);
    private static Delegate GetDisposeHandler();
    private static void n_Dispose(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Dispose();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/ChildJob", "", "Xamarin.KotlinX.Coroutines.IChildJobInvoker")]
public interface Xamarin.KotlinX.Coroutines.IChildJob {
    [NullableContextAttribute("1")]
[RegisterAttribute("parentCancelled", "(Lkotlinx/coroutines/ParentJob;)V", "GetParentCancelled_Lkotlinx_coroutines_ParentJob_Handler:Xamarin.KotlinX.Coroutines.IChildJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void ParentCancelled(IParentJob parentJob);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ChildJob")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Xamarin.KotlinX.Coroutines.IChildJobInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_parentCancelled_Lkotlinx_coroutines_ParentJob_;
    private IntPtr id_parentCancelled_Lkotlinx_coroutines_ParentJob_;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public IChildJobInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IChildJobInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IChildJob GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetParentCancelled_Lkotlinx_coroutines_ParentJob_Handler();
    private static void n_ParentCancelled_Lkotlinx_coroutines_ParentJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_parentJob);
    public sealed virtual void ParentCancelled(IParentJob parentJob);
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CompletableDeferred", "", "Xamarin.KotlinX.Coroutines.ICompletableDeferredInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.ICompletableDeferred {
    [NullableContextAttribute("2")]
[RegisterAttribute("complete", "(Ljava/lang/Object;)Z", "GetComplete_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.ICompletableDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Complete(Object value);
    [NullableContextAttribute("1")]
[RegisterAttribute("completeExceptionally", "(Ljava/lang/Throwable;)Z", "GetCompleteExceptionally_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICompletableDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool CompleteExceptionally(Throwable exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletableDeferred")]
internal class Xamarin.KotlinX.Coroutines.ICompletableDeferredInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_complete_Ljava_lang_Object_;
    private IntPtr id_complete_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_completeExceptionally_Ljava_lang_Throwable_;
    private IntPtr id_completeExceptionally_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_getCompleted;
    private IntPtr id_getCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getCompletionExceptionOrNull;
    private IntPtr id_getCompletionExceptionOrNull;
    [NullableAttribute("2")]
private static Delegate cb_getOnAwait;
    private IntPtr id_getOnAwait;
    [NullableAttribute("2")]
private static Delegate cb_await_Lkotlin_coroutines_Continuation_;
    private IntPtr id_await_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Completed { get; }
    [NullableAttribute("2")]
public Throwable CompletionExceptionOrNull { get; }
    public ISelectClause1 OnAwait { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public ICompletableDeferredInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICompletableDeferredInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICompletableDeferred GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetComplete_Ljava_lang_Object_Handler();
    private static bool n_Complete_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_value);
    [NullableContextAttribute("2")]
public sealed virtual bool Complete(Object value);
    private static Delegate GetCompleteExceptionally_Ljava_lang_Throwable_Handler();
    private static bool n_CompleteExceptionally_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_exception);
    public sealed virtual bool CompleteExceptionally(Throwable exception);
    private static Delegate GetGetCompletedHandler();
    private static IntPtr n_GetCompleted(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object get_Completed();
    private static Delegate GetGetCompletionExceptionOrNullHandler();
    private static IntPtr n_GetCompletionExceptionOrNull(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Throwable get_CompletionExceptionOrNull();
    private static Delegate GetGetOnAwaitHandler();
    private static IntPtr n_GetOnAwait(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnAwait();
    private static Delegate GetAwait_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Await_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Await(IContinuation p0);
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CompletableJob", "", "Xamarin.KotlinX.Coroutines.ICompletableJobInvoker")]
public interface Xamarin.KotlinX.Coroutines.ICompletableJob {
    [RegisterAttribute("complete", "()Z", "GetCompleteHandler:Xamarin.KotlinX.Coroutines.ICompletableJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Complete();
    [NullableContextAttribute("1")]
[RegisterAttribute("completeExceptionally", "(Ljava/lang/Throwable;)Z", "GetCompleteExceptionally_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICompletableJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool CompleteExceptionally(Throwable exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CompletableJob")]
internal class Xamarin.KotlinX.Coroutines.ICompletableJobInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_complete;
    private IntPtr id_complete;
    [NullableAttribute("2")]
private static Delegate cb_completeExceptionally_Ljava_lang_Throwable_;
    private IntPtr id_completeExceptionally_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public ICompletableJobInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICompletableJobInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICompletableJob GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCompleteHandler();
    private static bool n_Complete(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Complete();
    private static Delegate GetCompleteExceptionally_Ljava_lang_Throwable_Handler();
    private static bool n_CompleteExceptionally_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_exception);
    public sealed virtual bool CompleteExceptionally(Throwable exception);
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CopyableThreadContextElement", "", "Xamarin.KotlinX.Coroutines.ICopyableThreadContextElementInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.ICopyableThreadContextElement {
    [NullableContextAttribute("1")]
[RegisterAttribute("copyForChild", "()Lkotlinx/coroutines/CopyableThreadContextElement;", "GetCopyForChildHandler:Xamarin.KotlinX.Coroutines.ICopyableThreadContextElementInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ICopyableThreadContextElement CopyForChild();
    [NullableContextAttribute("1")]
[RegisterAttribute("mergeForChild", "(Lkotlin/coroutines/CoroutineContext$Element;)Lkotlin/coroutines/CoroutineContext;", "GetMergeForChild_Lkotlin_coroutines_CoroutineContext_Element_Handler:Xamarin.KotlinX.Coroutines.ICopyableThreadContextElementInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ICoroutineContext MergeForChild(ICoroutineContextElement overwritingElement);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CopyableThreadContextElement")]
internal class Xamarin.KotlinX.Coroutines.ICopyableThreadContextElementInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_copyForChild;
    private IntPtr id_copyForChild;
    [NullableAttribute("2")]
private static Delegate cb_mergeForChild_Lkotlin_coroutines_CoroutineContext_Element_;
    private IntPtr id_mergeForChild_Lkotlin_coroutines_CoroutineContext_Element_;
    [NullableAttribute("2")]
private static Delegate cb_restoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_;
    private IntPtr id_restoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_updateThreadContext_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_updateThreadContext_Lkotlin_coroutines_CoroutineContext_;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContextKey Key { get; }
    public ICopyableThreadContextElementInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICopyableThreadContextElementInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICopyableThreadContextElement GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCopyForChildHandler();
    private static IntPtr n_CopyForChild(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICopyableThreadContextElement CopyForChild();
    private static Delegate GetMergeForChild_Lkotlin_coroutines_CoroutineContext_Element_Handler();
    private static IntPtr n_MergeForChild_Lkotlin_coroutines_CoroutineContext_Element_(IntPtr jnienv, IntPtr native__this, IntPtr native_overwritingElement);
    public sealed virtual ICoroutineContext MergeForChild(ICoroutineContextElement overwritingElement);
    private static Delegate GetRestoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_Handler();
    private static void n_RestoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_oldState);
    public sealed virtual void RestoreThreadContext(ICoroutineContext context, Object oldState);
    private static Delegate GetUpdateThreadContext_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_UpdateThreadContext_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual Object UpdateThreadContext(ICoroutineContext context);
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CopyableThrowable", "", "Xamarin.KotlinX.Coroutines.ICopyableThrowableInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.ICopyableThrowable {
    [NullableContextAttribute("2")]
[RegisterAttribute("createCopy", "()Ljava/lang/Throwable;", "GetCreateCopyHandler:Xamarin.KotlinX.Coroutines.ICopyableThrowableInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object CreateCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CopyableThrowable")]
internal class Xamarin.KotlinX.Coroutines.ICopyableThrowableInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_createCopy;
    private IntPtr id_createCopy;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICopyableThrowableInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICopyableThrowableInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICopyableThrowable GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetCreateCopyHandler();
    private static IntPtr n_CreateCopy(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object CreateCopy();
}
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler", "", "Xamarin.KotlinX.Coroutines.ICoroutineExceptionHandlerInvoker")]
public interface Xamarin.KotlinX.Coroutines.ICoroutineExceptionHandler {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    private static ICoroutineExceptionHandler();
    [NullableContextAttribute("1")]
[RegisterAttribute("handleException", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Throwable;)V", "GetHandleException_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Throwable_Handler:Xamarin.KotlinX.Coroutines.ICoroutineExceptionHandlerInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void HandleException(ICoroutineContext context, Throwable exception);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineExceptionHandler")]
internal class Xamarin.KotlinX.Coroutines.ICoroutineExceptionHandlerInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_handleException_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Throwable_;
    private IntPtr id_handleException_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContextKey Key { get; }
    public ICoroutineExceptionHandlerInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICoroutineExceptionHandlerInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICoroutineExceptionHandler GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetHandleException_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Throwable_Handler();
    private static void n_HandleException_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_exception);
    public sealed virtual void HandleException(ICoroutineContext context, Throwable exception);
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/CoroutineScope", "", "Xamarin.KotlinX.Coroutines.ICoroutineScopeInvoker")]
public interface Xamarin.KotlinX.Coroutines.ICoroutineScope {
    [NullableAttribute("1")]
public ICoroutineContext CoroutineContext { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getCoroutineContext", "()Lkotlin/coroutines/CoroutineContext;", "GetGetCoroutineContextHandler:Xamarin.KotlinX.Coroutines.ICoroutineScopeInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ICoroutineContext get_CoroutineContext();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/CoroutineScope")]
internal class Xamarin.KotlinX.Coroutines.ICoroutineScopeInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getCoroutineContext;
    private IntPtr id_getCoroutineContext;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContext CoroutineContext { get; }
    public ICoroutineScopeInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ICoroutineScopeInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ICoroutineScope GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCoroutineContextHandler();
    private static IntPtr n_GetCoroutineContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContext get_CoroutineContext();
}
[RegisterAttribute("kotlinx/coroutines/Deferred", "", "Xamarin.KotlinX.Coroutines.IDeferredInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.IDeferred {
    [NullableAttribute("2")]
public Object Completed { get; }
    [NullableAttribute("2")]
public Throwable CompletionExceptionOrNull { get; }
    [NullableAttribute("1")]
public ISelectClause1 OnAwait { get; }
    [NullableContextAttribute("2")]
[RegisterAttribute("getCompleted", "()Ljava/lang/Object;", "GetGetCompletedHandler:Xamarin.KotlinX.Coroutines.IDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object get_Completed();
    [NullableContextAttribute("2")]
[RegisterAttribute("getCompletionExceptionOrNull", "()Ljava/lang/Throwable;", "GetGetCompletionExceptionOrNullHandler:Xamarin.KotlinX.Coroutines.IDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Throwable get_CompletionExceptionOrNull();
    [NullableContextAttribute("1")]
[RegisterAttribute("getOnAwait", "()Lkotlinx/coroutines/selects/SelectClause1;", "GetGetOnAwaitHandler:Xamarin.KotlinX.Coroutines.IDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause1 get_OnAwait();
    [NullableContextAttribute("1")]
[RegisterAttribute("await", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetAwait_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.IDeferredInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Await(IContinuation p0);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Deferred")]
internal class Xamarin.KotlinX.Coroutines.IDeferredInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getCompleted;
    private IntPtr id_getCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getCompletionExceptionOrNull;
    private IntPtr id_getCompletionExceptionOrNull;
    [NullableAttribute("2")]
private static Delegate cb_getOnAwait;
    private IntPtr id_getOnAwait;
    [NullableAttribute("2")]
private static Delegate cb_await_Lkotlin_coroutines_Continuation_;
    private IntPtr id_await_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public Object Completed { get; }
    [NullableAttribute("2")]
public Throwable CompletionExceptionOrNull { get; }
    public ISelectClause1 OnAwait { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public IDeferredInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDeferredInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDeferred GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCompletedHandler();
    private static IntPtr n_GetCompleted(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Object get_Completed();
    private static Delegate GetGetCompletionExceptionOrNullHandler();
    private static IntPtr n_GetCompletionExceptionOrNull(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Throwable get_CompletionExceptionOrNull();
    private static Delegate GetGetOnAwaitHandler();
    private static IntPtr n_GetOnAwait(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause1 get_OnAwait();
    private static Delegate GetAwait_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Await_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Await(IContinuation p0);
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/Delay", "", "Xamarin.KotlinX.Coroutines.IDelayInvoker")]
public interface Xamarin.KotlinX.Coroutines.IDelay {
    [NullableContextAttribute("1")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("delay", "(JLkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetDelay_JLkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.IDelayInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Delay(long time, IContinuation p1);
    [NullableContextAttribute("1")]
[RegisterAttribute("invokeOnTimeout", "(JLjava/lang/Runnable;Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/DisposableHandle;", "GetInvokeOnTimeout_JLjava_lang_Runnable_Lkotlin_coroutines_CoroutineContext_Handler:Xamarin.KotlinX.Coroutines.IDelayInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IDisposableHandle InvokeOnTimeout(long timeMillis, IRunnable block, ICoroutineContext context);
    [NullableContextAttribute("1")]
[RegisterAttribute("scheduleResumeAfterDelay", "(JLkotlinx/coroutines/CancellableContinuation;)V", "GetScheduleResumeAfterDelay_JLkotlinx_coroutines_CancellableContinuation_Handler:Xamarin.KotlinX.Coroutines.IDelayInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void ScheduleResumeAfterDelay(long timeMillis, ICancellableContinuation continuation);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Delay")]
internal class Xamarin.KotlinX.Coroutines.IDelayInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_delay_JLkotlin_coroutines_Continuation_;
    private IntPtr id_delay_JLkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnTimeout_JLjava_lang_Runnable_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_invokeOnTimeout_JLjava_lang_Runnable_Lkotlin_coroutines_CoroutineContext_;
    [NullableAttribute("2")]
private static Delegate cb_scheduleResumeAfterDelay_JLkotlinx_coroutines_CancellableContinuation_;
    private IntPtr id_scheduleResumeAfterDelay_JLkotlinx_coroutines_CancellableContinuation_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDelayInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDelayInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDelay GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    [ObsoleteAttribute]
private static Delegate GetDelay_JLkotlin_coroutines_Continuation_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Delay_JLkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, long time, IntPtr native_p1);
    public sealed virtual Object Delay(long time, IContinuation p1);
    private static Delegate GetInvokeOnTimeout_JLjava_lang_Runnable_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_InvokeOnTimeout_JLjava_lang_Runnable_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, long timeMillis, IntPtr native_block, IntPtr native_context);
    public sealed virtual IDisposableHandle InvokeOnTimeout(long timeMillis, IRunnable block, ICoroutineContext context);
    private static Delegate GetScheduleResumeAfterDelay_JLkotlinx_coroutines_CancellableContinuation_Handler();
    private static void n_ScheduleResumeAfterDelay_JLkotlinx_coroutines_CancellableContinuation_(IntPtr jnienv, IntPtr native__this, long timeMillis, IntPtr native_continuation);
    public sealed virtual void ScheduleResumeAfterDelay(long timeMillis, ICancellableContinuation continuation);
}
[RegisterAttribute("kotlinx/coroutines/DelicateCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IDelicateCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IDelicateCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DelicateCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IDelicateCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDelicateCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDelicateCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDelicateCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[RegisterAttribute("kotlinx/coroutines/DisposableHandle", "", "Xamarin.KotlinX.Coroutines.IDisposableHandleInvoker")]
public interface Xamarin.KotlinX.Coroutines.IDisposableHandle {
    [RegisterAttribute("dispose", "()V", "GetDisposeHandler:Xamarin.KotlinX.Coroutines.IDisposableHandleInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Dispose();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/DisposableHandle")]
internal class Xamarin.KotlinX.Coroutines.IDisposableHandleInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_dispose;
    private IntPtr id_dispose;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IDisposableHandleInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IDisposableHandleInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IDisposableHandle GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetDisposeHandler();
    private static void n_Dispose(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Dispose();
}
[RegisterAttribute("kotlinx/coroutines/ExperimentalCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IExperimentalCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IExperimentalCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExperimentalCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IExperimentalCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IExperimentalCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExperimentalCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IExperimentalCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[RegisterAttribute("kotlinx/coroutines/ExperimentalForInheritanceCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IExperimentalForInheritanceCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IExperimentalForInheritanceCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ExperimentalForInheritanceCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IExperimentalForInheritanceCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IExperimentalForInheritanceCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IExperimentalForInheritanceCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IExperimentalForInheritanceCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[RegisterAttribute("kotlinx/coroutines/FlowPreview", "", "Xamarin.KotlinX.Coroutines.IFlowPreviewInvoker")]
public interface Xamarin.KotlinX.Coroutines.IFlowPreview {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/FlowPreview")]
internal class Xamarin.KotlinX.Coroutines.IFlowPreviewInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IFlowPreviewInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IFlowPreviewInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IFlowPreview GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[RegisterAttribute("kotlinx/coroutines/InternalCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IInternalCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IInternalCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/InternalCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IInternalCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IInternalCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IInternalCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IInternalCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[RegisterAttribute("kotlinx/coroutines/InternalForInheritanceCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IInternalForInheritanceCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IInternalForInheritanceCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/InternalForInheritanceCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IInternalForInheritanceCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IInternalForInheritanceCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IInternalForInheritanceCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IInternalForInheritanceCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/Job", "", "Xamarin.KotlinX.Coroutines.IJobInvoker")]
public interface Xamarin.KotlinX.Coroutines.IJob {
    private static JniPeerMembers _members;
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    private static IJob();
    [RegisterAttribute("getCancellationException", "()Ljava/util/concurrent/CancellationException;", "GetGetCancellationExceptionHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual CancellationException get_CancellationException();
    [RegisterAttribute("getChildren", "()Lkotlin/sequences/Sequence;", "GetGetChildrenHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISequence get_Children();
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsActive();
    [RegisterAttribute("isCancelled", "()Z", "GetIsCancelledHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsCancelled();
    [RegisterAttribute("isCompleted", "()Z", "GetIsCompletedHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsCompleted();
    [RegisterAttribute("getOnJoin", "()Lkotlinx/coroutines/selects/SelectClause0;", "GetGetOnJoinHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause0 get_OnJoin();
    [NullableContextAttribute("2")]
[RegisterAttribute("getParent", "()Lkotlinx/coroutines/Job;", "GetGetParentHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IJob get_Parent();
    [RegisterAttribute("attachChild", "(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;", "GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IChildHandle AttachChild(IChildJob child);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "GetCancel_Ljava_util_concurrent_CancellationException_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Cancel(CancellationException cause);
    [RegisterAttribute("invokeOnCompletion", "(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    [RegisterAttribute("invokeOnCompletion", "(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    [RegisterAttribute("join", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetJoin_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Join(IContinuation p0);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "GetPlus_Lkotlinx_coroutines_Job_Handler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IJob Plus(IJob other);
    [RegisterAttribute("start", "()Z", "GetStartHandler:Xamarin.KotlinX.Coroutines.IJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool Start();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Job")]
internal class Xamarin.KotlinX.Coroutines.IJobInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public IJobInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IJobInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IJob GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[AnnotationAttribute("kotlinx.coroutines.InternalCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.InternalCoroutinesApiAttribute : Attribute {
}
[AnnotationAttribute("kotlinx.coroutines.InternalForInheritanceCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.InternalForInheritanceCoroutinesApiAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/InterruptibleKt")]
public class Xamarin.KotlinX.Coroutines.InterruptibleKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal InterruptibleKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static InterruptibleKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("runInterruptible", "(Lkotlin/coroutines/CoroutineContext;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object RunInterruptible(ICoroutineContext context, IFunction0 block, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/intrinsics/CancellableKt")]
public class Xamarin.KotlinX.Coroutines.Intrinsics.CancellableKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CancellableKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CancellableKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("startCoroutineCancellable", "(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void StartCoroutineCancellable(IFunction1 obj, IContinuation completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/intrinsics/UndispatchedKt")]
public class Xamarin.KotlinX.Coroutines.Intrinsics.UndispatchedKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal UndispatchedKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static UndispatchedKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[RegisterAttribute("kotlinx/coroutines/ObsoleteCoroutinesApi", "", "Xamarin.KotlinX.Coroutines.IObsoleteCoroutinesApiInvoker")]
public interface Xamarin.KotlinX.Coroutines.IObsoleteCoroutinesApi {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ObsoleteCoroutinesApi")]
internal class Xamarin.KotlinX.Coroutines.IObsoleteCoroutinesApiInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_annotationType;
    private IntPtr id_annotationType;
    [NullableAttribute("2")]
private static Delegate cb_equals_Ljava_lang_Object_;
    private IntPtr id_equals_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_hashCode;
    private IntPtr id_hashCode;
    [NullableAttribute("2")]
private static Delegate cb_toString;
    private IntPtr id_toString;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public IObsoleteCoroutinesApiInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IObsoleteCoroutinesApiInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IObsoleteCoroutinesApi GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetAnnotationTypeHandler();
    private static IntPtr n_AnnotationType(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual Class AnnotationType();
    private static Delegate GetEquals_Ljava_lang_Object_Handler();
    private static bool n_Equals_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_obj);
    [NullableContextAttribute("2")]
public sealed virtual bool Equals(Object obj);
    private static Delegate GetGetHashCodeHandler();
    private static int n_GetHashCode(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int GetHashCode();
    private static Delegate GetToStringHandler();
    private static IntPtr n_ToString(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual string ToString();
}
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/ParentJob", "", "Xamarin.KotlinX.Coroutines.IParentJobInvoker")]
public interface Xamarin.KotlinX.Coroutines.IParentJob {
    [NullableAttribute("1")]
public CancellationException ChildJobCancellationCause { get; }
    [NullableContextAttribute("1")]
[RegisterAttribute("getChildJobCancellationCause", "()Ljava/util/concurrent/CancellationException;", "GetGetChildJobCancellationCauseHandler:Xamarin.KotlinX.Coroutines.IParentJobInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual CancellationException get_ChildJobCancellationCause();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ParentJob")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
internal class Xamarin.KotlinX.Coroutines.IParentJobInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getChildJobCancellationCause;
    private IntPtr id_getChildJobCancellationCause;
    [NullableAttribute("2")]
private static Delegate cb_getCancellationException;
    private IntPtr id_getCancellationException;
    [NullableAttribute("2")]
private static Delegate cb_getChildren;
    private IntPtr id_getChildren;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    private IntPtr id_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isCancelled;
    private IntPtr id_isCancelled;
    [NullableAttribute("2")]
private static Delegate cb_isCompleted;
    private IntPtr id_isCompleted;
    [NullableAttribute("2")]
private static Delegate cb_getOnJoin;
    private IntPtr id_getOnJoin;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    private IntPtr id_getParent;
    [NullableAttribute("2")]
private static Delegate cb_attachChild_Lkotlinx_coroutines_ChildJob_;
    private IntPtr id_attachChild_Lkotlinx_coroutines_ChildJob_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    private IntPtr id_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_ZZLkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invokeOnCompletion_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_join_Lkotlin_coroutines_Continuation_;
    private IntPtr id_join_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    private IntPtr id_plus_Lkotlinx_coroutines_Job_;
    [NullableAttribute("2")]
private static Delegate cb_start;
    private IntPtr id_start;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CancellationException ChildJobCancellationCause { get; }
    public CancellationException CancellationException { get; }
    public ISequence Children { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    public ICoroutineContextKey Key { get; }
    public IParentJobInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IParentJobInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IParentJob GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetChildJobCancellationCauseHandler();
    private static IntPtr n_GetChildJobCancellationCause(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_ChildJobCancellationCause();
    private static Delegate GetGetCancellationExceptionHandler();
    private static IntPtr n_GetCancellationException(IntPtr jnienv, IntPtr native__this);
    public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildrenHandler();
    private static IntPtr n_GetChildren(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISequence get_Children();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsActive();
    private static Delegate GetIsCancelledHandler();
    private static bool n_IsCancelled(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCancelled();
    private static Delegate GetIsCompletedHandler();
    private static bool n_IsCompleted(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsCompleted();
    private static Delegate GetGetOnJoinHandler();
    private static IntPtr n_GetOnJoin(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IJob get_Parent();
    private static Delegate GetAttachChild_Lkotlinx_coroutines_ChildJob_Handler();
    private static IntPtr n_AttachChild_Lkotlinx_coroutines_ChildJob_(IntPtr jnienv, IntPtr native__this, IntPtr native_child);
    public sealed virtual IChildHandle AttachChild(IChildJob child);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
public sealed virtual void Cancel(CancellationException cause);
    private static Delegate GetInvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_ZZLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, bool onCancelling, bool invokeImmediately, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    private static Delegate GetInvokeOnCompletion_Lkotlin_jvm_functions_Function1_Handler();
    private static IntPtr n_InvokeOnCompletion_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_handler);
    public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    private static Delegate GetJoin_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Join_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Join(IContinuation p0);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    public sealed virtual IJob Plus(IJob other);
    private static Delegate GetStartHandler();
    private static bool n_Start(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool Start();
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/ThreadContextElement", "", "Xamarin.KotlinX.Coroutines.IThreadContextElementInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.IThreadContextElement {
    [NullableContextAttribute("1")]
[RegisterAttribute("restoreThreadContext", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Object;)V", "GetRestoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.IThreadContextElementInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void RestoreThreadContext(ICoroutineContext context, Object oldState);
    [NullableContextAttribute("1")]
[RegisterAttribute("updateThreadContext", "(Lkotlin/coroutines/CoroutineContext;)Ljava/lang/Object;", "GetUpdateThreadContext_Lkotlin_coroutines_CoroutineContext_Handler:Xamarin.KotlinX.Coroutines.IThreadContextElementInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object UpdateThreadContext(ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ThreadContextElement")]
internal class Xamarin.KotlinX.Coroutines.IThreadContextElementInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_restoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_;
    private IntPtr id_restoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_updateThreadContext_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_updateThreadContext_Lkotlin_coroutines_CoroutineContext_;
    [NullableAttribute("2")]
private static Delegate cb_getKey;
    private IntPtr id_getKey;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    private IntPtr id_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    private IntPtr id_plus_Lkotlin_coroutines_CoroutineContext_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContextKey Key { get; }
    public IThreadContextElementInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IThreadContextElementInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IThreadContextElement GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetRestoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_Handler();
    private static void n_RestoreThreadContext_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_context, IntPtr native_oldState);
    public sealed virtual void RestoreThreadContext(ICoroutineContext context, Object oldState);
    private static Delegate GetUpdateThreadContext_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_UpdateThreadContext_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual Object UpdateThreadContext(ICoroutineContext context);
    private static Delegate GetGetKeyHandler();
    private static IntPtr n_GetKey(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContextKey get_Key();
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
public sealed virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    public sealed virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    public sealed virtual ICoroutineContext Plus(ICoroutineContext context);
}
[RegisterAttribute("kotlinx/coroutines/Job")]
public abstract class Xamarin.KotlinX.Coroutines.Job : Object {
}
[RegisterAttribute("kotlinx/coroutines/Job")]
[ObsoleteAttribute("Use the 'Job' type. This type will be removed in a future release.", "True")]
public abstract class Xamarin.KotlinX.Coroutines.JobConsts : Job {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/Job$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.JobDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal JobDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static JobDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/Job;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IJob _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(IJob _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext MinusKey(IJob _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/Job;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext Plus(IJob _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
public static IJob Plus(IJob _this, IJob other);
}
[RegisterAttribute("kotlinx/coroutines/Job$Key")]
public class Xamarin.KotlinX.Coroutines.JobKey : Object {
    [NullableAttribute("1")]
private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [NullableAttribute("1")]
[DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal JobKey(IntPtr javaReference, JniHandleOwnership transfer);
    private static JobKey();
    internal static IntPtr get_class_ref();
    [NullableContextAttribute("1")]
public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    [NullableContextAttribute("1")]
protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/JobKt")]
public class Xamarin.KotlinX.Coroutines.JobKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal JobKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static JobKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Job", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;", "")]
public static ICompletableJob Job(IJob parent);
    [RegisterAttribute("cancel", "(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V", "")]
public static void Cancel(ICoroutineContext _this_cancel, CancellationException cause);
    [RegisterAttribute("cancel", "(Lkotlinx/coroutines/Job;Ljava/lang/String;Ljava/lang/Throwable;)V", "")]
public static void Cancel(IJob _this_cancel, string message, Throwable cause);
    [RegisterAttribute("cancelAndJoin", "(Lkotlinx/coroutines/Job;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object CancelAndJoin(IJob _this_cancelAndJoin, IContinuation _completion);
    [RegisterAttribute("cancelChildren", "(Lkotlin/coroutines/CoroutineContext;Ljava/util/concurrent/CancellationException;)V", "")]
public static void CancelChildren(ICoroutineContext _this_cancelChildren, CancellationException cause);
    [RegisterAttribute("cancelChildren", "(Lkotlinx/coroutines/Job;Ljava/util/concurrent/CancellationException;)V", "")]
public static void CancelChildren(IJob _this_cancelChildren, CancellationException cause);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("cancelFutureOnCancellation", "(Lkotlinx/coroutines/CancellableContinuation;Ljava/util/concurrent/Future;)V", "")]
public static void CancelFutureOnCancellation(ICancellableContinuation _this_cancelFutureOnCancellation, IFuture future);
    [RegisterAttribute("disposeOnCompletion", "(Lkotlinx/coroutines/Job;Lkotlinx/coroutines/DisposableHandle;)Lkotlinx/coroutines/DisposableHandle;", "")]
public static IDisposableHandle DisposeOnCompletion(IJob _this_disposeOnCompletion, IDisposableHandle handle);
    [RegisterAttribute("ensureActive", "(Lkotlin/coroutines/CoroutineContext;)V", "")]
public static void EnsureActive(ICoroutineContext _this_ensureActive);
    [RegisterAttribute("ensureActive", "(Lkotlinx/coroutines/Job;)V", "")]
public static void EnsureActive(IJob _this_ensureActive);
    [RegisterAttribute("getJob", "(Lkotlin/coroutines/CoroutineContext;)Lkotlinx/coroutines/Job;", "")]
public static IJob GetJob(ICoroutineContext _this_job);
    [RegisterAttribute("isActive", "(Lkotlin/coroutines/CoroutineContext;)Z", "")]
public static bool IsActive(ICoroutineContext _this_isActive);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[ObsoleteAttribute("This class is obsoleted in this android platform")]
[RegisterAttribute("kotlinx/coroutines/JobSupport")]
public class Xamarin.KotlinX.Coroutines.JobSupport : Object {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getChildJobCancellationCause;
    [NullableAttribute("2")]
private static Delegate cb_isActive;
    [NullableAttribute("2")]
private static Delegate cb_isScopedCoroutine;
    [NullableAttribute("2")]
private static Delegate cb_getParent;
    [NullableAttribute("2")]
private static Delegate cb_afterCompletion_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_cancel_Ljava_util_concurrent_CancellationException_;
    [NullableAttribute("2")]
private static Delegate cb_cancelInternal_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_cancellationExceptionMessage;
    [NullableAttribute("2")]
private static Delegate cb_childCancelled_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_get_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_handleJobException_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_minusKey_Lkotlin_coroutines_CoroutineContext_Key_;
    [NullableAttribute("2")]
private static Delegate cb_onCancelling_Ljava_lang_Throwable_;
    [NullableAttribute("2")]
private static Delegate cb_onCompletionInternal_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_onStart;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlin_coroutines_CoroutineContext_;
    [NullableAttribute("2")]
private static Delegate cb_plus_Lkotlinx_coroutines_Job_;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public CancellationException CancellationException { get; }
    public CancellationException ChildJobCancellationCause { get; }
    public ISequence Children { get; }
    [NullableAttribute("2")]
protected Throwable CompletionCause { get; }
    protected bool CompletionCauseHandled { get; }
    [NullableAttribute("2")]
public Throwable CompletionExceptionOrNull { get; }
    public bool IsActive { get; }
    public bool IsCancelled { get; }
    public bool IsCompleted { get; }
    public bool IsCompletedExceptionally { get; }
    protected bool IsScopedCoroutine { get; }
    public ICoroutineContextKey Key { get; }
    protected ISelectClause1 OnAwaitInternal { get; }
    public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    protected JobSupport(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Z)V", "")]
public JobSupport(bool active);
    private static JobSupport();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCancellationException", "()Ljava/util/concurrent/CancellationException;", "")]
public sealed virtual CancellationException get_CancellationException();
    private static Delegate GetGetChildJobCancellationCauseHandler();
    private static IntPtr n_GetChildJobCancellationCause(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getChildJobCancellationCause", "()Ljava/util/concurrent/CancellationException;", "GetGetChildJobCancellationCauseHandler")]
public virtual CancellationException get_ChildJobCancellationCause();
    [RegisterAttribute("getChildren", "()Lkotlin/sequences/Sequence;", "")]
public sealed virtual ISequence get_Children();
    [NullableContextAttribute("2")]
[RegisterAttribute("getCompletionCause", "()Ljava/lang/Throwable;", "")]
protected Throwable get_CompletionCause();
    [RegisterAttribute("getCompletionCauseHandled", "()Z", "")]
protected bool get_CompletionCauseHandled();
    [NullableContextAttribute("2")]
[RegisterAttribute("getCompletionExceptionOrNull", "()Ljava/lang/Throwable;", "")]
public Throwable get_CompletionExceptionOrNull();
    private static Delegate GetIsActiveHandler();
    private static bool n_IsActive(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isActive", "()Z", "GetIsActiveHandler")]
public virtual bool get_IsActive();
    [RegisterAttribute("isCancelled", "()Z", "")]
public sealed virtual bool get_IsCancelled();
    [RegisterAttribute("isCompleted", "()Z", "")]
public sealed virtual bool get_IsCompleted();
    [RegisterAttribute("isCompletedExceptionally", "()Z", "")]
public bool get_IsCompletedExceptionally();
    private static Delegate GetIsScopedCoroutineHandler();
    private static bool n_IsScopedCoroutine(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("isScopedCoroutine", "()Z", "GetIsScopedCoroutineHandler")]
protected virtual bool get_IsScopedCoroutine();
    [RegisterAttribute("getKey", "()Lkotlin/coroutines/CoroutineContext$Key;", "")]
public sealed virtual ICoroutineContextKey get_Key();
    [RegisterAttribute("getOnAwaitInternal", "()Lkotlinx/coroutines/selects/SelectClause1;", "")]
protected ISelectClause1 get_OnAwaitInternal();
    [RegisterAttribute("getOnJoin", "()Lkotlinx/coroutines/selects/SelectClause0;", "")]
public sealed virtual ISelectClause0 get_OnJoin();
    private static Delegate GetGetParentHandler();
    private static IntPtr n_GetParent(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
[RegisterAttribute("getParent", "()Lkotlinx/coroutines/Job;", "GetGetParentHandler")]
public virtual IJob get_Parent();
    private static Delegate GetAfterCompletion_Ljava_lang_Object_Handler();
    private static void n_AfterCompletion_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [NullableContextAttribute("2")]
[RegisterAttribute("afterCompletion", "(Ljava/lang/Object;)V", "GetAfterCompletion_Ljava_lang_Object_Handler")]
protected virtual void AfterCompletion(Object state);
    [RegisterAttribute("attachChild", "(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;", "")]
public sealed virtual IChildHandle AttachChild(IChildJob child);
    [RegisterAttribute("awaitInternal", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
protected Object AwaitInternal(IContinuation _completion);
    private static Delegate GetCancel_Ljava_util_concurrent_CancellationException_Handler();
    private static void n_Cancel_Ljava_util_concurrent_CancellationException_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "GetCancel_Ljava_util_concurrent_CancellationException_Handler")]
public virtual void Cancel(CancellationException cause);
    [NullableContextAttribute("2")]
[RegisterAttribute("cancelCoroutine", "(Ljava/lang/Throwable;)Z", "")]
public bool CancelCoroutine(Throwable cause);
    private static Delegate GetCancelInternal_Ljava_lang_Throwable_Handler();
    private static void n_CancelInternal_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [RegisterAttribute("cancelInternal", "(Ljava/lang/Throwable;)V", "GetCancelInternal_Ljava_lang_Throwable_Handler")]
public virtual void CancelInternal(Throwable cause);
    private static Delegate GetCancellationExceptionMessageHandler();
    private static IntPtr n_CancellationExceptionMessage(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("cancellationExceptionMessage", "()Ljava/lang/String;", "GetCancellationExceptionMessageHandler")]
protected virtual string CancellationExceptionMessage();
    private static Delegate GetChildCancelled_Ljava_lang_Throwable_Handler();
    private static bool n_ChildCancelled_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [RegisterAttribute("childCancelled", "(Ljava/lang/Throwable;)Z", "GetChildCancelled_Ljava_lang_Throwable_Handler")]
public virtual bool ChildCancelled(Throwable cause);
    private static Delegate GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static IntPtr n_Fold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_initial, IntPtr native_operation);
    [NullableContextAttribute("2")]
[RegisterAttribute("fold", "(Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "GetFold_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Fold(Object initial, IFunction2 operation);
    private static Delegate GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_Get_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("get", "(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "GetGet_Lkotlin_coroutines_CoroutineContext_Key_Handler")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public virtual Object Get(ICoroutineContextKey key);
    private static Delegate GetHandleJobException_Ljava_lang_Throwable_Handler();
    private static bool n_HandleJobException_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_exception);
    [RegisterAttribute("handleJobException", "(Ljava/lang/Throwable;)Z", "GetHandleJobException_Ljava_lang_Throwable_Handler")]
protected virtual bool HandleJobException(Throwable exception);
    [NullableContextAttribute("2")]
[RegisterAttribute("initParentJob", "(Lkotlinx/coroutines/Job;)V", "")]
protected void InitParentJob(IJob parent);
    [RegisterAttribute("invokeOnCompletion", "(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "")]
public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    [RegisterAttribute("invokeOnCompletion", "(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "")]
public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    [RegisterAttribute("join", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public sealed virtual Object Join(IContinuation _completion);
    private static Delegate GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler();
    private static IntPtr n_MinusKey_Lkotlin_coroutines_CoroutineContext_Key_(IntPtr jnienv, IntPtr native__this, IntPtr native_key);
    [RegisterAttribute("minusKey", "(Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "GetMinusKey_Lkotlin_coroutines_CoroutineContext_Key_Handler")]
public virtual ICoroutineContext MinusKey(ICoroutineContextKey key);
    private static Delegate GetOnCancelling_Ljava_lang_Throwable_Handler();
    private static void n_OnCancelling_Ljava_lang_Throwable_(IntPtr jnienv, IntPtr native__this, IntPtr native_cause);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCancelling", "(Ljava/lang/Throwable;)V", "GetOnCancelling_Ljava_lang_Throwable_Handler")]
protected virtual void OnCancelling(Throwable cause);
    private static Delegate GetOnCompletionInternal_Ljava_lang_Object_Handler();
    private static void n_OnCompletionInternal_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_state);
    [NullableContextAttribute("2")]
[RegisterAttribute("onCompletionInternal", "(Ljava/lang/Object;)V", "GetOnCompletionInternal_Ljava_lang_Object_Handler")]
protected virtual void OnCompletionInternal(Object state);
    private static Delegate GetOnStartHandler();
    private static void n_OnStart(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("onStart", "()V", "GetOnStartHandler")]
protected virtual void OnStart();
    [RegisterAttribute("parentCancelled", "(Lkotlinx/coroutines/ParentJob;)V", "")]
public sealed virtual void ParentCancelled(IParentJob parentJob);
    private static Delegate GetPlus_Lkotlin_coroutines_CoroutineContext_Handler();
    private static IntPtr n_Plus_Lkotlin_coroutines_CoroutineContext_(IntPtr jnienv, IntPtr native__this, IntPtr native_context);
    [RegisterAttribute("plus", "(Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "GetPlus_Lkotlin_coroutines_CoroutineContext_Handler")]
public virtual ICoroutineContext Plus(ICoroutineContext context);
    [ObsoleteAttribute]
private static Delegate GetPlus_Lkotlinx_coroutines_Job_Handler();
    [ObsoleteAttribute]
private static IntPtr n_Plus_Lkotlinx_coroutines_Job_(IntPtr jnienv, IntPtr native__this, IntPtr native_other);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "GetPlus_Lkotlinx_coroutines_Job_Handler")]
public virtual IJob Plus(IJob other);
    [RegisterAttribute("start", "()Z", "")]
public sealed virtual bool Start();
    [RegisterAttribute("toCancellationException", "(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;", "")]
protected CancellationException ToCancellationException(Throwable _this_toCancellationException, string message);
    [RegisterAttribute("toDebugString", "()Ljava/lang/String;", "")]
public string ToDebugString();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/JobSupportKt")]
public class Xamarin.KotlinX.Coroutines.JobSupportKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal JobSupportKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static JobSupportKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/MainCoroutineDispatcher")]
public abstract class Xamarin.KotlinX.Coroutines.MainCoroutineDispatcher : CoroutineDispatcher {
    private static JniPeerMembers _members;
    [NullableAttribute("2")]
private static Delegate cb_getImmediate;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MainCoroutineDispatcher Immediate { get; }
    protected MainCoroutineDispatcher(IntPtr javaReference, JniHandleOwnership transfer);
    private static MainCoroutineDispatcher();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetImmediateHandler();
    private static IntPtr n_GetImmediate(IntPtr jnienv, IntPtr native__this);
    [RegisterAttribute("getImmediate", "()Lkotlinx/coroutines/MainCoroutineDispatcher;", "GetGetImmediateHandler")]
public abstract virtual MainCoroutineDispatcher get_Immediate();
    [NullableContextAttribute("2")]
[RegisterAttribute("toStringInternalImpl", "()Ljava/lang/String;", "")]
protected string ToStringInternalImpl();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/MainCoroutineDispatcher")]
internal class Xamarin.KotlinX.Coroutines.MainCoroutineDispatcherInvoker : MainCoroutineDispatcher {
    private static JniPeerMembers _members;
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public MainCoroutineDispatcher Immediate { get; }
    public MainCoroutineDispatcherInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static MainCoroutineDispatcherInvoker();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getImmediate", "()Lkotlinx/coroutines/MainCoroutineDispatcher;", "GetGetImmediateHandler")]
public virtual MainCoroutineDispatcher get_Immediate();
    [RegisterAttribute("dispatch", "(Lkotlin/coroutines/CoroutineContext;Ljava/lang/Runnable;)V", "GetDispatch_Lkotlin_coroutines_CoroutineContext_Ljava_lang_Runnable_Handler")]
public virtual void Dispatch(ICoroutineContext context, IRunnable block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/NonCancellable")]
public class Xamarin.KotlinX.Coroutines.NonCancellable : AbstractCoroutineContextElement {
    private static JniPeerMembers _members;
    [RegisterAttribute("INSTANCE")]
public static NonCancellable Instance { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [ObsoleteAttribute("deprecated")]
public CancellationException CancellationException { get; }
    [ObsoleteAttribute("deprecated")]
public ISequence Children { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsActive { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsCancelled { get; }
    [ObsoleteAttribute("deprecated")]
public bool IsCompleted { get; }
    [ObsoleteAttribute("deprecated")]
public ISelectClause0 OnJoin { get; }
    [NullableAttribute("2")]
[ObsoleteAttribute("deprecated")]
public IJob Parent { get; }
    internal NonCancellable(IntPtr javaReference, JniHandleOwnership transfer);
    private static NonCancellable();
    public static NonCancellable get_Instance();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getCancellationException", "()Ljava/util/concurrent/CancellationException;", "")]
public sealed virtual CancellationException get_CancellationException();
    [RegisterAttribute("getChildren", "()Lkotlin/sequences/Sequence;", "")]
public sealed virtual ISequence get_Children();
    [RegisterAttribute("isActive", "()Z", "")]
public sealed virtual bool get_IsActive();
    [RegisterAttribute("isCancelled", "()Z", "")]
public sealed virtual bool get_IsCancelled();
    [RegisterAttribute("isCompleted", "()Z", "")]
public sealed virtual bool get_IsCompleted();
    [RegisterAttribute("getOnJoin", "()Lkotlinx/coroutines/selects/SelectClause0;", "")]
public sealed virtual ISelectClause0 get_OnJoin();
    [NullableContextAttribute("2")]
[RegisterAttribute("getParent", "()Lkotlinx/coroutines/Job;", "")]
public sealed virtual IJob get_Parent();
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("attachChild", "(Lkotlinx/coroutines/ChildJob;)Lkotlinx/coroutines/ChildHandle;", "")]
public sealed virtual IChildHandle AttachChild(IChildJob child);
    [NullableContextAttribute("2")]
[ObsoleteAttribute("deprecated")]
[RegisterAttribute("cancel", "(Ljava/util/concurrent/CancellationException;)V", "")]
public sealed virtual void Cancel(CancellationException cause);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("invokeOnCompletion", "(ZZLkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "")]
public sealed virtual IDisposableHandle InvokeOnCompletion(bool onCancelling, bool invokeImmediately, IFunction1 handler);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("invokeOnCompletion", "(Lkotlin/jvm/functions/Function1;)Lkotlinx/coroutines/DisposableHandle;", "")]
public sealed virtual IDisposableHandle InvokeOnCompletion(IFunction1 handler);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("join", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public sealed virtual Object Join(IContinuation _completion);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
public sealed virtual IJob Plus(IJob other);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("start", "()Z", "")]
public sealed virtual bool Start();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/NonDisposableHandle")]
public class Xamarin.KotlinX.Coroutines.NonDisposableHandle : Object {
    private static JniPeerMembers _members;
    [RegisterAttribute("INSTANCE")]
public static NonDisposableHandle Instance { get; }
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    [NullableAttribute("2")]
public IJob Parent { get; }
    internal NonDisposableHandle(IntPtr javaReference, JniHandleOwnership transfer);
    private static NonDisposableHandle();
    public static NonDisposableHandle get_Instance();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
[RegisterAttribute("getParent", "()Lkotlinx/coroutines/Job;", "")]
public sealed virtual IJob get_Parent();
    [RegisterAttribute("childCancelled", "(Ljava/lang/Throwable;)Z", "")]
public sealed virtual bool ChildCancelled(Throwable cause);
    [RegisterAttribute("dispose", "()V", "")]
public sealed virtual void Dispose();
}
[AnnotationAttribute("kotlinx.coroutines.ObsoleteCoroutinesApi")]
public class Xamarin.KotlinX.Coroutines.ObsoleteCoroutinesApiAttribute : Attribute {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ParentJob$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.ParentJobDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ParentJobDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ParentJobDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/ParentJob;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IParentJob _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/ParentJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(IParentJob _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/ParentJob;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext MinusKey(IParentJob _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/ParentJob;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
public static ICoroutineContext Plus(IParentJob _this, ICoroutineContext context);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("plus", "(Lkotlinx/coroutines/ParentJob;Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/Job;", "")]
public static IJob Plus(IParentJob _this, IJob other);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/RunnableKt")]
public class Xamarin.KotlinX.Coroutines.RunnableKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal RunnableKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static RunnableKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Runnable", "(Lkotlin/jvm/functions/Function0;)Ljava/lang/Runnable;", "")]
public static IRunnable Runnable(IFunction0 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/SchedulerTaskKt")]
public class Xamarin.KotlinX.Coroutines.SchedulerTaskKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SchedulerTaskKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SchedulerTaskKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/scheduling/CoroutineSchedulerKt")]
public class Xamarin.KotlinX.Coroutines.Scheduling.CoroutineSchedulerKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal CoroutineSchedulerKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static CoroutineSchedulerKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/scheduling/TasksKt")]
public class Xamarin.KotlinX.Coroutines.Scheduling.TasksKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TasksKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static TasksKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("isBlocking", "(Ljava/lang/Object;)Z", "")]
public static bool IsBlocking(Object obj);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/scheduling/WorkQueueKt")]
public class Xamarin.KotlinX.Coroutines.Scheduling.WorkQueueKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WorkQueueKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static WorkQueueKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getMaskForStealingMode", "(Ljava/lang/Object;)I", "")]
public static int GetMaskForStealingMode(Object obj);
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectBuilder", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectBuilder {
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/selects/SelectClause0;Lkotlin/jvm/functions/Function1;)V", "GetInvoke_Lkotlinx_coroutines_selects_SelectClause0_Lkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Invoke(ISelectClause0 p0, IFunction1 block);
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/selects/SelectClause1;Lkotlin/jvm/functions/Function2;)V", "GetInvoke_Lkotlinx_coroutines_selects_SelectClause1_Lkotlin_jvm_functions_Function2_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Invoke(ISelectClause1 p0, IFunction2 block);
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V", "GetInvoke_Lkotlinx_coroutines_selects_SelectClause2_Lkotlin_jvm_functions_Function2_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Invoke(ISelectClause2 p0, IFunction2 block);
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/selects/SelectClause2;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)V", "GetInvoke_Lkotlinx_coroutines_selects_SelectClause2_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public abstract virtual void Invoke(ISelectClause2 p0, Object param, IFunction2 block);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onTimeout", "(JLkotlin/jvm/functions/Function1;)V", "GetOnTimeout_JLkotlin_jvm_functions_Function1_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void OnTimeout(long timeMillis, IFunction1 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectBuilder")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectBuilderInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_invoke_Lkotlinx_coroutines_selects_SelectClause0_Lkotlin_jvm_functions_Function1_;
    private IntPtr id_invoke_Lkotlinx_coroutines_selects_SelectClause0_Lkotlin_jvm_functions_Function1_;
    [NullableAttribute("2")]
private static Delegate cb_invoke_Lkotlinx_coroutines_selects_SelectClause1_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_invoke_Lkotlinx_coroutines_selects_SelectClause1_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_invoke_Lkotlinx_coroutines_selects_SelectClause2_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_invoke_Lkotlinx_coroutines_selects_SelectClause2_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_invoke_Lkotlinx_coroutines_selects_SelectClause2_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    private IntPtr id_invoke_Lkotlinx_coroutines_selects_SelectClause2_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_;
    [NullableAttribute("2")]
private static Delegate cb_onTimeout_JLkotlin_jvm_functions_Function1_;
    private IntPtr id_onTimeout_JLkotlin_jvm_functions_Function1_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ISelectBuilderInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectBuilderInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectBuilder GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetInvoke_Lkotlinx_coroutines_selects_SelectClause0_Lkotlin_jvm_functions_Function1_Handler();
    private static void n_Invoke_Lkotlinx_coroutines_selects_SelectClause0_Lkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_block);
    public sealed virtual void Invoke(ISelectClause0 p0, IFunction1 block);
    private static Delegate GetInvoke_Lkotlinx_coroutines_selects_SelectClause1_Lkotlin_jvm_functions_Function2_Handler();
    private static void n_Invoke_Lkotlinx_coroutines_selects_SelectClause1_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_block);
    public sealed virtual void Invoke(ISelectClause1 p0, IFunction2 block);
    private static Delegate GetInvoke_Lkotlinx_coroutines_selects_SelectClause2_Lkotlin_jvm_functions_Function2_Handler();
    private static void n_Invoke_Lkotlinx_coroutines_selects_SelectClause2_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_block);
    public sealed virtual void Invoke(ISelectClause2 p0, IFunction2 block);
    private static Delegate GetInvoke_Lkotlinx_coroutines_selects_SelectClause2_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_Handler();
    private static void n_Invoke_Lkotlinx_coroutines_selects_SelectClause2_Ljava_lang_Object_Lkotlin_jvm_functions_Function2_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0, IntPtr native_param, IntPtr native_block);
    public sealed virtual void Invoke(ISelectClause2 p0, Object param, IFunction2 block);
    [ObsoleteAttribute]
private static Delegate GetOnTimeout_JLkotlin_jvm_functions_Function1_Handler();
    [ObsoleteAttribute]
private static void n_OnTimeout_JLkotlin_jvm_functions_Function1_(IntPtr jnienv, IntPtr native__this, long timeMillis, IntPtr native_block);
    public sealed virtual void OnTimeout(long timeMillis, IFunction1 block);
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectClause {
    public Object ClauseObject { get; }
    [NullableAttribute("2")]
public IFunction3 OnCancellationConstructor { get; }
    public IFunction3 ProcessResFunc { get; }
    public IFunction3 RegFunc { get; }
    [RegisterAttribute("getClauseObject", "()Ljava/lang/Object;", "GetGetClauseObjectHandler:Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object get_ClauseObject();
    [NullableContextAttribute("2")]
[RegisterAttribute("getOnCancellationConstructor", "()Lkotlin/jvm/functions/Function3;", "GetGetOnCancellationConstructorHandler:Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IFunction3 get_OnCancellationConstructor();
    [RegisterAttribute("getProcessResFunc", "()Lkotlin/jvm/functions/Function3;", "GetGetProcessResFuncHandler:Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IFunction3 get_ProcessResFunc();
    [RegisterAttribute("getRegFunc", "()Lkotlin/jvm/functions/Function3;", "GetGetRegFuncHandler:Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual IFunction3 get_RegFunc();
}
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause0", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectClause0Invoker")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectClause0 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause0")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectClause0Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getClauseObject;
    private IntPtr id_getClauseObject;
    [NullableAttribute("2")]
private static Delegate cb_getOnCancellationConstructor;
    private IntPtr id_getOnCancellationConstructor;
    [NullableAttribute("2")]
private static Delegate cb_getProcessResFunc;
    private IntPtr id_getProcessResFunc;
    [NullableAttribute("2")]
private static Delegate cb_getRegFunc;
    private IntPtr id_getRegFunc;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Object ClauseObject { get; }
    [NullableAttribute("2")]
public IFunction3 OnCancellationConstructor { get; }
    public IFunction3 ProcessResFunc { get; }
    public IFunction3 RegFunc { get; }
    public ISelectClause0Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectClause0Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectClause0 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetClauseObjectHandler();
    private static IntPtr n_GetClauseObject(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object get_ClauseObject();
    private static Delegate GetGetOnCancellationConstructorHandler();
    private static IntPtr n_GetOnCancellationConstructor(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IFunction3 get_OnCancellationConstructor();
    private static Delegate GetGetProcessResFuncHandler();
    private static IntPtr n_GetProcessResFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_ProcessResFunc();
    private static Delegate GetGetRegFuncHandler();
    private static IntPtr n_GetRegFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_RegFunc();
}
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause1", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectClause1Invoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectClause1 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause1")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectClause1Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getClauseObject;
    private IntPtr id_getClauseObject;
    [NullableAttribute("2")]
private static Delegate cb_getOnCancellationConstructor;
    private IntPtr id_getOnCancellationConstructor;
    [NullableAttribute("2")]
private static Delegate cb_getProcessResFunc;
    private IntPtr id_getProcessResFunc;
    [NullableAttribute("2")]
private static Delegate cb_getRegFunc;
    private IntPtr id_getRegFunc;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Object ClauseObject { get; }
    [NullableAttribute("2")]
public IFunction3 OnCancellationConstructor { get; }
    public IFunction3 ProcessResFunc { get; }
    public IFunction3 RegFunc { get; }
    public ISelectClause1Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectClause1Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectClause1 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetClauseObjectHandler();
    private static IntPtr n_GetClauseObject(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object get_ClauseObject();
    private static Delegate GetGetOnCancellationConstructorHandler();
    private static IntPtr n_GetOnCancellationConstructor(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IFunction3 get_OnCancellationConstructor();
    private static Delegate GetGetProcessResFuncHandler();
    private static IntPtr n_GetProcessResFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_ProcessResFunc();
    private static Delegate GetGetRegFuncHandler();
    private static IntPtr n_GetRegFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_RegFunc();
}
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause2", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectClause2Invoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectClause2 {
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause2")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectClause2Invoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getClauseObject;
    private IntPtr id_getClauseObject;
    [NullableAttribute("2")]
private static Delegate cb_getOnCancellationConstructor;
    private IntPtr id_getOnCancellationConstructor;
    [NullableAttribute("2")]
private static Delegate cb_getProcessResFunc;
    private IntPtr id_getProcessResFunc;
    [NullableAttribute("2")]
private static Delegate cb_getRegFunc;
    private IntPtr id_getRegFunc;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Object ClauseObject { get; }
    [NullableAttribute("2")]
public IFunction3 OnCancellationConstructor { get; }
    public IFunction3 ProcessResFunc { get; }
    public IFunction3 RegFunc { get; }
    public ISelectClause2Invoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectClause2Invoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectClause2 GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetClauseObjectHandler();
    private static IntPtr n_GetClauseObject(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object get_ClauseObject();
    private static Delegate GetGetOnCancellationConstructorHandler();
    private static IntPtr n_GetOnCancellationConstructor(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IFunction3 get_OnCancellationConstructor();
    private static Delegate GetGetProcessResFuncHandler();
    private static IntPtr n_GetProcessResFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_ProcessResFunc();
    private static Delegate GetGetRegFuncHandler();
    private static IntPtr n_GetRegFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_RegFunc();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectClause")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectClauseInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getClauseObject;
    private IntPtr id_getClauseObject;
    [NullableAttribute("2")]
private static Delegate cb_getOnCancellationConstructor;
    private IntPtr id_getOnCancellationConstructor;
    [NullableAttribute("2")]
private static Delegate cb_getProcessResFunc;
    private IntPtr id_getProcessResFunc;
    [NullableAttribute("2")]
private static Delegate cb_getRegFunc;
    private IntPtr id_getRegFunc;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public Object ClauseObject { get; }
    [NullableAttribute("2")]
public IFunction3 OnCancellationConstructor { get; }
    public IFunction3 ProcessResFunc { get; }
    public IFunction3 RegFunc { get; }
    public ISelectClauseInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectClauseInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectClause GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetClauseObjectHandler();
    private static IntPtr n_GetClauseObject(IntPtr jnienv, IntPtr native__this);
    public sealed virtual Object get_ClauseObject();
    private static Delegate GetGetOnCancellationConstructorHandler();
    private static IntPtr n_GetOnCancellationConstructor(IntPtr jnienv, IntPtr native__this);
    [NullableContextAttribute("2")]
public sealed virtual IFunction3 get_OnCancellationConstructor();
    private static Delegate GetGetProcessResFuncHandler();
    private static IntPtr n_GetProcessResFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_ProcessResFunc();
    private static Delegate GetGetRegFuncHandler();
    private static IntPtr n_GetRegFunc(IntPtr jnienv, IntPtr native__this);
    public sealed virtual IFunction3 get_RegFunc();
}
[NullableContextAttribute("1")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectInstance", "", "Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public interface Xamarin.KotlinX.Coroutines.Selects.ISelectInstance {
    public ICoroutineContext Context { get; }
    [RegisterAttribute("getContext", "()Lkotlin/coroutines/CoroutineContext;", "GetGetContextHandler:Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ICoroutineContext get_Context();
    [RegisterAttribute("disposeOnCompletion", "(Lkotlinx/coroutines/DisposableHandle;)V", "GetDisposeOnCompletion_Lkotlinx_coroutines_DisposableHandle_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void DisposeOnCompletion(IDisposableHandle disposableHandle);
    [NullableContextAttribute("2")]
[RegisterAttribute("selectInRegistrationPhase", "(Ljava/lang/Object;)V", "GetSelectInRegistrationPhase_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void SelectInRegistrationPhase(Object internalResult);
    [RegisterAttribute("trySelect", "(Ljava/lang/Object;Ljava/lang/Object;)Z", "GetTrySelect_Ljava_lang_Object_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool TrySelect(Object clauseObject, Object result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectInstance")]
internal class Xamarin.KotlinX.Coroutines.Selects.ISelectInstanceInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getContext;
    private IntPtr id_getContext;
    [NullableAttribute("2")]
private static Delegate cb_disposeOnCompletion_Lkotlinx_coroutines_DisposableHandle_;
    private IntPtr id_disposeOnCompletion_Lkotlinx_coroutines_DisposableHandle_;
    [NullableAttribute("2")]
private static Delegate cb_selectInRegistrationPhase_Ljava_lang_Object_;
    private IntPtr id_selectInRegistrationPhase_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_trySelect_Ljava_lang_Object_Ljava_lang_Object_;
    private IntPtr id_trySelect_Ljava_lang_Object_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public ICoroutineContext Context { get; }
    public ISelectInstanceInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISelectInstanceInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISelectInstance GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetContextHandler();
    private static IntPtr n_GetContext(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ICoroutineContext get_Context();
    private static Delegate GetDisposeOnCompletion_Lkotlinx_coroutines_DisposableHandle_Handler();
    private static void n_DisposeOnCompletion_Lkotlinx_coroutines_DisposableHandle_(IntPtr jnienv, IntPtr native__this, IntPtr native_disposableHandle);
    public sealed virtual void DisposeOnCompletion(IDisposableHandle disposableHandle);
    private static Delegate GetSelectInRegistrationPhase_Ljava_lang_Object_Handler();
    private static void n_SelectInRegistrationPhase_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_internalResult);
    [NullableContextAttribute("2")]
public sealed virtual void SelectInRegistrationPhase(Object internalResult);
    private static Delegate GetTrySelect_Ljava_lang_Object_Ljava_lang_Object_Handler();
    private static bool n_TrySelect_Ljava_lang_Object_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_clauseObject, IntPtr native_result);
    public sealed virtual bool TrySelect(Object clauseObject, Object result);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/OnTimeoutKt")]
public class Xamarin.KotlinX.Coroutines.Selects.OnTimeoutKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal OnTimeoutKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static OnTimeoutKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("onTimeout", "(Lkotlinx/coroutines/selects/SelectBuilder;JLkotlin/jvm/functions/Function1;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void OnTimeout(ISelectBuilder obj, long timeMillis, IFunction1 block);
    [RegisterAttribute("onTimeout-8Mi8wO0", "(Lkotlinx/coroutines/selects/SelectBuilder;JLkotlin/jvm/functions/Function1;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void OnTimeout2(ISelectBuilder obj, long timeout, IFunction1 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectBuilder$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Selects.SelectBuilderDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SelectBuilderDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static SelectBuilderDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("invoke", "(Lkotlinx/coroutines/selects/SelectBuilder;Lkotlinx/coroutines/selects/SelectClause2;Lkotlin/jvm/functions/Function2;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void Invoke(ISelectBuilder _this, ISelectClause2 _receiver, IFunction2 block);
    [ObsoleteAttribute("deprecated")]
[RegisterAttribute("onTimeout", "(Lkotlinx/coroutines/selects/SelectBuilder;JLkotlin/jvm/functions/Function1;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void OnTimeout(ISelectBuilder _this, long timeMillis, IFunction1 block);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectKt")]
public class Xamarin.KotlinX.Coroutines.Selects.SelectKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public static Object PARAM_CLAUSE_0 { get; }
    internal SelectKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SelectKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("getPARAM_CLAUSE_0", "()Ljava/lang/Object;", "")]
public static Object get_PARAM_CLAUSE_0();
    [RegisterAttribute("select", "(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Select(IFunction1 builder, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectOldKt")]
public class Xamarin.KotlinX.Coroutines.Selects.SelectOldKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SelectOldKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SelectOldKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/SelectUnbiasedKt")]
public class Xamarin.KotlinX.Coroutines.Selects.SelectUnbiasedKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SelectUnbiasedKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SelectUnbiasedKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("selectUnbiased", "(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object SelectUnbiased(IFunction1 builder, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/selects/WhileSelectKt")]
public class Xamarin.KotlinX.Coroutines.Selects.WhileSelectKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal WhileSelectKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static WhileSelectKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("whileSelect", "(Lkotlin/jvm/functions/Function1;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object WhileSelect(IFunction1 builder, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/stream/StreamKt")]
public class Xamarin.KotlinX.Coroutines.Stream.StreamKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal StreamKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static StreamKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/SupervisorKt")]
public class Xamarin.KotlinX.Coroutines.SupervisorKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SupervisorKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SupervisorKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("SupervisorJob", "(Lkotlinx/coroutines/Job;)Lkotlinx/coroutines/CompletableJob;", "")]
public static ICompletableJob SupervisorJob(IJob parent);
    [RegisterAttribute("supervisorScope", "(Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object SupervisorScope(IFunction2 block, IContinuation _completion);
}
[RegisterAttribute("kotlinx/coroutines/sync/Mutex", "", "Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker")]
public interface Xamarin.KotlinX.Coroutines.Sync.IMutex {
    public bool IsLocked { get; }
    [NullableAttribute("1")]
public ISelectClause2 OnLock { get; }
    [RegisterAttribute("isLocked", "()Z", "GetIsLockedHandler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool get_IsLocked();
    [NullableContextAttribute("1")]
[RegisterAttribute("getOnLock", "()Lkotlinx/coroutines/selects/SelectClause2;", "GetGetOnLockHandler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual ISelectClause2 get_OnLock();
    [NullableContextAttribute("1")]
[RegisterAttribute("holdsLock", "(Ljava/lang/Object;)Z", "GetHoldsLock_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool HoldsLock(Object owner);
    [NullableContextAttribute("2")]
[RegisterAttribute("lock", "(Ljava/lang/Object;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetLock_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Lock(Object owner, IContinuation p1);
    [NullableContextAttribute("2")]
[RegisterAttribute("tryLock", "(Ljava/lang/Object;)Z", "GetTryLock_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool TryLock(Object owner);
    [NullableContextAttribute("2")]
[RegisterAttribute("unlock", "(Ljava/lang/Object;)V", "GetUnlock_Ljava_lang_Object_Handler:Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Unlock(Object owner);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/sync/Mutex")]
internal class Xamarin.KotlinX.Coroutines.Sync.IMutexInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_isLocked;
    private IntPtr id_isLocked;
    [NullableAttribute("2")]
private static Delegate cb_getOnLock;
    private IntPtr id_getOnLock;
    [NullableAttribute("2")]
private static Delegate cb_holdsLock_Ljava_lang_Object_;
    private IntPtr id_holdsLock_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_lock_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    private IntPtr id_lock_Ljava_lang_Object_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_tryLock_Ljava_lang_Object_;
    private IntPtr id_tryLock_Ljava_lang_Object_;
    [NullableAttribute("2")]
private static Delegate cb_unlock_Ljava_lang_Object_;
    private IntPtr id_unlock_Ljava_lang_Object_;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public bool IsLocked { get; }
    public ISelectClause2 OnLock { get; }
    public IMutexInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static IMutexInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static IMutex GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetIsLockedHandler();
    private static bool n_IsLocked(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool get_IsLocked();
    [ObsoleteAttribute]
private static Delegate GetGetOnLockHandler();
    [ObsoleteAttribute]
private static IntPtr n_GetOnLock(IntPtr jnienv, IntPtr native__this);
    public sealed virtual ISelectClause2 get_OnLock();
    private static Delegate GetHoldsLock_Ljava_lang_Object_Handler();
    private static bool n_HoldsLock_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner);
    public sealed virtual bool HoldsLock(Object owner);
    private static Delegate GetLock_Ljava_lang_Object_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Lock_Ljava_lang_Object_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner, IntPtr native_p1);
    [NullableContextAttribute("2")]
public sealed virtual Object Lock(Object owner, IContinuation p1);
    private static Delegate GetTryLock_Ljava_lang_Object_Handler();
    private static bool n_TryLock_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner);
    [NullableContextAttribute("2")]
public sealed virtual bool TryLock(Object owner);
    private static Delegate GetUnlock_Ljava_lang_Object_Handler();
    private static void n_Unlock_Ljava_lang_Object_(IntPtr jnienv, IntPtr native__this, IntPtr native_owner);
    [NullableContextAttribute("2")]
public sealed virtual void Unlock(Object owner);
}
[RegisterAttribute("kotlinx/coroutines/sync/Semaphore", "", "Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker")]
public interface Xamarin.KotlinX.Coroutines.Sync.ISemaphore {
    public int AvailablePermits { get; }
    [RegisterAttribute("getAvailablePermits", "()I", "GetGetAvailablePermitsHandler:Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual int get_AvailablePermits();
    [NullableContextAttribute("1")]
[RegisterAttribute("acquire", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "GetAcquire_Lkotlin_coroutines_Continuation_Handler:Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual Object Acquire(IContinuation p0);
    [RegisterAttribute("release", "()V", "GetReleaseHandler:Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual void Release();
    [RegisterAttribute("tryAcquire", "()Z", "GetTryAcquireHandler:Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker, Xamarin.KotlinX.Coroutines.Core.Jvm")]
public abstract virtual bool TryAcquire();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/sync/Semaphore")]
internal class Xamarin.KotlinX.Coroutines.Sync.ISemaphoreInvoker : Object {
    private static JniPeerMembers _members;
    private IntPtr class_ref;
    [NullableAttribute("2")]
private static Delegate cb_getAvailablePermits;
    private IntPtr id_getAvailablePermits;
    [NullableAttribute("2")]
private static Delegate cb_acquire_Lkotlin_coroutines_Continuation_;
    private IntPtr id_acquire_Lkotlin_coroutines_Continuation_;
    [NullableAttribute("2")]
private static Delegate cb_release;
    private IntPtr id_release;
    [NullableAttribute("2")]
private static Delegate cb_tryAcquire;
    private IntPtr id_tryAcquire;
    private static IntPtr java_class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    public int AvailablePermits { get; }
    public ISemaphoreInvoker(IntPtr handle, JniHandleOwnership transfer);
    private static ISemaphoreInvoker();
    private static IntPtr get_java_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [NullableContextAttribute("2")]
public static ISemaphore GetObject(IntPtr handle, JniHandleOwnership transfer);
    private static IntPtr Validate(IntPtr handle);
    protected virtual void Dispose(bool disposing);
    private static Delegate GetGetAvailablePermitsHandler();
    private static int n_GetAvailablePermits(IntPtr jnienv, IntPtr native__this);
    public sealed virtual int get_AvailablePermits();
    private static Delegate GetAcquire_Lkotlin_coroutines_Continuation_Handler();
    private static IntPtr n_Acquire_Lkotlin_coroutines_Continuation_(IntPtr jnienv, IntPtr native__this, IntPtr native_p0);
    public sealed virtual Object Acquire(IContinuation p0);
    private static Delegate GetReleaseHandler();
    private static void n_Release(IntPtr jnienv, IntPtr native__this);
    public sealed virtual void Release();
    private static Delegate GetTryAcquireHandler();
    private static bool n_TryAcquire(IntPtr jnienv, IntPtr native__this);
    public sealed virtual bool TryAcquire();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/sync/Mutex$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.Sync.MutexDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MutexDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static MutexDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/sync/MutexKt")]
public class Xamarin.KotlinX.Coroutines.Sync.MutexKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal MutexKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static MutexKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Mutex", "(Z)Lkotlinx/coroutines/sync/Mutex;", "")]
public static IMutex Mutex(bool locked);
    [RegisterAttribute("withLock", "(Lkotlinx/coroutines/sync/Mutex;Ljava/lang/Object;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithLock(IMutex p0, Object owner, IFunction0 action, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/sync/SemaphoreKt")]
public class Xamarin.KotlinX.Coroutines.Sync.SemaphoreKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal SemaphoreKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static SemaphoreKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("Semaphore", "(II)Lkotlinx/coroutines/sync/Semaphore;", "")]
public static ISemaphore Semaphore(int permits, int acquiredPermits);
    [RegisterAttribute("withPermit", "(Lkotlinx/coroutines/sync/Semaphore;Lkotlin/jvm/functions/Function0;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithPermit(ISemaphore p0, IFunction0 action, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ThreadContextElement$DefaultImpls")]
public class Xamarin.KotlinX.Coroutines.ThreadContextElementDefaultImpls : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ThreadContextElementDefaultImpls(IntPtr javaReference, JniHandleOwnership transfer);
    private static ThreadContextElementDefaultImpls();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("fold", "(Lkotlinx/coroutines/ThreadContextElement;Ljava/lang/Object;Lkotlin/jvm/functions/Function2;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Fold(IThreadContextElement _this, Object initial, IFunction2 operation);
    [RegisterAttribute("get", "(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext$Element;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object Get(IThreadContextElement _this, ICoroutineContextKey key);
    [RegisterAttribute("minusKey", "(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext$Key;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext MinusKey(IThreadContextElement _this, ICoroutineContextKey key);
    [RegisterAttribute("plus", "(Lkotlinx/coroutines/ThreadContextElement;Lkotlin/coroutines/CoroutineContext;)Lkotlin/coroutines/CoroutineContext;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static ICoroutineContext Plus(IThreadContextElement _this, ICoroutineContext context);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ThreadContextElementKt")]
public class Xamarin.KotlinX.Coroutines.ThreadContextElementKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ThreadContextElementKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ThreadContextElementKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("asContextElement", "(Ljava/lang/ThreadLocal;Ljava/lang/Object;)Lkotlinx/coroutines/ThreadContextElement;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IThreadContextElement AsContextElement(ThreadLocal obj, Object value);
    [RegisterAttribute("ensurePresent", "(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object EnsurePresent(ThreadLocal obj, IContinuation _completion);
    [RegisterAttribute("isPresent", "(Ljava/lang/ThreadLocal;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object IsPresent(ThreadLocal obj, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/ThreadPoolDispatcherKt")]
public class Xamarin.KotlinX.Coroutines.ThreadPoolDispatcherKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal ThreadPoolDispatcherKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static ThreadPoolDispatcherKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("newFixedThreadPoolContext", "(ILjava/lang/String;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;", "")]
public static ExecutorCoroutineDispatcher NewFixedThreadPoolContext(int nThreads, string name);
    [RegisterAttribute("newSingleThreadContext", "(Ljava/lang/String;)Lkotlinx/coroutines/ExecutorCoroutineDispatcher;", "")]
public static ExecutorCoroutineDispatcher NewSingleThreadContext(string name);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/time/TimeKt")]
public class Xamarin.KotlinX.Coroutines.Time.TimeKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TimeKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static TimeKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("debounce", "(Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Debounce(IFlow obj, Duration timeout);
    [RegisterAttribute("delay", "(Ljava/time/Duration;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object Delay(Duration duration, IContinuation _completion);
    [RegisterAttribute("onTimeout", "(Lkotlinx/coroutines/selects/SelectBuilder;Ljava/time/Duration;Lkotlin/jvm/functions/Function1;)V", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static void OnTimeout(ISelectBuilder obj, Duration duration, IFunction1 block);
    [RegisterAttribute("sample", "(Lkotlinx/coroutines/flow/Flow;Ljava/time/Duration;)Lkotlinx/coroutines/flow/Flow;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static IFlow Sample(IFlow obj, Duration period);
    [RegisterAttribute("withTimeout", "(Ljava/time/Duration;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithTimeout(Duration duration, IFunction2 block, IContinuation _completion);
    [RegisterAttribute("withTimeoutOrNull", "(Ljava/time/Duration;Lkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithTimeoutOrNull(Duration duration, IFunction2 block, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/TimeoutCancellationException")]
public class Xamarin.KotlinX.Coroutines.TimeoutCancellationException : CancellationException {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TimeoutCancellationException(IntPtr javaReference, JniHandleOwnership transfer);
    private static TimeoutCancellationException();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("createCopy", "()Lkotlinx/coroutines/TimeoutCancellationException;", "")]
public TimeoutCancellationException CreateCopy();
    [NullableContextAttribute("2")]
private sealed virtual override Object global::Xamarin.KotlinX.Coroutines.ICopyableThrowable.CreateCopy();
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/TimeoutKt")]
public class Xamarin.KotlinX.Coroutines.TimeoutKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal TimeoutKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static TimeoutKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("withTimeout", "(JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithTimeout(long timeMillis, IFunction2 block, IContinuation _completion);
    [RegisterAttribute("withTimeoutOrNull", "(JLkotlin/jvm/functions/Function2;Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
[JavaTypeParametersAttribute("Mono.Cecil.CustomAttributeArgument[]")]
public static Object WithTimeoutOrNull(long timeMillis, IFunction2 block, IContinuation _completion);
}
[NullableContextAttribute("1")]
[NullableAttribute("0")]
[RegisterAttribute("kotlinx/coroutines/YieldKt")]
public class Xamarin.KotlinX.Coroutines.YieldKt : Object {
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal YieldKt(IntPtr javaReference, JniHandleOwnership transfer);
    private static YieldKt();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    [RegisterAttribute("yield", "(Lkotlin/coroutines/Continuation;)Ljava/lang/Object;", "")]
public static Object Yield(IContinuation _completion);
}
