internal class ThisAssembly : object {
}
public static class Xamarin.Forms.FormsMaterial : object {
    public static void Init(Context context, Bundle bundle);
}
public class Xamarin.Forms.Material.Android.MaterialActivityIndicatorRenderer : FrameLayout {
    private Nullable`1<int> _defaultLabelFor;
    private bool _disposed;
    private ActivityIndicator _element;
    private CircularProgress _control;
    private VisualElementTracker _visualElementTracker;
    private VisualElementRenderer _visualElementRenderer;
    private MotionEventHelper _motionEventHelper;
    [CompilerGeneratedAttribute]
private EventHandler`1<VisualElementChangedEventArgs> ElementChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<PropertyChangedEventArgs> ElementPropertyChanged;
    protected ProgressBar Control { get; }
    protected ActivityIndicator Element { get; protected set; }
    private VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.Element { get; }
    private VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.Tracker { get; }
    private ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.ViewGroup { get; }
    private View Xamarin.Forms.Platform.Android.IVisualElementRenderer.View { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialActivityIndicatorRenderer(Context context);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    public virtual bool OnTouchEvent(MotionEvent e);
    protected ProgressBar get_Control();
    protected ActivityIndicator get_Element();
    protected void set_Element(ActivityIndicator value);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<ActivityIndicator> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    private void UpdateIsRunning();
    private void UpdateColor();
    private void UpdateBackground();
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Element();
    private sealed virtual override VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Tracker();
    private sealed virtual override ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_ViewGroup();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_View();
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Android.IVisualElementRenderer.GetDesiredSize(int widthConstraint, int heightConstraint);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement(VisualElement element);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetLabelFor(Nullable`1<int> id);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.UpdateLayout();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IViewRenderer.MeasureExactly();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialButtonRenderer : MaterialButton {
    private int _defaultCornerRadius;
    private int _defaultBorderWidth;
    private ColorStateList _defaultBorderColor;
    private float _defaultFontSize;
    private Nullable`1<int> _defaultLabelFor;
    private Typeface _defaultTypeface;
    private bool _disposed;
    private bool _inputTransparent;
    private Button _button;
    private IPlatformElementConfiguration`2<Android, Button> _platformElementConfiguration;
    private VisualElementTracker _tracker;
    private VisualElementRenderer _visualElementRenderer;
    private ButtonLayoutManager _buttonLayoutManager;
    private AutomationPropertiesProvider _automationPropertiesProvider;
    private bool _hasDrawnOnce;
    [CompilerGeneratedAttribute]
private EventHandler`1<VisualElementChangedEventArgs> ElementChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<PropertyChangedEventArgs> ElementPropertyChanged;
    protected MaterialButton Control { get; }
    protected Button Element { get; protected set; }
    public bool Enabled { get; public set; }
    private float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.ShadowRadius { get; }
    private float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.ShadowDx { get; }
    private float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.ShadowDy { get; }
    private Color Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.ShadowColor { get; }
    private VisualElement Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.Element { get; }
    private View Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.View { get; }
    private VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.Element { get; }
    private VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.Tracker { get; }
    private ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.ViewGroup { get; }
    private View Xamarin.Forms.Platform.Android.IVisualElementRenderer.View { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    private AppCompatButton Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.View { get; }
    private Button Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.Element { get; }
    public MaterialButtonRenderer(Context context);
    public MaterialButtonRenderer(Context context, BindableObject element);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    protected MaterialButton get_Control();
    protected Button get_Element();
    protected void set_Element(Button value);
    public virtual void Draw(Canvas canvas);
    protected virtual void Dispose(bool disposing);
    public virtual bool OnTouchEvent(MotionEvent e);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Button> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private void UpdateFont();
    private void UpdateBorder();
    private void UpdateInputTransparent();
    private void UpdatePrimaryColors();
    private void UpdateCharacterSpacing();
    public virtual bool get_Enabled();
    public virtual void set_Enabled(bool value);
    private IPlatformElementConfiguration`2<Android, Button> OnThisPlatform();
    private sealed virtual override void Android.Views.View.IOnAttachStateChangeListener.OnViewAttachedToWindow(View attachedView);
    private sealed virtual override void Android.Views.View.IOnAttachStateChangeListener.OnViewDetachedFromWindow(View detachedView);
    private sealed virtual override void Android.Views.View.IOnFocusChangeListener.OnFocusChange(View v, bool hasFocus);
    private sealed virtual override void Android.Views.View.IOnClickListener.OnClick(View v);
    private sealed virtual override bool Android.Views.View.IOnTouchListener.OnTouch(View v, MotionEvent e);
    private sealed virtual override float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_ShadowRadius();
    private sealed virtual override float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_ShadowDx();
    private sealed virtual override float Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_ShadowDy();
    private sealed virtual override Color Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_ShadowColor();
    private sealed virtual override bool Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.UseDefaultPadding();
    private sealed virtual override bool Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.UseDefaultShadow();
    private sealed virtual override bool Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.IsShadowEnabled();
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_Element();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IBorderVisualElementRenderer.get_View();
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Element();
    private sealed virtual override VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Tracker();
    private sealed virtual override ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_ViewGroup();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_View();
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Android.IVisualElementRenderer.GetDesiredSize(int widthConstraint, int heightConstraint);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement(VisualElement element);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetLabelFor(Nullable`1<int> id);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.UpdateLayout();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IViewRenderer.MeasureExactly();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
    private sealed virtual override AppCompatButton Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.get_View();
    private sealed virtual override Button Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.get_Element();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IButtonLayoutRenderer.remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
}
public class Xamarin.Forms.Material.Android.MaterialCheckBoxRenderer : CheckBoxRendererBase {
    private static Int32[][] _checkedStates;
    public MaterialCheckBoxRenderer(Context context);
    private static MaterialCheckBoxRenderer();
    protected virtual ColorStateList GetColorStateList();
}
[ExtensionAttribute]
internal static class Xamarin.Forms.Material.Android.MaterialColors : object {
    private static float kSliderBaselineDisabledFillAlpha;
    private static float kSliderBaselineEnabledBackgroundAlpha;
    private static float kSliderBaselineDisabledBackgroundAlpha;
    private static float kSliderBaselineEnabledTicksAlpha;
    private static float kSliderBaselineDisabledTicksAlpha;
    public static float SliderTrackAlpha;
    public static double kFrameCornerRadiusDefault;
    private static float kFilledTextFieldActiveAlpha;
    private static float kFilledTextFieldOnSurfaceAlpha;
    private static float kFilledTextFieldDisabledAlpha;
    private static float kFilledTextFieldSurfaceOverlayAlpha;
    private static float kFilledTextFieldIndicatorLineAlpha;
    private static float kFilledTextFieldIconAlpha;
    private static float kFilledPlaceHolderOffset;
    public static Int32[][] ButtonStates;
    public static Int32[][] ButtonTextStates;
    public static Int32[][] EntryHintTextStates;
    public static Int32[][] EntryUnderlineStates;
    private static MaterialColors();
    public static Color CreateEntryFilledInputBackgroundColor(Color backgroundColor, Color textColor);
    public static ValueTuple`2<Color, Color> GetPlaceHolderColor(Color placeholderColor, Color textColor);
    public static ValueTuple`2<Color, Color> GetUnderlineColor(Color textColor);
    public static Color GetEntryTextColor(Color textColor);
    public static Color GetCheckBoxColor(bool isChecked, bool isEnabled);
    public static ColorStateList CreateButtonBackgroundColors(Color primary);
    public static ColorStateList CreateButtonTextColors(Color primary, Color text, Color disabledText);
    public static ColorStateList CreateEntryFilledPlaceholderColors(Color inlineColor, Color floatingColor);
    public static ColorStateList CreateEntryUnderlineColors(Color focusedColor, Color unfocusedColor);
    [ExtensionAttribute]
internal static Color WithAlpha(Color color, double alpha);
    [ExtensionAttribute]
internal static void ApplySeekBarColors(AbsSeekBar seekBar, Color progressColor, Color backgroundColor, Color thumbColor);
    [ExtensionAttribute]
internal static void ApplyProgressBarColors(ProgressBar progressBar, Color progressColor, Color backgroundColor, Mode mode);
    [ExtensionAttribute]
internal static void ApplyProgressBarColors(ProgressBar progressBar, Color progressColor, Color backgroundColor);
    private static Color ToPlatformColor(Color color);
    private static Color WithMultipliedAlpha(Color color, float alpha);
    private static Color WithAlpha(Color color, float alpha);
    private static int GetAlpha(Color color);
    private static Color FromRgb(int red, int green, int blue);
}
public class Xamarin.Forms.Material.Android.MaterialContextThemeWrapper : ContextThemeWrapper {
    public MaterialContextThemeWrapper(Context context);
    private MaterialContextThemeWrapper(Context context, int themeResId);
    public static MaterialContextThemeWrapper Create(Context context);
}
public class Xamarin.Forms.Material.Android.MaterialDatePickerRenderer : DatePickerRendererBase`1<MaterialPickerTextInputLayout> {
    private MaterialPickerTextInputLayout _textInputLayout;
    private MaterialPickerEditText _textInputEditText;
    protected View ControlUsedForAutomation { get; }
    protected EditText EditText { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialDatePickerRenderer(Context context);
    protected virtual View get_ControlUsedForAutomation();
    protected virtual EditText get_EditText();
    protected virtual MaterialPickerTextInputLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<DatePicker> e);
    protected virtual void UpdateBackgroundColor();
    protected virtual void UpdateTextColor();
    private void ApplyTheme();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialEditorRenderer : EditorRendererBase`1<MaterialFormsTextInputLayout> {
    private bool _disposed;
    private MaterialFormsEditText _textInputEditText;
    private MaterialFormsTextInputLayout _textInputLayout;
    protected EditText EditText { get; }
    protected View ControlUsedForAutomation { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialEditorRenderer(Context context);
    protected virtual MaterialFormsTextInputLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Editor> e);
    protected virtual void UpdateBackgroundColor();
    protected virtual void UpdatePlaceholderText();
    protected virtual void UpdatePlaceholderColor();
    protected virtual void ApplyTheme();
    protected virtual void UpdateTextColor();
    protected virtual EditText get_EditText();
    protected virtual View get_ControlUsedForAutomation();
    protected virtual void UpdateFont();
    protected virtual void Dispose(bool disposing);
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialEntryRenderer : EntryRendererBase`1<MaterialFormsTextInputLayout> {
    private MaterialFormsEditText _textInputEditText;
    private MaterialFormsTextInputLayout _textInputLayout;
    protected View ControlUsedForAutomation { get; }
    protected EditText EditText { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialEntryRenderer(Context context);
    protected virtual View get_ControlUsedForAutomation();
    protected virtual MaterialFormsTextInputLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Entry> e);
    protected virtual void UpdateColor();
    protected virtual void UpdateBackgroundColor();
    protected virtual void UpdatePlaceHolderText();
    protected virtual EditText get_EditText();
    protected virtual void UpdatePlaceholderColor();
    private void ApplyTheme(Color textColor);
    private void ApplyTheme();
    protected virtual void UpdateTextColor(Color color);
    protected virtual void UpdateFont();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialFormsEditText : MaterialFormsEditTextBase {
    [CompilerGeneratedAttribute]
private EventHandler _onKeyboardBackPressed;
    [CompilerGeneratedAttribute]
private EventHandler`1<SelectionChangedEventArgs> _selectionChanged;
    public MaterialFormsEditText(Context context);
    protected MaterialFormsEditText(IntPtr javaReference, JniHandleOwnership transfer);
    public MaterialFormsEditText(Context context, IAttributeSet attrs);
    public MaterialFormsEditText(Context context, IAttributeSet attrs, int defStyleAttr);
    public virtual bool OnKeyPreIme(Keycode keyCode, KeyEvent e);
    [CompilerGeneratedAttribute]
private void add__onKeyboardBackPressed(EventHandler value);
    [CompilerGeneratedAttribute]
private void remove__onKeyboardBackPressed(EventHandler value);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IFormsEditText.add_OnKeyboardBackPressed(EventHandler value);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IFormsEditText.remove_OnKeyboardBackPressed(EventHandler value);
    [CompilerGeneratedAttribute]
private void add__selectionChanged(EventHandler`1<SelectionChangedEventArgs> value);
    [CompilerGeneratedAttribute]
private void remove__selectionChanged(EventHandler`1<SelectionChangedEventArgs> value);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IFormsEditText.add_SelectionChanged(EventHandler`1<SelectionChangedEventArgs> value);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IFormsEditText.remove_SelectionChanged(EventHandler`1<SelectionChangedEventArgs> value);
    protected virtual void OnSelectionChanged(int selStart, int selEnd);
}
public class Xamarin.Forms.Material.Android.MaterialFormsEditTextBase : TextInputEditText {
    private DescendantFocusToggler _descendantFocusToggler;
    public MaterialFormsEditTextBase(Context context);
    protected MaterialFormsEditTextBase(IntPtr javaReference, JniHandleOwnership transfer);
    public MaterialFormsEditTextBase(Context context, IAttributeSet attrs);
    public MaterialFormsEditTextBase(Context context, IAttributeSet attrs, int defStyleAttr);
    protected virtual void Dispose(bool disposing);
    private sealed virtual override bool Xamarin.Forms.Platform.Android.IDescendantFocusToggler.RequestFocus(View control, Func`1<bool> baseRequestFocus);
    public virtual bool RequestFocus(FocusSearchDirection direction, Rect previouslyFocusedRect);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private bool <>n__0(FocusSearchDirection direction, Rect previouslyFocusedRect);
}
internal static class Xamarin.Forms.Material.Android.MaterialFormsEditTextManager : object {
    private static Thickness _centeredText;
    private static Thickness _alignedWithUnderlineText;
    private static MaterialFormsEditTextManager();
    public static void Init(TextInputEditText textInputEditText);
    public static void Dispose(TextInputEditText textInputEditText);
    private static void OnFocusChanged(object sender, FocusChangeEventArgs e);
    private static void OnTextChanged(object sender, TextChangedEventArgs e);
    private static void UpdatePadding(TextInputEditText textInputEditText);
}
public class Xamarin.Forms.Material.Android.MaterialFormsTextInputLayout : MaterialFormsTextInputLayoutBase {
    public MaterialFormsTextInputLayout(Context context);
    public MaterialFormsTextInputLayout(Context context, IAttributeSet attrs);
    public MaterialFormsTextInputLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    protected MaterialFormsTextInputLayout(IntPtr javaReference, JniHandleOwnership transfer);
}
public class Xamarin.Forms.Material.Android.MaterialFormsTextInputLayoutBase : TextInputLayout {
    private Color _formsTextColor;
    private Color _formsPlaceholderColor;
    private bool _isSetup;
    private ColorStateList _focusedFilledColorList;
    private ColorStateList _unfocusedEmptyColorList;
    private ColorStateList _unfocusedUnderlineColorsList;
    private ColorStateList _focusedUnderlineColorsList;
    private static Int32[][] s_colorStates;
    private bool _disposed;
    public EditText EditText { get; }
    public MaterialFormsTextInputLayoutBase(Context context);
    public MaterialFormsTextInputLayoutBase(Context context, IAttributeSet attrs);
    public MaterialFormsTextInputLayoutBase(Context context, IAttributeSet attrs, int defStyleAttr);
    protected MaterialFormsTextInputLayoutBase(IntPtr javaReference, JniHandleOwnership transfer);
    private static MaterialFormsTextInputLayoutBase();
    private void ResetTextColors(Color formsTextColor, Color formsPlaceHolderColor);
    public virtual void ApplyTheme(Color formsTextColor, Color formsPlaceHolderColor);
    private void ApplyTheme();
    private void OnFocusChange(object sender, FocusChangeEventArgs e);
    public virtual void SetHint(string hint, VisualElement element);
    public virtual EditText get_EditText();
    protected virtual void Dispose(bool disposing);
    [CompilerGeneratedAttribute]
private void <OnFocusChange>b__16_0();
}
public class Xamarin.Forms.Material.Android.MaterialFrameRenderer : MaterialCardView {
    private float _defaultElevation;
    private float _defaultCornerRadius;
    private int _defaultStrokeWidth;
    private Nullable`1<int> _defaultBackgroundColor;
    private Nullable`1<int> _defaultStrokeColor;
    private Nullable`1<int> _defaultLabelFor;
    private bool _disposed;
    private Frame _element;
    private VisualElementTracker _visualElementTracker;
    private VisualElementPackager _visualElementPackager;
    private GestureManager _gestureManager;
    private EffectControlProvider _effectControlProvider;
    private MotionEventHelper _motionEventHelper;
    private Drawable _defaultBackgroundDrawable;
    private GradientDrawable _backgroundGradientDrawable;
    [CompilerGeneratedAttribute]
private EventHandler`1<VisualElementChangedEventArgs> ElementChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<PropertyChangedEventArgs> ElementPropertyChanged;
    protected MaterialCardView Control { get; }
    protected Frame Element { get; protected set; }
    private VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.Element { get; }
    private VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.Tracker { get; }
    private ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.ViewGroup { get; }
    private View Xamarin.Forms.Platform.Android.IVisualElementRenderer.View { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialFrameRenderer(Context context);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    public virtual bool OnTouchEvent(MotionEvent e);
    protected MaterialCardView get_Control();
    protected Frame get_Element();
    protected void set_Element(Frame value);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Frame> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    protected virtual void OnLayout(bool changed, int left, int top, int right, int bottom);
    private void UpdateShadow();
    private void UpdateCornerRadius();
    private void UpdateBorder();
    private void UpdateBackground();
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Element();
    private sealed virtual override VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Tracker();
    private sealed virtual override ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_ViewGroup();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_View();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement(VisualElement element);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.UpdateLayout();
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Android.IVisualElementRenderer.GetDesiredSize(int widthConstraint, int heightConstraint);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetLabelFor(Nullable`1<int> id);
    private sealed virtual override void Xamarin.Forms.IEffectControlProvider.RegisterEffect(Effect effect);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IViewRenderer.MeasureExactly();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialPickerEditText : MaterialFormsEditTextBase {
    private bool _disposed;
    public MaterialPickerEditText(Context context);
    protected MaterialPickerEditText(IntPtr javaReference, JniHandleOwnership transfer);
    public MaterialPickerEditText(Context context, IAttributeSet attrs);
    public MaterialPickerEditText(Context context, IAttributeSet attrs, int defStyleAttr);
    public virtual bool OnTouchEvent(MotionEvent e);
    protected virtual void OnFocusChanged(bool gainFocus, FocusSearchDirection direction, Rect previouslyFocusedRect);
    protected virtual void Dispose(bool disposing);
}
public class Xamarin.Forms.Material.Android.MaterialPickerRenderer : PickerRendererBase`1<MaterialPickerTextInputLayout> {
    private MaterialPickerTextInputLayout _textInputLayout;
    private MaterialPickerEditText _textInputEditText;
    protected EditText EditText { get; }
    protected View ControlUsedForAutomation { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialPickerRenderer(Context context);
    protected virtual EditText get_EditText();
    protected virtual View get_ControlUsedForAutomation();
    protected virtual MaterialPickerTextInputLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Picker> e);
    protected virtual void UpdateBackgroundColor();
    protected virtual void UpdatePlaceHolderText();
    protected virtual void UpdateTitleColor();
    protected virtual void UpdateTextColor();
    protected virtual void ApplyTheme();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
    protected virtual void UpdateGravity();
}
public class Xamarin.Forms.Material.Android.MaterialPickerTextInputLayout : MaterialFormsTextInputLayoutBase {
    [CompilerGeneratedAttribute]
private bool <ShowPopupOnFocus>k__BackingField;
    public bool ShowPopupOnFocus { get; public set; }
    public MaterialPickerTextInputLayout(Context context);
    public MaterialPickerTextInputLayout(Context context, IAttributeSet attrs);
    public MaterialPickerTextInputLayout(Context context, IAttributeSet attrs, int defStyleAttr);
    protected MaterialPickerTextInputLayout(IntPtr javaReference, JniHandleOwnership transfer);
    [CompilerGeneratedAttribute]
public sealed virtual bool get_ShowPopupOnFocus();
    [CompilerGeneratedAttribute]
public sealed virtual void set_ShowPopupOnFocus(bool value);
}
public class Xamarin.Forms.Material.Android.MaterialProgressBarRenderer : ProgressBar {
    private static int MaximumValue;
    private Nullable`1<int> _defaultLabelFor;
    private bool _disposed;
    private ProgressBar _element;
    private VisualElementTracker _visualElementTracker;
    private VisualElementRenderer _visualElementRenderer;
    private MotionEventHelper _motionEventHelper;
    [CompilerGeneratedAttribute]
private EventHandler`1<VisualElementChangedEventArgs> ElementChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<PropertyChangedEventArgs> ElementPropertyChanged;
    protected ProgressBar Control { get; }
    protected ProgressBar Element { get; protected set; }
    private VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.Element { get; }
    private VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.Tracker { get; }
    private ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.ViewGroup { get; }
    private View Xamarin.Forms.Platform.Android.IVisualElementRenderer.View { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialProgressBarRenderer(Context context);
    public virtual bool OnTouchEvent(MotionEvent e);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    protected ProgressBar get_Control();
    protected ProgressBar get_Element();
    protected void set_Element(ProgressBar value);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<ProgressBar> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    private void UpdateColors();
    private void UpdateProgress();
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Element();
    private sealed virtual override VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Tracker();
    private sealed virtual override ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_ViewGroup();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_View();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement(VisualElement element);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.UpdateLayout();
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Android.IVisualElementRenderer.GetDesiredSize(int widthConstraint, int heightConstraint);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetLabelFor(Nullable`1<int> id);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IViewRenderer.MeasureExactly();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialSliderRenderer : SeekBar {
    private static double MaximumValue;
    private Nullable`1<int> _defaultLabelFor;
    private bool _disposed;
    private Slider _element;
    private VisualElementTracker _visualElementTracker;
    private VisualElementRenderer _visualElementRenderer;
    private MotionEventHelper _motionEventHelper;
    private double _max;
    private double _min;
    private bool _inputTransparent;
    [CompilerGeneratedAttribute]
private EventHandler`1<VisualElementChangedEventArgs> ElementChanged;
    [CompilerGeneratedAttribute]
private EventHandler`1<PropertyChangedEventArgs> ElementPropertyChanged;
    protected SeekBar Control { get; }
    protected Slider Element { get; protected set; }
    private double Value { get; private set; }
    private VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.Element { get; }
    private VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.Tracker { get; }
    private ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.ViewGroup { get; }
    private View Xamarin.Forms.Platform.Android.IVisualElementRenderer.View { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialSliderRenderer(Context context);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementChanged(EventHandler`1<VisualElementChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void add_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    [CompilerGeneratedAttribute]
public sealed virtual void remove_ElementPropertyChanged(EventHandler`1<PropertyChangedEventArgs> value);
    public virtual bool OnTouchEvent(MotionEvent e);
    protected SeekBar get_Control();
    protected Slider get_Element();
    protected void set_Element(Slider value);
    protected virtual void Dispose(bool disposing);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Slider> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    private void UpdateInputTransparent();
    private void UpdateColors();
    private double get_Value();
    private void set_Value(double value);
    private void UpdateValue();
    private sealed virtual override void Android.Widget.SeekBar.IOnSeekBarChangeListener.OnProgressChanged(SeekBar seekBar, int progress, bool fromUser);
    private sealed virtual override void Android.Widget.SeekBar.IOnSeekBarChangeListener.OnStartTrackingTouch(SeekBar seekBar);
    private sealed virtual override void Android.Widget.SeekBar.IOnSeekBarChangeListener.OnStopTrackingTouch(SeekBar seekBar);
    private sealed virtual override VisualElement Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Element();
    private sealed virtual override VisualElementTracker Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_Tracker();
    private sealed virtual override ViewGroup Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_ViewGroup();
    private sealed virtual override View Xamarin.Forms.Platform.Android.IVisualElementRenderer.get_View();
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetElement(VisualElement element);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.UpdateLayout();
    private sealed virtual override SizeRequest Xamarin.Forms.Platform.Android.IVisualElementRenderer.GetDesiredSize(int widthConstraint, int heightConstraint);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IVisualElementRenderer.SetLabelFor(Nullable`1<int> id);
    private sealed virtual override void Xamarin.Forms.Platform.Android.IViewRenderer.MeasureExactly();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
public class Xamarin.Forms.Material.Android.MaterialStepperRenderer : ViewRenderer`2<Stepper, LinearLayout> {
    private static int DefaultButtonSpacing;
    private MaterialButton _downButton;
    private MaterialButton _upButton;
    private bool _inputTransparent;
    private Stepper Xamarin.Forms.Platform.Android.IStepperRenderer.Element { get; }
    private Button Xamarin.Forms.Platform.Android.IStepperRenderer.UpButton { get; }
    private Button Xamarin.Forms.Platform.Android.IStepperRenderer.DownButton { get; }
    public MaterialStepperRenderer(Context context);
    protected virtual LinearLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<Stepper> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    private void UpdateInputTransparent();
    public virtual bool OnTouchEvent(MotionEvent e);
    protected virtual void UpdateBackgroundColor();
    private sealed virtual override Stepper Xamarin.Forms.Platform.Android.IStepperRenderer.get_Element();
    private sealed virtual override Button Xamarin.Forms.Platform.Android.IStepperRenderer.get_UpButton();
    private sealed virtual override Button Xamarin.Forms.Platform.Android.IStepperRenderer.get_DownButton();
    private sealed virtual override Button Xamarin.Forms.Platform.Android.IStepperRenderer.CreateButton();
}
public class Xamarin.Forms.Material.Android.MaterialTimePickerRenderer : TimePickerRendererBase`1<MaterialPickerTextInputLayout> {
    private MaterialPickerTextInputLayout _textInputLayout;
    private MaterialPickerEditText _textInputEditText;
    protected EditText EditText { get; }
    protected View ControlUsedForAutomation { get; }
    private View Xamarin.Forms.Platform.Android.ITabStop.TabStop { get; }
    public MaterialTimePickerRenderer(Context context);
    protected virtual EditText get_EditText();
    protected virtual View get_ControlUsedForAutomation();
    protected virtual MaterialPickerTextInputLayout CreateNativeControl();
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<TimePicker> e);
    protected virtual void UpdateBackgroundColor();
    protected virtual void UpdateTextColor();
    private void ApplyTheme();
    private sealed virtual override View Xamarin.Forms.Platform.Android.ITabStop.get_TabStop();
}
[GeneratedCodeAttribute("Xamarin.Android.Build.Tasks", "1.0.0.0")]
public class Xamarin.Forms.Material.Android.Resource : object {
    private static Resource();
}
