internal class _JniMarshal_PP_Z : MulticastDelegate {
    public _JniMarshal_PP_Z(object object, IntPtr method);
    public virtual bool Invoke(IntPtr jnienv, IntPtr klass);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, AsyncCallback callback, object object);
    public virtual bool EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPFFIZFFFFFFFF_V : MulticastDelegate {
    public _JniMarshal_PPFFIZFFFFFFFF_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, float p0, float p1, int p2, bool p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, float p0, float p1, int p2, bool p3, float p4, float p5, float p6, float p7, float p8, float p9, float p10, float p11, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPIIIIII_V : MulticastDelegate {
    public _JniMarshal_PPIIIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, int p4, int p5);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, int p0, int p1, int p2, int p3, int p4, int p5, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZ_V : MulticastDelegate {
    public _JniMarshal_PPZ_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
internal class _JniMarshal_PPZIIII_V : MulticastDelegate {
    public _JniMarshal_PPZIIII_V(object object, IntPtr method);
    public virtual void Invoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4);
    public virtual IAsyncResult BeginInvoke(IntPtr jnienv, IntPtr klass, bool p0, int p1, int p2, int p3, int p4, AsyncCallback callback, object object);
    public virtual void EndInvoke(IAsyncResult result);
}
[RegisterAttribute("com/xamarin/formsviewgroup/BuildConfig")]
public class Com.Xamarin.Formsviewgroup.BuildConfig : Object {
    [RegisterAttribute("APPLICATION_ID")]
public static string ApplicationId;
    [RegisterAttribute("BUILD_TYPE")]
public static string BuildType;
    [RegisterAttribute("DEBUG")]
public static bool Debug;
    [RegisterAttribute("FLAVOR")]
public static string Flavor;
    [RegisterAttribute("VERSION_CODE")]
public static int VersionCode;
    [RegisterAttribute("VERSION_NAME")]
public static string VersionName;
    private static JniPeerMembers _members;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    internal BuildConfig(IntPtr javaReference, JniHandleOwnership transfer);
    private static BuildConfig();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
}
internal class Java.Interop.__TypeRegistrations : object {
    private static String[] package_com_xamarin_forms_platform_android_mappings;
    public static void RegisterPackages();
    private static Type Lookup(String[] mappings, string javaType);
    private static Type lookup_com_xamarin_forms_platform_android_package(string klass);
}
[ConditionalAttribute("NEVER")]
[AttributeUsageAttribute("751")]
internal class System.Runtime.Versioning.SupportedOSPlatformAttribute : Attribute {
    public SupportedOSPlatformAttribute(string platformName);
}
internal class ThisAssembly : object {
}
[RegisterAttribute("com/xamarin/forms/platform/android/FormsViewGroup")]
public class Xamarin.Forms.Platform.Android.FormsViewGroup : ViewGroup {
    private static JniPeerMembers _members;
    private static Delegate cb_getInputTransparent;
    private static Delegate cb_setInputTransparent_Z;
    private static Delegate cb_measureAndLayout_IIIIII;
    private static Delegate cb_onLayout_ZIIII;
    private static Delegate cb_sendBatchUpdate_FFIZFFFFFFFF;
    internal static IntPtr class_ref { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
public JniPeerMembers JniPeerMembers { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected IntPtr ThresholdClass { get; }
    [DebuggerBrowsableAttribute("0")]
[EditorBrowsableAttribute("1")]
protected Type ThresholdType { get; }
    protected bool InputTransparent { get; protected set; }
    protected FormsViewGroup(IntPtr javaReference, JniHandleOwnership transfer);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;)V", "")]
public FormsViewGroup(Context context);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;)V", "")]
public FormsViewGroup(Context context, IAttributeSet attrs);
    [RegisterAttribute(".ctor", "(Landroid/content/Context;Landroid/util/AttributeSet;I)V", "")]
public FormsViewGroup(Context context, IAttributeSet attrs, int defStyle);
    private static FormsViewGroup();
    internal static IntPtr get_class_ref();
    public virtual JniPeerMembers get_JniPeerMembers();
    protected virtual IntPtr get_ThresholdClass();
    protected virtual Type get_ThresholdType();
    private static Delegate GetGetInputTransparentHandler();
    private static bool n_GetInputTransparent(IntPtr jnienv, IntPtr native__this);
    private static Delegate GetSetInputTransparent_ZHandler();
    private static void n_SetInputTransparent_Z(IntPtr jnienv, IntPtr native__this, bool value);
    [RegisterAttribute("getInputTransparent", "()Z", "GetGetInputTransparentHandler")]
protected virtual bool get_InputTransparent();
    [RegisterAttribute("setInputTransparent", "(Z)V", "GetSetInputTransparent_ZHandler")]
protected virtual void set_InputTransparent(bool value);
    private static Delegate GetMeasureAndLayout_IIIIIIHandler();
    private static void n_MeasureAndLayout_IIIIII(IntPtr jnienv, IntPtr native__this, int widthMeasureSpec, int heightMeasureSpec, int l, int t, int r, int b);
    [RegisterAttribute("measureAndLayout", "(IIIIII)V", "GetMeasureAndLayout_IIIIIIHandler")]
public virtual void MeasureAndLayout(int widthMeasureSpec, int heightMeasureSpec, int l, int t, int r, int b);
    private static Delegate GetOnLayout_ZIIIIHandler();
    private static void n_OnLayout_ZIIII(IntPtr jnienv, IntPtr native__this, bool changed, int l, int t, int r, int b);
    [RegisterAttribute("onLayout", "(ZIIII)V", "GetOnLayout_ZIIIIHandler")]
protected virtual void OnLayout(bool changed, int l, int t, int r, int b);
    private static Delegate GetSendBatchUpdate_FFIZFFFFFFFFHandler();
    private static void n_SendBatchUpdate_FFIZFFFFFFFF(IntPtr jnienv, IntPtr native__this, float pivotX, float pivotY, int visibility, bool enabled, float opacity, float rotation, float rotationX, float rotationY, float scaleX, float scaleY, float translationX, float translationY);
    [RegisterAttribute("sendBatchUpdate", "(FFIZFFFFFFFF)V", "GetSendBatchUpdate_FFIZFFFFFFFFHandler")]
public virtual void SendBatchUpdate(float pivotX, float pivotY, int visibility, bool enabled, float opacity, float rotation, float rotationX, float rotationY, float scaleX, float scaleY, float translationX, float translationY);
    [RegisterAttribute("sendViewBatchUpdate", "(Landroid/view/View;FFIZFFFFFFFF)V", "")]
public static void SendViewBatchUpdate(View view, float pivotX, float pivotY, int visibility, bool enabled, float opacity, float rotation, float rotationX, float rotationY, float scaleX, float scaleY, float translationX, float translationY);
}
