[CompilerGeneratedAttribute]
[EmbeddedAttribute]
internal class Microsoft.CodeAnalysis.EmbeddedAttribute : Attribute {
}
public class Microsoft.VisualStudio.TestPlatform.Extension.Xunit.Xml.TestLogger.XunitXmlSerializer : object {
    public static string EnvironmentKey;
    public static string XUnitVersionKey;
    private static List`1<string> errorTypes;
    private static Dictionary`2<string, string> errorTypeKeyValuePair;
    [CompilerGeneratedAttribute]
private IInputSanitizer <InputSanitizer>k__BackingField;
    public IInputSanitizer InputSanitizer { get; }
    private static XunitXmlSerializer();
    [CompilerGeneratedAttribute]
public sealed virtual IInputSanitizer get_InputSanitizer();
    public sealed virtual string Serialize(LoggerConfiguration loggerConfiguration, TestRunConfiguration runConfiguration, List`1<TestResultInfo> results, List`1<TestMessageInfo> messages);
    private static XElement CreateAssembliesElement(List`1<TestResultInfo> results, LoggerConfiguration loggerConfiguration, TestRunConfiguration runConfiguration);
    private static XElement CreateAssemblyElement(IGrouping`2<string, TestResultInfo> resultsByAssembly, LoggerConfiguration loggerConfiguration, TestRunConfiguration runConfiguration);
    private static XElement CreateErrorElement(TestResultInfo result);
    private static XElement CreateFailureElement(string exceptionType, string message, string stackTrace);
    private static TestCollection CreateCollection(IGrouping`2<string, TestResultInfo> resultsByType, List`1<TestResultInfo> testResultAsError);
    private static bool IsError(TestResultInfo result);
    private static XElement CreateTestElement(TestResultInfo result);
    private static string OutcomeToString(TestOutcome outcome);
}
[FriendlyNameAttribute("xunit")]
[ExtensionUriAttribute("logger://Microsoft/TestPlatform/XUnitXmlLogger/v1")]
public class Microsoft.VisualStudio.TestPlatform.Extension.Xunit.Xml.TestLogger.XunitXmlTestLogger : TestLogger {
    public static string ExtensionUri;
    public static string FriendlyName;
    protected string DefaultTestResultFile { get; }
    protected virtual string get_DefaultTestResultFile();
}
[AttributeUsageAttribute("749")]
internal class System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute : Attribute {
}
[CompilerGeneratedAttribute]
[EmbeddedAttribute]
[AttributeUsageAttribute("2")]
internal class System.Runtime.CompilerServices.RefSafetyRulesAttribute : Attribute {
    public int Version;
    public RefSafetyRulesAttribute(int );
}
