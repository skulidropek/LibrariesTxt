public class ZXing.Mobile.BarcodeWriter : BarcodeWriter`1<EvasImage> {
    public BarcodeWriter(EvasObject nativeParent);
}
internal class ZXing.Mobile.BitmapRenderer : object {
    private EvasObject nativeParent;
    public BitmapRenderer(EvasObject nativeParent);
    public sealed virtual EvasImage Render(BitMatrix matrix, BarcodeFormat format, string content);
    public sealed virtual EvasImage Render(BitMatrix matrix, BarcodeFormat format, string content, EncodingOptions options);
}
public class ZXing.Mobile.CameraResolution : object {
    [CompilerGeneratedAttribute]
private int <Width>k__BackingField;
    [CompilerGeneratedAttribute]
private int <Height>k__BackingField;
    public int Width { get; public set; }
    public int Height { get; public set; }
    [CompilerGeneratedAttribute]
public int get_Width();
    [CompilerGeneratedAttribute]
public void set_Width(int value);
    [CompilerGeneratedAttribute]
public int get_Height();
    [CompilerGeneratedAttribute]
public void set_Height(int value);
}
public class ZXing.Mobile.CancelScanRequestEventArgs : EventArgs {
    [CompilerGeneratedAttribute]
private bool <Cancel>k__BackingField;
    public bool Cancel { get; public set; }
    [CompilerGeneratedAttribute]
public bool get_Cancel();
    [CompilerGeneratedAttribute]
public void set_Cancel(bool value);
}
public interface ZXing.Mobile.IMobileBarcodeScanner {
    public bool UseCustomOverlay { get; }
    public string TopText { get; public set; }
    public string BottomText { get; public set; }
    public string CancelButtonText { get; public set; }
    public string FlashButtonText { get; public set; }
    public string CameraUnsupportedMessage { get; public set; }
    public bool IsTorchOn { get; }
    public abstract virtual Task`1<Result> Scan(MobileBarcodeScanningOptions options);
    public abstract virtual Task`1<Result> Scan();
    public abstract virtual void ScanContinuously(MobileBarcodeScanningOptions options, Action`1<Result> scanHandler);
    public abstract virtual void ScanContinuously(Action`1<Result> scanHandler);
    public abstract virtual void Cancel();
    public abstract virtual void Torch(bool on);
    public abstract virtual void AutoFocus();
    public abstract virtual void ToggleTorch();
    public abstract virtual void PauseAnalysis();
    public abstract virtual void ResumeAnalysis();
    public abstract virtual bool get_UseCustomOverlay();
    public abstract virtual string get_TopText();
    public abstract virtual void set_TopText(string value);
    public abstract virtual string get_BottomText();
    public abstract virtual void set_BottomText(string value);
    public abstract virtual string get_CancelButtonText();
    public abstract virtual void set_CancelButtonText(string value);
    public abstract virtual string get_FlashButtonText();
    public abstract virtual void set_FlashButtonText(string value);
    public abstract virtual string get_CameraUnsupportedMessage();
    public abstract virtual void set_CameraUnsupportedMessage(string value);
    public abstract virtual bool get_IsTorchOn();
}
public interface ZXing.Mobile.IScannerSessionHost {
    public MobileBarcodeScanningOptions ScanningOptions { get; }
    public abstract virtual MobileBarcodeScanningOptions get_ScanningOptions();
}
public interface ZXing.Mobile.IScannerView {
    public bool IsTorchOn { get; }
    public bool IsAnalyzing { get; }
    public bool HasTorch { get; }
    public abstract virtual void StartScanning(Action`1<Result> scanResultHandler, MobileBarcodeScanningOptions options);
    public abstract virtual void StopScanning();
    public abstract virtual void PauseAnalysis();
    public abstract virtual void ResumeAnalysis();
    public abstract virtual void Torch(bool on);
    public abstract virtual void AutoFocus();
    public abstract virtual void AutoFocus(int x, int y);
    public abstract virtual void ToggleTorch();
    public abstract virtual bool get_IsTorchOn();
    public abstract virtual bool get_IsAnalyzing();
    public abstract virtual bool get_HasTorch();
}
public interface ZXing.Mobile.IZXingScanner`1 {
    public TOverlayViewType CustomOverlayView { get; public set; }
    public bool UseCustomOverlayView { get; public set; }
    public string TopText { get; public set; }
    public string BottomText { get; public set; }
    public abstract virtual TOverlayViewType get_CustomOverlayView();
    public abstract virtual void set_CustomOverlayView(TOverlayViewType value);
    public abstract virtual bool get_UseCustomOverlayView();
    public abstract virtual void set_UseCustomOverlayView(bool value);
    public abstract virtual string get_TopText();
    public abstract virtual void set_TopText(string value);
    public abstract virtual string get_BottomText();
    public abstract virtual void set_BottomText(string value);
}
public class ZXing.Mobile.MobileBarcodeScanner : MobileBarcodeScannerBase {
    private ZxingScannerWindow zxingScannerWindow;
    [CompilerGeneratedAttribute]
private Container <CustomOverlay>k__BackingField;
    [CompilerGeneratedAttribute]
private Window <MainWindow>k__BackingField;
    public bool IsTorchOn { get; }
    public Container CustomOverlay { get; public set; }
    public Window MainWindow { get; internal set; }
    private bool PlatformIsTorchOn { get; }
    public virtual Task`1<Result> Scan(MobileBarcodeScanningOptions options);
    public virtual void ScanContinuously(MobileBarcodeScanningOptions options, Action`1<Result> scanHandler);
    public virtual void Cancel();
    public virtual void AutoFocus();
    public virtual void Torch(bool on);
    public virtual void ToggleTorch();
    public virtual void PauseAnalysis();
    public virtual void ResumeAnalysis();
    public virtual bool get_IsTorchOn();
    [CompilerGeneratedAttribute]
public void set_CustomOverlay(Container value);
    [CompilerGeneratedAttribute]
public Container get_CustomOverlay();
    [CompilerGeneratedAttribute]
public Window get_MainWindow();
    [CompilerGeneratedAttribute]
internal void set_MainWindow(Window value);
    private bool get_PlatformIsTorchOn();
    private void PlatformAutoFocus();
    private void PlatformCancel();
    private void PlatformPauseAnalysis();
    private void PlatformResumeAnalysis();
    private Task`1<Result> PlatformScan(MobileBarcodeScanningOptions options);
    private void PlatformScanContinuously(MobileBarcodeScanningOptions options, Action`1<Result> scanHandler);
    private void PlatformToggleTorch();
    private void PlatformTorch(bool on);
}
public abstract class ZXing.Mobile.MobileBarcodeScannerBase : object {
    [CompilerGeneratedAttribute]
private bool <UseCustomOverlay>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BottomText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CancelButtonText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <FlashButtonText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CameraUnsupportedMessage>k__BackingField;
    public bool UseCustomOverlay { get; public set; }
    public string TopText { get; public set; }
    public string BottomText { get; public set; }
    public string CancelButtonText { get; public set; }
    public string FlashButtonText { get; public set; }
    public string CameraUnsupportedMessage { get; public set; }
    public bool IsTorchOn { get; }
    [CompilerGeneratedAttribute]
public sealed virtual bool get_UseCustomOverlay();
    [CompilerGeneratedAttribute]
public void set_UseCustomOverlay(bool value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_TopText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_TopText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_BottomText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_BottomText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CancelButtonText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CancelButtonText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_FlashButtonText();
    [CompilerGeneratedAttribute]
public sealed virtual void set_FlashButtonText(string value);
    [CompilerGeneratedAttribute]
public sealed virtual string get_CameraUnsupportedMessage();
    [CompilerGeneratedAttribute]
public sealed virtual void set_CameraUnsupportedMessage(string value);
    public abstract virtual Task`1<Result> Scan(MobileBarcodeScanningOptions options);
    public sealed virtual Task`1<Result> Scan();
    public sealed virtual void ScanContinuously(Action`1<Result> scanHandler);
    public abstract virtual void ScanContinuously(MobileBarcodeScanningOptions options, Action`1<Result> scanHandler);
    public abstract virtual void Cancel();
    public abstract virtual void Torch(bool on);
    public abstract virtual void ToggleTorch();
    public abstract virtual bool get_IsTorchOn();
    public abstract virtual void AutoFocus();
    public abstract virtual void PauseAnalysis();
    public abstract virtual void ResumeAnalysis();
}
public class ZXing.Mobile.MobileBarcodeScanningOptions : object {
    [CompilerGeneratedAttribute]
private CameraResolutionSelectorDelegate <CameraResolutionSelector>k__BackingField;
    [CompilerGeneratedAttribute]
private IEnumerable`1<BarcodeFormat> <PossibleFormats>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TryHarder>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <PureBarcode>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AutoRotate>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseCode39ExtendedMode>k__BackingField;
    [CompilerGeneratedAttribute]
private string <CharacterSet>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <TryInverted>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <UseFrontCameraIfAvailable>k__BackingField;
    [CompilerGeneratedAttribute]
private Nullable`1<bool> <AssumeGS1>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <DisableAutofocus>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseNativeScanning>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DelayBetweenContinuousScans>k__BackingField;
    [CompilerGeneratedAttribute]
private int <DelayBetweenAnalyzingFrames>k__BackingField;
    [CompilerGeneratedAttribute]
private int <InitialDelayBeforeAnalyzingFrames>k__BackingField;
    public CameraResolutionSelectorDelegate CameraResolutionSelector { get; public set; }
    public IEnumerable`1<BarcodeFormat> PossibleFormats { get; public set; }
    public Nullable`1<bool> TryHarder { get; public set; }
    public Nullable`1<bool> PureBarcode { get; public set; }
    public Nullable`1<bool> AutoRotate { get; public set; }
    public Nullable`1<bool> UseCode39ExtendedMode { get; public set; }
    public string CharacterSet { get; public set; }
    public Nullable`1<bool> TryInverted { get; public set; }
    public Nullable`1<bool> UseFrontCameraIfAvailable { get; public set; }
    public Nullable`1<bool> AssumeGS1 { get; public set; }
    public bool DisableAutofocus { get; public set; }
    public bool UseNativeScanning { get; public set; }
    public int DelayBetweenContinuousScans { get; public set; }
    public int DelayBetweenAnalyzingFrames { get; public set; }
    public int InitialDelayBeforeAnalyzingFrames { get; public set; }
    public static MobileBarcodeScanningOptions Default { get; }
    [CompilerGeneratedAttribute]
public CameraResolutionSelectorDelegate get_CameraResolutionSelector();
    [CompilerGeneratedAttribute]
public void set_CameraResolutionSelector(CameraResolutionSelectorDelegate value);
    [CompilerGeneratedAttribute]
public IEnumerable`1<BarcodeFormat> get_PossibleFormats();
    [CompilerGeneratedAttribute]
public void set_PossibleFormats(IEnumerable`1<BarcodeFormat> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TryHarder();
    [CompilerGeneratedAttribute]
public void set_TryHarder(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_PureBarcode();
    [CompilerGeneratedAttribute]
public void set_PureBarcode(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AutoRotate();
    [CompilerGeneratedAttribute]
public void set_AutoRotate(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseCode39ExtendedMode();
    [CompilerGeneratedAttribute]
public void set_UseCode39ExtendedMode(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public string get_CharacterSet();
    [CompilerGeneratedAttribute]
public void set_CharacterSet(string value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_TryInverted();
    [CompilerGeneratedAttribute]
public void set_TryInverted(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_UseFrontCameraIfAvailable();
    [CompilerGeneratedAttribute]
public void set_UseFrontCameraIfAvailable(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public Nullable`1<bool> get_AssumeGS1();
    [CompilerGeneratedAttribute]
public void set_AssumeGS1(Nullable`1<bool> value);
    [CompilerGeneratedAttribute]
public bool get_DisableAutofocus();
    [CompilerGeneratedAttribute]
public void set_DisableAutofocus(bool value);
    [CompilerGeneratedAttribute]
public bool get_UseNativeScanning();
    [CompilerGeneratedAttribute]
public void set_UseNativeScanning(bool value);
    [CompilerGeneratedAttribute]
public int get_DelayBetweenContinuousScans();
    [CompilerGeneratedAttribute]
public void set_DelayBetweenContinuousScans(int value);
    [CompilerGeneratedAttribute]
public int get_DelayBetweenAnalyzingFrames();
    [CompilerGeneratedAttribute]
public void set_DelayBetweenAnalyzingFrames(int value);
    [CompilerGeneratedAttribute]
public int get_InitialDelayBeforeAnalyzingFrames();
    [CompilerGeneratedAttribute]
public void set_InitialDelayBeforeAnalyzingFrames(int value);
    public static MobileBarcodeScanningOptions get_Default();
    public BarcodeReaderGeneric BuildBarcodeReader();
    public MultiFormatReader BuildMultiFormatReader();
    public CameraResolution GetResolution(List`1<CameraResolution> availableResolutions);
}
public class ZXing.Mobile.PerformanceCounter : object {
    private static Dictionary`2<string, Stopwatch> counters;
    private static PerformanceCounter();
    public static string Start();
    public static TimeSpan Stop(string guid);
    public static void Stop(string guid, string msg);
}
internal class ZXing.Mobile.TizenBarcodeAnalyzer : object {
    public static Task`1<Result> AnalyzeBarcodeAsync(StillImage image);
    [AsyncStateMachineAttribute("ZXing.Mobile.TizenBarcodeAnalyzer/<AnalyzeBarcodeAsync>d__1")]
public static Task`1<Result> AnalyzeBarcodeAsync(MediaVisionSource source);
}
internal class ZXing.Mobile.ZXingDefaultOverlay : Box {
    private Label topLabel;
    private Label bottomLabel;
    public ZXingDefaultOverlay(EvasObject parent);
    private void InitView();
    public void SetText(string top, string bottom);
}
public class ZXing.Mobile.ZXingMediaView : MediaView {
    private ZXingScannerCamera zxingScannerCamera;
    private EvasObjectEvent showCallback;
    [CompilerGeneratedAttribute]
private bool <IsAnalyzing>k__BackingField;
    internal MobileBarcodeScanningOptions ScanningOptions { get; internal set; }
    public bool IsTorchOn { get; }
    public bool IsAnalyzing { get; private set; }
    public bool HasTorch { get; }
    public ZXingMediaView(EvasObject parent);
    internal MobileBarcodeScanningOptions get_ScanningOptions();
    internal void set_ScanningOptions(MobileBarcodeScanningOptions value);
    public sealed virtual bool get_IsTorchOn();
    [CompilerGeneratedAttribute]
public sealed virtual bool get_IsAnalyzing();
    [CompilerGeneratedAttribute]
private void set_IsAnalyzing(bool value);
    public sealed virtual bool get_HasTorch();
    public sealed virtual void AutoFocus();
    public sealed virtual void AutoFocus(int x, int y);
    public sealed virtual void PauseAnalysis();
    public sealed virtual void ResumeAnalysis();
    public sealed virtual void StartScanning(Action`1<Result> scanResultHandler, MobileBarcodeScanningOptions options);
    public sealed virtual void StopScanning();
    public sealed virtual void ToggleTorch();
    public sealed virtual void Torch(bool on);
    [CompilerGeneratedAttribute]
private void <.ctor>b__2_0(object s, EventArgs e);
}
internal class ZXing.Mobile.ZXingScannerCamera : Camera {
    private Action`1<Result> resultHandler;
    private bool isDisposed;
    private bool torchFlag;
    private CameraFlashMode torchMode;
    [CompilerGeneratedAttribute]
private MobileBarcodeScanningOptions <ScanningOptions>k__BackingField;
    public MobileBarcodeScanningOptions ScanningOptions { get; public set; }
    public bool IsTorchOn { get; public set; }
    public bool HasTorch { get; }
    public ZXingScannerCamera(CameraDevice device, MediaView mediaView);
    [CompilerGeneratedAttribute]
public MobileBarcodeScanningOptions get_ScanningOptions();
    [CompilerGeneratedAttribute]
public void set_ScanningOptions(MobileBarcodeScanningOptions value);
    public bool get_IsTorchOn();
    public void set_IsTorchOn(bool value);
    public bool get_HasTorch();
    private void StateChangeHandler(object sender, CameraStateChangedEventArgs e);
    [AsyncStateMachineAttribute("ZXing.Mobile.ZXingScannerCamera/<CaptureCompleteHandler>d__15")]
private void CaptureCompleteHandler(object sender, EventArgs e);
    [AsyncStateMachineAttribute("ZXing.Mobile.ZXingScannerCamera/<CapturingHandler>d__16")]
private void CapturingHandler(object sender, CameraCapturingEventArgs e);
    private void FocusStateChangedHandler(object sender, CameraFocusStateChangedEventArgs e);
    public void Scan(Action`1<Result> scanResultHandler);
    public void ResumeAnalysis();
    public void PauseAnalysis();
    public void StopScanning();
    public void ToggleTorch();
    public void Torch(bool on);
    public void AutoFocus();
    public void AutoFocus(int x, int y);
}
internal class ZXing.Mobile.ZxingScannerWindow : Window {
    [CompilerGeneratedAttribute]
private Action`1<Result> <ScanCompletedHandler>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <ScanContinuously>k__BackingField;
    [CompilerGeneratedAttribute]
private bool <UseCustomOverlayView>k__BackingField;
    [CompilerGeneratedAttribute]
private Container <CustomOverlayView>k__BackingField;
    [CompilerGeneratedAttribute]
private string <TopText>k__BackingField;
    [CompilerGeneratedAttribute]
private string <BottomText>k__BackingField;
    private ZXingMediaView zxingMediaView;
    private Background overlayBackground;
    public Action`1<Result> ScanCompletedHandler { get; public set; }
    public bool ScanContinuously { get; public set; }
    public MobileBarcodeScanningOptions ScanningOptions { get; public set; }
    public bool IsTorchOn { get; }
    public bool UseCustomOverlayView { get; public set; }
    public Container CustomOverlayView { get; public set; }
    public string TopText { get; internal set; }
    public string BottomText { get; internal set; }
    [CompilerGeneratedAttribute]
public Action`1<Result> get_ScanCompletedHandler();
    [CompilerGeneratedAttribute]
public void set_ScanCompletedHandler(Action`1<Result> value);
    [CompilerGeneratedAttribute]
public bool get_ScanContinuously();
    [CompilerGeneratedAttribute]
public void set_ScanContinuously(bool value);
    public MobileBarcodeScanningOptions get_ScanningOptions();
    public void set_ScanningOptions(MobileBarcodeScanningOptions value);
    public bool get_IsTorchOn();
    [CompilerGeneratedAttribute]
public bool get_UseCustomOverlayView();
    [CompilerGeneratedAttribute]
public void set_UseCustomOverlayView(bool value);
    [CompilerGeneratedAttribute]
public Container get_CustomOverlayView();
    [CompilerGeneratedAttribute]
public void set_CustomOverlayView(Container value);
    [CompilerGeneratedAttribute]
public string get_TopText();
    [CompilerGeneratedAttribute]
internal void set_TopText(string value);
    [CompilerGeneratedAttribute]
public string get_BottomText();
    [CompilerGeneratedAttribute]
internal void set_BottomText(string value);
    private void InitView();
    public void StartScanning();
    public void AutoFocus();
    public void PauseAnalysis();
    public void ResumeAnalysis();
    public void Torch(bool on);
    public void ToggleTorch();
    [CompilerGeneratedAttribute]
private void <.ctor>b__31_0(object s, EventArgs ex);
    [CompilerGeneratedAttribute]
private void <.ctor>b__31_1(object s, EventArgs e);
    [CompilerGeneratedAttribute]
private void <StartScanning>b__33_0(Result result);
}
