public static class ZXing.Net.Mobile.Forms.Android.PermissionsHandler : object {
    [ObsoleteAttribute("Use ZXing.Net.Mobile.Android.PermissionsHandler.OnRequestPermissionsResult instead")]
public static void OnRequestPermissionsResult(int requestCode, String[] permissions, Permission[] grantResults);
}
public static class ZXing.Net.Mobile.Forms.Android.Platform : object {
    public static void Init();
}
[PreserveAttribute]
public class ZXing.Net.Mobile.Forms.Android.ZXingBarcodeImageViewRenderer : ViewRenderer`2<ZXingBarcodeImageView, ImageView> {
    private ZXingBarcodeImageView formsView;
    private ImageView imageView;
    public ZXingBarcodeImageViewRenderer(Context context);
    public static void Init();
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    protected virtual void OnElementChanged(ElementChangedEventArgs`1<ZXingBarcodeImageView> e);
    private void Regenerate();
}
[PreserveAttribute]
public class ZXing.Net.Mobile.Forms.Android.ZXingScannerViewRenderer : ViewRenderer`2<ZXingScannerView, ZXingSurfaceView> {
    protected ZXingScannerView formsView;
    protected ZXingSurfaceView zxingSurface;
    internal Task`1<bool> requestPermissionsTask;
    private Boolean modreq(System.Runtime.CompilerServices.IsVolatile) isHandlingTouch;
    public ZXingScannerViewRenderer(Context context);
    public static void Init();
    [AsyncStateMachineAttribute("ZXing.Net.Mobile.Forms.Android.ZXingScannerViewRenderer/<OnElementChanged>d__5")]
protected virtual void OnElementChanged(ElementChangedEventArgs`1<ZXingScannerView> e);
    protected virtual void OnElementPropertyChanged(object sender, PropertyChangedEventArgs e);
    public virtual bool OnTouchEvent(MotionEvent e);
    [CompilerGeneratedAttribute]
private void <OnElementChanged>b__5_0(int x, int y);
    [CompilerGeneratedAttribute]
[DebuggerHiddenAttribute]
private void <>n__0(ElementChangedEventArgs`1<ZXingScannerView> e);
}
[GeneratedCodeAttribute("Xamarin.Android.Build.Tasks", "1.0.0.0")]
public class ZXing.Net.Mobile.Forms.Resource : object {
    private static Resource();
}
public class ZXing.Net.Mobile.Forms.ZXingBarcodeImageView : Image {
    public static BindableProperty BarcodeFormatProperty;
    public static BindableProperty BarcodeValueProperty;
    public static BindableProperty BarcodeOptionsProperty;
    public BarcodeFormat BarcodeFormat { get; public set; }
    public string BarcodeValue { get; public set; }
    public EncodingOptions BarcodeOptions { get; public set; }
    private static ZXingBarcodeImageView();
    public BarcodeFormat get_BarcodeFormat();
    public void set_BarcodeFormat(BarcodeFormat value);
    public string get_BarcodeValue();
    public void set_BarcodeValue(string value);
    public EncodingOptions get_BarcodeOptions();
    public void set_BarcodeOptions(EncodingOptions value);
}
public class ZXing.Net.Mobile.Forms.ZXingDefaultOverlay : Grid {
    private Label topText;
    private Label botText;
    private Button flash;
    [CompilerGeneratedAttribute]
private FlashButtonClickedDelegate FlashButtonClicked;
    public static BindableProperty TopTextProperty;
    public static BindableProperty BottomTextProperty;
    public static BindableProperty ShowFlashButtonProperty;
    public static BindableProperty FlashCommandProperty;
    public string TopText { get; public set; }
    public string BottomText { get; public set; }
    public bool ShowFlashButton { get; public set; }
    public ICommand FlashCommand { get; public set; }
    private static ZXingDefaultOverlay();
    [CompilerGeneratedAttribute]
public void add_FlashButtonClicked(FlashButtonClickedDelegate value);
    [CompilerGeneratedAttribute]
public void remove_FlashButtonClicked(FlashButtonClickedDelegate value);
    public string get_TopText();
    public void set_TopText(string value);
    public string get_BottomText();
    public void set_BottomText(string value);
    public bool get_ShowFlashButton();
    public void set_ShowFlashButton(bool value);
    public ICommand get_FlashCommand();
    public void set_FlashCommand(ICommand value);
    private static void OnFlashCommandChanged(BindableObject bindable, object oldvalue, object newValue);
    [CompilerGeneratedAttribute]
private void <.ctor>b__7_0(object sender, EventArgs e);
}
public class ZXing.Net.Mobile.Forms.ZXingScannerPage : ContentPage {
    private ZXingScannerView zxing;
    private ZXingDefaultOverlay defaultOverlay;
    public static BindableProperty DefaultOverlayTopTextProperty;
    public static BindableProperty DefaultOverlayBottomTextProperty;
    public static BindableProperty DefaultOverlayShowFlashButtonProperty;
    [CompilerGeneratedAttribute]
private ScanResultDelegate OnScanResult;
    [CompilerGeneratedAttribute]
private View <Overlay>k__BackingField;
    public static BindableProperty IsTorchOnProperty;
    public static BindableProperty IsAnalyzingProperty;
    public static BindableProperty IsScanningProperty;
    public static BindableProperty HasTorchProperty;
    public static BindableProperty ResultProperty;
    public string DefaultOverlayTopText { get; public set; }
    public string DefaultOverlayBottomText { get; public set; }
    public bool DefaultOverlayShowFlashButton { get; public set; }
    public View Overlay { get; private set; }
    public bool IsTorchOn { get; public set; }
    public bool IsAnalyzing { get; public set; }
    public bool IsScanning { get; public set; }
    public bool HasTorch { get; public set; }
    public Result Result { get; public set; }
    public ZXingScannerPage(MobileBarcodeScanningOptions options, View customOverlay);
    private static ZXingScannerPage();
    public string get_DefaultOverlayTopText();
    public void set_DefaultOverlayTopText(string value);
    public string get_DefaultOverlayBottomText();
    public void set_DefaultOverlayBottomText(string value);
    public bool get_DefaultOverlayShowFlashButton();
    public void set_DefaultOverlayShowFlashButton(bool value);
    [CompilerGeneratedAttribute]
public void add_OnScanResult(ScanResultDelegate value);
    [CompilerGeneratedAttribute]
public void remove_OnScanResult(ScanResultDelegate value);
    [CompilerGeneratedAttribute]
public View get_Overlay();
    [CompilerGeneratedAttribute]
private void set_Overlay(View value);
    public void ToggleTorch();
    protected virtual void OnAppearing();
    protected virtual void OnDisappearing();
    public void PauseAnalysis();
    public void ResumeAnalysis();
    public void AutoFocus();
    public void AutoFocus(int x, int y);
    public bool get_IsTorchOn();
    public void set_IsTorchOn(bool value);
    public bool get_IsAnalyzing();
    public void set_IsAnalyzing(bool value);
    public bool get_IsScanning();
    public void set_IsScanning(bool value);
    public bool get_HasTorch();
    public void set_HasTorch(bool value);
    public Result get_Result();
    public void set_Result(Result value);
    [CompilerGeneratedAttribute]
private void <.ctor>b__2_0(Result result);
    [CompilerGeneratedAttribute]
private void <.ctor>b__2_1(Button sender, EventArgs e);
}
public class ZXing.Net.Mobile.Forms.ZXingScannerView : View {
    [CompilerGeneratedAttribute]
private ScanResultDelegate OnScanResult;
    [CompilerGeneratedAttribute]
private Action`2<int, int> AutoFocusRequested;
    public static BindableProperty OptionsProperty;
    public static BindableProperty IsScanningProperty;
    public static BindableProperty IsTorchOnProperty;
    public static BindableProperty HasTorchProperty;
    public static BindableProperty IsAnalyzingProperty;
    public static BindableProperty ResultProperty;
    public static BindableProperty ScanResultCommandProperty;
    public MobileBarcodeScanningOptions Options { get; public set; }
    public bool IsScanning { get; public set; }
    public bool IsTorchOn { get; public set; }
    public bool HasTorch { get; }
    public bool IsAnalyzing { get; public set; }
    public Result Result { get; public set; }
    public ICommand ScanResultCommand { get; public set; }
    private static ZXingScannerView();
    [CompilerGeneratedAttribute]
public void add_OnScanResult(ScanResultDelegate value);
    [CompilerGeneratedAttribute]
public void remove_OnScanResult(ScanResultDelegate value);
    [CompilerGeneratedAttribute]
public void add_AutoFocusRequested(Action`2<int, int> value);
    [CompilerGeneratedAttribute]
public void remove_AutoFocusRequested(Action`2<int, int> value);
    public void RaiseScanResult(Result result);
    public void ToggleTorch();
    public void AutoFocus();
    public void AutoFocus(int x, int y);
    public MobileBarcodeScanningOptions get_Options();
    public void set_Options(MobileBarcodeScanningOptions value);
    public bool get_IsScanning();
    public void set_IsScanning(bool value);
    public bool get_IsTorchOn();
    public void set_IsTorchOn(bool value);
    public bool get_HasTorch();
    public bool get_IsAnalyzing();
    public void set_IsAnalyzing(bool value);
    public Result get_Result();
    public void set_Result(Result value);
    public ICommand get_ScanResultCommand();
    public void set_ScanResultCommand(ICommand value);
}
